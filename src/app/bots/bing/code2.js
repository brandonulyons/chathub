/*! For license information please see cib.bundle.js.LICENSE.txt */
(()=>{
	var e = {
			7659: ()=>{}
			,
			5114: function(e, t) {
					"use strict";
					var n, i = this && this.__extends || (n = function(e, t) {
							return n = Object.setPrototypeOf || {
									__proto__: []
							}instanceof Array && function(e, t) {
									e.__proto__ = t
							}
							|| function(e, t) {
									for (var n in t)
											Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
							}
							,
							n(e, t)
					}
					,
					function(e, t) {
							if ("function" != typeof t && null !== t)
									throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
							function __() {
									this.constructor = e
							}
							n(e, t),
							e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
							new __)
					}
					);
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.LoginRequestResponse = t.ErrorResponse = t.SuccessResponse = t.ActivityResponse = t.ActivityRequestError = t.ActivityRequestTrigger = void 0,
					function(e) {
							e.Automatic = "automatic",
							e.Manual = "manual"
					}(t.ActivityRequestTrigger || (t.ActivityRequestTrigger = {}));
					var ActivityRequestError = function(e, t) {
							this.code = e,
							this.message = t
					};
					t.ActivityRequestError = ActivityRequestError;
					var ActivityResponse = function(e) {
							this.request = e
					};
					t.ActivityResponse = ActivityResponse;
					var r = function(e) {
							function SuccessResponse(t, n) {
									var i = e.call(this, t) || this;
									return i.request = t,
									i.rawContent = n,
									i
							}
							return i(SuccessResponse, e),
							SuccessResponse
					}(ActivityResponse);
					t.SuccessResponse = r;
					var o = function(e) {
							function ErrorResponse(t, n) {
									var i = e.call(this, t) || this;
									return i.request = t,
									i.error = n,
									i
							}
							return i(ErrorResponse, e),
							ErrorResponse
					}(ActivityResponse);
					t.ErrorResponse = o;
					var s = function(e) {
							function LoginRequestResponse(t, n) {
									var i = e.call(this, t) || this;
									i.request = t,
									i._auth = n;
									for (var r = 0, o = i._auth.buttons; r < o.length; r++) {
											var s = o[r];
											if ("signin" === s.type && void 0 !== s.value)
													try {
															new URL(s.value),
															i.signinButton = s;
															break
													} catch (e) {}
									}
									return i
							}
							return i(LoginRequestResponse, e),
							Object.defineProperty(LoginRequestResponse.prototype, "tokenExchangeResource", {
									get: function() {
											return this._auth.tokenExchangeResource
									},
									enumerable: !1,
									configurable: !0
							}),
							LoginRequestResponse
					}(ActivityResponse);
					t.LoginRequestResponse = s
			},
			3125: function(e, t, n) {
					"use strict";
					var i = this && this.__awaiter || function(e, t, n, i) {
							return new (n || (n = Promise))((function(r, o) {
									function fulfilled(e) {
											try {
													step(i.next(e))
											} catch (e) {
													o(e)
											}
									}
									function rejected(e) {
											try {
													step(i.throw(e))
											} catch (e) {
													o(e)
											}
									}
									function step(e) {
											var t;
											e.done ? r(e.value) : (t = e.value,
											t instanceof n ? t : new n((function(e) {
													e(t)
											}
											))).then(fulfilled, rejected)
									}
									step((i = i.apply(e, t || [])).next())
							}
							))
					}
						, r = this && this.__generator || function(e, t) {
							var n, i, r, o, s = {
									label: 0,
									sent: function() {
											if (1 & r[0])
													throw r[1];
											return r[1]
									},
									trys: [],
									ops: []
							};
							return o = {
									next: verb(0),
									throw: verb(1),
									return: verb(2)
							},
							"function" == typeof Symbol && (o[Symbol.iterator] = function() {
									return this
							}
							),
							o;
							function verb(o) {
									return function(a) {
											return function(o) {
													if (n)
															throw new TypeError("Generator is already executing.");
													for (; s; )
															try {
																	if (n = 1,
																	i && (r = 2 & o[0] ? i.return : o[0] ? i.throw || ((r = i.return) && r.call(i),
																	0) : i.next) && !(r = r.call(i, o[1])).done)
																			return r;
																	switch (i = 0,
																	r && (o = [2 & o[0], r.value]),
																	o[0]) {
																	case 0:
																	case 1:
																			r = o;
																			break;
																	case 4:
																			return s.label++,
																			{
																					value: o[1],
																					done: !1
																			};
																	case 5:
																			s.label++,
																			i = o[1],
																			o = [0];
																			continue;
																	case 7:
																			o = s.ops.pop(),
																			s.trys.pop();
																			continue;
																	default:
																			if (!(r = s.trys,
																			(r = r.length > 0 && r[r.length - 1]) || 6 !== o[0] && 2 !== o[0])) {
																					s = 0;
																					continue
																			}
																			if (3 === o[0] && (!r || o[1] > r[0] && o[1] < r[3])) {
																					s.label = o[1];
																					break
																			}
																			if (6 === o[0] && s.label < r[1]) {
																					s.label = r[1],
																					r = o;
																					break
																			}
																			if (r && s.label < r[2]) {
																					s.label = r[2],
																					s.ops.push(o);
																					break
																			}
																			r[2] && s.ops.pop(),
																			s.trys.pop();
																			continue
																	}
																	o = t.call(e, s)
															} catch (e) {
																	o = [6, e],
																	i = 0
															} finally {
																	n = r = 0
															}
													if (5 & o[0])
															throw o[1];
													return {
															value: o[0] ? o[1] : void 0,
															done: !0
													}
											}([o, a])
									}
							}
					}
					;
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.AdaptiveApplet = void 0;
					var o = n(9003)
						, s = n(7794)
						, a = n(8418)
						, l = n(5114)
						, c = n(6758)
						, d = n(7191)
						, p = n(2421);
					function logEvent(e, t) {
							for (var n = [], i = 2; i < arguments.length; i++)
									n[i - 2] = arguments[i];
							if (a.GlobalSettings.applets.logEnabled)
									if (a.GlobalSettings.applets.onLogEvent)
											a.GlobalSettings.applets.onLogEvent(e, t, n);
									else
											switch (e) {
											case o.LogLevel.Warning:
													console.warn(t, n);
													break;
											case o.LogLevel.Error:
													console.error(t, n);
													break;
											default:
													console.log(t, n)
											}
					}
					var u = function() {
							function ActivityRequest(e, t, n) {
									this.action = e,
									this.trigger = t,
									this.consecutiveRefreshes = n,
									this.attemptNumber = 0
							}
							return ActivityRequest.prototype.retryAsync = function() {
									return i(this, void 0, void 0, (function() {
											return r(this, (function(e) {
													return this.onSend && this.onSend(this),
													[2]
											}
											))
									}
									))
							}
							,
							ActivityRequest
					}()
						, h = function() {
							function AdaptiveApplet() {
									this._allowAutomaticCardUpdate = !1,
									this.renderedElement = document.createElement("div"),
									this.renderedElement.className = "aaf-cardHost",
									this.renderedElement.style.position = "relative",
									this.renderedElement.style.display = "flex",
									this.renderedElement.style.flexDirection = "column",
									this._cardHostElement = document.createElement("div"),
									this._refreshButtonHostElement = document.createElement("div"),
									this._refreshButtonHostElement.className = "aaf-refreshButtonHost",
									this._refreshButtonHostElement.style.display = "none",
									this.renderedElement.appendChild(this._cardHostElement),
									this.renderedElement.appendChild(this._refreshButtonHostElement)
							}
							return AdaptiveApplet.prototype.displayCard = function(e) {
									if (!e.renderedElement)
											throw new Error("displayCard: undefined card.");
									s.clearElementChildren(this._cardHostElement),
									this._refreshButtonHostElement.style.display = "none",
									this._cardHostElement.appendChild(e.renderedElement)
							}
							,
							AdaptiveApplet.prototype.showManualRefreshButton = function(e) {
									var t = this;
									if (!this.onShowManualRefreshButton || this.onShowManualRefreshButton(this)) {
											this._refreshButtonHostElement.style.display = "none";
											var n = void 0;
											if (this.onRenderManualRefreshButton)
													n = this.onRenderManualRefreshButton(this);
											else {
													var i = c.Strings.runtime.refreshThisCard();
													if (a.GlobalSettings.applets.refresh.mode === o.RefreshMode.Automatic) {
															var r = c.Strings.runtime.automaticRefreshPaused();
															" " !== r[r.length - 1] && (r += " "),
															i = c.Strings.runtime.clckToRestartAutomaticRefresh()
													}
													var u = {
															type: "AdaptiveCard",
															version: "1.2",
															body: [{
																	type: "RichTextBlock",
																	horizontalAlignment: "right",
																	inlines: [{
																			type: "TextRun",
																			text: i,
																			selectAction: {
																					type: "Action.Submit",
																					id: "refreshCard"
																			}
																	}]
															}]
													}
														, h = new d.AdaptiveCard;
													h.parse(u, new d.SerializationContext(p.Versions.v1_2)),
													h.onExecuteAction = function(n) {
															"refreshCard" === n.id && (s.clearElementChildren(t._refreshButtonHostElement),
															t.internalExecuteAction(e, l.ActivityRequestTrigger.Automatic, 0))
													}
													,
													n = h.render()
											}
											n && (s.clearElementChildren(this._refreshButtonHostElement),
											this._refreshButtonHostElement.appendChild(n),
											this._refreshButtonHostElement.style.removeProperty("display"))
									}
							}
							,
							AdaptiveApplet.prototype.createActivityRequest = function(e, t, n) {
									var i = this;
									if (this.card) {
											var r = new u(e,t,n);
											return r.onSend = function(e) {
													e.attemptNumber++,
													i.internalSendActivityRequestAsync(r)
											}
											,
											!!this.onPrepareActivityRequest && !this.onPrepareActivityRequest(this, r, e) ? void 0 : r
									}
									throw new Error("createActivityRequest: no card has been set.")
							}
							,
							AdaptiveApplet.prototype.createMagicCodeInputCard = function(e) {
									var t = {
											type: "AdaptiveCard",
											version: "1.0",
											body: [{
													type: "TextBlock",
													color: "attention",
													text: 1 === e ? void 0 : "That didn't work... let's try again.",
													wrap: !0,
													horizontalAlignment: "center"
											}, {
													type: "TextBlock",
													text: 'Please login in the popup. You will obtain a magic code. Paste that code below and select "Submit"',
													wrap: !0,
													horizontalAlignment: "center"
											}, {
													type: "Input.Text",
													id: "magicCode",
													placeholder: "Enter magic code"
											}, {
													type: "ActionSet",
													horizontalAlignment: "center",
													actions: [{
															type: "Action.Submit",
															id: AdaptiveApplet._submitMagicCodeActionId,
															title: "Submit"
													}, {
															type: "Action.Submit",
															id: AdaptiveApplet._cancelMagicCodeAuthActionId,
															title: "Cancel"
													}]
											}]
									}
										, n = new d.AdaptiveCard;
									return n.parse(t),
									n
							}
							,
							AdaptiveApplet.prototype.cancelAutomaticRefresh = function() {
									this._allowAutomaticCardUpdate && logEvent(o.LogLevel.Warning, "Automatic card refresh has been cancelled as a result of the user interacting with the card."),
									this._allowAutomaticCardUpdate = !1
							}
							,
							AdaptiveApplet.prototype.createSerializationContext = function() {
									return this.onCreateSerializationContext ? this.onCreateSerializationContext(this) : new d.SerializationContext
							}
							,
							AdaptiveApplet.prototype.internalSetCard = function(e, t) {
									var n = this;
									if ("object" == typeof e && "AdaptiveCard" === e.type && (this._cardPayload = e),
									this._cardPayload)
											try {
													var i = new d.AdaptiveCard;
													this.hostConfig && (i.hostConfig = this.hostConfig);
													var r = this.createSerializationContext();
													if (i.parse(this._cardPayload, r),
													(!this.onCardChanging || this.onCardChanging(this, this._cardPayload)) && (this._card = i,
													this._card.authentication && this._card.authentication.tokenExchangeResource && this.onPrefetchSSOToken && this.onPrefetchSSOToken(this, this._card.authentication.tokenExchangeResource),
													this._card.onExecuteAction = function(e) {
															n.cancelAutomaticRefresh(),
															n.internalExecuteAction(e, l.ActivityRequestTrigger.Manual, 0)
													}
													,
													this._card.onInputValueChanged = function(e) {
															n.cancelAutomaticRefresh()
													}
													,
													this._card.render(),
													this._card.renderedElement && (this.displayCard(this._card),
													this.onCardChanged && this.onCardChanged(this),
													this._card.refresh)))
															if (a.GlobalSettings.applets.refresh.mode === o.RefreshMode.Automatic && t < a.GlobalSettings.applets.refresh.maximumConsecutiveAutomaticRefreshes)
																	if (a.GlobalSettings.applets.refresh.timeBetweenAutomaticRefreshes <= 0)
																			logEvent(o.LogLevel.Info, "Triggering automatic card refresh number " + (t + 1)),
																			this.internalExecuteAction(this._card.refresh.action, l.ActivityRequestTrigger.Automatic, t + 1);
																	else {
																			logEvent(o.LogLevel.Info, "Scheduling automatic card refresh number " + (t + 1) + " in " + a.GlobalSettings.applets.refresh.timeBetweenAutomaticRefreshes + "ms");
																			var s = this._card.refresh.action;
																			this._allowAutomaticCardUpdate = !0,
																			window.setTimeout((function() {
																					n._allowAutomaticCardUpdate && n.internalExecuteAction(s, l.ActivityRequestTrigger.Automatic, t + 1)
																			}
																			), a.GlobalSettings.applets.refresh.timeBetweenAutomaticRefreshes)
																	}
															else
																	a.GlobalSettings.applets.refresh.mode !== o.RefreshMode.Disabled && (logEvent(o.LogLevel.Warning, t > 0 ? "Stopping automatic refreshes after " + t + " consecutive refreshes." : "The card has a refresh section, but automatic refreshes are disabled."),
																	(a.GlobalSettings.applets.refresh.allowManualRefreshesAfterAutomaticRefreshes || a.GlobalSettings.applets.refresh.mode === o.RefreshMode.Manual) && (logEvent(o.LogLevel.Info, "Showing manual refresh button."),
																	this.showManualRefreshButton(this._card.refresh.action)))
											} catch (e) {
													logEvent(o.LogLevel.Error, "setCard: " + e)
											}
							}
							,
							AdaptiveApplet.prototype.internalExecuteAction = function(e, t, n) {
									if (e instanceof d.ExecuteAction) {
											if (!this.channelAdapter)
													throw new Error("internalExecuteAction: No channel adapter set.");
											var i = this.createActivityRequest(e, t, n);
											i && i.retryAsync()
									}
									this.onAction && this.onAction(this, e)
							}
							,
							AdaptiveApplet.prototype.createProgressOverlay = function(e) {
									if (!this._progressOverlay)
											if (this.onCreateProgressOverlay)
													this._progressOverlay = this.onCreateProgressOverlay(this, e);
											else {
													this._progressOverlay = document.createElement("div"),
													this._progressOverlay.className = "aaf-progress-overlay";
													var t = document.createElement("div");
													t.className = "aaf-spinner",
													t.style.width = "28px",
													t.style.height = "28px",
													this._progressOverlay.appendChild(t)
											}
									return this._progressOverlay
							}
							,
							AdaptiveApplet.prototype.removeProgressOverlay = function(e) {
									this.onRemoveProgressOverlay && this.onRemoveProgressOverlay(this, e),
									void 0 !== this._progressOverlay && (this.renderedElement.removeChild(this._progressOverlay),
									this._progressOverlay = void 0)
							}
							,
							AdaptiveApplet.prototype.activityRequestSucceeded = function(e, t) {
									this.onActivityRequestSucceeded && this.onActivityRequestSucceeded(this, e, t)
							}
							,
							AdaptiveApplet.prototype.activityRequestFailed = function(e) {
									return this.onActivityRequestFailed ? this.onActivityRequestFailed(this, e) : a.GlobalSettings.applets.defaultTimeBetweenRetryAttempts
							}
							,
							AdaptiveApplet.prototype.showAuthCodeInputDialog = function(e) {
									var t = this;
									if (!this.onShowAuthCodeInputDialog || this.onShowAuthCodeInputDialog(this, e)) {
											var n = this.createMagicCodeInputCard(e.attemptNumber);
											n.render(),
											n.onExecuteAction = function(n) {
													if (t.card && n instanceof d.SubmitAction)
															switch (n.id) {
															case AdaptiveApplet._submitMagicCodeActionId:
																	var i = void 0;
																	n.data && "string" == typeof n.data.magicCode && (i = n.data.magicCode),
																	i ? (t.displayCard(t.card),
																	e.authCode = i,
																	e.retryAsync()) : alert("Please enter the magic code you received.");
																	break;
															case AdaptiveApplet._cancelMagicCodeAuthActionId:
																	logEvent(o.LogLevel.Warning, "Authentication cancelled by user."),
																	t.displayCard(t.card);
																	break;
															default:
																	logEvent(o.LogLevel.Error, "Unexpected action taken from magic code input card (id = " + n.id + ")"),
																	alert(c.Strings.magicCodeInputCard.somethingWentWrong())
															}
											}
											,
											this.displayCard(n)
									}
							}
							,
							AdaptiveApplet.prototype.internalSendActivityRequestAsync = function(e) {
									return i(this, void 0, void 0, (function() {
											var t, n, i, s;
											return r(this, (function(d) {
													switch (d.label) {
													case 0:
															if (!this.channelAdapter)
																	throw new Error("internalSendActivityRequestAsync: channelAdapter is not set.");
															void 0 !== (t = this.createProgressOverlay(e)) && this.renderedElement.appendChild(t),
															n = !1,
															i = function() {
																	var t, i, d, p, u, h, m;
																	return r(this, (function(r) {
																			switch (r.label) {
																			case 0:
																					t = void 0,
																					1 === e.attemptNumber ? logEvent(o.LogLevel.Info, "Sending activity request to channel (attempt " + e.attemptNumber + ")") : logEvent(o.LogLevel.Info, "Re-sending activity request to channel (attempt " + e.attemptNumber + ")"),
																					r.label = 1;
																			case 1:
																					return r.trys.push([1, 3, , 4]),
																					[4, s.channelAdapter.sendRequestAsync(e)];
																			case 2:
																					return t = r.sent(),
																					[3, 4];
																			case 3:
																					return i = r.sent(),
																					logEvent(o.LogLevel.Error, "Activity request failed: " + i),
																					s.removeProgressOverlay(e),
																					n = !0,
																					[3, 4];
																			case 4:
																					if (!t)
																							return [3, 10];
																					if (!(t instanceof l.SuccessResponse))
																							return [3, 5];
																					if (s.removeProgressOverlay(e),
																					void 0 === t.rawContent)
																							throw new Error("internalSendActivityRequestAsync: Action.Execute result is undefined");
																					d = t.rawContent;
																					try {
																							d = JSON.parse(t.rawContent)
																					} catch (e) {}
																					if ("string" == typeof d)
																							logEvent(o.LogLevel.Info, "The activity request returned a string after " + e.attemptNumber + " attempt(s)."),
																							s.activityRequestSucceeded(t, d);
																					else {
																							if ("object" != typeof d || "AdaptiveCard" !== d.type)
																									throw new Error("internalSendActivityRequestAsync: Action.Execute result is of unsupported type (" + typeof t.rawContent + ")");
																							logEvent(o.LogLevel.Info, "The activity request returned an Adaptive Card after " + e.attemptNumber + " attempt(s)."),
																							s.internalSetCard(d, e.consecutiveRefreshes),
																							s.activityRequestSucceeded(t, s.card)
																					}
																					return n = !0,
																					[3, 10];
																			case 5:
																					return t instanceof l.ErrorResponse ? (p = s.activityRequestFailed(t)) >= 0 && e.attemptNumber < a.GlobalSettings.applets.maximumRetryAttempts ? (logEvent(o.LogLevel.Warning, "Activity request failed: ".concat(t.error.message, ". Retrying in ").concat(p, "ms")),
																					e.attemptNumber++,
																					[4, new Promise((function(e, t) {
																							window.setTimeout((function() {
																									e()
																							}
																							), p)
																					}
																					))]) : [3, 7] : [3, 9];
																			case 6:
																					return r.sent(),
																					[3, 8];
																			case 7:
																					logEvent(o.LogLevel.Error, "Activity request failed: ".concat(t.error.message, ". Giving up after ").concat(e.attemptNumber, " attempt(s)")),
																					s.removeProgressOverlay(e),
																					n = !0,
																					r.label = 8;
																			case 8:
																					return [3, 10];
																			case 9:
																					if (t instanceof l.LoginRequestResponse) {
																							if (logEvent(o.LogLevel.Info, "The activity request returned a LoginRequestResponse after " + e.attemptNumber + " attempt(s)."),
																							e.attemptNumber <= a.GlobalSettings.applets.maximumRetryAttempts) {
																									if (u = !0,
																									t.tokenExchangeResource && s.onSSOTokenNeeded && (u = !s.onSSOTokenNeeded(s, e, t.tokenExchangeResource)),
																									u) {
																											if (s.removeProgressOverlay(e),
																											void 0 === t.signinButton)
																													throw new Error("internalSendActivityRequestAsync: the login request doesn't contain a valid signin URL.");
																											logEvent(o.LogLevel.Info, "Login required at " + t.signinButton.value),
																											s.onShowSigninPrompt ? s.onShowSigninPrompt(s, e, t.signinButton) : (s.showAuthCodeInputDialog(e),
																											h = window.screenX + (window.outerWidth - a.GlobalSettings.applets.authPromptWidth) / 2,
																											m = window.screenY + (window.outerHeight - a.GlobalSettings.applets.authPromptHeight) / 2,
																											window.open(t.signinButton.value, t.signinButton.title ? t.signinButton.title : "Sign in", "width=".concat(a.GlobalSettings.applets.authPromptWidth, ",height=").concat(a.GlobalSettings.applets.authPromptHeight, ",left=").concat(h, ",top=").concat(m)))
																									}
																							} else
																									logEvent(o.LogLevel.Error, "Authentication failed. Giving up after " + e.attemptNumber + " attempt(s)"),
																									alert(c.Strings.magicCodeInputCard.authenticationFailed());
																							return [2, "break"]
																					}
																					throw new Error("Unhandled response type: " + JSON.stringify(t));
																			case 10:
																					return [2]
																			}
																	}
																	))
															}
															,
															s = this,
															d.label = 1;
													case 1:
															return n ? [3, 3] : [5, i()];
													case 2:
															return "break" === d.sent() ? [3, 3] : [3, 1];
													case 3:
															return [2]
													}
											}
											))
									}
									))
							}
							,
							AdaptiveApplet.prototype.refreshCard = function() {
									this._card && this._card.refresh && this.internalExecuteAction(this._card.refresh.action, l.ActivityRequestTrigger.Manual, 0)
							}
							,
							AdaptiveApplet.prototype.setCard = function(e) {
									this.internalSetCard(e, 0)
							}
							,
							Object.defineProperty(AdaptiveApplet.prototype, "card", {
									get: function() {
											return this._card
									},
									enumerable: !1,
									configurable: !0
							}),
							AdaptiveApplet._submitMagicCodeActionId = "submitMagicCode",
							AdaptiveApplet._cancelMagicCodeAuthActionId = "cancelMagicCodeAuth",
							AdaptiveApplet
					}();
					t.AdaptiveApplet = h
			},
			8911: function(e, t, n) {
					"use strict";
					var i = this && this.__createBinding || (Object.create ? function(e, t, n, i) {
							void 0 === i && (i = n);
							var r = Object.getOwnPropertyDescriptor(t, n);
							r && !("get"in r ? !t.__esModule : r.writable || r.configurable) || (r = {
									enumerable: !0,
									get: function() {
											return t[n]
									}
							}),
							Object.defineProperty(e, i, r)
					}
					: function(e, t, n, i) {
							void 0 === i && (i = n),
							e[i] = t[n]
					}
					)
						, r = this && this.__exportStar || function(e, t) {
							for (var n in e)
									"default" === n || Object.prototype.hasOwnProperty.call(t, n) || i(t, e, n)
					}
					;
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					r(n(6758), t),
					r(n(9003), t),
					r(n(8418), t),
					r(n(7794), t),
					r(n(2421), t),
					r(n(9779), t),
					r(n(351), t),
					r(n(9301), t),
					r(n(182), t),
					r(n(7191), t),
					r(n(7516), t),
					r(n(6629), t),
					r(n(160), t),
					r(n(5114), t),
					r(n(3125), t)
			},
			7191: function(e, t, n) {
					"use strict";
					var i, r = this && this.__extends || (i = function(e, t) {
							return i = Object.setPrototypeOf || {
									__proto__: []
							}instanceof Array && function(e, t) {
									e.__proto__ = t
							}
							|| function(e, t) {
									for (var n in t)
											Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
							}
							,
							i(e, t)
					}
					,
					function(e, t) {
							if ("function" != typeof t && null !== t)
									throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
							function __() {
									this.constructor = e
							}
							i(e, t),
							e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
							new __)
					}
					), o = this && this.__decorate || function(e, t, n, i) {
							var r, o = arguments.length, s = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
							if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
									s = Reflect.decorate(e, t, n, i);
							else
									for (var a = e.length - 1; a >= 0; a--)
											(r = e[a]) && (s = (o < 3 ? r(s) : o > 3 ? r(t, n, s) : r(t, n)) || s);
							return o > 3 && s && Object.defineProperty(t, n, s),
							s
					}
					, s = this && this.__awaiter || function(e, t, n, i) {
							return new (n || (n = Promise))((function(r, o) {
									function fulfilled(e) {
											try {
													step(i.next(e))
											} catch (e) {
													o(e)
											}
									}
									function rejected(e) {
											try {
													step(i.throw(e))
											} catch (e) {
													o(e)
											}
									}
									function step(e) {
											var t;
											e.done ? r(e.value) : (t = e.value,
											t instanceof n ? t : new n((function(e) {
													e(t)
											}
											))).then(fulfilled, rejected)
									}
									step((i = i.apply(e, t || [])).next())
							}
							))
					}
					, a = this && this.__generator || function(e, t) {
							var n, i, r, o, s = {
									label: 0,
									sent: function() {
											if (1 & r[0])
													throw r[1];
											return r[1]
									},
									trys: [],
									ops: []
							};
							return o = {
									next: verb(0),
									throw: verb(1),
									return: verb(2)
							},
							"function" == typeof Symbol && (o[Symbol.iterator] = function() {
									return this
							}
							),
							o;
							function verb(o) {
									return function(a) {
											return function(o) {
													if (n)
															throw new TypeError("Generator is already executing.");
													for (; s; )
															try {
																	if (n = 1,
																	i && (r = 2 & o[0] ? i.return : o[0] ? i.throw || ((r = i.return) && r.call(i),
																	0) : i.next) && !(r = r.call(i, o[1])).done)
																			return r;
																	switch (i = 0,
																	r && (o = [2 & o[0], r.value]),
																	o[0]) {
																	case 0:
																	case 1:
																			r = o;
																			break;
																	case 4:
																			return s.label++,
																			{
																					value: o[1],
																					done: !1
																			};
																	case 5:
																			s.label++,
																			i = o[1],
																			o = [0];
																			continue;
																	case 7:
																			o = s.ops.pop(),
																			s.trys.pop();
																			continue;
																	default:
																			if (!(r = s.trys,
																			(r = r.length > 0 && r[r.length - 1]) || 6 !== o[0] && 2 !== o[0])) {
																					s = 0;
																					continue
																			}
																			if (3 === o[0] && (!r || o[1] > r[0] && o[1] < r[3])) {
																					s.label = o[1];
																					break
																			}
																			if (6 === o[0] && s.label < r[1]) {
																					s.label = r[1],
																					r = o;
																					break
																			}
																			if (r && s.label < r[2]) {
																					s.label = r[2],
																					s.ops.push(o);
																					break
																			}
																			r[2] && s.ops.pop(),
																			s.trys.pop();
																			continue
																	}
																	o = t.call(e, s)
															} catch (e) {
																	o = [6, e],
																	i = 0
															} finally {
																	n = r = 0
															}
													if (5 & o[0])
															throw o[1];
													return {
															value: o[0] ? o[1] : void 0,
															done: !0
													}
											}([o, a])
									}
							}
					}
					;
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.ContainerWithActions = t.ColumnSet = t.Column = t.Container = t.BackgroundImage = t.ContainerBase = t.StylableCardElementContainer = t.ContainerStyleProperty = t.ActionSet = t.ShowCardAction = t.HttpAction = t.HttpHeader = t.ToggleVisibilityAction = t.OpenUrlAction = t.ExecuteAction = t.SubmitAction = t.SubmitActionBase = t.Action = t.TimeInput = t.TimeProperty = t.DateInput = t.NumberInput = t.ChoiceSetInput = t.Choice = t.ToggleInput = t.TextInput = t.Input = t.Media = t.YouTubePlayer = t.DailymotionPlayer = t.VimeoPlayer = t.IFrameMediaMediaPlayer = t.CustomMediaPlayer = t.HTML5MediaPlayer = t.MediaPlayer = t.MediaSource = t.CaptionSource = t.ContentSource = t.ImageSet = t.CardElementContainer = t.Image = t.FactSet = t.Fact = t.RichTextBlock = t.TextRun = t.TextBlock = t.BaseTextBlock = t.ActionProperty = t.CardElement = t.renderSeparation = void 0,
					t.SerializationContext = t.AdaptiveCard = t.Authentication = t.TokenExchangeResource = t.AuthCardButton = t.RefreshDefinition = t.RefreshActionProperty = void 0;
					var l = n(9003)
						, c = n(8418)
						, d = n(7794)
						, p = n(351)
						, u = n(9514)
						, h = n(182)
						, m = n(2421)
						, g = n(9301)
						, _ = n(6758)
						, f = n(9336);
					function clearElement(e) {
							var t, n, i = "undefined" == typeof window ? "" : null !== (n = null === (t = window.trustedTypes) || void 0 === t ? void 0 : t.emptyHTML) && void 0 !== n ? n : "";
							e.innerHTML = i
					}
					function renderSeparation(e, t, n) {
							if (t.spacing > 0 || t.lineThickness && t.lineThickness > 0) {
									var i = document.createElement("div");
									i.className = e.makeCssClassName("ac-" + (n === l.Orientation.Horizontal ? "horizontal" : "vertical") + "-separator"),
									i.setAttribute("aria-hidden", "true");
									var r = t.lineColor ? d.stringToCssColor(t.lineColor) : "";
									return n === l.Orientation.Horizontal ? t.lineThickness ? (i.style.paddingTop = t.spacing / 2 + "px",
									i.style.marginBottom = t.spacing / 2 + "px",
									i.style.borderBottom = t.lineThickness + "px solid " + r) : i.style.height = t.spacing + "px" : t.lineThickness ? (i.style.paddingLeft = t.spacing / 2 + "px",
									i.style.marginRight = t.spacing / 2 + "px",
									i.style.borderRight = t.lineThickness + "px solid " + r) : i.style.width = t.spacing + "px",
									i.style.overflow = "hidden",
									i.style.flex = "0 0 auto",
									i
							}
					}
					t.renderSeparation = renderSeparation;
					var y = function(e) {
							function CardElement() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t._truncatedDueToOverflow = !1,
									t
							}
							return r(CardElement, e),
							Object.defineProperty(CardElement.prototype, "lang", {
									get: function() {
											var e = this.getValue(CardElement.langProperty);
											return e || (this.parent ? this.parent.lang : void 0)
									},
									set: function(e) {
											this.setValue(CardElement.langProperty, e)
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(CardElement.prototype, "isVisible", {
									get: function() {
											return this.getValue(CardElement.isVisibleProperty)
									},
									set: function(e) {
											c.GlobalSettings.useAdvancedCardBottomTruncation && !e && this.undoOverflowTruncation(),
											this.isVisible !== e && (this.setValue(CardElement.isVisibleProperty, e),
											this.updateRenderedElementVisibility(),
											this._renderedElement && raiseElementVisibilityChangedEvent(this)),
											this._renderedElement && this._renderedElement.setAttribute("aria-expanded", e.toString())
									},
									enumerable: !1,
									configurable: !0
							}),
							CardElement.prototype.internalRenderSeparator = function() {
									var e = renderSeparation(this.hostConfig, {
											spacing: this.hostConfig.getEffectiveSpacing(this.spacing),
											lineThickness: this.separator ? this.hostConfig.separator.lineThickness : void 0,
											lineColor: this.separator ? this.hostConfig.separator.lineColor : void 0
									}, this.separatorOrientation);
									if (c.GlobalSettings.alwaysBleedSeparators && e && this.separatorOrientation === l.Orientation.Horizontal) {
											var t = this.getParentContainer();
											if (t && t.getEffectivePadding()) {
													var n = this.hostConfig.paddingDefinitionToSpacingDefinition(t.getEffectivePadding());
													e.style.marginLeft = "-" + n.left + "px",
													e.style.marginRight = "-" + n.right + "px"
											}
									}
									return e
							}
							,
							CardElement.prototype.updateRenderedElementVisibility = function() {
									var e = this.isDesignMode() || this.isVisible ? this._defaultRenderedElementDisplayMode : "none";
									this._renderedElement && (e ? this._renderedElement.style.display = e : this._renderedElement.style.removeProperty("display")),
									this._separatorElement && (this.parent && this.parent.isFirstElement(this) ? this._separatorElement.style.display = "none" : e ? this._separatorElement.style.display = e : this._separatorElement.style.removeProperty("display"))
							}
							,
							CardElement.prototype.hideElementDueToOverflow = function() {
									this._renderedElement && this.isVisible && (this._renderedElement.style.visibility = "hidden",
									this.isVisible = !1,
									raiseElementVisibilityChangedEvent(this, !1))
							}
							,
							CardElement.prototype.showElementHiddenDueToOverflow = function() {
									this._renderedElement && !this.isVisible && (this._renderedElement.style.removeProperty("visibility"),
									this.isVisible = !0,
									raiseElementVisibilityChangedEvent(this, !1))
							}
							,
							CardElement.prototype.handleOverflow = function(e) {
									if (this.isVisible || this.isHiddenDueToOverflow()) {
											var t = this.truncateOverflow(e);
											this._truncatedDueToOverflow = t || this._truncatedDueToOverflow,
											t ? t && !this.isVisible && this.showElementHiddenDueToOverflow() : this.hideElementDueToOverflow()
									}
							}
							,
							CardElement.prototype.resetOverflow = function() {
									var e = !1;
									return this._truncatedDueToOverflow && (this.undoOverflowTruncation(),
									this._truncatedDueToOverflow = !1,
									e = !0),
									this.isHiddenDueToOverflow() && this.showElementHiddenDueToOverflow(),
									e
							}
							,
							CardElement.prototype.getDefaultSerializationContext = function() {
									return new Ie
							}
							,
							CardElement.prototype.createPlaceholderElement = function() {
									var e = this.getEffectiveStyleDefinition()
										, t = d.stringToCssColor(e.foregroundColors.default.subtle)
										, n = document.createElement("div");
									return n.style.border = "1px dashed " + t,
									n.style.padding = "4px",
									n.style.minHeight = "32px",
									n.style.fontSize = "10px",
									t && (n.style.color = t),
									n.innerText = "Empty " + this.getJsonTypeName(),
									n
							}
							,
							CardElement.prototype.adjustRenderedElementSize = function(e) {
									"auto" === this.height ? e.style.flex = "0 0 auto" : e.style.flex = "1 1 auto"
							}
							,
							CardElement.prototype.isDisplayed = function() {
									return void 0 !== this._renderedElement && this.isVisible && this._renderedElement.offsetHeight > 0
							}
							,
							CardElement.prototype.overrideInternalRender = function() {
									return this.internalRender()
							}
							,
							CardElement.prototype.applyPadding = function() {
									if (this.separatorElement && this.separatorOrientation === l.Orientation.Horizontal)
											if (c.GlobalSettings.alwaysBleedSeparators && !this.isBleeding()) {
													var e = new c.PaddingDefinition;
													this.getImmediateSurroundingPadding(e);
													var t = this.hostConfig.paddingDefinitionToSpacingDefinition(e);
													this.separatorElement.style.marginLeft = "-" + t.left + "px",
													this.separatorElement.style.marginRight = "-" + t.right + "px"
											} else
													this.separatorElement.style.marginRight = "0",
													this.separatorElement.style.marginLeft = "0"
							}
							,
							CardElement.prototype.truncateOverflow = function(e) {
									return !1
							}
							,
							CardElement.prototype.undoOverflowTruncation = function() {}
							,
							CardElement.prototype.getDefaultPadding = function() {
									return new c.PaddingDefinition
							}
							,
							CardElement.prototype.getHasBackground = function(e) {
									return void 0 === e && (e = !1),
									!1
							}
							,
							CardElement.prototype.getHasBorder = function() {
									return !1
							}
							,
							CardElement.prototype.getPadding = function() {
									return this._padding
							}
							,
							CardElement.prototype.setPadding = function(e) {
									this._padding = e
							}
							,
							CardElement.prototype.shouldSerialize = function(e) {
									return void 0 !== e.elementRegistry.findByName(this.getJsonTypeName())
							}
							,
							Object.defineProperty(CardElement.prototype, "useDefaultSizing", {
									get: function() {
											return !0
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(CardElement.prototype, "separatorOrientation", {
									get: function() {
											return l.Orientation.Horizontal
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(CardElement.prototype, "defaultStyle", {
									get: function() {
											return l.ContainerStyle.Default
									},
									enumerable: !1,
									configurable: !0
							}),
							CardElement.prototype.parse = function(t, n) {
									e.prototype.parse.call(this, t, n || new Ie)
							}
							,
							CardElement.prototype.asString = function() {
									return ""
							}
							,
							CardElement.prototype.isBleeding = function() {
									return !1
							}
							,
							CardElement.prototype.getEffectiveStyle = function() {
									return this.parent ? this.parent.getEffectiveStyle() : this.defaultStyle
							}
							,
							CardElement.prototype.getEffectiveStyleDefinition = function() {
									return this.hostConfig.containerStyles.getStyleByName(this.getEffectiveStyle())
							}
							,
							CardElement.prototype.getEffectiveTextStyleDefinition = function() {
									return this.parent ? this.parent.getEffectiveTextStyleDefinition() : this.hostConfig.textStyles.default
							}
							,
							CardElement.prototype.getForbiddenActionTypes = function() {
									return []
							}
							,
							CardElement.prototype.getImmediateSurroundingPadding = function(e, t, n, i, r) {
									if (void 0 === t && (t = !0),
									void 0 === n && (n = !0),
									void 0 === i && (i = !0),
									void 0 === r && (r = !0),
									this.parent) {
											var o = t && this.parent.isTopElement(this)
												, s = n && this.parent.isRightMostElement(this)
												, a = i && this.parent.isBottomElement(this)
												, c = r && this.parent.isLeftMostElement(this)
												, d = this.parent.getEffectivePadding();
											d && (o && d.top !== l.Spacing.None && (e.top = d.top,
											o = !1),
											s && d.right !== l.Spacing.None && (e.right = d.right,
											s = !1),
											a && d.bottom !== l.Spacing.None && (e.bottom = d.bottom,
											a = !1),
											c && d.left !== l.Spacing.None && (e.left = d.left,
											c = !1)),
											(o || s || a || c) && this.parent.getImmediateSurroundingPadding(e, o, s, a, c)
									}
							}
							,
							CardElement.prototype.getActionCount = function() {
									return 0
							}
							,
							CardElement.prototype.getActionAt = function(e) {
									throw new Error(_.Strings.errors.indexOutOfRange(e))
							}
							,
							CardElement.prototype.indexOfAction = function(e) {
									for (var t = 0; t < this.getActionCount(); t++)
											if (this.getActionAt(t) === e)
													return t;
									return -1
							}
							,
							CardElement.prototype.remove = function() {
									return !!(this.parent && this.parent instanceof R) && this.parent.removeItem(this)
							}
							,
							CardElement.prototype.render = function() {
									return this._renderedElement = this.overrideInternalRender(),
									this._separatorElement = this.internalRenderSeparator(),
									this._renderedElement ? (this.id && (this._renderedElement.id = this.id),
									this.customCssSelector && this._renderedElement.classList.add(this.customCssSelector),
									this._renderedElement.style.boxSizing = "border-box",
									this._defaultRenderedElementDisplayMode = this._renderedElement.style.display ? this._renderedElement.style.display : void 0,
									this.adjustRenderedElementSize(this._renderedElement),
									this.updateLayout(!1)) : this.isDesignMode() && (this._renderedElement = this.createPlaceholderElement()),
									this.getRootElement().updateActionsEnabledState(),
									this._renderedElement
							}
							,
							CardElement.prototype.updateLayout = function(e) {
									void 0 === e && (e = !0),
									this.updateRenderedElementVisibility(),
									this.applyPadding()
							}
							,
							CardElement.prototype.updateActionsEnabledState = function() {
									for (var e = 0, t = this.getRootElement().getAllActions(); e < t.length; e++) {
											t[e].updateEnabledState()
									}
							}
							,
							CardElement.prototype.indexOf = function(e) {
									return -1
							}
							,
							CardElement.prototype.isDesignMode = function() {
									var e = this.getRootElement();
									return e instanceof Ee && e.designMode
							}
							,
							CardElement.prototype.isFirstElement = function(e) {
									return !0
							}
							,
							CardElement.prototype.isLastElement = function(e) {
									return !0
							}
							,
							CardElement.prototype.isAtTheVeryLeft = function() {
									return !this.parent || this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft()
							}
							,
							CardElement.prototype.isAtTheVeryRight = function() {
									return !this.parent || this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight()
							}
							,
							CardElement.prototype.isAtTheVeryTop = function() {
									return !this.parent || this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop()
							}
							,
							CardElement.prototype.isAtTheVeryBottom = function() {
									return !this.parent || this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom()
							}
							,
							CardElement.prototype.isBleedingAtTop = function() {
									return !1
							}
							,
							CardElement.prototype.isBleedingAtBottom = function() {
									return !1
							}
							,
							CardElement.prototype.isLeftMostElement = function(e) {
									return !0
							}
							,
							CardElement.prototype.isRightMostElement = function(e) {
									return !0
							}
							,
							CardElement.prototype.isTopElement = function(e) {
									return this.isFirstElement(e)
							}
							,
							CardElement.prototype.isBottomElement = function(e) {
									return this.isLastElement(e)
							}
							,
							CardElement.prototype.isHiddenDueToOverflow = function() {
									return void 0 !== this._renderedElement && "hidden" === this._renderedElement.style.visibility
							}
							,
							CardElement.prototype.getRootElement = function() {
									return this.getRootObject()
							}
							,
							CardElement.prototype.getParentContainer = function() {
									for (var e = this.parent; e; ) {
											if (e instanceof me)
													return e;
											e = e.parent
									}
							}
							,
							CardElement.prototype.getAllInputs = function(e) {
									return void 0 === e && (e = !0),
									[]
							}
							,
							CardElement.prototype.getAllActions = function() {
									for (var e = [], t = 0; t < this.getActionCount(); t++) {
											var n = this.getActionAt(t);
											n && e.push(n)
									}
									return e
							}
							,
							CardElement.prototype.getResourceInformation = function() {
									return []
							}
							,
							CardElement.prototype.getElementById = function(e) {
									return this.id === e ? this : void 0
							}
							,
							CardElement.prototype.getActionById = function(e) {}
							,
							CardElement.prototype.getEffectivePadding = function() {
									var e = this.getPadding();
									return e || this.getDefaultPadding()
							}
							,
							CardElement.prototype.getEffectiveHorizontalAlignment = function() {
									return void 0 !== this.horizontalAlignment ? this.horizontalAlignment : this.parent ? this.parent.getEffectiveHorizontalAlignment() : l.HorizontalAlignment.Left
							}
							,
							Object.defineProperty(CardElement.prototype, "hostConfig", {
									get: function() {
											return this._hostConfig ? this._hostConfig : this.parent ? this.parent.hostConfig : p.defaultHostConfig
									},
									set: function(e) {
											this._hostConfig = e
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(CardElement.prototype, "index", {
									get: function() {
											return this.parent ? this.parent.indexOf(this) : 0
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(CardElement.prototype, "isInteractive", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(CardElement.prototype, "isStandalone", {
									get: function() {
											return !0
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(CardElement.prototype, "isInline", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(CardElement.prototype, "hasVisibleSeparator", {
									get: function() {
											return !(!this.parent || !this.separatorElement) && (!this.parent.isFirstElement(this) && (this.isVisible || this.isDesignMode()))
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(CardElement.prototype, "separatorElement", {
									get: function() {
											return this._separatorElement
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(CardElement.prototype, "parent", {
									get: function() {
											return this._parent
									},
									enumerable: !1,
									configurable: !0
							}),
							CardElement.langProperty = new m.StringProperty(m.Versions.v1_1,"lang",!0,/^[a-z]{2,3}$/gi),
							CardElement.isVisibleProperty = new m.BoolProperty(m.Versions.v1_2,"isVisible",!0),
							CardElement.separatorProperty = new m.BoolProperty(m.Versions.v1_0,"separator",!1),
							CardElement.heightProperty = new m.ValueSetProperty(m.Versions.v1_1,"height",[{
									value: "auto"
							}, {
									value: "stretch"
							}],"auto"),
							CardElement.horizontalAlignmentProperty = new m.EnumProperty(m.Versions.v1_0,"horizontalAlignment",l.HorizontalAlignment),
							CardElement.spacingProperty = new m.EnumProperty(m.Versions.v1_0,"spacing",l.Spacing,l.Spacing.Default),
							o([(0,
							m.property)(CardElement.horizontalAlignmentProperty)], CardElement.prototype, "horizontalAlignment", void 0),
							o([(0,
							m.property)(CardElement.spacingProperty)], CardElement.prototype, "spacing", void 0),
							o([(0,
							m.property)(CardElement.separatorProperty)], CardElement.prototype, "separator", void 0),
							o([(0,
							m.property)(CardElement.heightProperty)], CardElement.prototype, "height", void 0),
							o([(0,
							m.property)(CardElement.langProperty)], CardElement.prototype, "lang", null),
							o([(0,
							m.property)(CardElement.isVisibleProperty)], CardElement.prototype, "isVisible", null),
							CardElement
					}(h.CardObject);
					t.CardElement = y;
					var v = function(e) {
							function ActionProperty(t, n, i) {
									void 0 === i && (i = []);
									var r = e.call(this, t, n, void 0) || this;
									return r.targetVersion = t,
									r.name = n,
									r.forbiddenActionTypes = i,
									r
							}
							return r(ActionProperty, e),
							ActionProperty.prototype.parse = function(e, t, n) {
									var i = e;
									return n.parseAction(i, t[this.name], this.forbiddenActionTypes, i.isDesignMode())
							}
							,
							ActionProperty.prototype.toJSON = function(e, t, n, i) {
									i.serializeValue(t, this.name, n ? n.toJSON(i) : void 0, void 0, !0)
							}
							,
							ActionProperty
					}(m.PropertyDefinition);
					t.ActionProperty = v;
					var b = function(e) {
							function BaseTextBlock(t) {
									var n = e.call(this) || this;
									return n.ariaHidden = !1,
									t && (n.text = t),
									n
							}
							return r(BaseTextBlock, e),
							BaseTextBlock.prototype.populateSchema = function(t) {
									e.prototype.populateSchema.call(this, t),
									t.remove(BaseTextBlock.selectActionProperty)
							}
							,
							Object.defineProperty(BaseTextBlock.prototype, "text", {
									get: function() {
											return this.getValue(BaseTextBlock.textProperty)
									},
									set: function(e) {
											this.setText(e)
									},
									enumerable: !1,
									configurable: !0
							}),
							BaseTextBlock.prototype.getFontSize = function(e) {
									switch (this.effectiveSize) {
									case l.TextSize.Small:
											return e.fontSizes.small;
									case l.TextSize.Medium:
											return e.fontSizes.medium;
									case l.TextSize.Large:
											return e.fontSizes.large;
									case l.TextSize.ExtraLarge:
											return e.fontSizes.extraLarge;
									default:
											return e.fontSizes.default
									}
							}
							,
							BaseTextBlock.prototype.getColorDefinition = function(e, t) {
									switch (t) {
									case l.TextColor.Accent:
											return e.accent;
									case l.TextColor.Dark:
											return e.dark;
									case l.TextColor.Light:
											return e.light;
									case l.TextColor.Good:
											return e.good;
									case l.TextColor.Warning:
											return e.warning;
									case l.TextColor.Attention:
											return e.attention;
									default:
											return e.default
									}
							}
							,
							BaseTextBlock.prototype.setText = function(e) {
									this.setValue(BaseTextBlock.textProperty, e)
							}
							,
							BaseTextBlock.prototype.init = function(e) {
									this.size = e.size,
									this.weight = e.weight,
									this.color = e.color,
									this.isSubtle = e.isSubtle
							}
							,
							BaseTextBlock.prototype.asString = function() {
									return this.text
							}
							,
							BaseTextBlock.prototype.applyStylesTo = function(e) {
									var t, n = this.hostConfig.getFontTypeDefinition(this.effectiveFontType);
									switch (n.fontFamily && (e.style.fontFamily = n.fontFamily),
									this.effectiveSize) {
									case l.TextSize.Small:
											t = n.fontSizes.small;
											break;
									case l.TextSize.Medium:
											t = n.fontSizes.medium;
											break;
									case l.TextSize.Large:
											t = n.fontSizes.large;
											break;
									case l.TextSize.ExtraLarge:
											t = n.fontSizes.extraLarge;
											break;
									default:
											t = n.fontSizes.default
									}
									e.style.fontSize = t + "px";
									var i, r = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor), o = d.stringToCssColor(this.effectiveIsSubtle ? r.subtle : r.default);
									switch (o && (e.style.color = o),
									this.effectiveWeight) {
									case l.TextWeight.Lighter:
											i = n.fontWeights.lighter;
											break;
									case l.TextWeight.Bolder:
											i = n.fontWeights.bolder;
											break;
									default:
											i = n.fontWeights.default
									}
									e.style.fontWeight = i.toString(),
									this.ariaHidden && e.setAttribute("aria-hidden", "true")
							}
							,
							BaseTextBlock.prototype.getAllActions = function() {
									var t = e.prototype.getAllActions.call(this);
									return this.selectAction && t.push(this.selectAction),
									t
							}
							,
							Object.defineProperty(BaseTextBlock.prototype, "effectiveColor", {
									get: function() {
											return void 0 !== this.color ? this.color : this.getEffectiveTextStyleDefinition().color
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(BaseTextBlock.prototype, "effectiveFontType", {
									get: function() {
											return void 0 !== this.fontType ? this.fontType : this.getEffectiveTextStyleDefinition().fontType
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(BaseTextBlock.prototype, "effectiveIsSubtle", {
									get: function() {
											return void 0 !== this.isSubtle ? this.isSubtle : this.getEffectiveTextStyleDefinition().isSubtle
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(BaseTextBlock.prototype, "effectiveSize", {
									get: function() {
											return void 0 !== this.size ? this.size : this.getEffectiveTextStyleDefinition().size
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(BaseTextBlock.prototype, "effectiveWeight", {
									get: function() {
											return void 0 !== this.weight ? this.weight : this.getEffectiveTextStyleDefinition().weight
									},
									enumerable: !1,
									configurable: !0
							}),
							BaseTextBlock.textProperty = new m.StringProperty(m.Versions.v1_0,"text",!0),
							BaseTextBlock.sizeProperty = new m.EnumProperty(m.Versions.v1_0,"size",l.TextSize),
							BaseTextBlock.weightProperty = new m.EnumProperty(m.Versions.v1_0,"weight",l.TextWeight),
							BaseTextBlock.colorProperty = new m.EnumProperty(m.Versions.v1_0,"color",l.TextColor),
							BaseTextBlock.isSubtleProperty = new m.BoolProperty(m.Versions.v1_0,"isSubtle"),
							BaseTextBlock.fontTypeProperty = new m.EnumProperty(m.Versions.v1_2,"fontType",l.FontType),
							BaseTextBlock.selectActionProperty = new v(m.Versions.v1_1,"selectAction",["Action.ShowCard"]),
							o([(0,
							m.property)(BaseTextBlock.sizeProperty)], BaseTextBlock.prototype, "size", void 0),
							o([(0,
							m.property)(BaseTextBlock.weightProperty)], BaseTextBlock.prototype, "weight", void 0),
							o([(0,
							m.property)(BaseTextBlock.colorProperty)], BaseTextBlock.prototype, "color", void 0),
							o([(0,
							m.property)(BaseTextBlock.fontTypeProperty)], BaseTextBlock.prototype, "fontType", void 0),
							o([(0,
							m.property)(BaseTextBlock.isSubtleProperty)], BaseTextBlock.prototype, "isSubtle", void 0),
							o([(0,
							m.property)(BaseTextBlock.textProperty)], BaseTextBlock.prototype, "text", null),
							o([(0,
							m.property)(BaseTextBlock.selectActionProperty)], BaseTextBlock.prototype, "selectAction", void 0),
							BaseTextBlock
					}(y);
					t.BaseTextBlock = b;
					var S = function(e) {
							function TextBlock() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.wrap = !1,
									t._treatAsPlainText = !0,
									t.useMarkdown = !0,
									t
							}
							var t, n;
							return r(TextBlock, e),
							TextBlock.prototype.restoreOriginalContent = function() {
									var e, t;
									if (void 0 !== this.renderedElement) {
											this.maxLines && this.maxLines > 0 && (this.renderedElement.style.maxHeight = this._computedLineHeight * this.maxLines + "px");
											var n = null !== (t = null === (e = TextBlock._ttRoundtripPolicy) || void 0 === e ? void 0 : e.createHTML(this._originalInnerHtml)) && void 0 !== t ? t : this._originalInnerHtml;
											this.renderedElement.innerHTML = n
									}
							}
							,
							TextBlock.prototype.truncateIfSupported = function(e) {
									if (void 0 !== this.renderedElement) {
											var t = this.renderedElement.children
												, n = !t.length;
											if (n || 1 === t.length && "p" === t[0].tagName.toLowerCase() && !t[0].children.length) {
													var i = n ? this.renderedElement : t[0];
													return d.truncateText(i, e, this._computedLineHeight),
													!0
											}
									}
									return !1
							}
							,
							TextBlock.prototype.setText = function(t) {
									e.prototype.setText.call(this, t),
									this._processedText = void 0
							}
							,
							TextBlock.prototype.internalRender = function() {
									var e, t, n = this;
									if (this._processedText = void 0,
									this.text) {
											var i = this.preProcessPropertyValue(b.textProperty)
												, r = this.hostConfig
												, o = void 0;
											if (this.forElementId) {
													var s = document.createElement("label");
													s.htmlFor = this.forElementId,
													o = s
											} else
													o = document.createElement("div");
											if (o.classList.add(r.makeCssClassName("ac-textBlock")),
											o.style.overflow = "hidden",
											this.applyStylesTo(o),
											"heading" === this.style) {
													o.setAttribute("role", "heading");
													var a = this.hostConfig.textBlock.headingLevel;
													void 0 !== a && a > 0 && o.setAttribute("aria-level", a.toString())
											}
											if (this.selectAction && r.supportsInteractivity && (o.onclick = function(e) {
													n.selectAction && n.selectAction.isEffectivelyEnabled() && (e.preventDefault(),
													e.cancelBubble = !0,
													n.selectAction.execute())
											}
											,
											this.selectAction.setupElementForAccessibility(o),
											this.selectAction.isEffectivelyEnabled() && o.classList.add(r.makeCssClassName("ac-selectable"))),
											!this._processedText) {
													this._treatAsPlainText = !0;
													var l = u.formatText(this.lang, i);
													if (this.useMarkdown && l) {
															c.GlobalSettings.allowMarkForTextHighlighting && (l = l.replace(/<mark>/g, "===").replace(/<\/mark>/g, "/==/"));
															var p = Ee.applyMarkdown(l);
															if (p.didProcess && p.outputHtml) {
																	if (this._processedText = p.outputHtml,
																	this._treatAsPlainText = !1,
																	c.GlobalSettings.allowMarkForTextHighlighting && this._processedText) {
																			var h = ""
																				, m = this.getEffectiveStyleDefinition();
																			m.highlightBackgroundColor && (h += "background-color: " + m.highlightBackgroundColor + ";"),
																			m.highlightForegroundColor && (h += "color: " + m.highlightForegroundColor + ";"),
																			h && (h = 'style="' + h + '"'),
																			this._processedText = this._processedText.replace(/===/g, "<mark " + h + ">").replace(/\/==\//g, "</mark>")
																	}
															} else
																	this._processedText = l,
																	this._treatAsPlainText = !0
													} else
															this._processedText = l,
															this._treatAsPlainText = !0
											}
											if (this._processedText || (this._processedText = ""),
											this._treatAsPlainText)
													o.innerText = this._processedText;
											else {
													var g = null !== (t = null === (e = TextBlock._ttMarkdownPolicy) || void 0 === e ? void 0 : e.createHTML(this._processedText)) && void 0 !== t ? t : this._processedText;
													o.innerHTML = g
											}
											if (o.firstElementChild instanceof HTMLElement) {
													var _ = o.firstElementChild;
													_.style.marginTop = "0px",
													_.style.width = "100%",
													this.wrap || (_.style.overflow = "hidden",
													_.style.textOverflow = "ellipsis")
											}
											o.lastElementChild instanceof HTMLElement && (o.lastElementChild.style.marginBottom = "0px");
											for (var f = o.getElementsByTagName("a"), _loop_1 = function(e) {
													e.classList.add(r.makeCssClassName("ac-anchor")),
													e.target = "_blank",
													e.onclick = function(t) {
															raiseAnchorClickedEvent(n, e, t) && (t.preventDefault(),
															t.cancelBubble = !0)
													}
													,
													e.oncontextmenu = function(t) {
															return !raiseAnchorClickedEvent(n, e, t) || (t.preventDefault(),
															t.cancelBubble = !0,
															!1)
													}
											}, y = 0, v = Array.from(f); y < v.length; y++) {
													_loop_1(v[y])
											}
											return this.wrap ? (o.style.wordWrap = "break-word",
											this.maxLines && this.maxLines > 0 && (o.style.overflow = "hidden",
											d.isInternetExplorer() || !c.GlobalSettings.useWebkitLineClamp ? o.style.maxHeight = this._computedLineHeight * this.maxLines + "px" : (o.style.removeProperty("line-height"),
											o.style.display = "-webkit-box",
											o.style.webkitBoxOrient = "vertical",
											o.style.webkitLineClamp = this.maxLines.toString()))) : (o.style.whiteSpace = "nowrap",
											o.style.textOverflow = "ellipsis"),
											(c.GlobalSettings.useAdvancedTextBlockTruncation || c.GlobalSettings.useAdvancedCardBottomTruncation) && (this._originalInnerHtml = o.innerHTML),
											o
									}
							}
							,
							TextBlock.prototype.truncateOverflow = function(e) {
									return e >= this._computedLineHeight && this.truncateIfSupported(e)
							}
							,
							TextBlock.prototype.undoOverflowTruncation = function() {
									if (this.restoreOriginalContent(),
									c.GlobalSettings.useAdvancedTextBlockTruncation && this.maxLines) {
											var e = this._computedLineHeight * this.maxLines;
											this.truncateIfSupported(e)
									}
							}
							,
							TextBlock.prototype.applyStylesTo = function(t) {
									switch (e.prototype.applyStylesTo.call(this, t),
									this.getEffectiveHorizontalAlignment()) {
									case l.HorizontalAlignment.Center:
											t.style.textAlign = "center";
											break;
									case l.HorizontalAlignment.Right:
											t.style.textAlign = "end";
											break;
									default:
											t.style.textAlign = "start"
									}
									var n = this.hostConfig.lineHeights;
									if (n)
											switch (this.effectiveSize) {
											case l.TextSize.Small:
													this._computedLineHeight = n.small;
													break;
											case l.TextSize.Medium:
													this._computedLineHeight = n.medium;
													break;
											case l.TextSize.Large:
													this._computedLineHeight = n.large;
													break;
											case l.TextSize.ExtraLarge:
													this._computedLineHeight = n.extraLarge;
													break;
											default:
													this._computedLineHeight = n.default
											}
									else
											this._computedLineHeight = 1.33 * this.getFontSize(this.hostConfig.getFontTypeDefinition(this.effectiveFontType));
									t.style.lineHeight = this._computedLineHeight + "px"
							}
							,
							TextBlock.prototype.getJsonTypeName = function() {
									return "TextBlock"
							}
							,
							TextBlock.prototype.getEffectiveTextStyleDefinition = function() {
									return this.style ? this.hostConfig.textStyles.getStyleByName(this.style) : e.prototype.getEffectiveTextStyleDefinition.call(this)
							}
							,
							TextBlock.prototype.updateLayout = function(t) {
									void 0 === t && (t = !1),
									e.prototype.updateLayout.call(this, t),
									c.GlobalSettings.useAdvancedTextBlockTruncation && this.maxLines && this.isDisplayed() && (this.restoreOriginalContent(),
									this.truncateIfSupported(this._computedLineHeight * this.maxLines))
							}
							,
							TextBlock.wrapProperty = new m.BoolProperty(m.Versions.v1_0,"wrap",!1),
							TextBlock.maxLinesProperty = new m.NumProperty(m.Versions.v1_0,"maxLines"),
							TextBlock.styleProperty = new m.ValueSetProperty(m.Versions.v1_5,"style",[{
									value: "default"
							}, {
									value: "columnHeader"
							}, {
									value: "heading"
							}]),
							TextBlock._ttMarkdownPolicy = "undefined" == typeof window || null === (t = window.trustedTypes) || void 0 === t ? void 0 : t.createPolicy("adaptivecards#markdownPassthroughPolicy", {
									createHTML: function(e) {
											return e
									}
							}),
							TextBlock._ttRoundtripPolicy = "undefined" == typeof window || null === (n = window.trustedTypes) || void 0 === n ? void 0 : n.createPolicy("adaptivecards#restoreContentsPolicy", {
									createHTML: function(e) {
											return e
									}
							}),
							o([(0,
							m.property)(TextBlock.wrapProperty)], TextBlock.prototype, "wrap", void 0),
							o([(0,
							m.property)(TextBlock.maxLinesProperty)], TextBlock.prototype, "maxLines", void 0),
							o([(0,
							m.property)(TextBlock.styleProperty)], TextBlock.prototype, "style", void 0),
							TextBlock
					}(b);
					t.TextBlock = S;
					var C = function(e) {
							function TextRun() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.italic = !1,
									t.strikethrough = !1,
									t.highlight = !1,
									t.underline = !1,
									t
							}
							return r(TextRun, e),
							TextRun.prototype.populateSchema = function(t) {
									e.prototype.populateSchema.call(this, t),
									t.add(b.selectActionProperty)
							}
							,
							TextRun.prototype.internalRender = function() {
									var e = this;
									if (this.text) {
											var t = this.preProcessPropertyValue(b.textProperty)
												, n = this.hostConfig
												, i = u.formatText(this.lang, t);
											i || (i = "");
											var r = document.createElement("span");
											if (r.classList.add(n.makeCssClassName("ac-textRun")),
											this.applyStylesTo(r),
											this.selectAction && n.supportsInteractivity) {
													var o = document.createElement("a");
													o.classList.add(n.makeCssClassName("ac-anchor"));
													var s = this.selectAction.getHref();
													o.href = s || "",
													o.target = "_blank",
													o.onclick = function(t) {
															e.selectAction && e.selectAction.isEffectivelyEnabled() && (t.preventDefault(),
															t.cancelBubble = !0,
															e.selectAction.execute())
													}
													,
													this.selectAction.setupElementForAccessibility(o),
													o.innerText = i,
													r.appendChild(o)
											} else
													r.innerText = i;
											return r
									}
							}
							,
							TextRun.prototype.applyStylesTo = function(t) {
									if (e.prototype.applyStylesTo.call(this, t),
									this.italic && (t.style.fontStyle = "italic"),
									this.strikethrough && (t.style.textDecoration = "line-through"),
									this.highlight) {
											var n = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor)
												, i = d.stringToCssColor(this.effectiveIsSubtle ? n.highlightColors.subtle : n.highlightColors.default);
											i && (t.style.backgroundColor = i)
									}
									this.underline && (t.style.textDecoration = "underline")
							}
							,
							TextRun.prototype.getJsonTypeName = function() {
									return "TextRun"
							}
							,
							Object.defineProperty(TextRun.prototype, "isStandalone", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(TextRun.prototype, "isInline", {
									get: function() {
											return !0
									},
									enumerable: !1,
									configurable: !0
							}),
							TextRun.italicProperty = new m.BoolProperty(m.Versions.v1_2,"italic",!1),
							TextRun.strikethroughProperty = new m.BoolProperty(m.Versions.v1_2,"strikethrough",!1),
							TextRun.highlightProperty = new m.BoolProperty(m.Versions.v1_2,"highlight",!1),
							TextRun.underlineProperty = new m.BoolProperty(m.Versions.v1_3,"underline",!1),
							o([(0,
							m.property)(TextRun.italicProperty)], TextRun.prototype, "italic", void 0),
							o([(0,
							m.property)(TextRun.strikethroughProperty)], TextRun.prototype, "strikethrough", void 0),
							o([(0,
							m.property)(TextRun.highlightProperty)], TextRun.prototype, "highlight", void 0),
							o([(0,
							m.property)(TextRun.underlineProperty)], TextRun.prototype, "underline", void 0),
							TextRun
					}(b);
					t.TextRun = C;
					var E = function(e) {
							function RichTextBlock() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t._inlines = [],
									t
							}
							return r(RichTextBlock, e),
							RichTextBlock.prototype.internalAddInline = function(e, t) {
									if (void 0 === t && (t = !1),
									!e.isInline)
											throw new Error(_.Strings.errors.elementCannotBeUsedAsInline());
									if (!(void 0 === e.parent || t) && e.parent !== this)
											throw new Error(_.Strings.errors.inlineAlreadyParented());
									e.setParent(this),
									this._inlines.push(e)
							}
							,
							RichTextBlock.prototype.internalParse = function(t, n) {
									if (e.prototype.internalParse.call(this, t, n),
									this._inlines = [],
									Array.isArray(t.inlines))
											for (var i = 0, r = t.inlines; i < r.length; i++) {
													var o = r[i]
														, s = void 0;
													if ("string" == typeof o) {
															var a = new C;
															a.text = o,
															s = a
													} else
															s = n.parseElement(this, o, [], !1);
													s && this.internalAddInline(s, !0)
											}
							}
							,
							RichTextBlock.prototype.internalToJSON = function(t, n) {
									if (e.prototype.internalToJSON.call(this, t, n),
									this._inlines.length > 0) {
											for (var i = [], r = 0, o = this._inlines; r < o.length; r++) {
													var s = o[r];
													i.push(s.toJSON(n))
											}
											n.serializeValue(t, "inlines", i)
									}
							}
							,
							RichTextBlock.prototype.internalRender = function() {
									if (this._inlines.length > 0) {
											var e = void 0;
											if (this.forElementId) {
													var t = document.createElement("label");
													t.htmlFor = this.forElementId,
													e = t
											} else
													e = document.createElement("div");
											switch (e.className = this.hostConfig.makeCssClassName("ac-richTextBlock"),
											this.getEffectiveHorizontalAlignment()) {
											case l.HorizontalAlignment.Center:
													e.style.textAlign = "center";
													break;
											case l.HorizontalAlignment.Right:
													e.style.textAlign = "end";
													break;
											default:
													e.style.textAlign = "start"
											}
											for (var n = 0, i = 0, r = this._inlines; i < r.length; i++) {
													var o = r[i].render();
													o && (e.appendChild(o),
													n++)
											}
											if (n > 0)
													return e
									}
							}
							,
							RichTextBlock.prototype.asString = function() {
									for (var e = "", t = 0, n = this._inlines; t < n.length; t++) {
											e += n[t].asString()
									}
									return e
							}
							,
							RichTextBlock.prototype.getJsonTypeName = function() {
									return "RichTextBlock"
							}
							,
							RichTextBlock.prototype.getInlineCount = function() {
									return this._inlines.length
							}
							,
							RichTextBlock.prototype.getInlineAt = function(e) {
									if (e >= 0 && e < this._inlines.length)
											return this._inlines[e];
									throw new Error(_.Strings.errors.indexOutOfRange(e))
							}
							,
							RichTextBlock.prototype.addInline = function(e) {
									"string" == typeof e ? this.internalAddInline(new C(e)) : this.internalAddInline(e)
							}
							,
							RichTextBlock.prototype.removeInline = function(e) {
									var t = this._inlines.indexOf(e);
									return t >= 0 && (this._inlines[t].setParent(void 0),
									this._inlines.splice(t, 1),
									!0)
							}
							,
							RichTextBlock
					}(y);
					t.RichTextBlock = E;
					var T = function(e) {
							function Fact(t, n) {
									var i = e.call(this) || this;
									return i.name = t,
									i.value = n,
									i
							}
							return r(Fact, e),
							Fact.prototype.getSchemaKey = function() {
									return "Fact"
							}
							,
							Fact.titleProperty = new m.StringProperty(m.Versions.v1_0,"title"),
							Fact.valueProperty = new m.StringProperty(m.Versions.v1_0,"value"),
							o([(0,
							m.property)(Fact.titleProperty)], Fact.prototype, "name", void 0),
							o([(0,
							m.property)(Fact.valueProperty)], Fact.prototype, "value", void 0),
							Fact
					}(m.SerializableObject);
					t.Fact = T;
					var I = function(e) {
							function FactSet() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(FactSet, e),
							Object.defineProperty(FactSet.prototype, "useDefaultSizing", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							FactSet.prototype.internalRender = function() {
									var e = void 0
										, t = this.hostConfig;
									if (this.facts.length > 0) {
											(e = document.createElement("table")).style.borderWidth = "0px",
											e.style.borderSpacing = "0px",
											e.style.borderStyle = "none",
											e.style.borderCollapse = "collapse",
											e.style.display = "block",
											e.style.overflow = "hidden",
											e.classList.add(t.makeCssClassName("ac-factset")),
											e.setAttribute("role", "presentation");
											for (var n = 0; n < this.facts.length; n++) {
													var i = document.createElement("tr");
													n > 0 && (i.style.marginTop = t.factSet.spacing + "px");
													var r = document.createElement("td");
													r.style.padding = "0",
													r.classList.add(t.makeCssClassName("ac-fact-title")),
													t.factSet.title.maxWidth && (r.style.maxWidth = t.factSet.title.maxWidth + "px"),
													r.style.verticalAlign = "top";
													var o = new S;
													o.setParent(this),
													o.text = !this.facts[n].name && this.isDesignMode() ? "Title" : this.facts[n].name,
													o.size = t.factSet.title.size,
													o.color = t.factSet.title.color,
													o.isSubtle = t.factSet.title.isSubtle,
													o.weight = t.factSet.title.weight,
													o.wrap = t.factSet.title.wrap,
													o.spacing = l.Spacing.None,
													d.appendChild(r, o.render()),
													d.appendChild(i, r),
													(r = document.createElement("td")).style.width = "10px",
													d.appendChild(i, r),
													(r = document.createElement("td")).style.padding = "0",
													r.style.verticalAlign = "top",
													r.classList.add(t.makeCssClassName("ac-fact-value")),
													(o = new S).setParent(this),
													o.text = this.facts[n].value,
													o.size = t.factSet.value.size,
													o.color = t.factSet.value.color,
													o.isSubtle = t.factSet.value.isSubtle,
													o.weight = t.factSet.value.weight,
													o.wrap = t.factSet.value.wrap,
													o.spacing = l.Spacing.None,
													d.appendChild(r, o.render()),
													d.appendChild(i, r),
													d.appendChild(e, i)
											}
									}
									return e
							}
							,
							FactSet.prototype.getJsonTypeName = function() {
									return "FactSet"
							}
							,
							FactSet.factsProperty = new m.SerializableObjectCollectionProperty(m.Versions.v1_0,"facts",T),
							o([(0,
							m.property)(FactSet.factsProperty)], FactSet.prototype, "facts", void 0),
							FactSet
					}(y);
					t.FactSet = I;
					var w = function(e) {
							function ImageDimensionProperty(t, n, i, r) {
									var o = e.call(this, t, n) || this;
									return o.targetVersion = t,
									o.name = n,
									o.internalName = i,
									o.fallbackProperty = r,
									o
							}
							return r(ImageDimensionProperty, e),
							ImageDimensionProperty.prototype.getInternalName = function() {
									return this.internalName
							}
							,
							ImageDimensionProperty.prototype.parse = function(e, t, n) {
									var i = void 0
										, r = t[this.name];
									if (void 0 === r)
											return this.defaultValue;
									var o = !1;
									if ("string" == typeof r) {
											try {
													var s = c.SizeAndUnit.parse(r, !0);
													s.unit === l.SizeUnit.Pixel && (i = s.physicalSize,
													o = !0)
											} catch (e) {}
											!o && this.fallbackProperty && (o = this.fallbackProperty.isValidValue(r, n))
									}
									return o || n.logParseEvent(e, l.ValidationEvent.InvalidPropertyValue, _.Strings.errors.invalidPropertyValue(r, this.name)),
									i
							}
							,
							ImageDimensionProperty.prototype.toJSON = function(e, t, n, i) {
									i.serializeValue(t, this.name, "number" != typeof n || isNaN(n) ? void 0 : n + "px")
							}
							,
							ImageDimensionProperty
					}(m.PropertyDefinition)
						, A = function(e) {
							function Image() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.size = l.Size.Auto,
									t.style = l.ImageStyle.Default,
									t
							}
							return r(Image, e),
							Image.prototype.populateSchema = function(t) {
									e.prototype.populateSchema.call(this, t),
									t.remove(y.heightProperty)
							}
							,
							Image.prototype.applySize = function(e) {
									if (this.pixelWidth || this.pixelHeight)
											this.pixelWidth && (e.style.width = this.pixelWidth + "px"),
											this.pixelHeight && (e.style.height = this.pixelHeight + "px");
									else if (this.maxHeight) {
											switch (this.size) {
											case l.Size.Small:
													e.style.height = this.hostConfig.imageSizes.small + "px";
													break;
											case l.Size.Large:
													e.style.height = this.hostConfig.imageSizes.large + "px";
													break;
											default:
													e.style.height = this.hostConfig.imageSizes.medium + "px"
											}
											e.style.maxHeight = this.maxHeight + "px"
									} else {
											switch (this.size) {
											case l.Size.Stretch:
													e.style.width = "100%";
													break;
											case l.Size.Auto:
													e.style.maxWidth = "100%";
													break;
											case l.Size.Small:
													e.style.width = this.hostConfig.imageSizes.small + "px";
													break;
											case l.Size.Large:
													e.style.width = this.hostConfig.imageSizes.large + "px";
													break;
											case l.Size.Medium:
													e.style.width = this.hostConfig.imageSizes.medium + "px"
											}
											e.style.maxHeight = "100%"
									}
							}
							,
							Object.defineProperty(Image.prototype, "useDefaultSizing", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							Image.prototype.internalRender = function() {
									var e = this
										, t = void 0;
									if (this.url) {
											(t = document.createElement("div")).style.display = "flex",
											t.style.alignItems = "flex-start";
											var n = this.hostConfig;
											switch (this.getEffectiveHorizontalAlignment()) {
											case l.HorizontalAlignment.Center:
													t.style.justifyContent = "center";
													break;
											case l.HorizontalAlignment.Right:
													t.style.justifyContent = "flex-end";
													break;
											default:
													t.style.justifyContent = "flex-start"
											}
											var i = document.createElement("img");
											i.onload = function(t) {
													raiseImageLoadedEvent(e)
											}
											,
											i.onerror = function(t) {
													if (e.renderedElement) {
															var n = e.getRootElement();
															if (clearElement(e.renderedElement),
															n && n.designMode) {
																	var i = document.createElement("div");
																	i.style.display = "flex",
																	i.style.alignItems = "center",
																	i.style.justifyContent = "center",
																	i.style.backgroundColor = "#EEEEEE",
																	i.style.color = "black",
																	i.innerText = ":-(",
																	i.style.padding = "10px",
																	e.applySize(i),
																	e.renderedElement.appendChild(i)
															}
													}
													raiseImageLoadedEvent(e)
											}
											,
											i.style.minWidth = "0",
											i.classList.add(n.makeCssClassName("ac-image")),
											this.selectAction && n.supportsInteractivity && (i.onkeypress = function(t) {
													e.selectAction && e.selectAction.isEffectivelyEnabled() && ("Enter" === t.code || "Space" === t.code) && (t.preventDefault(),
													t.cancelBubble = !0,
													e.selectAction.execute())
											}
											,
											i.onclick = function(t) {
													e.selectAction && e.selectAction.isEffectivelyEnabled() && (t.preventDefault(),
													t.cancelBubble = !0,
													e.selectAction.execute())
											}
											,
											this.selectAction.setupElementForAccessibility(i),
											this.selectAction.isEffectivelyEnabled() && i.classList.add(n.makeCssClassName("ac-selectable"))),
											this.applySize(i),
											this.style === l.ImageStyle.Person && (i.style.borderRadius = "50%",
											i.style.backgroundPosition = "50% 50%",
											i.style.backgroundRepeat = "no-repeat");
											var r = d.stringToCssColor(this.backgroundColor);
											r && (i.style.backgroundColor = r),
											i.src = this.preProcessPropertyValue(Image.urlProperty);
											var o = this.preProcessPropertyValue(Image.altTextProperty);
											o && (i.alt = o),
											t.appendChild(i)
									}
									return t
							}
							,
							Image.prototype.getJsonTypeName = function() {
									return "Image"
							}
							,
							Image.prototype.getAllActions = function() {
									var t = e.prototype.getAllActions.call(this);
									return this.selectAction && t.push(this.selectAction),
									t
							}
							,
							Image.prototype.getActionById = function(t) {
									var n = e.prototype.getActionById.call(this, t);
									return !n && this.selectAction && (n = this.selectAction.getActionById(t)),
									n
							}
							,
							Image.prototype.getResourceInformation = function() {
									return this.url ? [{
											url: this.url,
											mimeType: "image"
									}] : []
							}
							,
							Image.urlProperty = new m.StringProperty(m.Versions.v1_0,"url"),
							Image.altTextProperty = new m.StringProperty(m.Versions.v1_0,"altText"),
							Image.backgroundColorProperty = new m.StringProperty(m.Versions.v1_1,"backgroundColor"),
							Image.styleProperty = new m.EnumProperty(m.Versions.v1_0,"style",l.ImageStyle,l.ImageStyle.Default),
							Image.sizeProperty = new m.EnumProperty(m.Versions.v1_0,"size",l.Size,l.Size.Auto),
							Image.pixelWidthProperty = new w(m.Versions.v1_1,"width","pixelWidth"),
							Image.pixelHeightProperty = new w(m.Versions.v1_1,"height","pixelHeight",y.heightProperty),
							Image.selectActionProperty = new v(m.Versions.v1_1,"selectAction",["Action.ShowCard"]),
							o([(0,
							m.property)(Image.urlProperty)], Image.prototype, "url", void 0),
							o([(0,
							m.property)(Image.altTextProperty)], Image.prototype, "altText", void 0),
							o([(0,
							m.property)(Image.backgroundColorProperty)], Image.prototype, "backgroundColor", void 0),
							o([(0,
							m.property)(Image.sizeProperty)], Image.prototype, "size", void 0),
							o([(0,
							m.property)(Image.styleProperty)], Image.prototype, "style", void 0),
							o([(0,
							m.property)(Image.pixelWidthProperty)], Image.prototype, "pixelWidth", void 0),
							o([(0,
							m.property)(Image.pixelHeightProperty)], Image.prototype, "pixelHeight", void 0),
							o([(0,
							m.property)(Image.selectActionProperty)], Image.prototype, "selectAction", void 0),
							Image
					}(y);
					t.Image = A;
					var R = function(e) {
							function CardElementContainer() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.allowVerticalOverflow = !1,
									t
							}
							return r(CardElementContainer, e),
							CardElementContainer.prototype.populateSchema = function(t) {
									e.prototype.populateSchema.call(this, t),
									this.isSelectable || t.remove(CardElementContainer.selectActionProperty)
							}
							,
							CardElementContainer.prototype.isElementAllowed = function(e) {
									return this.hostConfig.supportsInteractivity || !e.isInteractive
							}
							,
							CardElementContainer.prototype.applyPadding = function() {
									if (e.prototype.applyPadding.call(this),
									this.renderedElement) {
											var t = new c.SpacingDefinition;
											this.getEffectivePadding() && (t = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding())),
											this.renderedElement.style.paddingTop = t.top + "px",
											this.renderedElement.style.paddingRight = t.right + "px",
											this.renderedElement.style.paddingBottom = t.bottom + "px",
											this.renderedElement.style.paddingLeft = t.left + "px",
											this.renderedElement.style.marginRight = "0",
											this.renderedElement.style.marginLeft = "0"
									}
							}
							,
							Object.defineProperty(CardElementContainer.prototype, "isSelectable", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							CardElementContainer.prototype.forbiddenChildElements = function() {
									return []
							}
							,
							CardElementContainer.prototype.releaseDOMResources = function() {
									e.prototype.releaseDOMResources.call(this);
									for (var t = 0; t < this.getItemCount(); t++)
											this.getItemAt(t).releaseDOMResources()
							}
							,
							CardElementContainer.prototype.internalValidateProperties = function(t) {
									e.prototype.internalValidateProperties.call(this, t);
									for (var n = 0; n < this.getItemCount(); n++) {
											var i = this.getItemAt(n);
											!this.hostConfig.supportsInteractivity && i.isInteractive && t.addFailure(this, l.ValidationEvent.InteractivityNotAllowed, _.Strings.errors.interactivityNotAllowed()),
											this.isElementAllowed(i) || t.addFailure(this, l.ValidationEvent.InteractivityNotAllowed, _.Strings.errors.elementTypeNotAllowed(i.getJsonTypeName())),
											i.internalValidateProperties(t)
									}
									this._selectAction && this._selectAction.internalValidateProperties(t)
							}
							,
							CardElementContainer.prototype.render = function() {
									var t = this
										, n = e.prototype.render.call(this);
									if (n) {
											var i = this.hostConfig;
											this.allowVerticalOverflow && (n.style.overflowX = "hidden",
											n.style.overflowY = "auto"),
											n && this.isSelectable && this._selectAction && i.supportsInteractivity && (n.onclick = function(e) {
													t._selectAction && t._selectAction.isEffectivelyEnabled() && (e.preventDefault(),
													e.cancelBubble = !0,
													t._selectAction.execute())
											}
											,
											n.onkeypress = function(e) {
													t._selectAction && t._selectAction.isEffectivelyEnabled() && ("Enter" === e.code || "Space" === e.code) && (e.preventDefault(),
													e.cancelBubble = !0,
													t._selectAction.execute())
											}
											,
											this._selectAction.setupElementForAccessibility(n),
											this._selectAction.isEffectivelyEnabled() && n.classList.add(i.makeCssClassName("ac-selectable")))
									}
									return n
							}
							,
							CardElementContainer.prototype.updateLayout = function(t) {
									if (void 0 === t && (t = !0),
									e.prototype.updateLayout.call(this, t),
									t)
											for (var n = 0; n < this.getItemCount(); n++)
													this.getItemAt(n).updateLayout()
							}
							,
							CardElementContainer.prototype.getAllInputs = function(e) {
									void 0 === e && (e = !0);
									for (var t = [], n = 0; n < this.getItemCount(); n++)
											t.push.apply(t, this.getItemAt(n).getAllInputs(e));
									return t
							}
							,
							CardElementContainer.prototype.getAllActions = function() {
									for (var t = e.prototype.getAllActions.call(this), n = 0; n < this.getItemCount(); n++)
											t.push.apply(t, this.getItemAt(n).getAllActions());
									return this._selectAction && t.push(this._selectAction),
									t
							}
							,
							CardElementContainer.prototype.getResourceInformation = function() {
									for (var e = [], t = 0; t < this.getItemCount(); t++)
											e.push.apply(e, this.getItemAt(t).getResourceInformation());
									return e
							}
							,
							CardElementContainer.prototype.getElementById = function(t) {
									var n = e.prototype.getElementById.call(this, t);
									if (!n)
											for (var i = 0; i < this.getItemCount() && !(n = this.getItemAt(i).getElementById(t)); i++)
													;
									return n
							}
							,
							CardElementContainer.prototype.findDOMNodeOwner = function(t) {
									for (var n, i = void 0, r = 0; r < this.getItemCount(); r++)
											if (i = this.getItemAt(r).findDOMNodeOwner(t))
													return i;
									for (r = 0; r < this.getActionCount(); r++)
											if (i = null === (n = this.getActionAt(r)) || void 0 === n ? void 0 : n.findDOMNodeOwner(t))
													return i;
									return e.prototype.findDOMNodeOwner.call(this, t)
							}
							,
							CardElementContainer.selectActionProperty = new v(m.Versions.v1_1,"selectAction",["Action.ShowCard"]),
							o([(0,
							m.property)(CardElementContainer.selectActionProperty)], CardElementContainer.prototype, "_selectAction", void 0),
							CardElementContainer
					}(y);
					t.CardElementContainer = R;
					var x = function(e) {
							function ImageSet() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t._images = [],
									t.imageSize = l.ImageSize.Medium,
									t
							}
							return r(ImageSet, e),
							ImageSet.prototype.internalRender = function() {
									var e = void 0;
									if (this._images.length > 0) {
											(e = document.createElement("div")).style.display = "flex",
											e.style.flexWrap = "wrap";
											for (var t = 0, n = this._images; t < n.length; t++) {
													var i = n[t];
													switch (this.imageSize) {
													case l.ImageSize.Small:
															i.size = l.Size.Small;
															break;
													case l.ImageSize.Large:
															i.size = l.Size.Large;
															break;
													default:
															i.size = l.Size.Medium
													}
													i.maxHeight = this.hostConfig.imageSet.maxImageHeight;
													var r = i.render();
													r && (r.style.display = "inline-flex",
													r.style.margin = "0px",
													r.style.marginRight = "10px",
													d.appendChild(e, r))
											}
									}
									return e
							}
							,
							ImageSet.prototype.getItemCount = function() {
									return this._images.length
							}
							,
							ImageSet.prototype.getItemAt = function(e) {
									return this._images[e]
							}
							,
							ImageSet.prototype.getFirstVisibleRenderedItem = function() {
									return this._images && this._images.length > 0 ? this._images[0] : void 0
							}
							,
							ImageSet.prototype.getLastVisibleRenderedItem = function() {
									return this._images && this._images.length > 0 ? this._images[this._images.length - 1] : void 0
							}
							,
							ImageSet.prototype.removeItem = function(e) {
									if (e instanceof A) {
											var t = this._images.indexOf(e);
											if (t >= 0)
													return this._images.splice(t, 1),
													e.setParent(void 0),
													this.updateLayout(),
													!0
									}
									return !1
							}
							,
							ImageSet.prototype.getJsonTypeName = function() {
									return "ImageSet"
							}
							,
							ImageSet.prototype.addImage = function(e) {
									if (e.parent)
											throw new Error("This image already belongs to another ImageSet");
									this._images.push(e),
									e.setParent(this)
							}
							,
							ImageSet.prototype.indexOf = function(e) {
									return e instanceof A ? this._images.indexOf(e) : -1
							}
							,
							ImageSet.imagesProperty = new m.SerializableObjectCollectionProperty(m.Versions.v1_0,"images",A,(function(e, t) {
									t.setParent(e)
							}
							)),
							ImageSet.imageSizeProperty = new m.EnumProperty(m.Versions.v1_0,"imageSize",l.ImageSize,l.ImageSize.Medium),
							o([(0,
							m.property)(ImageSet.imagesProperty)], ImageSet.prototype, "_images", void 0),
							o([(0,
							m.property)(ImageSet.imageSizeProperty)], ImageSet.prototype, "imageSize", void 0),
							ImageSet
					}(R);
					t.ImageSet = x;
					var O = function(e) {
							function ContentSource(t, n) {
									var i = e.call(this) || this;
									return i.url = t,
									i.mimeType = n,
									i
							}
							return r(ContentSource, e),
							ContentSource.prototype.isValid = function() {
									return !(!this.mimeType || !this.url)
							}
							,
							ContentSource.mimeTypeProperty = new m.StringProperty(m.Versions.v1_1,"mimeType"),
							ContentSource.urlProperty = new m.StringProperty(m.Versions.v1_1,"url"),
							o([(0,
							m.property)(ContentSource.mimeTypeProperty)], ContentSource.prototype, "mimeType", void 0),
							o([(0,
							m.property)(ContentSource.urlProperty)], ContentSource.prototype, "url", void 0),
							ContentSource
					}(m.SerializableObject);
					t.ContentSource = O;
					var N = function(e) {
							function CaptionSource(t, n, i) {
									var r = e.call(this, t, n) || this;
									return r.label = i,
									r
							}
							return r(CaptionSource, e),
							CaptionSource.prototype.getSchemaKey = function() {
									return "CaptionSource"
							}
							,
							CaptionSource.prototype.render = function() {
									var e = void 0;
									return this.isValid() && ((e = document.createElement("track")).src = this.url,
									e.kind = "captions",
									e.label = this.label),
									e
							}
							,
							CaptionSource.labelProperty = new m.StringProperty(m.Versions.v1_6,"label"),
							o([(0,
							m.property)(CaptionSource.labelProperty)], CaptionSource.prototype, "label", void 0),
							CaptionSource
					}(O);
					t.CaptionSource = N;
					var P = function(e) {
							function MediaSource() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(MediaSource, e),
							MediaSource.prototype.getSchemaKey = function() {
									return "MediaSource"
							}
							,
							MediaSource.prototype.render = function() {
									var e = void 0;
									return this.isValid() && ((e = document.createElement("source")).src = this.url,
									e.type = this.mimeType),
									e
							}
							,
							MediaSource
					}(O);
					t.MediaSource = P;
					var D = function() {
							function MediaPlayer() {}
							return MediaPlayer.prototype.play = function() {}
							,
							Object.defineProperty(MediaPlayer.prototype, "posterUrl", {
									get: function() {
											return this._posterUrl
									},
									set: function(e) {
											this._posterUrl = e
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(MediaPlayer.prototype, "selectedMediaType", {
									get: function() {},
									enumerable: !1,
									configurable: !0
							}),
							MediaPlayer
					}();
					t.MediaPlayer = D;
					var M = function(e) {
							function HTML5MediaPlayer(t) {
									var n = e.call(this) || this;
									return n.owner = t,
									n._selectedSources = [],
									n._captionSources = [],
									n.processSources(),
									n
							}
							return r(HTML5MediaPlayer, e),
							HTML5MediaPlayer.prototype.processSources = function() {
									var e;
									this._selectedSources = [],
									this._captionSources = [],
									this._selectedMediaType = void 0;
									for (var t = 0, n = this.owner.sources; t < n.length; t++) {
											var i = n[t]
												, r = i.mimeType ? i.mimeType.split("/") : [];
											if (2 === r.length) {
													if (!this._selectedMediaType) {
															var o = HTML5MediaPlayer.supportedMediaTypes.indexOf(r[0]);
															o >= 0 && (this._selectedMediaType = HTML5MediaPlayer.supportedMediaTypes[o])
													}
													r[0] === this._selectedMediaType && this._selectedSources.push(i)
											}
									}
									(e = this._captionSources).push.apply(e, this.owner.captionSources)
							}
							,
							HTML5MediaPlayer.prototype.canPlay = function() {
									return this._selectedSources.length > 0
							}
							,
							HTML5MediaPlayer.prototype.fetchVideoDetails = function() {
									return s(this, void 0, void 0, (function() {
											return a(this, (function(e) {
													return [2]
											}
											))
									}
									))
							}
							,
							HTML5MediaPlayer.prototype.render = function() {
									"video" === this._selectedMediaType ? this._mediaElement = document.createElement("video") : this._mediaElement = document.createElement("audio"),
									this._mediaElement.setAttribute("aria-label", this.owner.altText ? this.owner.altText : _.Strings.defaults.mediaPlayerAriaLabel()),
									this._mediaElement.setAttribute("webkit-playsinline", ""),
									this._mediaElement.setAttribute("playsinline", ""),
									this._mediaElement.setAttribute("crossorigin", ""),
									this._mediaElement.autoplay = !0,
									this._mediaElement.controls = !0,
									d.isMobileOS() && (this._mediaElement.muted = !0),
									this._mediaElement.preload = "none",
									this._mediaElement.style.width = "100%";
									for (var e = 0, t = this.owner.sources; e < t.length; e++) {
											var n = t[e].render();
											d.appendChild(this._mediaElement, n)
									}
									for (var i = 0, r = this.owner.captionSources; i < r.length; i++) {
											var o = r[i];
											if ("vtt" == o.mimeType) {
													var s = o.render();
													d.appendChild(this._mediaElement, s)
											}
									}
									return this._mediaElement
							}
							,
							HTML5MediaPlayer.prototype.play = function() {
									this._mediaElement && this._mediaElement.play()
							}
							,
							Object.defineProperty(HTML5MediaPlayer.prototype, "selectedMediaType", {
									get: function() {
											return this._selectedMediaType
									},
									enumerable: !1,
									configurable: !0
							}),
							HTML5MediaPlayer.supportedMediaTypes = ["audio", "video"],
							HTML5MediaPlayer
					}(D);
					t.HTML5MediaPlayer = M;
					var L = function(e) {
							function CustomMediaPlayer(t) {
									return e.call(this) || this
							}
							return r(CustomMediaPlayer, e),
							CustomMediaPlayer
					}(D);
					t.CustomMediaPlayer = L;
					var k = function(e) {
							function IFrameMediaMediaPlayer(t, n) {
									var i = e.call(this, t) || this;
									return i.iFrameTitle = n,
									t.length >= 2 && (i._videoId = t[1]),
									i
							}
							return r(IFrameMediaMediaPlayer, e),
							IFrameMediaMediaPlayer.prototype.canPlay = function() {
									return void 0 !== this._videoId
							}
							,
							IFrameMediaMediaPlayer.prototype.render = function() {
									var e = document.createElement("div");
									e.style.position = "relative",
									e.style.width = "100%",
									e.style.height = "0",
									e.style.paddingBottom = "56.25%";
									var t = document.createElement("iframe");
									return t.style.position = "absolute",
									t.style.top = "0",
									t.style.left = "0",
									t.style.width = "100%",
									t.style.height = "100%",
									t.src = this.getEmbedVideoUrl(),
									t.frameBorder = "0",
									this.iFrameTitle && (t.title = this.iFrameTitle),
									t.allow = "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",
									t.allowFullscreen = !0,
									e.appendChild(t),
									e
							}
							,
							Object.defineProperty(IFrameMediaMediaPlayer.prototype, "videoId", {
									get: function() {
											return this._videoId
									},
									enumerable: !1,
									configurable: !0
							}),
							IFrameMediaMediaPlayer
					}(L);
					t.IFrameMediaMediaPlayer = k;
					var F = function(e) {
							function VimeoPlayer() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(VimeoPlayer, e),
							VimeoPlayer.prototype.fetchVideoDetails = function() {
									return s(this, void 0, void 0, (function() {
											var e, t, n;
											return a(this, (function(i) {
													switch (i.label) {
													case 0:
															return e = "https://vimeo.com/api/oembed.json?url=".concat(this.getEmbedVideoUrl()),
															[4, fetch(e)];
													case 1:
															return (t = i.sent()).ok ? [4, t.json()] : [3, 3];
													case 2:
															n = i.sent(),
															this.posterUrl = n.thumbnail_url,
															i.label = 3;
													case 3:
															return [2]
													}
											}
											))
									}
									))
							}
							,
							VimeoPlayer.prototype.getEmbedVideoUrl = function() {
									return "https://player.vimeo.com/video/".concat(this.videoId, "?autoplay=1")
							}
							,
							VimeoPlayer
					}(k);
					t.VimeoPlayer = F;
					var B = function(e) {
							function DailymotionPlayer() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(DailymotionPlayer, e),
							DailymotionPlayer.prototype.fetchVideoDetails = function() {
									return s(this, void 0, void 0, (function() {
											var e, t, n;
											return a(this, (function(i) {
													switch (i.label) {
													case 0:
															return e = "https://api.dailymotion.com/video/".concat(this.videoId, "?fields=thumbnail_720_url"),
															[4, fetch(e)];
													case 1:
															return (t = i.sent()).ok ? [4, t.json()] : [3, 3];
													case 2:
															n = i.sent(),
															this.posterUrl = n.thumbnail_720_url,
															i.label = 3;
													case 3:
															return [2]
													}
											}
											))
									}
									))
							}
							,
							DailymotionPlayer.prototype.getEmbedVideoUrl = function() {
									return "https://www.dailymotion.com/embed/video/".concat(this.videoId, "?autoplay=1")
							}
							,
							DailymotionPlayer
					}(k);
					t.DailymotionPlayer = B;
					var G = function(e) {
							function YouTubePlayer(t, n) {
									var i = e.call(this, t, n) || this;
									return i.iFrameTitle = n,
									t.length >= 3 && void 0 !== t[2] && (i._startTimeIndex = parseInt(t[2])),
									i
							}
							return r(YouTubePlayer, e),
							YouTubePlayer.prototype.fetchVideoDetails = function() {
									return s(this, void 0, void 0, (function() {
											return a(this, (function(e) {
													return this.posterUrl = this.videoId ? "https://img.youtube.com/vi/".concat(this.videoId, "/maxresdefault.jpg") : void 0,
													[2]
											}
											))
									}
									))
							}
							,
							YouTubePlayer.prototype.getEmbedVideoUrl = function() {
									var e = "https://www.youtube.com/embed/".concat(this.videoId, "?autoplay=1");
									return void 0 !== this._startTimeIndex && (e += "&start=".concat(this._startTimeIndex)),
									e
							}
							,
							YouTubePlayer
					}(k);
					t.YouTubePlayer = G;
					var U = function(e) {
							function Media() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.sources = [],
									t.captionSources = [],
									t
							}
							return r(Media, e),
							Media.prototype.createMediaPlayer = function() {
									for (var e = 0, t = Media.customMediaPlayers; e < t.length; e++)
											for (var n = t[e], i = 0, r = this.sources; i < r.length; i++) {
													var o = r[i];
													if (o.url)
															for (var s = 0, a = n.urlPatterns; s < a.length; s++) {
																	var l = a[s].exec(o.url);
																	if (null !== l)
																			return n.createMediaPlayer(l)
															}
											}
									return new M(this)
							}
							,
							Media.prototype.handlePlayButtonInvoke = function(e) {
									if (this.hostConfig.media.allowInlinePlayback) {
											if (e.preventDefault(),
											e.cancelBubble = !0,
											this.renderedElement) {
													var t = this._mediaPlayer.render();
													clearElement(this.renderedElement),
													this.renderedElement.appendChild(t),
													this._mediaPlayer.play(),
													t.focus()
											}
									} else
											Media.onPlay && (e.preventDefault(),
											e.cancelBubble = !0,
											Media.onPlay(this))
							}
							,
							Media.prototype.displayPoster = function() {
									return s(this, void 0, void 0, (function() {
											var e, t, n, i, r, o, s = this;
											return a(this, (function(a) {
													return this.renderedElement && (12,
													15,
													(e = document.createElement("div")).className = this.hostConfig.makeCssClassName("ac-media-poster"),
													e.setAttribute("role", "contentinfo"),
													e.setAttribute("aria-label", this.altText ? this.altText : _.Strings.defaults.mediaPlayerAriaLabel()),
													e.style.position = "relative",
													e.style.display = "flex",
													(t = this.poster ? this.poster : this._mediaPlayer.posterUrl) || (t = this.hostConfig.media.defaultPoster),
													t ? ((n = document.createElement("img")).style.width = "100%",
													n.style.height = "100%",
													n.setAttribute("role", "presentation"),
													n.onerror = function(t) {
															n.parentNode && n.parentNode.removeChild(n),
															e.classList.add("empty"),
															e.style.minHeight = "150px"
													}
													,
													n.src = t,
													e.appendChild(n)) : (e.classList.add("empty"),
													e.style.minHeight = "150px"),
													this.hostConfig.supportsInteractivity && this._mediaPlayer.canPlay() && ((i = document.createElement("div")).tabIndex = 0,
													i.setAttribute("role", "button"),
													i.setAttribute("aria-label", _.Strings.defaults.mediaPlayerPlayMedia()),
													i.className = this.hostConfig.makeCssClassName("ac-media-playButton"),
													i.style.display = "flex",
													i.style.alignItems = "center",
													i.style.justifyContent = "center",
													i.onclick = function(e) {
															s.handlePlayButtonInvoke(e)
													}
													,
													i.onkeypress = function(e) {
															"Enter" !== e.code && "Space" !== e.code || s.handlePlayButtonInvoke(e)
													}
													,
													(r = document.createElement("div")).className = this.hostConfig.makeCssClassName("ac-media-playButton-arrow"),
													r.style.width = "12px",
													r.style.height = "15px",
													r.style.borderTopWidth = "7.5px",
													r.style.borderBottomWidth = "7.5px",
													r.style.borderLeftWidth = "12px",
													r.style.borderRightWidth = "0",
													r.style.borderStyle = "solid",
													r.style.borderTopColor = "transparent",
													r.style.borderRightColor = "transparent",
													r.style.borderBottomColor = "transparent",
													r.style.transform = "translate(1.2px,0px)",
													i.appendChild(r),
													(o = document.createElement("div")).style.position = "absolute",
													o.style.left = "0",
													o.style.top = "0",
													o.style.width = "100%",
													o.style.height = "100%",
													o.style.display = "flex",
													o.style.justifyContent = "center",
													o.style.alignItems = "center",
													o.appendChild(i),
													e.appendChild(o)),
													clearElement(this.renderedElement),
													this.renderedElement.appendChild(e)),
													[2]
											}
											))
									}
									))
							}
							,
							Media.prototype.internalRender = function() {
									var e = document.createElement("div");
									return e.className = this.hostConfig.makeCssClassName("ac-media"),
									e
							}
							,
							Media.prototype.render = function() {
									var t = this
										, n = e.prototype.render.call(this);
									return n && (this._mediaPlayer = this.createMediaPlayer(),
									this._mediaPlayer.fetchVideoDetails().then((function() {
											return t.displayPoster()
									}
									))),
									n
							}
							,
							Media.prototype.releaseDOMResources = function() {
									e.prototype.releaseDOMResources.call(this),
									this.displayPoster()
							}
							,
							Media.prototype.getJsonTypeName = function() {
									return "Media"
							}
							,
							Media.prototype.getResourceInformation = function() {
									var e = [];
									if (this._mediaPlayer) {
											var t = this.poster ? this.poster : this.hostConfig.media.defaultPoster;
											t && e.push({
													url: t,
													mimeType: "image"
											})
									}
									for (var n = 0, i = this.sources; n < i.length; n++) {
											var r = i[n];
											r.isValid() && e.push({
													url: r.url,
													mimeType: r.mimeType
											})
									}
									for (var o = 0, s = this.captionSources; o < s.length; o++) {
											var a = s[o];
											a.isValid() && e.push({
													url: a.url,
													mimeType: a.mimeType
											})
									}
									return e
							}
							,
							Object.defineProperty(Media.prototype, "selectedMediaType", {
									get: function() {
											return this._mediaPlayer.selectedMediaType
									},
									enumerable: !1,
									configurable: !0
							}),
							Media.customMediaPlayers = [{
									urlPatterns: [/^(?:https?:\/\/)?(?:www.)?youtube.com\/watch\?(?=.*v=([\w\d-_]+))(?=(?:.*t=(\d+))?).*/gi, /^(?:https?:\/\/)?youtu.be\/([\w\d-_]+)(?:\?t=(\d+))?/gi],
									createMediaPlayer: function(e) {
											return new G(e,_.Strings.defaults.youTubeVideoPlayer())
									}
							}, {
									urlPatterns: [/^(?:https?:\/\/)?vimeo.com\/([\w\d-_]+).*/gi],
									createMediaPlayer: function(e) {
											return new F(e,_.Strings.defaults.vimeoVideoPlayer())
									}
							}, {
									urlPatterns: [/^(?:https?:\/\/)?(?:www.)?dailymotion.com\/video\/([\w\d-_]+).*/gi],
									createMediaPlayer: function(e) {
											return new B(e,_.Strings.defaults.dailymotionVideoPlayer())
									}
							}],
							Media.sourcesProperty = new m.SerializableObjectCollectionProperty(m.Versions.v1_1,"sources",P),
							Media.captionSourcesProperty = new m.SerializableObjectCollectionProperty(m.Versions.v1_6,"captionSources",N),
							Media.posterProperty = new m.StringProperty(m.Versions.v1_1,"poster"),
							Media.altTextProperty = new m.StringProperty(m.Versions.v1_1,"altText"),
							o([(0,
							m.property)(Media.sourcesProperty)], Media.prototype, "sources", void 0),
							o([(0,
							m.property)(Media.captionSourcesProperty)], Media.prototype, "captionSources", void 0),
							o([(0,
							m.property)(Media.posterProperty)], Media.prototype, "poster", void 0),
							o([(0,
							m.property)(Media.altTextProperty)], Media.prototype, "altText", void 0),
							Media
					}(y);
					t.Media = U;
					var z = function(e) {
							function Input() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(Input, e),
							Input.prototype.getAllLabelIds = function() {
									var e = [];
									return this.labelledBy && e.push(this.labelledBy),
									this._renderedLabelElement && e.push(this._renderedLabelElement.id),
									this._renderedErrorMessageElement && e.push(this._renderedErrorMessageElement.id),
									e
							}
							,
							Input.prototype.updateInputControlAriaLabelledBy = function() {
									if (this._renderedInputControlElement) {
											var e = this.getAllLabelIds();
											e.length > 0 ? this._renderedInputControlElement.setAttribute("aria-labelledby", e.join(" ")) : this._renderedInputControlElement.removeAttribute("aria-labelledby")
									}
							}
							,
							Object.defineProperty(Input.prototype, "isNullable", {
									get: function() {
											return !0
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(Input.prototype, "renderedInputControlElement", {
									get: function() {
											return this._renderedInputControlElement
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(Input.prototype, "inputControlContainerElement", {
									get: function() {
											return this._inputControlContainerElement
									},
									enumerable: !1,
									configurable: !0
							}),
							Input.prototype.overrideInternalRender = function() {
									var e = this.hostConfig;
									this._outerContainerElement = document.createElement("div"),
									this._outerContainerElement.style.display = "flex",
									this._outerContainerElement.style.flexDirection = "column";
									var t = d.generateUniqueId();
									if (this.label) {
											var n = new E;
											n.setParent(this),
											n.forElementId = t;
											var i = new C(this.label);
											if (n.addInline(i),
											this.isRequired) {
													i.init(e.inputs.label.requiredInputs);
													var r = new C(e.inputs.label.requiredInputs.suffix);
													r.color = e.inputs.label.requiredInputs.suffixColor,
													r.ariaHidden = !0,
													n.addInline(r)
											} else
													i.init(e.inputs.label.optionalInputs);
											this._renderedLabelElement = n.render(),
											this._renderedLabelElement && (this._renderedLabelElement.id = d.generateUniqueId(),
											this._renderedLabelElement.style.marginBottom = e.getEffectiveSpacing(e.inputs.label.inputSpacing) + "px",
											this._outerContainerElement.appendChild(this._renderedLabelElement))
									}
									if (this._inputControlContainerElement = document.createElement("div"),
									this._inputControlContainerElement.className = e.makeCssClassName("ac-input-container"),
									this._inputControlContainerElement.style.display = "flex",
									"stretch" === this.height && (this._inputControlContainerElement.style.alignItems = "stretch",
									this._inputControlContainerElement.style.flex = "1 1 auto"),
									this._renderedInputControlElement = this.internalRender(),
									this._renderedInputControlElement)
											return this._renderedInputControlElement.id = t,
											this._renderedInputControlElement.style.minWidth = "0px",
											this.isNullable && this.isRequired && (this._renderedInputControlElement.setAttribute("aria-required", "true"),
											this._renderedInputControlElement.classList.add(e.makeCssClassName("ac-input-required"))),
											this._inputControlContainerElement.appendChild(this._renderedInputControlElement),
											this._outerContainerElement.appendChild(this._inputControlContainerElement),
											this.updateInputControlAriaLabelledBy(),
											this._outerContainerElement;
									this.resetDirtyState()
							}
							,
							Input.prototype.valueChanged = function() {
									var e, t, n;
									this.getRootElement().updateActionsEnabledState(),
									this.isValid() && this.resetValidationFailureCue(),
									this.onValueChanged && this.onValueChanged(this),
									t = (e = this).getRootElement(),
									(n = t && t.onInputValueChanged ? t.onInputValueChanged : Ee.onInputValueChanged) && n(e)
							}
							,
							Input.prototype.resetValidationFailureCue = function() {
									this.renderedInputControlElement && (this.renderedInputControlElement.classList.remove(this.hostConfig.makeCssClassName("ac-input-validation-failed")),
									this.updateInputControlAriaLabelledBy(),
									this._renderedErrorMessageElement && (this._outerContainerElement.removeChild(this._renderedErrorMessageElement),
									this._renderedErrorMessageElement = void 0))
							}
							,
							Input.prototype.showValidationErrorMessage = function() {
									if (this.renderedElement && this.errorMessage && c.GlobalSettings.displayInputValidationErrors) {
											var e = new S;
											e.setParent(this),
											e.text = this.errorMessage,
											e.wrap = !0,
											e.init(this.hostConfig.inputs.errorMessage),
											this._renderedErrorMessageElement = e.render(),
											this._renderedErrorMessageElement && (this._renderedErrorMessageElement.id = d.generateUniqueId(),
											this._outerContainerElement.appendChild(this._renderedErrorMessageElement),
											this.updateInputControlAriaLabelledBy())
									}
							}
							,
							Input.prototype.focus = function() {
									this._renderedInputControlElement && this._renderedInputControlElement.focus()
							}
							,
							Input.prototype.isValid = function() {
									return !0
							}
							,
							Input.prototype.isDirty = function() {
									return this.value !== this._oldValue
							}
							,
							Input.prototype.resetDirtyState = function() {
									this._oldValue = this.value
							}
							,
							Input.prototype.internalValidateProperties = function(t) {
									e.prototype.internalValidateProperties.call(this, t),
									this.id || t.addFailure(this, l.ValidationEvent.PropertyCantBeNull, _.Strings.errors.inputsMustHaveUniqueId()),
									this.isRequired && (this.label || t.addFailure(this, l.ValidationEvent.RequiredInputsShouldHaveLabel, "Required inputs should have a label"),
									this.errorMessage || t.addFailure(this, l.ValidationEvent.RequiredInputsShouldHaveErrorMessage, "Required inputs should have an error message"))
							}
							,
							Input.prototype.validateValue = function() {
									this.resetValidationFailureCue();
									var e = this.isRequired ? this.isSet() && this.isValid() : this.isValid();
									return !e && this.renderedInputControlElement && (this.renderedInputControlElement.classList.add(this.hostConfig.makeCssClassName("ac-input-validation-failed")),
									this.showValidationErrorMessage()),
									e
							}
							,
							Input.prototype.getAllInputs = function(e) {
									return void 0 === e && (e = !0),
									[this]
							}
							,
							Input.prototype.render = function() {
									var t = e.prototype.render.call(this);
									return this.resetDirtyState(),
									t
							}
							,
							Object.defineProperty(Input.prototype, "isInteractive", {
									get: function() {
											return !0
									},
									enumerable: !1,
									configurable: !0
							}),
							Input.labelProperty = new m.StringProperty(m.Versions.v1_3,"label",!0),
							Input.isRequiredProperty = new m.BoolProperty(m.Versions.v1_3,"isRequired",!1),
							Input.errorMessageProperty = new m.StringProperty(m.Versions.v1_3,"errorMessage",!0),
							o([(0,
							m.property)(Input.labelProperty)], Input.prototype, "label", void 0),
							o([(0,
							m.property)(Input.isRequiredProperty)], Input.prototype, "isRequired", void 0),
							o([(0,
							m.property)(Input.errorMessageProperty)], Input.prototype, "errorMessage", void 0),
							Input
					}(y);
					t.Input = z;
					var V = function(e) {
							function TextInput() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.isMultiline = !1,
									t.style = l.InputTextStyle.Text,
									t
							}
							return r(TextInput, e),
							TextInput.prototype.setupInput = function(e) {
									var t = this;
									e.style.flex = "1 1 auto",
									e.tabIndex = this.isDesignMode() ? -1 : 0,
									this.placeholder && (e.placeholder = this.placeholder,
									e.setAttribute("aria-label", this.placeholder)),
									this.defaultValue && (e.value = this.defaultValue),
									this.maxLength && this.maxLength > 0 && (e.maxLength = this.maxLength),
									e.oninput = function() {
											t.valueChanged()
									}
									,
									e.onkeypress = function(e) {
											e.ctrlKey && "Enter" === e.code && t.inlineAction && t.inlineAction.isEffectivelyEnabled() && t.inlineAction.execute()
									}
							}
							,
							TextInput.prototype.internalRender = function() {
									var e;
									return this.isMultiline && this.style !== l.InputTextStyle.Password ? ((e = document.createElement("textarea")).className = this.hostConfig.makeCssClassName("ac-input", "ac-textInput", "ac-multiline"),
									"stretch" === this.height && (e.style.height = "initial")) : ((e = document.createElement("input")).className = this.hostConfig.makeCssClassName("ac-input", "ac-textInput"),
									e.type = l.InputTextStyle[this.style].toLowerCase()),
									this.setupInput(e),
									e
							}
							,
							TextInput.prototype.overrideInternalRender = function() {
									var t = this
										, n = e.prototype.overrideInternalRender.call(this);
									if (this.inlineAction) {
											var i = document.createElement("button");
											if (i.className = this.hostConfig.makeCssClassName(this.inlineAction.isEffectivelyEnabled() ? "ac-inlineActionButton" : "ac-inlineActionButton-disabled"),
											i.onclick = function(e) {
													t.inlineAction && t.inlineAction.isEffectivelyEnabled() && (e.preventDefault(),
													e.cancelBubble = !0,
													t.inlineAction.execute())
											}
											,
											this.inlineAction.iconUrl) {
													i.classList.add("iconOnly");
													var r = document.createElement("img");
													r.style.height = "100%",
													r.setAttribute("role", "presentation"),
													r.style.display = "none",
													r.onload = function() {
															r.style.removeProperty("display")
													}
													,
													r.onerror = function() {
															i.removeChild(r),
															i.classList.remove("iconOnly"),
															i.classList.add("textOnly"),
															i.textContent = t.inlineAction && t.inlineAction.title ? t.inlineAction.title : _.Strings.defaults.inlineActionTitle()
													}
													,
													r.src = this.inlineAction.iconUrl,
													i.appendChild(r),
													i.title = this.inlineAction.title ? this.inlineAction.title : _.Strings.defaults.inlineActionTitle()
											} else
													i.classList.add("textOnly"),
													i.textContent = this.inlineAction.title ? this.inlineAction.title : _.Strings.defaults.inlineActionTitle();
											this.inlineAction.setupElementForAccessibility(i, !0),
											i.style.marginLeft = "8px",
											this.inputControlContainerElement.appendChild(i)
									}
									return n
							}
							,
							TextInput.prototype.getJsonTypeName = function() {
									return "Input.Text"
							}
							,
							TextInput.prototype.getAllActions = function() {
									var t = e.prototype.getAllActions.call(this);
									return this.inlineAction && t.push(this.inlineAction),
									t
							}
							,
							TextInput.prototype.getActionById = function(t) {
									var n = e.prototype.getActionById.call(this, t);
									return !n && this.inlineAction && (n = this.inlineAction.getActionById(t)),
									n
							}
							,
							TextInput.prototype.isSet = function() {
									return !!this.value
							}
							,
							TextInput.prototype.isValid = function() {
									return !this.value || (!this.regex || new RegExp(this.regex,"g").test(this.value))
							}
							,
							Object.defineProperty(TextInput.prototype, "value", {
									get: function() {
											return this.renderedInputControlElement ? (this.isMultiline,
											this.renderedInputControlElement.value) : void 0
									},
									enumerable: !1,
									configurable: !0
							}),
							TextInput.valueProperty = new m.StringProperty(m.Versions.v1_0,"value"),
							TextInput.maxLengthProperty = new m.NumProperty(m.Versions.v1_0,"maxLength"),
							TextInput.isMultilineProperty = new m.BoolProperty(m.Versions.v1_0,"isMultiline",!1),
							TextInput.placeholderProperty = new m.StringProperty(m.Versions.v1_0,"placeholder"),
							TextInput.styleProperty = new m.EnumProperty(m.Versions.v1_0,"style",l.InputTextStyle,l.InputTextStyle.Text,[{
									value: l.InputTextStyle.Text
							}, {
									value: l.InputTextStyle.Tel
							}, {
									value: l.InputTextStyle.Url
							}, {
									value: l.InputTextStyle.Email
							}, {
									value: l.InputTextStyle.Password,
									targetVersion: m.Versions.v1_5
							}]),
							TextInput.inlineActionProperty = new v(m.Versions.v1_0,"inlineAction",["Action.ShowCard"]),
							TextInput.regexProperty = new m.StringProperty(m.Versions.v1_3,"regex",!0),
							o([(0,
							m.property)(TextInput.valueProperty)], TextInput.prototype, "defaultValue", void 0),
							o([(0,
							m.property)(TextInput.maxLengthProperty)], TextInput.prototype, "maxLength", void 0),
							o([(0,
							m.property)(TextInput.isMultilineProperty)], TextInput.prototype, "isMultiline", void 0),
							o([(0,
							m.property)(TextInput.placeholderProperty)], TextInput.prototype, "placeholder", void 0),
							o([(0,
							m.property)(TextInput.styleProperty)], TextInput.prototype, "style", void 0),
							o([(0,
							m.property)(TextInput.inlineActionProperty)], TextInput.prototype, "inlineAction", void 0),
							o([(0,
							m.property)(TextInput.regexProperty)], TextInput.prototype, "regex", void 0),
							TextInput
					}(z);
					t.TextInput = V;
					var H = function(e) {
							function ToggleInput() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.valueOn = "true",
									t.valueOff = "false",
									t.wrap = !1,
									t
							}
							return r(ToggleInput, e),
							ToggleInput.prototype.updateInputControlAriaLabelledBy = function() {
									if (this._checkboxInputElement) {
											var e = this.getAllLabelIds().join(" ");
											this._checkboxInputLabelElement && this._checkboxInputLabelElement.id && (e += " " + this._checkboxInputLabelElement.id),
											e ? this._checkboxInputElement.setAttribute("aria-labelledby", e) : this._checkboxInputElement.removeAttribute("aria-labelledby")
									}
							}
							,
							ToggleInput.prototype.internalRender = function() {
									var e = this
										, t = document.createElement("div");
									if (t.className = this.hostConfig.makeCssClassName("ac-input", "ac-toggleInput"),
									t.style.width = "100%",
									t.style.display = "flex",
									t.style.alignItems = "center",
									this._checkboxInputElement = document.createElement("input"),
									this._checkboxInputElement.id = d.generateUniqueId(),
									this._checkboxInputElement.type = "checkbox",
									this._checkboxInputElement.style.display = "inline-block",
									this._checkboxInputElement.style.verticalAlign = "middle",
									this._checkboxInputElement.style.margin = "0",
									this._checkboxInputElement.style.flex = "0 0 auto",
									this.title && this._checkboxInputElement.setAttribute("aria-label", this.title),
									this.isRequired && this._checkboxInputElement.setAttribute("aria-required", "true"),
									this._checkboxInputElement.tabIndex = this.isDesignMode() ? -1 : 0,
									this.defaultValue === this.valueOn && (this._checkboxInputElement.checked = !0),
									this._oldCheckboxValue = this._checkboxInputElement.checked,
									this._checkboxInputElement.onchange = function() {
											e.valueChanged()
									}
									,
									d.appendChild(t, this._checkboxInputElement),
									this.title || this.isDesignMode()) {
											var n = new S;
											if (n.setParent(this),
											n.forElementId = this._checkboxInputElement.id,
											n.hostConfig = this.hostConfig,
											n.text = this.title ? this.title : this.getJsonTypeName(),
											n.useMarkdown = c.GlobalSettings.useMarkdownInRadioButtonAndCheckbox,
											n.wrap = this.wrap,
											this._checkboxInputLabelElement = n.render(),
											this._checkboxInputLabelElement) {
													this._checkboxInputLabelElement.id = d.generateUniqueId(),
													this._checkboxInputLabelElement.style.display = "inline-block",
													this._checkboxInputLabelElement.style.flex = "1 1 auto",
													this._checkboxInputLabelElement.style.marginLeft = "6px",
													this._checkboxInputLabelElement.style.verticalAlign = "middle";
													var i = document.createElement("div");
													i.style.width = "6px",
													d.appendChild(t, i),
													d.appendChild(t, this._checkboxInputLabelElement)
											}
									}
									return t
							}
							,
							Object.defineProperty(ToggleInput.prototype, "isNullable", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							ToggleInput.prototype.getJsonTypeName = function() {
									return "Input.Toggle"
							}
							,
							ToggleInput.prototype.focus = function() {
									this._checkboxInputElement && this._checkboxInputElement.focus()
							}
							,
							ToggleInput.prototype.isSet = function() {
									return this.isRequired ? this.value === this.valueOn : !!this.value
							}
							,
							ToggleInput.prototype.isDirty = function() {
									return !!this._checkboxInputElement && this._checkboxInputElement.checked !== this._oldCheckboxValue
							}
							,
							Object.defineProperty(ToggleInput.prototype, "value", {
									get: function() {
											return this._checkboxInputElement ? this._checkboxInputElement.checked ? this.valueOn : this.valueOff : void 0
									},
									enumerable: !1,
									configurable: !0
							}),
							ToggleInput.valueProperty = new m.StringProperty(m.Versions.v1_0,"value"),
							ToggleInput.titleProperty = new m.StringProperty(m.Versions.v1_0,"title"),
							ToggleInput.valueOnProperty = new m.StringProperty(m.Versions.v1_0,"valueOn",!0,void 0,"true",(function(e) {
									return "true"
							}
							)),
							ToggleInput.valueOffProperty = new m.StringProperty(m.Versions.v1_0,"valueOff",!0,void 0,"false",(function(e) {
									return "false"
							}
							)),
							ToggleInput.wrapProperty = new m.BoolProperty(m.Versions.v1_2,"wrap",!1),
							o([(0,
							m.property)(ToggleInput.valueProperty)], ToggleInput.prototype, "defaultValue", void 0),
							o([(0,
							m.property)(ToggleInput.titleProperty)], ToggleInput.prototype, "title", void 0),
							o([(0,
							m.property)(ToggleInput.valueOnProperty)], ToggleInput.prototype, "valueOn", void 0),
							o([(0,
							m.property)(ToggleInput.valueOffProperty)], ToggleInput.prototype, "valueOff", void 0),
							o([(0,
							m.property)(ToggleInput.wrapProperty)], ToggleInput.prototype, "wrap", void 0),
							ToggleInput
					}(z);
					t.ToggleInput = H;
					var q = function(e) {
							function Choice(t, n) {
									var i = e.call(this) || this;
									return i.title = t,
									i.value = n,
									i
							}
							return r(Choice, e),
							Choice.prototype.getSchemaKey = function() {
									return "Choice"
							}
							,
							Choice.titleProperty = new m.StringProperty(m.Versions.v1_0,"title"),
							Choice.valueProperty = new m.StringProperty(m.Versions.v1_0,"value"),
							o([(0,
							m.property)(Choice.titleProperty)], Choice.prototype, "title", void 0),
							o([(0,
							m.property)(Choice.valueProperty)], Choice.prototype, "value", void 0),
							Choice
					}(m.SerializableObject);
					t.Choice = q;
					var j = function(e) {
							function ChoiceSetInput() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.isMultiSelect = !1,
									t.wrap = !1,
									t.choices = [],
									t
							}
							return r(ChoiceSetInput, e),
							Object.defineProperty(ChoiceSetInput.prototype, "isCompact", {
									get: function() {
											return !this.style || "compact" === this.style
									},
									set: function(e) {
											this.style = e ? void 0 : "expanded"
									},
									enumerable: !1,
									configurable: !0
							}),
							ChoiceSetInput.getUniqueCategoryName = function() {
									var e = "__ac-category" + ChoiceSetInput._uniqueCategoryCounter;
									return ChoiceSetInput._uniqueCategoryCounter++,
									e
							}
							,
							ChoiceSetInput.prototype.internalApplyAriaCurrent = function() {
									if (this._selectElement) {
											var e = this._selectElement.options;
											if (e)
													for (var t = 0, n = Array.from(e); t < n.length; t++) {
															var i = n[t];
															i.selected ? i.setAttribute("aria-current", "true") : i.removeAttribute("aria-current")
													}
									}
							}
							,
							ChoiceSetInput.prototype.renderCompoundInput = function(e, t, n) {
									var i = this
										, r = document.createElement("div");
									r.className = this.hostConfig.makeCssClassName("ac-input", e),
									r.style.width = "100%",
									r.tabIndex = this.isDesignMode() ? -1 : 0,
									this._toggleInputs = [],
									this._labels = [];
									for (var o = 0, s = this.choices; o < s.length; o++) {
											var a = s[o]
												, l = document.createElement("input");
											l.id = d.generateUniqueId(),
											l.type = t,
											l.style.margin = "0",
											l.style.display = "inline-block",
											l.style.verticalAlign = "middle",
											l.style.flex = "0 0 auto",
											l.name = this.id ? this.id : this._uniqueCategoryName,
											this.isRequired && l.setAttribute("aria-required", "true"),
											l.tabIndex = this.isDesignMode() ? -1 : 0,
											a.value && (l.value = a.value),
											a.title && l.setAttribute("aria-label", a.title),
											n && a.value && n.indexOf(a.value) >= 0 && (l.checked = !0),
											l.onchange = function() {
													i.valueChanged()
											}
											,
											this._toggleInputs.push(l);
											var p = document.createElement("div");
											p.style.display = "flex",
											p.style.alignItems = "center",
											d.appendChild(p, l);
											var u = new S;
											u.setParent(this),
											u.forElementId = l.id,
											u.hostConfig = this.hostConfig,
											u.text = a.title ? a.title : "Choice " + this._toggleInputs.length,
											u.useMarkdown = c.GlobalSettings.useMarkdownInRadioButtonAndCheckbox,
											u.wrap = this.wrap;
											var h = u.render();
											if (this._labels.push(h),
											h) {
													h.id = d.generateUniqueId(),
													h.style.display = "inline-block",
													h.style.flex = "1 1 auto",
													h.style.marginLeft = "6px",
													h.style.verticalAlign = "middle";
													var m = document.createElement("div");
													m.style.width = "6px",
													d.appendChild(p, m),
													d.appendChild(p, h)
											}
											d.appendChild(r, p)
									}
									return r
							}
							,
							ChoiceSetInput.prototype.updateInputControlAriaLabelledBy = function() {
									if ((this.isMultiSelect || "expanded" === this.style) && this._toggleInputs && this._labels)
											for (var t = this.getAllLabelIds(), n = 0; n < this._toggleInputs.length; n++) {
													var i = t.join(" ")
														, r = this._labels[n];
													r && r.id && (i += " " + r.id),
													i ? this._toggleInputs[n].setAttribute("aria-labelledby", i) : this._toggleInputs[n].removeAttribute("aria-labelledby")
											}
									else
											e.prototype.updateInputControlAriaLabelledBy.call(this)
							}
							,
							ChoiceSetInput.prototype.internalRender = function() {
									var e = this;
									if (this._uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName(),
									this.isMultiSelect)
											return this.renderCompoundInput("ac-choiceSetInput-multiSelect", "checkbox", this.defaultValue ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator) : void 0);
									if ("expanded" === this.style)
											return this.renderCompoundInput("ac-choiceSetInput-expanded", "radio", this.defaultValue ? [this.defaultValue] : void 0);
									if ("filtered" === this.style) {
											var t = document.createElement("div");
											t.style.width = "100%",
											this._textInput = document.createElement("input"),
											this._textInput.className = this.hostConfig.makeCssClassName("ac-input", "ac-multichoiceInput", "ac-choiceSetInput-filtered"),
											this._textInput.type = "text",
											this._textInput.style.width = "100%",
											this._textInput.oninput = function() {
													e.valueChanged(),
													e._textInput && (e.value ? (e._textInput.removeAttribute("placeholder"),
													e._textInput.removeAttribute("aria-label")) : e.placeholder && (e._textInput.placeholder = e.placeholder,
													e._textInput.setAttribute("aria-label", e.placeholder)))
											}
											,
											this.defaultValue && (this._textInput.value = this.defaultValue),
											this.placeholder && !this._textInput.value && (this._textInput.placeholder = this.placeholder,
											this._textInput.setAttribute("aria-label", this.placeholder)),
											this._textInput.tabIndex = this.isDesignMode() ? -1 : 0;
											var n = document.createElement("datalist");
											n.id = d.generateUniqueId();
											for (var i = 0, r = this.choices; i < r.length; i++) {
													var o = r[i]
														, s = document.createElement("option");
													o.title && (s.value = o.title,
													s.setAttribute("aria-label", o.title)),
													s.tabIndex = this.isDesignMode() ? -1 : 0,
													n.appendChild(s)
											}
											return this._textInput.setAttribute("list", n.id),
											t.append(this._textInput, n),
											t
									}
									this._selectElement = document.createElement("select"),
									this._selectElement.className = this.hostConfig.makeCssClassName("ac-input", "ac-multichoiceInput", "ac-choiceSetInput-compact"),
									this._selectElement.style.width = "100%",
									this._selectElement.tabIndex = this.isDesignMode() ? -1 : 0;
									var a = document.createElement("option");
									a.selected = !0,
									a.disabled = !0,
									a.hidden = !0,
									a.value = "",
									this.placeholder && (a.text = this.placeholder),
									d.appendChild(this._selectElement, a);
									for (var l = 0, c = this.choices; l < c.length; l++) {
											o = c[l];
											(s = document.createElement("option")).value = o.value,
											o.title && (s.text = o.title,
											s.setAttribute("aria-label", o.title)),
											s.tabIndex = this.isDesignMode() ? -1 : 0,
											o.value === this.defaultValue && (s.selected = !0),
											d.appendChild(this._selectElement, s)
									}
									return this._selectElement.onchange = function() {
											e.internalApplyAriaCurrent(),
											e.valueChanged()
									}
									,
									this.internalApplyAriaCurrent(),
									this._selectElement
							}
							,
							ChoiceSetInput.prototype.getJsonTypeName = function() {
									return "Input.ChoiceSet"
							}
							,
							ChoiceSetInput.prototype.focus = function() {
									this._toggleInputs && (this.isMultiSelect || "expanded" === this.style) ? this._toggleInputs.length > 0 && this._toggleInputs[0].focus() : this._textInput ? this._textInput.focus() : e.prototype.focus.call(this)
							}
							,
							ChoiceSetInput.prototype.internalValidateProperties = function(t) {
									e.prototype.internalValidateProperties.call(this, t),
									0 === this.choices.length && t.addFailure(this, l.ValidationEvent.CollectionCantBeEmpty, _.Strings.errors.choiceSetMustHaveAtLeastOneChoice());
									for (var n = 0, i = this.choices; n < i.length; n++) {
											var r = i[n];
											r.title && r.value || t.addFailure(this, l.ValidationEvent.PropertyCantBeNull, _.Strings.errors.choiceSetChoicesMustHaveTitleAndValue())
									}
							}
							,
							ChoiceSetInput.prototype.isSet = function() {
									return !!this.value
							}
							,
							ChoiceSetInput.prototype.isValid = function() {
									if (this._textInput) {
											if ("" === this.value || this.value === this.placeholder)
													return !0;
											for (var t = 0, n = this.choices; t < n.length; t++) {
													var i = n[t];
													if (this.value === i.value)
															return !0
											}
											return !1
									}
									return e.prototype.isValid.call(this)
							}
							,
							Object.defineProperty(ChoiceSetInput.prototype, "value", {
									get: function() {
											if (this.isMultiSelect) {
													if (!this._toggleInputs || 0 === this._toggleInputs.length)
															return;
													for (var e = "", t = 0, n = this._toggleInputs; t < n.length; t++) {
															(l = n[t]).checked && ("" !== e && (e += this.hostConfig.choiceSetInputValueSeparator),
															e += l.value)
													}
													return e || void 0
											}
											if (this._selectElement)
													return this._selectElement.selectedIndex > 0 ? this._selectElement.value : void 0;
											if (this._textInput) {
													for (var i = 0, r = this.choices; i < r.length; i++) {
															var o = r[i];
															if (o.title && this._textInput.value === o.title)
																	return o.value
													}
													return this._textInput.value
											}
											if (this._toggleInputs && this._toggleInputs.length > 0)
													for (var s = 0, a = this._toggleInputs; s < a.length; s++) {
															var l;
															if ((l = a[s]).checked)
																	return l.value
													}
									},
									enumerable: !1,
									configurable: !0
							}),
							ChoiceSetInput.valueProperty = new m.StringProperty(m.Versions.v1_0,"value"),
							ChoiceSetInput.choicesProperty = new m.SerializableObjectCollectionProperty(m.Versions.v1_0,"choices",q),
							ChoiceSetInput.styleProperty = new m.ValueSetProperty(m.Versions.v1_0,"style",[{
									value: "compact"
							}, {
									value: "expanded"
							}, {
									value: "filtered",
									targetVersion: m.Versions.v1_5
							}],"compact"),
							ChoiceSetInput.isMultiSelectProperty = new m.BoolProperty(m.Versions.v1_0,"isMultiSelect",!1),
							ChoiceSetInput.placeholderProperty = new m.StringProperty(m.Versions.v1_0,"placeholder"),
							ChoiceSetInput.wrapProperty = new m.BoolProperty(m.Versions.v1_2,"wrap",!1),
							ChoiceSetInput._uniqueCategoryCounter = 0,
							o([(0,
							m.property)(ChoiceSetInput.valueProperty)], ChoiceSetInput.prototype, "defaultValue", void 0),
							o([(0,
							m.property)(ChoiceSetInput.styleProperty)], ChoiceSetInput.prototype, "style", void 0),
							o([(0,
							m.property)(ChoiceSetInput.isMultiSelectProperty)], ChoiceSetInput.prototype, "isMultiSelect", void 0),
							o([(0,
							m.property)(ChoiceSetInput.placeholderProperty)], ChoiceSetInput.prototype, "placeholder", void 0),
							o([(0,
							m.property)(ChoiceSetInput.wrapProperty)], ChoiceSetInput.prototype, "wrap", void 0),
							o([(0,
							m.property)(ChoiceSetInput.choicesProperty)], ChoiceSetInput.prototype, "choices", void 0),
							ChoiceSetInput
					}(z);
					t.ChoiceSetInput = j;
					var W = function(e) {
							function NumberInput() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(NumberInput, e),
							NumberInput.prototype.internalRender = function() {
									var e = this;
									return this._numberInputElement = document.createElement("input"),
									this._numberInputElement.setAttribute("type", "number"),
									void 0 !== this.min && this._numberInputElement.setAttribute("min", this.min.toString()),
									void 0 !== this.max && this._numberInputElement.setAttribute("max", this.max.toString()),
									this._numberInputElement.className = this.hostConfig.makeCssClassName("ac-input", "ac-numberInput"),
									this._numberInputElement.style.width = "100%",
									this._numberInputElement.tabIndex = this.isDesignMode() ? -1 : 0,
									void 0 !== this.defaultValue && (this._numberInputElement.valueAsNumber = this.defaultValue),
									this.placeholder && (this._numberInputElement.placeholder = this.placeholder,
									this._numberInputElement.setAttribute("aria-label", this.placeholder)),
									this._numberInputElement.oninput = function() {
											e.valueChanged()
									}
									,
									this._numberInputElement
							}
							,
							NumberInput.prototype.getJsonTypeName = function() {
									return "Input.Number"
							}
							,
							NumberInput.prototype.isSet = function() {
									return void 0 !== this.value && !isNaN(this.value)
							}
							,
							NumberInput.prototype.isValid = function() {
									if (void 0 === this.value)
											return !this.isRequired;
									var e = !0;
									return void 0 !== this.min && (e = e && this.value >= this.min),
									void 0 !== this.max && (e = e && this.value <= this.max),
									e
							}
							,
							Object.defineProperty(NumberInput.prototype, "value", {
									get: function() {
											return this._numberInputElement ? this._numberInputElement.valueAsNumber : void 0
									},
									set: function(e) {
											e && this._numberInputElement && (this._numberInputElement.value = e.toString())
									},
									enumerable: !1,
									configurable: !0
							}),
							NumberInput.valueProperty = new m.NumProperty(m.Versions.v1_0,"value"),
							NumberInput.placeholderProperty = new m.StringProperty(m.Versions.v1_0,"placeholder"),
							NumberInput.minProperty = new m.NumProperty(m.Versions.v1_0,"min"),
							NumberInput.maxProperty = new m.NumProperty(m.Versions.v1_0,"max"),
							o([(0,
							m.property)(NumberInput.valueProperty)], NumberInput.prototype, "defaultValue", void 0),
							o([(0,
							m.property)(NumberInput.minProperty)], NumberInput.prototype, "min", void 0),
							o([(0,
							m.property)(NumberInput.maxProperty)], NumberInput.prototype, "max", void 0),
							o([(0,
							m.property)(NumberInput.placeholderProperty)], NumberInput.prototype, "placeholder", void 0),
							NumberInput
					}(z);
					t.NumberInput = W;
					var Y = function(e) {
							function DateInput() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(DateInput, e),
							DateInput.prototype.internalRender = function() {
									var e = this;
									return this._dateInputElement = document.createElement("input"),
									this._dateInputElement.setAttribute("type", "date"),
									this.min && this._dateInputElement.setAttribute("min", this.min),
									this.max && this._dateInputElement.setAttribute("max", this.max),
									this.placeholder && (this._dateInputElement.placeholder = this.placeholder,
									this._dateInputElement.setAttribute("aria-label", this.placeholder)),
									this._dateInputElement.tabIndex = this.isDesignMode() ? -1 : 0,
									this._dateInputElement.className = this.hostConfig.makeCssClassName("ac-input", "ac-dateInput"),
									this._dateInputElement.style.width = "100%",
									this._dateInputElement.oninput = function() {
											e.valueChanged()
									}
									,
									this.defaultValue && (this._dateInputElement.value = this.defaultValue),
									this._dateInputElement
							}
							,
							DateInput.prototype.getJsonTypeName = function() {
									return "Input.Date"
							}
							,
							DateInput.prototype.isSet = function() {
									return !!this.value
							}
							,
							DateInput.prototype.isValid = function() {
									if (!this.value)
											return !this.isRequired;
									var e = new Date(this.value)
										, t = !0;
									if (this.min) {
											var n = new Date(this.min);
											t = t && e >= n
									}
									if (this.max) {
											var i = new Date(this.max);
											t = t && e <= i
									}
									return t
							}
							,
							Object.defineProperty(DateInput.prototype, "value", {
									get: function() {
											return this._dateInputElement ? this._dateInputElement.value : void 0
									},
									enumerable: !1,
									configurable: !0
							}),
							DateInput.valueProperty = new m.StringProperty(m.Versions.v1_0,"value"),
							DateInput.placeholderProperty = new m.StringProperty(m.Versions.v1_0,"placeholder"),
							DateInput.minProperty = new m.StringProperty(m.Versions.v1_0,"min"),
							DateInput.maxProperty = new m.StringProperty(m.Versions.v1_0,"max"),
							o([(0,
							m.property)(DateInput.valueProperty)], DateInput.prototype, "defaultValue", void 0),
							o([(0,
							m.property)(DateInput.minProperty)], DateInput.prototype, "min", void 0),
							o([(0,
							m.property)(DateInput.maxProperty)], DateInput.prototype, "max", void 0),
							o([(0,
							m.property)(DateInput.placeholderProperty)], DateInput.prototype, "placeholder", void 0),
							DateInput
					}(z);
					t.DateInput = Y;
					var K = function(e) {
							function TimeProperty(t, n) {
									var i = e.call(this, t, n, (function(e, t, n, i) {
											var r = n[t.name];
											if ("string" == typeof r && r && /^[0-9]{2}:[0-9]{2}$/.test(r))
													return r
									}
									), (function(e, t, n, i, r) {
											r.serializeValue(n, t.name, i)
									}
									)) || this;
									return i.targetVersion = t,
									i.name = n,
									i
							}
							return r(TimeProperty, e),
							TimeProperty
					}(m.CustomProperty);
					t.TimeProperty = K;
					var Q = function(e) {
							function TimeInput() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(TimeInput, e),
							TimeInput.convertTimeStringToDate = function(e) {
									return new Date("1973-09-04T" + e + ":00Z")
							}
							,
							TimeInput.prototype.internalRender = function() {
									var e = this;
									return this._timeInputElement = document.createElement("input"),
									this._timeInputElement.setAttribute("type", "time"),
									this.min && this._timeInputElement.setAttribute("min", this.min),
									this.max && this._timeInputElement.setAttribute("max", this.max),
									this._timeInputElement.className = this.hostConfig.makeCssClassName("ac-input", "ac-timeInput"),
									this._timeInputElement.style.width = "100%",
									this._timeInputElement.oninput = function() {
											e.valueChanged()
									}
									,
									this.placeholder && (this._timeInputElement.placeholder = this.placeholder,
									this._timeInputElement.setAttribute("aria-label", this.placeholder)),
									this._timeInputElement.tabIndex = this.isDesignMode() ? -1 : 0,
									this.defaultValue && (this._timeInputElement.value = this.defaultValue),
									this._timeInputElement
							}
							,
							TimeInput.prototype.getJsonTypeName = function() {
									return "Input.Time"
							}
							,
							TimeInput.prototype.isSet = function() {
									return !!this.value
							}
							,
							TimeInput.prototype.isValid = function() {
									if (!this.value)
											return !this.isRequired;
									var e = TimeInput.convertTimeStringToDate(this.value)
										, t = !0;
									if (this.min) {
											var n = TimeInput.convertTimeStringToDate(this.min);
											t = t && e >= n
									}
									if (this.max) {
											var i = TimeInput.convertTimeStringToDate(this.max);
											t = t && e <= i
									}
									return t
							}
							,
							Object.defineProperty(TimeInput.prototype, "value", {
									get: function() {
											return this._timeInputElement ? this._timeInputElement.value : void 0
									},
									enumerable: !1,
									configurable: !0
							}),
							TimeInput.valueProperty = new K(m.Versions.v1_0,"value"),
							TimeInput.placeholderProperty = new m.StringProperty(m.Versions.v1_0,"placeholder"),
							TimeInput.minProperty = new K(m.Versions.v1_0,"min"),
							TimeInput.maxProperty = new K(m.Versions.v1_0,"max"),
							o([(0,
							m.property)(TimeInput.valueProperty)], TimeInput.prototype, "defaultValue", void 0),
							o([(0,
							m.property)(TimeInput.minProperty)], TimeInput.prototype, "min", void 0),
							o([(0,
							m.property)(TimeInput.maxProperty)], TimeInput.prototype, "max", void 0),
							o([(0,
							m.property)(TimeInput.placeholderProperty)], TimeInput.prototype, "placeholder", void 0),
							TimeInput
					}(z);
					t.TimeInput = Q;
					var Z = function(e) {
							function Action() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.style = l.ActionStyle.Default,
									t.mode = l.ActionMode.Primary,
									t._state = 0,
									t._isFocusable = !0,
									t
							}
							return r(Action, e),
							Action.prototype.renderButtonContent = function() {
									if (this.renderedElement) {
											var e = this.hostConfig
												, t = document.createElement("div");
											if (t.style.overflow = "hidden",
											t.style.textOverflow = "ellipsis",
											e.actions.iconPlacement === l.ActionIconPlacement.AboveTitle || e.actions.allowTitleToWrap || (t.style.whiteSpace = "nowrap"),
											this.title && (t.innerText = this.title),
											this.iconUrl) {
													var n = document.createElement("img");
													n.src = this.iconUrl,
													n.style.width = e.actions.iconSize + "px",
													n.style.height = e.actions.iconSize + "px",
													n.style.flex = "0 0 auto",
													e.actions.iconPlacement === l.ActionIconPlacement.AboveTitle ? (this.renderedElement.classList.add("iconAbove"),
													this.renderedElement.style.flexDirection = "column",
													this.title && (n.style.marginBottom = "6px")) : (this.renderedElement.classList.add("iconLeft"),
													n.style.maxHeight = "100%",
													this.title && (n.style.marginRight = "6px")),
													this.renderedElement.appendChild(n),
													this.renderedElement.appendChild(t)
											} else
													this.renderedElement.classList.add("noIcon"),
													this.renderedElement.appendChild(t)
									}
							}
							,
							Action.prototype.getParentContainer = function() {
									return this.parent instanceof me ? this.parent : this.parent ? this.parent.getParentContainer() : void 0
							}
							,
							Action.prototype.isDesignMode = function() {
									var e = this.getRootObject();
									return e instanceof y && e.isDesignMode()
							}
							,
							Action.prototype.updateCssClasses = function() {
									var e, t;
									if (this.parent && this.renderedElement) {
											var n = this.parent.hostConfig;
											this.renderedElement.className = n.makeCssClassName(this.isEffectivelyEnabled() ? "ac-pushButton" : "ac-pushButton-disabled");
											var i = this.getParentContainer();
											if (i) {
													var r = i.getEffectiveStyle();
													r && this.renderedElement.classList.add("style-" + r)
											}
											switch (this.renderedElement.tabIndex = !this.isDesignMode() && this.isFocusable ? 0 : -1,
											this._state) {
											case 0:
													break;
											case 1:
													this.renderedElement.classList.add(n.makeCssClassName("expanded"));
													break;
											case 2:
													this.renderedElement.classList.add(n.makeCssClassName("subdued"))
											}
											this.style && this.isEffectivelyEnabled() && (this.style === l.ActionStyle.Positive ? (e = this.renderedElement.classList).add.apply(e, n.makeCssClassNames("primary", "style-positive")) : (t = this.renderedElement.classList).add.apply(t, n.makeCssClassNames("style-" + this.style.toLowerCase())))
									}
							}
							,
							Action.prototype.getDefaultSerializationContext = function() {
									return new Ie
							}
							,
							Action.prototype.internalGetReferencedInputs = function() {
									return {}
							}
							,
							Action.prototype.internalPrepareForExecution = function(e) {}
							,
							Action.prototype.internalValidateInputs = function(e) {
									var t = [];
									if (e)
											for (var n = 0, i = Object.keys(e); n < i.length; n++) {
													var r = e[i[n]];
													r.validateValue() || t.push(r)
											}
									return t
							}
							,
							Action.prototype.shouldSerialize = function(e) {
									return void 0 !== e.actionRegistry.findByName(this.getJsonTypeName())
							}
							,
							Action.prototype.raiseExecuteActionEvent = function() {
									var e, t, n;
									this.onExecute && this.onExecute(this),
									t = (e = this).parent ? e.parent.getRootElement() : void 0,
									n = t && t.onExecuteAction ? t.onExecuteAction : Ee.onExecuteAction,
									e.prepareForExecution() && n && n(e)
							}
							,
							Action.prototype.internalAfterExecute = function() {
									var e = this.getRootObject();
									e instanceof y && e.updateActionsEnabledState()
							}
							,
							Action.prototype.getHref = function() {
									return ""
							}
							,
							Action.prototype.getAriaRole = function() {
									return "button"
							}
							,
							Action.prototype.setupElementForAccessibility = function(e, t) {
									if (void 0 === t && (t = !1),
									e.tabIndex = this.isEffectivelyEnabled() && !this.isDesignMode() ? 0 : -1,
									e.setAttribute("role", this.getAriaRole()),
									e instanceof HTMLButtonElement && (e.disabled = !this.isEffectivelyEnabled()),
									this.isEffectivelyEnabled() ? (e.removeAttribute("aria-disabled"),
									e.classList.add(this.hostConfig.makeCssClassName("ac-selectable"))) : e.setAttribute("aria-disabled", "true"),
									this.title ? (e.setAttribute("aria-label", this.title),
									e.title = this.title) : (e.removeAttribute("aria-label"),
									e.removeAttribute("title")),
									this.tooltip) {
											var n = t ? this.title ? "aria-description" : "aria-label" : "aria-description";
											e.setAttribute(n, this.tooltip),
											e.title = this.tooltip
									}
							}
							,
							Action.prototype.parse = function(t, n) {
									return e.prototype.parse.call(this, t, n || new Ie)
							}
							,
							Action.prototype.render = function() {
									var e = this
										, t = document.createElement("button");
									t.type = "button",
									t.style.display = "flex",
									t.style.alignItems = "center",
									t.style.justifyContent = "center",
									t.onclick = function(t) {
											e.isEffectivelyEnabled() && (t.preventDefault(),
											t.cancelBubble = !0,
											e.execute())
									}
									,
									this._renderedElement = t,
									this.renderButtonContent(),
									this.updateCssClasses(),
									this.setupElementForAccessibility(t)
							}
							,
							Action.prototype.execute = function() {
									this._actionCollection && this._actionCollection.actionExecuted(this),
									this.raiseExecuteActionEvent(),
									this.internalAfterExecute()
							}
							,
							Action.prototype.prepareForExecution = function() {
									var e = this.getReferencedInputs()
										, t = this.internalValidateInputs(e);
									return t.length > 0 ? (t[0].focus(),
									!1) : (this.internalPrepareForExecution(e),
									!0)
							}
							,
							Action.prototype.remove = function() {
									return !!this._actionCollection && this._actionCollection.removeAction(this)
							}
							,
							Action.prototype.getAllInputs = function(e) {
									return void 0 === e && (e = !0),
									[]
							}
							,
							Action.prototype.getAllActions = function() {
									return [this]
							}
							,
							Action.prototype.getResourceInformation = function() {
									return this.iconUrl ? [{
											url: this.iconUrl,
											mimeType: "image"
									}] : []
							}
							,
							Action.prototype.getActionById = function(e) {
									return this.id === e ? this : void 0
							}
							,
							Action.prototype.getReferencedInputs = function() {
									return this.internalGetReferencedInputs()
							}
							,
							Action.prototype.validateInputs = function() {
									return this.internalValidateInputs(this.getReferencedInputs())
							}
							,
							Action.prototype.updateEnabledState = function() {}
							,
							Action.prototype.isEffectivelyEnabled = function() {
									return this.isEnabled
							}
							,
							Object.defineProperty(Action.prototype, "isPrimary", {
									get: function() {
											return this.style === l.ActionStyle.Positive
									},
									set: function(e) {
											e ? this.style = l.ActionStyle.Positive : this.style === l.ActionStyle.Positive && (this.style = l.ActionStyle.Default)
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(Action.prototype, "hostConfig", {
									get: function() {
											return this.parent ? this.parent.hostConfig : p.defaultHostConfig
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(Action.prototype, "parent", {
									get: function() {
											return this._parent
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(Action.prototype, "state", {
									get: function() {
											return this._state
									},
									set: function(e) {
											this._state !== e && (this._state = e,
											this.updateCssClasses())
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(Action.prototype, "isFocusable", {
									get: function() {
											return this._isFocusable
									},
									set: function(e) {
											this._isFocusable !== e && (this._isFocusable = e,
											this.updateCssClasses())
									},
									enumerable: !1,
									configurable: !0
							}),
							Action.titleProperty = new m.StringProperty(m.Versions.v1_0,"title"),
							Action.iconUrlProperty = new m.StringProperty(m.Versions.v1_1,"iconUrl"),
							Action.styleProperty = new m.ValueSetProperty(m.Versions.v1_2,"style",[{
									value: l.ActionStyle.Default
							}, {
									value: l.ActionStyle.Positive
							}, {
									value: l.ActionStyle.Destructive
							}],l.ActionStyle.Default),
							Action.modeProperty = new m.ValueSetProperty(m.Versions.v1_5,"mode",[{
									value: l.ActionMode.Primary
							}, {
									value: l.ActionMode.Secondary
							}],l.ActionMode.Primary),
							Action.tooltipProperty = new m.StringProperty(m.Versions.v1_5,"tooltip"),
							Action.isEnabledProperty = new m.BoolProperty(m.Versions.v1_5,"isEnabled",!0),
							o([(0,
							m.property)(Action.titleProperty)], Action.prototype, "title", void 0),
							o([(0,
							m.property)(Action.iconUrlProperty)], Action.prototype, "iconUrl", void 0),
							o([(0,
							m.property)(Action.styleProperty)], Action.prototype, "style", void 0),
							o([(0,
							m.property)(Action.modeProperty)], Action.prototype, "mode", void 0),
							o([(0,
							m.property)(Action.tooltipProperty)], Action.prototype, "tooltip", void 0),
							o([(0,
							m.property)(Action.isEnabledProperty)], Action.prototype, "isEnabled", void 0),
							Action
					}(h.CardObject);
					t.Action = Z;
					var X = function(e) {
							function SubmitActionBase() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.disabledUnlessAssociatedInputsChange = !1,
									t._isPrepared = !1,
									t._areReferencedInputsDirty = !1,
									t
							}
							return r(SubmitActionBase, e),
							SubmitActionBase.prototype.internalGetReferencedInputs = function() {
									var e = {};
									if ("none" !== this.associatedInputs) {
											for (var t = this.parent, n = []; t; )
													n.push.apply(n, t.getAllInputs(!1)),
													t = t.parent;
											for (var i = 0, r = n; i < r.length; i++) {
													var o = r[i];
													o.id && (e[o.id] = o)
											}
									}
									return e
							}
							,
							SubmitActionBase.prototype.internalPrepareForExecution = function(e) {
									if (this._originalData ? this._processedData = JSON.parse(JSON.stringify(this._originalData)) : this._processedData = {},
									this._processedData && e)
											for (var t = 0, n = Object.keys(e); t < n.length; t++) {
													var i = e[n[t]];
													i.id && i.isSet() && (this._processedData[i.id] = "string" == typeof i.value ? i.value : i.value.toString())
											}
									this._isPrepared = !0
							}
							,
							SubmitActionBase.prototype.internalAfterExecute = function() {
									c.GlobalSettings.resetInputsDirtyStateAfterActionExecution && this.resetReferencedInputsDirtyState()
							}
							,
							SubmitActionBase.prototype.resetReferencedInputsDirtyState = function() {
									var e = this.getReferencedInputs();
									if (this._areReferencedInputsDirty = !1,
									e)
											for (var t = 0, n = Object.keys(e); t < n.length; t++) {
													e[n[t]].resetDirtyState()
											}
							}
							,
							SubmitActionBase.prototype.updateEnabledState = function() {
									this._areReferencedInputsDirty = !1;
									var e = this.getReferencedInputs();
									if (e)
											for (var t = 0, n = Object.keys(e); t < n.length; t++) {
													if (e[n[t]].isDirty()) {
															this._areReferencedInputsDirty = !0;
															break
													}
											}
									this.updateCssClasses(),
									this._renderedElement && this.setupElementForAccessibility(this._renderedElement)
							}
							,
							SubmitActionBase.prototype.isEffectivelyEnabled = function() {
									var t = e.prototype.isEffectivelyEnabled.call(this);
									return this.disabledUnlessAssociatedInputsChange ? t && this._areReferencedInputsDirty : t
							}
							,
							Object.defineProperty(SubmitActionBase.prototype, "data", {
									get: function() {
											return this._isPrepared ? this._processedData : this._originalData
									},
									set: function(e) {
											this._originalData = e,
											this._isPrepared = !1
									},
									enumerable: !1,
									configurable: !0
							}),
							SubmitActionBase.dataProperty = new m.PropertyDefinition(m.Versions.v1_0,"data"),
							SubmitActionBase.associatedInputsProperty = new m.CustomProperty(m.Versions.v1_3,"associatedInputs",(function(e, t, n, i) {
									var r = n[t.name];
									if (void 0 !== r && "string" == typeof r)
											return "none" === r.toLowerCase() ? "none" : "auto"
							}
							),(function(e, t, n, i, r) {
									r.serializeValue(n, t.name, i)
							}
							)),
							SubmitActionBase.disabledUnlessAssociatedInputsChangeProperty = new m.BoolProperty(m.Versions.v1_6,"disabledUnlessAssociatedInputsChange",!1),
							o([(0,
							m.property)(SubmitActionBase.dataProperty)], SubmitActionBase.prototype, "_originalData", void 0),
							o([(0,
							m.property)(SubmitActionBase.associatedInputsProperty)], SubmitActionBase.prototype, "associatedInputs", void 0),
							o([(0,
							m.property)(SubmitActionBase.disabledUnlessAssociatedInputsChangeProperty)], SubmitActionBase.prototype, "disabledUnlessAssociatedInputsChange", void 0),
							SubmitActionBase
					}(Z);
					t.SubmitActionBase = X;
					var J = function(e) {
							function SubmitAction() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(SubmitAction, e),
							SubmitAction.prototype.getJsonTypeName = function() {
									return SubmitAction.JsonTypeName
							}
							,
							SubmitAction.JsonTypeName = "Action.Submit",
							SubmitAction
					}(X);
					t.SubmitAction = J;
					var ee = function(e) {
							function ExecuteAction() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(ExecuteAction, e),
							ExecuteAction.prototype.getJsonTypeName = function() {
									return ExecuteAction.JsonTypeName
							}
							,
							ExecuteAction.JsonTypeName = "Action.Execute",
							ExecuteAction.verbProperty = new m.StringProperty(m.Versions.v1_4,"verb"),
							o([(0,
							m.property)(ExecuteAction.verbProperty)], ExecuteAction.prototype, "verb", void 0),
							ExecuteAction
					}(X);
					t.ExecuteAction = ee;
					var te = function(e) {
							function OpenUrlAction() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(OpenUrlAction, e),
							OpenUrlAction.prototype.getJsonTypeName = function() {
									return OpenUrlAction.JsonTypeName
							}
							,
							OpenUrlAction.prototype.getAriaRole = function() {
									return "link"
							}
							,
							OpenUrlAction.prototype.internalValidateProperties = function(t) {
									e.prototype.internalValidateProperties.call(this, t),
									this.url || t.addFailure(this, l.ValidationEvent.PropertyCantBeNull, _.Strings.errors.propertyMustBeSet("url"))
							}
							,
							OpenUrlAction.prototype.getHref = function() {
									return this.url
							}
							,
							OpenUrlAction.urlProperty = new m.StringProperty(m.Versions.v1_0,"url"),
							OpenUrlAction.JsonTypeName = "Action.OpenUrl",
							o([(0,
							m.property)(OpenUrlAction.urlProperty)], OpenUrlAction.prototype, "url", void 0),
							OpenUrlAction
					}(Z);
					t.OpenUrlAction = te;
					var ne = function(e) {
							function ToggleVisibilityAction() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.targetElements = {},
									t
							}
							return r(ToggleVisibilityAction, e),
							ToggleVisibilityAction.prototype.updateAriaControlsAttribute = function() {
									if (this.targetElements) {
											var e = Object.keys(this.targetElements);
											this._renderedElement && (e.length > 0 ? this._renderedElement.setAttribute("aria-controls", e.join(" ")) : this._renderedElement.removeAttribute("aria-controls"))
									}
							}
							,
							ToggleVisibilityAction.prototype.internalValidateProperties = function(t) {
									e.prototype.internalValidateProperties.call(this, t),
									this.targetElements || t.addFailure(this, l.ValidationEvent.PropertyCantBeNull, _.Strings.errors.propertyMustBeSet("targetElements"))
							}
							,
							ToggleVisibilityAction.prototype.getJsonTypeName = function() {
									return ToggleVisibilityAction.JsonTypeName
							}
							,
							ToggleVisibilityAction.prototype.render = function() {
									e.prototype.render.call(this),
									this.updateAriaControlsAttribute()
							}
							,
							ToggleVisibilityAction.prototype.execute = function() {
									if (e.prototype.execute.call(this),
									this.parent)
											for (var t = 0, n = Object.keys(this.targetElements); t < n.length; t++) {
													var i = n[t]
														, r = this.parent.getRootElement().getElementById(i);
													r && ("boolean" == typeof this.targetElements[i] ? r.isVisible = this.targetElements[i] : r.isVisible = !r.isVisible)
											}
							}
							,
							ToggleVisibilityAction.prototype.addTargetElement = function(e, t) {
									void 0 === t && (t = void 0),
									this.targetElements[e] = t,
									this.updateAriaControlsAttribute()
							}
							,
							ToggleVisibilityAction.prototype.removeTargetElement = function(e) {
									delete this.targetElements[e],
									this.updateAriaControlsAttribute()
							}
							,
							ToggleVisibilityAction.targetElementsProperty = new m.CustomProperty(m.Versions.v1_2,"targetElements",(function(e, t, n, i) {
									var r = {};
									if (Array.isArray(n[t.name]))
											for (var o = 0, s = n[t.name]; o < s.length; o++) {
													var a = s[o];
													if ("string" == typeof a)
															r[a] = void 0;
													else if ("object" == typeof a) {
															var l = a.elementId;
															"string" == typeof l && (r[l] = d.parseBool(a.isVisible))
													}
											}
									return r
							}
							),(function(e, t, n, i, r) {
									for (var o = [], s = 0, a = Object.keys(i); s < a.length; s++) {
											var l = a[s];
											"boolean" == typeof i[l] ? o.push({
													elementId: l,
													isVisible: i[l]
											}) : o.push(l)
									}
									r.serializeArray(n, t.name, o)
							}
							),{},(function(e) {
									return {}
							}
							)),
							ToggleVisibilityAction.JsonTypeName = "Action.ToggleVisibility",
							o([(0,
							m.property)(ToggleVisibilityAction.targetElementsProperty)], ToggleVisibilityAction.prototype, "targetElements", void 0),
							ToggleVisibilityAction
					}(Z);
					t.ToggleVisibilityAction = ne;
					var ie = function(e) {
							function StringWithSubstitutionProperty(t, n) {
									var i = e.call(this, t, n, void 0, (function() {
											return new c.StringWithSubstitutions
									}
									)) || this;
									return i.targetVersion = t,
									i.name = n,
									i
							}
							return r(StringWithSubstitutionProperty, e),
							StringWithSubstitutionProperty.prototype.parse = function(e, t, n) {
									var i = new c.StringWithSubstitutions;
									return i.set(d.parseString(t[this.name])),
									i
							}
							,
							StringWithSubstitutionProperty.prototype.toJSON = function(e, t, n, i) {
									i.serializeValue(t, this.name, n.getOriginal())
							}
							,
							StringWithSubstitutionProperty
					}(m.PropertyDefinition)
						, re = function(e) {
							function HttpHeader(t, n) {
									void 0 === t && (t = ""),
									void 0 === n && (n = "");
									var i = e.call(this) || this;
									return i.name = t,
									i.value = n,
									i
							}
							return r(HttpHeader, e),
							HttpHeader.prototype.getSchemaKey = function() {
									return "HttpHeader"
							}
							,
							HttpHeader.prototype.getReferencedInputs = function(e, t) {
									this._value.getReferencedInputs(e, t)
							}
							,
							HttpHeader.prototype.prepareForExecution = function(e) {
									this._value.substituteInputValues(e, c.ContentTypes.applicationXWwwFormUrlencoded)
							}
							,
							Object.defineProperty(HttpHeader.prototype, "value", {
									get: function() {
											return this._value.get()
									},
									set: function(e) {
											this._value.set(e)
									},
									enumerable: !1,
									configurable: !0
							}),
							HttpHeader.nameProperty = new m.StringProperty(m.Versions.v1_0,"name"),
							HttpHeader.valueProperty = new ie(m.Versions.v1_0,"value"),
							o([(0,
							m.property)(HttpHeader.nameProperty)], HttpHeader.prototype, "name", void 0),
							o([(0,
							m.property)(HttpHeader.valueProperty)], HttpHeader.prototype, "_value", void 0),
							HttpHeader
					}(m.SerializableObject);
					t.HttpHeader = re;
					var oe = function(e) {
							function HttpAction() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t._ignoreInputValidation = !1,
									t
							}
							return r(HttpAction, e),
							HttpAction.prototype.internalGetReferencedInputs = function() {
									var e = this.parent ? this.parent.getRootElement().getAllInputs() : []
										, t = {};
									this._url.getReferencedInputs(e, t);
									for (var n = 0, i = this.headers; n < i.length; n++) {
											i[n].getReferencedInputs(e, t)
									}
									return this._body.getReferencedInputs(e, t),
									t
							}
							,
							HttpAction.prototype.internalPrepareForExecution = function(e) {
									if (e) {
											this._url.substituteInputValues(e, c.ContentTypes.applicationXWwwFormUrlencoded);
											for (var t = c.ContentTypes.applicationJson, n = 0, i = this.headers; n < i.length; n++) {
													var r = i[n];
													r.prepareForExecution(e),
													r.name && "content-type" === r.name.toLowerCase() && (t = r.value)
											}
											this._body.substituteInputValues(e, t)
									}
							}
							,
							HttpAction.prototype.getJsonTypeName = function() {
									return HttpAction.JsonTypeName
							}
							,
							HttpAction.prototype.internalValidateProperties = function(t) {
									if (e.prototype.internalValidateProperties.call(this, t),
									this.url || t.addFailure(this, l.ValidationEvent.PropertyCantBeNull, _.Strings.errors.propertyMustBeSet("url")),
									this.headers.length > 0)
											for (var n = 0, i = this.headers; n < i.length; n++) {
													i[n].name || t.addFailure(this, l.ValidationEvent.PropertyCantBeNull, _.Strings.errors.actionHttpHeadersMustHaveNameAndValue())
											}
							}
							,
							Object.defineProperty(HttpAction.prototype, "ignoreInputValidation", {
									get: function() {
											return this._ignoreInputValidation
									},
									set: function(e) {
											this._ignoreInputValidation = e
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(HttpAction.prototype, "url", {
									get: function() {
											return this._url.get()
									},
									set: function(e) {
											this._url.set(e)
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(HttpAction.prototype, "body", {
									get: function() {
											return this._body.get()
									},
									set: function(e) {
											this._body.set(e)
									},
									enumerable: !1,
									configurable: !0
							}),
							HttpAction.urlProperty = new ie(m.Versions.v1_0,"url"),
							HttpAction.bodyProperty = new ie(m.Versions.v1_0,"body"),
							HttpAction.methodProperty = new m.StringProperty(m.Versions.v1_0,"method"),
							HttpAction.headersProperty = new m.SerializableObjectCollectionProperty(m.Versions.v1_0,"headers",re),
							HttpAction.ignoreInputValidationProperty = new m.BoolProperty(m.Versions.v1_3,"ignoreInputValidation",!1),
							HttpAction.JsonTypeName = "Action.Http",
							o([(0,
							m.property)(HttpAction.urlProperty)], HttpAction.prototype, "_url", void 0),
							o([(0,
							m.property)(HttpAction.bodyProperty)], HttpAction.prototype, "_body", void 0),
							o([(0,
							m.property)(HttpAction.methodProperty)], HttpAction.prototype, "method", void 0),
							o([(0,
							m.property)(HttpAction.headersProperty)], HttpAction.prototype, "headers", void 0),
							o([(0,
							m.property)(HttpAction.ignoreInputValidationProperty)], HttpAction.prototype, "_ignoreInputValidation", void 0),
							HttpAction
					}(Z);
					t.HttpAction = oe;
					var se = function(e) {
							function ShowCardAction() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.card = new Te,
									t
							}
							return r(ShowCardAction, e),
							ShowCardAction.prototype.updateCssClasses = function() {
									if (e.prototype.updateCssClasses.call(this),
									this.renderedElement) {
											var t = this.parent ? this.parent.hostConfig : p.defaultHostConfig;
											this.renderedElement.classList.add(t.makeCssClassName("expandable")),
											this.renderedElement.setAttribute("aria-expanded", (1 === this.state).toString())
									}
							}
							,
							ShowCardAction.prototype.internalParse = function(t, n) {
									e.prototype.internalParse.call(this, t, n);
									var i = t.card;
									i ? this.card.parse(i, n) : n.logParseEvent(this, l.ValidationEvent.PropertyCantBeNull, _.Strings.errors.showCardMustHaveCard())
							}
							,
							ShowCardAction.prototype.internalToJSON = function(t, n) {
									e.prototype.internalToJSON.call(this, t, n),
									this.card && n.serializeValue(t, "card", this.card.toJSON(n))
							}
							,
							ShowCardAction.prototype.raiseExecuteActionEvent = function() {
									this.hostConfig.actions.showCard.actionMode === l.ShowCardActionMode.Popup && e.prototype.raiseExecuteActionEvent.call(this)
							}
							,
							ShowCardAction.prototype.releaseDOMResources = function() {
									e.prototype.releaseDOMResources.call(this),
									this.card.releaseDOMResources()
							}
							,
							ShowCardAction.prototype.getJsonTypeName = function() {
									return ShowCardAction.JsonTypeName
							}
							,
							ShowCardAction.prototype.internalValidateProperties = function(t) {
									e.prototype.internalValidateProperties.call(this, t),
									this.card.internalValidateProperties(t)
							}
							,
							ShowCardAction.prototype.setParent = function(t) {
									e.prototype.setParent.call(this, t),
									this.card.setParent(t)
							}
							,
							ShowCardAction.prototype.getAllInputs = function(e) {
									return void 0 === e && (e = !0),
									this.card.getAllInputs(e)
							}
							,
							ShowCardAction.prototype.getAllActions = function() {
									var t = e.prototype.getAllActions.call(this);
									return t.push.apply(t, this.card.getAllActions()),
									t
							}
							,
							ShowCardAction.prototype.getResourceInformation = function() {
									var t = e.prototype.getResourceInformation.call(this);
									return t.push.apply(t, this.card.getResourceInformation()),
									t
							}
							,
							ShowCardAction.prototype.getActionById = function(t) {
									var n = e.prototype.getActionById.call(this, t);
									return n || (n = this.card.getActionById(t)),
									n
							}
							,
							ShowCardAction.JsonTypeName = "Action.ShowCard",
							ShowCardAction
					}(Z);
					t.ShowCardAction = se;
					var ae = function(e) {
							function OverflowAction(t) {
									var n = e.call(this) || this;
									return n._actions = t,
									n.title = _.Strings.defaults.overflowButtonText(),
									n.tooltip = _.Strings.defaults.overflowButtonTooltip(),
									n
							}
							return r(OverflowAction, e),
							OverflowAction.prototype.getActions = function() {
									return this._actions
							}
							,
							OverflowAction.prototype.getAllActions = function() {
									var t = e.prototype.getAllActions.call(this);
									return t.push.apply(t, this._actions),
									t
							}
							,
							OverflowAction.prototype.getJsonTypeName = function() {
									return se.JsonTypeName
							}
							,
							OverflowAction.prototype.execute = function() {
									var e, t, n, i, r, o = this;
									if ((t = this,
									n = this.renderedElement,
									i = t.parent ? t.parent.getRootElement() : void 0,
									!(void 0 !== (r = i && i.onDisplayOverflowActionMenu ? i.onDisplayOverflowActionMenu : Ee.onDisplayOverflowActionMenu) && r(t.getActions(), n))) && this.renderedElement) {
											var s = new f.PopupMenu;
											s.hostConfig = this.hostConfig;
											for (var _loop_2 = function(t) {
													var n = new f.MenuItem(t.toString(),null !== (e = a._actions[t].title) && void 0 !== e ? e : "");
													n.isEnabled = a._actions[t].isEnabled,
													n.onClick = function() {
															var e = o._actions[t];
															s.closePopup(!1),
															e.isEnabled && e.execute()
													}
													,
													s.items.add(n)
											}, a = this, l = 0; l < this._actions.length; l++)
													_loop_2(l);
											s.onClose = function() {
													var e;
													null === (e = o.renderedElement) || void 0 === e || e.setAttribute("aria-expanded", "false")
											}
											,
											this.renderedElement.setAttribute("aria-expanded", "true"),
											s.popup(this.renderedElement)
									}
							}
							,
							OverflowAction.prototype.setupElementForAccessibility = function(t, n) {
									void 0 === n && (n = !1),
									e.prototype.setupElementForAccessibility.call(this, t, n),
									t.setAttribute("aria-label", _.Strings.defaults.overflowButtonTooltip()),
									t.setAttribute("aria-expanded", "false")
							}
							,
							OverflowAction.JsonTypeName = "Action.Overflow",
							OverflowAction
					}(Z)
						, le = function() {
							function ActionCollection(e) {
									this._items = [],
									this._renderedActions = [],
									this._owner = e
							}
							return ActionCollection.prototype.isActionAllowed = function(e) {
									var t = this._owner.getForbiddenActionTypes();
									if (t)
											for (var n = 0, i = t; n < i.length; n++) {
													var r = i[n];
													if (e.constructor === r)
															return !1
											}
									return !0
							}
							,
							ActionCollection.prototype.refreshContainer = function() {
									if (clearElement(this._actionCardContainer),
									this._actionCard) {
											this._actionCardContainer.style.marginTop = this.renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + "px" : "0px";
											var e = this._owner.getEffectivePadding();
											this._owner.getImmediateSurroundingPadding(e);
											var t = this._owner.hostConfig.paddingDefinitionToSpacingDefinition(e);
											this._actionCard && (this._actionCard.style.paddingLeft = t.left + "px",
											this._actionCard.style.paddingRight = t.right + "px",
											this._actionCard.style.marginLeft = "-" + t.left + "px",
											this._actionCard.style.marginRight = "-" + t.right + "px",
											0 === t.bottom || this._owner.isDesignMode() || (this._actionCard.style.paddingBottom = t.bottom + "px",
											this._actionCard.style.marginBottom = "-" + t.bottom + "px"),
											d.appendChild(this._actionCardContainer, this._actionCard))
									} else
											this._actionCardContainer.style.marginTop = "0px"
							}
							,
							ActionCollection.prototype.layoutChanged = function() {
									this._owner.getRootElement().updateLayout()
							}
							,
							ActionCollection.prototype.showActionCard = function(e, t, n) {
									void 0 === t && (t = !1),
									void 0 === n && (n = !0),
									e.card.suppressStyle = t;
									var i = e.card.renderedElement && !this._owner.isDesignMode() ? e.card.renderedElement : e.card.render();
									this._actionCard = i,
									this._expandedAction = e,
									this.refreshContainer(),
									n && (this.layoutChanged(),
									raiseInlineCardExpandedEvent(e, !0))
							}
							,
							ActionCollection.prototype.collapseExpandedAction = function() {
									for (var e = 0, t = this._renderedActions; e < t.length; e++) {
											t[e].state = 0
									}
									var n = this._expandedAction;
									this._expandedAction = void 0,
									this._actionCard = void 0,
									this.refreshContainer(),
									n && (this.layoutChanged(),
									raiseInlineCardExpandedEvent(n, !1))
							}
							,
							ActionCollection.prototype.expandShowCardAction = function(e, t) {
									for (var n = this, i = !1, r = 0, o = this._renderedActions; r < o.length; r++) {
											var s = o[r];
											this._owner.hostConfig.actions.actionsOrientation == l.Orientation.Horizontal && i && (s.isFocusable = !1),
											s !== e ? s.state = 2 : (s.state = 1,
											i = !0,
											s.renderedElement && (s.renderedElement.onblur = function(e) {
													for (var t = 0, i = n._renderedActions; t < i.length; t++) {
															i[t].isFocusable = !0
													}
											}
											))
									}
									this.showActionCard(e, !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()), t)
							}
							,
							ActionCollection.prototype.releaseDOMResources = function() {
									for (var e = 0, t = this._renderedActions; e < t.length; e++) {
											t[e].releaseDOMResources()
									}
							}
							,
							ActionCollection.prototype.actionExecuted = function(e) {
									e instanceof se ? e === this._expandedAction ? this.collapseExpandedAction() : this._owner.hostConfig.actions.showCard.actionMode === l.ShowCardActionMode.Inline && this.expandShowCardAction(e, !0) : this.collapseExpandedAction()
							}
							,
							ActionCollection.prototype.parse = function(e, t) {
									if (this.clear(),
									Array.isArray(e))
											for (var n = 0, i = e; n < i.length; n++) {
													var r = i[n]
														, o = [];
													this._owner instanceof fe && (o = this._owner.getForbiddenActionNames());
													var s = t.parseAction(this._owner, r, o, !this._owner.isDesignMode());
													s && this.addAction(s)
											}
							}
							,
							ActionCollection.prototype.toJSON = function(e, t, n) {
									n.serializeArray(e, t, this._items)
							}
							,
							ActionCollection.prototype.getActionAt = function(e) {
									return this._items[e]
							}
							,
							ActionCollection.prototype.getActionCount = function() {
									return this._items.length
							}
							,
							ActionCollection.prototype.getActionById = function(e) {
									for (var t = void 0, n = 0, i = this._items; n < i.length; n++) {
											if (t = i[n].getActionById(e))
													break
									}
									return t
							}
							,
							ActionCollection.prototype.validateProperties = function(e) {
									this._owner.hostConfig.actions.maxActions && this._items.length > this._owner.hostConfig.actions.maxActions && e.addFailure(this._owner, l.ValidationEvent.TooManyActions, _.Strings.errors.tooManyActions(this._owner.hostConfig.actions.maxActions)),
									this._items.length > 0 && !this._owner.hostConfig.supportsInteractivity && e.addFailure(this._owner, l.ValidationEvent.InteractivityNotAllowed, _.Strings.errors.interactivityNotAllowed());
									for (var t = 0, n = this._items; t < n.length; t++) {
											var i = n[t];
											this.isActionAllowed(i) || e.addFailure(this._owner, l.ValidationEvent.ActionTypeNotAllowed, _.Strings.errors.actionTypeNotAllowed(i.getJsonTypeName())),
											i.internalValidateProperties(e)
									}
							}
							,
							ActionCollection.prototype.render = function(e) {
									var t = this._owner.hostConfig;
									if (t.supportsInteractivity) {
											var n = document.createElement("div")
												, i = t.actions.maxActions ? Math.min(t.actions.maxActions, this._items.length) : this._items.length;
											if (this._actionCardContainer = document.createElement("div"),
											this._renderedActions = [],
											t.actions.preExpandSingleShowCardAction && 1 === i && this._items[0]instanceof se && this.isActionAllowed(this._items[0]))
													this.showActionCard(this._items[0], !0),
													this._renderedActions.push(this._items[0]);
											else {
													var r = document.createElement("div");
													if (r.className = t.makeCssClassName("ac-actionSet"),
													r.style.display = "flex",
													e === l.Orientation.Horizontal)
															if (r.style.flexDirection = "row",
															this._owner.horizontalAlignment && t.actions.actionAlignment !== l.ActionAlignment.Stretch)
																	switch (this._owner.horizontalAlignment) {
																	case l.HorizontalAlignment.Center:
																			r.style.justifyContent = "center";
																			break;
																	case l.HorizontalAlignment.Right:
																			r.style.justifyContent = "flex-end";
																			break;
																	default:
																			r.style.justifyContent = "flex-start"
																	}
															else
																	switch (t.actions.actionAlignment) {
																	case l.ActionAlignment.Center:
																			r.style.justifyContent = "center";
																			break;
																	case l.ActionAlignment.Right:
																			r.style.justifyContent = "flex-end";
																			break;
																	default:
																			r.style.justifyContent = "flex-start"
																	}
													else if (r.style.flexDirection = "column",
													this._owner.horizontalAlignment && t.actions.actionAlignment !== l.ActionAlignment.Stretch)
															switch (this._owner.horizontalAlignment) {
															case l.HorizontalAlignment.Center:
																	r.style.alignItems = "center";
																	break;
															case l.HorizontalAlignment.Right:
																	r.style.alignItems = "flex-end";
																	break;
															default:
																	r.style.alignItems = "flex-start"
															}
													else
															switch (t.actions.actionAlignment) {
															case l.ActionAlignment.Center:
																	r.style.alignItems = "center";
																	break;
															case l.ActionAlignment.Right:
																	r.style.alignItems = "flex-end";
																	break;
															case l.ActionAlignment.Stretch:
																	r.style.alignItems = "stretch";
																	break;
															default:
																	r.style.alignItems = "flex-start"
															}
													var o = this._items.filter(this.isActionAllowed.bind(this))
														, s = []
														, a = [];
													if (this._owner.isDesignMode())
															s = o;
													else {
															o.forEach((function(e) {
																	return e.mode === l.ActionMode.Secondary ? a.push(e) : s.push(e)
															}
															));
															var p = s.splice(t.actions.maxActions);
															c.GlobalSettings.allowMoreThanMaxActionsInOverflowMenu && a.push.apply(a, p);
															var u = !0;
															if (a.length > 0) {
																	this._overflowAction || (this._overflowAction = new ae(a),
																	this._overflowAction.setParent(this._owner),
																	this._overflowAction._actionCollection = this);
																	var h = this._owner instanceof Ee && !this._owner.parent;
																	u = !function(e, t) {
																			var n = e.parent ? e.parent.getRootElement() : void 0
																				, i = n && n.onRenderOverflowActions ? n.onRenderOverflowActions : Ee.onRenderOverflowActions;
																			return void 0 !== i && i(e.getActions(), t)
																	}(this._overflowAction, h)
															}
															this._overflowAction && u && s.push(this._overflowAction)
													}
													for (var m = 0; m < s.length; m++) {
															var g = s[m];
															if (g.render(),
															g.renderedElement && (t.actions.actionsOrientation === l.Orientation.Horizontal && t.actions.actionAlignment === l.ActionAlignment.Stretch ? g.renderedElement.style.flex = "0 1 100%" : g.renderedElement.style.flex = "0 1 auto",
															r.appendChild(g.renderedElement),
															this._renderedActions.push(g),
															m < s.length - 1 && t.actions.buttonSpacing > 0)) {
																	var _ = document.createElement("div");
																	e === l.Orientation.Horizontal ? (_.style.flex = "0 0 auto",
																	_.style.width = t.actions.buttonSpacing + "px") : _.style.height = t.actions.buttonSpacing + "px",
																	d.appendChild(r, _)
															}
													}
													var f = document.createElement("div");
													f.style.overflow = "hidden",
													f.appendChild(r),
													d.appendChild(n, f)
											}
											d.appendChild(n, this._actionCardContainer);
											for (var y = 0, v = this._renderedActions; y < v.length; y++) {
													var b = v[y];
													if (1 === b.state) {
															this.expandShowCardAction(b, !1);
															break
													}
											}
											return this._renderedActions.length > 0 ? n : void 0
									}
							}
							,
							ActionCollection.prototype.addAction = function(e) {
									if (!e)
											throw new Error("The action parameter cannot be null.");
									if (e.parent && e.parent !== this._owner || !(this._items.indexOf(e) < 0))
											throw new Error(_.Strings.errors.actionAlreadyParented());
									this._items.push(e),
									e.parent || e.setParent(this._owner),
									e._actionCollection = this
							}
							,
							ActionCollection.prototype.removeAction = function(e) {
									this.expandedAction && this._expandedAction === e && this.collapseExpandedAction();
									var t = this._items.indexOf(e);
									if (t >= 0) {
											this._items.splice(t, 1),
											e.setParent(void 0),
											e._actionCollection = void 0;
											for (var n = 0; n < this._renderedActions.length; n++)
													if (this._renderedActions[n] === e) {
															this._renderedActions.splice(n, 1);
															break
													}
											return !0
									}
									return !1
							}
							,
							ActionCollection.prototype.clear = function() {
									this._items = [],
									this._renderedActions = [],
									this._expandedAction = void 0
							}
							,
							ActionCollection.prototype.getAllInputs = function(e) {
									void 0 === e && (e = !0);
									var t = [];
									if (e)
											for (var n = 0, i = this._items; n < i.length; n++) {
													var r = i[n];
													t.push.apply(t, r.getAllInputs())
											}
									return t
							}
							,
							ActionCollection.prototype.getResourceInformation = function() {
									for (var e = [], t = 0, n = this._items; t < n.length; t++) {
											var i = n[t];
											e.push.apply(e, i.getResourceInformation())
									}
									return e
							}
							,
							Object.defineProperty(ActionCollection.prototype, "renderedActionCount", {
									get: function() {
											return this._renderedActions.length
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(ActionCollection.prototype, "expandedAction", {
									get: function() {
											return this._expandedAction
									},
									enumerable: !1,
									configurable: !0
							}),
							ActionCollection
					}()
						, ce = function(e) {
							function ActionSet() {
									var t = e.call(this) || this;
									return t._actionCollection = new le(t),
									t
							}
							return r(ActionSet, e),
							ActionSet.prototype.internalParse = function(t, n) {
									e.prototype.internalParse.call(this, t, n),
									this._actionCollection.parse(t.actions, n)
							}
							,
							ActionSet.prototype.internalToJSON = function(t, n) {
									e.prototype.internalToJSON.call(this, t, n),
									this._actionCollection.toJSON(t, "actions", n)
							}
							,
							ActionSet.prototype.internalRender = function() {
									return this._actionCollection.render(void 0 !== this.orientation ? this.orientation : this.hostConfig.actions.actionsOrientation)
							}
							,
							ActionSet.prototype.releaseDOMResources = function() {
									e.prototype.releaseDOMResources.call(this),
									this._actionCollection.releaseDOMResources()
							}
							,
							ActionSet.prototype.isBleedingAtBottom = function() {
									return 0 === this._actionCollection.renderedActionCount ? e.prototype.isBleedingAtBottom.call(this) : 1 === this._actionCollection.getActionCount() ? void 0 !== this._actionCollection.expandedAction && !this.hostConfig.actions.preExpandSingleShowCardAction : void 0 !== this._actionCollection.expandedAction
							}
							,
							ActionSet.prototype.getJsonTypeName = function() {
									return "ActionSet"
							}
							,
							ActionSet.prototype.getActionCount = function() {
									return this._actionCollection.getActionCount()
							}
							,
							ActionSet.prototype.getActionAt = function(t) {
									return t >= 0 && t < this.getActionCount() ? this._actionCollection.getActionAt(t) : e.prototype.getActionAt.call(this, t)
							}
							,
							ActionSet.prototype.getActionById = function(t) {
									var n = this._actionCollection.getActionById(t);
									return n || e.prototype.getActionById.call(this, t)
							}
							,
							ActionSet.prototype.getAllActions = function() {
									for (var t = e.prototype.getAllActions.call(this), n = 0; n < this.getActionCount(); n++) {
											var i = this.getActionAt(n);
											i && t.push(i)
									}
									return t
							}
							,
							ActionSet.prototype.internalValidateProperties = function(t) {
									e.prototype.internalValidateProperties.call(this, t),
									this._actionCollection.validateProperties(t)
							}
							,
							ActionSet.prototype.addAction = function(e) {
									this._actionCollection.addAction(e)
							}
							,
							ActionSet.prototype.getAllInputs = function(e) {
									return void 0 === e && (e = !0),
									e ? this._actionCollection.getAllInputs() : []
							}
							,
							ActionSet.prototype.getResourceInformation = function() {
									return this._actionCollection.getResourceInformation()
							}
							,
							ActionSet.prototype.findDOMNodeOwner = function(t) {
									for (var n = void 0, i = 0; i < this.getActionCount(); i++) {
											var r = this.getActionAt(i);
											if (r && (n = r.findDOMNodeOwner(t)))
													return n
									}
									return e.prototype.findDOMNodeOwner.call(this, t)
							}
							,
							Object.defineProperty(ActionSet.prototype, "isInteractive", {
									get: function() {
											return !0
									},
									enumerable: !1,
									configurable: !0
							}),
							ActionSet.orientationProperty = new m.EnumProperty(m.Versions.v1_1,"orientation",l.Orientation),
							o([(0,
							m.property)(ActionSet.orientationProperty)], ActionSet.prototype, "orientation", void 0),
							ActionSet
					}(y);
					t.ActionSet = ce;
					var de = function(e) {
							function ContainerStyleProperty(t, n, i, r) {
									var o = e.call(this, t, n, [{
											value: l.ContainerStyle.Default
									}, {
											value: l.ContainerStyle.Emphasis
									}, {
											targetVersion: m.Versions.v1_2,
											value: l.ContainerStyle.Accent
									}, {
											targetVersion: m.Versions.v1_2,
											value: l.ContainerStyle.Good
									}, {
											targetVersion: m.Versions.v1_2,
											value: l.ContainerStyle.Attention
									}, {
											targetVersion: m.Versions.v1_2,
											value: l.ContainerStyle.Warning
									}], i, r) || this;
									return o.targetVersion = t,
									o.name = n,
									o.defaultValue = i,
									o.onGetInitialValue = r,
									o
							}
							return r(ContainerStyleProperty, e),
							ContainerStyleProperty
					}(m.ValueSetProperty);
					t.ContainerStyleProperty = de;
					var pe = function(e) {
							function StylableCardElementContainer() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(StylableCardElementContainer, e),
							Object.defineProperty(StylableCardElementContainer.prototype, "style", {
									get: function() {
											if (this.allowCustomStyle) {
													var e = this.getValue(StylableCardElementContainer.styleProperty);
													if (e && this.hostConfig.containerStyles.getStyleByName(e))
															return e
											}
									},
									set: function(e) {
											this.setValue(StylableCardElementContainer.styleProperty, e)
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(StylableCardElementContainer.prototype, "allowCustomStyle", {
									get: function() {
											return !0
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(StylableCardElementContainer.prototype, "hasExplicitStyle", {
									get: function() {
											return void 0 !== this.getValue(StylableCardElementContainer.styleProperty)
									},
									enumerable: !1,
									configurable: !0
							}),
							StylableCardElementContainer.prototype.applyBorder = function() {}
							,
							StylableCardElementContainer.prototype.applyBackground = function() {
									if (this.renderedElement) {
											var e = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));
											if (e.backgroundColor) {
													var t = d.stringToCssColor(e.backgroundColor);
													t && (this.renderedElement.style.backgroundColor = t)
											}
									}
							}
							,
							StylableCardElementContainer.prototype.applyPadding = function() {
									if (e.prototype.applyPadding.call(this),
									this.renderedElement) {
											var t = new c.SpacingDefinition;
											if (this.getEffectivePadding() && (t = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding())),
											this.renderedElement.style.paddingTop = t.top + "px",
											this.renderedElement.style.paddingRight = t.right + "px",
											this.renderedElement.style.paddingBottom = t.bottom + "px",
											this.renderedElement.style.paddingLeft = t.left + "px",
											this.isBleeding()) {
													var n = new c.PaddingDefinition;
													this.getImmediateSurroundingPadding(n);
													var i = this.hostConfig.paddingDefinitionToSpacingDefinition(n);
													this.renderedElement.style.marginRight = "-" + i.right + "px",
													this.renderedElement.style.marginLeft = "-" + i.left + "px",
													this.isDesignMode() || (this.renderedElement.style.marginTop = "-" + i.top + "px",
													this.renderedElement.style.marginBottom = "-" + i.bottom + "px"),
													this.separatorElement && this.separatorOrientation === l.Orientation.Horizontal && (this.separatorElement.style.marginLeft = "-" + i.left + "px",
													this.separatorElement.style.marginRight = "-" + i.right + "px")
											} else
													this.renderedElement.style.marginRight = "0",
													this.renderedElement.style.marginLeft = "0",
													this.renderedElement.style.marginTop = "0",
													this.renderedElement.style.marginBottom = "0",
													this.separatorElement && this.separatorOrientation === l.Orientation.Horizontal && (this.separatorElement.style.marginRight = "0",
													this.separatorElement.style.marginLeft = "0")
									}
							}
							,
							StylableCardElementContainer.prototype.getHasBackground = function(e) {
									void 0 === e && (e = !1);
									for (var t = this.parent; t; ) {
											var n = !1;
											if (n = !e && (t instanceof me && t.backgroundImage.isValid()),
											t instanceof StylableCardElementContainer && this.hasExplicitStyle && (t.getEffectiveStyle() !== this.getEffectiveStyle() || n))
													return !0;
											t = t.parent
									}
									return !1
							}
							,
							StylableCardElementContainer.prototype.getDefaultPadding = function() {
									return this.getHasBackground() || this.getHasBorder() ? new c.PaddingDefinition(l.Spacing.Padding,l.Spacing.Padding,l.Spacing.Padding,l.Spacing.Padding) : e.prototype.getDefaultPadding.call(this)
							}
							,
							StylableCardElementContainer.prototype.internalValidateProperties = function(t) {
									e.prototype.internalValidateProperties.call(this, t);
									var n = this.getValue(StylableCardElementContainer.styleProperty);
									void 0 !== n && (this.hostConfig.containerStyles.getStyleByName(n) || t.addFailure(this, l.ValidationEvent.InvalidPropertyValue, _.Strings.errors.invalidPropertyValue(n, "style")))
							}
							,
							StylableCardElementContainer.prototype.render = function() {
									var t = e.prototype.render.call(this);
									return t && this.getHasBackground() && this.applyBackground(),
									this.applyBorder(),
									t
							}
							,
							StylableCardElementContainer.prototype.getEffectiveStyle = function() {
									var t = this.style;
									return t || e.prototype.getEffectiveStyle.call(this)
							}
							,
							StylableCardElementContainer.styleProperty = new de(m.Versions.v1_0,"style"),
							o([(0,
							m.property)(StylableCardElementContainer.styleProperty)], StylableCardElementContainer.prototype, "style", null),
							StylableCardElementContainer
					}(R);
					t.StylableCardElementContainer = pe;
					var ue = function(e) {
							function ContainerBase() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t._bleed = !1,
									t
							}
							return r(ContainerBase, e),
							ContainerBase.prototype.adjustRenderedElementSize = function(t) {
									e.prototype.adjustRenderedElementSize.call(this, t),
									this.minPixelHeight && (t.style.minHeight = this.minPixelHeight + "px")
							}
							,
							ContainerBase.prototype.getHasExpandedAction = function() {
									return !1
							}
							,
							ContainerBase.prototype.getBleed = function() {
									return this._bleed
							}
							,
							ContainerBase.prototype.setBleed = function(e) {
									this._bleed = e
							}
							,
							Object.defineProperty(ContainerBase.prototype, "renderedActionCount", {
									get: function() {
											return 0
									},
									enumerable: !1,
									configurable: !0
							}),
							ContainerBase.prototype.isBleeding = function() {
									return (this.getHasBackground() || this.hostConfig.alwaysAllowBleed) && this.getBleed()
							}
							,
							ContainerBase.bleedProperty = new m.BoolProperty(m.Versions.v1_2,"bleed",!1),
							ContainerBase.minHeightProperty = new m.PixelSizeProperty(m.Versions.v1_2,"minHeight"),
							o([(0,
							m.property)(ContainerBase.bleedProperty)], ContainerBase.prototype, "_bleed", void 0),
							o([(0,
							m.property)(ContainerBase.minHeightProperty)], ContainerBase.prototype, "minPixelHeight", void 0),
							ContainerBase
					}(pe);
					t.ContainerBase = ue;
					var he = function(e) {
							function BackgroundImage() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(BackgroundImage, e),
							BackgroundImage.prototype.getSchemaKey = function() {
									return "BackgroundImage"
							}
							,
							BackgroundImage.prototype.internalParse = function(t, n) {
									if ("string" != typeof t)
											return e.prototype.internalParse.call(this, t, n);
									this.resetDefaultValues(),
									this.url = t
							}
							,
							BackgroundImage.prototype.apply = function(e) {
									if (this.url && e.renderedElement) {
											switch (e.renderedElement.style.backgroundImage = "url('" + e.preProcessPropertyValue(BackgroundImage.urlProperty, this.url) + "')",
											this.fillMode) {
											case l.FillMode.Repeat:
													e.renderedElement.style.backgroundRepeat = "repeat";
													break;
											case l.FillMode.RepeatHorizontally:
													e.renderedElement.style.backgroundRepeat = "repeat-x";
													break;
											case l.FillMode.RepeatVertically:
													e.renderedElement.style.backgroundRepeat = "repeat-y";
													break;
											case l.FillMode.Cover:
											default:
													e.renderedElement.style.backgroundRepeat = "no-repeat",
													e.renderedElement.style.backgroundSize = "cover"
											}
											switch (this.horizontalAlignment) {
											case l.HorizontalAlignment.Left:
													break;
											case l.HorizontalAlignment.Center:
													e.renderedElement.style.backgroundPositionX = "center";
													break;
											case l.HorizontalAlignment.Right:
													e.renderedElement.style.backgroundPositionX = "right"
											}
											switch (this.verticalAlignment) {
											case l.VerticalAlignment.Top:
													break;
											case l.VerticalAlignment.Center:
													e.renderedElement.style.backgroundPositionY = "center";
													break;
											case l.VerticalAlignment.Bottom:
													e.renderedElement.style.backgroundPositionY = "bottom"
											}
									}
							}
							,
							BackgroundImage.prototype.isValid = function() {
									return !!this.url
							}
							,
							BackgroundImage.urlProperty = new m.StringProperty(m.Versions.v1_0,"url"),
							BackgroundImage.fillModeProperty = new m.EnumProperty(m.Versions.v1_2,"fillMode",l.FillMode,l.FillMode.Cover),
							BackgroundImage.horizontalAlignmentProperty = new m.EnumProperty(m.Versions.v1_2,"horizontalAlignment",l.HorizontalAlignment,l.HorizontalAlignment.Left),
							BackgroundImage.verticalAlignmentProperty = new m.EnumProperty(m.Versions.v1_2,"verticalAlignment",l.VerticalAlignment,l.VerticalAlignment.Top),
							o([(0,
							m.property)(BackgroundImage.urlProperty)], BackgroundImage.prototype, "url", void 0),
							o([(0,
							m.property)(BackgroundImage.fillModeProperty)], BackgroundImage.prototype, "fillMode", void 0),
							o([(0,
							m.property)(BackgroundImage.horizontalAlignmentProperty)], BackgroundImage.prototype, "horizontalAlignment", void 0),
							o([(0,
							m.property)(BackgroundImage.verticalAlignmentProperty)], BackgroundImage.prototype, "verticalAlignment", void 0),
							BackgroundImage
					}(m.SerializableObject);
					t.BackgroundImage = he;
					var me = function(e) {
							function Container() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t._items = [],
									t._renderedItems = [],
									t
							}
							return r(Container, e),
							Object.defineProperty(Container.prototype, "backgroundImage", {
									get: function() {
											return this.getValue(Container.backgroundImageProperty)
									},
									enumerable: !1,
									configurable: !0
							}),
							Container.prototype.insertItemAt = function(e, t, n) {
									if (e.parent && !n)
											throw new Error(_.Strings.errors.elementAlreadyParented());
									if (!e.isStandalone)
											throw new Error(_.Strings.errors.elementTypeNotStandalone(e.getJsonTypeName()));
									t < 0 || t >= this._items.length ? this._items.push(e) : this._items.splice(t, 0, e),
									e.setParent(this)
							}
							,
							Container.prototype.getItemsCollectionPropertyName = function() {
									return "items"
							}
							,
							Container.prototype.applyBackground = function() {
									this.backgroundImage.isValid() && this.renderedElement && this.backgroundImage.apply(this),
									e.prototype.applyBackground.call(this)
							}
							,
							Container.prototype.applyRTL = function(e) {
									void 0 !== this.rtl && (e.dir = this.rtl ? "rtl" : "ltr")
							}
							,
							Container.prototype.internalRender = function() {
									this._renderedItems = [];
									var e = this.hostConfig
										, t = document.createElement("div");
									switch (this.applyRTL(t),
									t.classList.add(e.makeCssClassName("ac-container")),
									t.style.display = "flex",
									t.style.flexDirection = "column",
									c.GlobalSettings.useAdvancedCardBottomTruncation && (t.style.minHeight = "-webkit-min-content"),
									this.getEffectiveVerticalContentAlignment()) {
									case l.VerticalAlignment.Center:
											t.style.justifyContent = "center";
											break;
									case l.VerticalAlignment.Bottom:
											t.style.justifyContent = "flex-end";
											break;
									default:
											t.style.justifyContent = "flex-start"
									}
									if (this._items.length > 0)
											for (var n = 0, i = this._items; n < i.length; n++) {
													var r = i[n]
														, o = this.isElementAllowed(r) ? r.render() : void 0;
													o && (this._renderedItems.length > 0 && r.separatorElement && (r.separatorElement.style.flex = "0 0 auto",
													d.appendChild(t, r.separatorElement)),
													d.appendChild(t, o),
													this._renderedItems.push(r))
											}
									else if (this.isDesignMode()) {
											var s = this.createPlaceholderElement();
											s.style.width = "100%",
											s.style.height = "100%",
											t.appendChild(s)
									}
									return t
							}
							,
							Container.prototype.truncateOverflow = function(e) {
									if (this.renderedElement) {
											for (var t = this.renderedElement.offsetTop + e + 1, handleElement_1 = function(e) {
													var n = e.renderedElement;
													if (n)
															switch (d.getFitStatus(n, t)) {
															case l.ContainerFitStatus.FullyInContainer:
																	e.resetOverflow() && handleElement_1(e);
																	break;
															case l.ContainerFitStatus.Overflowing:
																	var i = t - n.offsetTop;
																	e.handleOverflow(i);
																	break;
															case l.ContainerFitStatus.FullyOutOfContainer:
																	e.handleOverflow(0)
															}
											}, n = 0, i = this._items; n < i.length; n++) {
													var r = i[n];
													handleElement_1(r)
											}
											return !0
									}
									return !1
							}
							,
							Container.prototype.undoOverflowTruncation = function() {
									for (var e = 0, t = this._items; e < t.length; e++) {
											t[e].resetOverflow()
									}
							}
							,
							Container.prototype.getHasBackground = function(t) {
									return void 0 === t && (t = !1),
									!t && this.backgroundImage.isValid() || e.prototype.getHasBackground.call(this, t)
							}
							,
							Container.prototype.internalParse = function(t, n) {
									e.prototype.internalParse.call(this, t, n),
									this.clear(),
									this.setShouldFallback(!1);
									var i = t[this.getItemsCollectionPropertyName()];
									if (Array.isArray(i))
											for (var r = 0, o = i; r < o.length; r++) {
													var s = o[r]
														, a = n.parseElement(this, s, this.forbiddenChildElements(), !this.isDesignMode());
													a && this.insertItemAt(a, -1, !0)
											}
							}
							,
							Container.prototype.internalToJSON = function(t, n) {
									e.prototype.internalToJSON.call(this, t, n);
									var i = this.getItemsCollectionPropertyName();
									n.serializeArray(t, i, this._items)
							}
							,
							Object.defineProperty(Container.prototype, "isSelectable", {
									get: function() {
											return !0
									},
									enumerable: !1,
									configurable: !0
							}),
							Container.prototype.getEffectivePadding = function() {
									return c.GlobalSettings.removePaddingFromContainersWithBackgroundImage && !this.getHasBackground(!0) ? new c.PaddingDefinition : e.prototype.getEffectivePadding.call(this)
							}
							,
							Container.prototype.getEffectiveVerticalContentAlignment = function() {
									if (void 0 !== this.verticalContentAlignment)
											return this.verticalContentAlignment;
									var e = this.getParentContainer();
									return e ? e.getEffectiveVerticalContentAlignment() : l.VerticalAlignment.Top
							}
							,
							Container.prototype.getItemCount = function() {
									return this._items.length
							}
							,
							Container.prototype.getItemAt = function(e) {
									return this._items[e]
							}
							,
							Container.prototype.getFirstVisibleRenderedItem = function() {
									if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0)
											for (var e = 0, t = this._renderedItems; e < t.length; e++) {
													var n = t[e];
													if (n.isVisible)
															return n
											}
							}
							,
							Container.prototype.getLastVisibleRenderedItem = function() {
									if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0)
											for (var e = this._renderedItems.length - 1; e >= 0; e--)
													if (this._renderedItems[e].isVisible)
															return this._renderedItems[e]
							}
							,
							Container.prototype.getJsonTypeName = function() {
									return "Container"
							}
							,
							Container.prototype.isFirstElement = function(e) {
									for (var t = this.isDesignMode(), n = 0, i = this._items; n < i.length; n++) {
											var r = i[n];
											if (r.isVisible || t)
													return r === e
									}
									return !1
							}
							,
							Container.prototype.isLastElement = function(e) {
									for (var t = this.isDesignMode(), n = this._items.length - 1; n >= 0; n--)
											if (this._items[n].isVisible || t)
													return this._items[n] === e;
									return !1
							}
							,
							Container.prototype.isRtl = function() {
									if (void 0 !== this.rtl)
											return this.rtl;
									var e = this.getParentContainer();
									return !!e && e.isRtl()
							}
							,
							Container.prototype.isBleedingAtTop = function() {
									var e = this.getFirstVisibleRenderedItem();
									return this.isBleeding() || !!e && e.isBleedingAtTop()
							}
							,
							Container.prototype.isBleedingAtBottom = function() {
									var e = this.getLastVisibleRenderedItem();
									return this.isBleeding() || !!e && (e.isBleedingAtBottom() && e.getEffectiveStyle() === this.getEffectiveStyle())
							}
							,
							Container.prototype.indexOf = function(e) {
									return this._items.indexOf(e)
							}
							,
							Container.prototype.addItem = function(e) {
									this.insertItemAt(e, -1, !1)
							}
							,
							Container.prototype.insertItemBefore = function(e, t) {
									this.insertItemAt(e, this._items.indexOf(t), !1)
							}
							,
							Container.prototype.insertItemAfter = function(e, t) {
									this.insertItemAt(e, this._items.indexOf(t) + 1, !1)
							}
							,
							Container.prototype.removeItem = function(e) {
									var t = this._items.indexOf(e);
									return t >= 0 && (this._items.splice(t, 1),
									e.setParent(void 0),
									this.updateLayout(),
									!0)
							}
							,
							Container.prototype.clear = function() {
									this._items = [],
									this._renderedItems = []
							}
							,
							Container.prototype.getResourceInformation = function() {
									var t = e.prototype.getResourceInformation.call(this);
									return this.backgroundImage.isValid() && t.push({
											url: this.backgroundImage.url,
											mimeType: "image"
									}),
									t
							}
							,
							Container.prototype.getActionById = function(t) {
									var n = e.prototype.getActionById.call(this, t);
									if (!n && (this.selectAction && (n = this.selectAction.getActionById(t)),
									!n))
											for (var i = 0, r = this._items; i < r.length; i++) {
													if (n = r[i].getActionById(t))
															break
											}
									return n
							}
							,
							Object.defineProperty(Container.prototype, "padding", {
									get: function() {
											return this.getPadding()
									},
									set: function(e) {
											this.setPadding(e)
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(Container.prototype, "selectAction", {
									get: function() {
											return this._selectAction
									},
									set: function(e) {
											this._selectAction = e
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(Container.prototype, "bleed", {
									get: function() {
											return this.getBleed()
									},
									set: function(e) {
											this.setBleed(e)
									},
									enumerable: !1,
									configurable: !0
							}),
							Container.backgroundImageProperty = new m.SerializableObjectProperty(m.Versions.v1_0,"backgroundImage",he),
							Container.verticalContentAlignmentProperty = new m.EnumProperty(m.Versions.v1_1,"verticalContentAlignment",l.VerticalAlignment),
							Container.rtlProperty = new m.BoolProperty(m.Versions.v1_0,"rtl"),
							o([(0,
							m.property)(Container.backgroundImageProperty)], Container.prototype, "backgroundImage", null),
							o([(0,
							m.property)(Container.verticalContentAlignmentProperty)], Container.prototype, "verticalContentAlignment", void 0),
							o([(0,
							m.property)(Container.rtlProperty)], Container.prototype, "rtl", void 0),
							Container
					}(ue);
					t.Container = me;
					var ge = function(e) {
							function Column(t) {
									void 0 === t && (t = "stretch");
									var n = e.call(this) || this;
									return n.width = "stretch",
									n._computedWeight = 0,
									n.width = t,
									n
							}
							return r(Column, e),
							Column.prototype.adjustRenderedElementSize = function(e) {
									this.isDesignMode() ? (e.style.minWidth = "20px",
									e.style.minHeight = (this.minPixelHeight ? Math.max(this.minPixelHeight, 20) : 20) + "px") : (e.style.minWidth = "0",
									this.minPixelHeight && (e.style.minHeight = this.minPixelHeight + "px")),
									"auto" === this.width ? e.style.flex = "0 1 auto" : "stretch" === this.width ? e.style.flex = "1 1 50px" : this.width instanceof c.SizeAndUnit && (this.width.unit === l.SizeUnit.Pixel ? (e.style.flex = "0 0 auto",
									e.style.width = this.width.physicalSize + "px") : e.style.flex = "1 1 " + (this._computedWeight > 0 ? this._computedWeight : this.width.physicalSize) + "%")
							}
							,
							Column.prototype.shouldSerialize = function(e) {
									return !0
							}
							,
							Object.defineProperty(Column.prototype, "separatorOrientation", {
									get: function() {
											return l.Orientation.Vertical
									},
									enumerable: !1,
									configurable: !0
							}),
							Column.prototype.getJsonTypeName = function() {
									return "Column"
							}
							,
							Object.defineProperty(Column.prototype, "hasVisibleSeparator", {
									get: function() {
											return !!(this.parent && this.parent instanceof _e) && (void 0 !== this.separatorElement && !this.parent.isLeftMostElement(this))
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(Column.prototype, "isStandalone", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							Column.widthProperty = new m.CustomProperty(m.Versions.v1_0,"width",(function(e, t, n, i) {
									var r = t.defaultValue
										, o = n[t.name]
										, s = !1;
									if ("number" != typeof o || isNaN(o))
											if ("auto" === o || "stretch" === o)
													r = o;
											else if ("string" == typeof o)
													try {
															(r = c.SizeAndUnit.parse(o)).unit === l.SizeUnit.Pixel && t.targetVersion.compareTo(i.targetVersion) > 0 && (s = !0)
													} catch (e) {
															s = !0
													}
											else
													s = !0;
									else
											r = new c.SizeAndUnit(o,l.SizeUnit.Weight);
									return s && (i.logParseEvent(e, l.ValidationEvent.InvalidPropertyValue, _.Strings.errors.invalidColumnWidth(o)),
									r = "auto"),
									r
							}
							),(function(e, t, n, i, r) {
									i instanceof c.SizeAndUnit ? i.unit === l.SizeUnit.Pixel ? r.serializeValue(n, "width", i.physicalSize + "px") : r.serializeNumber(n, "width", i.physicalSize) : r.serializeValue(n, "width", i)
							}
							),"stretch"),
							o([(0,
							m.property)(Column.widthProperty)], Column.prototype, "width", void 0),
							Column
					}(me);
					t.Column = ge;
					var _e = function(e) {
							function ColumnSet() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t._columns = [],
									t
							}
							return r(ColumnSet, e),
							ColumnSet.prototype.createColumnInstance = function(e, t) {
									return t.parseCardObject(this, e, [], !this.isDesignMode(), (function(e) {
											return e && "Column" !== e ? void 0 : new ge
									}
									), (function(e, n) {
											t.logParseEvent(void 0, l.ValidationEvent.ElementTypeNotAllowed, _.Strings.errors.elementTypeNotAllowed(e))
									}
									))
							}
							,
							ColumnSet.prototype.internalRender = function() {
									if (this._renderedColumns = [],
									this._columns.length > 0) {
											var e = this.hostConfig
												, t = document.createElement("div");
											switch (t.className = e.makeCssClassName("ac-columnSet"),
											t.style.display = "flex",
											c.GlobalSettings.useAdvancedCardBottomTruncation && (t.style.minHeight = "-webkit-min-content"),
											this.getEffectiveHorizontalAlignment()) {
											case l.HorizontalAlignment.Center:
													t.style.justifyContent = "center";
													break;
											case l.HorizontalAlignment.Right:
													t.style.justifyContent = "flex-end";
													break;
											default:
													t.style.justifyContent = "flex-start"
											}
											for (var n = 0, i = 0, r = this._columns; i < r.length; i++) {
													(a = r[i]).width instanceof c.SizeAndUnit && a.width.unit === l.SizeUnit.Weight && (n += a.width.physicalSize)
											}
											for (var o = 0, s = this._columns; o < s.length; o++) {
													var a;
													if ((a = s[o]).width instanceof c.SizeAndUnit && a.width.unit === l.SizeUnit.Weight && n > 0) {
															var p = 100 / n * a.width.physicalSize;
															a._computedWeight = p
													}
													var u = a.render();
													u && (this._renderedColumns.length > 0 && a.separatorElement && (a.separatorElement.style.flex = "0 0 auto",
													d.appendChild(t, a.separatorElement)),
													d.appendChild(t, u),
													this._renderedColumns.push(a))
											}
											return this._renderedColumns.length > 0 ? t : void 0
									}
							}
							,
							ColumnSet.prototype.truncateOverflow = function(e) {
									for (var t = 0, n = this._columns; t < n.length; t++) {
											n[t].handleOverflow(e)
									}
									return !0
							}
							,
							ColumnSet.prototype.undoOverflowTruncation = function() {
									for (var e = 0, t = this._columns; e < t.length; e++) {
											t[e].resetOverflow()
									}
							}
							,
							Object.defineProperty(ColumnSet.prototype, "isSelectable", {
									get: function() {
											return !0
									},
									enumerable: !1,
									configurable: !0
							}),
							ColumnSet.prototype.internalParse = function(t, n) {
									e.prototype.internalParse.call(this, t, n),
									this._columns = [],
									this._renderedColumns = [];
									var i = t.columns;
									if (Array.isArray(i))
											for (var r = 0, o = i; r < o.length; r++) {
													var s = o[r]
														, a = this.createColumnInstance(s, n);
													a && this._columns.push(a)
											}
							}
							,
							ColumnSet.prototype.internalToJSON = function(t, n) {
									e.prototype.internalToJSON.call(this, t, n),
									n.serializeArray(t, "columns", this._columns)
							}
							,
							ColumnSet.prototype.isFirstElement = function(e) {
									for (var t = 0, n = this._columns; t < n.length; t++) {
											var i = n[t];
											if (i.isVisible)
													return i === e
									}
									return !1
							}
							,
							ColumnSet.prototype.isBleedingAtTop = function() {
									if (this.isBleeding())
											return !0;
									if (this._renderedColumns && this._renderedColumns.length > 0)
											for (var e = 0, t = this._columns; e < t.length; e++) {
													if (t[e].isBleedingAtTop())
															return !0
											}
									return !1
							}
							,
							ColumnSet.prototype.isBleedingAtBottom = function() {
									if (this.isBleeding())
											return !0;
									if (this._renderedColumns && this._renderedColumns.length > 0)
											for (var e = 0, t = this._columns; e < t.length; e++) {
													if (t[e].isBleedingAtBottom())
															return !0
											}
									return !1
							}
							,
							ColumnSet.prototype.getItemCount = function() {
									return this._columns.length
							}
							,
							ColumnSet.prototype.getFirstVisibleRenderedItem = function() {
									return this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0 ? this._renderedColumns[0] : void 0
							}
							,
							ColumnSet.prototype.getLastVisibleRenderedItem = function() {
									return this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0 ? this._renderedColumns[this._renderedColumns.length - 1] : void 0
							}
							,
							ColumnSet.prototype.getColumnAt = function(e) {
									return this._columns[e]
							}
							,
							ColumnSet.prototype.getItemAt = function(e) {
									return this.getColumnAt(e)
							}
							,
							ColumnSet.prototype.getJsonTypeName = function() {
									return "ColumnSet"
							}
							,
							ColumnSet.prototype.internalValidateProperties = function(t) {
									e.prototype.internalValidateProperties.call(this, t);
									for (var n = 0, i = 0, r = 0, o = this._columns; r < o.length; r++) {
											var s = o[r];
											"number" == typeof s.width ? n++ : "stretch" === s.width && i++
									}
									n > 0 && i > 0 && t.addFailure(this, l.ValidationEvent.Hint, _.Strings.hints.dontUseWeightedAndStrecthedColumnsInSameSet())
							}
							,
							ColumnSet.prototype.addColumn = function(e) {
									if (e.parent)
											throw new Error(_.Strings.errors.columnAlreadyBelongsToAnotherSet());
									this._columns.push(e),
									e.setParent(this)
							}
							,
							ColumnSet.prototype.removeItem = function(e) {
									if (e instanceof ge) {
											var t = this._columns.indexOf(e);
											if (t >= 0)
													return this._columns.splice(t, 1),
													e.setParent(void 0),
													this.updateLayout(),
													!0
									}
									return !1
							}
							,
							ColumnSet.prototype.indexOf = function(e) {
									return e instanceof ge ? this._columns.indexOf(e) : -1
							}
							,
							ColumnSet.prototype.isLeftMostElement = function(e) {
									return 0 === this._columns.indexOf(e)
							}
							,
							ColumnSet.prototype.isRightMostElement = function(e) {
									return this._columns.indexOf(e) === this._columns.length - 1
							}
							,
							ColumnSet.prototype.isTopElement = function(e) {
									return this._columns.indexOf(e) >= 0
							}
							,
							ColumnSet.prototype.isBottomElement = function(e) {
									return this._columns.indexOf(e) >= 0
							}
							,
							ColumnSet.prototype.getActionById = function(e) {
									for (var t = void 0, n = 0, i = this._columns; n < i.length; n++) {
											if (t = i[n].getActionById(e))
													break
									}
									return t
							}
							,
							Object.defineProperty(ColumnSet.prototype, "bleed", {
									get: function() {
											return this.getBleed()
									},
									set: function(e) {
											this.setBleed(e)
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(ColumnSet.prototype, "padding", {
									get: function() {
											return this.getPadding()
									},
									set: function(e) {
											this.setPadding(e)
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(ColumnSet.prototype, "selectAction", {
									get: function() {
											return this._selectAction
									},
									set: function(e) {
											this._selectAction = e
									},
									enumerable: !1,
									configurable: !0
							}),
							ColumnSet
					}(ue);
					function raiseImageLoadedEvent(e) {
							var t = e.getRootElement()
								, n = t && t.onImageLoaded ? t.onImageLoaded : Ee.onImageLoaded;
							n && n(e)
					}
					function raiseAnchorClickedEvent(e, t, n) {
							var i = e.getRootElement()
								, r = i && i.onAnchorClicked ? i.onAnchorClicked : Ee.onAnchorClicked;
							return void 0 !== r && r(e, t, n)
					}
					function raiseInlineCardExpandedEvent(e, t) {
							var n = e.parent ? e.parent.getRootElement() : void 0
								, i = n && n.onInlineCardExpanded ? n.onInlineCardExpanded : Ee.onInlineCardExpanded;
							i && i(e, t)
					}
					function raiseElementVisibilityChangedEvent(e, t) {
							void 0 === t && (t = !0);
							var n = e.getRootElement();
							t && n.updateLayout();
							var i = n
								, r = i && i.onElementVisibilityChanged ? i.onElementVisibilityChanged : Ee.onElementVisibilityChanged;
							void 0 !== r && r(e)
					}
					t.ColumnSet = _e;
					var fe = function(e) {
							function ContainerWithActions() {
									var t = e.call(this) || this;
									return t._actionCollection = new le(t),
									t
							}
							return r(ContainerWithActions, e),
							ContainerWithActions.prototype.internalParse = function(t, n) {
									e.prototype.internalParse.call(this, t, n),
									this.parseActions(t, n)
							}
							,
							ContainerWithActions.prototype.parseActions = function(e, t) {
									this._actionCollection.parse(e.actions, t)
							}
							,
							ContainerWithActions.prototype.internalToJSON = function(t, n) {
									e.prototype.internalToJSON.call(this, t, n),
									this._actionCollection.toJSON(t, "actions", n)
							}
							,
							ContainerWithActions.prototype.internalRender = function() {
									var t = e.prototype.internalRender.call(this);
									if (t) {
											var n = this._actionCollection.render(this.hostConfig.actions.actionsOrientation);
											return n && (d.appendChild(t, renderSeparation(this.hostConfig, {
													spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing)
											}, l.Orientation.Horizontal)),
											d.appendChild(t, n)),
											this.renderIfEmpty || t.children.length > 0 ? t : void 0
									}
							}
							,
							ContainerWithActions.prototype.getHasExpandedAction = function() {
									return 0 !== this.renderedActionCount && (1 === this.renderedActionCount ? void 0 !== this._actionCollection.expandedAction && !this.hostConfig.actions.preExpandSingleShowCardAction : void 0 !== this._actionCollection.expandedAction)
							}
							,
							Object.defineProperty(ContainerWithActions.prototype, "renderedActionCount", {
									get: function() {
											return this._actionCollection.renderedActionCount
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(ContainerWithActions.prototype, "renderIfEmpty", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							ContainerWithActions.prototype.releaseDOMResources = function() {
									e.prototype.releaseDOMResources.call(this),
									this._actionCollection.releaseDOMResources()
							}
							,
							ContainerWithActions.prototype.getActionCount = function() {
									return this._actionCollection.getActionCount()
							}
							,
							ContainerWithActions.prototype.getActionAt = function(t) {
									return t >= 0 && t < this.getActionCount() ? this._actionCollection.getActionAt(t) : e.prototype.getActionAt.call(this, t)
							}
							,
							ContainerWithActions.prototype.getActionById = function(t) {
									var n = this._actionCollection.getActionById(t);
									return n || e.prototype.getActionById.call(this, t)
							}
							,
							ContainerWithActions.prototype.internalValidateProperties = function(t) {
									e.prototype.internalValidateProperties.call(this, t),
									this._actionCollection && this._actionCollection.validateProperties(t)
							}
							,
							ContainerWithActions.prototype.isLastElement = function(t) {
									return e.prototype.isLastElement.call(this, t) && 0 === this._actionCollection.getActionCount()
							}
							,
							ContainerWithActions.prototype.addAction = function(e) {
									this._actionCollection.addAction(e)
							}
							,
							ContainerWithActions.prototype.clear = function() {
									e.prototype.clear.call(this),
									this._actionCollection.clear()
							}
							,
							ContainerWithActions.prototype.getAllInputs = function(t) {
									void 0 === t && (t = !0);
									var n = e.prototype.getAllInputs.call(this, t);
									return t && n.push.apply(n, this._actionCollection.getAllInputs(t)),
									n
							}
							,
							ContainerWithActions.prototype.getResourceInformation = function() {
									var t = e.prototype.getResourceInformation.call(this);
									return t.push.apply(t, this._actionCollection.getResourceInformation()),
									t
							}
							,
							ContainerWithActions.prototype.isBleedingAtBottom = function() {
									return 0 === this._actionCollection.renderedActionCount ? e.prototype.isBleedingAtBottom.call(this) : 1 === this._actionCollection.getActionCount() ? void 0 !== this._actionCollection.expandedAction && !this.hostConfig.actions.preExpandSingleShowCardAction : void 0 !== this._actionCollection.expandedAction
							}
							,
							ContainerWithActions.prototype.getForbiddenActionNames = function() {
									return []
							}
							,
							Object.defineProperty(ContainerWithActions.prototype, "isStandalone", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							ContainerWithActions
					}(me);
					t.ContainerWithActions = fe;
					var ye = function(e) {
							function RefreshActionProperty(t, n) {
									var i = e.call(this, t, n, void 0) || this;
									return i.targetVersion = t,
									i.name = n,
									i
							}
							return r(RefreshActionProperty, e),
							RefreshActionProperty.prototype.parse = function(e, t, n) {
									var i = n.parseAction(e.parent, t[this.name], [], !1);
									if (void 0 !== i) {
											if (i instanceof ee)
													return i;
											n.logParseEvent(e, l.ValidationEvent.ActionTypeNotAllowed, _.Strings.errors.actionTypeNotAllowed(i.getJsonTypeName()))
									}
									n.logParseEvent(e, l.ValidationEvent.PropertyCantBeNull, _.Strings.errors.propertyMustBeSet("action"))
							}
							,
							RefreshActionProperty.prototype.toJSON = function(e, t, n, i) {
									i.serializeValue(t, this.name, n ? n.toJSON(i) : void 0, void 0, !0)
							}
							,
							RefreshActionProperty
					}(m.PropertyDefinition);
					t.RefreshActionProperty = ye;
					var ve = function(e) {
							function RefreshDefinition() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(RefreshDefinition, e),
							Object.defineProperty(RefreshDefinition.prototype, "action", {
									get: function() {
											return this.getValue(RefreshDefinition.actionProperty)
									},
									set: function(e) {
											this.setValue(RefreshDefinition.actionProperty, e),
											e && e.setParent(this.parent)
									},
									enumerable: !1,
									configurable: !0
							}),
							RefreshDefinition.prototype.getSchemaKey = function() {
									return "RefreshDefinition"
							}
							,
							RefreshDefinition.actionProperty = new ye(m.Versions.v1_4,"action"),
							RefreshDefinition.userIdsProperty = new m.StringArrayProperty(m.Versions.v1_4,"userIds"),
							o([(0,
							m.property)(RefreshDefinition.actionProperty)], RefreshDefinition.prototype, "action", null),
							o([(0,
							m.property)(RefreshDefinition.userIdsProperty)], RefreshDefinition.prototype, "userIds", void 0),
							RefreshDefinition
					}(m.SerializableObject);
					t.RefreshDefinition = ve;
					var be = function(e) {
							function AuthCardButton() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(AuthCardButton, e),
							AuthCardButton.prototype.getSchemaKey = function() {
									return "AuthCardButton"
							}
							,
							AuthCardButton.typeProperty = new m.StringProperty(m.Versions.v1_4,"type"),
							AuthCardButton.titleProperty = new m.StringProperty(m.Versions.v1_4,"title"),
							AuthCardButton.imageProperty = new m.StringProperty(m.Versions.v1_4,"image"),
							AuthCardButton.valueProperty = new m.StringProperty(m.Versions.v1_4,"value"),
							o([(0,
							m.property)(AuthCardButton.typeProperty)], AuthCardButton.prototype, "type", void 0),
							o([(0,
							m.property)(AuthCardButton.titleProperty)], AuthCardButton.prototype, "title", void 0),
							o([(0,
							m.property)(AuthCardButton.imageProperty)], AuthCardButton.prototype, "image", void 0),
							o([(0,
							m.property)(AuthCardButton.valueProperty)], AuthCardButton.prototype, "value", void 0),
							AuthCardButton
					}(m.SerializableObject);
					t.AuthCardButton = be;
					var Se = function(e) {
							function TokenExchangeResource() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(TokenExchangeResource, e),
							TokenExchangeResource.prototype.getSchemaKey = function() {
									return "TokenExchangeResource"
							}
							,
							TokenExchangeResource.idProperty = new m.StringProperty(m.Versions.v1_4,"id"),
							TokenExchangeResource.uriProperty = new m.StringProperty(m.Versions.v1_4,"uri"),
							TokenExchangeResource.providerIdProperty = new m.StringProperty(m.Versions.v1_4,"providerId"),
							o([(0,
							m.property)(TokenExchangeResource.idProperty)], TokenExchangeResource.prototype, "id", void 0),
							o([(0,
							m.property)(TokenExchangeResource.uriProperty)], TokenExchangeResource.prototype, "uri", void 0),
							o([(0,
							m.property)(TokenExchangeResource.providerIdProperty)], TokenExchangeResource.prototype, "providerId", void 0),
							TokenExchangeResource
					}(m.SerializableObject);
					t.TokenExchangeResource = Se;
					var Ce = function(e) {
							function Authentication() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(Authentication, e),
							Authentication.prototype.getSchemaKey = function() {
									return "Authentication"
							}
							,
							Authentication.textProperty = new m.StringProperty(m.Versions.v1_4,"text"),
							Authentication.connectionNameProperty = new m.StringProperty(m.Versions.v1_4,"connectionName"),
							Authentication.buttonsProperty = new m.SerializableObjectCollectionProperty(m.Versions.v1_4,"buttons",be),
							Authentication.tokenExchangeResourceProperty = new m.SerializableObjectProperty(m.Versions.v1_4,"tokenExchangeResource",Se,!0),
							o([(0,
							m.property)(Authentication.textProperty)], Authentication.prototype, "text", void 0),
							o([(0,
							m.property)(Authentication.connectionNameProperty)], Authentication.prototype, "connectionName", void 0),
							o([(0,
							m.property)(Authentication.buttonsProperty)], Authentication.prototype, "buttons", void 0),
							o([(0,
							m.property)(Authentication.tokenExchangeResourceProperty)], Authentication.prototype, "tokenExchangeResource", void 0),
							Authentication
					}(m.SerializableObject);
					t.Authentication = Ce;
					var Ee = function(e) {
							function AdaptiveCard() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.designMode = !1,
									t
							}
							return r(AdaptiveCard, e),
							Object.defineProperty(AdaptiveCard.prototype, "refresh", {
									get: function() {
											return this.getValue(AdaptiveCard.refreshProperty)
									},
									set: function(e) {
											this.setValue(AdaptiveCard.refreshProperty, e),
											e && (e.parent = this)
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(AdaptiveCard, "processMarkdown", {
									get: function() {
											throw new Error(_.Strings.errors.processMarkdownEventRemoved())
									},
									set: function(e) {
											throw new Error(_.Strings.errors.processMarkdownEventRemoved())
									},
									enumerable: !1,
									configurable: !0
							}),
							AdaptiveCard.applyMarkdown = function(e) {
									var t = {
											didProcess: !1
									};
									if (AdaptiveCard.onProcessMarkdown)
											AdaptiveCard.onProcessMarkdown(e, t);
									else if (window.markdownit) {
											var n = window.markdownit;
											t.outputHtml = n().render(e),
											t.didProcess = !0
									} else
											AdaptiveCard._haveWarnedAboutNoMarkdownProcessing || (console.warn(_.Strings.errors.markdownProcessingNotEnabled),
											AdaptiveCard._haveWarnedAboutNoMarkdownProcessing = !0);
									return t
							}
							,
							AdaptiveCard.prototype.isVersionSupported = function() {
									return !!this.bypassVersionCheck || !(!this.version || !this.version.isValid || this.maxVersion.major < this.version.major || this.maxVersion.major === this.version.major && this.maxVersion.minor < this.version.minor)
							}
							,
							AdaptiveCard.prototype.getDefaultSerializationContext = function() {
									return new Ie(this.version)
							}
							,
							AdaptiveCard.prototype.getItemsCollectionPropertyName = function() {
									return "body"
							}
							,
							AdaptiveCard.prototype.internalParse = function(t, n) {
									this._fallbackCard = void 0;
									var i = n.parseElement(void 0, t.fallback, this.forbiddenChildElements(), !this.isDesignMode());
									i && (this._fallbackCard = new AdaptiveCard,
									this._fallbackCard.addItem(i)),
									e.prototype.internalParse.call(this, t, n)
							}
							,
							AdaptiveCard.prototype.internalToJSON = function(t, n) {
									this.setValue(AdaptiveCard.versionProperty, n.targetVersion),
									e.prototype.internalToJSON.call(this, t, n)
							}
							,
							AdaptiveCard.prototype.internalRender = function() {
									var t = e.prototype.internalRender.call(this);
									return c.GlobalSettings.useAdvancedCardBottomTruncation && t && t.style.removeProperty("minHeight"),
									t
							}
							,
							AdaptiveCard.prototype.getHasBackground = function(e) {
									return void 0 === e && (e = !1),
									!0
							}
							,
							AdaptiveCard.prototype.getDefaultPadding = function() {
									return new c.PaddingDefinition(l.Spacing.Padding,l.Spacing.Padding,l.Spacing.Padding,l.Spacing.Padding)
							}
							,
							AdaptiveCard.prototype.shouldSerialize = function(e) {
									return !0
							}
							,
							Object.defineProperty(AdaptiveCard.prototype, "renderIfEmpty", {
									get: function() {
											return !0
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(AdaptiveCard.prototype, "bypassVersionCheck", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(AdaptiveCard.prototype, "allowCustomStyle", {
									get: function() {
											return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(AdaptiveCard.prototype, "hasBackground", {
									get: function() {
											return !0
									},
									enumerable: !1,
									configurable: !0
							}),
							AdaptiveCard.prototype.getJsonTypeName = function() {
									return "AdaptiveCard"
							}
							,
							AdaptiveCard.prototype.internalValidateProperties = function(t) {
									e.prototype.internalValidateProperties.call(this, t),
									"AdaptiveCard" !== this.getValue(y.typeNameProperty) && t.addFailure(this, l.ValidationEvent.MissingCardType, _.Strings.errors.invalidCardType()),
									this.bypassVersionCheck || this.version ? this.isVersionSupported() || t.addFailure(this, l.ValidationEvent.UnsupportedCardVersion, _.Strings.errors.unsupportedCardVersion(this.version.toString(), this.maxVersion.toString())) : t.addFailure(this, l.ValidationEvent.PropertyCantBeNull, _.Strings.errors.propertyMustBeSet("version"))
							}
							,
							AdaptiveCard.prototype.render = function(t) {
									var n;
									return this.shouldFallback() && this._fallbackCard ? (this._fallbackCard.hostConfig = this.hostConfig,
									n = this._fallbackCard.render()) : (n = e.prototype.render.call(this)) && (n.classList.add(this.hostConfig.makeCssClassName("ac-adaptiveCard")),
									c.GlobalSettings.setTabIndexAtCardRoot && (n.tabIndex = 0),
									this.speak && n.setAttribute("aria-label", this.speak)),
									t && (d.appendChild(t, n),
									this.updateLayout()),
									n
							}
							,
							AdaptiveCard.prototype.updateLayout = function(t) {
									if (void 0 === t && (t = !0),
									e.prototype.updateLayout.call(this, t),
									c.GlobalSettings.useAdvancedCardBottomTruncation && this.isDisplayed()) {
											var n = this.hostConfig.getEffectiveSpacing(l.Spacing.Default);
											this.handleOverflow(this.renderedElement.offsetHeight - n)
									}
							}
							,
							AdaptiveCard.prototype.shouldFallback = function() {
									return e.prototype.shouldFallback.call(this) || !this.isVersionSupported()
							}
							,
							Object.defineProperty(AdaptiveCard.prototype, "hasVisibleSeparator", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							AdaptiveCard.schemaUrl = "http://adaptivecards.io/schemas/adaptive-card.json",
							AdaptiveCard.$schemaProperty = new m.CustomProperty(m.Versions.v1_0,"$schema",(function(e, t, n, i) {
									return AdaptiveCard.schemaUrl
							}
							),(function(e, t, n, i, r) {
									r.serializeValue(n, t.name, AdaptiveCard.schemaUrl)
							}
							)),
							AdaptiveCard.versionProperty = new m.CustomProperty(m.Versions.v1_0,"version",(function(e, t, n, i) {
									var r = m.Version.parse(n[t.name], i);
									return void 0 === r && (r = m.Versions.latest,
									i.logParseEvent(e, l.ValidationEvent.InvalidPropertyValue, _.Strings.errors.invalidCardVersion(r.toString()))),
									r
							}
							),(function(e, t, n, i, r) {
									void 0 !== i && r.serializeValue(n, t.name, i.toString())
							}
							),m.Versions.v1_0),
							AdaptiveCard.fallbackTextProperty = new m.StringProperty(m.Versions.v1_0,"fallbackText"),
							AdaptiveCard.speakProperty = new m.StringProperty(m.Versions.v1_0,"speak"),
							AdaptiveCard.refreshProperty = new m.SerializableObjectProperty(m.Versions.v1_4,"refresh",ve,!0),
							AdaptiveCard.authenticationProperty = new m.SerializableObjectProperty(m.Versions.v1_4,"authentication",Ce,!0),
							AdaptiveCard._haveWarnedAboutNoMarkdownProcessing = !1,
							o([(0,
							m.property)(AdaptiveCard.versionProperty)], AdaptiveCard.prototype, "version", void 0),
							o([(0,
							m.property)(AdaptiveCard.fallbackTextProperty)], AdaptiveCard.prototype, "fallbackText", void 0),
							o([(0,
							m.property)(AdaptiveCard.speakProperty)], AdaptiveCard.prototype, "speak", void 0),
							o([(0,
							m.property)(AdaptiveCard.refreshProperty)], AdaptiveCard.prototype, "refresh", null),
							o([(0,
							m.property)(AdaptiveCard.authenticationProperty)], AdaptiveCard.prototype, "authentication", void 0),
							AdaptiveCard
					}(fe);
					t.AdaptiveCard = Ee;
					var Te = function(e) {
							function InlineAdaptiveCard() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.suppressStyle = !1,
									t
							}
							return r(InlineAdaptiveCard, e),
							InlineAdaptiveCard.prototype.getSchemaKey = function() {
									return "InlineAdaptiveCard"
							}
							,
							InlineAdaptiveCard.prototype.populateSchema = function(t) {
									e.prototype.populateSchema.call(this, t),
									t.remove(Ee.$schemaProperty, Ee.versionProperty)
							}
							,
							InlineAdaptiveCard.prototype.getDefaultPadding = function() {
									return new c.PaddingDefinition(this.suppressStyle ? l.Spacing.None : l.Spacing.Padding,l.Spacing.Padding,this.suppressStyle ? l.Spacing.None : l.Spacing.Padding,l.Spacing.Padding)
							}
							,
							Object.defineProperty(InlineAdaptiveCard.prototype, "bypassVersionCheck", {
									get: function() {
											return !0
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(InlineAdaptiveCard.prototype, "defaultStyle", {
									get: function() {
											return this.suppressStyle ? l.ContainerStyle.Default : this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : l.ContainerStyle.Emphasis
									},
									enumerable: !1,
									configurable: !0
							}),
							InlineAdaptiveCard.prototype.render = function(t) {
									var n = e.prototype.render.call(this, t);
									return n && (n.setAttribute("aria-live", "polite"),
									n.removeAttribute("tabindex")),
									n
							}
							,
							InlineAdaptiveCard
					}(Ee)
						, Ie = function(e) {
							function SerializationContext() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t._forbiddenTypes = new Set,
									t
							}
							return r(SerializationContext, e),
							SerializationContext.prototype.internalParseCardObject = function(e, t, n, i, r, o) {
									var s = this
										, a = void 0;
									if (t && "object" == typeof t) {
											var p = new Set;
											this._forbiddenTypes.forEach((function(e) {
													p.add(e)
											}
											)),
											n.forEach((function(e) {
													s._forbiddenTypes.add(e)
											}
											));
											var u = d.parseString(t.type);
											if (u && this._forbiddenTypes.has(u))
													o(u, l.TypeErrorType.ForbiddenType);
											else {
													var h = !1;
													if ((a = r(u)) ? (a.setParent(e),
													a.parse(t, this),
													h = c.GlobalSettings.enableFallback && i && a.shouldFallback()) : (h = c.GlobalSettings.enableFallback && i,
													o(u, l.TypeErrorType.UnknownType)),
													h) {
															var m = t.fallback;
															!m && e && e.setShouldFallback(!0),
															"string" == typeof m && "drop" === m.toLowerCase() ? a = void 0 : "object" == typeof m && (a = this.internalParseCardObject(e, m, n, !0, r, o))
													}
											}
											this._forbiddenTypes = p
									}
									return a
							}
							,
							SerializationContext.prototype.cardObjectParsed = function(e, t) {
									e instanceof Z && this.onParseAction ? this.onParseAction(e, t, this) : e instanceof y && this.onParseElement && this.onParseElement(e, t, this)
							}
							,
							SerializationContext.prototype.shouldSerialize = function(e) {
									return e instanceof Z ? void 0 !== this.actionRegistry.findByName(e.getJsonTypeName()) : !(e instanceof y) || void 0 !== this.elementRegistry.findByName(e.getJsonTypeName())
							}
							,
							SerializationContext.prototype.parseCardObject = function(e, t, n, i, r, o) {
									var s = new Set(n)
										, a = this.internalParseCardObject(e, t, s, i, r, o);
									return void 0 !== a && this.cardObjectParsed(a, t),
									a
							}
							,
							SerializationContext.prototype.parseElement = function(e, t, n, i) {
									var r = this;
									return this.parseCardObject(e, t, n, i, (function(e) {
											return r.elementRegistry.createInstance(e, r.targetVersion)
									}
									), (function(e, t) {
											t === l.TypeErrorType.UnknownType ? r.logParseEvent(void 0, l.ValidationEvent.UnknownElementType, _.Strings.errors.unknownElementType(e)) : r.logParseEvent(void 0, l.ValidationEvent.ElementTypeNotAllowed, _.Strings.errors.elementTypeNotAllowed(e))
									}
									))
							}
							,
							SerializationContext.prototype.parseAction = function(e, t, n, i) {
									var r = this;
									return this.parseCardObject(e, t, n, i, (function(e) {
											return r.actionRegistry.createInstance(e, r.targetVersion)
									}
									), (function(e, t) {
											t === l.TypeErrorType.UnknownType ? r.logParseEvent(void 0, l.ValidationEvent.UnknownActionType, _.Strings.errors.unknownActionType(e)) : r.logParseEvent(void 0, l.ValidationEvent.ActionTypeNotAllowed, _.Strings.errors.actionTypeNotAllowed(e))
									}
									))
							}
							,
							Object.defineProperty(SerializationContext.prototype, "elementRegistry", {
									get: function() {
											var e;
											return null !== (e = this._elementRegistry) && void 0 !== e ? e : g.GlobalRegistry.elements
									},
									enumerable: !1,
									configurable: !0
							}),
							SerializationContext.prototype.setElementRegistry = function(e) {
									this._elementRegistry = e
							}
							,
							Object.defineProperty(SerializationContext.prototype, "actionRegistry", {
									get: function() {
											var e;
											return null !== (e = this._actionRegistry) && void 0 !== e ? e : g.GlobalRegistry.actions
									},
									enumerable: !1,
									configurable: !0
							}),
							SerializationContext.prototype.setActionRegistry = function(e) {
									this._actionRegistry = e
							}
							,
							SerializationContext
					}(m.BaseSerializationContext);
					t.SerializationContext = Ie,
					g.GlobalRegistry.defaultElements.register("Container", me),
					g.GlobalRegistry.defaultElements.register("TextBlock", S),
					g.GlobalRegistry.defaultElements.register("RichTextBlock", E, m.Versions.v1_2),
					g.GlobalRegistry.defaultElements.register("TextRun", C, m.Versions.v1_2),
					g.GlobalRegistry.defaultElements.register("Image", A),
					g.GlobalRegistry.defaultElements.register("ImageSet", x),
					g.GlobalRegistry.defaultElements.register("Media", U, m.Versions.v1_1),
					g.GlobalRegistry.defaultElements.register("FactSet", I),
					g.GlobalRegistry.defaultElements.register("ColumnSet", _e),
					g.GlobalRegistry.defaultElements.register("ActionSet", ce, m.Versions.v1_2),
					g.GlobalRegistry.defaultElements.register("Input.Text", V),
					g.GlobalRegistry.defaultElements.register("Input.Date", Y),
					g.GlobalRegistry.defaultElements.register("Input.Time", Q),
					g.GlobalRegistry.defaultElements.register("Input.Number", W),
					g.GlobalRegistry.defaultElements.register("Input.ChoiceSet", j),
					g.GlobalRegistry.defaultElements.register("Input.Toggle", H),
					g.GlobalRegistry.defaultActions.register(te.JsonTypeName, te),
					g.GlobalRegistry.defaultActions.register(J.JsonTypeName, J),
					g.GlobalRegistry.defaultActions.register(se.JsonTypeName, se),
					g.GlobalRegistry.defaultActions.register(ne.JsonTypeName, ne, m.Versions.v1_2),
					g.GlobalRegistry.defaultActions.register(ee.JsonTypeName, ee, m.Versions.v1_4)
			},
			182: function(e, t, n) {
					"use strict";
					var i, r = this && this.__extends || (i = function(e, t) {
							return i = Object.setPrototypeOf || {
									__proto__: []
							}instanceof Array && function(e, t) {
									e.__proto__ = t
							}
							|| function(e, t) {
									for (var n in t)
											Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
							}
							,
							i(e, t)
					}
					,
					function(e, t) {
							if ("function" != typeof t && null !== t)
									throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
							function __() {
									this.constructor = e
							}
							i(e, t),
							e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
							new __)
					}
					), o = this && this.__decorate || function(e, t, n, i) {
							var r, o = arguments.length, s = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
							if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
									s = Reflect.decorate(e, t, n, i);
							else
									for (var a = e.length - 1; a >= 0; a--)
											(r = e[a]) && (s = (o < 3 ? r(s) : o > 3 ? r(t, n, s) : r(t, n)) || s);
							return o > 3 && s && Object.defineProperty(t, n, s),
							s
					}
					;
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.CardObject = t.ValidationResults = void 0;
					var s = n(9003)
						, a = n(6758)
						, l = n(8418)
						, c = n(9779)
						, d = n(2421)
						, p = function() {
							function ValidationResults() {
									this.allIds = {},
									this.validationEvents = []
							}
							return ValidationResults.prototype.addFailure = function(e, t, n) {
									this.validationEvents.push({
											phase: s.ValidationPhase.Validation,
											source: e,
											event: t,
											message: n
									})
							}
							,
							ValidationResults
					}();
					t.ValidationResults = p;
					var u = function(e) {
							function CardObject() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t._shouldFallback = !1,
									t
							}
							return r(CardObject, e),
							CardObject.prototype.getSchemaKey = function() {
									return this.getJsonTypeName()
							}
							,
							Object.defineProperty(CardObject.prototype, "requires", {
									get: function() {
											return this.getValue(CardObject.requiresProperty)
									},
									enumerable: !1,
									configurable: !0
							}),
							CardObject.prototype.contains = function(e) {
									return !!this._renderedElement && this._renderedElement.contains(e)
							}
							,
							CardObject.prototype.preProcessPropertyValue = function(e, t) {
									var n = void 0 === t ? this.getValue(e) : t;
									if (l.GlobalSettings.allowPreProcessingPropertyValues) {
											for (var i = this; i && !i.onPreProcessPropertyValue; )
													i = i.parent;
											if (i && i.onPreProcessPropertyValue)
													return i.onPreProcessPropertyValue(this, e, n)
									}
									return n
							}
							,
							CardObject.prototype.setParent = function(e) {
									this._parent = e
							}
							,
							CardObject.prototype.setShouldFallback = function(e) {
									this._shouldFallback = e
							}
							,
							CardObject.prototype.shouldFallback = function() {
									return this._shouldFallback || !this.requires.areAllMet(this.hostConfig.hostCapabilities)
							}
							,
							CardObject.prototype.getRootObject = function() {
									for (var e = this; e.parent; )
											e = e.parent;
									return e
							}
							,
							CardObject.prototype.internalValidateProperties = function(e) {
									this.id && (e.allIds.hasOwnProperty(this.id) ? (1 === e.allIds[this.id] && e.addFailure(this, s.ValidationEvent.DuplicateId, a.Strings.errors.duplicateId(this.id)),
									e.allIds[this.id] += 1) : e.allIds[this.id] = 1)
							}
							,
							CardObject.prototype.validateProperties = function() {
									var e = new p;
									return this.internalValidateProperties(e),
									e
							}
							,
							CardObject.prototype.findDOMNodeOwner = function(e) {
									return this.contains(e) ? this : void 0
							}
							,
							CardObject.prototype.releaseDOMResources = function() {}
							,
							Object.defineProperty(CardObject.prototype, "parent", {
									get: function() {
											return this._parent
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(CardObject.prototype, "renderedElement", {
									get: function() {
											return this._renderedElement
									},
									enumerable: !1,
									configurable: !0
							}),
							CardObject.typeNameProperty = new d.StringProperty(d.Versions.v1_0,"type",void 0,void 0,void 0,(function(e) {
									return e.getJsonTypeName()
							}
							)),
							CardObject.idProperty = new d.StringProperty(d.Versions.v1_0,"id"),
							CardObject.requiresProperty = new d.SerializableObjectProperty(d.Versions.v1_2,"requires",c.HostCapabilities,!1,new c.HostCapabilities),
							o([(0,
							d.property)(CardObject.idProperty)], CardObject.prototype, "id", void 0),
							o([(0,
							d.property)(CardObject.requiresProperty)], CardObject.prototype, "requires", null),
							CardObject
					}(d.SerializableObject);
					t.CardObject = u
			},
			7516: function(e, t, n) {
					"use strict";
					var i, r = this && this.__extends || (i = function(e, t) {
							return i = Object.setPrototypeOf || {
									__proto__: []
							}instanceof Array && function(e, t) {
									e.__proto__ = t
							}
							|| function(e, t) {
									for (var n in t)
											Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
							}
							,
							i(e, t)
					}
					,
					function(e, t) {
							if ("function" != typeof t && null !== t)
									throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
							function __() {
									this.constructor = e
							}
							i(e, t),
							e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
							new __)
					}
					), o = this && this.__decorate || function(e, t, n, i) {
							var r, o = arguments.length, s = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
							if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
									s = Reflect.decorate(e, t, n, i);
							else
									for (var a = e.length - 1; a >= 0; a--)
											(r = e[a]) && (s = (o < 3 ? r(s) : o > 3 ? r(t, n, s) : r(t, n)) || s);
							return o > 3 && s && Object.defineProperty(t, n, s),
							s
					}
					, s = this && this.__spreadArray || function(e, t, n) {
							if (n || 2 === arguments.length)
									for (var i, r = 0, o = t.length; r < o; r++)
											!i && r in t || (i || (i = Array.prototype.slice.call(t, 0, r)),
											i[r] = t[r]);
							return e.concat(i || Array.prototype.slice.call(t))
					}
					;
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.CarouselEvent = t.Carousel = t.CarouselPage = void 0;
					var a = n(7191)
						, l = n(9003)
						, c = n(2421)
						, d = n(9301)
						, p = n(9003)
						, u = n(6758)
						, h = n(5679)
						, m = n(7794)
						, g = n(8418)
						, _ = function(e) {
							function CarouselPage() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(CarouselPage, e),
							CarouselPage.prototype.populateSchema = function(t) {
									e.prototype.populateSchema.call(this, t),
									t.remove(a.Container.styleProperty),
									t.remove(a.Container.bleedProperty),
									t.remove(a.Container.isVisibleProperty)
							}
							,
							CarouselPage.prototype.internalRender = function() {
									var t = document.createElement("div");
									t.className = this.hostConfig.makeCssClassName("swiper-slide"),
									this.rtl = this.isRtl();
									var n = e.prototype.internalRender.call(this);
									return m.appendChild(t, n),
									t
							}
							,
							CarouselPage.prototype.getForbiddenActionTypes = function() {
									return [a.ShowCardAction, a.ToggleVisibilityAction]
							}
							,
							CarouselPage.prototype.getForbiddenChildElements = function() {
									return this.forbiddenChildElements()
							}
							,
							CarouselPage.prototype.forbiddenChildElements = function() {
									return s([a.ToggleVisibilityAction.JsonTypeName, a.ShowCardAction.JsonTypeName, "Media", "ActionSet", "Input.Text", "Input.Date", "Input.Time", "Input.Number", "Input.ChoiceSet", "Input.Toggle", "Carousel"], e.prototype.forbiddenChildElements.call(this), !0)
							}
							,
							CarouselPage.prototype.internalParse = function(t, n) {
									e.prototype.internalParse.call(this, t, n),
									this.setShouldFallback(!1)
							}
							,
							CarouselPage.prototype.shouldSerialize = function(e) {
									return !0
							}
							,
							CarouselPage.prototype.getJsonTypeName = function() {
									return "CarouselPage"
							}
							,
							Object.defineProperty(CarouselPage.prototype, "isStandalone", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(CarouselPage.prototype, "hasVisibleSeparator", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							CarouselPage
					}(a.Container);
					t.CarouselPage = _;
					var f = function(e) {
							function Carousel() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t._pages = [],
									t._currentIndex = 0,
									t._previousEventType = l.CarouselInteractionEvent.Pagination,
									t
							}
							return r(Carousel, e),
							Carousel.prototype.populateSchema = function(t) {
									e.prototype.populateSchema.call(this, t),
									t.remove(a.Container.styleProperty),
									t.remove(a.Container.bleedProperty),
									t.remove(a.Container.isVisibleProperty)
							}
							,
							Object.defineProperty(Carousel.prototype, "timer", {
									get: function() {
											var e = this.getValue(Carousel.timerProperty);
											return e && e < this.hostConfig.carousel.minAutoplayDelay && (console.warn(u.Strings.errors.tooLittleTimeDelay),
											e = this.hostConfig.carousel.minAutoplayDelay),
											e
									},
									set: function(e) {
											e && e < this.hostConfig.carousel.minAutoplayDelay ? (console.warn(u.Strings.errors.tooLittleTimeDelay),
											this.setValue(Carousel.timerProperty, this.hostConfig.carousel.minAutoplayDelay)) : this.setValue(Carousel.timerProperty, e)
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(Carousel.prototype, "initialPageIndex", {
									get: function() {
											return this.getValue(Carousel.initialPageProperty)
									},
									set: function(e) {
											this.isValidParsedPageIndex(e) ? this.setValue(Carousel.initialPageProperty, e) : (console.warn(u.Strings.errors.invalidInitialPageIndex(e)),
											this.setValue(Carousel.initialPageProperty, 0))
									},
									enumerable: !1,
									configurable: !0
							}),
							Carousel.prototype.isValidParsedPageIndex = function(e) {
									return !!this._pages && this.isValidPageIndex(e, this._pages.length)
							}
							,
							Carousel.prototype.isValidRenderedPageIndex = function(e) {
									return !!this._renderedPages && this.isValidPageIndex(e, this._renderedPages.length)
							}
							,
							Carousel.prototype.isValidPageIndex = function(e, t) {
									return t > 0 && 0 <= e && e < t
							}
							,
							Object.defineProperty(Carousel.prototype, "previousEventType", {
									get: function() {
											return this._previousEventType
									},
									set: function(e) {
											this._previousEventType = e
									},
									enumerable: !1,
									configurable: !0
							}),
							Carousel.prototype.forbiddenChildElements = function() {
									return s([a.ToggleVisibilityAction.JsonTypeName, a.ShowCardAction.JsonTypeName, "Media", "ActionSet", "Input.Text", "Input.Date", "Input.Time", "Input.Number", "Input.ChoiceSet", "Input.Toggle"], e.prototype.forbiddenChildElements.call(this), !0)
							}
							,
							Carousel.prototype.adjustRenderedElementSize = function(t) {
									e.prototype.adjustRenderedElementSize.call(this, t),
									"stretch" == this.height && void 0 !== this._containerForAdorners && (this._containerForAdorners.style.height = "100%")
							}
							,
							Carousel.prototype.getJsonTypeName = function() {
									return "Carousel"
							}
							,
							Carousel.prototype.getItemCount = function() {
									return this._pages.length
							}
							,
							Carousel.prototype.getItemAt = function(e) {
									return this._pages[e]
							}
							,
							Carousel.prototype.addPage = function(e) {
									this._pages.push(e),
									e.setParent(this)
							}
							,
							Carousel.prototype.removeItem = function(e) {
									if (e instanceof _) {
											var t = this._pages.indexOf(e);
											if (t >= 0)
													return this._pages.splice(t, 1),
													e.setParent(void 0),
													this.updateLayout(),
													!0
									}
									return !1
							}
							,
							Carousel.prototype.getFirstVisibleRenderedItem = function() {
									var e;
									return this.renderedElement && (null === (e = this._renderedPages) || void 0 === e ? void 0 : e.length) > 0 ? this._renderedPages[0] : void 0
							}
							,
							Carousel.prototype.getLastVisibleRenderedItem = function() {
									var e;
									return this.renderedElement && (null === (e = this._renderedPages) || void 0 === e ? void 0 : e.length) > 0 ? this._renderedPages[this._renderedPages.length - 1] : void 0
							}
							,
							Object.defineProperty(Carousel.prototype, "currentPageId", {
									get: function() {
											var e, t;
											if (null === (t = null === (e = this._carousel) || void 0 === e ? void 0 : e.slides) || void 0 === t ? void 0 : t.length)
													return this._carousel.slides[this._carousel.activeIndex].id
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(Carousel.prototype, "currentPageIndex", {
									get: function() {
											var e;
											return null === (e = this._carousel) || void 0 === e ? void 0 : e.realIndex
									},
									enumerable: !1,
									configurable: !0
							}),
							Carousel.prototype.internalParse = function(t, n) {
									e.prototype.internalParse.call(this, t, n),
									this._pages = [];
									var i = t.pages;
									if (Array.isArray(i))
											for (var r = 0, o = i; r < o.length; r++) {
													var s = o[r]
														, a = this.createCarouselPageInstance(s, n);
													a && this._pages.push(a)
											}
									this.validateParsing(n)
							}
							,
							Carousel.prototype.validateParsing = function(e) {
									this.isValidParsedPageIndex(this.initialPageIndex) || e.logParseEvent(this, l.ValidationEvent.InvalidPropertyValue, u.Strings.errors.invalidInitialPageIndex(this.initialPageIndex))
							}
							,
							Carousel.prototype.internalToJSON = function(t, n) {
									e.prototype.internalToJSON.call(this, t, n),
									n.serializeArray(t, "pages", this._pages)
							}
							,
							Carousel.prototype.internalRender = function() {
									var e, t = this;
									if (this._renderedPages = [],
									!(this._pages.length <= 0)) {
											var n = document.createElement("div");
											n.className = this.hostConfig.makeCssClassName("ac-carousel-card-level-container");
											var i = document.createElement("div");
											i.className = this.hostConfig.makeCssClassName("swiper", "ac-carousel");
											var r = document.createElement("div");
											r.className = this.hostConfig.makeCssClassName("ac-carousel-container"),
											this._containerForAdorners = r,
											n.appendChild(r);
											var o = document.createElement("div");
											switch (o.className = this.hostConfig.makeCssClassName("swiper-wrapper", "ac-carousel-card-container"),
											o.style.display = "flex",
											this.getEffectiveVerticalContentAlignment()) {
											case l.VerticalAlignment.Top:
													o.style.alignItems = "flex-start";
													break;
											case l.VerticalAlignment.Bottom:
													o.style.alignItems = "flex-end";
													break;
											default:
													o.style.alignItems = "center"
											}
											g.GlobalSettings.useAdvancedCardBottomTruncation && (o.style.minHeight = "-webkit-min-content");
											var s = document.createElement("div");
											s.className = this.hostConfig.makeCssClassName("swiper-button-prev", "ac-carousel-left"),
											r.appendChild(s),
											m.addCancelSelectActionEventHandler(s);
											var a = document.createElement("div");
											a.className = this.hostConfig.makeCssClassName("swiper-button-next", "ac-carousel-right"),
											r.appendChild(a),
											m.addCancelSelectActionEventHandler(a);
											var c = document.createElement("div");
											c.className = this.hostConfig.makeCssClassName("swiper-pagination", "ac-carousel-pagination"),
											m.addCancelSelectActionEventHandler(c),
											r.appendChild(c),
											this.isDesignMode() && (s.style.zIndex = "20",
											a.style.zIndex = "20",
											c.style.zIndex = "20");
											var d = Math.min(this._pages.length, this.hostConfig.carousel.maxCarouselPages);
											if (this._pages.length > this.hostConfig.carousel.maxCarouselPages && console.warn(u.Strings.errors.tooManyCarouselPages),
											this._pages.length > 0)
													for (var p = 0; p < d; p++) {
															var h = this._pages[p]
																, _ = this.isElementAllowed(h) ? h.render() : void 0;
															null == _ || _.classList.add("ac-carousel-page"),
															null === (e = null == _ ? void 0 : _.children[0]) || void 0 === e || e.classList.add("ac-carousel-page-container"),
															_ && (m.appendChild(o, _),
															this._renderedPages.push(h))
													}
											return i.appendChild(o),
											i.tabIndex = this.isDesignMode() ? -1 : 0,
											r.appendChild(i),
											this._carouselPageContainer = i,
											this.rtl = this.isRtl(),
											this.applyRTL(i),
											this.isDesignMode() || (this.isValidRenderedPageIndex(this.initialPageIndex) ? this._currentIndex = this.initialPageIndex : (console.warn(u.Strings.errors.invalidInitialPageIndex(this.initialPageIndex)),
											this._currentIndex = 0)),
											this.initializeCarouselControl(i, a, s, c, this.rtl),
											n.addEventListener("keydown", (function(e) {
													var n, r, o = null === (n = t._carousel) || void 0 === n ? void 0 : n.activeIndex;
													t.initializeCarouselControl(i, a, s, c, t.rtl),
													o && (null === (r = t._carousel) || void 0 === r || r.slideTo(o))
											}
											), {
													once: !0
											}),
											this._renderedPages.length > 0 ? n : void 0
									}
							}
							,
							Carousel.prototype.initializeCarouselControl = function(e, t, n, i, r) {
									var o, s = this, a = {
											loop: !this.isDesignMode(),
											modules: [h.Navigation, h.Pagination, h.Scrollbar, h.A11y, h.History, h.Keyboard],
											pagination: {
													el: i,
													clickable: !0
											},
											navigation: {
													prevEl: void 0 !== r && r ? t : n,
													nextEl: void 0 !== r && r ? n : t
											},
											a11y: {
													enabled: !0
											},
											keyboard: {
													enabled: !0,
													onlyInViewport: !0
											},
											initialSlide: this._currentIndex
									};
									this.timer && !this.isDesignMode() && (null === (o = a.modules) || void 0 === o || o.push(h.Autoplay),
									a.autoplay = {
											delay: this.timer,
											pauseOnMouseEnter: !0
									});
									var c = new h.Swiper(e,a);
									e.addEventListener("mouseenter", (function(e) {
											var t;
											null === (t = c.autoplay) || void 0 === t || t.stop()
									}
									)),
									e.addEventListener("mouseleave", (function(e) {
											var t;
											null === (t = c.autoplay) || void 0 === t || t.start()
									}
									)),
									c.on("navigationNext", (function(e) {
											s.raiseCarouselEvent(l.CarouselInteractionEvent.NavigationNext)
									}
									)),
									c.on("navigationPrev", (function(e) {
											s.raiseCarouselEvent(l.CarouselInteractionEvent.NavigationPrevious)
									}
									)),
									c.on("slideChangeTransitionEnd", (function(e) {
											s.currentIndex = e.realIndex,
											s.raiseCarouselEvent(l.CarouselInteractionEvent.Pagination)
									}
									)),
									c.on("autoplay", (function() {
											s.raiseCarouselEvent(l.CarouselInteractionEvent.Autoplay)
									}
									)),
									this._carousel = c
							}
							,
							Carousel.prototype.createCarouselPageInstance = function(e, t) {
									return t.parseCardObject(this, e, this.forbiddenChildElements(), !this.isDesignMode(), (function(e) {
											return e && "CarouselPage" !== e ? void 0 : new _
									}
									), (function(e, n) {
											t.logParseEvent(void 0, p.ValidationEvent.ElementTypeNotAllowed, u.Strings.errors.elementTypeNotAllowed(e))
									}
									))
							}
							,
							Carousel.prototype.slideTo = function(e) {
									var t;
									null === (t = this._carousel) || void 0 === t || t.slideTo(e)
							}
							,
							Object.defineProperty(Carousel.prototype, "carouselPageContainer", {
									get: function() {
											return this._carouselPageContainer
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(Carousel.prototype, "currentIndex", {
									get: function() {
											return this._currentIndex
									},
									set: function(e) {
											this._currentIndex = e
									},
									enumerable: !1,
									configurable: !0
							}),
							Carousel.prototype.createCarouselEvent = function(e) {
									var t;
									return null != this.currentPageIndex && (t = this.getItemAt(this.currentPageIndex).id),
									new CarouselEvent(e,this.id,t,this.currentPageIndex)
							}
							,
							Carousel.prototype.raiseCarouselEvent = function(e) {
									var t = this.parent ? this.parent.getRootElement() : void 0
										, n = t && t.onCarouselEvent ? t.onCarouselEvent : a.AdaptiveCard.onCarouselEvent;
									n && e == l.CarouselInteractionEvent.Pagination && n(this.createCarouselEvent(this.previousEventType)),
									this.previousEventType = e
							}
							,
							Carousel.timerProperty = new c.NumProperty(c.Versions.v1_6,"timer",void 0),
							Carousel.initialPageProperty = new c.NumProperty(c.Versions.v1_6,"initialPage",0),
							o([(0,
							c.property)(Carousel.timerProperty)], Carousel.prototype, "timer", null),
							o([(0,
							c.property)(Carousel.initialPageProperty)], Carousel.prototype, "initialPageIndex", null),
							Carousel
					}(a.Container);
					t.Carousel = f;
					var CarouselEvent = function(e, t, n, i) {
							this.type = e,
							this.carouselId = t,
							this.activeCarouselPageId = n,
							this.activeCarouselPageIndex = i
					};
					t.CarouselEvent = CarouselEvent,
					d.GlobalRegistry.defaultElements.register("Carousel", f, c.Versions.v1_6)
			},
			160: (e,t)=>{
					"use strict";
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.ChannelAdapter = void 0;
					var ChannelAdapter = function() {};
					t.ChannelAdapter = ChannelAdapter
			}
			,
			8607: (e,t)=>{
					"use strict";
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.Collection = void 0;
					var n = function() {
							function Collection() {
									this._items = []
							}
							return Collection.prototype.get = function(e) {
									return this._items[e]
							}
							,
							Collection.prototype.add = function(e) {
									this._items.push(e),
									this.onItemAdded && this.onItemAdded(e)
							}
							,
							Collection.prototype.remove = function(e) {
									var t = this._items.indexOf(e);
									t >= 0 && (this._items = this._items.splice(t, 1),
									this.onItemRemoved && this.onItemRemoved(e))
							}
							,
							Collection.prototype.indexOf = function(e) {
									return this._items.indexOf(e)
							}
							,
							Object.defineProperty(Collection.prototype, "length", {
									get: function() {
											return this._items.length
									},
									enumerable: !1,
									configurable: !0
							}),
							Collection
					}();
					t.Collection = n
			}
			,
			336: (e,t)=>{
					"use strict";
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.Constants = void 0;
					var n = function() {
							function Constants() {}
							return Constants.keys = {
									tab: "Tab",
									enter: "Enter",
									escape: "Escape",
									space: " ",
									up: "ArrowUp",
									down: "ArrowDown",
									delete: "Delete"
							},
							Constants
					}();
					t.Constants = n
			}
			,
			9336: function(e, t, n) {
					"use strict";
					var i = this && this.__createBinding || (Object.create ? function(e, t, n, i) {
							void 0 === i && (i = n);
							var r = Object.getOwnPropertyDescriptor(t, n);
							r && !("get"in r ? !t.__esModule : r.writable || r.configurable) || (r = {
									enumerable: !0,
									get: function() {
											return t[n]
									}
							}),
							Object.defineProperty(e, i, r)
					}
					: function(e, t, n, i) {
							void 0 === i && (i = n),
							e[i] = t[n]
					}
					)
						, r = this && this.__exportStar || function(e, t) {
							for (var n in e)
									"default" === n || Object.prototype.hasOwnProperty.call(t, n) || i(t, e, n)
					}
					;
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					r(n(2044), t),
					r(n(3468), t)
			},
			2044: (e,t,n)=>{
					"use strict";
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.MenuItem = void 0;
					var i = n(351)
						, r = n(336)
						, o = function() {
							function MenuItem(e, t) {
									this._isEnabled = !0,
									this.key = e,
									this._value = t
							}
							return MenuItem.prototype.click = function() {
									this.isEnabled && this.onClick && this.onClick(this)
							}
							,
							MenuItem.prototype.updateCssClasses = function() {
									if (this._element) {
											var e = this._hostConfig ? this._hostConfig : i.defaultHostConfig;
											this._element.className = e.makeCssClassName("ac-ctrl"),
											this._element.classList.add(e.makeCssClassName(this.isEnabled ? "ac-ctrl-dropdown-item" : "ac-ctrl-dropdown-item-disabled")),
											this.isEnabled || this._element.classList.add(e.makeCssClassName("ac-disabled"))
									}
							}
							,
							MenuItem.prototype.toString = function() {
									return this.value
							}
							,
							MenuItem.prototype.render = function(e) {
									var t = this;
									return this._hostConfig = e,
									this._element || (this._element = document.createElement("span"),
									this._element.innerText = this.value,
									this._element.setAttribute("role", "menuitem"),
									this.isEnabled || this._element.setAttribute("aria-disabled", "true"),
									this._element.setAttribute("aria-current", "false"),
									this._element.onmouseup = function(e) {
											t.click()
									}
									,
									this._element.onkeydown = function(e) {
											e.key === r.Constants.keys.enter && (e.cancelBubble = !0,
											t.click())
									}
									,
									this.updateCssClasses()),
									this._element
							}
							,
							Object.defineProperty(MenuItem.prototype, "value", {
									get: function() {
											return this._value
									},
									set: function(e) {
											this._value = e,
											this._element && (this._element.innerText = e)
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(MenuItem.prototype, "isEnabled", {
									get: function() {
											return this._isEnabled
									},
									set: function(e) {
											this._isEnabled !== e && (this._isEnabled = e,
											this.updateCssClasses())
									},
									enumerable: !1,
									configurable: !0
							}),
							MenuItem
					}();
					t.MenuItem = o
			}
			,
			9985: (e,t,n)=>{
					"use strict";
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.PopupControl = void 0;
					var i = n(336)
						, r = n(7794)
						, o = n(351)
						, s = function() {
							function PopupControl() {
									this._isOpen = !1
							}
							return PopupControl.prototype.keyDown = function(e) {
									if (e.key === i.Constants.keys.escape)
											this.closePopup(!0)
							}
							,
							PopupControl.prototype.render = function(e) {
									var t = this
										, n = document.createElement("div");
									return n.tabIndex = 0,
									n.className = this.hostConfig.makeCssClassName("ac-ctrl", "ac-ctrl-popup-container"),
									n.setAttribute("role", "dialog"),
									n.setAttribute("aria-modal", "true"),
									n.onkeydown = function(e) {
											return t.keyDown(e),
											!e.cancelBubble
									}
									,
									n.appendChild(this.renderContent()),
									n
							}
							,
							PopupControl.prototype.focus = function() {
									this._popupElement && this._popupElement.firstElementChild.focus()
							}
							,
							PopupControl.prototype.popup = function(e) {
									var t, n, i, o, s, a = this;
									if (!this._isOpen) {
											this._overlayElement = document.createElement("div"),
											this._overlayElement.className = this.hostConfig.makeCssClassName("ac-ctrl-overlay"),
											this._overlayElement.tabIndex = 0,
											this._overlayElement.style.width = document.documentElement.scrollWidth + "px",
											this._overlayElement.style.height = document.documentElement.scrollHeight + "px",
											this._overlayElement.onfocus = function(e) {
													a.closePopup(!0)
											}
											,
											document.body.appendChild(this._overlayElement);
											var l = e.getBoundingClientRect();
											this._popupElement = this.render(l),
											(t = this._popupElement.classList).remove.apply(t, this.hostConfig.makeCssClassNames("ac-ctrl-slide", "ac-ctrl-slideLeftToRight", "ac-ctrl-slideRightToLeft", "ac-ctrl-slideTopToBottom", "ac-ctrl-slideRightToLeft")),
											window.addEventListener("resize", (function(e) {
													a.closePopup(!0)
											}
											));
											var c = e.getAttribute("aria-label");
											c && this._popupElement.setAttribute("aria-label", c),
											this._overlayElement.appendChild(this._popupElement);
											var d, p = this._popupElement.getBoundingClientRect(), u = window.innerHeight - l.bottom, h = l.top, m = window.innerWidth - l.right, g = l.left, _ = l.left + r.getScrollX();
											if (h < p.height && u < p.height) {
													var f = Math.min(p.height, window.innerHeight);
													if (this._popupElement.style.maxHeight = f + "px",
													d = f < p.height ? r.getScrollY() : r.getScrollY() + l.top + (l.height - f) / 2,
													g < p.width && m < p.width) {
															var y = Math.min(p.width, window.innerWidth);
															this._popupElement.style.maxWidth = y + "px",
															_ = y < p.width ? r.getScrollX() : r.getScrollX() + l.left + (l.width - y) / 2
													} else
															m >= p.width ? (_ = r.getScrollX() + l.right,
															(n = this._popupElement.classList).add.apply(n, this.hostConfig.makeCssClassNames("ac-ctrl-slide", "ac-ctrl-slideLeftToRight"))) : (_ = r.getScrollX() + l.left - p.width,
															(i = this._popupElement.classList).add.apply(i, this.hostConfig.makeCssClassNames("ac-ctrl-slide", "ac-ctrl-slideRightToLeft")))
											} else
													u >= p.height ? (d = r.getScrollY() + l.bottom,
													(o = this._popupElement.classList).add.apply(o, this.hostConfig.makeCssClassNames("ac-ctrl-slide", "ac-ctrl-slideTopToBottom"))) : (d = r.getScrollY() + l.top - p.height,
													(s = this._popupElement.classList).add.apply(s, this.hostConfig.makeCssClassNames("ac-ctrl-slide", "ac-ctrl-slideBottomToTop"))),
													m < p.width && (_ = r.getScrollX() + l.right - p.width);
											this._popupElement.style.left = _ + "px",
											this._popupElement.style.top = d + "px",
											this._popupElement.focus(),
											this._isOpen = !0
									}
							}
							,
							PopupControl.prototype.closePopup = function(e) {
									this._isOpen && (document.body.removeChild(this._overlayElement),
									this._isOpen = !1,
									this.onClose && this.onClose(this, e))
							}
							,
							Object.defineProperty(PopupControl.prototype, "hostConfig", {
									get: function() {
											return this._hostConfig ? this._hostConfig : o.defaultHostConfig
									},
									set: function(e) {
											this._hostConfig = e
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(PopupControl.prototype, "isOpen", {
									get: function() {
											return this._isOpen
									},
									enumerable: !1,
									configurable: !0
							}),
							PopupControl
					}();
					t.PopupControl = s
			}
			,
			3468: function(e, t, n) {
					"use strict";
					var i, r = this && this.__extends || (i = function(e, t) {
							return i = Object.setPrototypeOf || {
									__proto__: []
							}instanceof Array && function(e, t) {
									e.__proto__ = t
							}
							|| function(e, t) {
									for (var n in t)
											Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
							}
							,
							i(e, t)
					}
					,
					function(e, t) {
							if ("function" != typeof t && null !== t)
									throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
							function __() {
									this.constructor = e
							}
							i(e, t),
							e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
							new __)
					}
					);
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.PopupMenu = void 0;
					var o = n(336)
						, s = n(8607)
						, a = function(e) {
							function PopupMenu() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t._items = new s.Collection,
									t._renderedItems = [],
									t._selectedIndex = -1,
									t
							}
							return r(PopupMenu, e),
							PopupMenu.prototype.renderContent = function() {
									var e = document.createElement("div");
									e.className = this.hostConfig.makeCssClassName("ac-ctrl ac-popup"),
									e.setAttribute("role", "listbox");
									for (var t = 0; t < this._items.length; t++) {
											var n = this._items.get(t).render(this.hostConfig);
											n.tabIndex = 0,
											e.appendChild(n),
											t === this.selectedIndex && n.focus(),
											this._renderedItems.push(n)
									}
									return e
							}
							,
							PopupMenu.prototype.keyDown = function(t) {
									e.prototype.keyDown.call(this, t);
									var n = this._selectedIndex;
									switch (t.key) {
									case o.Constants.keys.tab:
											this.closePopup(!0);
											break;
									case o.Constants.keys.up:
											(n <= 0 || --n < 0) && (n = this._renderedItems.length - 1),
											this.selectedIndex = n,
											t.cancelBubble = !0;
											break;
									case o.Constants.keys.down:
											(n < 0 || ++n >= this._renderedItems.length) && (n = 0),
											this.selectedIndex = n,
											t.cancelBubble = !0
									}
							}
							,
							Object.defineProperty(PopupMenu.prototype, "items", {
									get: function() {
											return this._items
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(PopupMenu.prototype, "selectedIndex", {
									get: function() {
											return this._selectedIndex
									},
									set: function(e) {
											e >= 0 && e < this._renderedItems.length && (this._renderedItems[e].focus(),
											this._selectedIndex = e)
									},
									enumerable: !1,
									configurable: !0
							}),
							PopupMenu
					}(n(9985).PopupControl);
					t.PopupMenu = a
			},
			9003: (e,t)=>{
					"use strict";
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.CarouselInteractionEvent = t.LogLevel = t.RefreshMode = t.TypeErrorType = t.ContainerFitStatus = t.ValidationEvent = t.ValidationPhase = t.InputTextStyle = t.ActionIconPlacement = t.FillMode = t.Orientation = t.ShowCardActionMode = t.ImageStyle = t.ActionAlignment = t.VerticalAlignment = t.HorizontalAlignment = t.TextColor = t.Spacing = t.FontType = t.TextWeight = t.TextSize = t.SizeUnit = t.ImageSize = t.Size = t.ActionMode = t.ActionStyle = t.ContainerStyle = void 0;
					var n = function() {
							function ContainerStyle() {}
							return ContainerStyle.Default = "default",
							ContainerStyle.Emphasis = "emphasis",
							ContainerStyle.Accent = "accent",
							ContainerStyle.Good = "good",
							ContainerStyle.Attention = "attention",
							ContainerStyle.Warning = "warning",
							ContainerStyle
					}();
					t.ContainerStyle = n;
					var i = function() {
							function ActionStyle() {}
							return ActionStyle.Default = "default",
							ActionStyle.Positive = "positive",
							ActionStyle.Destructive = "destructive",
							ActionStyle
					}();
					t.ActionStyle = i;
					var r = function() {
							function ActionMode() {}
							return ActionMode.Primary = "primary",
							ActionMode.Secondary = "secondary",
							ActionMode
					}();
					t.ActionMode = r,
					function(e) {
							e[e.Auto = 0] = "Auto",
							e[e.Stretch = 1] = "Stretch",
							e[e.Small = 2] = "Small",
							e[e.Medium = 3] = "Medium",
							e[e.Large = 4] = "Large"
					}(t.Size || (t.Size = {})),
					function(e) {
							e[e.Small = 0] = "Small",
							e[e.Medium = 1] = "Medium",
							e[e.Large = 2] = "Large"
					}(t.ImageSize || (t.ImageSize = {})),
					function(e) {
							e[e.Weight = 0] = "Weight",
							e[e.Pixel = 1] = "Pixel"
					}(t.SizeUnit || (t.SizeUnit = {})),
					function(e) {
							e[e.Small = 0] = "Small",
							e[e.Default = 1] = "Default",
							e[e.Medium = 2] = "Medium",
							e[e.Large = 3] = "Large",
							e[e.ExtraLarge = 4] = "ExtraLarge"
					}(t.TextSize || (t.TextSize = {})),
					function(e) {
							e[e.Lighter = 0] = "Lighter",
							e[e.Default = 1] = "Default",
							e[e.Bolder = 2] = "Bolder"
					}(t.TextWeight || (t.TextWeight = {})),
					function(e) {
							e[e.Default = 0] = "Default",
							e[e.Monospace = 1] = "Monospace"
					}(t.FontType || (t.FontType = {})),
					function(e) {
							e[e.None = 0] = "None",
							e[e.Small = 1] = "Small",
							e[e.Default = 2] = "Default",
							e[e.Medium = 3] = "Medium",
							e[e.Large = 4] = "Large",
							e[e.ExtraLarge = 5] = "ExtraLarge",
							e[e.Padding = 6] = "Padding"
					}(t.Spacing || (t.Spacing = {})),
					function(e) {
							e[e.Default = 0] = "Default",
							e[e.Dark = 1] = "Dark",
							e[e.Light = 2] = "Light",
							e[e.Accent = 3] = "Accent",
							e[e.Good = 4] = "Good",
							e[e.Warning = 5] = "Warning",
							e[e.Attention = 6] = "Attention"
					}(t.TextColor || (t.TextColor = {})),
					function(e) {
							e[e.Left = 0] = "Left",
							e[e.Center = 1] = "Center",
							e[e.Right = 2] = "Right"
					}(t.HorizontalAlignment || (t.HorizontalAlignment = {})),
					function(e) {
							e[e.Top = 0] = "Top",
							e[e.Center = 1] = "Center",
							e[e.Bottom = 2] = "Bottom"
					}(t.VerticalAlignment || (t.VerticalAlignment = {})),
					function(e) {
							e[e.Left = 0] = "Left",
							e[e.Center = 1] = "Center",
							e[e.Right = 2] = "Right",
							e[e.Stretch = 3] = "Stretch"
					}(t.ActionAlignment || (t.ActionAlignment = {})),
					function(e) {
							e[e.Default = 0] = "Default",
							e[e.Person = 1] = "Person"
					}(t.ImageStyle || (t.ImageStyle = {})),
					function(e) {
							e[e.Inline = 0] = "Inline",
							e[e.Popup = 1] = "Popup"
					}(t.ShowCardActionMode || (t.ShowCardActionMode = {})),
					function(e) {
							e[e.Horizontal = 0] = "Horizontal",
							e[e.Vertical = 1] = "Vertical"
					}(t.Orientation || (t.Orientation = {})),
					function(e) {
							e[e.Cover = 0] = "Cover",
							e[e.RepeatHorizontally = 1] = "RepeatHorizontally",
							e[e.RepeatVertically = 2] = "RepeatVertically",
							e[e.Repeat = 3] = "Repeat"
					}(t.FillMode || (t.FillMode = {})),
					function(e) {
							e[e.LeftOfTitle = 0] = "LeftOfTitle",
							e[e.AboveTitle = 1] = "AboveTitle"
					}(t.ActionIconPlacement || (t.ActionIconPlacement = {})),
					function(e) {
							e[e.Text = 0] = "Text",
							e[e.Tel = 1] = "Tel",
							e[e.Url = 2] = "Url",
							e[e.Email = 3] = "Email",
							e[e.Password = 4] = "Password"
					}(t.InputTextStyle || (t.InputTextStyle = {})),
					function(e) {
							e[e.Parse = 0] = "Parse",
							e[e.ToJSON = 1] = "ToJSON",
							e[e.Validation = 2] = "Validation"
					}(t.ValidationPhase || (t.ValidationPhase = {})),
					function(e) {
							e[e.Hint = 0] = "Hint",
							e[e.ActionTypeNotAllowed = 1] = "ActionTypeNotAllowed",
							e[e.CollectionCantBeEmpty = 2] = "CollectionCantBeEmpty",
							e[e.Deprecated = 3] = "Deprecated",
							e[e.ElementTypeNotAllowed = 4] = "ElementTypeNotAllowed",
							e[e.InteractivityNotAllowed = 5] = "InteractivityNotAllowed",
							e[e.InvalidPropertyValue = 6] = "InvalidPropertyValue",
							e[e.MissingCardType = 7] = "MissingCardType",
							e[e.PropertyCantBeNull = 8] = "PropertyCantBeNull",
							e[e.TooManyActions = 9] = "TooManyActions",
							e[e.UnknownActionType = 10] = "UnknownActionType",
							e[e.UnknownElementType = 11] = "UnknownElementType",
							e[e.UnsupportedCardVersion = 12] = "UnsupportedCardVersion",
							e[e.DuplicateId = 13] = "DuplicateId",
							e[e.UnsupportedProperty = 14] = "UnsupportedProperty",
							e[e.RequiredInputsShouldHaveLabel = 15] = "RequiredInputsShouldHaveLabel",
							e[e.RequiredInputsShouldHaveErrorMessage = 16] = "RequiredInputsShouldHaveErrorMessage",
							e[e.Other = 17] = "Other"
					}(t.ValidationEvent || (t.ValidationEvent = {})),
					function(e) {
							e[e.FullyInContainer = 0] = "FullyInContainer",
							e[e.Overflowing = 1] = "Overflowing",
							e[e.FullyOutOfContainer = 2] = "FullyOutOfContainer"
					}(t.ContainerFitStatus || (t.ContainerFitStatus = {})),
					function(e) {
							e[e.UnknownType = 0] = "UnknownType",
							e[e.ForbiddenType = 1] = "ForbiddenType"
					}(t.TypeErrorType || (t.TypeErrorType = {})),
					function(e) {
							e[e.Disabled = 0] = "Disabled",
							e[e.Manual = 1] = "Manual",
							e[e.Automatic = 2] = "Automatic"
					}(t.RefreshMode || (t.RefreshMode = {})),
					function(e) {
							e[e.Info = 0] = "Info",
							e[e.Warning = 1] = "Warning",
							e[e.Error = 2] = "Error"
					}(t.LogLevel || (t.LogLevel = {})),
					function(e) {
							e[e.NavigationNext = 0] = "NavigationNext",
							e[e.NavigationPrevious = 1] = "NavigationPrevious",
							e[e.Pagination = 2] = "Pagination",
							e[e.Autoplay = 3] = "Autoplay"
					}(t.CarouselInteractionEvent || (t.CarouselInteractionEvent = {}))
			}
			,
			9779: function(e, t, n) {
					"use strict";
					var i, r = this && this.__extends || (i = function(e, t) {
							return i = Object.setPrototypeOf || {
									__proto__: []
							}instanceof Array && function(e, t) {
									e.__proto__ = t
							}
							|| function(e, t) {
									for (var n in t)
											Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
							}
							,
							i(e, t)
					}
					,
					function(e, t) {
							if ("function" != typeof t && null !== t)
									throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
							function __() {
									this.constructor = e
							}
							i(e, t),
							e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
							new __)
					}
					);
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.HostCapabilities = void 0;
					var o = n(2421)
						, s = function(e) {
							function HostCapabilities() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t._capabilities = {},
									t
							}
							return r(HostCapabilities, e),
							HostCapabilities.prototype.getSchemaKey = function() {
									return "HostCapabilities"
							}
							,
							HostCapabilities.prototype.internalParse = function(t, n) {
									if (e.prototype.internalParse.call(this, t, n),
									t)
											for (var i in t) {
													var r = t[i];
													if ("string" == typeof r)
															if ("*" === r)
																	this.addCapability(i, "*");
															else {
																	var s = o.Version.parse(r, n);
																	(null == s ? void 0 : s.isValid) && this.addCapability(i, s)
															}
											}
							}
							,
							HostCapabilities.prototype.internalToJSON = function(t, n) {
									for (var i in e.prototype.internalToJSON.call(this, t, n),
									this._capabilities)
											t[i] = this._capabilities[i]
							}
							,
							HostCapabilities.prototype.addCapability = function(e, t) {
									this._capabilities[e] = t
							}
							,
							HostCapabilities.prototype.removeCapability = function(e) {
									delete this._capabilities[e]
							}
							,
							HostCapabilities.prototype.clear = function() {
									this._capabilities = {}
							}
							,
							HostCapabilities.prototype.hasCapability = function(e, t) {
									return !!this._capabilities.hasOwnProperty(e) && ("*" === t || "*" === this._capabilities[e] || t.compareTo(this._capabilities[e]) <= 0)
							}
							,
							HostCapabilities.prototype.areAllMet = function(e) {
									for (var t in this._capabilities)
											if (!e.hasCapability(t, this._capabilities[t]))
													return !1;
									return !0
							}
							,
							HostCapabilities
					}(o.SerializableObject);
					t.HostCapabilities = s
			},
			351: function(e, t, n) {
					"use strict";
					var i, r = this && this.__extends || (i = function(e, t) {
							return i = Object.setPrototypeOf || {
									__proto__: []
							}instanceof Array && function(e, t) {
									e.__proto__ = t
							}
							|| function(e, t) {
									for (var n in t)
											Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
							}
							,
							i(e, t)
					}
					,
					function(e, t) {
							if ("function" != typeof t && null !== t)
									throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
							function __() {
									this.constructor = e
							}
							i(e, t),
							e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
							new __)
					}
					);
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.defaultHostConfig = t.HostConfig = t.CarouselConfig = t.FontTypeSet = t.FontTypeDefinition = t.ContainerStyleSet = t.ContainerStyleDefinition = t.ColorSetDefinition = t.ActionsConfig = t.ShowCardActionConfig = t.FactSetConfig = t.FactTitleDefinition = t.FactTextDefinition = t.InputConfig = t.InputLabelConfig = t.RequiredInputLabelTextDefinition = t.TextBlockConfig = t.TextStyleSet = t.TextStyleDefinition = t.BaseTextDefinition = t.TableConfig = t.MediaConfig = t.ImageSetConfig = t.AdaptiveCardConfig = t.TextColorDefinition = t.ColorDefinition = void 0;
					var o = n(9003)
						, s = n(7794)
						, a = n(8418)
						, l = n(9779);
					function parseHostConfigEnum(e, t, n) {
							if ("string" == typeof t) {
									var i = s.parseEnum(e, t, n);
									return void 0 !== i ? i : n
							}
							return "number" == typeof t ? t : n
					}
					var c = function() {
							function ColorDefinition(e, t) {
									this.default = "#000000",
									this.subtle = "#666666",
									e && (this.default = e),
									t && (this.subtle = t)
							}
							return ColorDefinition.prototype.parse = function(e) {
									e && (this.default = e.default || this.default,
									this.subtle = e.subtle || this.subtle)
							}
							,
							ColorDefinition
					}();
					t.ColorDefinition = c;
					var d = function(e) {
							function TextColorDefinition() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.highlightColors = new c("#22000000","#11000000"),
									t
							}
							return r(TextColorDefinition, e),
							TextColorDefinition.prototype.parse = function(t) {
									e.prototype.parse.call(this, t),
									t && this.highlightColors.parse(t.highlightColors)
							}
							,
							TextColorDefinition
					}(c);
					t.TextColorDefinition = d;
					var AdaptiveCardConfig = function(e) {
							this.allowCustomStyle = !1,
							e && (this.allowCustomStyle = e.allowCustomStyle || this.allowCustomStyle)
					};
					t.AdaptiveCardConfig = AdaptiveCardConfig;
					var p = function() {
							function ImageSetConfig(e) {
									this.imageSize = o.Size.Medium,
									this.maxImageHeight = 100,
									e && (this.imageSize = null != e.imageSize ? e.imageSize : this.imageSize,
									this.maxImageHeight = s.parseNumber(e.maxImageHeight, 100))
							}
							return ImageSetConfig.prototype.toJSON = function() {
									return {
											imageSize: o.Size[this.imageSize],
											maxImageHeight: this.maxImageHeight
									}
							}
							,
							ImageSetConfig
					}();
					t.ImageSetConfig = p;
					var u = function() {
							function MediaConfig(e) {
									this.allowInlinePlayback = !0,
									e && (this.defaultPoster = e.defaultPoster,
									this.allowInlinePlayback = e.allowInlinePlayback || this.allowInlinePlayback)
							}
							return MediaConfig.prototype.toJSON = function() {
									return {
											defaultPoster: this.defaultPoster,
											allowInlinePlayback: this.allowInlinePlayback
									}
							}
							,
							MediaConfig
					}();
					t.MediaConfig = u;
					var h = function() {
							function TableConfig(e) {
									this.cellSpacing = 8,
									e && (this.cellSpacing = e.cellSpacing && "number" == typeof e.cellSpacing ? e.cellSpacing : this.cellSpacing)
							}
							return TableConfig.prototype.toJSON = function() {
									return {
											cellSpacing: this.cellSpacing
									}
							}
							,
							TableConfig
					}();
					t.TableConfig = h;
					var m = function() {
							function BaseTextDefinition(e) {
									this.size = o.TextSize.Default,
									this.color = o.TextColor.Default,
									this.isSubtle = !1,
									this.weight = o.TextWeight.Default,
									this.parse(e)
							}
							return BaseTextDefinition.prototype.parse = function(e) {
									e && (this.size = parseHostConfigEnum(o.TextSize, e.size, this.size),
									this.color = parseHostConfigEnum(o.TextColor, e.color, this.color),
									this.isSubtle = void 0 !== e.isSubtle && "boolean" == typeof e.isSubtle ? e.isSubtle : this.isSubtle,
									this.weight = parseHostConfigEnum(o.TextWeight, e.weight, this.getDefaultWeight()))
							}
							,
							BaseTextDefinition.prototype.getDefaultWeight = function() {
									return o.TextWeight.Default
							}
							,
							BaseTextDefinition.prototype.toJSON = function() {
									return {
											size: o.TextSize[this.size],
											color: o.TextColor[this.color],
											isSubtle: this.isSubtle,
											weight: o.TextWeight[this.weight]
									}
							}
							,
							BaseTextDefinition
					}();
					t.BaseTextDefinition = m;
					var g = function(e) {
							function TextStyleDefinition() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.fontType = o.FontType.Default,
									t
							}
							return r(TextStyleDefinition, e),
							TextStyleDefinition.prototype.parse = function(t) {
									e.prototype.parse.call(this, t),
									t && (this.fontType = parseHostConfigEnum(o.FontType, t.fontType, this.fontType))
							}
							,
							TextStyleDefinition
					}(m);
					t.TextStyleDefinition = g;
					var _ = function() {
							function TextStyleSet(e) {
									this.default = new g,
									this.heading = new g({
											size: "Large",
											weight: "Bolder"
									}),
									this.columnHeader = new g({
											weight: "Bolder"
									}),
									e && (this.heading.parse(e.heading),
									this.columnHeader.parse(e.columnHeader))
							}
							return TextStyleSet.prototype.getStyleByName = function(e) {
									switch (e.toLowerCase()) {
									case "heading":
											return this.heading;
									case "columnHeader":
											return this.columnHeader;
									default:
											return this.default
									}
							}
							,
							TextStyleSet
					}();
					t.TextStyleSet = _;
					var TextBlockConfig = function(e) {
							e && (this.headingLevel = s.parseNumber(e.headingLevel))
					};
					t.TextBlockConfig = TextBlockConfig;
					var f = function(e) {
							function RequiredInputLabelTextDefinition() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.suffix = " *",
									t.suffixColor = o.TextColor.Attention,
									t
							}
							return r(RequiredInputLabelTextDefinition, e),
							RequiredInputLabelTextDefinition.prototype.parse = function(t) {
									e.prototype.parse.call(this, t),
									t && (this.suffix = t.suffix || this.suffix,
									this.suffixColor = parseHostConfigEnum(o.TextColor, t.suffixColor, this.suffixColor))
							}
							,
							RequiredInputLabelTextDefinition.prototype.toJSON = function() {
									var t = e.prototype.toJSON.call(this);
									return t.suffix = this.suffix,
									t.suffixColor = o.TextColor[this.suffixColor],
									t
							}
							,
							RequiredInputLabelTextDefinition
					}(m);
					t.RequiredInputLabelTextDefinition = f;
					var InputLabelConfig = function(e) {
							this.inputSpacing = o.Spacing.Small,
							this.requiredInputs = new f,
							this.optionalInputs = new m,
							e && (this.inputSpacing = parseHostConfigEnum(o.Spacing, e.inputSpacing, this.inputSpacing),
							this.requiredInputs = new f(e.requiredInputs),
							this.optionalInputs = new m(e.optionalInputs))
					};
					t.InputLabelConfig = InputLabelConfig;
					var InputConfig = function(e) {
							this.label = new InputLabelConfig,
							this.errorMessage = new m({
									color: o.TextColor.Attention
							}),
							e && (this.label = new InputLabelConfig(e.label),
							this.errorMessage = new m(e.errorMessage))
					};
					t.InputConfig = InputConfig;
					var y = function(e) {
							function FactTextDefinition() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.wrap = !0,
									t
							}
							return r(FactTextDefinition, e),
							FactTextDefinition.prototype.parse = function(t) {
									e.prototype.parse.call(this, t),
									t && (this.wrap = null != t.wrap ? t.wrap : this.wrap)
							}
							,
							FactTextDefinition.prototype.toJSON = function() {
									var t = e.prototype.toJSON.call(this);
									return t.wrap = this.wrap,
									t
							}
							,
							FactTextDefinition
					}(m);
					t.FactTextDefinition = y;
					var v = function(e) {
							function FactTitleDefinition(t) {
									var n = e.call(this, t) || this;
									return n.maxWidth = 150,
									n.weight = o.TextWeight.Bolder,
									t && (n.maxWidth = null != t.maxWidth ? t.maxWidth : n.maxWidth,
									n.weight = parseHostConfigEnum(o.TextWeight, t.weight, o.TextWeight.Bolder)),
									n
							}
							return r(FactTitleDefinition, e),
							FactTitleDefinition.prototype.getDefaultWeight = function() {
									return o.TextWeight.Bolder
							}
							,
							FactTitleDefinition
					}(y);
					t.FactTitleDefinition = v;
					var FactSetConfig = function(e) {
							this.title = new v,
							this.value = new y,
							this.spacing = 10,
							e && (this.title = new v(e.title),
							this.value = new y(e.value),
							this.spacing = e.spacing && null != e.spacing ? e.spacing && e.spacing : this.spacing)
					};
					t.FactSetConfig = FactSetConfig;
					var b = function() {
							function ShowCardActionConfig(e) {
									this.actionMode = o.ShowCardActionMode.Inline,
									this.inlineTopMargin = 16,
									this.style = o.ContainerStyle.Emphasis,
									e && (this.actionMode = parseHostConfigEnum(o.ShowCardActionMode, e.actionMode, o.ShowCardActionMode.Inline),
									this.inlineTopMargin = null != e.inlineTopMargin ? e.inlineTopMargin : this.inlineTopMargin,
									this.style = e.style && "string" == typeof e.style ? e.style : o.ContainerStyle.Emphasis)
							}
							return ShowCardActionConfig.prototype.toJSON = function() {
									return {
											actionMode: o.ShowCardActionMode[this.actionMode],
											inlineTopMargin: this.inlineTopMargin,
											style: this.style
									}
							}
							,
							ShowCardActionConfig
					}();
					t.ShowCardActionConfig = b;
					var S = function() {
							function ActionsConfig(e) {
									if (this.maxActions = 5,
									this.spacing = o.Spacing.Default,
									this.buttonSpacing = 20,
									this.showCard = new b,
									this.preExpandSingleShowCardAction = !1,
									this.actionsOrientation = o.Orientation.Horizontal,
									this.actionAlignment = o.ActionAlignment.Left,
									this.iconPlacement = o.ActionIconPlacement.LeftOfTitle,
									this.allowTitleToWrap = !1,
									this.iconSize = 16,
									e) {
											this.maxActions = null != e.maxActions ? e.maxActions : this.maxActions,
											this.spacing = parseHostConfigEnum(o.Spacing, e.spacing && e.spacing, o.Spacing.Default),
											this.buttonSpacing = null != e.buttonSpacing ? e.buttonSpacing : this.buttonSpacing,
											this.showCard = new b(e.showCard),
											this.preExpandSingleShowCardAction = s.parseBool(e.preExpandSingleShowCardAction, !1),
											this.actionsOrientation = parseHostConfigEnum(o.Orientation, e.actionsOrientation, o.Orientation.Horizontal),
											this.actionAlignment = parseHostConfigEnum(o.ActionAlignment, e.actionAlignment, o.ActionAlignment.Left),
											this.iconPlacement = parseHostConfigEnum(o.ActionIconPlacement, e.iconPlacement, o.ActionIconPlacement.LeftOfTitle),
											this.allowTitleToWrap = null != e.allowTitleToWrap ? e.allowTitleToWrap : this.allowTitleToWrap;
											try {
													var t = a.SizeAndUnit.parse(e.iconSize);
													t.unit === o.SizeUnit.Pixel && (this.iconSize = t.physicalSize)
											} catch (e) {}
									}
							}
							return ActionsConfig.prototype.toJSON = function() {
									return {
											maxActions: this.maxActions,
											spacing: o.Spacing[this.spacing],
											buttonSpacing: this.buttonSpacing,
											showCard: this.showCard,
											preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,
											actionsOrientation: o.Orientation[this.actionsOrientation],
											actionAlignment: o.ActionAlignment[this.actionAlignment]
									}
							}
							,
							ActionsConfig
					}();
					t.ActionsConfig = S;
					var C = function() {
							function ColorSetDefinition(e) {
									this.default = new d,
									this.dark = new d,
									this.light = new d,
									this.accent = new d,
									this.good = new d,
									this.warning = new d,
									this.attention = new d,
									this.parse(e)
							}
							return ColorSetDefinition.prototype.parseSingleColor = function(e, t) {
									e && this[t].parse(e[t])
							}
							,
							ColorSetDefinition.prototype.parse = function(e) {
									e && (this.parseSingleColor(e, "default"),
									this.parseSingleColor(e, "dark"),
									this.parseSingleColor(e, "light"),
									this.parseSingleColor(e, "accent"),
									this.parseSingleColor(e, "good"),
									this.parseSingleColor(e, "warning"),
									this.parseSingleColor(e, "attention"))
							}
							,
							ColorSetDefinition
					}();
					t.ColorSetDefinition = C;
					var E = function() {
							function ContainerStyleDefinition(e) {
									this.foregroundColors = new C({
											default: {
													default: "#333333",
													subtle: "#EE333333"
											},
											dark: {
													default: "#000000",
													subtle: "#66000000"
											},
											light: {
													default: "#FFFFFF",
													subtle: "#33000000"
											},
											accent: {
													default: "#2E89FC",
													subtle: "#882E89FC"
											},
											good: {
													default: "#028A02",
													subtle: "#DD027502"
											},
											warning: {
													default: "#E69500",
													subtle: "#DDE69500"
											},
											attention: {
													default: "#CC3300",
													subtle: "#DDCC3300"
											}
									}),
									this.parse(e)
							}
							return ContainerStyleDefinition.prototype.parse = function(e) {
									e && (this.backgroundColor = e.backgroundColor,
									this.foregroundColors.parse(e.foregroundColors),
									this.highlightBackgroundColor = e.highlightBackgroundColor,
									this.highlightForegroundColor = e.highlightForegroundColor,
									this.borderColor = e.borderColor)
							}
							,
							Object.defineProperty(ContainerStyleDefinition.prototype, "isBuiltIn", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							ContainerStyleDefinition
					}();
					t.ContainerStyleDefinition = E;
					var T = function(e) {
							function BuiltInContainerStyleDefinition() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(BuiltInContainerStyleDefinition, e),
							Object.defineProperty(BuiltInContainerStyleDefinition.prototype, "isBuiltIn", {
									get: function() {
											return !0
									},
									enumerable: !1,
									configurable: !0
							}),
							BuiltInContainerStyleDefinition
					}(E)
						, I = function() {
							function ContainerStyleSet(e) {
									if (this._allStyles = {},
									this._allStyles[o.ContainerStyle.Default] = new T,
									this._allStyles[o.ContainerStyle.Emphasis] = new T,
									this._allStyles[o.ContainerStyle.Accent] = new T,
									this._allStyles[o.ContainerStyle.Good] = new T,
									this._allStyles[o.ContainerStyle.Attention] = new T,
									this._allStyles[o.ContainerStyle.Warning] = new T,
									e) {
											this._allStyles[o.ContainerStyle.Default].parse(e[o.ContainerStyle.Default]),
											this._allStyles[o.ContainerStyle.Emphasis].parse(e[o.ContainerStyle.Emphasis]),
											this._allStyles[o.ContainerStyle.Accent].parse(e[o.ContainerStyle.Accent]),
											this._allStyles[o.ContainerStyle.Good].parse(e[o.ContainerStyle.Good]),
											this._allStyles[o.ContainerStyle.Attention].parse(e[o.ContainerStyle.Attention]),
											this._allStyles[o.ContainerStyle.Warning].parse(e[o.ContainerStyle.Warning]);
											var t = e.customStyles;
											if (t && Array.isArray(t))
													for (var n = 0, i = t; n < i.length; n++) {
															var r = i[n];
															if (r) {
																	var s = r.name;
																	s && "string" == typeof s && (this._allStyles.hasOwnProperty(s) ? this._allStyles[s].parse(r.style) : this._allStyles[s] = new E(r.style))
															}
													}
									}
							}
							return ContainerStyleSet.prototype.toJSON = function() {
									var e = this
										, t = [];
									Object.keys(this._allStyles).forEach((function(n) {
											e._allStyles[n].isBuiltIn || t.push({
													name: n,
													style: e._allStyles[n]
											})
									}
									));
									var n = {
											default: this.default,
											emphasis: this.emphasis
									};
									return t.length > 0 && (n.customStyles = t),
									n
							}
							,
							ContainerStyleSet.prototype.getStyleByName = function(e, t) {
									return e && this._allStyles.hasOwnProperty(e) ? this._allStyles[e] : t || this._allStyles[o.ContainerStyle.Default]
							}
							,
							Object.defineProperty(ContainerStyleSet.prototype, "default", {
									get: function() {
											return this._allStyles[o.ContainerStyle.Default]
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(ContainerStyleSet.prototype, "emphasis", {
									get: function() {
											return this._allStyles[o.ContainerStyle.Emphasis]
									},
									enumerable: !1,
									configurable: !0
							}),
							ContainerStyleSet
					}();
					t.ContainerStyleSet = I;
					var w = function() {
							function FontTypeDefinition(e) {
									this.fontFamily = "Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif",
									this.fontSizes = {
											small: 12,
											default: 14,
											medium: 17,
											large: 21,
											extraLarge: 26
									},
									this.fontWeights = {
											lighter: 200,
											default: 400,
											bolder: 600
									},
									e && (this.fontFamily = e)
							}
							return FontTypeDefinition.prototype.parse = function(e) {
									this.fontFamily = e.fontFamily || this.fontFamily,
									this.fontSizes = {
											small: e.fontSizes && e.fontSizes.small || this.fontSizes.small,
											default: e.fontSizes && e.fontSizes.default || this.fontSizes.default,
											medium: e.fontSizes && e.fontSizes.medium || this.fontSizes.medium,
											large: e.fontSizes && e.fontSizes.large || this.fontSizes.large,
											extraLarge: e.fontSizes && e.fontSizes.extraLarge || this.fontSizes.extraLarge
									},
									this.fontWeights = {
											lighter: e.fontWeights && e.fontWeights.lighter || this.fontWeights.lighter,
											default: e.fontWeights && e.fontWeights.default || this.fontWeights.default,
											bolder: e.fontWeights && e.fontWeights.bolder || this.fontWeights.bolder
									}
							}
							,
							FontTypeDefinition.monospace = new FontTypeDefinition("'Courier New', Courier, monospace"),
							FontTypeDefinition
					}();
					t.FontTypeDefinition = w;
					var A = function() {
							function FontTypeSet(e) {
									this.default = new w,
									this.monospace = new w("'Courier New', Courier, monospace"),
									e && (this.default.parse(e.default),
									this.monospace.parse(e.monospace))
							}
							return FontTypeSet.prototype.getStyleDefinition = function(e) {
									switch (e) {
									case o.FontType.Monospace:
											return this.monospace;
									case o.FontType.Default:
									default:
											return this.default
									}
							}
							,
							FontTypeSet
					}();
					t.FontTypeSet = A;
					var R = function() {
							function CarouselConfig(e) {
									this.maxCarouselPages = 10,
									this.minAutoplayDelay = 5e3,
									e && (this.maxCarouselPages = null != e.maxCarouselPages ? e.maxCarouselPages : this.maxCarouselPages,
									this.minAutoplayDelay = null != e.minAutoplayDelay ? e.minAutoplayDelay : this.minAutoplayDelay)
							}
							return CarouselConfig.prototype.toJSON = function() {
									return {
											maxCarouselPages: this.maxCarouselPages,
											minAutoplayDelay: this.minAutoplayDelay
									}
							}
							,
							CarouselConfig
					}();
					t.CarouselConfig = R;
					var x = function() {
							function HostConfig(e) {
									this.hostCapabilities = new l.HostCapabilities,
									this.choiceSetInputValueSeparator = ",",
									this.supportsInteractivity = !0,
									this.spacing = {
											small: 3,
											default: 8,
											medium: 20,
											large: 30,
											extraLarge: 40,
											padding: 15
									},
									this.separator = {
											lineThickness: 1,
											lineColor: "#EEEEEE"
									},
									this.imageSizes = {
											small: 40,
											medium: 80,
											large: 160
									},
									this.containerStyles = new I,
									this.inputs = new InputConfig,
									this.actions = new S,
									this.adaptiveCard = new AdaptiveCardConfig,
									this.imageSet = new p,
									this.media = new u,
									this.factSet = new FactSetConfig,
									this.table = new h,
									this.textStyles = new _,
									this.textBlock = new TextBlockConfig,
									this.carousel = new R,
									this.alwaysAllowBleed = !1,
									e && (("string" == typeof e || e instanceof String) && (e = JSON.parse(e)),
									this.choiceSetInputValueSeparator = e && "string" == typeof e.choiceSetInputValueSeparator ? e.choiceSetInputValueSeparator : this.choiceSetInputValueSeparator,
									this.supportsInteractivity = e && "boolean" == typeof e.supportsInteractivity ? e.supportsInteractivity : this.supportsInteractivity,
									this._legacyFontType = new w,
									this._legacyFontType.parse(e),
									e.fontTypes && (this.fontTypes = new A(e.fontTypes)),
									e.lineHeights && (this.lineHeights = {
											small: e.lineHeights.small,
											default: e.lineHeights.default,
											medium: e.lineHeights.medium,
											large: e.lineHeights.large,
											extraLarge: e.lineHeights.extraLarge
									}),
									this.imageSizes = {
											small: e.imageSizes && e.imageSizes.small || this.imageSizes.small,
											medium: e.imageSizes && e.imageSizes.medium || this.imageSizes.medium,
											large: e.imageSizes && e.imageSizes.large || this.imageSizes.large
									},
									this.containerStyles = new I(e.containerStyles),
									this.spacing = {
											small: e.spacing && e.spacing.small || this.spacing.small,
											default: e.spacing && e.spacing.default || this.spacing.default,
											medium: e.spacing && e.spacing.medium || this.spacing.medium,
											large: e.spacing && e.spacing.large || this.spacing.large,
											extraLarge: e.spacing && e.spacing.extraLarge || this.spacing.extraLarge,
											padding: e.spacing && e.spacing.padding || this.spacing.padding
									},
									this.separator = {
											lineThickness: e.separator && e.separator.lineThickness || this.separator.lineThickness,
											lineColor: e.separator && e.separator.lineColor || this.separator.lineColor
									},
									this.inputs = new InputConfig(e.inputs || this.inputs),
									this.actions = new S(e.actions || this.actions),
									this.adaptiveCard = new AdaptiveCardConfig(e.adaptiveCard || this.adaptiveCard),
									this.imageSet = new p(e.imageSet),
									this.factSet = new FactSetConfig(e.factSet),
									this.textStyles = new _(e.textStyles),
									this.textBlock = new TextBlockConfig(e.textBlock),
									this.carousel = new R(e.carousel))
							}
							return HostConfig.prototype.getFontTypeDefinition = function(e) {
									return this.fontTypes ? this.fontTypes.getStyleDefinition(e) : e === o.FontType.Monospace ? w.monospace : this._legacyFontType
							}
							,
							HostConfig.prototype.getEffectiveSpacing = function(e) {
									switch (e) {
									case o.Spacing.Small:
											return this.spacing.small;
									case o.Spacing.Default:
											return this.spacing.default;
									case o.Spacing.Medium:
											return this.spacing.medium;
									case o.Spacing.Large:
											return this.spacing.large;
									case o.Spacing.ExtraLarge:
											return this.spacing.extraLarge;
									case o.Spacing.Padding:
											return this.spacing.padding;
									default:
											return 0
									}
							}
							,
							HostConfig.prototype.paddingDefinitionToSpacingDefinition = function(e) {
									return new a.SpacingDefinition(this.getEffectiveSpacing(e.top),this.getEffectiveSpacing(e.right),this.getEffectiveSpacing(e.bottom),this.getEffectiveSpacing(e.left))
							}
							,
							HostConfig.prototype.makeCssClassNames = function() {
									for (var e = [], t = 0; t < arguments.length; t++)
											e[t] = arguments[t];
									for (var n = [], i = 0, r = e; i < r.length; i++) {
											var o = r[i];
											n.push((this.cssClassNamePrefix ? this.cssClassNamePrefix + "-" : "") + o)
									}
									return n
							}
							,
							HostConfig.prototype.makeCssClassName = function() {
									for (var e = [], t = 0; t < arguments.length; t++)
											e[t] = arguments[t];
									var n = this.makeCssClassNames.apply(this, e).join(" ");
									return n || ""
							}
							,
							Object.defineProperty(HostConfig.prototype, "fontFamily", {
									get: function() {
											return this._legacyFontType.fontFamily
									},
									set: function(e) {
											this._legacyFontType.fontFamily = e
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(HostConfig.prototype, "fontSizes", {
									get: function() {
											return this._legacyFontType.fontSizes
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(HostConfig.prototype, "fontWeights", {
									get: function() {
											return this._legacyFontType.fontWeights
									},
									enumerable: !1,
									configurable: !0
							}),
							HostConfig
					}();
					t.HostConfig = x,
					t.defaultHostConfig = new x({
							supportsInteractivity: !0,
							spacing: {
									small: 10,
									default: 20,
									medium: 30,
									large: 40,
									extraLarge: 50,
									padding: 20
							},
							separator: {
									lineThickness: 1,
									lineColor: "#EEEEEE"
							},
							fontTypes: {
									default: {
											fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
											fontSizes: {
													small: 12,
													default: 14,
													medium: 17,
													large: 21,
													extraLarge: 26
											},
											fontWeights: {
													lighter: 200,
													default: 400,
													bolder: 600
											}
									},
									monospace: {
											fontFamily: "'Courier New', Courier, monospace",
											fontSizes: {
													small: 12,
													default: 14,
													medium: 17,
													large: 21,
													extraLarge: 26
											},
											fontWeights: {
													lighter: 200,
													default: 400,
													bolder: 600
											}
									}
							},
							imageSizes: {
									small: 40,
									medium: 80,
									large: 160
							},
							containerStyles: {
									default: {
											backgroundColor: "#FFFFFF",
											foregroundColors: {
													default: {
															default: "#333333",
															subtle: "#EE333333"
													},
													dark: {
															default: "#000000",
															subtle: "#66000000"
													},
													light: {
															default: "#FFFFFF",
															subtle: "#33000000"
													},
													accent: {
															default: "#2E89FC",
															subtle: "#882E89FC"
													},
													attention: {
															default: "#cc3300",
															subtle: "#DDcc3300"
													},
													good: {
															default: "#028A02",
															subtle: "#DD027502"
													},
													warning: {
															default: "#e69500",
															subtle: "#DDe69500"
													}
											}
									},
									emphasis: {
											backgroundColor: "#08000000",
											foregroundColors: {
													default: {
															default: "#333333",
															subtle: "#EE333333"
													},
													dark: {
															default: "#000000",
															subtle: "#66000000"
													},
													light: {
															default: "#FFFFFF",
															subtle: "#33000000"
													},
													accent: {
															default: "#2E89FC",
															subtle: "#882E89FC"
													},
													attention: {
															default: "#cc3300",
															subtle: "#DDcc3300"
													},
													good: {
															default: "#028A02",
															subtle: "#DD027502"
													},
													warning: {
															default: "#e69500",
															subtle: "#DDe69500"
													}
											}
									},
									accent: {
											backgroundColor: "#C7DEF9",
											foregroundColors: {
													default: {
															default: "#333333",
															subtle: "#EE333333"
													},
													dark: {
															default: "#000000",
															subtle: "#66000000"
													},
													light: {
															default: "#FFFFFF",
															subtle: "#33000000"
													},
													accent: {
															default: "#2E89FC",
															subtle: "#882E89FC"
													},
													attention: {
															default: "#cc3300",
															subtle: "#DDcc3300"
													},
													good: {
															default: "#028A02",
															subtle: "#DD027502"
													},
													warning: {
															default: "#e69500",
															subtle: "#DDe69500"
													}
											}
									},
									good: {
											backgroundColor: "#CCFFCC",
											foregroundColors: {
													default: {
															default: "#333333",
															subtle: "#EE333333"
													},
													dark: {
															default: "#000000",
															subtle: "#66000000"
													},
													light: {
															default: "#FFFFFF",
															subtle: "#33000000"
													},
													accent: {
															default: "#2E89FC",
															subtle: "#882E89FC"
													},
													attention: {
															default: "#cc3300",
															subtle: "#DDcc3300"
													},
													good: {
															default: "#028A02",
															subtle: "#DD027502"
													},
													warning: {
															default: "#e69500",
															subtle: "#DDe69500"
													}
											}
									},
									attention: {
											backgroundColor: "#FFC5B2",
											foregroundColors: {
													default: {
															default: "#333333",
															subtle: "#EE333333"
													},
													dark: {
															default: "#000000",
															subtle: "#66000000"
													},
													light: {
															default: "#FFFFFF",
															subtle: "#33000000"
													},
													accent: {
															default: "#2E89FC",
															subtle: "#882E89FC"
													},
													attention: {
															default: "#cc3300",
															subtle: "#DDcc3300"
													},
													good: {
															default: "#028A02",
															subtle: "#DD027502"
													},
													warning: {
															default: "#e69500",
															subtle: "#DDe69500"
													}
											}
									},
									warning: {
											backgroundColor: "#FFE2B2",
											foregroundColors: {
													default: {
															default: "#333333",
															subtle: "#EE333333"
													},
													dark: {
															default: "#000000",
															subtle: "#66000000"
													},
													light: {
															default: "#FFFFFF",
															subtle: "#33000000"
													},
													accent: {
															default: "#2E89FC",
															subtle: "#882E89FC"
													},
													attention: {
															default: "#cc3300",
															subtle: "#DDcc3300"
													},
													good: {
															default: "#028A02",
															subtle: "#DD027502"
													},
													warning: {
															default: "#e69500",
															subtle: "#DDe69500"
													}
											}
									}
							},
							inputs: {
									label: {
											requiredInputs: {
													weight: o.TextWeight.Bolder,
													suffix: " *",
													suffixColor: o.TextColor.Attention
											},
											optionalInputs: {
													weight: o.TextWeight.Bolder
											}
									},
									errorMessage: {
											color: o.TextColor.Attention,
											weight: o.TextWeight.Bolder
									}
							},
							actions: {
									maxActions: 5,
									spacing: o.Spacing.Default,
									buttonSpacing: 10,
									showCard: {
											actionMode: o.ShowCardActionMode.Inline,
											inlineTopMargin: 16
									},
									actionsOrientation: o.Orientation.Horizontal,
									actionAlignment: o.ActionAlignment.Left
							},
							adaptiveCard: {
									allowCustomStyle: !1
							},
							imageSet: {
									imageSize: o.Size.Medium,
									maxImageHeight: 100
							},
							factSet: {
									title: {
											color: o.TextColor.Default,
											size: o.TextSize.Default,
											isSubtle: !1,
											weight: o.TextWeight.Bolder,
											wrap: !0,
											maxWidth: 150
									},
									value: {
											color: o.TextColor.Default,
											size: o.TextSize.Default,
											isSubtle: !1,
											weight: o.TextWeight.Default,
											wrap: !0
									},
									spacing: 10
							},
							carousel: {
									maxCarouselPages: 10,
									minAutoplayDuration: 5e3
							}
					})
			},
			9301: (e,t,n)=>{
					"use strict";
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.GlobalRegistry = t.CardObjectRegistry = void 0;
					var i = n(2421)
						, r = function() {
							function CardObjectRegistry() {
									this._items = {}
							}
							return CardObjectRegistry.prototype.findByName = function(e) {
									return this._items.hasOwnProperty(e) ? this._items[e] : void 0
							}
							,
							CardObjectRegistry.prototype.clear = function() {
									this._items = {}
							}
							,
							CardObjectRegistry.prototype.copyTo = function(e) {
									for (var t = 0, n = Object.keys(this._items); t < n.length; t++) {
											var i = n[t]
												, r = this._items[i];
											e.register(r.typeName, r.objectType, r.schemaVersion)
									}
							}
							,
							CardObjectRegistry.prototype.register = function(e, t, n) {
									void 0 === n && (n = i.Versions.v1_0);
									var r = this.findByName(e);
									void 0 !== r ? r.objectType = t : r = {
											typeName: e,
											objectType: t,
											schemaVersion: n
									},
									this._items[e] = r
							}
							,
							CardObjectRegistry.prototype.unregister = function(e) {
									delete this._items[e]
							}
							,
							CardObjectRegistry.prototype.createInstance = function(e, t) {
									var n = this.findByName(e);
									return n && n.schemaVersion.compareTo(t) <= 0 ? new n.objectType : void 0
							}
							,
							CardObjectRegistry.prototype.getItemCount = function() {
									return Object.keys(this._items).length
							}
							,
							CardObjectRegistry.prototype.getItemAt = function(e) {
									var t = this;
									return Object.keys(this._items).map((function(e) {
											return t._items[e]
									}
									))[e]
							}
							,
							CardObjectRegistry
					}();
					t.CardObjectRegistry = r;
					var o = function() {
							function GlobalRegistry() {}
							return GlobalRegistry.populateWithDefaultElements = function(e) {
									e.clear(),
									GlobalRegistry.defaultElements.copyTo(e)
							}
							,
							GlobalRegistry.populateWithDefaultActions = function(e) {
									e.clear(),
									GlobalRegistry.defaultActions.copyTo(e)
							}
							,
							Object.defineProperty(GlobalRegistry, "elements", {
									get: function() {
											return GlobalRegistry._elements || (GlobalRegistry._elements = new r,
											GlobalRegistry.populateWithDefaultElements(GlobalRegistry._elements)),
											GlobalRegistry._elements
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(GlobalRegistry, "actions", {
									get: function() {
											return GlobalRegistry._actions || (GlobalRegistry._actions = new r,
											GlobalRegistry.populateWithDefaultActions(GlobalRegistry._actions)),
											GlobalRegistry._actions
									},
									enumerable: !1,
									configurable: !0
							}),
							GlobalRegistry.reset = function() {
									GlobalRegistry._elements = void 0,
									GlobalRegistry._actions = void 0
							}
							,
							GlobalRegistry.defaultElements = new r,
							GlobalRegistry.defaultActions = new r,
							GlobalRegistry
					}();
					t.GlobalRegistry = o
			}
			,
			2421: function(e, t, n) {
					"use strict";
					var i, r = this && this.__extends || (i = function(e, t) {
							return i = Object.setPrototypeOf || {
									__proto__: []
							}instanceof Array && function(e, t) {
									e.__proto__ = t
							}
							|| function(e, t) {
									for (var n in t)
											Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
							}
							,
							i(e, t)
					}
					,
					function(e, t) {
							if ("function" != typeof t && null !== t)
									throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
							function __() {
									this.constructor = e
							}
							i(e, t),
							e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
							new __)
					}
					);
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.SerializableObject = t.property = t.SerializableObjectSchema = t.CustomProperty = t.SerializableObjectCollectionProperty = t.SerializableObjectProperty = t.EnumProperty = t.ValueSetProperty = t.StringArrayProperty = t.PixelSizeProperty = t.NumProperty = t.BoolProperty = t.StringProperty = t.PropertyDefinition = t.BaseSerializationContext = t.isVersionLessOrEqual = t.Versions = t.Version = void 0;
					var o = n(8418)
						, s = n(7794)
						, a = n(9003)
						, l = n(6758)
						, c = function() {
							function Version(e, t, n) {
									void 0 === e && (e = 1),
									void 0 === t && (t = 1),
									this._isValid = !0,
									this._major = e,
									this._minor = t,
									this._label = n
							}
							return Version.parse = function(e, t) {
									if (e) {
											var n = new Version;
											n._versionString = e;
											var i = /(\d+).(\d+)/gi.exec(e);
											return null != i && 3 === i.length ? (n._major = parseInt(i[1]),
											n._minor = parseInt(i[2])) : n._isValid = !1,
											n._isValid || t.logParseEvent(void 0, a.ValidationEvent.InvalidPropertyValue, l.Strings.errors.invalidVersionString(n._versionString)),
											n
									}
							}
							,
							Version.prototype.toString = function() {
									return this._isValid ? this._major + "." + this._minor : this._versionString
							}
							,
							Version.prototype.toJSON = function() {
									return this.toString()
							}
							,
							Version.prototype.compareTo = function(e) {
									if (!this.isValid || !e.isValid)
											throw new Error("Cannot compare invalid version.");
									return this.major > e.major ? 1 : this.major < e.major ? -1 : this.minor > e.minor ? 1 : this.minor < e.minor ? -1 : 0
							}
							,
							Object.defineProperty(Version.prototype, "label", {
									get: function() {
											return this._label ? this._label : this.toString()
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(Version.prototype, "major", {
									get: function() {
											return this._major
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(Version.prototype, "minor", {
									get: function() {
											return this._minor
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(Version.prototype, "isValid", {
									get: function() {
											return this._isValid
									},
									enumerable: !1,
									configurable: !0
							}),
							Version
					}();
					t.Version = c;
					var d = function() {
							function Versions() {}
							return Versions.getAllDeclaredVersions = function() {
									var e = Versions
										, t = [];
									for (var n in e)
											if (n.match(/^v[0-9_]*$/))
													try {
															var i = e[n];
															i instanceof c && t.push(i)
													} catch (e) {}
									return t.sort((function(e, t) {
											return e.compareTo(t)
									}
									))
							}
							,
							Versions.v1_0 = new c(1,0),
							Versions.v1_1 = new c(1,1),
							Versions.v1_2 = new c(1,2),
							Versions.v1_3 = new c(1,3),
							Versions.v1_4 = new c(1,4),
							Versions.v1_5 = new c(1,5),
							Versions.v1_6 = new c(1,6),
							Versions.latest = Versions.v1_6,
							Versions
					}();
					t.Versions = d,
					t.isVersionLessOrEqual = function(e, t) {
							return !(e instanceof c) || (!(t instanceof c) || t.compareTo(e) >= 0)
					}
					;
					var p = function() {
							function BaseSerializationContext(e) {
									void 0 === e && (e = d.latest),
									this._validationEvents = [],
									this.targetVersion = e
							}
							return BaseSerializationContext.prototype.serializeValue = function(e, t, n, i, r) {
									void 0 === i && (i = void 0),
									void 0 === r && (r = !1),
									null == n || n === i ? o.GlobalSettings.enableFullJsonRoundTrip && !r || delete e[t] : n === i ? delete e[t] : e[t] = n
							}
							,
							BaseSerializationContext.prototype.serializeString = function(e, t, n, i) {
									null == n || n === i ? o.GlobalSettings.enableFullJsonRoundTrip || delete e[t] : e[t] = n
							}
							,
							BaseSerializationContext.prototype.serializeBool = function(e, t, n, i) {
									null == n || n === i ? o.GlobalSettings.enableFullJsonRoundTrip || delete e[t] : e[t] = n
							}
							,
							BaseSerializationContext.prototype.serializeNumber = function(e, t, n, i) {
									null == n || n === i || isNaN(n) ? o.GlobalSettings.enableFullJsonRoundTrip || delete e[t] : e[t] = n
							}
							,
							BaseSerializationContext.prototype.serializeEnum = function(e, t, n, i, r) {
									void 0 === r && (r = void 0),
									null == i || i === r ? o.GlobalSettings.enableFullJsonRoundTrip || delete t[n] : t[n] = e[i]
							}
							,
							BaseSerializationContext.prototype.serializeArray = function(e, t, n) {
									var i = [];
									if (n)
											for (var r = 0, o = n; r < o.length; r++) {
													var s = o[r]
														, a = void 0;
													void 0 !== (a = s instanceof I ? s.toJSON(this) : s.toJSON ? s.toJSON() : s) && i.push(a)
											}
									0 === i.length ? e.hasOwnProperty(t) && Array.isArray(e[t]) && delete e[t] : this.serializeValue(e, t, i)
							}
							,
							BaseSerializationContext.prototype.clearEvents = function() {
									this._validationEvents = []
							}
							,
							BaseSerializationContext.prototype.logEvent = function(e, t, n, i) {
									this._validationEvents.push({
											source: e,
											phase: t,
											event: n,
											message: i
									})
							}
							,
							BaseSerializationContext.prototype.logParseEvent = function(e, t, n) {
									this.logEvent(e, a.ValidationPhase.Parse, t, n)
							}
							,
							BaseSerializationContext.prototype.getEventAt = function(e) {
									return this._validationEvents[e]
							}
							,
							Object.defineProperty(BaseSerializationContext.prototype, "eventCount", {
									get: function() {
											return this._validationEvents.length
									},
									enumerable: !1,
									configurable: !0
							}),
							BaseSerializationContext
					}();
					t.BaseSerializationContext = p;
					var u = function(e) {
							function SimpleSerializationContext() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(SimpleSerializationContext, e),
							SimpleSerializationContext
					}(p)
						, h = function() {
							function PropertyDefinition(e, t, n, i) {
									this.targetVersion = e,
									this.name = t,
									this.defaultValue = n,
									this.onGetInitialValue = i,
									this.isSerializationEnabled = !0,
									this.sequentialNumber = PropertyDefinition._sequentialNumber,
									PropertyDefinition._sequentialNumber++
							}
							return PropertyDefinition.prototype.getInternalName = function() {
									return this.name
							}
							,
							PropertyDefinition.prototype.parse = function(e, t, n) {
									return t[this.name]
							}
							,
							PropertyDefinition.prototype.toJSON = function(e, t, n, i) {
									i.serializeValue(t, this.name, n, this.defaultValue)
							}
							,
							PropertyDefinition._sequentialNumber = 0,
							PropertyDefinition
					}();
					t.PropertyDefinition = h;
					var m = function(e) {
							function StringProperty(t, n, i, r, o, s) {
									void 0 === i && (i = !0);
									var a = e.call(this, t, n, o, s) || this;
									return a.targetVersion = t,
									a.name = n,
									a.treatEmptyAsUndefined = i,
									a.regEx = r,
									a.defaultValue = o,
									a.onGetInitialValue = s,
									a
							}
							return r(StringProperty, e),
							StringProperty.prototype.parse = function(e, t, n) {
									var i = s.parseString(t[this.name], this.defaultValue);
									if (!(void 0 === i || "" === i && this.treatEmptyAsUndefined) && void 0 !== this.regEx && !this.regEx.exec(i))
											return void n.logParseEvent(e, a.ValidationEvent.InvalidPropertyValue, l.Strings.errors.invalidPropertyValue(i, this.name));
									return i
							}
							,
							StringProperty.prototype.toJSON = function(e, t, n, i) {
									i.serializeString(t, this.name, "" === n && this.treatEmptyAsUndefined ? void 0 : n, this.defaultValue)
							}
							,
							StringProperty
					}(h);
					t.StringProperty = m;
					var g = function(e) {
							function BoolProperty(t, n, i, r) {
									var o = e.call(this, t, n, i, r) || this;
									return o.targetVersion = t,
									o.name = n,
									o.defaultValue = i,
									o.onGetInitialValue = r,
									o
							}
							return r(BoolProperty, e),
							BoolProperty.prototype.parse = function(e, t, n) {
									return s.parseBool(t[this.name], this.defaultValue)
							}
							,
							BoolProperty.prototype.toJSON = function(e, t, n, i) {
									i.serializeBool(t, this.name, n, this.defaultValue)
							}
							,
							BoolProperty
					}(h);
					t.BoolProperty = g;
					var _ = function(e) {
							function NumProperty(t, n, i, r) {
									var o = e.call(this, t, n, i, r) || this;
									return o.targetVersion = t,
									o.name = n,
									o.defaultValue = i,
									o.onGetInitialValue = r,
									o
							}
							return r(NumProperty, e),
							NumProperty.prototype.parse = function(e, t, n) {
									return s.parseNumber(t[this.name], this.defaultValue)
							}
							,
							NumProperty.prototype.toJSON = function(e, t, n, i) {
									i.serializeNumber(t, this.name, n, this.defaultValue)
							}
							,
							NumProperty
					}(h);
					t.NumProperty = _;
					var f = function(e) {
							function PixelSizeProperty() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(PixelSizeProperty, e),
							PixelSizeProperty.prototype.parse = function(e, t, n) {
									var i = void 0
										, r = t[this.name];
									if ("string" == typeof r) {
											var s = !1;
											try {
													var c = o.SizeAndUnit.parse(r, !0);
													c.unit === a.SizeUnit.Pixel && (i = c.physicalSize,
													s = !0)
											} catch (e) {}
											s || n.logParseEvent(e, a.ValidationEvent.InvalidPropertyValue, l.Strings.errors.invalidPropertyValue(t[this.name], "minHeight"))
									}
									return i
							}
							,
							PixelSizeProperty.prototype.toJSON = function(e, t, n, i) {
									i.serializeValue(t, this.name, "number" != typeof n || isNaN(n) ? void 0 : n + "px")
							}
							,
							PixelSizeProperty
					}(h);
					t.PixelSizeProperty = f;
					var y = function(e) {
							function StringArrayProperty(t, n, i, r) {
									var o = e.call(this, t, n, i, r) || this;
									return o.targetVersion = t,
									o.name = n,
									o.defaultValue = i,
									o.onGetInitialValue = r,
									o
							}
							return r(StringArrayProperty, e),
							StringArrayProperty.prototype.parse = function(e, t, n) {
									var i = t[this.name];
									if (void 0 === i || !Array.isArray(i))
											return this.defaultValue;
									for (var r = [], o = 0, s = i; o < s.length; o++) {
											var l = s[o];
											"string" == typeof l ? r.push(l) : n.logParseEvent(e, a.ValidationEvent.InvalidPropertyValue, 'Invalid array value "'.concat(JSON.stringify(l), '" of type "').concat(typeof l, '" ignored for "').concat(this.name, '".'))
									}
									return r
							}
							,
							StringArrayProperty.prototype.toJSON = function(e, t, n, i) {
									i.serializeArray(t, this.name, n)
							}
							,
							StringArrayProperty
					}(h);
					t.StringArrayProperty = y;
					var v = function(e) {
							function ValueSetProperty(t, n, i, r, o) {
									var s = e.call(this, t, n, r, o) || this;
									return s.targetVersion = t,
									s.name = n,
									s.values = i,
									s.defaultValue = r,
									s.onGetInitialValue = o,
									s
							}
							return r(ValueSetProperty, e),
							ValueSetProperty.prototype.isValidValue = function(e, t) {
									for (var n = 0, i = this.values; n < i.length; n++) {
											var r = i[n];
											if (e.toLowerCase() === r.value.toLowerCase())
													return (r.targetVersion ? r.targetVersion : this.targetVersion).compareTo(t.targetVersion) <= 0
									}
									return !1
							}
							,
							ValueSetProperty.prototype.parse = function(e, t, n) {
									var i = t[this.name];
									if (void 0 === i)
											return this.defaultValue;
									if ("string" == typeof i)
											for (var r = 0, o = this.values; r < o.length; r++) {
													var s = o[r];
													if (i.toLowerCase() === s.value.toLowerCase()) {
															var c = s.targetVersion ? s.targetVersion : this.targetVersion;
															return c.compareTo(n.targetVersion) <= 0 ? s.value : (n.logParseEvent(e, a.ValidationEvent.InvalidPropertyValue, l.Strings.errors.propertyValueNotSupported(i, this.name, c.toString(), n.targetVersion.toString())),
															this.defaultValue)
													}
											}
									return n.logParseEvent(e, a.ValidationEvent.InvalidPropertyValue, l.Strings.errors.invalidPropertyValue(i, this.name)),
									this.defaultValue
							}
							,
							ValueSetProperty.prototype.toJSON = function(e, t, n, i) {
									var r = !1;
									if (void 0 !== n) {
											r = !0;
											for (var o = 0, s = this.values; o < s.length; o++) {
													var c = s[o];
													if (c.value === n) {
															var d = c.targetVersion ? c.targetVersion : this.targetVersion;
															if (d.compareTo(i.targetVersion) <= 0) {
																	r = !1;
																	break
															}
															i.logEvent(e, a.ValidationPhase.ToJSON, a.ValidationEvent.InvalidPropertyValue, l.Strings.errors.propertyValueNotSupported(n, this.name, d.toString(), i.targetVersion.toString()))
													}
											}
									}
									r || i.serializeValue(t, this.name, n, this.defaultValue, !0)
							}
							,
							ValueSetProperty
					}(h);
					t.ValueSetProperty = v;
					var b = function(e) {
							function EnumProperty(t, n, i, r, o, s) {
									var a = e.call(this, t, n, r, s) || this;
									if (a.targetVersion = t,
									a.name = n,
									a.enumType = i,
									a.defaultValue = r,
									a.onGetInitialValue = s,
									a._values = [],
									o)
											a._values = o;
									else
											for (var l in i) {
													var c = parseInt(l, 10);
													c >= 0 && a._values.push({
															value: c
													})
											}
									return a
							}
							return r(EnumProperty, e),
							EnumProperty.prototype.parse = function(e, t, n) {
									var i = t[this.name];
									if ("string" != typeof i)
											return this.defaultValue;
									var r = s.getEnumValueByName(this.enumType, i);
									if (void 0 !== r)
											for (var o = 0, c = this.values; o < c.length; o++) {
													var d = c[o];
													if (d.value === r) {
															var p = d.targetVersion ? d.targetVersion : this.targetVersion;
															return p.compareTo(n.targetVersion) <= 0 ? r : (n.logParseEvent(e, a.ValidationEvent.InvalidPropertyValue, l.Strings.errors.propertyValueNotSupported(i, this.name, p.toString(), n.targetVersion.toString())),
															this.defaultValue)
													}
											}
									return n.logParseEvent(e, a.ValidationEvent.InvalidPropertyValue, l.Strings.errors.invalidPropertyValue(i, this.name)),
									this.defaultValue
							}
							,
							EnumProperty.prototype.toJSON = function(e, t, n, i) {
									var r = !1;
									if (void 0 !== n) {
											r = !0;
											for (var o = 0, s = this.values; o < s.length; o++) {
													var c = s[o];
													if (c.value === n) {
															if ((c.targetVersion ? c.targetVersion : this.targetVersion).compareTo(i.targetVersion) <= 0) {
																	r = !1;
																	break
															}
															i.logEvent(e, a.ValidationPhase.ToJSON, a.ValidationEvent.InvalidPropertyValue, l.Strings.errors.invalidPropertyValue(n, this.name))
													}
											}
									}
									r || i.serializeEnum(this.enumType, t, this.name, n, this.defaultValue)
							}
							,
							Object.defineProperty(EnumProperty.prototype, "values", {
									get: function() {
											return this._values
									},
									enumerable: !1,
									configurable: !0
							}),
							EnumProperty
					}(h);
					t.EnumProperty = b;
					var S = function(e) {
							function SerializableObjectProperty(t, n, i, r, o) {
									void 0 === r && (r = !1);
									var s = e.call(this, t, n, o, (function(e) {
											return s.nullable ? void 0 : new s.objectType
									}
									)) || this;
									return s.targetVersion = t,
									s.name = n,
									s.objectType = i,
									s.nullable = r,
									s
							}
							return r(SerializableObjectProperty, e),
							SerializableObjectProperty.prototype.parse = function(e, t, n) {
									var i = t[this.name];
									if (void 0 === i)
											return this.onGetInitialValue ? this.onGetInitialValue(e) : this.defaultValue;
									var r = new this.objectType;
									return r.parse(i, n),
									r
							}
							,
							SerializableObjectProperty.prototype.toJSON = function(e, t, n, i) {
									var r = void 0;
									void 0 === n || n.hasAllDefaultValues() || (r = n.toJSON(i)),
									"object" == typeof r && 0 === Object.keys(r).length && (r = void 0),
									i.serializeValue(t, this.name, r, this.defaultValue, !0)
							}
							,
							SerializableObjectProperty
					}(h);
					t.SerializableObjectProperty = S;
					var C = function(e) {
							function SerializableObjectCollectionProperty(t, n, i, r) {
									var o = e.call(this, t, n, void 0, (function(e) {
											return []
									}
									)) || this;
									return o.targetVersion = t,
									o.name = n,
									o.objectType = i,
									o.onItemAdded = r,
									o
							}
							return r(SerializableObjectCollectionProperty, e),
							SerializableObjectCollectionProperty.prototype.parse = function(e, t, n) {
									var i = []
										, r = t[this.name];
									if (Array.isArray(r))
											for (var o = 0, s = r; o < s.length; o++) {
													var a = s[o]
														, l = new this.objectType;
													l.parse(a, n),
													i.push(l),
													this.onItemAdded && this.onItemAdded(e, l)
											}
									return i.length > 0 ? i : this.onGetInitialValue ? this.onGetInitialValue(e) : void 0
							}
							,
							SerializableObjectCollectionProperty.prototype.toJSON = function(e, t, n, i) {
									i.serializeArray(t, this.name, n)
							}
							,
							SerializableObjectCollectionProperty
					}(h);
					t.SerializableObjectCollectionProperty = C;
					var E = function(e) {
							function CustomProperty(t, n, i, r, o, s) {
									var a = e.call(this, t, n, o, s) || this;
									if (a.targetVersion = t,
									a.name = n,
									a.onParse = i,
									a.onToJSON = r,
									a.defaultValue = o,
									a.onGetInitialValue = s,
									!a.onParse)
											throw new Error("CustomPropertyDefinition instances must have an onParse handler.");
									if (!a.onToJSON)
											throw new Error("CustomPropertyDefinition instances must have an onToJSON handler.");
									return a
							}
							return r(CustomProperty, e),
							CustomProperty.prototype.parse = function(e, t, n) {
									return this.onParse(e, this, t, n)
							}
							,
							CustomProperty.prototype.toJSON = function(e, t, n, i) {
									this.onToJSON(e, this, t, n, i)
							}
							,
							CustomProperty
					}(h);
					t.CustomProperty = E;
					var T = function() {
							function SerializableObjectSchema() {
									this._properties = []
							}
							return SerializableObjectSchema.prototype.indexOf = function(e) {
									for (var t = 0; t < this._properties.length; t++)
											if (this._properties[t] === e)
													return t;
									return -1
							}
							,
							SerializableObjectSchema.prototype.add = function() {
									for (var e = [], t = 0; t < arguments.length; t++)
											e[t] = arguments[t];
									for (var n = 0, i = e; n < i.length; n++) {
											var r = i[n];
											-1 === this.indexOf(r) && this._properties.push(r)
									}
							}
							,
							SerializableObjectSchema.prototype.remove = function() {
									for (var e = [], t = 0; t < arguments.length; t++)
											e[t] = arguments[t];
									for (var n = 0, i = e; n < i.length; n++)
											for (var r = i[n]; ; ) {
													var o = this.indexOf(r);
													if (!(o >= 0))
															break;
													this._properties.splice(o, 1)
											}
							}
							,
							SerializableObjectSchema.prototype.getItemAt = function(e) {
									return this._properties[e]
							}
							,
							SerializableObjectSchema.prototype.getCount = function() {
									return this._properties.length
							}
							,
							SerializableObjectSchema
					}();
					t.SerializableObjectSchema = T,
					t.property = function(e) {
							return function(t, n) {
									var i = Object.getOwnPropertyDescriptor(t, n) || {};
									i.get || i.set || (i.get = function() {
											return this.getValue(e)
									}
									,
									i.set = function(t) {
											this.setValue(e, t)
									}
									,
									Object.defineProperty(t, n, i))
							}
					}
					;
					var I = function() {
							function SerializableObject() {
									this._propertyBag = {},
									this._rawProperties = {},
									this.maxVersion = SerializableObject.defaultMaxVersion;
									for (var e = this.getSchema(), t = 0; t < e.getCount(); t++) {
											var n = e.getItemAt(t);
											n.onGetInitialValue && this.setValue(n, n.onGetInitialValue(this))
									}
							}
							return SerializableObject.prototype.getDefaultSerializationContext = function() {
									return new u
							}
							,
							SerializableObject.prototype.populateSchema = function(e) {
									var t = this.constructor
										, n = [];
									for (var i in t)
											try {
													var r = t[i];
													r instanceof h && n.push(r)
											} catch (e) {}
									if (n.length > 0) {
											var o = n.sort((function(e, t) {
													return e.sequentialNumber > t.sequentialNumber ? 1 : e.sequentialNumber < t.sequentialNumber ? -1 : 0
											}
											));
											e.add.apply(e, o)
									}
									SerializableObject.onRegisterCustomProperties && SerializableObject.onRegisterCustomProperties(this, e)
							}
							,
							SerializableObject.prototype.getValue = function(e) {
									return this._propertyBag.hasOwnProperty(e.getInternalName()) ? this._propertyBag[e.getInternalName()] : e.defaultValue
							}
							,
							SerializableObject.prototype.setValue = function(e, t) {
									null == t ? delete this._propertyBag[e.getInternalName()] : this._propertyBag[e.getInternalName()] = t
							}
							,
							SerializableObject.prototype.internalParse = function(e, t) {
									if (this._propertyBag = {},
									this._rawProperties = o.GlobalSettings.enableFullJsonRoundTrip && e || {},
									e)
											for (var n = this.getSchema(), i = 0; i < n.getCount(); i++) {
													var r = n.getItemAt(i);
													if (r.isSerializationEnabled) {
															var s = r.onGetInitialValue ? r.onGetInitialValue(this) : void 0;
															e.hasOwnProperty(r.name) && (r.targetVersion.compareTo(t.targetVersion) <= 0 ? s = r.parse(this, e, t) : t.logParseEvent(this, a.ValidationEvent.UnsupportedProperty, l.Strings.errors.propertyNotSupported(r.name, r.targetVersion.toString(), t.targetVersion.toString()))),
															this.setValue(r, s)
													}
											}
									else
											this.resetDefaultValues()
							}
							,
							SerializableObject.prototype.internalToJSON = function(e, t) {
									for (var n = this.getSchema(), i = [], r = 0; r < n.getCount(); r++) {
											var o = n.getItemAt(r);
											o.isSerializationEnabled && o.targetVersion.compareTo(t.targetVersion) <= 0 && -1 === i.indexOf(o.name) && (o.toJSON(this, e, this.getValue(o), t),
											i.push(o.name))
									}
							}
							,
							SerializableObject.prototype.shouldSerialize = function(e) {
									return !0
							}
							,
							SerializableObject.prototype.parse = function(e, t) {
									this.internalParse(e, t || new u)
							}
							,
							SerializableObject.prototype.toJSON = function(e) {
									var t;
									if (e && e instanceof p ? t = e : (t = this.getDefaultSerializationContext()).toJSONOriginalParam = e,
									this.shouldSerialize(t)) {
											var n = void 0;
											return n = o.GlobalSettings.enableFullJsonRoundTrip && this._rawProperties && "object" == typeof this._rawProperties ? this._rawProperties : {},
											this.internalToJSON(n, t),
											n
									}
							}
							,
							SerializableObject.prototype.hasDefaultValue = function(e) {
									return this.getValue(e) === e.defaultValue
							}
							,
							SerializableObject.prototype.hasAllDefaultValues = function() {
									for (var e = this.getSchema(), t = 0; t < e.getCount(); t++) {
											var n = e.getItemAt(t);
											if (!this.hasDefaultValue(n))
													return !1
									}
									return !0
							}
							,
							SerializableObject.prototype.resetDefaultValues = function() {
									for (var e = this.getSchema(), t = 0; t < e.getCount(); t++) {
											var n = e.getItemAt(t);
											this.setValue(n, n.defaultValue)
									}
							}
							,
							SerializableObject.prototype.setCustomProperty = function(e, t) {
									"string" == typeof t && !t || null == t ? delete this._rawProperties[e] : this._rawProperties[e] = t
							}
							,
							SerializableObject.prototype.getCustomProperty = function(e) {
									return this._rawProperties[e]
							}
							,
							SerializableObject.prototype.getSchema = function() {
									var e = SerializableObject._schemaCache[this.getSchemaKey()];
									return e || (e = new T,
									this.populateSchema(e),
									SerializableObject._schemaCache[this.getSchemaKey()] = e),
									e
							}
							,
							SerializableObject.defaultMaxVersion = d.latest,
							SerializableObject._schemaCache = {},
							SerializableObject
					}();
					t.SerializableObject = I
			},
			8418: (e,t,n)=>{
					"use strict";
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.UUID = t.SizeAndUnit = t.PaddingDefinition = t.SpacingDefinition = t.StringWithSubstitutions = t.ContentTypes = t.GlobalSettings = void 0;
					var i = n(9003)
						, r = function() {
							function GlobalSettings() {}
							return GlobalSettings.useAdvancedTextBlockTruncation = !0,
							GlobalSettings.useAdvancedCardBottomTruncation = !1,
							GlobalSettings.useMarkdownInRadioButtonAndCheckbox = !0,
							GlobalSettings.allowMarkForTextHighlighting = !1,
							GlobalSettings.alwaysBleedSeparators = !1,
							GlobalSettings.enableFullJsonRoundTrip = !1,
							GlobalSettings.displayInputValidationErrors = !0,
							GlobalSettings.allowPreProcessingPropertyValues = !1,
							GlobalSettings.setTabIndexAtCardRoot = !0,
							GlobalSettings.enableFallback = !0,
							GlobalSettings.useWebkitLineClamp = !0,
							GlobalSettings.allowMoreThanMaxActionsInOverflowMenu = !1,
							GlobalSettings.removePaddingFromContainersWithBackgroundImage = !1,
							GlobalSettings.resetInputsDirtyStateAfterActionExecution = !0,
							GlobalSettings.applets = {
									logEnabled: !0,
									logLevel: i.LogLevel.Error,
									maximumRetryAttempts: 3,
									defaultTimeBetweenRetryAttempts: 3e3,
									authPromptWidth: 400,
									authPromptHeight: 600,
									refresh: {
											mode: i.RefreshMode.Manual,
											timeBetweenAutomaticRefreshes: 3e3,
											maximumConsecutiveAutomaticRefreshes: 3,
											allowManualRefreshesAfterAutomaticRefreshes: !0
									}
							},
							GlobalSettings
					}();
					t.GlobalSettings = r,
					t.ContentTypes = {
							applicationJson: "application/json",
							applicationXWwwFormUrlencoded: "application/x-www-form-urlencoded"
					};
					var o = function() {
							function StringWithSubstitutions() {
									this._isProcessed = !1
							}
							return StringWithSubstitutions.prototype.getReferencedInputs = function(e, t) {
									if (!t)
											throw new Error("The referencedInputs parameter cannot be null.");
									if (this._original)
											for (var n = 0, i = e; n < i.length; n++) {
													var r = i[n];
													null != new RegExp("\\{{2}(" + r.id + ").value\\}{2}","gi").exec(this._original) && r.id && (t[r.id] = r)
											}
							}
							,
							StringWithSubstitutions.prototype.substituteInputValues = function(e, n) {
									if (this._processed = this._original,
									this._original)
											for (var i = /\{{2}([a-z0-9_$@]+).value\}{2}/gi, r = void 0; null !== (r = i.exec(this._original)) && this._processed; )
													for (var o = 0, s = Object.keys(e); o < s.length; o++) {
															var a = s[o];
															if (a.toLowerCase() === r[1].toLowerCase()) {
																	var l = e[a]
																		, c = "";
																	l.value && (c = l.value),
																	n === t.ContentTypes.applicationJson ? c = (c = JSON.stringify(c)).slice(1, -1) : n === t.ContentTypes.applicationXWwwFormUrlencoded && (c = encodeURIComponent(c)),
																	this._processed = this._processed.replace(r[0], c);
																	break
															}
													}
									this._isProcessed = !0
							}
							,
							StringWithSubstitutions.prototype.getOriginal = function() {
									return this._original
							}
							,
							StringWithSubstitutions.prototype.get = function() {
									return this._isProcessed ? this._processed : this._original
							}
							,
							StringWithSubstitutions.prototype.set = function(e) {
									this._original = e,
									this._isProcessed = !1
							}
							,
							StringWithSubstitutions
					}();
					t.StringWithSubstitutions = o;
					var SpacingDefinition = function(e, t, n, i) {
							void 0 === e && (e = 0),
							void 0 === t && (t = 0),
							void 0 === n && (n = 0),
							void 0 === i && (i = 0),
							this.left = 0,
							this.top = 0,
							this.right = 0,
							this.bottom = 0,
							this.top = e,
							this.right = t,
							this.bottom = n,
							this.left = i
					};
					t.SpacingDefinition = SpacingDefinition;
					var PaddingDefinition = function(e, t, n, r) {
							void 0 === e && (e = i.Spacing.None),
							void 0 === t && (t = i.Spacing.None),
							void 0 === n && (n = i.Spacing.None),
							void 0 === r && (r = i.Spacing.None),
							this.top = i.Spacing.None,
							this.right = i.Spacing.None,
							this.bottom = i.Spacing.None,
							this.left = i.Spacing.None,
							this.top = e,
							this.right = t,
							this.bottom = n,
							this.left = r
					};
					t.PaddingDefinition = PaddingDefinition;
					var s = function() {
							function SizeAndUnit(e, t) {
									this.physicalSize = e,
									this.unit = t
							}
							return SizeAndUnit.parse = function(e, t) {
									void 0 === t && (t = !1);
									var n = new SizeAndUnit(0,i.SizeUnit.Weight);
									if ("number" == typeof e)
											return n.physicalSize = e,
											n;
									if ("string" == typeof e) {
											var r = /^([0-9]+)(px|\*)?$/g.exec(e)
												, o = t ? 3 : 2;
											if (r && r.length >= o)
													return n.physicalSize = parseInt(r[1]),
													3 === r.length && "px" === r[2] && (n.unit = i.SizeUnit.Pixel),
													n
									}
									throw new Error("Invalid size: " + e)
							}
							,
							SizeAndUnit
					}();
					t.SizeAndUnit = s;
					var a = function() {
							function UUID() {}
							return UUID.generate = function() {
									var e = 4294967295 * Math.random() | 0
										, t = 4294967295 * Math.random() | 0
										, n = 4294967295 * Math.random() | 0
										, i = 4294967295 * Math.random() | 0;
									return UUID.lut[255 & e] + UUID.lut[e >> 8 & 255] + UUID.lut[e >> 16 & 255] + UUID.lut[e >> 24 & 255] + "-" + UUID.lut[255 & t] + UUID.lut[t >> 8 & 255] + "-" + UUID.lut[t >> 16 & 15 | 64] + UUID.lut[t >> 24 & 255] + "-" + UUID.lut[63 & n | 128] + UUID.lut[n >> 8 & 255] + "-" + UUID.lut[n >> 16 & 255] + UUID.lut[n >> 24 & 255] + UUID.lut[255 & i] + UUID.lut[i >> 8 & 255] + UUID.lut[i >> 16 & 255] + UUID.lut[i >> 24 & 255]
							}
							,
							UUID.initialize = function() {
									for (var e = 0; e < 256; e++)
											UUID.lut[e] = (e < 16 ? "0" : "") + e.toString(16)
							}
							,
							UUID.lut = [],
							UUID
					}();
					t.UUID = a,
					a.initialize()
			}
			,
			6758: (e,t)=>{
					"use strict";
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.Strings = void 0;
					var n = function() {
							function Strings() {}
							return Strings.errors = {
									unknownElementType: function(e) {
											return 'Unknown element type "'.concat(e, '". Fallback will be used if present.')
									},
									unknownActionType: function(e) {
											return 'Unknown action type "'.concat(e, '". Fallback will be used if present.')
									},
									elementTypeNotAllowed: function(e) {
											return 'Element type "'.concat(e, '" is not allowed in this context.')
									},
									actionTypeNotAllowed: function(e) {
											return 'Action type "'.concat(e, '" is not allowed in this context.')
									},
									invalidPropertyValue: function(e, t) {
											return 'Invalid value "'.concat(e, '" for property "').concat(t, '".')
									},
									showCardMustHaveCard: function() {
											return '"An Action.ShowCard must have its "card" property set to a valid AdaptiveCard object.'
									},
									invalidColumnWidth: function(e) {
											return 'Invalid column width "'.concat(e, '" - defaulting to "auto".')
									},
									invalidCardVersion: function(e) {
											return 'Invalid card version. Defaulting to "'.concat(e, '".')
									},
									invalidVersionString: function(e) {
											return 'Invalid version string "'.concat(e, '".')
									},
									propertyValueNotSupported: function(e, t, n, i) {
											return 'Value "'.concat(e, '" for property "').concat(t, '" is supported in version ').concat(n, ", but you are using version ").concat(i, ".")
									},
									propertyNotSupported: function(e, t, n) {
											return 'Property "'.concat(e, '" is supported in version ').concat(t, ", but you are using version ").concat(n, ".")
									},
									indexOutOfRange: function(e) {
											return "Index out of range (".concat(e, ").")
									},
									elementCannotBeUsedAsInline: function() {
											return "RichTextBlock.addInline: the specified card element cannot be used as a RichTextBlock inline."
									},
									inlineAlreadyParented: function() {
											return "RichTextBlock.addInline: the specified inline already belongs to another RichTextBlock."
									},
									interactivityNotAllowed: function() {
											return "Interactivity is not allowed."
									},
									inputsMustHaveUniqueId: function() {
											return "All inputs must have a unique Id."
									},
									choiceSetMustHaveAtLeastOneChoice: function() {
											return "An Input.ChoiceSet must have at least one choice defined."
									},
									choiceSetChoicesMustHaveTitleAndValue: function() {
											return "All choices in an Input.ChoiceSet must have their title and value properties set."
									},
									propertyMustBeSet: function(e) {
											return 'Property "'.concat(e, '" must be set.')
									},
									actionHttpHeadersMustHaveNameAndValue: function() {
											return "All headers of an Action.Http must have their name and value properties set."
									},
									tooManyActions: function(e) {
											return "Maximum number of actions exceeded (".concat(e, ").")
									},
									tooLittleTimeDelay: function(e) {
											return "Autoplay Delay is too short (".concat(e, ").")
									},
									tooManyCarouselPages: function(e) {
											return "Maximum number of Carousel pages exceeded (".concat(e, ").")
									},
									invalidInitialPageIndex: function(e) {
											return "InitialPage for carousel is invalid (".concat(e, ").")
									},
									columnAlreadyBelongsToAnotherSet: function() {
											return "This column already belongs to another ColumnSet."
									},
									invalidCardType: function() {
											return 'Invalid or missing card type. Make sure the card\'s type property is set to "AdaptiveCard".'
									},
									unsupportedCardVersion: function(e, t) {
											return "The specified card version (".concat(e, ") is not supported or still in preview. The latest released card version is ").concat(t, ".")
									},
									duplicateId: function(e) {
											return 'Duplicate Id "'.concat(e, '".')
									},
									markdownProcessingNotEnabled: function() {
											return "Markdown processing isn't enabled. Please see https://www.npmjs.com/package/adaptivecards#supporting-markdown"
									},
									processMarkdownEventRemoved: function() {
											return "The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead."
									},
									elementAlreadyParented: function() {
											return "The element already belongs to another container."
									},
									actionAlreadyParented: function() {
											return "The action already belongs to another element."
									},
									elementTypeNotStandalone: function(e) {
											return "Elements of type ".concat(e, " cannot be used as standalone elements.")
									}
							},
							Strings.magicCodeInputCard = {
									tryAgain: function() {
											return "That didn't work... let's try again."
									},
									pleaseLogin: function() {
											return 'Please login in the popup. You will obtain a magic code. Paste that code below and select "Submit"'
									},
									enterMagicCode: function() {
											return "Enter magic code"
									},
									pleaseEnterMagicCodeYouReceived: function() {
											return "Please enter the magic code you received."
									},
									submit: function() {
											return "Submit"
									},
									cancel: function() {
											return "Cancel"
									},
									somethingWentWrong: function() {
											return "Something went wrong. This action can't be handled."
									},
									authenticationFailed: function() {
											return "Authentication failed."
									}
							},
							Strings.runtime = {
									automaticRefreshPaused: function() {
											return "Automatic refresh paused."
									},
									clckToRestartAutomaticRefresh: function() {
											return "Click to restart."
									},
									refreshThisCard: function() {
											return "Refresh this card"
									}
							},
							Strings.hints = {
									dontUseWeightedAndStrecthedColumnsInSameSet: function() {
											return "It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space."
									}
							},
							Strings.defaults = {
									inlineActionTitle: function() {
											return "Inline Action"
									},
									overflowButtonText: function() {
											return "..."
									},
									overflowButtonTooltip: function() {
											return "More options"
									},
									mediaPlayerAriaLabel: function() {
											return "Media content"
									},
									mediaPlayerPlayMedia: function() {
											return "Play media"
									},
									youTubeVideoPlayer: function() {
											return "YouTube video player"
									},
									vimeoVideoPlayer: function() {
											return "Vimeo video player"
									},
									dailymotionVideoPlayer: function() {
											return "Dailymotion video player"
									}
							},
							Strings
					}();
					t.Strings = n
			}
			,
			6629: function(e, t, n) {
					"use strict";
					var i, r = this && this.__extends || (i = function(e, t) {
							return i = Object.setPrototypeOf || {
									__proto__: []
							}instanceof Array && function(e, t) {
									e.__proto__ = t
							}
							|| function(e, t) {
									for (var n in t)
											Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
							}
							,
							i(e, t)
					}
					,
					function(e, t) {
							if ("function" != typeof t && null !== t)
									throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
							function __() {
									this.constructor = e
							}
							i(e, t),
							e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
							new __)
					}
					), o = this && this.__decorate || function(e, t, n, i) {
							var r, o = arguments.length, s = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
							if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
									s = Reflect.decorate(e, t, n, i);
							else
									for (var a = e.length - 1; a >= 0; a--)
											(r = e[a]) && (s = (o < 3 ? r(s) : o > 3 ? r(t, n, s) : r(t, n)) || s);
							return o > 3 && s && Object.defineProperty(t, n, s),
							s
					}
					;
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.Table = t.TableRow = t.TableCell = t.StylableContainer = t.TableColumnDefinition = void 0;
					var s = n(7191)
						, a = n(9003)
						, l = n(9301)
						, c = n(2421)
						, d = n(8418)
						, p = n(6758)
						, u = n(7794)
						, h = function(e) {
							function TableColumnDefinition() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t.width = new d.SizeAndUnit(1,a.SizeUnit.Weight),
									t
							}
							return r(TableColumnDefinition, e),
							TableColumnDefinition.prototype.getSchemaKey = function() {
									return "ColumnDefinition"
							}
							,
							TableColumnDefinition.horizontalCellContentAlignmentProperty = new c.EnumProperty(c.Versions.v1_5,"horizontalCellContentAlignment",a.HorizontalAlignment),
							TableColumnDefinition.verticalCellContentAlignmentProperty = new c.EnumProperty(c.Versions.v1_5,"verticalCellContentAlignment",a.VerticalAlignment),
							TableColumnDefinition.widthProperty = new c.CustomProperty(c.Versions.v1_5,"width",(function(e, t, n, i) {
									var r = t.defaultValue
										, o = n[t.name]
										, s = !1;
									if ("number" != typeof o || isNaN(o))
											if ("string" == typeof o)
													try {
															r = d.SizeAndUnit.parse(o)
													} catch (e) {
															s = !0
													}
											else
													s = !0;
									else
											r = new d.SizeAndUnit(o,a.SizeUnit.Weight);
									return s && i.logParseEvent(e, a.ValidationEvent.InvalidPropertyValue, p.Strings.errors.invalidColumnWidth(o)),
									r
							}
							),(function(e, t, n, i, r) {
									i.unit === a.SizeUnit.Pixel ? r.serializeValue(n, "width", i.physicalSize + "px") : r.serializeNumber(n, "width", i.physicalSize)
							}
							),new d.SizeAndUnit(1,a.SizeUnit.Weight)),
							o([(0,
							c.property)(TableColumnDefinition.horizontalCellContentAlignmentProperty)], TableColumnDefinition.prototype, "horizontalCellContentAlignment", void 0),
							o([(0,
							c.property)(TableColumnDefinition.verticalCellContentAlignmentProperty)], TableColumnDefinition.prototype, "verticalCellContentAlignment", void 0),
							o([(0,
							c.property)(TableColumnDefinition.widthProperty)], TableColumnDefinition.prototype, "width", void 0),
							TableColumnDefinition
					}(c.SerializableObject);
					t.TableColumnDefinition = h;
					var m = function(e) {
							function StylableContainer() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t._items = [],
									t
							}
							return r(StylableContainer, e),
							StylableContainer.prototype.parseItem = function(e, t) {
									var n = this;
									return t.parseCardObject(this, e, [], !this.isDesignMode(), (function(e) {
											return n.createItemInstance(e)
									}
									), (function(e, n) {
											t.logParseEvent(void 0, a.ValidationEvent.ElementTypeNotAllowed, p.Strings.errors.elementTypeNotAllowed(e))
									}
									))
							}
							,
							StylableContainer.prototype.internalAddItem = function(e) {
									if (e.parent)
											throw new Error(p.Strings.errors.elementAlreadyParented());
									this._items.push(e),
									e.setParent(this)
							}
							,
							StylableContainer.prototype.internalRemoveItem = function(e) {
									var t = this._items.indexOf(e);
									return t >= 0 && (this._items.splice(t, 1),
									e.setParent(void 0),
									this.updateLayout(),
									!0)
							}
							,
							StylableContainer.prototype.internalIndexOf = function(e) {
									return this._items.indexOf(e)
							}
							,
							StylableContainer.prototype.internalParse = function(t, n) {
									e.prototype.internalParse.call(this, t, n),
									this._items = [];
									var i = t[this.getCollectionPropertyName()];
									if (Array.isArray(i))
											for (var r = 0, o = i; r < o.length; r++) {
													var s = o[r]
														, a = this.parseItem(s, n);
													a && this._items.push(a)
											}
							}
							,
							StylableContainer.prototype.internalToJSON = function(t, n) {
									e.prototype.internalToJSON.call(this, t, n),
									n.serializeArray(t, this.getCollectionPropertyName(), this._items)
							}
							,
							StylableContainer.prototype.removeItem = function(e) {
									return this.internalRemoveItem(e)
							}
							,
							StylableContainer.prototype.getItemCount = function() {
									return this._items.length
							}
							,
							StylableContainer.prototype.getItemAt = function(e) {
									return this._items[e]
							}
							,
							StylableContainer.prototype.getFirstVisibleRenderedItem = function() {
									return this.getItemCount() > 0 ? this.getItemAt(0) : void 0
							}
							,
							StylableContainer.prototype.getLastVisibleRenderedItem = function() {
									return this.getItemCount() > 0 ? this.getItemAt(this.getItemCount() - 1) : void 0
							}
							,
							StylableContainer
					}(s.StylableCardElementContainer);
					t.StylableContainer = m;
					var g = function(e) {
							function TableCell() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t._columnIndex = -1,
									t._cellType = "data",
									t
							}
							return r(TableCell, e),
							TableCell.prototype.getHasBorder = function() {
									return this.parentRow.parentTable.showGridLines
							}
							,
							TableCell.prototype.applyBorder = function() {
									if (this.renderedElement && this.getHasBorder()) {
											var e = this.hostConfig.containerStyles.getStyleByName(this.parentRow.parentTable.gridStyle);
											if (e.borderColor) {
													var t = (0,
													u.stringToCssColor)(e.borderColor);
													t && (this.renderedElement.style.borderRight = "1px solid " + t,
													this.renderedElement.style.borderBottom = "1px solid " + t)
											}
									}
							}
							,
							TableCell.prototype.getDefaultPadding = function() {
									return this.getHasBackground() || this.getHasBorder() ? new d.PaddingDefinition(a.Spacing.Small,a.Spacing.Small,a.Spacing.Small,a.Spacing.Small) : e.prototype.getDefaultPadding.call(this)
							}
							,
							TableCell.prototype.internalRender = function() {
									var t = e.prototype.internalRender.call(this);
									return t && (t.setAttribute("role", "data" === this.cellType ? "cell" : "columnheader"),
									t.style.minWidth = "0",
									"header" === this.cellType && t.setAttribute("scope", "col")),
									t
							}
							,
							TableCell.prototype.shouldSerialize = function(e) {
									return !0
							}
							,
							TableCell.prototype.getJsonTypeName = function() {
									return "TableCell"
							}
							,
							TableCell.prototype.getEffectiveTextStyleDefinition = function() {
									return "header" === this.cellType ? this.hostConfig.textStyles.columnHeader : e.prototype.getEffectiveTextStyleDefinition.call(this)
							}
							,
							TableCell.prototype.getEffectiveHorizontalAlignment = function() {
									if (void 0 !== this.horizontalAlignment)
											return this.horizontalAlignment;
									if (void 0 !== this.parentRow.horizontalCellContentAlignment)
											return this.parentRow.horizontalCellContentAlignment;
									if (this.columnIndex >= 0) {
											var t = this.parentRow.parentTable.getColumnAt(this.columnIndex).horizontalCellContentAlignment;
											if (void 0 !== t)
													return t
									}
									return void 0 !== this.parentRow.parentTable.horizontalCellContentAlignment ? this.parentRow.parentTable.horizontalCellContentAlignment : e.prototype.getEffectiveHorizontalAlignment.call(this)
							}
							,
							TableCell.prototype.getEffectiveVerticalContentAlignment = function() {
									if (void 0 !== this.verticalContentAlignment)
											return this.verticalContentAlignment;
									if (void 0 !== this.parentRow.verticalCellContentAlignment)
											return this.parentRow.verticalCellContentAlignment;
									if (this.columnIndex >= 0) {
											var t = this.parentRow.parentTable.getColumnAt(this.columnIndex).verticalCellContentAlignment;
											if (void 0 !== t)
													return t
									}
									return void 0 !== this.parentRow.parentTable.verticalCellContentAlignment ? this.parentRow.parentTable.verticalCellContentAlignment : e.prototype.getEffectiveVerticalContentAlignment.call(this)
							}
							,
							Object.defineProperty(TableCell.prototype, "columnIndex", {
									get: function() {
											return this._columnIndex
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(TableCell.prototype, "cellType", {
									get: function() {
											return this._cellType
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(TableCell.prototype, "parentRow", {
									get: function() {
											return this.parent
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(TableCell.prototype, "isStandalone", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							TableCell
					}(s.Container);
					t.TableCell = g;
					var _ = function(e) {
							function TableRow() {
									return null !== e && e.apply(this, arguments) || this
							}
							return r(TableRow, e),
							TableRow.prototype.getDefaultPadding = function() {
									return new d.PaddingDefinition(a.Spacing.None,a.Spacing.None,a.Spacing.None,a.Spacing.None)
							}
							,
							TableRow.prototype.applyBackground = function() {
									if (this.renderedElement) {
											var e = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));
											if (e.backgroundColor) {
													var t = (0,
													u.stringToCssColor)(e.backgroundColor);
													t && (this.renderedElement.style.backgroundColor = t)
											}
									}
							}
							,
							TableRow.prototype.getCollectionPropertyName = function() {
									return "cells"
							}
							,
							TableRow.prototype.createItemInstance = function(e) {
									return e && "TableCell" !== e ? void 0 : new g
							}
							,
							TableRow.prototype.internalRender = function() {
									var e = this.getIsFirstRow()
										, t = this.hostConfig.table.cellSpacing
										, n = document.createElement("div");
									n.setAttribute("role", "row"),
									n.style.display = "flex",
									n.style.flexDirection = "row";
									for (var i = 0; i < Math.min(this.getItemCount(), this.parentTable.getColumnCount()); i++) {
											var r = this.getItemAt(i);
											r._columnIndex = i,
											r._cellType = this.parentTable.firstRowAsHeaders && e ? "header" : "data";
											var o = r.render();
											if (o) {
													var s = this.parentTable.getColumnAt(i);
													s.computedWidth.unit === a.SizeUnit.Pixel ? o.style.flex = "0 0 " + s.computedWidth.physicalSize + "px" : o.style.flex = "1 1 " + s.computedWidth.physicalSize + "%",
													i > 0 && !this.parentTable.showGridLines && t > 0 && (o.style.marginLeft = t + "px"),
													n.appendChild(o)
											}
									}
									return n.children.length > 0 ? n : void 0
							}
							,
							TableRow.prototype.shouldSerialize = function(e) {
									return !0
							}
							,
							TableRow.prototype.addCell = function(e) {
									this.internalAddItem(e)
							}
							,
							TableRow.prototype.removeCellAt = function(e) {
									return e >= 0 && e < this.getItemCount() && this.removeItem(this.getItemAt(e))
							}
							,
							TableRow.prototype.indexOf = function(e) {
									return e instanceof g ? this.internalIndexOf(e) : -1
							}
							,
							TableRow.prototype.ensureHasEnoughCells = function(e) {
									for (; this.getItemCount() < e; )
											this.addCell(new g)
							}
							,
							TableRow.prototype.getJsonTypeName = function() {
									return "TableRow"
							}
							,
							TableRow.prototype.getIsFirstRow = function() {
									return this.parentTable.getItemAt(0) === this
							}
							,
							Object.defineProperty(TableRow.prototype, "parentTable", {
									get: function() {
											return this.parent
									},
									enumerable: !1,
									configurable: !0
							}),
							Object.defineProperty(TableRow.prototype, "isStandalone", {
									get: function() {
											return !1
									},
									enumerable: !1,
									configurable: !0
							}),
							TableRow.styleProperty = new s.ContainerStyleProperty(c.Versions.v1_5,"style"),
							TableRow.horizontalCellContentAlignmentProperty = new c.EnumProperty(c.Versions.v1_5,"horizontalCellContentAlignment",a.HorizontalAlignment),
							TableRow.verticalCellContentAlignmentProperty = new c.EnumProperty(c.Versions.v1_5,"verticalCellContentAlignment",a.VerticalAlignment),
							o([(0,
							c.property)(TableRow.horizontalCellContentAlignmentProperty)], TableRow.prototype, "horizontalCellContentAlignment", void 0),
							o([(0,
							c.property)(TableRow.verticalCellContentAlignmentProperty)], TableRow.prototype, "verticalCellContentAlignment", void 0),
							TableRow
					}(m);
					t.TableRow = _;
					var f = function(e) {
							function Table() {
									var t = null !== e && e.apply(this, arguments) || this;
									return t._columns = [],
									t.firstRowAsHeaders = !0,
									t.showGridLines = !0,
									t
							}
							return r(Table, e),
							Object.defineProperty(Table.prototype, "gridStyle", {
									get: function() {
											var e = this.getValue(Table.gridStyleProperty);
											if (e && this.hostConfig.containerStyles.getStyleByName(e))
													return e
									},
									set: function(e) {
											this.setValue(Table.gridStyleProperty, e)
									},
									enumerable: !1,
									configurable: !0
							}),
							Table.prototype.ensureRowsHaveEnoughCells = function() {
									for (var e = 0; e < this.getItemCount(); e++)
											this.getItemAt(e).ensureHasEnoughCells(this.getColumnCount())
							}
							,
							Table.prototype.removeCellsFromColumn = function(e) {
									for (var t = 0; t < this.getItemCount(); t++)
											this.getItemAt(t).removeCellAt(e)
							}
							,
							Table.prototype.getCollectionPropertyName = function() {
									return "rows"
							}
							,
							Table.prototype.createItemInstance = function(e) {
									return e && "TableRow" !== e ? void 0 : new _
							}
							,
							Table.prototype.internalParse = function(t, n) {
									e.prototype.internalParse.call(this, t, n),
									this.ensureRowsHaveEnoughCells()
							}
							,
							Table.prototype.internalRender = function() {
									if (this.getItemCount() > 0) {
											for (var e = 0, t = 0, n = this._columns; t < n.length; t++) {
													(o = n[t]).width.unit === a.SizeUnit.Weight && (e += o.width.physicalSize)
											}
											for (var i = 0, r = this._columns; i < r.length; i++) {
													var o;
													(o = r[i]).width.unit === a.SizeUnit.Pixel ? o.computedWidth = new d.SizeAndUnit(o.width.physicalSize,a.SizeUnit.Pixel) : o.computedWidth = new d.SizeAndUnit(100 / e * o.width.physicalSize,a.SizeUnit.Weight)
											}
											var s = document.createElement("div");
											if (s.setAttribute("role", "table"),
											s.style.display = "flex",
											s.style.flexDirection = "column",
											this.showGridLines) {
													var l = this.hostConfig.containerStyles.getStyleByName(this.gridStyle);
													if (l.borderColor) {
															var c = (0,
															u.stringToCssColor)(l.borderColor);
															c && (s.style.borderTop = "1px solid " + c,
															s.style.borderLeft = "1px solid " + c)
													}
											}
											for (var p = this.hostConfig.table.cellSpacing, h = 0; h < this.getItemCount(); h++) {
													var m = this.getItemAt(h).render();
													if (m) {
															if (h > 0 && !this.showGridLines && p > 0) {
																	var g = document.createElement("div");
																	g.setAttribute("aria-hidden", "true"),
																	g.style.height = p + "px",
																	s.appendChild(g)
															}
															s.appendChild(m)
													}
											}
											return s
									}
							}
							,
							Table.prototype.addColumn = function(e) {
									this._columns.push(e),
									this.ensureRowsHaveEnoughCells()
							}
							,
							Table.prototype.removeColumn = function(e) {
									var t = this._columns.indexOf(e);
									t >= 0 && (this.removeCellsFromColumn(t),
									this._columns.splice(t, 1))
							}
							,
							Table.prototype.getColumnCount = function() {
									return this._columns.length
							}
							,
							Table.prototype.getColumnAt = function(e) {
									return this._columns[e]
							}
							,
							Table.prototype.addRow = function(e) {
									this.internalAddItem(e),
									e.ensureHasEnoughCells(this.getColumnCount())
							}
							,
							Table.prototype.indexOf = function(e) {
									return e instanceof _ ? this.internalIndexOf(e) : -1
							}
							,
							Table.prototype.getJsonTypeName = function() {
									return "Table"
							}
							,
							Table._columnsProperty = new c.SerializableObjectCollectionProperty(c.Versions.v1_5,"columns",h),
							Table.firstRowAsHeadersProperty = new c.BoolProperty(c.Versions.v1_5,"firstRowAsHeaders",!0),
							Table.showGridLinesProperty = new c.BoolProperty(c.Versions.v1_5,"showGridLines",!0),
							Table.gridStyleProperty = new s.ContainerStyleProperty(c.Versions.v1_5,"gridStyle"),
							Table.horizontalCellContentAlignmentProperty = new c.EnumProperty(c.Versions.v1_5,"horizontalCellContentAlignment",a.HorizontalAlignment),
							Table.verticalCellContentAlignmentProperty = new c.EnumProperty(c.Versions.v1_5,"verticalCellContentAlignment",a.VerticalAlignment),
							o([(0,
							c.property)(Table._columnsProperty)], Table.prototype, "_columns", void 0),
							o([(0,
							c.property)(Table.firstRowAsHeadersProperty)], Table.prototype, "firstRowAsHeaders", void 0),
							o([(0,
							c.property)(Table.showGridLinesProperty)], Table.prototype, "showGridLines", void 0),
							o([(0,
							c.property)(Table.gridStyleProperty)], Table.prototype, "gridStyle", null),
							o([(0,
							c.property)(Table.horizontalCellContentAlignmentProperty)], Table.prototype, "horizontalCellContentAlignment", void 0),
							o([(0,
							c.property)(Table.verticalCellContentAlignmentProperty)], Table.prototype, "verticalCellContentAlignment", void 0),
							Table
					}(m);
					t.Table = f,
					l.GlobalRegistry.defaultElements.register("Table", f, c.Versions.v1_5)
			},
			9514: function(e, t) {
					"use strict";
					var n, i = this && this.__extends || (n = function(e, t) {
							return n = Object.setPrototypeOf || {
									__proto__: []
							}instanceof Array && function(e, t) {
									e.__proto__ = t
							}
							|| function(e, t) {
									for (var n in t)
											Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
							}
							,
							n(e, t)
					}
					,
					function(e, t) {
							if ("function" != typeof t && null !== t)
									throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
							function __() {
									this.constructor = e
							}
							n(e, t),
							e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
							new __)
					}
					);
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.formatText = void 0;
					var r = function() {
							function AbstractTextFormatter(e) {
									this._regularExpression = e
							}
							return AbstractTextFormatter.prototype.format = function(e, t) {
									var n;
									if (t) {
											for (var i = t; null != (n = this._regularExpression.exec(t)); )
													i = i.replace(n[0], this.internalFormat(e, n));
											return i
									}
									return t
							}
							,
							AbstractTextFormatter
					}()
						, o = function(e) {
							function DateFormatter() {
									return null !== e && e.apply(this, arguments) || this
							}
							return i(DateFormatter, e),
							DateFormatter.prototype.internalFormat = function(e, t) {
									var n = new Date(Date.parse(t[1]))
										, i = void 0 !== t[2] ? t[2].toLowerCase() : "compact";
									return "compact" !== i ? n.toLocaleDateString(e, {
											day: "numeric",
											weekday: i,
											month: i,
											year: "numeric"
									}) : n.toLocaleDateString()
							}
							,
							DateFormatter
					}(r)
						, s = function(e) {
							function TimeFormatter() {
									return null !== e && e.apply(this, arguments) || this
							}
							return i(TimeFormatter, e),
							TimeFormatter.prototype.internalFormat = function(e, t) {
									return new Date(Date.parse(t[1])).toLocaleTimeString(e, {
											hour: "numeric",
											minute: "2-digit"
									})
							}
							,
							TimeFormatter
					}(r);
					t.formatText = function(e, t) {
							for (var n = t, i = 0, r = [new o(/\{{2}DATE\((\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:Z|(?:(?:-|\+)\d{2}:\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\)\}{2}/g), new s(/\{{2}TIME\((\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:Z|(?:(?:-|\+)\d{2}:\d{2})))\)\}{2}/g)]; i < r.length; i++) {
									n = r[i].format(e, n)
							}
							return n
					}
			},
			7794: (e,t,n)=>{
					"use strict";
					var i;
					Object.defineProperty(t, "__esModule", {
							value: !0
					}),
					t.addCancelSelectActionEventHandler = t.clearElementChildren = t.getScrollY = t.getScrollX = t.getFitStatus = t.truncate = t.truncateText = t.stringToCssColor = t.parseEnum = t.getEnumValueByName = t.parseBool = t.parseNumber = t.parseString = t.appendChild = t.generateUniqueId = t.isMobileOS = t.isInternetExplorer = void 0;
					var r = n(9003)
						, o = n(8418);
					function getEnumValueByName(e, t) {
							for (var n in e) {
									var i = parseInt(n, 10);
									if (i >= 0) {
											var r = e[n];
											if (r && "string" == typeof r && r.toLowerCase() === t.toLowerCase())
													return i
									}
							}
					}
					function truncateWorker(e, t, n, i, r) {
							var fits = function() {
									return t - e.scrollHeight >= -1
							};
							if (!fits()) {
									for (var o = function(e) {
											var t = []
												, n = findNextCharacter(e, -1);
											for (; n < e.length; )
													" " === e[n] && t.push(n),
													n = findNextCharacter(e, n);
											return t
									}(n), s = 0, a = o.length, l = 0; s < a; ) {
											var c = Math.floor((s + a) / 2);
											i(n, o[c]),
											fits() ? (l = o[c],
											s = c + 1) : a = c
									}
									if (i(n, l),
									r && t - e.scrollHeight >= r - 1) {
											for (var d = findNextCharacter(n, l); d < n.length && (i(n, d),
											fits()); )
													l = d,
													d = findNextCharacter(n, d);
											i(n, l)
									}
							}
					}
					t.isInternetExplorer = function() {
							return void 0 !== window.document.documentMode
					}
					,
					t.isMobileOS = function() {
							var e = window.navigator.userAgent;
							return !!e.match(/Android/i) || !!e.match(/iPad/i) || !!e.match(/iPhone/i)
					}
					,
					t.generateUniqueId = function() {
							return "__ac-" + o.UUID.generate()
					}
					,
					t.appendChild = function(e, t) {
							t && e.appendChild(t)
					}
					,
					t.parseString = function(e, t) {
							return "string" == typeof e ? e : t
					}
					,
					t.parseNumber = function(e, t) {
							return "number" == typeof e ? e : t
					}
					,
					t.parseBool = function(e, t) {
							if ("boolean" == typeof e)
									return e;
							if ("string" == typeof e)
									switch (e.toLowerCase()) {
									case "true":
											return !0;
									case "false":
											return !1;
									default:
											return t
									}
							return t
					}
					,
					t.getEnumValueByName = getEnumValueByName,
					t.parseEnum = function(e, t, n) {
							if (!t)
									return n;
							var i = getEnumValueByName(e, t);
							return void 0 !== i ? i : n
					}
					,
					t.stringToCssColor = function(e) {
							if (e) {
									var t = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi.exec(e);
									if (t && t[4]) {
											var n = parseInt(t[1], 16) / 255;
											return "rgba(" + parseInt(t[2], 16) + "," + parseInt(t[3], 16) + "," + parseInt(t[4], 16) + "," + n + ")"
									}
							}
							return e
					}
					,
					t.truncateText = function(e, t, n) {
							truncateWorker(e, t, e.innerText, (function(t, n) {
									e.innerText = t.substring(0, n) + "..."
							}
							), n)
					}
					;
					var s = "undefined" == typeof window || null === (i = window.trustedTypes) || void 0 === i ? void 0 : i.createPolicy("adaptivecards#deprecatedExportedFunctionPolicy", {
							createHTML: function(e) {
									return e
							}
					});
					function findNextCharacter(e, t) {
							for (t += 1; t < e.length && "<" === e[t]; )
									for (; t < e.length && ">" !== e[t++]; )
											;
							return t
					}
					t.truncate = function(e, t, n) {
							truncateWorker(e, t, e.innerHTML, (function(t, n) {
									var i, r = t.substring(0, n) + "...", o = null !== (i = null == s ? void 0 : s.createHTML(r)) && void 0 !== i ? i : r;
									e.innerHTML = o
							}
							), n)
					}
					,
					t.getFitStatus = function(e, t) {
							var n = e.offsetTop;
							return n + e.clientHeight <= t ? r.ContainerFitStatus.FullyInContainer : n < t ? r.ContainerFitStatus.Overflowing : r.ContainerFitStatus.FullyOutOfContainer
					}
					,
					t.getScrollX = function() {
							return window.pageXOffset
					}
					,
					t.getScrollY = function() {
							return window.pageYOffset
					}
					,
					t.clearElementChildren = function(e) {
							for (; e.firstChild; )
									e.removeChild(e.firstChild)
					}
					,
					t.addCancelSelectActionEventHandler = function(e) {
							e.onclick = function(e) {
									e.preventDefault(),
									e.cancelBubble = !0
							}
					}
			}
			,
			7423: (e,t,n)=>{
					"use strict";
					function assign(e) {
							var t = Array.prototype.slice.call(arguments, 1);
							return t.forEach((function(t) {
									t && Object.keys(t).forEach((function(n) {
											e[n] = t[n]
									}
									))
							}
							)),
							e
					}
					function _class(e) {
							return Object.prototype.toString.call(e)
					}
					function isFunction(e) {
							return "[object Function]" === _class(e)
					}
					function escapeRE(e) {
							return e.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&")
					}
					var i = {
							fuzzyLink: !0,
							fuzzyEmail: !0,
							fuzzyIP: !1
					};
					var r = {
							"http:": {
									validate: function(e, t, n) {
											var i = e.slice(t);
											return n.re.http || (n.re.http = new RegExp("^\\/\\/" + n.re.src_auth + n.re.src_host_port_strict + n.re.src_path,"i")),
											n.re.http.test(i) ? i.match(n.re.http)[0].length : 0
									}
							},
							"https:": "http:",
							"ftp:": "http:",
							"//": {
									validate: function(e, t, n) {
											var i = e.slice(t);
											return n.re.no_http || (n.re.no_http = new RegExp("^" + n.re.src_auth + "(?:localhost|(?:(?:" + n.re.src_domain + ")\\.)+" + n.re.src_domain_root + ")" + n.re.src_port + n.re.src_host_terminator + n.re.src_path,"i")),
											n.re.no_http.test(i) ? t >= 3 && ":" === e[t - 3] || t >= 3 && "/" === e[t - 3] ? 0 : i.match(n.re.no_http)[0].length : 0
									}
							},
							"mailto:": {
									validate: function(e, t, n) {
											var i = e.slice(t);
											return n.re.mailto || (n.re.mailto = new RegExp("^" + n.re.src_email_name + "@" + n.re.src_host_strict,"i")),
											n.re.mailto.test(i) ? i.match(n.re.mailto)[0].length : 0
									}
							}
					}
						, o = "biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");
					function compile(e) {
							var t = e.re = n(6582)(e.__opts__)
								, i = e.__tlds__.slice();
							function untpl(e) {
									return e.replace("%TLDS%", t.src_tlds)
							}
							e.onCompile(),
							e.__tlds_replaced__ || i.push("a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]"),
							i.push(t.src_xn),
							t.src_tlds = i.join("|"),
							t.email_fuzzy = RegExp(untpl(t.tpl_email_fuzzy), "i"),
							t.link_fuzzy = RegExp(untpl(t.tpl_link_fuzzy), "i"),
							t.link_no_ip_fuzzy = RegExp(untpl(t.tpl_link_no_ip_fuzzy), "i"),
							t.host_fuzzy_test = RegExp(untpl(t.tpl_host_fuzzy_test), "i");
							var r = [];
							function schemaError(e, t) {
									throw new Error('(LinkifyIt) Invalid schema "' + e + '": ' + t)
							}
							e.__compiled__ = {},
							Object.keys(e.__schemas__).forEach((function(t) {
									var n = e.__schemas__[t];
									if (null !== n) {
											var i = {
													validate: null,
													link: null
											};
											if (e.__compiled__[t] = i,
											"[object Object]" === _class(n))
													return !function(e) {
															return "[object RegExp]" === _class(e)
													}(n.validate) ? isFunction(n.validate) ? i.validate = n.validate : schemaError(t, n) : i.validate = function(e) {
															return function(t, n) {
																	var i = t.slice(n);
																	return e.test(i) ? i.match(e)[0].length : 0
															}
													}(n.validate),
													void (isFunction(n.normalize) ? i.normalize = n.normalize : n.normalize ? schemaError(t, n) : i.normalize = function(e, t) {
															t.normalize(e)
													}
													);
											!function(e) {
													return "[object String]" === _class(e)
											}(n) ? schemaError(t, n) : r.push(t)
									}
							}
							)),
							r.forEach((function(t) {
									e.__compiled__[e.__schemas__[t]] && (e.__compiled__[t].validate = e.__compiled__[e.__schemas__[t]].validate,
									e.__compiled__[t].normalize = e.__compiled__[e.__schemas__[t]].normalize)
							}
							)),
							e.__compiled__[""] = {
									validate: null,
									normalize: function(e, t) {
											t.normalize(e)
									}
							};
							var o = Object.keys(e.__compiled__).filter((function(t) {
									return t.length > 0 && e.__compiled__[t]
							}
							)).map(escapeRE).join("|");
							e.re.schema_test = RegExp("(^|(?!_)(?:[><｜]|" + t.src_ZPCc + "))(" + o + ")", "i"),
							e.re.schema_search = RegExp("(^|(?!_)(?:[><｜]|" + t.src_ZPCc + "))(" + o + ")", "ig"),
							e.re.schema_at_start = RegExp("^" + e.re.schema_search.source, "i"),
							e.re.pretest = RegExp("(" + e.re.schema_test.source + ")|(" + e.re.host_fuzzy_test.source + ")|@", "i"),
							function(e) {
									e.__index__ = -1,
									e.__text_cache__ = ""
							}(e)
					}
					function Match(e, t) {
							var n = e.__index__
								, i = e.__last_index__
								, r = e.__text_cache__.slice(n, i);
							this.schema = e.__schema__.toLowerCase(),
							this.index = n + t,
							this.lastIndex = i + t,
							this.raw = r,
							this.text = r,
							this.url = r
					}
					function createMatch(e, t) {
							var n = new Match(e,t);
							return e.__compiled__[n.schema].normalize(n, e),
							n
					}
					function LinkifyIt(e, t) {
							if (!(this instanceof LinkifyIt))
									return new LinkifyIt(e,t);
							var n;
							t || (n = e,
							Object.keys(n || {}).reduce((function(e, t) {
									return e || i.hasOwnProperty(t)
							}
							), !1) && (t = e,
							e = {})),
							this.__opts__ = assign({}, i, t),
							this.__index__ = -1,
							this.__last_index__ = -1,
							this.__schema__ = "",
							this.__text_cache__ = "",
							this.__schemas__ = assign({}, r, e),
							this.__compiled__ = {},
							this.__tlds__ = o,
							this.__tlds_replaced__ = !1,
							this.re = {},
							compile(this)
					}
					LinkifyIt.prototype.add = function(e, t) {
							return this.__schemas__[e] = t,
							compile(this),
							this
					}
					,
					LinkifyIt.prototype.set = function(e) {
							return this.__opts__ = assign(this.__opts__, e),
							this
					}
					,
					LinkifyIt.prototype.test = function(e) {
							if (this.__text_cache__ = e,
							this.__index__ = -1,
							!e.length)
									return !1;
							var t, n, i, r, o, s, a, l;
							if (this.re.schema_test.test(e))
									for ((a = this.re.schema_search).lastIndex = 0; null !== (t = a.exec(e)); )
											if (r = this.testSchemaAt(e, t[2], a.lastIndex)) {
													this.__schema__ = t[2],
													this.__index__ = t.index + t[1].length,
													this.__last_index__ = t.index + t[0].length + r;
													break
											}
							return this.__opts__.fuzzyLink && this.__compiled__["http:"] && (l = e.search(this.re.host_fuzzy_test)) >= 0 && (this.__index__ < 0 || l < this.__index__) && null !== (n = e.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) && (o = n.index + n[1].length,
							(this.__index__ < 0 || o < this.__index__) && (this.__schema__ = "",
							this.__index__ = o,
							this.__last_index__ = n.index + n[0].length)),
							this.__opts__.fuzzyEmail && this.__compiled__["mailto:"] && e.indexOf("@") >= 0 && null !== (i = e.match(this.re.email_fuzzy)) && (o = i.index + i[1].length,
							s = i.index + i[0].length,
							(this.__index__ < 0 || o < this.__index__ || o === this.__index__ && s > this.__last_index__) && (this.__schema__ = "mailto:",
							this.__index__ = o,
							this.__last_index__ = s)),
							this.__index__ >= 0
					}
					,
					LinkifyIt.prototype.pretest = function(e) {
							return this.re.pretest.test(e)
					}
					,
					LinkifyIt.prototype.testSchemaAt = function(e, t, n) {
							return this.__compiled__[t.toLowerCase()] ? this.__compiled__[t.toLowerCase()].validate(e, n, this) : 0
					}
					,
					LinkifyIt.prototype.match = function(e) {
							var t = 0
								, n = [];
							this.__index__ >= 0 && this.__text_cache__ === e && (n.push(createMatch(this, t)),
							t = this.__last_index__);
							for (var i = t ? e.slice(t) : e; this.test(i); )
									n.push(createMatch(this, t)),
									i = i.slice(this.__last_index__),
									t += this.__last_index__;
							return n.length ? n : null
					}
					,
					LinkifyIt.prototype.matchAtStart = function(e) {
							if (this.__text_cache__ = e,
							this.__index__ = -1,
							!e.length)
									return null;
							var t = this.re.schema_at_start.exec(e);
							if (!t)
									return null;
							var n = this.testSchemaAt(e, t[2], t[0].length);
							return n ? (this.__schema__ = t[2],
							this.__index__ = t.index + t[1].length,
							this.__last_index__ = t.index + t[0].length + n,
							createMatch(this, 0)) : null
					}
					,
					LinkifyIt.prototype.tlds = function(e, t) {
							return e = Array.isArray(e) ? e : [e],
							t ? (this.__tlds__ = this.__tlds__.concat(e).sort().filter((function(e, t, n) {
									return e !== n[t - 1]
							}
							)).reverse(),
							compile(this),
							this) : (this.__tlds__ = e.slice(),
							this.__tlds_replaced__ = !0,
							compile(this),
							this)
					}
					,
					LinkifyIt.prototype.normalize = function(e) {
							e.schema || (e.url = "http://" + e.url),
							"mailto:" !== e.schema || /^mailto:/i.test(e.url) || (e.url = "mailto:" + e.url)
					}
					,
					LinkifyIt.prototype.onCompile = function() {}
					,
					e.exports = LinkifyIt
			}
			,
			6582: (e,t,n)=>{
					"use strict";
					e.exports = function(e) {
							var t = {};
							e = e || {},
							t.src_Any = n(1816).source,
							t.src_Cc = n(355).source,
							t.src_Z = n(21).source,
							t.src_P = n(6121).source,
							t.src_ZPCc = [t.src_Z, t.src_P, t.src_Cc].join("|"),
							t.src_ZCc = [t.src_Z, t.src_Cc].join("|");
							var i = "[><｜]";
							return t.src_pseudo_letter = "(?:(?![><｜]|" + t.src_ZPCc + ")" + t.src_Any + ")",
							t.src_ip4 = "(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)",
							t.src_auth = "(?:(?:(?!" + t.src_ZCc + "|[@/\\[\\]()]).)+@)?",
							t.src_port = "(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?",
							t.src_host_terminator = "(?=$|[><｜]|" + t.src_ZPCc + ")(?!" + (e["---"] ? "-(?!--)|" : "-|") + "_|:\\d|\\.-|\\.(?!$|" + t.src_ZPCc + "))",
							t.src_path = "(?:[/?#](?:(?!" + t.src_ZCc + "|" + i + "|[()[\\]{}.,\"'?!\\-;]).|\\[(?:(?!" + t.src_ZCc + "|\\]).)*\\]|\\((?:(?!" + t.src_ZCc + "|[)]).)*\\)|\\{(?:(?!" + t.src_ZCc + '|[}]).)*\\}|\\"(?:(?!' + t.src_ZCc + '|["]).)+\\"|\\\'(?:(?!' + t.src_ZCc + "|[']).)+\\'|\\'(?=" + t.src_pseudo_letter + "|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!" + t.src_ZCc + "|[.]|$)|" + (e["---"] ? "\\-(?!--(?:[^-]|$))(?:-*)|" : "\\-+|") + ",(?!" + t.src_ZCc + "|$)|;(?!" + t.src_ZCc + "|$)|\\!+(?!" + t.src_ZCc + "|[!]|$)|\\?(?!" + t.src_ZCc + "|[?]|$))+|\\/)?",
							t.src_email_name = '[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*',
							t.src_xn = "xn--[a-z0-9\\-]{1,59}",
							t.src_domain_root = "(?:" + t.src_xn + "|" + t.src_pseudo_letter + "{1,63})",
							t.src_domain = "(?:" + t.src_xn + "|(?:" + t.src_pseudo_letter + ")|(?:" + t.src_pseudo_letter + "(?:-|" + t.src_pseudo_letter + "){0,61}" + t.src_pseudo_letter + "))",
							t.src_host = "(?:(?:(?:(?:" + t.src_domain + ")\\.)*" + t.src_domain + "))",
							t.tpl_host_fuzzy = "(?:" + t.src_ip4 + "|(?:(?:(?:" + t.src_domain + ")\\.)+(?:%TLDS%)))",
							t.tpl_host_no_ip_fuzzy = "(?:(?:(?:" + t.src_domain + ")\\.)+(?:%TLDS%))",
							t.src_host_strict = t.src_host + t.src_host_terminator,
							t.tpl_host_fuzzy_strict = t.tpl_host_fuzzy + t.src_host_terminator,
							t.src_host_port_strict = t.src_host + t.src_port + t.src_host_terminator,
							t.tpl_host_port_fuzzy_strict = t.tpl_host_fuzzy + t.src_port + t.src_host_terminator,
							t.tpl_host_port_no_ip_fuzzy_strict = t.tpl_host_no_ip_fuzzy + t.src_port + t.src_host_terminator,
							t.tpl_host_fuzzy_test = "localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:" + t.src_ZPCc + "|>|$))",
							t.tpl_email_fuzzy = '(^|[><｜]|"|\\(|' + t.src_ZCc + ")(" + t.src_email_name + "@" + t.tpl_host_fuzzy_strict + ")",
							t.tpl_link_fuzzy = "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + t.src_ZPCc + "))((?![$+<=>^`|｜])" + t.tpl_host_port_fuzzy_strict + t.src_path + ")",
							t.tpl_link_no_ip_fuzzy = "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + t.src_ZPCc + "))((?![$+<=>^`|｜])" + t.tpl_host_port_no_ip_fuzzy_strict + t.src_path + ")",
							t
					}
			}
			,
			4868: (e,t,n)=>{
					"use strict";
					e.exports = n(506)
			}
			,
			4216: (e,t,n)=>{
					"use strict";
					e.exports = n(4058)
			}
			,
			9606: e=>{
					"use strict";
					e.exports = ["address", "article", "aside", "base", "basefont", "blockquote", "body", "caption", "center", "col", "colgroup", "dd", "details", "dialog", "dir", "div", "dl", "dt", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hr", "html", "iframe", "legend", "li", "link", "main", "menu", "menuitem", "nav", "noframes", "ol", "optgroup", "option", "p", "param", "section", "source", "summary", "table", "tbody", "td", "tfoot", "th", "thead", "title", "tr", "track", "ul"]
			}
			,
			8247: e=>{
					"use strict";
					var t = "<[A-Za-z][A-Za-z0-9\\-]*(?:\\s+[a-zA-Z_:][a-zA-Z0-9:._-]*(?:\\s*=\\s*(?:[^\"'=<>`\\x00-\\x20]+|'[^']*'|\"[^\"]*\"))?)*\\s*\\/?>"
						, n = "<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>"
						, i = new RegExp("^(?:" + t + "|" + n + "|\x3c!----\x3e|\x3c!--(?:-?[^>-])(?:-?[^-])*--\x3e|<[?][\\s\\S]*?[?]>|<![A-Z]+\\s+[^>]*>|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>)")
						, r = new RegExp("^(?:" + t + "|" + n + ")");
					e.exports.n = i,
					e.exports.q = r
			}
			,
			9086: (e,t,n)=>{
					"use strict";
					var i = Object.prototype.hasOwnProperty;
					function has(e, t) {
							return i.call(e, t)
					}
					function isValidEntityCode(e) {
							return !(e >= 55296 && e <= 57343) && (!(e >= 64976 && e <= 65007) && (65535 != (65535 & e) && 65534 != (65535 & e) && (!(e >= 0 && e <= 8) && (11 !== e && (!(e >= 14 && e <= 31) && (!(e >= 127 && e <= 159) && !(e > 1114111)))))))
					}
					function fromCodePoint(e) {
							if (e > 65535) {
									var t = 55296 + ((e -= 65536) >> 10)
										, n = 56320 + (1023 & e);
									return String.fromCharCode(t, n)
							}
							return String.fromCharCode(e)
					}
					var r = /\\([!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~])/g
						, o = new RegExp(r.source + "|" + /&([a-z#][a-z0-9]{1,31});/gi.source,"gi")
						, s = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i
						, a = n(4216);
					var l = /[&<>"]/
						, c = /[&<>"]/g
						, d = {
							"&": "&amp;",
							"<": "&lt;",
							">": "&gt;",
							'"': "&quot;"
					};
					function replaceUnsafeChar(e) {
							return d[e]
					}
					var p = /[.?*+^$[\]\\(){}|-]/g;
					var u = n(6121);
					t.lib = {},
					t.lib.mdurl = n(3771),
					t.lib.ucmicro = n(8274),
					t.assign = function(e) {
							var t = Array.prototype.slice.call(arguments, 1);
							return t.forEach((function(t) {
									if (t) {
											if ("object" != typeof t)
													throw new TypeError(t + "must be object");
											Object.keys(t).forEach((function(n) {
													e[n] = t[n]
											}
											))
									}
							}
							)),
							e
					}
					,
					t.isString = function(e) {
							return "[object String]" === function(e) {
									return Object.prototype.toString.call(e)
							}(e)
					}
					,
					t.has = has,
					t.unescapeMd = function(e) {
							return e.indexOf("\\") < 0 ? e : e.replace(r, "$1")
					}
					,
					t.unescapeAll = function(e) {
							return e.indexOf("\\") < 0 && e.indexOf("&") < 0 ? e : e.replace(o, (function(e, t, n) {
									return t || function(e, t) {
											var n = 0;
											return has(a, t) ? a[t] : 35 === t.charCodeAt(0) && s.test(t) && isValidEntityCode(n = "x" === t[1].toLowerCase() ? parseInt(t.slice(2), 16) : parseInt(t.slice(1), 10)) ? fromCodePoint(n) : e
									}(e, n)
							}
							))
					}
					,
					t.isValidEntityCode = isValidEntityCode,
					t.fromCodePoint = fromCodePoint,
					t.escapeHtml = function(e) {
							return l.test(e) ? e.replace(c, replaceUnsafeChar) : e
					}
					,
					t.arrayReplaceAt = function(e, t, n) {
							return [].concat(e.slice(0, t), n, e.slice(t + 1))
					}
					,
					t.isSpace = function(e) {
							switch (e) {
							case 9:
							case 32:
									return !0
							}
							return !1
					}
					,
					t.isWhiteSpace = function(e) {
							if (e >= 8192 && e <= 8202)
									return !0;
							switch (e) {
							case 9:
							case 10:
							case 11:
							case 12:
							case 13:
							case 32:
							case 160:
							case 5760:
							case 8239:
							case 8287:
							case 12288:
									return !0
							}
							return !1
					}
					,
					t.isMdAsciiPunct = function(e) {
							switch (e) {
							case 33:
							case 34:
							case 35:
							case 36:
							case 37:
							case 38:
							case 39:
							case 40:
							case 41:
							case 42:
							case 43:
							case 44:
							case 45:
							case 46:
							case 47:
							case 58:
							case 59:
							case 60:
							case 61:
							case 62:
							case 63:
							case 64:
							case 91:
							case 92:
							case 93:
							case 94:
							case 95:
							case 96:
							case 123:
							case 124:
							case 125:
							case 126:
									return !0;
							default:
									return !1
							}
					}
					,
					t.isPunctChar = function(e) {
							return u.test(e)
					}
					,
					t.escapeRE = function(e) {
							return e.replace(p, "\\$&")
					}
					,
					t.normalizeReference = function(e) {
							return e = e.trim().replace(/\s+/g, " "),
							"Ṿ" === "ẞ".toLowerCase() && (e = e.replace(/ẞ/g, "ß")),
							e.toLowerCase().toUpperCase()
					}
			}
			,
			9699: (e,t,n)=>{
					"use strict";
					t.parseLinkLabel = n(9347),
					t.parseLinkDestination = n(6366),
					t.parseLinkTitle = n(9677)
			}
			,
			6366: (e,t,n)=>{
					"use strict";
					var i = n(9086).unescapeAll;
					e.exports = function(e, t, n) {
							var r, o, s = t, a = {
									ok: !1,
									pos: 0,
									lines: 0,
									str: ""
							};
							if (60 === e.charCodeAt(t)) {
									for (t++; t < n; ) {
											if (10 === (r = e.charCodeAt(t)))
													return a;
											if (60 === r)
													return a;
											if (62 === r)
													return a.pos = t + 1,
													a.str = i(e.slice(s + 1, t)),
													a.ok = !0,
													a;
											92 === r && t + 1 < n ? t += 2 : t++
									}
									return a
							}
							for (o = 0; t < n && 32 !== (r = e.charCodeAt(t)) && !(r < 32 || 127 === r); )
									if (92 === r && t + 1 < n) {
											if (32 === e.charCodeAt(t + 1))
													break;
											t += 2
									} else {
											if (40 === r && ++o > 32)
													return a;
											if (41 === r) {
													if (0 === o)
															break;
													o--
											}
											t++
									}
							return s === t || 0 !== o || (a.str = i(e.slice(s, t)),
							a.lines = 0,
							a.pos = t,
							a.ok = !0),
							a
					}
			}
			,
			9347: e=>{
					"use strict";
					e.exports = function(e, t, n) {
							var i, r, o, s, a = -1, l = e.posMax, c = e.pos;
							for (e.pos = t + 1,
							i = 1; e.pos < l; ) {
									if (93 === (o = e.src.charCodeAt(e.pos)) && 0 === --i) {
											r = !0;
											break
									}
									if (s = e.pos,
									e.md.inline.skipToken(e),
									91 === o)
											if (s === e.pos - 1)
													i++;
											else if (n)
													return e.pos = c,
													-1
							}
							return r && (a = e.pos),
							e.pos = c,
							a
					}
			}
			,
			9677: (e,t,n)=>{
					"use strict";
					var i = n(9086).unescapeAll;
					e.exports = function(e, t, n) {
							var r, o, s = 0, a = t, l = {
									ok: !1,
									pos: 0,
									lines: 0,
									str: ""
							};
							if (t >= n)
									return l;
							if (34 !== (o = e.charCodeAt(t)) && 39 !== o && 40 !== o)
									return l;
							for (t++,
							40 === o && (o = 41); t < n; ) {
									if ((r = e.charCodeAt(t)) === o)
											return l.pos = t + 1,
											l.lines = s,
											l.str = i(e.slice(a + 1, t)),
											l.ok = !0,
											l;
									if (40 === r && 41 === o)
											return l;
									10 === r ? s++ : 92 === r && t + 1 < n && (t++,
									10 === e.charCodeAt(t) && s++),
									t++
							}
							return l
					}
			}
			,
			506: (e,t,n)=>{
					"use strict";
					var i = n(9086)
						, r = n(9699)
						, o = n(3726)
						, s = n(7645)
						, a = n(9567)
						, l = n(8218)
						, c = n(7423)
						, d = n(3771)
						, p = n(2322)
						, u = {
							default: n(8376),
							zero: n(4105),
							commonmark: n(6874)
					}
						, h = /^(vbscript|javascript|file|data):/
						, m = /^data:image\/(gif|png|jpeg|webp);/;
					function validateLink(e) {
							var t = e.trim().toLowerCase();
							return !h.test(t) || !!m.test(t)
					}
					var g = ["http:", "https:", "mailto:"];
					function normalizeLink(e) {
							var t = d.parse(e, !0);
							if (t.hostname && (!t.protocol || g.indexOf(t.protocol) >= 0))
									try {
											t.hostname = p.toASCII(t.hostname)
									} catch (e) {}
							return d.encode(d.format(t))
					}
					function normalizeLinkText(e) {
							var t = d.parse(e, !0);
							if (t.hostname && (!t.protocol || g.indexOf(t.protocol) >= 0))
									try {
											t.hostname = p.toUnicode(t.hostname)
									} catch (e) {}
							return d.decode(d.format(t), d.decode.defaultChars + "%")
					}
					function MarkdownIt(e, t) {
							if (!(this instanceof MarkdownIt))
									return new MarkdownIt(e,t);
							t || i.isString(e) || (t = e || {},
							e = "default"),
							this.inline = new l,
							this.block = new a,
							this.core = new s,
							this.renderer = new o,
							this.linkify = new c,
							this.validateLink = validateLink,
							this.normalizeLink = normalizeLink,
							this.normalizeLinkText = normalizeLinkText,
							this.utils = i,
							this.helpers = i.assign({}, r),
							this.options = {},
							this.configure(e),
							t && this.set(t)
					}
					MarkdownIt.prototype.set = function(e) {
							return i.assign(this.options, e),
							this
					}
					,
					MarkdownIt.prototype.configure = function(e) {
							var t, n = this;
							if (i.isString(e) && !(e = u[t = e]))
									throw new Error('Wrong `markdown-it` preset "' + t + '", check name');
							if (!e)
									throw new Error("Wrong `markdown-it` preset, can't be empty");
							return e.options && n.set(e.options),
							e.components && Object.keys(e.components).forEach((function(t) {
									e.components[t].rules && n[t].ruler.enableOnly(e.components[t].rules),
									e.components[t].rules2 && n[t].ruler2.enableOnly(e.components[t].rules2)
							}
							)),
							this
					}
					,
					MarkdownIt.prototype.enable = function(e, t) {
							var n = [];
							Array.isArray(e) || (e = [e]),
							["core", "block", "inline"].forEach((function(t) {
									n = n.concat(this[t].ruler.enable(e, !0))
							}
							), this),
							n = n.concat(this.inline.ruler2.enable(e, !0));
							var i = e.filter((function(e) {
									return n.indexOf(e) < 0
							}
							));
							if (i.length && !t)
									throw new Error("MarkdownIt. Failed to enable unknown rule(s): " + i);
							return this
					}
					,
					MarkdownIt.prototype.disable = function(e, t) {
							var n = [];
							Array.isArray(e) || (e = [e]),
							["core", "block", "inline"].forEach((function(t) {
									n = n.concat(this[t].ruler.disable(e, !0))
							}
							), this),
							n = n.concat(this.inline.ruler2.disable(e, !0));
							var i = e.filter((function(e) {
									return n.indexOf(e) < 0
							}
							));
							if (i.length && !t)
									throw new Error("MarkdownIt. Failed to disable unknown rule(s): " + i);
							return this
					}
					,
					MarkdownIt.prototype.use = function(e) {
							var t = [this].concat(Array.prototype.slice.call(arguments, 1));
							return e.apply(e, t),
							this
					}
					,
					MarkdownIt.prototype.parse = function(e, t) {
							if ("string" != typeof e)
									throw new Error("Input data should be a String");
							var n = new this.core.State(e,this,t);
							return this.core.process(n),
							n.tokens
					}
					,
					MarkdownIt.prototype.render = function(e, t) {
							return t = t || {},
							this.renderer.render(this.parse(e, t), this.options, t)
					}
					,
					MarkdownIt.prototype.parseInline = function(e, t) {
							var n = new this.core.State(e,this,t);
							return n.inlineMode = !0,
							this.core.process(n),
							n.tokens
					}
					,
					MarkdownIt.prototype.renderInline = function(e, t) {
							return t = t || {},
							this.renderer.render(this.parseInline(e, t), this.options, t)
					}
					,
					e.exports = MarkdownIt
			}
			,
			9567: (e,t,n)=>{
					"use strict";
					var i = n(5991)
						, r = [["table", n(2674), ["paragraph", "reference"]], ["code", n(7935)], ["fence", n(9346), ["paragraph", "reference", "blockquote", "list"]], ["blockquote", n(2048), ["paragraph", "reference", "blockquote", "list"]], ["hr", n(791), ["paragraph", "reference", "blockquote", "list"]], ["list", n(1937), ["paragraph", "reference", "blockquote"]], ["reference", n(8543)], ["html_block", n(4224), ["paragraph", "reference", "blockquote"]], ["heading", n(284), ["paragraph", "reference", "blockquote"]], ["lheading", n(1084)], ["paragraph", n(3097)]];
					function ParserBlock() {
							this.ruler = new i;
							for (var e = 0; e < r.length; e++)
									this.ruler.push(r[e][0], r[e][1], {
											alt: (r[e][2] || []).slice()
									})
					}
					ParserBlock.prototype.tokenize = function(e, t, n) {
							for (var i, r = this.ruler.getRules(""), o = r.length, s = t, a = !1, l = e.md.options.maxNesting; s < n && (e.line = s = e.skipEmptyLines(s),
							!(s >= n)) && !(e.sCount[s] < e.blkIndent); ) {
									if (e.level >= l) {
											e.line = n;
											break
									}
									for (i = 0; i < o && !r[i](e, s, n, !1); i++)
											;
									e.tight = !a,
									e.isEmpty(e.line - 1) && (a = !0),
									(s = e.line) < n && e.isEmpty(s) && (a = !0,
									s++,
									e.line = s)
							}
					}
					,
					ParserBlock.prototype.parse = function(e, t, n, i) {
							var r;
							e && (r = new this.State(e,t,n,i),
							this.tokenize(r, r.line, r.lineMax))
					}
					,
					ParserBlock.prototype.State = n(9562),
					e.exports = ParserBlock
			}
			,
			7645: (e,t,n)=>{
					"use strict";
					var i = n(5991)
						, r = [["normalize", n(3285)], ["block", n(5185)], ["inline", n(4420)], ["linkify", n(2716)], ["replacements", n(5643)], ["smartquotes", n(3859)], ["text_join", n(1418)]];
					function Core() {
							this.ruler = new i;
							for (var e = 0; e < r.length; e++)
									this.ruler.push(r[e][0], r[e][1])
					}
					Core.prototype.process = function(e) {
							var t, n, i;
							for (t = 0,
							n = (i = this.ruler.getRules("")).length; t < n; t++)
									i[t](e)
					}
					,
					Core.prototype.State = n(5748),
					e.exports = Core
			}
			,
			8218: (e,t,n)=>{
					"use strict";
					var i = n(5991)
						, r = [["text", n(9431)], ["linkify", n(2386)], ["newline", n(7014)], ["escape", n(5491)], ["backticks", n(1389)], ["strikethrough", n(1606).w], ["emphasis", n(9639).w], ["link", n(4771)], ["image", n(4506)], ["autolink", n(5837)], ["html_inline", n(6425)], ["entity", n(6277)]]
						, o = [["balance_pairs", n(1503)], ["strikethrough", n(1606).g], ["emphasis", n(9639).g], ["fragments_join", n(1305)]];
					function ParserInline() {
							var e;
							for (this.ruler = new i,
							e = 0; e < r.length; e++)
									this.ruler.push(r[e][0], r[e][1]);
							for (this.ruler2 = new i,
							e = 0; e < o.length; e++)
									this.ruler2.push(o[e][0], o[e][1])
					}
					ParserInline.prototype.skipToken = function(e) {
							var t, n, i = e.pos, r = this.ruler.getRules(""), o = r.length, s = e.md.options.maxNesting, a = e.cache;
							if (void 0 === a[i]) {
									if (e.level < s)
											for (n = 0; n < o && (e.level++,
											t = r[n](e, !0),
											e.level--,
											!t); n++)
													;
									else
											e.pos = e.posMax;
									t || e.pos++,
									a[i] = e.pos
							} else
									e.pos = a[i]
					}
					,
					ParserInline.prototype.tokenize = function(e) {
							for (var t, n, i = this.ruler.getRules(""), r = i.length, o = e.posMax, s = e.md.options.maxNesting; e.pos < o; ) {
									if (e.level < s)
											for (n = 0; n < r && !(t = i[n](e, !1)); n++)
													;
									if (t) {
											if (e.pos >= o)
													break
									} else
											e.pending += e.src[e.pos++]
							}
							e.pending && e.pushPending()
					}
					,
					ParserInline.prototype.parse = function(e, t, n, i) {
							var r, o, s, a = new this.State(e,t,n,i);
							for (this.tokenize(a),
							s = (o = this.ruler2.getRules("")).length,
							r = 0; r < s; r++)
									o[r](a)
					}
					,
					ParserInline.prototype.State = n(5793),
					e.exports = ParserInline
			}
			,
			6874: e=>{
					"use strict";
					e.exports = {
							options: {
									html: !0,
									xhtmlOut: !0,
									breaks: !1,
									langPrefix: "language-",
									linkify: !1,
									typographer: !1,
									quotes: "“”‘’",
									highlight: null,
									maxNesting: 20
							},
							components: {
									core: {
											rules: ["normalize", "block", "inline", "text_join"]
									},
									block: {
											rules: ["blockquote", "code", "fence", "heading", "hr", "html_block", "lheading", "list", "reference", "paragraph"]
									},
									inline: {
											rules: ["autolink", "backticks", "emphasis", "entity", "escape", "html_inline", "image", "link", "newline", "text"],
											rules2: ["balance_pairs", "emphasis", "fragments_join"]
									}
							}
					}
			}
			,
			8376: e=>{
					"use strict";
					e.exports = {
							options: {
									html: !1,
									xhtmlOut: !1,
									breaks: !1,
									langPrefix: "language-",
									linkify: !1,
									typographer: !1,
									quotes: "“”‘’",
									highlight: null,
									maxNesting: 100
							},
							components: {
									core: {},
									block: {},
									inline: {}
							}
					}
			}
			,
			4105: e=>{
					"use strict";
					e.exports = {
							options: {
									html: !1,
									xhtmlOut: !1,
									breaks: !1,
									langPrefix: "language-",
									linkify: !1,
									typographer: !1,
									quotes: "“”‘’",
									highlight: null,
									maxNesting: 20
							},
							components: {
									core: {
											rules: ["normalize", "block", "inline", "text_join"]
									},
									block: {
											rules: ["paragraph"]
									},
									inline: {
											rules: ["text"],
											rules2: ["balance_pairs", "fragments_join"]
									}
							}
					}
			}
			,
			3726: (e,t,n)=>{
					"use strict";
					var i = n(9086).assign
						, r = n(9086).unescapeAll
						, o = n(9086).escapeHtml
						, s = {};
					function Renderer() {
							this.rules = i({}, s)
					}
					s.code_inline = function(e, t, n, i, r) {
							var s = e[t];
							return "<code" + r.renderAttrs(s) + ">" + o(e[t].content) + "</code>"
					}
					,
					s.code_block = function(e, t, n, i, r) {
							var s = e[t];
							return "<pre" + r.renderAttrs(s) + "><code>" + o(e[t].content) + "</code></pre>\n"
					}
					,
					s.fence = function(e, t, n, i, s) {
							var a, l, c, d, p, u = e[t], h = u.info ? r(u.info).trim() : "", m = "", g = "";
							return h && (m = (c = h.split(/(\s+)/g))[0],
							g = c.slice(2).join("")),
							0 === (a = n.highlight && n.highlight(u.content, m, g) || o(u.content)).indexOf("<pre") ? a + "\n" : h ? (l = u.attrIndex("class"),
							d = u.attrs ? u.attrs.slice() : [],
							l < 0 ? d.push(["class", n.langPrefix + m]) : (d[l] = d[l].slice(),
							d[l][1] += " " + n.langPrefix + m),
							p = {
									attrs: d
							},
							"<pre><code" + s.renderAttrs(p) + ">" + a + "</code></pre>\n") : "<pre><code" + s.renderAttrs(u) + ">" + a + "</code></pre>\n"
					}
					,
					s.image = function(e, t, n, i, r) {
							var o = e[t];
							return o.attrs[o.attrIndex("alt")][1] = r.renderInlineAsText(o.children, n, i),
							r.renderToken(e, t, n)
					}
					,
					s.hardbreak = function(e, t, n) {
							return n.xhtmlOut ? "<br />\n" : "<br>\n"
					}
					,
					s.softbreak = function(e, t, n) {
							return n.breaks ? n.xhtmlOut ? "<br />\n" : "<br>\n" : "\n"
					}
					,
					s.text = function(e, t) {
							return o(e[t].content)
					}
					,
					s.html_block = function(e, t) {
							return e[t].content
					}
					,
					s.html_inline = function(e, t) {
							return e[t].content
					}
					,
					Renderer.prototype.renderAttrs = function(e) {
							var t, n, i;
							if (!e.attrs)
									return "";
							for (i = "",
							t = 0,
							n = e.attrs.length; t < n; t++)
									i += " " + o(e.attrs[t][0]) + '="' + o(e.attrs[t][1]) + '"';
							return i
					}
					,
					Renderer.prototype.renderToken = function(e, t, n) {
							var i, r = "", o = !1, s = e[t];
							return s.hidden ? "" : (s.block && -1 !== s.nesting && t && e[t - 1].hidden && (r += "\n"),
							r += (-1 === s.nesting ? "</" : "<") + s.tag,
							r += this.renderAttrs(s),
							0 === s.nesting && n.xhtmlOut && (r += " /"),
							s.block && (o = !0,
							1 === s.nesting && t + 1 < e.length && ("inline" === (i = e[t + 1]).type || i.hidden || -1 === i.nesting && i.tag === s.tag) && (o = !1)),
							r += o ? ">\n" : ">")
					}
					,
					Renderer.prototype.renderInline = function(e, t, n) {
							for (var i, r = "", o = this.rules, s = 0, a = e.length; s < a; s++)
									void 0 !== o[i = e[s].type] ? r += o[i](e, s, t, n, this) : r += this.renderToken(e, s, t);
							return r
					}
					,
					Renderer.prototype.renderInlineAsText = function(e, t, n) {
							for (var i = "", r = 0, o = e.length; r < o; r++)
									"text" === e[r].type ? i += e[r].content : "image" === e[r].type ? i += this.renderInlineAsText(e[r].children, t, n) : "softbreak" === e[r].type && (i += "\n");
							return i
					}
					,
					Renderer.prototype.render = function(e, t, n) {
							var i, r, o, s = "", a = this.rules;
							for (i = 0,
							r = e.length; i < r; i++)
									"inline" === (o = e[i].type) ? s += this.renderInline(e[i].children, t, n) : void 0 !== a[o] ? s += a[e[i].type](e, i, t, n, this) : s += this.renderToken(e, i, t, n);
							return s
					}
					,
					e.exports = Renderer
			}
			,
			5991: e=>{
					"use strict";
					function Ruler() {
							this.__rules__ = [],
							this.__cache__ = null
					}
					Ruler.prototype.__find__ = function(e) {
							for (var t = 0; t < this.__rules__.length; t++)
									if (this.__rules__[t].name === e)
											return t;
							return -1
					}
					,
					Ruler.prototype.__compile__ = function() {
							var e = this
								, t = [""];
							e.__rules__.forEach((function(e) {
									e.enabled && e.alt.forEach((function(e) {
											t.indexOf(e) < 0 && t.push(e)
									}
									))
							}
							)),
							e.__cache__ = {},
							t.forEach((function(t) {
									e.__cache__[t] = [],
									e.__rules__.forEach((function(n) {
											n.enabled && (t && n.alt.indexOf(t) < 0 || e.__cache__[t].push(n.fn))
									}
									))
							}
							))
					}
					,
					Ruler.prototype.at = function(e, t, n) {
							var i = this.__find__(e)
								, r = n || {};
							if (-1 === i)
									throw new Error("Parser rule not found: " + e);
							this.__rules__[i].fn = t,
							this.__rules__[i].alt = r.alt || [],
							this.__cache__ = null
					}
					,
					Ruler.prototype.before = function(e, t, n, i) {
							var r = this.__find__(e)
								, o = i || {};
							if (-1 === r)
									throw new Error("Parser rule not found: " + e);
							this.__rules__.splice(r, 0, {
									name: t,
									enabled: !0,
									fn: n,
									alt: o.alt || []
							}),
							this.__cache__ = null
					}
					,
					Ruler.prototype.after = function(e, t, n, i) {
							var r = this.__find__(e)
								, o = i || {};
							if (-1 === r)
									throw new Error("Parser rule not found: " + e);
							this.__rules__.splice(r + 1, 0, {
									name: t,
									enabled: !0,
									fn: n,
									alt: o.alt || []
							}),
							this.__cache__ = null
					}
					,
					Ruler.prototype.push = function(e, t, n) {
							var i = n || {};
							this.__rules__.push({
									name: e,
									enabled: !0,
									fn: t,
									alt: i.alt || []
							}),
							this.__cache__ = null
					}
					,
					Ruler.prototype.enable = function(e, t) {
							Array.isArray(e) || (e = [e]);
							var n = [];
							return e.forEach((function(e) {
									var i = this.__find__(e);
									if (i < 0) {
											if (t)
													return;
											throw new Error("Rules manager: invalid rule name " + e)
									}
									this.__rules__[i].enabled = !0,
									n.push(e)
							}
							), this),
							this.__cache__ = null,
							n
					}
					,
					Ruler.prototype.enableOnly = function(e, t) {
							Array.isArray(e) || (e = [e]),
							this.__rules__.forEach((function(e) {
									e.enabled = !1
							}
							)),
							this.enable(e, t)
					}
					,
					Ruler.prototype.disable = function(e, t) {
							Array.isArray(e) || (e = [e]);
							var n = [];
							return e.forEach((function(e) {
									var i = this.__find__(e);
									if (i < 0) {
											if (t)
													return;
											throw new Error("Rules manager: invalid rule name " + e)
									}
									this.__rules__[i].enabled = !1,
									n.push(e)
							}
							), this),
							this.__cache__ = null,
							n
					}
					,
					Ruler.prototype.getRules = function(e) {
							return null === this.__cache__ && this.__compile__(),
							this.__cache__[e] || []
					}
					,
					e.exports = Ruler
			}
			,
			2048: (e,t,n)=>{
					"use strict";
					var i = n(9086).isSpace;
					e.exports = function(e, t, n, r) {
							var o, s, a, l, c, d, p, u, h, m, g, _, f, y, v, b, S, C, E, T, I = e.lineMax, w = e.bMarks[t] + e.tShift[t], A = e.eMarks[t];
							if (e.sCount[t] - e.blkIndent >= 4)
									return !1;
							if (62 !== e.src.charCodeAt(w++))
									return !1;
							if (r)
									return !0;
							for (l = h = e.sCount[t] + 1,
							32 === e.src.charCodeAt(w) ? (w++,
							l++,
							h++,
							o = !1,
							b = !0) : 9 === e.src.charCodeAt(w) ? (b = !0,
							(e.bsCount[t] + h) % 4 == 3 ? (w++,
							l++,
							h++,
							o = !1) : o = !0) : b = !1,
							m = [e.bMarks[t]],
							e.bMarks[t] = w; w < A && (s = e.src.charCodeAt(w),
							i(s)); )
									9 === s ? h += 4 - (h + e.bsCount[t] + (o ? 1 : 0)) % 4 : h++,
									w++;
							for (g = [e.bsCount[t]],
							e.bsCount[t] = e.sCount[t] + 1 + (b ? 1 : 0),
							d = w >= A,
							y = [e.sCount[t]],
							e.sCount[t] = h - l,
							v = [e.tShift[t]],
							e.tShift[t] = w - e.bMarks[t],
							C = e.md.block.ruler.getRules("blockquote"),
							f = e.parentType,
							e.parentType = "blockquote",
							u = t + 1; u < n && (T = e.sCount[u] < e.blkIndent,
							!((w = e.bMarks[u] + e.tShift[u]) >= (A = e.eMarks[u]))); u++)
									if (62 !== e.src.charCodeAt(w++) || T) {
											if (d)
													break;
											for (S = !1,
											a = 0,
											c = C.length; a < c; a++)
													if (C[a](e, u, n, !0)) {
															S = !0;
															break
													}
											if (S) {
													e.lineMax = u,
													0 !== e.blkIndent && (m.push(e.bMarks[u]),
													g.push(e.bsCount[u]),
													v.push(e.tShift[u]),
													y.push(e.sCount[u]),
													e.sCount[u] -= e.blkIndent);
													break
											}
											m.push(e.bMarks[u]),
											g.push(e.bsCount[u]),
											v.push(e.tShift[u]),
											y.push(e.sCount[u]),
											e.sCount[u] = -1
									} else {
											for (l = h = e.sCount[u] + 1,
											32 === e.src.charCodeAt(w) ? (w++,
											l++,
											h++,
											o = !1,
											b = !0) : 9 === e.src.charCodeAt(w) ? (b = !0,
											(e.bsCount[u] + h) % 4 == 3 ? (w++,
											l++,
											h++,
											o = !1) : o = !0) : b = !1,
											m.push(e.bMarks[u]),
											e.bMarks[u] = w; w < A && (s = e.src.charCodeAt(w),
											i(s)); )
													9 === s ? h += 4 - (h + e.bsCount[u] + (o ? 1 : 0)) % 4 : h++,
													w++;
											d = w >= A,
											g.push(e.bsCount[u]),
											e.bsCount[u] = e.sCount[u] + 1 + (b ? 1 : 0),
											y.push(e.sCount[u]),
											e.sCount[u] = h - l,
											v.push(e.tShift[u]),
											e.tShift[u] = w - e.bMarks[u]
									}
							for (_ = e.blkIndent,
							e.blkIndent = 0,
							(E = e.push("blockquote_open", "blockquote", 1)).markup = ">",
							E.map = p = [t, 0],
							e.md.block.tokenize(e, t, u),
							(E = e.push("blockquote_close", "blockquote", -1)).markup = ">",
							e.lineMax = I,
							e.parentType = f,
							p[1] = e.line,
							a = 0; a < v.length; a++)
									e.bMarks[a + t] = m[a],
									e.tShift[a + t] = v[a],
									e.sCount[a + t] = y[a],
									e.bsCount[a + t] = g[a];
							return e.blkIndent = _,
							!0
					}
			}
			,
			7935: e=>{
					"use strict";
					e.exports = function(e, t, n) {
							var i, r, o;
							if (e.sCount[t] - e.blkIndent < 4)
									return !1;
							for (r = i = t + 1; i < n; )
									if (e.isEmpty(i))
											i++;
									else {
											if (!(e.sCount[i] - e.blkIndent >= 4))
													break;
											r = ++i
									}
							return e.line = r,
							(o = e.push("code_block", "code", 0)).content = e.getLines(t, r, 4 + e.blkIndent, !1) + "\n",
							o.map = [t, e.line],
							!0
					}
			}
			,
			9346: e=>{
					"use strict";
					e.exports = function(e, t, n, i) {
							var r, o, s, a, l, c, d, p = !1, u = e.bMarks[t] + e.tShift[t], h = e.eMarks[t];
							if (e.sCount[t] - e.blkIndent >= 4)
									return !1;
							if (u + 3 > h)
									return !1;
							if (126 !== (r = e.src.charCodeAt(u)) && 96 !== r)
									return !1;
							if (l = u,
							(o = (u = e.skipChars(u, r)) - l) < 3)
									return !1;
							if (d = e.src.slice(l, u),
							s = e.src.slice(u, h),
							96 === r && s.indexOf(String.fromCharCode(r)) >= 0)
									return !1;
							if (i)
									return !0;
							for (a = t; !(++a >= n) && !((u = l = e.bMarks[a] + e.tShift[a]) < (h = e.eMarks[a]) && e.sCount[a] < e.blkIndent); )
									if (e.src.charCodeAt(u) === r && !(e.sCount[a] - e.blkIndent >= 4 || (u = e.skipChars(u, r)) - l < o || (u = e.skipSpaces(u)) < h)) {
											p = !0;
											break
									}
							return o = e.sCount[t],
							e.line = a + (p ? 1 : 0),
							(c = e.push("fence", "code", 0)).info = s,
							c.content = e.getLines(t + 1, a, o, !0),
							c.markup = d,
							c.map = [t, e.line],
							!0
					}
			}
			,
			284: (e,t,n)=>{
					"use strict";
					var i = n(9086).isSpace;
					e.exports = function(e, t, n, r) {
							var o, s, a, l, c = e.bMarks[t] + e.tShift[t], d = e.eMarks[t];
							if (e.sCount[t] - e.blkIndent >= 4)
									return !1;
							if (35 !== (o = e.src.charCodeAt(c)) || c >= d)
									return !1;
							for (s = 1,
							o = e.src.charCodeAt(++c); 35 === o && c < d && s <= 6; )
									s++,
									o = e.src.charCodeAt(++c);
							return !(s > 6 || c < d && !i(o)) && (r || (d = e.skipSpacesBack(d, c),
							(a = e.skipCharsBack(d, 35, c)) > c && i(e.src.charCodeAt(a - 1)) && (d = a),
							e.line = t + 1,
							(l = e.push("heading_open", "h" + String(s), 1)).markup = "########".slice(0, s),
							l.map = [t, e.line],
							(l = e.push("inline", "", 0)).content = e.src.slice(c, d).trim(),
							l.map = [t, e.line],
							l.children = [],
							(l = e.push("heading_close", "h" + String(s), -1)).markup = "########".slice(0, s)),
							!0)
					}
			}
			,
			791: (e,t,n)=>{
					"use strict";
					var i = n(9086).isSpace;
					e.exports = function(e, t, n, r) {
							var o, s, a, l, c = e.bMarks[t] + e.tShift[t], d = e.eMarks[t];
							if (e.sCount[t] - e.blkIndent >= 4)
									return !1;
							if (42 !== (o = e.src.charCodeAt(c++)) && 45 !== o && 95 !== o)
									return !1;
							for (s = 1; c < d; ) {
									if ((a = e.src.charCodeAt(c++)) !== o && !i(a))
											return !1;
									a === o && s++
							}
							return !(s < 3) && (r || (e.line = t + 1,
							(l = e.push("hr", "hr", 0)).map = [t, e.line],
							l.markup = Array(s + 1).join(String.fromCharCode(o))),
							!0)
					}
			}
			,
			4224: (e,t,n)=>{
					"use strict";
					var i = n(9606)
						, r = n(8247).q
						, o = [[/^<(script|pre|style|textarea)(?=(\s|>|$))/i, /<\/(script|pre|style|textarea)>/i, !0], [/^<!--/, /-->/, !0], [/^<\?/, /\?>/, !0], [/^<![A-Z]/, />/, !0], [/^<!\[CDATA\[/, /\]\]>/, !0], [new RegExp("^</?(" + i.join("|") + ")(?=(\\s|/?>|$))","i"), /^$/, !0], [new RegExp(r.source + "\\s*$"), /^$/, !1]];
					e.exports = function(e, t, n, i) {
							var r, s, a, l, c = e.bMarks[t] + e.tShift[t], d = e.eMarks[t];
							if (e.sCount[t] - e.blkIndent >= 4)
									return !1;
							if (!e.md.options.html)
									return !1;
							if (60 !== e.src.charCodeAt(c))
									return !1;
							for (l = e.src.slice(c, d),
							r = 0; r < o.length && !o[r][0].test(l); r++)
									;
							if (r === o.length)
									return !1;
							if (i)
									return o[r][2];
							if (s = t + 1,
							!o[r][1].test(l))
									for (; s < n && !(e.sCount[s] < e.blkIndent); s++)
											if (c = e.bMarks[s] + e.tShift[s],
											d = e.eMarks[s],
											l = e.src.slice(c, d),
											o[r][1].test(l)) {
													0 !== l.length && s++;
													break
											}
							return e.line = s,
							(a = e.push("html_block", "", 0)).map = [t, s],
							a.content = e.getLines(t, s, e.blkIndent, !0),
							!0
					}
			}
			,
			1084: e=>{
					"use strict";
					e.exports = function(e, t, n) {
							var i, r, o, s, a, l, c, d, p, u, h = t + 1, m = e.md.block.ruler.getRules("paragraph");
							if (e.sCount[t] - e.blkIndent >= 4)
									return !1;
							for (u = e.parentType,
							e.parentType = "paragraph"; h < n && !e.isEmpty(h); h++)
									if (!(e.sCount[h] - e.blkIndent > 3)) {
											if (e.sCount[h] >= e.blkIndent && (l = e.bMarks[h] + e.tShift[h]) < (c = e.eMarks[h]) && (45 === (p = e.src.charCodeAt(l)) || 61 === p) && (l = e.skipChars(l, p),
											(l = e.skipSpaces(l)) >= c)) {
													d = 61 === p ? 1 : 2;
													break
											}
											if (!(e.sCount[h] < 0)) {
													for (r = !1,
													o = 0,
													s = m.length; o < s; o++)
															if (m[o](e, h, n, !0)) {
																	r = !0;
																	break
															}
													if (r)
															break
											}
									}
							return !!d && (i = e.getLines(t, h, e.blkIndent, !1).trim(),
							e.line = h + 1,
							(a = e.push("heading_open", "h" + String(d), 1)).markup = String.fromCharCode(p),
							a.map = [t, e.line],
							(a = e.push("inline", "", 0)).content = i,
							a.map = [t, e.line - 1],
							a.children = [],
							(a = e.push("heading_close", "h" + String(d), -1)).markup = String.fromCharCode(p),
							e.parentType = u,
							!0)
					}
			}
			,
			1937: (e,t,n)=>{
					"use strict";
					var i = n(9086).isSpace;
					function skipBulletListMarker(e, t) {
							var n, r, o, s;
							return r = e.bMarks[t] + e.tShift[t],
							o = e.eMarks[t],
							42 !== (n = e.src.charCodeAt(r++)) && 45 !== n && 43 !== n || r < o && (s = e.src.charCodeAt(r),
							!i(s)) ? -1 : r
					}
					function skipOrderedListMarker(e, t) {
							var n, r = e.bMarks[t] + e.tShift[t], o = r, s = e.eMarks[t];
							if (o + 1 >= s)
									return -1;
							if ((n = e.src.charCodeAt(o++)) < 48 || n > 57)
									return -1;
							for (; ; ) {
									if (o >= s)
											return -1;
									if (!((n = e.src.charCodeAt(o++)) >= 48 && n <= 57)) {
											if (41 === n || 46 === n)
													break;
											return -1
									}
									if (o - r >= 10)
											return -1
							}
							return o < s && (n = e.src.charCodeAt(o),
							!i(n)) ? -1 : o
					}
					e.exports = function(e, t, n, i) {
							var r, o, s, a, l, c, d, p, u, h, m, g, _, f, y, v, b, S, C, E, T, I, w, A, R, x, O, N, P = !1, D = !0;
							if (e.sCount[t] - e.blkIndent >= 4)
									return !1;
							if (e.listIndent >= 0 && e.sCount[t] - e.listIndent >= 4 && e.sCount[t] < e.blkIndent)
									return !1;
							if (i && "paragraph" === e.parentType && e.sCount[t] >= e.blkIndent && (P = !0),
							(w = skipOrderedListMarker(e, t)) >= 0) {
									if (d = !0,
									R = e.bMarks[t] + e.tShift[t],
									_ = Number(e.src.slice(R, w - 1)),
									P && 1 !== _)
											return !1
							} else {
									if (!((w = skipBulletListMarker(e, t)) >= 0))
											return !1;
									d = !1
							}
							if (P && e.skipSpaces(w) >= e.eMarks[t])
									return !1;
							if (g = e.src.charCodeAt(w - 1),
							i)
									return !0;
							for (m = e.tokens.length,
							d ? (N = e.push("ordered_list_open", "ol", 1),
							1 !== _ && (N.attrs = [["start", _]])) : N = e.push("bullet_list_open", "ul", 1),
							N.map = h = [t, 0],
							N.markup = String.fromCharCode(g),
							y = t,
							A = !1,
							O = e.md.block.ruler.getRules("list"),
							S = e.parentType,
							e.parentType = "list"; y < n; ) {
									for (I = w,
									f = e.eMarks[y],
									c = v = e.sCount[y] + w - (e.bMarks[t] + e.tShift[t]); I < f; ) {
											if (9 === (r = e.src.charCodeAt(I)))
													v += 4 - (v + e.bsCount[y]) % 4;
											else {
													if (32 !== r)
															break;
													v++
											}
											I++
									}
									if ((l = (o = I) >= f ? 1 : v - c) > 4 && (l = 1),
									a = c + l,
									(N = e.push("list_item_open", "li", 1)).markup = String.fromCharCode(g),
									N.map = p = [t, 0],
									d && (N.info = e.src.slice(R, w - 1)),
									T = e.tight,
									E = e.tShift[t],
									C = e.sCount[t],
									b = e.listIndent,
									e.listIndent = e.blkIndent,
									e.blkIndent = a,
									e.tight = !0,
									e.tShift[t] = o - e.bMarks[t],
									e.sCount[t] = v,
									o >= f && e.isEmpty(t + 1) ? e.line = Math.min(e.line + 2, n) : e.md.block.tokenize(e, t, n, !0),
									e.tight && !A || (D = !1),
									A = e.line - t > 1 && e.isEmpty(e.line - 1),
									e.blkIndent = e.listIndent,
									e.listIndent = b,
									e.tShift[t] = E,
									e.sCount[t] = C,
									e.tight = T,
									(N = e.push("list_item_close", "li", -1)).markup = String.fromCharCode(g),
									y = t = e.line,
									p[1] = y,
									o = e.bMarks[t],
									y >= n)
											break;
									if (e.sCount[y] < e.blkIndent)
											break;
									if (e.sCount[t] - e.blkIndent >= 4)
											break;
									for (x = !1,
									s = 0,
									u = O.length; s < u; s++)
											if (O[s](e, y, n, !0)) {
													x = !0;
													break
											}
									if (x)
											break;
									if (d) {
											if ((w = skipOrderedListMarker(e, y)) < 0)
													break;
											R = e.bMarks[y] + e.tShift[y]
									} else if ((w = skipBulletListMarker(e, y)) < 0)
											break;
									if (g !== e.src.charCodeAt(w - 1))
											break
							}
							return (N = d ? e.push("ordered_list_close", "ol", -1) : e.push("bullet_list_close", "ul", -1)).markup = String.fromCharCode(g),
							h[1] = y,
							e.line = y,
							e.parentType = S,
							D && function(e, t) {
									var n, i, r = e.level + 2;
									for (n = t + 2,
									i = e.tokens.length - 2; n < i; n++)
											e.tokens[n].level === r && "paragraph_open" === e.tokens[n].type && (e.tokens[n + 2].hidden = !0,
											e.tokens[n].hidden = !0,
											n += 2)
							}(e, m),
							!0
					}
			}
			,
			3097: e=>{
					"use strict";
					e.exports = function(e, t) {
							var n, i, r, o, s, a, l = t + 1, c = e.md.block.ruler.getRules("paragraph"), d = e.lineMax;
							for (a = e.parentType,
							e.parentType = "paragraph"; l < d && !e.isEmpty(l); l++)
									if (!(e.sCount[l] - e.blkIndent > 3 || e.sCount[l] < 0)) {
											for (i = !1,
											r = 0,
											o = c.length; r < o; r++)
													if (c[r](e, l, d, !0)) {
															i = !0;
															break
													}
											if (i)
													break
									}
							return n = e.getLines(t, l, e.blkIndent, !1).trim(),
							e.line = l,
							(s = e.push("paragraph_open", "p", 1)).map = [t, e.line],
							(s = e.push("inline", "", 0)).content = n,
							s.map = [t, e.line],
							s.children = [],
							s = e.push("paragraph_close", "p", -1),
							e.parentType = a,
							!0
					}
			}
			,
			8543: (e,t,n)=>{
					"use strict";
					var i = n(9086).normalizeReference
						, r = n(9086).isSpace;
					e.exports = function(e, t, n, o) {
							var s, a, l, c, d, p, u, h, m, g, _, f, y, v, b, S, C = 0, E = e.bMarks[t] + e.tShift[t], T = e.eMarks[t], I = t + 1;
							if (e.sCount[t] - e.blkIndent >= 4)
									return !1;
							if (91 !== e.src.charCodeAt(E))
									return !1;
							for (; ++E < T; )
									if (93 === e.src.charCodeAt(E) && 92 !== e.src.charCodeAt(E - 1)) {
											if (E + 1 === T)
													return !1;
											if (58 !== e.src.charCodeAt(E + 1))
													return !1;
											break
									}
							for (c = e.lineMax,
							b = e.md.block.ruler.getRules("reference"),
							g = e.parentType,
							e.parentType = "reference"; I < c && !e.isEmpty(I); I++)
									if (!(e.sCount[I] - e.blkIndent > 3 || e.sCount[I] < 0)) {
											for (v = !1,
											p = 0,
											u = b.length; p < u; p++)
													if (b[p](e, I, c, !0)) {
															v = !0;
															break
													}
											if (v)
													break
									}
							for (T = (y = e.getLines(t, I, e.blkIndent, !1).trim()).length,
							E = 1; E < T; E++) {
									if (91 === (s = y.charCodeAt(E)))
											return !1;
									if (93 === s) {
											m = E;
											break
									}
									(10 === s || 92 === s && ++E < T && 10 === y.charCodeAt(E)) && C++
							}
							if (m < 0 || 58 !== y.charCodeAt(m + 1))
									return !1;
							for (E = m + 2; E < T; E++)
									if (10 === (s = y.charCodeAt(E)))
											C++;
									else if (!r(s))
											break;
							if (!(_ = e.md.helpers.parseLinkDestination(y, E, T)).ok)
									return !1;
							if (d = e.md.normalizeLink(_.str),
							!e.md.validateLink(d))
									return !1;
							for (a = E = _.pos,
							l = C += _.lines,
							f = E; E < T; E++)
									if (10 === (s = y.charCodeAt(E)))
											C++;
									else if (!r(s))
											break;
							for (_ = e.md.helpers.parseLinkTitle(y, E, T),
							E < T && f !== E && _.ok ? (S = _.str,
							E = _.pos,
							C += _.lines) : (S = "",
							E = a,
							C = l); E < T && (s = y.charCodeAt(E),
							r(s)); )
									E++;
							if (E < T && 10 !== y.charCodeAt(E) && S)
									for (S = "",
									E = a,
									C = l; E < T && (s = y.charCodeAt(E),
									r(s)); )
											E++;
							return !(E < T && 10 !== y.charCodeAt(E)) && (!!(h = i(y.slice(1, m))) && (o || (void 0 === e.env.references && (e.env.references = {}),
							void 0 === e.env.references[h] && (e.env.references[h] = {
									title: S,
									href: d
							}),
							e.parentType = g,
							e.line = t + C + 1),
							!0))
					}
			}
			,
			9562: (e,t,n)=>{
					"use strict";
					var i = n(8843)
						, r = n(9086).isSpace;
					function StateBlock(e, t, n, i) {
							var o, s, a, l, c, d, p, u;
							for (this.src = e,
							this.md = t,
							this.env = n,
							this.tokens = i,
							this.bMarks = [],
							this.eMarks = [],
							this.tShift = [],
							this.sCount = [],
							this.bsCount = [],
							this.blkIndent = 0,
							this.line = 0,
							this.lineMax = 0,
							this.tight = !1,
							this.ddIndent = -1,
							this.listIndent = -1,
							this.parentType = "root",
							this.level = 0,
							this.result = "",
							u = !1,
							a = l = d = p = 0,
							c = (s = this.src).length; l < c; l++) {
									if (o = s.charCodeAt(l),
									!u) {
											if (r(o)) {
													d++,
													9 === o ? p += 4 - p % 4 : p++;
													continue
											}
											u = !0
									}
									10 !== o && l !== c - 1 || (10 !== o && l++,
									this.bMarks.push(a),
									this.eMarks.push(l),
									this.tShift.push(d),
									this.sCount.push(p),
									this.bsCount.push(0),
									u = !1,
									d = 0,
									p = 0,
									a = l + 1)
							}
							this.bMarks.push(s.length),
							this.eMarks.push(s.length),
							this.tShift.push(0),
							this.sCount.push(0),
							this.bsCount.push(0),
							this.lineMax = this.bMarks.length - 1
					}
					StateBlock.prototype.push = function(e, t, n) {
							var r = new i(e,t,n);
							return r.block = !0,
							n < 0 && this.level--,
							r.level = this.level,
							n > 0 && this.level++,
							this.tokens.push(r),
							r
					}
					,
					StateBlock.prototype.isEmpty = function(e) {
							return this.bMarks[e] + this.tShift[e] >= this.eMarks[e]
					}
					,
					StateBlock.prototype.skipEmptyLines = function(e) {
							for (var t = this.lineMax; e < t && !(this.bMarks[e] + this.tShift[e] < this.eMarks[e]); e++)
									;
							return e
					}
					,
					StateBlock.prototype.skipSpaces = function(e) {
							for (var t, n = this.src.length; e < n && (t = this.src.charCodeAt(e),
							r(t)); e++)
									;
							return e
					}
					,
					StateBlock.prototype.skipSpacesBack = function(e, t) {
							if (e <= t)
									return e;
							for (; e > t; )
									if (!r(this.src.charCodeAt(--e)))
											return e + 1;
							return e
					}
					,
					StateBlock.prototype.skipChars = function(e, t) {
							for (var n = this.src.length; e < n && this.src.charCodeAt(e) === t; e++)
									;
							return e
					}
					,
					StateBlock.prototype.skipCharsBack = function(e, t, n) {
							if (e <= n)
									return e;
							for (; e > n; )
									if (t !== this.src.charCodeAt(--e))
											return e + 1;
							return e
					}
					,
					StateBlock.prototype.getLines = function(e, t, n, i) {
							var o, s, a, l, c, d, p, u = e;
							if (e >= t)
									return "";
							for (d = new Array(t - e),
							o = 0; u < t; u++,
							o++) {
									for (s = 0,
									p = l = this.bMarks[u],
									c = u + 1 < t || i ? this.eMarks[u] + 1 : this.eMarks[u]; l < c && s < n; ) {
											if (a = this.src.charCodeAt(l),
											r(a))
													9 === a ? s += 4 - (s + this.bsCount[u]) % 4 : s++;
											else {
													if (!(l - p < this.tShift[u]))
															break;
													s++
											}
											l++
									}
									d[o] = s > n ? new Array(s - n + 1).join(" ") + this.src.slice(l, c) : this.src.slice(l, c)
							}
							return d.join("")
					}
					,
					StateBlock.prototype.Token = i,
					e.exports = StateBlock
			}
			,
			2674: (e,t,n)=>{
					"use strict";
					var i = n(9086).isSpace;
					function getLine(e, t) {
							var n = e.bMarks[t] + e.tShift[t]
								, i = e.eMarks[t];
							return e.src.slice(n, i)
					}
					function escapedSplit(e) {
							var t, n = [], i = 0, r = e.length, o = !1, s = 0, a = "";
							for (t = e.charCodeAt(i); i < r; )
									124 === t && (o ? (a += e.substring(s, i - 1),
									s = i) : (n.push(a + e.substring(s, i)),
									a = "",
									s = i + 1)),
									o = 92 === t,
									i++,
									t = e.charCodeAt(i);
							return n.push(a + e.substring(s)),
							n
					}
					e.exports = function(e, t, n, r) {
							var o, s, a, l, c, d, p, u, h, m, g, _, f, y, v, b, S, C;
							if (t + 2 > n)
									return !1;
							if (d = t + 1,
							e.sCount[d] < e.blkIndent)
									return !1;
							if (e.sCount[d] - e.blkIndent >= 4)
									return !1;
							if ((a = e.bMarks[d] + e.tShift[d]) >= e.eMarks[d])
									return !1;
							if (124 !== (S = e.src.charCodeAt(a++)) && 45 !== S && 58 !== S)
									return !1;
							if (a >= e.eMarks[d])
									return !1;
							if (124 !== (C = e.src.charCodeAt(a++)) && 45 !== C && 58 !== C && !i(C))
									return !1;
							if (45 === S && i(C))
									return !1;
							for (; a < e.eMarks[d]; ) {
									if (124 !== (o = e.src.charCodeAt(a)) && 45 !== o && 58 !== o && !i(o))
											return !1;
									a++
							}
							for (p = (s = getLine(e, t + 1)).split("|"),
							m = [],
							l = 0; l < p.length; l++) {
									if (!(g = p[l].trim())) {
											if (0 === l || l === p.length - 1)
													continue;
											return !1
									}
									if (!/^:?-+:?$/.test(g))
											return !1;
									58 === g.charCodeAt(g.length - 1) ? m.push(58 === g.charCodeAt(0) ? "center" : "right") : 58 === g.charCodeAt(0) ? m.push("left") : m.push("")
							}
							if (-1 === (s = getLine(e, t).trim()).indexOf("|"))
									return !1;
							if (e.sCount[t] - e.blkIndent >= 4)
									return !1;
							if ((p = escapedSplit(s)).length && "" === p[0] && p.shift(),
							p.length && "" === p[p.length - 1] && p.pop(),
							0 === (u = p.length) || u !== m.length)
									return !1;
							if (r)
									return !0;
							for (y = e.parentType,
							e.parentType = "table",
							b = e.md.block.ruler.getRules("blockquote"),
							(h = e.push("table_open", "table", 1)).map = _ = [t, 0],
							(h = e.push("thead_open", "thead", 1)).map = [t, t + 1],
							(h = e.push("tr_open", "tr", 1)).map = [t, t + 1],
							l = 0; l < p.length; l++)
									h = e.push("th_open", "th", 1),
									m[l] && (h.attrs = [["style", "text-align:" + m[l]]]),
									(h = e.push("inline", "", 0)).content = p[l].trim(),
									h.children = [],
									h = e.push("th_close", "th", -1);
							for (h = e.push("tr_close", "tr", -1),
							h = e.push("thead_close", "thead", -1),
							d = t + 2; d < n && !(e.sCount[d] < e.blkIndent); d++) {
									for (v = !1,
									l = 0,
									c = b.length; l < c; l++)
											if (b[l](e, d, n, !0)) {
													v = !0;
													break
											}
									if (v)
											break;
									if (!(s = getLine(e, d).trim()))
											break;
									if (e.sCount[d] - e.blkIndent >= 4)
											break;
									for ((p = escapedSplit(s)).length && "" === p[0] && p.shift(),
									p.length && "" === p[p.length - 1] && p.pop(),
									d === t + 2 && ((h = e.push("tbody_open", "tbody", 1)).map = f = [t + 2, 0]),
									(h = e.push("tr_open", "tr", 1)).map = [d, d + 1],
									l = 0; l < u; l++)
											h = e.push("td_open", "td", 1),
											m[l] && (h.attrs = [["style", "text-align:" + m[l]]]),
											(h = e.push("inline", "", 0)).content = p[l] ? p[l].trim() : "",
											h.children = [],
											h = e.push("td_close", "td", -1);
									h = e.push("tr_close", "tr", -1)
							}
							return f && (h = e.push("tbody_close", "tbody", -1),
							f[1] = d),
							h = e.push("table_close", "table", -1),
							_[1] = d,
							e.parentType = y,
							e.line = d,
							!0
					}
			}
			,
			5185: e=>{
					"use strict";
					e.exports = function(e) {
							var t;
							e.inlineMode ? ((t = new e.Token("inline","",0)).content = e.src,
							t.map = [0, 1],
							t.children = [],
							e.tokens.push(t)) : e.md.block.parse(e.src, e.md, e.env, e.tokens)
					}
			}
			,
			4420: e=>{
					"use strict";
					e.exports = function(e) {
							var t, n, i, r = e.tokens;
							for (n = 0,
							i = r.length; n < i; n++)
									"inline" === (t = r[n]).type && e.md.inline.parse(t.content, e.md, e.env, t.children)
					}
			}
			,
			2716: (e,t,n)=>{
					"use strict";
					var i = n(9086).arrayReplaceAt;
					function isLinkClose(e) {
							return /^<\/a\s*>/i.test(e)
					}
					e.exports = function(e) {
							var t, n, r, o, s, a, l, c, d, p, u, h, m, g, _, f, y, v, b = e.tokens;
							if (e.md.options.linkify)
									for (n = 0,
									r = b.length; n < r; n++)
											if ("inline" === b[n].type && e.md.linkify.pretest(b[n].content))
													for (m = 0,
													t = (o = b[n].children).length - 1; t >= 0; t--)
															if ("link_close" !== (a = o[t]).type) {
																	if ("html_inline" === a.type && (v = a.content,
																	/^<a[>\s]/i.test(v) && m > 0 && m--,
																	isLinkClose(a.content) && m++),
																	!(m > 0) && "text" === a.type && e.md.linkify.test(a.content)) {
																			for (d = a.content,
																			y = e.md.linkify.match(d),
																			l = [],
																			h = a.level,
																			u = 0,
																			y.length > 0 && 0 === y[0].index && t > 0 && "text_special" === o[t - 1].type && (y = y.slice(1)),
																			c = 0; c < y.length; c++)
																					g = y[c].url,
																					_ = e.md.normalizeLink(g),
																					e.md.validateLink(_) && (f = y[c].text,
																					f = y[c].schema ? "mailto:" !== y[c].schema || /^mailto:/i.test(f) ? e.md.normalizeLinkText(f) : e.md.normalizeLinkText("mailto:" + f).replace(/^mailto:/, "") : e.md.normalizeLinkText("http://" + f).replace(/^http:\/\//, ""),
																					(p = y[c].index) > u && ((s = new e.Token("text","",0)).content = d.slice(u, p),
																					s.level = h,
																					l.push(s)),
																					(s = new e.Token("link_open","a",1)).attrs = [["href", _]],
																					s.level = h++,
																					s.markup = "linkify",
																					s.info = "auto",
																					l.push(s),
																					(s = new e.Token("text","",0)).content = f,
																					s.level = h,
																					l.push(s),
																					(s = new e.Token("link_close","a",-1)).level = --h,
																					s.markup = "linkify",
																					s.info = "auto",
																					l.push(s),
																					u = y[c].lastIndex);
																			u < d.length && ((s = new e.Token("text","",0)).content = d.slice(u),
																			s.level = h,
																			l.push(s)),
																			b[n].children = o = i(o, t, l)
																	}
															} else
																	for (t--; o[t].level !== a.level && "link_open" !== o[t].type; )
																			t--
					}
			}
			,
			3285: e=>{
					"use strict";
					var t = /\r\n?|\n/g
						, n = /\0/g;
					e.exports = function(e) {
							var i;
							i = (i = e.src.replace(t, "\n")).replace(n, "�"),
							e.src = i
					}
			}
			,
			5643: e=>{
					"use strict";
					var t = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/
						, n = /\((c|tm|r)\)/i
						, i = /\((c|tm|r)\)/gi
						, r = {
							c: "©",
							r: "®",
							tm: "™"
					};
					function replaceFn(e, t) {
							return r[t.toLowerCase()]
					}
					function replace_scoped(e) {
							var t, n, r = 0;
							for (t = e.length - 1; t >= 0; t--)
									"text" !== (n = e[t]).type || r || (n.content = n.content.replace(i, replaceFn)),
									"link_open" === n.type && "auto" === n.info && r--,
									"link_close" === n.type && "auto" === n.info && r++
					}
					function replace_rare(e) {
							var n, i, r = 0;
							for (n = e.length - 1; n >= 0; n--)
									"text" !== (i = e[n]).type || r || t.test(i.content) && (i.content = i.content.replace(/\+-/g, "±").replace(/\.{2,}/g, "…").replace(/([?!])…/g, "$1..").replace(/([?!]){4,}/g, "$1$1$1").replace(/,{2,}/g, ",").replace(/(^|[^-])---(?=[^-]|$)/gm, "$1—").replace(/(^|\s)--(?=\s|$)/gm, "$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/gm, "$1–")),
									"link_open" === i.type && "auto" === i.info && r--,
									"link_close" === i.type && "auto" === i.info && r++
					}
					e.exports = function(e) {
							var i;
							if (e.md.options.typographer)
									for (i = e.tokens.length - 1; i >= 0; i--)
											"inline" === e.tokens[i].type && (n.test(e.tokens[i].content) && replace_scoped(e.tokens[i].children),
											t.test(e.tokens[i].content) && replace_rare(e.tokens[i].children))
					}
			}
			,
			3859: (e,t,n)=>{
					"use strict";
					var i = n(9086).isWhiteSpace
						, r = n(9086).isPunctChar
						, o = n(9086).isMdAsciiPunct
						, s = /['"]/
						, a = /['"]/g;
					function replaceAt(e, t, n) {
							return e.slice(0, t) + n + e.slice(t + 1)
					}
					function process_inlines(e, t) {
							var n, s, l, c, d, p, u, h, m, g, _, f, y, v, b, S, C, E, T, I, w;
							for (T = [],
							n = 0; n < e.length; n++) {
									for (s = e[n],
									u = e[n].level,
									C = T.length - 1; C >= 0 && !(T[C].level <= u); C--)
											;
									if (T.length = C + 1,
									"text" === s.type) {
											d = 0,
											p = (l = s.content).length;
											e: for (; d < p && (a.lastIndex = d,
											c = a.exec(l)); ) {
													if (b = S = !0,
													d = c.index + 1,
													E = "'" === c[0],
													m = 32,
													c.index - 1 >= 0)
															m = l.charCodeAt(c.index - 1);
													else
															for (C = n - 1; C >= 0 && ("softbreak" !== e[C].type && "hardbreak" !== e[C].type); C--)
																	if (e[C].content) {
																			m = e[C].content.charCodeAt(e[C].content.length - 1);
																			break
																	}
													if (g = 32,
													d < p)
															g = l.charCodeAt(d);
													else
															for (C = n + 1; C < e.length && ("softbreak" !== e[C].type && "hardbreak" !== e[C].type); C++)
																	if (e[C].content) {
																			g = e[C].content.charCodeAt(0);
																			break
																	}
													if (_ = o(m) || r(String.fromCharCode(m)),
													f = o(g) || r(String.fromCharCode(g)),
													y = i(m),
													(v = i(g)) ? b = !1 : f && (y || _ || (b = !1)),
													y ? S = !1 : _ && (v || f || (S = !1)),
													34 === g && '"' === c[0] && m >= 48 && m <= 57 && (S = b = !1),
													b && S && (b = _,
													S = f),
													b || S) {
															if (S)
																	for (C = T.length - 1; C >= 0 && (h = T[C],
																	!(T[C].level < u)); C--)
																			if (h.single === E && T[C].level === u) {
																					h = T[C],
																					E ? (I = t.md.options.quotes[2],
																					w = t.md.options.quotes[3]) : (I = t.md.options.quotes[0],
																					w = t.md.options.quotes[1]),
																					s.content = replaceAt(s.content, c.index, w),
																					e[h.token].content = replaceAt(e[h.token].content, h.pos, I),
																					d += w.length - 1,
																					h.token === n && (d += I.length - 1),
																					p = (l = s.content).length,
																					T.length = C;
																					continue e
																			}
															b ? T.push({
																	token: n,
																	pos: c.index,
																	single: E,
																	level: u
															}) : S && E && (s.content = replaceAt(s.content, c.index, "’"))
													} else
															E && (s.content = replaceAt(s.content, c.index, "’"))
											}
									}
							}
					}
					e.exports = function(e) {
							var t;
							if (e.md.options.typographer)
									for (t = e.tokens.length - 1; t >= 0; t--)
											"inline" === e.tokens[t].type && s.test(e.tokens[t].content) && process_inlines(e.tokens[t].children, e)
					}
			}
			,
			5748: (e,t,n)=>{
					"use strict";
					var i = n(8843);
					function StateCore(e, t, n) {
							this.src = e,
							this.env = n,
							this.tokens = [],
							this.inlineMode = !1,
							this.md = t
					}
					StateCore.prototype.Token = i,
					e.exports = StateCore
			}
			,
			1418: e=>{
					"use strict";
					e.exports = function(e) {
							var t, n, i, r, o, s, a = e.tokens;
							for (t = 0,
							n = a.length; t < n; t++)
									if ("inline" === a[t].type) {
											for (o = (i = a[t].children).length,
											r = 0; r < o; r++)
													"text_special" === i[r].type && (i[r].type = "text");
											for (r = s = 0; r < o; r++)
													"text" === i[r].type && r + 1 < o && "text" === i[r + 1].type ? i[r + 1].content = i[r].content + i[r + 1].content : (r !== s && (i[s] = i[r]),
													s++);
											r !== s && (i.length = s)
									}
					}
			}
			,
			5837: e=>{
					"use strict";
					var t = /^([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/
						, n = /^([a-zA-Z][a-zA-Z0-9+.\-]{1,31}):([^<>\x00-\x20]*)$/;
					e.exports = function(e, i) {
							var r, o, s, a, l, c, d = e.pos;
							if (60 !== e.src.charCodeAt(d))
									return !1;
							for (l = e.pos,
							c = e.posMax; ; ) {
									if (++d >= c)
											return !1;
									if (60 === (a = e.src.charCodeAt(d)))
											return !1;
									if (62 === a)
											break
							}
							return r = e.src.slice(l + 1, d),
							n.test(r) ? (o = e.md.normalizeLink(r),
							!!e.md.validateLink(o) && (i || ((s = e.push("link_open", "a", 1)).attrs = [["href", o]],
							s.markup = "autolink",
							s.info = "auto",
							(s = e.push("text", "", 0)).content = e.md.normalizeLinkText(r),
							(s = e.push("link_close", "a", -1)).markup = "autolink",
							s.info = "auto"),
							e.pos += r.length + 2,
							!0)) : !!t.test(r) && (o = e.md.normalizeLink("mailto:" + r),
							!!e.md.validateLink(o) && (i || ((s = e.push("link_open", "a", 1)).attrs = [["href", o]],
							s.markup = "autolink",
							s.info = "auto",
							(s = e.push("text", "", 0)).content = e.md.normalizeLinkText(r),
							(s = e.push("link_close", "a", -1)).markup = "autolink",
							s.info = "auto"),
							e.pos += r.length + 2,
							!0))
					}
			}
			,
			1389: e=>{
					"use strict";
					e.exports = function(e, t) {
							var n, i, r, o, s, a, l, c, d = e.pos;
							if (96 !== e.src.charCodeAt(d))
									return !1;
							for (n = d,
							d++,
							i = e.posMax; d < i && 96 === e.src.charCodeAt(d); )
									d++;
							if (l = (r = e.src.slice(n, d)).length,
							e.backticksScanned && (e.backticks[l] || 0) <= n)
									return t || (e.pending += r),
									e.pos += l,
									!0;
							for (s = a = d; -1 !== (s = e.src.indexOf("`", a)); ) {
									for (a = s + 1; a < i && 96 === e.src.charCodeAt(a); )
											a++;
									if ((c = a - s) === l)
											return t || ((o = e.push("code_inline", "code", 0)).markup = r,
											o.content = e.src.slice(d, s).replace(/\n/g, " ").replace(/^ (.+) $/, "$1")),
											e.pos = a,
											!0;
									e.backticks[c] = s
							}
							return e.backticksScanned = !0,
							t || (e.pending += r),
							e.pos += l,
							!0
					}
			}
			,
			1503: e=>{
					"use strict";
					function processDelimiters(e, t) {
							var n, i, r, o, s, a, l, c, d = {}, p = t.length;
							if (p) {
									var u = 0
										, h = -2
										, m = [];
									for (n = 0; n < p; n++)
											if (r = t[n],
											m.push(0),
											t[u].marker === r.marker && h === r.token - 1 || (u = n),
											h = r.token,
											r.length = r.length || 0,
											r.close) {
													for (d.hasOwnProperty(r.marker) || (d[r.marker] = [-1, -1, -1, -1, -1, -1]),
													s = d[r.marker][(r.open ? 3 : 0) + r.length % 3],
													a = i = u - m[u] - 1; i > s; i -= m[i] + 1)
															if ((o = t[i]).marker === r.marker && o.open && o.end < 0 && (l = !1,
															(o.close || r.open) && (o.length + r.length) % 3 == 0 && (o.length % 3 == 0 && r.length % 3 == 0 || (l = !0)),
															!l)) {
																	c = i > 0 && !t[i - 1].open ? m[i - 1] + 1 : 0,
																	m[n] = n - i + c,
																	m[i] = c,
																	r.open = !1,
																	o.end = n,
																	o.close = !1,
																	a = -1,
																	h = -2;
																	break
															}
													-1 !== a && (d[r.marker][(r.open ? 3 : 0) + (r.length || 0) % 3] = a)
											}
							}
					}
					e.exports = function(e) {
							var t, n = e.tokens_meta, i = e.tokens_meta.length;
							for (processDelimiters(0, e.delimiters),
							t = 0; t < i; t++)
									n[t] && n[t].delimiters && processDelimiters(0, n[t].delimiters)
					}
			}
			,
			9639: e=>{
					"use strict";
					function postProcess(e, t) {
							var n, i, r, o, s, a;
							for (n = t.length - 1; n >= 0; n--)
									95 !== (i = t[n]).marker && 42 !== i.marker || -1 !== i.end && (r = t[i.end],
									a = n > 0 && t[n - 1].end === i.end + 1 && t[n - 1].marker === i.marker && t[n - 1].token === i.token - 1 && t[i.end + 1].token === r.token + 1,
									s = String.fromCharCode(i.marker),
									(o = e.tokens[i.token]).type = a ? "strong_open" : "em_open",
									o.tag = a ? "strong" : "em",
									o.nesting = 1,
									o.markup = a ? s + s : s,
									o.content = "",
									(o = e.tokens[r.token]).type = a ? "strong_close" : "em_close",
									o.tag = a ? "strong" : "em",
									o.nesting = -1,
									o.markup = a ? s + s : s,
									o.content = "",
									a && (e.tokens[t[n - 1].token].content = "",
									e.tokens[t[i.end + 1].token].content = "",
									n--))
					}
					e.exports.w = function(e, t) {
							var n, i, r = e.pos, o = e.src.charCodeAt(r);
							if (t)
									return !1;
							if (95 !== o && 42 !== o)
									return !1;
							for (i = e.scanDelims(e.pos, 42 === o),
							n = 0; n < i.length; n++)
									e.push("text", "", 0).content = String.fromCharCode(o),
									e.delimiters.push({
											marker: o,
											length: i.length,
											token: e.tokens.length - 1,
											end: -1,
											open: i.can_open,
											close: i.can_close
									});
							return e.pos += i.length,
							!0
					}
					,
					e.exports.g = function(e) {
							var t, n = e.tokens_meta, i = e.tokens_meta.length;
							for (postProcess(e, e.delimiters),
							t = 0; t < i; t++)
									n[t] && n[t].delimiters && postProcess(e, n[t].delimiters)
					}
			}
			,
			6277: (e,t,n)=>{
					"use strict";
					var i = n(4216)
						, r = n(9086).has
						, o = n(9086).isValidEntityCode
						, s = n(9086).fromCodePoint
						, a = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i
						, l = /^&([a-z][a-z0-9]{1,31});/i;
					e.exports = function(e, t) {
							var n, c, d, p = e.pos, u = e.posMax;
							if (38 !== e.src.charCodeAt(p))
									return !1;
							if (p + 1 >= u)
									return !1;
							if (35 === e.src.charCodeAt(p + 1)) {
									if (c = e.src.slice(p).match(a))
											return t || (n = "x" === c[1][0].toLowerCase() ? parseInt(c[1].slice(1), 16) : parseInt(c[1], 10),
											(d = e.push("text_special", "", 0)).content = o(n) ? s(n) : s(65533),
											d.markup = c[0],
											d.info = "entity"),
											e.pos += c[0].length,
											!0
							} else if ((c = e.src.slice(p).match(l)) && r(i, c[1]))
									return t || ((d = e.push("text_special", "", 0)).content = i[c[1]],
									d.markup = c[0],
									d.info = "entity"),
									e.pos += c[0].length,
									!0;
							return !1
					}
			}
			,
			5491: (e,t,n)=>{
					"use strict";
					for (var i = n(9086).isSpace, r = [], o = 0; o < 256; o++)
							r.push(0);
					"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach((function(e) {
							r[e.charCodeAt(0)] = 1
					}
					)),
					e.exports = function(e, t) {
							var n, o, s, a, l, c = e.pos, d = e.posMax;
							if (92 !== e.src.charCodeAt(c))
									return !1;
							if (++c >= d)
									return !1;
							if (10 === (n = e.src.charCodeAt(c))) {
									for (t || e.push("hardbreak", "br", 0),
									c++; c < d && (n = e.src.charCodeAt(c),
									i(n)); )
											c++;
									return e.pos = c,
									!0
							}
							return a = e.src[c],
							n >= 55296 && n <= 56319 && c + 1 < d && (o = e.src.charCodeAt(c + 1)) >= 56320 && o <= 57343 && (a += e.src[c + 1],
							c++),
							s = "\\" + a,
							t || (l = e.push("text_special", "", 0),
							n < 256 && 0 !== r[n] ? l.content = a : l.content = s,
							l.markup = s,
							l.info = "escape"),
							e.pos = c + 1,
							!0
					}
			}
			,
			1305: e=>{
					"use strict";
					e.exports = function(e) {
							var t, n, i = 0, r = e.tokens, o = e.tokens.length;
							for (t = n = 0; t < o; t++)
									r[t].nesting < 0 && i--,
									r[t].level = i,
									r[t].nesting > 0 && i++,
									"text" === r[t].type && t + 1 < o && "text" === r[t + 1].type ? r[t + 1].content = r[t].content + r[t + 1].content : (t !== n && (r[n] = r[t]),
									n++);
							t !== n && (r.length = n)
					}
			}
			,
			6425: (e,t,n)=>{
					"use strict";
					var i = n(8247).n;
					e.exports = function(e, t) {
							var n, r, o, s, a, l = e.pos;
							return !!e.md.options.html && (o = e.posMax,
							!(60 !== e.src.charCodeAt(l) || l + 2 >= o) && (!(33 !== (n = e.src.charCodeAt(l + 1)) && 63 !== n && 47 !== n && !function(e) {
									var t = 32 | e;
									return t >= 97 && t <= 122
							}(n)) && (!!(r = e.src.slice(l).match(i)) && (t || ((s = e.push("html_inline", "", 0)).content = e.src.slice(l, l + r[0].length),
							a = s.content,
							/^<a[>\s]/i.test(a) && e.linkLevel++,
							function(e) {
									return /^<\/a\s*>/i.test(e)
							}(s.content) && e.linkLevel--),
							e.pos += r[0].length,
							!0))))
					}
			}
			,
			4506: (e,t,n)=>{
					"use strict";
					var i = n(9086).normalizeReference
						, r = n(9086).isSpace;
					e.exports = function(e, t) {
							var n, o, s, a, l, c, d, p, u, h, m, g, _, f = "", y = e.pos, v = e.posMax;
							if (33 !== e.src.charCodeAt(e.pos))
									return !1;
							if (91 !== e.src.charCodeAt(e.pos + 1))
									return !1;
							if (c = e.pos + 2,
							(l = e.md.helpers.parseLinkLabel(e, e.pos + 1, !1)) < 0)
									return !1;
							if ((d = l + 1) < v && 40 === e.src.charCodeAt(d)) {
									for (d++; d < v && (o = e.src.charCodeAt(d),
									r(o) || 10 === o); d++)
											;
									if (d >= v)
											return !1;
									for (_ = d,
									(u = e.md.helpers.parseLinkDestination(e.src, d, e.posMax)).ok && (f = e.md.normalizeLink(u.str),
									e.md.validateLink(f) ? d = u.pos : f = ""),
									_ = d; d < v && (o = e.src.charCodeAt(d),
									r(o) || 10 === o); d++)
											;
									if (u = e.md.helpers.parseLinkTitle(e.src, d, e.posMax),
									d < v && _ !== d && u.ok)
											for (h = u.str,
											d = u.pos; d < v && (o = e.src.charCodeAt(d),
											r(o) || 10 === o); d++)
													;
									else
											h = "";
									if (d >= v || 41 !== e.src.charCodeAt(d))
											return e.pos = y,
											!1;
									d++
							} else {
									if (void 0 === e.env.references)
											return !1;
									if (d < v && 91 === e.src.charCodeAt(d) ? (_ = d + 1,
									(d = e.md.helpers.parseLinkLabel(e, d)) >= 0 ? a = e.src.slice(_, d++) : d = l + 1) : d = l + 1,
									a || (a = e.src.slice(c, l)),
									!(p = e.env.references[i(a)]))
											return e.pos = y,
											!1;
									f = p.href,
									h = p.title
							}
							return t || (s = e.src.slice(c, l),
							e.md.inline.parse(s, e.md, e.env, g = []),
							(m = e.push("image", "img", 0)).attrs = n = [["src", f], ["alt", ""]],
							m.children = g,
							m.content = s,
							h && n.push(["title", h])),
							e.pos = d,
							e.posMax = v,
							!0
					}
			}
			,
			4771: (e,t,n)=>{
					"use strict";
					var i = n(9086).normalizeReference
						, r = n(9086).isSpace;
					e.exports = function(e, t) {
							var n, o, s, a, l, c, d, p, u = "", h = "", m = e.pos, g = e.posMax, _ = e.pos, f = !0;
							if (91 !== e.src.charCodeAt(e.pos))
									return !1;
							if (l = e.pos + 1,
							(a = e.md.helpers.parseLinkLabel(e, e.pos, !0)) < 0)
									return !1;
							if ((c = a + 1) < g && 40 === e.src.charCodeAt(c)) {
									for (f = !1,
									c++; c < g && (o = e.src.charCodeAt(c),
									r(o) || 10 === o); c++)
											;
									if (c >= g)
											return !1;
									if (_ = c,
									(d = e.md.helpers.parseLinkDestination(e.src, c, e.posMax)).ok) {
											for (u = e.md.normalizeLink(d.str),
											e.md.validateLink(u) ? c = d.pos : u = "",
											_ = c; c < g && (o = e.src.charCodeAt(c),
											r(o) || 10 === o); c++)
													;
											if (d = e.md.helpers.parseLinkTitle(e.src, c, e.posMax),
											c < g && _ !== c && d.ok)
													for (h = d.str,
													c = d.pos; c < g && (o = e.src.charCodeAt(c),
													r(o) || 10 === o); c++)
															;
									}
									(c >= g || 41 !== e.src.charCodeAt(c)) && (f = !0),
									c++
							}
							if (f) {
									if (void 0 === e.env.references)
											return !1;
									if (c < g && 91 === e.src.charCodeAt(c) ? (_ = c + 1,
									(c = e.md.helpers.parseLinkLabel(e, c)) >= 0 ? s = e.src.slice(_, c++) : c = a + 1) : c = a + 1,
									s || (s = e.src.slice(l, a)),
									!(p = e.env.references[i(s)]))
											return e.pos = m,
											!1;
									u = p.href,
									h = p.title
							}
							return t || (e.pos = l,
							e.posMax = a,
							e.push("link_open", "a", 1).attrs = n = [["href", u]],
							h && n.push(["title", h]),
							e.linkLevel++,
							e.md.inline.tokenize(e),
							e.linkLevel--,
							e.push("link_close", "a", -1)),
							e.pos = c,
							e.posMax = g,
							!0
					}
			}
			,
			2386: e=>{
					"use strict";
					var t = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;
					e.exports = function(e, n) {
							var i, r, o, s, a, l, c;
							return !!e.md.options.linkify && (!(e.linkLevel > 0) && (!((i = e.pos) + 3 > e.posMax) && (58 === e.src.charCodeAt(i) && (47 === e.src.charCodeAt(i + 1) && (47 === e.src.charCodeAt(i + 2) && (!!(r = e.pending.match(t)) && (o = r[1],
							!!(s = e.md.linkify.matchAtStart(e.src.slice(i - o.length))) && (a = (a = s.url).replace(/\*+$/, ""),
							l = e.md.normalizeLink(a),
							!!e.md.validateLink(l) && (n || (e.pending = e.pending.slice(0, -o.length),
							(c = e.push("link_open", "a", 1)).attrs = [["href", l]],
							c.markup = "linkify",
							c.info = "auto",
							(c = e.push("text", "", 0)).content = e.md.normalizeLinkText(a),
							(c = e.push("link_close", "a", -1)).markup = "linkify",
							c.info = "auto"),
							e.pos += a.length - o.length,
							!0)))))))))
					}
			}
			,
			7014: (e,t,n)=>{
					"use strict";
					var i = n(9086).isSpace;
					e.exports = function(e, t) {
							var n, r, o, s = e.pos;
							if (10 !== e.src.charCodeAt(s))
									return !1;
							if (n = e.pending.length - 1,
							r = e.posMax,
							!t)
									if (n >= 0 && 32 === e.pending.charCodeAt(n))
											if (n >= 1 && 32 === e.pending.charCodeAt(n - 1)) {
													for (o = n - 1; o >= 1 && 32 === e.pending.charCodeAt(o - 1); )
															o--;
													e.pending = e.pending.slice(0, o),
													e.push("hardbreak", "br", 0)
											} else
													e.pending = e.pending.slice(0, -1),
													e.push("softbreak", "br", 0);
									else
											e.push("softbreak", "br", 0);
							for (s++; s < r && i(e.src.charCodeAt(s)); )
									s++;
							return e.pos = s,
							!0
					}
			}
			,
			5793: (e,t,n)=>{
					"use strict";
					var i = n(8843)
						, r = n(9086).isWhiteSpace
						, o = n(9086).isPunctChar
						, s = n(9086).isMdAsciiPunct;
					function StateInline(e, t, n, i) {
							this.src = e,
							this.env = n,
							this.md = t,
							this.tokens = i,
							this.tokens_meta = Array(i.length),
							this.pos = 0,
							this.posMax = this.src.length,
							this.level = 0,
							this.pending = "",
							this.pendingLevel = 0,
							this.cache = {},
							this.delimiters = [],
							this._prev_delimiters = [],
							this.backticks = {},
							this.backticksScanned = !1,
							this.linkLevel = 0
					}
					StateInline.prototype.pushPending = function() {
							var e = new i("text","",0);
							return e.content = this.pending,
							e.level = this.pendingLevel,
							this.tokens.push(e),
							this.pending = "",
							e
					}
					,
					StateInline.prototype.push = function(e, t, n) {
							this.pending && this.pushPending();
							var r = new i(e,t,n)
								, o = null;
							return n < 0 && (this.level--,
							this.delimiters = this._prev_delimiters.pop()),
							r.level = this.level,
							n > 0 && (this.level++,
							this._prev_delimiters.push(this.delimiters),
							this.delimiters = [],
							o = {
									delimiters: this.delimiters
							}),
							this.pendingLevel = this.level,
							this.tokens.push(r),
							this.tokens_meta.push(o),
							r
					}
					,
					StateInline.prototype.scanDelims = function(e, t) {
							var n, i, a, l, c, d, p, u, h, m = e, g = !0, _ = !0, f = this.posMax, y = this.src.charCodeAt(e);
							for (n = e > 0 ? this.src.charCodeAt(e - 1) : 32; m < f && this.src.charCodeAt(m) === y; )
									m++;
							return a = m - e,
							i = m < f ? this.src.charCodeAt(m) : 32,
							p = s(n) || o(String.fromCharCode(n)),
							h = s(i) || o(String.fromCharCode(i)),
							d = r(n),
							(u = r(i)) ? g = !1 : h && (d || p || (g = !1)),
							d ? _ = !1 : p && (u || h || (_ = !1)),
							t ? (l = g,
							c = _) : (l = g && (!_ || p),
							c = _ && (!g || h)),
							{
									can_open: l,
									can_close: c,
									length: a
							}
					}
					,
					StateInline.prototype.Token = i,
					e.exports = StateInline
			}
			,
			1606: e=>{
					"use strict";
					function postProcess(e, t) {
							var n, i, r, o, s, a = [], l = t.length;
							for (n = 0; n < l; n++)
									126 === (r = t[n]).marker && -1 !== r.end && (o = t[r.end],
									(s = e.tokens[r.token]).type = "s_open",
									s.tag = "s",
									s.nesting = 1,
									s.markup = "~~",
									s.content = "",
									(s = e.tokens[o.token]).type = "s_close",
									s.tag = "s",
									s.nesting = -1,
									s.markup = "~~",
									s.content = "",
									"text" === e.tokens[o.token - 1].type && "~" === e.tokens[o.token - 1].content && a.push(o.token - 1));
							for (; a.length; ) {
									for (i = (n = a.pop()) + 1; i < e.tokens.length && "s_close" === e.tokens[i].type; )
											i++;
									n !== --i && (s = e.tokens[i],
									e.tokens[i] = e.tokens[n],
									e.tokens[n] = s)
							}
					}
					e.exports.w = function(e, t) {
							var n, i, r, o, s = e.pos, a = e.src.charCodeAt(s);
							if (t)
									return !1;
							if (126 !== a)
									return !1;
							if (r = (i = e.scanDelims(e.pos, !0)).length,
							o = String.fromCharCode(a),
							r < 2)
									return !1;
							for (r % 2 && (e.push("text", "", 0).content = o,
							r--),
							n = 0; n < r; n += 2)
									e.push("text", "", 0).content = o + o,
									e.delimiters.push({
											marker: a,
											length: 0,
											token: e.tokens.length - 1,
											end: -1,
											open: i.can_open,
											close: i.can_close
									});
							return e.pos += i.length,
							!0
					}
					,
					e.exports.g = function(e) {
							var t, n = e.tokens_meta, i = e.tokens_meta.length;
							for (postProcess(e, e.delimiters),
							t = 0; t < i; t++)
									n[t] && n[t].delimiters && postProcess(e, n[t].delimiters)
					}
			}
			,
			9431: e=>{
					"use strict";
					function isTerminatorChar(e) {
							switch (e) {
							case 10:
							case 33:
							case 35:
							case 36:
							case 37:
							case 38:
							case 42:
							case 43:
							case 45:
							case 58:
							case 60:
							case 61:
							case 62:
							case 64:
							case 91:
							case 92:
							case 93:
							case 94:
							case 95:
							case 96:
							case 123:
							case 125:
							case 126:
									return !0;
							default:
									return !1
							}
					}
					e.exports = function(e, t) {
							for (var n = e.pos; n < e.posMax && !isTerminatorChar(e.src.charCodeAt(n)); )
									n++;
							return n !== e.pos && (t || (e.pending += e.src.slice(e.pos, n)),
							e.pos = n,
							!0)
					}
			}
			,
			8843: e=>{
					"use strict";
					function Token(e, t, n) {
							this.type = e,
							this.tag = t,
							this.attrs = null,
							this.map = null,
							this.nesting = n,
							this.level = 0,
							this.children = null,
							this.content = "",
							this.markup = "",
							this.info = "",
							this.meta = null,
							this.block = !1,
							this.hidden = !1
					}
					Token.prototype.attrIndex = function(e) {
							var t, n, i;
							if (!this.attrs)
									return -1;
							for (n = 0,
							i = (t = this.attrs).length; n < i; n++)
									if (t[n][0] === e)
											return n;
							return -1
					}
					,
					Token.prototype.attrPush = function(e) {
							this.attrs ? this.attrs.push(e) : this.attrs = [e]
					}
					,
					Token.prototype.attrSet = function(e, t) {
							var n = this.attrIndex(e)
								, i = [e, t];
							n < 0 ? this.attrPush(i) : this.attrs[n] = i
					}
					,
					Token.prototype.attrGet = function(e) {
							var t = this.attrIndex(e)
								, n = null;
							return t >= 0 && (n = this.attrs[t][1]),
							n
					}
					,
					Token.prototype.attrJoin = function(e, t) {
							var n = this.attrIndex(e);
							n < 0 ? this.attrPush([e, t]) : this.attrs[n][1] = this.attrs[n][1] + " " + t
					}
					,
					e.exports = Token
			}
			,
			5036: e=>{
					"use strict";
					var t = {};
					function decode(e, n) {
							var i;
							return "string" != typeof n && (n = decode.defaultChars),
							i = function(e) {
									var n, i, r = t[e];
									if (r)
											return r;
									for (r = t[e] = [],
									n = 0; n < 128; n++)
											i = String.fromCharCode(n),
											r.push(i);
									for (n = 0; n < e.length; n++)
											r[i = e.charCodeAt(n)] = "%" + ("0" + i.toString(16).toUpperCase()).slice(-2);
									return r
							}(n),
							e.replace(/(%[a-f0-9]{2})+/gi, (function(e) {
									var t, n, r, o, s, a, l, c = "";
									for (t = 0,
									n = e.length; t < n; t += 3)
											(r = parseInt(e.slice(t + 1, t + 3), 16)) < 128 ? c += i[r] : 192 == (224 & r) && t + 3 < n && 128 == (192 & (o = parseInt(e.slice(t + 4, t + 6), 16))) ? (c += (l = r << 6 & 1984 | 63 & o) < 128 ? "��" : String.fromCharCode(l),
											t += 3) : 224 == (240 & r) && t + 6 < n && (o = parseInt(e.slice(t + 4, t + 6), 16),
											s = parseInt(e.slice(t + 7, t + 9), 16),
											128 == (192 & o) && 128 == (192 & s)) ? (c += (l = r << 12 & 61440 | o << 6 & 4032 | 63 & s) < 2048 || l >= 55296 && l <= 57343 ? "���" : String.fromCharCode(l),
											t += 6) : 240 == (248 & r) && t + 9 < n && (o = parseInt(e.slice(t + 4, t + 6), 16),
											s = parseInt(e.slice(t + 7, t + 9), 16),
											a = parseInt(e.slice(t + 10, t + 12), 16),
											128 == (192 & o) && 128 == (192 & s) && 128 == (192 & a)) ? ((l = r << 18 & 1835008 | o << 12 & 258048 | s << 6 & 4032 | 63 & a) < 65536 || l > 1114111 ? c += "����" : (l -= 65536,
											c += String.fromCharCode(55296 + (l >> 10), 56320 + (1023 & l))),
											t += 9) : c += "�";
									return c
							}
							))
					}
					decode.defaultChars = ";/?:@&=+$,#",
					decode.componentChars = "",
					e.exports = decode
			}
			,
			2030: e=>{
					"use strict";
					var t = {};
					function encode(e, n, i) {
							var r, o, s, a, l, c = "";
							for ("string" != typeof n && (i = n,
							n = encode.defaultChars),
							void 0 === i && (i = !0),
							l = function(e) {
									var n, i, r = t[e];
									if (r)
											return r;
									for (r = t[e] = [],
									n = 0; n < 128; n++)
											i = String.fromCharCode(n),
											/^[0-9a-z]$/i.test(i) ? r.push(i) : r.push("%" + ("0" + n.toString(16).toUpperCase()).slice(-2));
									for (n = 0; n < e.length; n++)
											r[e.charCodeAt(n)] = e[n];
									return r
							}(n),
							r = 0,
							o = e.length; r < o; r++)
									if (s = e.charCodeAt(r),
									i && 37 === s && r + 2 < o && /^[0-9a-f]{2}$/i.test(e.slice(r + 1, r + 3)))
											c += e.slice(r, r + 3),
											r += 2;
									else if (s < 128)
											c += l[s];
									else if (s >= 55296 && s <= 57343) {
											if (s >= 55296 && s <= 56319 && r + 1 < o && (a = e.charCodeAt(r + 1)) >= 56320 && a <= 57343) {
													c += encodeURIComponent(e[r] + e[r + 1]),
													r++;
													continue
											}
											c += "%EF%BF%BD"
									} else
											c += encodeURIComponent(e[r]);
							return c
					}
					encode.defaultChars = ";/?:@&=+$,-_.!~*'()#",
					encode.componentChars = "-_.!~*'()",
					e.exports = encode
			}
			,
			576: e=>{
					"use strict";
					e.exports = function(e) {
							var t = "";
							return t += e.protocol || "",
							t += e.slashes ? "//" : "",
							t += e.auth ? e.auth + "@" : "",
							e.hostname && -1 !== e.hostname.indexOf(":") ? t += "[" + e.hostname + "]" : t += e.hostname || "",
							t += e.port ? ":" + e.port : "",
							t += e.pathname || "",
							t += e.search || "",
							t += e.hash || ""
					}
			}
			,
			3771: (e,t,n)=>{
					"use strict";
					e.exports.encode = n(2030),
					e.exports.decode = n(5036),
					e.exports.format = n(576),
					e.exports.parse = n(167)
			}
			,
			167: e=>{
					"use strict";
					function Url() {
							this.protocol = null,
							this.slashes = null,
							this.auth = null,
							this.port = null,
							this.hostname = null,
							this.hash = null,
							this.search = null,
							this.pathname = null
					}
					var t = /^([a-z0-9.+-]+:)/i
						, n = /:[0-9]*$/
						, i = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/
						, r = ["{", "}", "|", "\\", "^", "`"].concat(["<", ">", '"', "`", " ", "\r", "\n", "\t"])
						, o = ["'"].concat(r)
						, s = ["%", "/", "?", ";", "#"].concat(o)
						, a = ["/", "?", "#"]
						, l = /^[+a-z0-9A-Z_-]{0,63}$/
						, c = /^([+a-z0-9A-Z_-]{0,63})(.*)$/
						, d = {
							javascript: !0,
							"javascript:": !0
					}
						, p = {
							http: !0,
							https: !0,
							ftp: !0,
							gopher: !0,
							file: !0,
							"http:": !0,
							"https:": !0,
							"ftp:": !0,
							"gopher:": !0,
							"file:": !0
					};
					Url.prototype.parse = function(e, n) {
							var r, o, u, h, m, g = e;
							if (g = g.trim(),
							!n && 1 === e.split("#").length) {
									var _ = i.exec(g);
									if (_)
											return this.pathname = _[1],
											_[2] && (this.search = _[2]),
											this
							}
							var f = t.exec(g);
							if (f && (u = (f = f[0]).toLowerCase(),
							this.protocol = f,
							g = g.substr(f.length)),
							(n || f || g.match(/^\/\/[^@\/]+@[^@\/]+/)) && (!(m = "//" === g.substr(0, 2)) || f && d[f] || (g = g.substr(2),
							this.slashes = !0)),
							!d[f] && (m || f && !p[f])) {
									var y, v, b = -1;
									for (r = 0; r < a.length; r++)
											-1 !== (h = g.indexOf(a[r])) && (-1 === b || h < b) && (b = h);
									for (-1 !== (v = -1 === b ? g.lastIndexOf("@") : g.lastIndexOf("@", b)) && (y = g.slice(0, v),
									g = g.slice(v + 1),
									this.auth = y),
									b = -1,
									r = 0; r < s.length; r++)
											-1 !== (h = g.indexOf(s[r])) && (-1 === b || h < b) && (b = h);
									-1 === b && (b = g.length),
									":" === g[b - 1] && b--;
									var S = g.slice(0, b);
									g = g.slice(b),
									this.parseHost(S),
									this.hostname = this.hostname || "";
									var C = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
									if (!C) {
											var E = this.hostname.split(/\./);
											for (r = 0,
											o = E.length; r < o; r++) {
													var T = E[r];
													if (T && !T.match(l)) {
															for (var I = "", w = 0, A = T.length; w < A; w++)
																	T.charCodeAt(w) > 127 ? I += "x" : I += T[w];
															if (!I.match(l)) {
																	var R = E.slice(0, r)
																		, x = E.slice(r + 1)
																		, O = T.match(c);
																	O && (R.push(O[1]),
																	x.unshift(O[2])),
																	x.length && (g = x.join(".") + g),
																	this.hostname = R.join(".");
																	break
															}
													}
											}
									}
									this.hostname.length > 255 && (this.hostname = ""),
									C && (this.hostname = this.hostname.substr(1, this.hostname.length - 2))
							}
							var N = g.indexOf("#");
							-1 !== N && (this.hash = g.substr(N),
							g = g.slice(0, N));
							var P = g.indexOf("?");
							return -1 !== P && (this.search = g.substr(P),
							g = g.slice(0, P)),
							g && (this.pathname = g),
							p[u] && this.hostname && !this.pathname && (this.pathname = ""),
							this
					}
					,
					Url.prototype.parseHost = function(e) {
							var t = n.exec(e);
							t && (":" !== (t = t[0]) && (this.port = t.substr(1)),
							e = e.substr(0, e.length - t.length)),
							e && (this.hostname = e)
					}
					,
					e.exports = function(e, t) {
							if (e && e instanceof Url)
									return e;
							var n = new Url;
							return n.parse(e, t),
							n
					}
			}
			,
			2322: (e,t,n)=>{
					"use strict";
					n.r(t),
					n.d(t, {
							ucs2decode: ()=>ucs2decode,
							ucs2encode: ()=>ucs2encode,
							decode: ()=>decode,
							encode: ()=>encode,
							toASCII: ()=>toASCII,
							toUnicode: ()=>toUnicode,
							default: ()=>p
					});
					const i = 2147483647
						, r = 36
						, o = /^xn--/
						, s = /[^\0-\x7E]/
						, a = /[\x2E\u3002\uFF0E\uFF61]/g
						, l = {
							overflow: "Overflow: input needs wider integers to process",
							"not-basic": "Illegal input >= 0x80 (not a basic code point)",
							"invalid-input": "Invalid input"
					}
						, c = Math.floor
						, d = String.fromCharCode;
					function error(e) {
							throw new RangeError(l[e])
					}
					function mapDomain(e, t) {
							const n = e.split("@");
							let i = "";
							n.length > 1 && (i = n[0] + "@",
							e = n[1]);
							const r = function(e, t) {
									const n = [];
									let i = e.length;
									for (; i--; )
											n[i] = t(e[i]);
									return n
							}((e = e.replace(a, ".")).split("."), t).join(".");
							return i + r
					}
					function ucs2decode(e) {
							const t = [];
							let n = 0;
							const i = e.length;
							for (; n < i; ) {
									const r = e.charCodeAt(n++);
									if (r >= 55296 && r <= 56319 && n < i) {
											const i = e.charCodeAt(n++);
											56320 == (64512 & i) ? t.push(((1023 & r) << 10) + (1023 & i) + 65536) : (t.push(r),
											n--)
									} else
											t.push(r)
							}
							return t
					}
					const ucs2encode = e=>String.fromCodePoint(...e)
						, digitToBasic = function(e, t) {
							return e + 22 + 75 * (e < 26) - ((0 != t) << 5)
					}
						, adapt = function(e, t, n) {
							let i = 0;
							for (e = n ? c(e / 700) : e >> 1,
							e += c(e / t); e > 455; i += r)
									e = c(e / 35);
							return c(i + 36 * e / (e + 38))
					}
						, decode = function(e) {
							const t = []
								, n = e.length;
							let o = 0
								, s = 128
								, a = 72
								, l = e.lastIndexOf("-");
							l < 0 && (l = 0);
							for (let n = 0; n < l; ++n)
									e.charCodeAt(n) >= 128 && error("not-basic"),
									t.push(e.charCodeAt(n));
							for (let p = l > 0 ? l + 1 : 0; p < n; ) {
									let l = o;
									for (let t = 1, s = r; ; s += r) {
											p >= n && error("invalid-input");
											const l = (d = e.charCodeAt(p++)) - 48 < 10 ? d - 22 : d - 65 < 26 ? d - 65 : d - 97 < 26 ? d - 97 : r;
											(l >= r || l > c((i - o) / t)) && error("overflow"),
											o += l * t;
											const u = s <= a ? 1 : s >= a + 26 ? 26 : s - a;
											if (l < u)
													break;
											const h = r - u;
											t > c(i / h) && error("overflow"),
											t *= h
									}
									const u = t.length + 1;
									a = adapt(o - l, u, 0 == l),
									c(o / u) > i - s && error("overflow"),
									s += c(o / u),
									o %= u,
									t.splice(o++, 0, s)
							}
							var d;
							return String.fromCodePoint(...t)
					}
						, encode = function(e) {
							const t = [];
							let n = (e = ucs2decode(e)).length
								, o = 128
								, s = 0
								, a = 72;
							for (const n of e)
									n < 128 && t.push(d(n));
							let l = t.length
								, p = l;
							for (l && t.push("-"); p < n; ) {
									let n = i;
									for (const t of e)
											t >= o && t < n && (n = t);
									const u = p + 1;
									n - o > c((i - s) / u) && error("overflow"),
									s += (n - o) * u,
									o = n;
									for (const n of e)
											if (n < o && ++s > i && error("overflow"),
											n == o) {
													let e = s;
													for (let n = r; ; n += r) {
															const i = n <= a ? 1 : n >= a + 26 ? 26 : n - a;
															if (e < i)
																	break;
															const o = e - i
																, s = r - i;
															t.push(d(digitToBasic(i + o % s, 0))),
															e = c(o / s)
													}
													t.push(d(digitToBasic(e, 0))),
													a = adapt(s, u, p == l),
													s = 0,
													++p
											}
									++s,
									++o
							}
							return t.join("")
					}
						, toUnicode = function(e) {
							return mapDomain(e, (function(e) {
									return o.test(e) ? decode(e.slice(4).toLowerCase()) : e
							}
							))
					}
						, toASCII = function(e) {
							return mapDomain(e, (function(e) {
									return s.test(e) ? "xn--" + encode(e) : e
							}
							))
					}
						, p = {
							version: "2.1.0",
							ucs2: {
									decode: ucs2decode,
									encode: ucs2encode
							},
							decode,
							encode,
							toASCII,
							toUnicode
					}
			}
			,
			355: e=>{
					e.exports = /[\0-\x1F\x7F-\x9F]/
			}
			,
			9591: e=>{
					e.exports = /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/
			}
			,
			6121: e=>{
					e.exports = /[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4E\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/
			}
			,
			21: e=>{
					e.exports = /[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/
			}
			,
			8274: (e,t,n)=>{
					"use strict";
					t.Any = n(1816),
					t.Cc = n(355),
					t.Cf = n(9591),
					t.P = n(6121),
					t.Z = n(21)
			}
			,
			1816: e=>{
					e.exports = /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/
			}
			,
			9870: (e,t,n)=>{
					var i;
					var r = Object.hasOwnProperty
						, o = Object.setPrototypeOf
						, s = Object.isFrozen
						, a = Object.getPrototypeOf
						, l = Object.getOwnPropertyDescriptor
						, c = Object.freeze
						, d = Object.seal
						, p = Object.create
						, u = "undefined" != typeof Reflect && Reflect
						, h = u.apply
						, m = u.construct;
					h || (h = function(e, t, n) {
							return e.apply(t, n)
					}
					),
					c || (c = function(e) {
							return e
					}
					),
					d || (d = function(e) {
							return e
					}
					),
					m || (m = function(e, t) {
							return new (Function.prototype.bind.apply(e, [null].concat(function(e) {
									if (Array.isArray(e)) {
											for (var t = 0, n = Array(e.length); t < e.length; t++)
													n[t] = e[t];
											return n
									}
									return Array.from(e)
							}(t))))
					}
					);
					var g, _ = unapply(Array.prototype.forEach), f = unapply(Array.prototype.pop), y = unapply(Array.prototype.push), v = unapply(String.prototype.toLowerCase), b = unapply(String.prototype.match), S = unapply(String.prototype.replace), C = unapply(String.prototype.indexOf), E = unapply(String.prototype.trim), T = unapply(RegExp.prototype.test), I = (g = TypeError,
					function() {
							for (var e = arguments.length, t = Array(e), n = 0; n < e; n++)
									t[n] = arguments[n];
							return m(g, t)
					}
					);
					function unapply(e) {
							return function(t) {
									for (var n = arguments.length, i = Array(n > 1 ? n - 1 : 0), r = 1; r < n; r++)
											i[r - 1] = arguments[r];
									return h(e, t, i)
							}
					}
					function addToSet(e, t) {
							o && o(e, null);
							for (var n = t.length; n--; ) {
									var i = t[n];
									if ("string" == typeof i) {
											var r = v(i);
											r !== i && (s(t) || (t[n] = r),
											i = r)
									}
									e[i] = !0
							}
							return e
					}
					function clone(e) {
							var t = p(null)
								, n = void 0;
							for (n in e)
									h(r, e, [n]) && (t[n] = e[n]);
							return t
					}
					function lookupGetter(e, t) {
							for (; null !== e; ) {
									var n = l(e, t);
									if (n) {
											if (n.get)
													return unapply(n.get);
											if ("function" == typeof n.value)
													return unapply(n.value)
									}
									e = a(e)
							}
							return function(e) {
									return console.warn("fallback value for", e),
									null
							}
					}
					var w = c(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"])
						, A = c(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"])
						, R = c(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"])
						, x = c(["animate", "color-profile", "cursor", "discard", "fedropshadow", "feimage", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"])
						, O = c(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover"])
						, N = c(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"])
						, P = c(["#text"])
						, D = c(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "xmlns", "slot"])
						, M = c(["accent-height", "accumulate", "additive", "alignment-baseline", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "targetx", "targety", "transform", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"])
						, L = c(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"])
						, k = c(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"])
						, F = d(/\{\{[\s\S]*|[\s\S]*\}\}/gm)
						, B = d(/<%[\s\S]*|[\s\S]*%>/gm)
						, G = d(/^data-[\-\w.\u00B7-\uFFFF]/)
						, U = d(/^aria-[\-\w]+$/)
						, z = d(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i)
						, V = d(/^(?:\w+script|data):/i)
						, H = d(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g)
						, q = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
							return typeof e
					}
					: function(e) {
							return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
					}
					;
					function _toConsumableArray$1(e) {
							if (Array.isArray(e)) {
									for (var t = 0, n = Array(e.length); t < e.length; t++)
											n[t] = e[t];
									return n
							}
							return Array.from(e)
					}
					var getGlobal = function() {
							return "undefined" == typeof window ? null : window
					}
						, _createTrustedTypesPolicy = function(e, t) {
							if ("object" !== (void 0 === e ? "undefined" : q(e)) || "function" != typeof e.createPolicy)
									return null;
							var n = null
								, i = "data-tt-policy-suffix";
							t.currentScript && t.currentScript.hasAttribute(i) && (n = t.currentScript.getAttribute(i));
							var r = "dompurify" + (n ? "#" + n : "");
							try {
									return e.createPolicy(r, {
											createHTML: function(e) {
													return e
											}
									})
							} catch (e) {
									return console.warn("TrustedTypes policy " + r + " could not be created."),
									null
							}
					};
					var j = function createDOMPurify() {
							var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : getGlobal()
								, DOMPurify = function(e) {
									return createDOMPurify(e)
							};
							if (DOMPurify.version = "2.3.1",
							DOMPurify.removed = [],
							!e || !e.document || 9 !== e.document.nodeType)
									return DOMPurify.isSupported = !1,
									DOMPurify;
							var t = e.document
								, n = e.document
								, i = e.DocumentFragment
								, r = e.HTMLTemplateElement
								, o = e.Node
								, s = e.Element
								, a = e.NodeFilter
								, l = e.NamedNodeMap
								, d = void 0 === l ? e.NamedNodeMap || e.MozNamedAttrMap : l
								, p = e.Text
								, u = e.Comment
								, h = e.DOMParser
								, m = e.trustedTypes
								, g = s.prototype
								, j = lookupGetter(g, "cloneNode")
								, W = lookupGetter(g, "nextSibling")
								, Y = lookupGetter(g, "childNodes")
								, K = lookupGetter(g, "parentNode");
							if ("function" == typeof r) {
									var Q = n.createElement("template");
									Q.content && Q.content.ownerDocument && (n = Q.content.ownerDocument)
							}
							var Z = _createTrustedTypesPolicy(m, t)
								, X = Z && Oe ? Z.createHTML("") : ""
								, J = n
								, ee = J.implementation
								, te = J.createNodeIterator
								, ne = J.createDocumentFragment
								, ie = J.getElementsByTagName
								, re = t.importNode
								, oe = {};
							try {
									oe = clone(n).documentMode ? n.documentMode : {}
							} catch (e) {}
							var se = {};
							DOMPurify.isSupported = "function" == typeof K && ee && void 0 !== ee.createHTMLDocument && 9 !== oe;
							var ae = F
								, le = B
								, ce = G
								, de = U
								, pe = V
								, ue = H
								, he = z
								, me = null
								, ge = addToSet({}, [].concat(_toConsumableArray$1(w), _toConsumableArray$1(A), _toConsumableArray$1(R), _toConsumableArray$1(O), _toConsumableArray$1(P)))
								, _e = null
								, fe = addToSet({}, [].concat(_toConsumableArray$1(D), _toConsumableArray$1(M), _toConsumableArray$1(L), _toConsumableArray$1(k)))
								, ye = null
								, ve = null
								, be = !0
								, Se = !0
								, Ce = !1
								, Ee = !1
								, Te = !1
								, Ie = !1
								, we = !1
								, Ae = !1
								, Re = !1
								, xe = !0
								, Oe = !1
								, Ne = !0
								, Pe = !0
								, De = !1
								, Me = {}
								, Le = null
								, ke = addToSet({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"])
								, Fe = null
								, Be = addToSet({}, ["audio", "video", "img", "source", "image", "track"])
								, Ge = null
								, Ue = addToSet({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"])
								, ze = "http://www.w3.org/1998/Math/MathML"
								, $e = "http://www.w3.org/2000/svg"
								, Ve = "http://www.w3.org/1999/xhtml"
								, He = Ve
								, qe = !1
								, je = null
								, We = n.createElement("form")
								, _parseConfig = function(e) {
									je && je === e || (e && "object" === (void 0 === e ? "undefined" : q(e)) || (e = {}),
									e = clone(e),
									me = "ALLOWED_TAGS"in e ? addToSet({}, e.ALLOWED_TAGS) : ge,
									_e = "ALLOWED_ATTR"in e ? addToSet({}, e.ALLOWED_ATTR) : fe,
									Ge = "ADD_URI_SAFE_ATTR"in e ? addToSet(clone(Ue), e.ADD_URI_SAFE_ATTR) : Ue,
									Fe = "ADD_DATA_URI_TAGS"in e ? addToSet(clone(Be), e.ADD_DATA_URI_TAGS) : Be,
									Le = "FORBID_CONTENTS"in e ? addToSet({}, e.FORBID_CONTENTS) : ke,
									ye = "FORBID_TAGS"in e ? addToSet({}, e.FORBID_TAGS) : {},
									ve = "FORBID_ATTR"in e ? addToSet({}, e.FORBID_ATTR) : {},
									Me = "USE_PROFILES"in e && e.USE_PROFILES,
									be = !1 !== e.ALLOW_ARIA_ATTR,
									Se = !1 !== e.ALLOW_DATA_ATTR,
									Ce = e.ALLOW_UNKNOWN_PROTOCOLS || !1,
									Ee = e.SAFE_FOR_TEMPLATES || !1,
									Te = e.WHOLE_DOCUMENT || !1,
									Ae = e.RETURN_DOM || !1,
									Re = e.RETURN_DOM_FRAGMENT || !1,
									xe = !1 !== e.RETURN_DOM_IMPORT,
									Oe = e.RETURN_TRUSTED_TYPE || !1,
									we = e.FORCE_BODY || !1,
									Ne = !1 !== e.SANITIZE_DOM,
									Pe = !1 !== e.KEEP_CONTENT,
									De = e.IN_PLACE || !1,
									he = e.ALLOWED_URI_REGEXP || he,
									He = e.NAMESPACE || Ve,
									Ee && (Se = !1),
									Re && (Ae = !0),
									Me && (me = addToSet({}, [].concat(_toConsumableArray$1(P))),
									_e = [],
									!0 === Me.html && (addToSet(me, w),
									addToSet(_e, D)),
									!0 === Me.svg && (addToSet(me, A),
									addToSet(_e, M),
									addToSet(_e, k)),
									!0 === Me.svgFilters && (addToSet(me, R),
									addToSet(_e, M),
									addToSet(_e, k)),
									!0 === Me.mathMl && (addToSet(me, O),
									addToSet(_e, L),
									addToSet(_e, k))),
									e.ADD_TAGS && (me === ge && (me = clone(me)),
									addToSet(me, e.ADD_TAGS)),
									e.ADD_ATTR && (_e === fe && (_e = clone(_e)),
									addToSet(_e, e.ADD_ATTR)),
									e.ADD_URI_SAFE_ATTR && addToSet(Ge, e.ADD_URI_SAFE_ATTR),
									e.FORBID_CONTENTS && (Le === ke && (Le = clone(Le)),
									addToSet(Le, e.FORBID_CONTENTS)),
									Pe && (me["#text"] = !0),
									Te && addToSet(me, ["html", "head", "body"]),
									me.table && (addToSet(me, ["tbody"]),
									delete ye.tbody),
									c && c(e),
									je = e)
							}
								, Ye = addToSet({}, ["mi", "mo", "mn", "ms", "mtext"])
								, Ke = addToSet({}, ["foreignobject", "desc", "title", "annotation-xml"])
								, Qe = addToSet({}, A);
							addToSet(Qe, R),
							addToSet(Qe, x);
							var Ze = addToSet({}, O);
							addToSet(Ze, N);
							var _checkValidNamespace = function(e) {
									var t = K(e);
									t && t.tagName || (t = {
											namespaceURI: Ve,
											tagName: "template"
									});
									var n = v(e.tagName)
										, i = v(t.tagName);
									if (e.namespaceURI === $e)
											return t.namespaceURI === Ve ? "svg" === n : t.namespaceURI === ze ? "svg" === n && ("annotation-xml" === i || Ye[i]) : Boolean(Qe[n]);
									if (e.namespaceURI === ze)
											return t.namespaceURI === Ve ? "math" === n : t.namespaceURI === $e ? "math" === n && Ke[i] : Boolean(Ze[n]);
									if (e.namespaceURI === Ve) {
											if (t.namespaceURI === $e && !Ke[i])
													return !1;
											if (t.namespaceURI === ze && !Ye[i])
													return !1;
											var r = addToSet({}, ["title", "style", "font", "a", "script"]);
											return !Ze[n] && (r[n] || !Qe[n])
									}
									return !1
							}
								, _forceRemove = function(e) {
									y(DOMPurify.removed, {
											element: e
									});
									try {
											e.parentNode.removeChild(e)
									} catch (t) {
											try {
													e.outerHTML = X
											} catch (t) {
													e.remove()
											}
									}
							}
								, _removeAttribute = function(e, t) {
									try {
											y(DOMPurify.removed, {
													attribute: t.getAttributeNode(e),
													from: t
											})
									} catch (e) {
											y(DOMPurify.removed, {
													attribute: null,
													from: t
											})
									}
									if (t.removeAttribute(e),
									"is" === e && !_e[e])
											if (Ae || Re)
													try {
															_forceRemove(t)
													} catch (e) {}
											else
													try {
															t.setAttribute(e, "")
													} catch (e) {}
							}
								, _initDocument = function(e) {
									var t = void 0
										, i = void 0;
									if (we)
											e = "<remove></remove>" + e;
									else {
											var r = b(e, /^[\r\n\t ]+/);
											i = r && r[0]
									}
									var o = Z ? Z.createHTML(e) : e;
									if (He === Ve)
											try {
													t = (new h).parseFromString(o, "text/html")
											} catch (e) {}
									if (!t || !t.documentElement) {
											t = ee.createDocument(He, "template", null);
											try {
													t.documentElement.innerHTML = qe ? "" : o
											} catch (e) {}
									}
									var s = t.body || t.documentElement;
									return e && i && s.insertBefore(n.createTextNode(i), s.childNodes[0] || null),
									He === Ve ? ie.call(t, Te ? "html" : "body")[0] : Te ? t.documentElement : s
							}
								, _createIterator = function(e) {
									return te.call(e.ownerDocument || e, e, a.SHOW_ELEMENT | a.SHOW_COMMENT | a.SHOW_TEXT, null, !1)
							}
								, _isClobbered = function(e) {
									return !(e instanceof p || e instanceof u) && !("string" == typeof e.nodeName && "string" == typeof e.textContent && "function" == typeof e.removeChild && e.attributes instanceof d && "function" == typeof e.removeAttribute && "function" == typeof e.setAttribute && "string" == typeof e.namespaceURI && "function" == typeof e.insertBefore)
							}
								, _isNode = function(e) {
									return "object" === (void 0 === o ? "undefined" : q(o)) ? e instanceof o : e && "object" === (void 0 === e ? "undefined" : q(e)) && "number" == typeof e.nodeType && "string" == typeof e.nodeName
							}
								, _executeHook = function(e, t, n) {
									se[e] && _(se[e], (function(e) {
											e.call(DOMPurify, t, n, je)
									}
									))
							}
								, _sanitizeElements = function(e) {
									var t = void 0;
									if (_executeHook("beforeSanitizeElements", e, null),
									_isClobbered(e))
											return _forceRemove(e),
											!0;
									if (b(e.nodeName, /[\u0080-\uFFFF]/))
											return _forceRemove(e),
											!0;
									var n = v(e.nodeName);
									if (_executeHook("uponSanitizeElement", e, {
											tagName: n,
											allowedTags: me
									}),
									!_isNode(e.firstElementChild) && (!_isNode(e.content) || !_isNode(e.content.firstElementChild)) && T(/<[/\w]/g, e.innerHTML) && T(/<[/\w]/g, e.textContent))
											return _forceRemove(e),
											!0;
									if ("select" === n && T(/<template/i, e.innerHTML))
											return _forceRemove(e),
											!0;
									if (!me[n] || ye[n]) {
											if (Pe && !Le[n]) {
													var i = K(e) || e.parentNode
														, r = Y(e) || e.childNodes;
													if (r && i)
															for (var o = r.length - 1; o >= 0; --o)
																	i.insertBefore(j(r[o], !0), W(e))
											}
											return _forceRemove(e),
											!0
									}
									return e instanceof s && !_checkValidNamespace(e) ? (_forceRemove(e),
									!0) : "noscript" !== n && "noembed" !== n || !T(/<\/no(script|embed)/i, e.innerHTML) ? (Ee && 3 === e.nodeType && (t = e.textContent,
									t = S(t, ae, " "),
									t = S(t, le, " "),
									e.textContent !== t && (y(DOMPurify.removed, {
											element: e.cloneNode()
									}),
									e.textContent = t)),
									_executeHook("afterSanitizeElements", e, null),
									!1) : (_forceRemove(e),
									!0)
							}
								, _isValidAttribute = function(e, t, i) {
									if (Ne && ("id" === t || "name" === t) && (i in n || i in We))
											return !1;
									if (Se && !ve[t] && T(ce, t))
											;
									else if (be && T(de, t))
											;
									else {
											if (!_e[t] || ve[t])
													return !1;
											if (Ge[t])
													;
											else if (T(he, S(i, ue, "")))
													;
											else if ("src" !== t && "xlink:href" !== t && "href" !== t || "script" === e || 0 !== C(i, "data:") || !Fe[e]) {
													if (Ce && !T(pe, S(i, ue, "")))
															;
													else if (i)
															return !1
											} else
													;
									}
									return !0
							}
								, _sanitizeAttributes = function(e) {
									var t = void 0
										, n = void 0
										, i = void 0
										, r = void 0;
									_executeHook("beforeSanitizeAttributes", e, null);
									var o = e.attributes;
									if (o) {
											var s = {
													attrName: "",
													attrValue: "",
													keepAttr: !0,
													allowedAttributes: _e
											};
											for (r = o.length; r--; ) {
													var a = t = o[r]
														, l = a.name
														, c = a.namespaceURI;
													if (n = E(t.value),
													i = v(l),
													s.attrName = i,
													s.attrValue = n,
													s.keepAttr = !0,
													s.forceKeepAttr = void 0,
													_executeHook("uponSanitizeAttribute", e, s),
													n = s.attrValue,
													!s.forceKeepAttr && (_removeAttribute(l, e),
													s.keepAttr))
															if (T(/\/>/i, n))
																	_removeAttribute(l, e);
															else {
																	Ee && (n = S(n, ae, " "),
																	n = S(n, le, " "));
																	var d = e.nodeName.toLowerCase();
																	if (_isValidAttribute(d, i, n))
																			try {
																					c ? e.setAttributeNS(c, l, n) : e.setAttribute(l, n),
																					f(DOMPurify.removed)
																			} catch (e) {}
															}
											}
											_executeHook("afterSanitizeAttributes", e, null)
									}
							}
								, Xe = function _sanitizeShadowDOM(e) {
									var t = void 0
										, n = _createIterator(e);
									for (_executeHook("beforeSanitizeShadowDOM", e, null); t = n.nextNode(); )
											_executeHook("uponSanitizeShadowNode", t, null),
											_sanitizeElements(t) || (t.content instanceof i && _sanitizeShadowDOM(t.content),
											_sanitizeAttributes(t));
									_executeHook("afterSanitizeShadowDOM", e, null)
							};
							return DOMPurify.sanitize = function(n, r) {
									var s = void 0
										, a = void 0
										, l = void 0
										, c = void 0
										, d = void 0;
									if ((qe = !n) && (n = "\x3c!--\x3e"),
									"string" != typeof n && !_isNode(n)) {
											if ("function" != typeof n.toString)
													throw I("toString is not a function");
											if ("string" != typeof (n = n.toString()))
													throw I("dirty is not a string, aborting")
									}
									if (!DOMPurify.isSupported) {
											if ("object" === q(e.toStaticHTML) || "function" == typeof e.toStaticHTML) {
													if ("string" == typeof n)
															return e.toStaticHTML(n);
													if (_isNode(n))
															return e.toStaticHTML(n.outerHTML)
											}
											return n
									}
									if (Ie || _parseConfig(r),
									DOMPurify.removed = [],
									"string" == typeof n && (De = !1),
									De)
											;
									else if (n instanceof o)
											1 === (a = (s = _initDocument("\x3c!----\x3e")).ownerDocument.importNode(n, !0)).nodeType && "BODY" === a.nodeName || "HTML" === a.nodeName ? s = a : s.appendChild(a);
									else {
											if (!Ae && !Ee && !Te && -1 === n.indexOf("<"))
													return Z && Oe ? Z.createHTML(n) : n;
											if (!(s = _initDocument(n)))
													return Ae ? null : X
									}
									s && we && _forceRemove(s.firstChild);
									for (var p = _createIterator(De ? n : s); l = p.nextNode(); )
											3 === l.nodeType && l === c || _sanitizeElements(l) || (l.content instanceof i && Xe(l.content),
											_sanitizeAttributes(l),
											c = l);
									if (c = null,
									De)
											return n;
									if (Ae) {
											if (Re)
													for (d = ne.call(s.ownerDocument); s.firstChild; )
															d.appendChild(s.firstChild);
											else
													d = s;
											return xe && (d = re.call(t, d, !0)),
											d
									}
									var u = Te ? s.outerHTML : s.innerHTML;
									return Ee && (u = S(u, ae, " "),
									u = S(u, le, " ")),
									Z && Oe ? Z.createHTML(u) : u
							}
							,
							DOMPurify.setConfig = function(e) {
									_parseConfig(e),
									Ie = !0
							}
							,
							DOMPurify.clearConfig = function() {
									je = null,
									Ie = !1
							}
							,
							DOMPurify.isValidAttribute = function(e, t, n) {
									je || _parseConfig({});
									var i = v(e)
										, r = v(t);
									return _isValidAttribute(i, r, n)
							}
							,
							DOMPurify.addHook = function(e, t) {
									"function" == typeof t && (se[e] = se[e] || [],
									y(se[e], t))
							}
							,
							DOMPurify.removeHook = function(e) {
									se[e] && f(se[e])
							}
							,
							DOMPurify.removeHooks = function(e) {
									se[e] && (se[e] = [])
							}
							,
							DOMPurify.removeAllHooks = function() {
									se = {}
							}
							,
							DOMPurify
					}();
					void 0 === (i = function() {
							return j
					}
					.call(t, n, t, e)) || (e.exports = i)
			}
			,
			2799: ()=>{}
			,
			6747: ()=>{}
			,
			7274: ()=>{}
			,
			3092: ()=>{}
			,
			1338: ()=>{}
			,
			821: ()=>{}
			,
			5833: ()=>{}
			,
			2666: ()=>{}
			,
			8396: e=>{
					var t = {
							exports: {}
					};
					function deepFreeze(e) {
							return e instanceof Map ? e.clear = e.delete = e.set = function() {
									throw new Error("map is read-only")
							}
							: e instanceof Set && (e.add = e.clear = e.delete = function() {
									throw new Error("set is read-only")
							}
							),
							Object.freeze(e),
							Object.getOwnPropertyNames(e).forEach((function(t) {
									var n = e[t];
									"object" != typeof n || Object.isFrozen(n) || deepFreeze(n)
							}
							)),
							e
					}
					t.exports = deepFreeze,
					t.exports.default = deepFreeze;
					class Response {
							constructor(e) {
									void 0 === e.data && (e.data = {}),
									this.data = e.data,
									this.isMatchIgnored = !1
							}
							ignoreMatch() {
									this.isMatchIgnored = !0
							}
					}
					function escapeHTML(e) {
							return e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;")
					}
					function inherit$1(e, ...t) {
							const n = Object.create(null);
							for (const t in e)
									n[t] = e[t];
							return t.forEach((function(e) {
									for (const t in e)
											n[t] = e[t]
							}
							)),
							n
					}
					const emitsWrappingTags = e=>!!e.scope || e.sublanguage && e.language;
					class HTMLRenderer {
							constructor(e, t) {
									this.buffer = "",
									this.classPrefix = t.classPrefix,
									e.walk(this)
							}
							addText(e) {
									this.buffer += escapeHTML(e)
							}
							openNode(e) {
									if (!emitsWrappingTags(e))
											return;
									let t = "";
									t = e.sublanguage ? `language-${e.language}` : ((e,{prefix: t})=>{
											if (e.includes(".")) {
													const n = e.split(".");
													return [`${t}${n.shift()}`, ...n.map(((e,t)=>`${e}${"_".repeat(t + 1)}`))].join(" ")
											}
											return `${t}${e}`
									}
									)(e.scope, {
											prefix: this.classPrefix
									}),
									this.span(t)
							}
							closeNode(e) {
									emitsWrappingTags(e) && (this.buffer += "</span>")
							}
							value() {
									return this.buffer
							}
							span(e) {
									this.buffer += `<span class="${e}">`
							}
					}
					const newNode = (e={})=>{
							const t = {
									children: []
							};
							return Object.assign(t, e),
							t
					}
					;
					class TokenTree {
							constructor() {
									this.rootNode = newNode(),
									this.stack = [this.rootNode]
							}
							get top() {
									return this.stack[this.stack.length - 1]
							}
							get root() {
									return this.rootNode
							}
							add(e) {
									this.top.children.push(e)
							}
							openNode(e) {
									const t = newNode({
											scope: e
									});
									this.add(t),
									this.stack.push(t)
							}
							closeNode() {
									if (this.stack.length > 1)
											return this.stack.pop()
							}
							closeAllNodes() {
									for (; this.closeNode(); )
											;
							}
							toJSON() {
									return JSON.stringify(this.rootNode, null, 4)
							}
							walk(e) {
									return this.constructor._walk(e, this.rootNode)
							}
							static _walk(e, t) {
									return "string" == typeof t ? e.addText(t) : t.children && (e.openNode(t),
									t.children.forEach((t=>this._walk(e, t))),
									e.closeNode(t)),
									e
							}
							static _collapse(e) {
									"string" != typeof e && e.children && (e.children.every((e=>"string" == typeof e)) ? e.children = [e.children.join("")] : e.children.forEach((e=>{
											TokenTree._collapse(e)
									}
									)))
							}
					}
					class TokenTreeEmitter extends TokenTree {
							constructor(e) {
									super(),
									this.options = e
							}
							addKeyword(e, t) {
									"" !== e && (this.openNode(t),
									this.addText(e),
									this.closeNode())
							}
							addText(e) {
									"" !== e && this.add(e)
							}
							addSublanguage(e, t) {
									const n = e.root;
									n.sublanguage = !0,
									n.language = t,
									this.add(n)
							}
							toHTML() {
									return new HTMLRenderer(this,this.options).value()
							}
							finalize() {
									return !0
							}
					}
					function source(e) {
							return e ? "string" == typeof e ? e : e.source : null
					}
					function lookahead(e) {
							return concat("(?=", e, ")")
					}
					function anyNumberOfTimes(e) {
							return concat("(?:", e, ")*")
					}
					function optional(e) {
							return concat("(?:", e, ")?")
					}
					function concat(...e) {
							return e.map((e=>source(e))).join("")
					}
					function either(...e) {
							const t = function(e) {
									const t = e[e.length - 1];
									return "object" == typeof t && t.constructor === Object ? (e.splice(e.length - 1, 1),
									t) : {}
							}(e);
							return "(" + (t.capture ? "" : "?:") + e.map((e=>source(e))).join("|") + ")"
					}
					function countMatchGroups(e) {
							return new RegExp(e.toString() + "|").exec("").length - 1
					}
					const n = /\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;
					function _rewriteBackreferences(e, {joinWith: t}) {
							let i = 0;
							return e.map((e=>{
									i += 1;
									const t = i;
									let r = source(e)
										, o = "";
									for (; r.length > 0; ) {
											const e = n.exec(r);
											if (!e) {
													o += r;
													break
											}
											o += r.substring(0, e.index),
											r = r.substring(e.index + e[0].length),
											"\\" === e[0][0] && e[1] ? o += "\\" + String(Number(e[1]) + t) : (o += e[0],
											"(" === e[0] && i++)
									}
									return o
							}
							)).map((e=>`(${e})`)).join(t)
					}
					const i = "[a-zA-Z]\\w*"
						, r = "[a-zA-Z_]\\w*"
						, o = "\\b\\d+(\\.\\d+)?"
						, s = "(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)"
						, a = "\\b(0b[01]+)"
						, l = {
							begin: "\\\\[\\s\\S]",
							relevance: 0
					}
						, c = {
							scope: "string",
							begin: "'",
							end: "'",
							illegal: "\\n",
							contains: [l]
					}
						, d = {
							scope: "string",
							begin: '"',
							end: '"',
							illegal: "\\n",
							contains: [l]
					}
						, COMMENT = function(e, t, n={}) {
							const i = inherit$1({
									scope: "comment",
									begin: e,
									end: t,
									contains: []
							}, n);
							i.contains.push({
									scope: "doctag",
									begin: "[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)",
									end: /(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,
									excludeBegin: !0,
									relevance: 0
							});
							const r = either("I", "a", "is", "so", "us", "to", "at", "if", "in", "it", "on", /[A-Za-z]+['](d|ve|re|ll|t|s|n)/, /[A-Za-z]+[-][a-z]+/, /[A-Za-z][a-z]{2,}/);
							return i.contains.push({
									begin: concat(/[ ]+/, "(", r, /[.]?[:]?([.][ ]|[ ])/, "){3}")
							}),
							i
					}
						, p = COMMENT("//", "$")
						, u = COMMENT("/\\*", "\\*/")
						, h = COMMENT("#", "$")
						, m = {
							scope: "number",
							begin: o,
							relevance: 0
					}
						, g = {
							scope: "number",
							begin: s,
							relevance: 0
					}
						, _ = {
							scope: "number",
							begin: a,
							relevance: 0
					}
						, f = {
							begin: /(?=\/[^/\n]*\/)/,
							contains: [{
									scope: "regexp",
									begin: /\//,
									end: /\/[gimuy]*/,
									illegal: /\n/,
									contains: [l, {
											begin: /\[/,
											end: /\]/,
											relevance: 0,
											contains: [l]
									}]
							}]
					}
						, y = {
							scope: "title",
							begin: i,
							relevance: 0
					}
						, v = {
							scope: "title",
							begin: r,
							relevance: 0
					}
						, b = {
							begin: "\\.\\s*" + r,
							relevance: 0
					};
					var S = Object.freeze({
							__proto__: null,
							MATCH_NOTHING_RE: /\b\B/,
							IDENT_RE: i,
							UNDERSCORE_IDENT_RE: r,
							NUMBER_RE: o,
							C_NUMBER_RE: s,
							BINARY_NUMBER_RE: a,
							RE_STARTERS_RE: "!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",
							SHEBANG: (e={})=>{
									const t = /^#![ ]*\//;
									return e.binary && (e.begin = concat(t, /.*\b/, e.binary, /\b.*/)),
									inherit$1({
											scope: "meta",
											begin: t,
											end: /$/,
											relevance: 0,
											"on:begin": (e,t)=>{
													0 !== e.index && t.ignoreMatch()
											}
									}, e)
							}
							,
							BACKSLASH_ESCAPE: l,
							APOS_STRING_MODE: c,
							QUOTE_STRING_MODE: d,
							PHRASAL_WORDS_MODE: {
									begin: /\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/
							},
							COMMENT,
							C_LINE_COMMENT_MODE: p,
							C_BLOCK_COMMENT_MODE: u,
							HASH_COMMENT_MODE: h,
							NUMBER_MODE: m,
							C_NUMBER_MODE: g,
							BINARY_NUMBER_MODE: _,
							REGEXP_MODE: f,
							TITLE_MODE: y,
							UNDERSCORE_TITLE_MODE: v,
							METHOD_GUARD: b,
							END_SAME_AS_BEGIN: function(e) {
									return Object.assign(e, {
											"on:begin": (e,t)=>{
													t.data._beginMatch = e[1]
											}
											,
											"on:end": (e,t)=>{
													t.data._beginMatch !== e[1] && t.ignoreMatch()
											}
									})
							}
					});
					function skipIfHasPrecedingDot(e, t) {
							"." === e.input[e.index - 1] && t.ignoreMatch()
					}
					function scopeClassName(e, t) {
							void 0 !== e.className && (e.scope = e.className,
							delete e.className)
					}
					function beginKeywords(e, t) {
							t && e.beginKeywords && (e.begin = "\\b(" + e.beginKeywords.split(" ").join("|") + ")(?!\\.)(?=\\b|\\s)",
							e.__beforeBegin = skipIfHasPrecedingDot,
							e.keywords = e.keywords || e.beginKeywords,
							delete e.beginKeywords,
							void 0 === e.relevance && (e.relevance = 0))
					}
					function compileIllegal(e, t) {
							Array.isArray(e.illegal) && (e.illegal = either(...e.illegal))
					}
					function compileMatch(e, t) {
							if (e.match) {
									if (e.begin || e.end)
											throw new Error("begin & end are not supported with match");
									e.begin = e.match,
									delete e.match
							}
					}
					function compileRelevance(e, t) {
							void 0 === e.relevance && (e.relevance = 1)
					}
					const beforeMatchExt = (e,t)=>{
							if (!e.beforeMatch)
									return;
							if (e.starts)
									throw new Error("beforeMatch cannot be used with starts");
							const n = Object.assign({}, e);
							Object.keys(e).forEach((t=>{
									delete e[t]
							}
							)),
							e.keywords = n.keywords,
							e.begin = concat(n.beforeMatch, lookahead(n.begin)),
							e.starts = {
									relevance: 0,
									contains: [Object.assign(n, {
											endsParent: !0
									})]
							},
							e.relevance = 0,
							delete n.beforeMatch
					}
						, C = ["of", "and", "for", "in", "not", "or", "if", "then", "parent", "list", "value"];
					function compileKeywords(e, t, n="keyword") {
							const i = Object.create(null);
							return "string" == typeof e ? compileList(n, e.split(" ")) : Array.isArray(e) ? compileList(n, e) : Object.keys(e).forEach((function(n) {
									Object.assign(i, compileKeywords(e[n], t, n))
							}
							)),
							i;
							function compileList(e, n) {
									t && (n = n.map((e=>e.toLowerCase()))),
									n.forEach((function(t) {
											const n = t.split("|");
											i[n[0]] = [e, scoreForKeyword(n[0], n[1])]
									}
									))
							}
					}
					function scoreForKeyword(e, t) {
							return t ? Number(t) : function(e) {
									return C.includes(e.toLowerCase())
							}(e) ? 0 : 1
					}
					const E = {}
						, error = e=>{
							console.error(e)
					}
						, warn = (e,...t)=>{
							console.log(`WARN: ${e}`, ...t)
					}
						, deprecated = (e,t)=>{
							E[`${e}/${t}`] || (console.log(`Deprecated as of ${e}. ${t}`),
							E[`${e}/${t}`] = !0)
					}
						, T = new Error;
					function remapScopeNames(e, t, {key: n}) {
							let i = 0;
							const r = e[n]
								, o = {}
								, s = {};
							for (let e = 1; e <= t.length; e++)
									s[e + i] = r[e],
									o[e + i] = !0,
									i += countMatchGroups(t[e - 1]);
							e[n] = s,
							e[n]._emit = o,
							e[n]._multi = !0
					}
					function MultiClass(e) {
							(function(e) {
									e.scope && "object" == typeof e.scope && null !== e.scope && (e.beginScope = e.scope,
									delete e.scope)
							}
							)(e),
							"string" == typeof e.beginScope && (e.beginScope = {
									_wrap: e.beginScope
							}),
							"string" == typeof e.endScope && (e.endScope = {
									_wrap: e.endScope
							}),
							function(e) {
									if (Array.isArray(e.begin)) {
											if (e.skip || e.excludeBegin || e.returnBegin)
													throw error("skip, excludeBegin, returnBegin not compatible with beginScope: {}"),
													T;
											if ("object" != typeof e.beginScope || null === e.beginScope)
													throw error("beginScope must be object"),
													T;
											remapScopeNames(e, e.begin, {
													key: "beginScope"
											}),
											e.begin = _rewriteBackreferences(e.begin, {
													joinWith: ""
											})
									}
							}(e),
							function(e) {
									if (Array.isArray(e.end)) {
											if (e.skip || e.excludeEnd || e.returnEnd)
													throw error("skip, excludeEnd, returnEnd not compatible with endScope: {}"),
													T;
											if ("object" != typeof e.endScope || null === e.endScope)
													throw error("endScope must be object"),
													T;
											remapScopeNames(e, e.end, {
													key: "endScope"
											}),
											e.end = _rewriteBackreferences(e.end, {
													joinWith: ""
											})
									}
							}(e)
					}
					function compileLanguage(e) {
							function langRe(t, n) {
									return new RegExp(source(t),"m" + (e.case_insensitive ? "i" : "") + (e.unicodeRegex ? "u" : "") + (n ? "g" : ""))
							}
							class MultiRegex {
									constructor() {
											this.matchIndexes = {},
											this.regexes = [],
											this.matchAt = 1,
											this.position = 0
									}
									addRule(e, t) {
											t.position = this.position++,
											this.matchIndexes[this.matchAt] = t,
											this.regexes.push([t, e]),
											this.matchAt += countMatchGroups(e) + 1
									}
									compile() {
											0 === this.regexes.length && (this.exec = ()=>null);
											const e = this.regexes.map((e=>e[1]));
											this.matcherRe = langRe(_rewriteBackreferences(e, {
													joinWith: "|"
											}), !0),
											this.lastIndex = 0
									}
									exec(e) {
											this.matcherRe.lastIndex = this.lastIndex;
											const t = this.matcherRe.exec(e);
											if (!t)
													return null;
											const n = t.findIndex(((e,t)=>t > 0 && void 0 !== e))
												, i = this.matchIndexes[n];
											return t.splice(0, n),
											Object.assign(t, i)
									}
							}
							class ResumableMultiRegex {
									constructor() {
											this.rules = [],
											this.multiRegexes = [],
											this.count = 0,
											this.lastIndex = 0,
											this.regexIndex = 0
									}
									getMatcher(e) {
											if (this.multiRegexes[e])
													return this.multiRegexes[e];
											const t = new MultiRegex;
											return this.rules.slice(e).forEach((([e,n])=>t.addRule(e, n))),
											t.compile(),
											this.multiRegexes[e] = t,
											t
									}
									resumingScanAtSamePosition() {
											return 0 !== this.regexIndex
									}
									considerAll() {
											this.regexIndex = 0
									}
									addRule(e, t) {
											this.rules.push([e, t]),
											"begin" === t.type && this.count++
									}
									exec(e) {
											const t = this.getMatcher(this.regexIndex);
											t.lastIndex = this.lastIndex;
											let n = t.exec(e);
											if (this.resumingScanAtSamePosition())
													if (n && n.index === this.lastIndex)
															;
													else {
															const t = this.getMatcher(0);
															t.lastIndex = this.lastIndex + 1,
															n = t.exec(e)
													}
											return n && (this.regexIndex += n.position + 1,
											this.regexIndex === this.count && this.considerAll()),
											n
									}
							}
							if (e.compilerExtensions || (e.compilerExtensions = []),
							e.contains && e.contains.includes("self"))
									throw new Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");
							return e.classNameAliases = inherit$1(e.classNameAliases || {}),
							function compileMode(t, n) {
									const i = t;
									if (t.isCompiled)
											return i;
									[scopeClassName, compileMatch, MultiClass, beforeMatchExt].forEach((e=>e(t, n))),
									e.compilerExtensions.forEach((e=>e(t, n))),
									t.__beforeBegin = null,
									[beginKeywords, compileIllegal, compileRelevance].forEach((e=>e(t, n))),
									t.isCompiled = !0;
									let r = null;
									return "object" == typeof t.keywords && t.keywords.$pattern && (t.keywords = Object.assign({}, t.keywords),
									r = t.keywords.$pattern,
									delete t.keywords.$pattern),
									r = r || /\w+/,
									t.keywords && (t.keywords = compileKeywords(t.keywords, e.case_insensitive)),
									i.keywordPatternRe = langRe(r, !0),
									n && (t.begin || (t.begin = /\B|\b/),
									i.beginRe = langRe(i.begin),
									t.end || t.endsWithParent || (t.end = /\B|\b/),
									t.end && (i.endRe = langRe(i.end)),
									i.terminatorEnd = source(i.end) || "",
									t.endsWithParent && n.terminatorEnd && (i.terminatorEnd += (t.end ? "|" : "") + n.terminatorEnd)),
									t.illegal && (i.illegalRe = langRe(t.illegal)),
									t.contains || (t.contains = []),
									t.contains = [].concat(...t.contains.map((function(e) {
											return function(e) {
													e.variants && !e.cachedVariants && (e.cachedVariants = e.variants.map((function(t) {
															return inherit$1(e, {
																	variants: null
															}, t)
													}
													)));
													if (e.cachedVariants)
															return e.cachedVariants;
													if (dependencyOnParent(e))
															return inherit$1(e, {
																	starts: e.starts ? inherit$1(e.starts) : null
															});
													if (Object.isFrozen(e))
															return inherit$1(e);
													return e
											}("self" === e ? t : e)
									}
									))),
									t.contains.forEach((function(e) {
											compileMode(e, i)
									}
									)),
									t.starts && compileMode(t.starts, n),
									i.matcher = function(e) {
											const t = new ResumableMultiRegex;
											return e.contains.forEach((e=>t.addRule(e.begin, {
													rule: e,
													type: "begin"
											}))),
											e.terminatorEnd && t.addRule(e.terminatorEnd, {
													type: "end"
											}),
											e.illegal && t.addRule(e.illegal, {
													type: "illegal"
											}),
											t
									}(i),
									i
							}(e)
					}
					function dependencyOnParent(e) {
							return !!e && (e.endsWithParent || dependencyOnParent(e.starts))
					}
					class HTMLInjectionError extends Error {
							constructor(e, t) {
									super(e),
									this.name = "HTMLInjectionError",
									this.html = t
							}
					}
					const I = escapeHTML
						, w = inherit$1
						, A = Symbol("nomatch");
					var R = function(e) {
							const n = Object.create(null)
								, i = Object.create(null)
								, r = [];
							let o = !0;
							const s = "Could not find the language '{}', did you forget to load/include a language module?"
								, a = {
									disableAutodetect: !0,
									name: "Plain text",
									contains: []
							};
							let l = {
									ignoreUnescapedHTML: !1,
									throwUnescapedHTML: !1,
									noHighlightRe: /^(no-?highlight)$/i,
									languageDetectRe: /\blang(?:uage)?-([\w-]+)\b/i,
									classPrefix: "hljs-",
									cssSelector: "pre code",
									languages: null,
									__emitter: TokenTreeEmitter
							};
							function shouldNotHighlight(e) {
									return l.noHighlightRe.test(e)
							}
							function highlight(e, t, n) {
									let i = ""
										, r = "";
									"object" == typeof t ? (i = e,
									n = t.ignoreIllegals,
									r = t.language) : (deprecated("10.7.0", "highlight(lang, code, ...args) has been deprecated."),
									deprecated("10.7.0", "Please use highlight(code, options) instead.\nhttps://github.com/highlightjs/highlight.js/issues/2277"),
									r = e,
									i = t),
									void 0 === n && (n = !0);
									const o = {
											code: i,
											language: r
									};
									fire("before:highlight", o);
									const s = o.result ? o.result : _highlight(o.language, o.code, n);
									return s.code = o.code,
									fire("after:highlight", s),
									s
							}
							function _highlight(e, t, i, r) {
									const a = Object.create(null);
									function processKeywords() {
											if (!h.keywords)
													return void g.addText(_);
											let e = 0;
											h.keywordPatternRe.lastIndex = 0;
											let t = h.keywordPatternRe.exec(_)
												, n = "";
											for (; t; ) {
													n += _.substring(e, t.index);
													const r = d.case_insensitive ? t[0].toLowerCase() : t[0]
														, o = (i = r,
													h.keywords[i]);
													if (o) {
															const [e,i] = o;
															if (g.addText(n),
															n = "",
															a[r] = (a[r] || 0) + 1,
															a[r] <= 7 && (f += i),
															e.startsWith("_"))
																	n += t[0];
															else {
																	const n = d.classNameAliases[e] || e;
																	g.addKeyword(t[0], n)
															}
													} else
															n += t[0];
													e = h.keywordPatternRe.lastIndex,
													t = h.keywordPatternRe.exec(_)
											}
											var i;
											n += _.substring(e),
											g.addText(n)
									}
									function processBuffer() {
											null != h.subLanguage ? function() {
													if ("" === _)
															return;
													let e = null;
													if ("string" == typeof h.subLanguage) {
															if (!n[h.subLanguage])
																	return void g.addText(_);
															e = _highlight(h.subLanguage, _, !0, m[h.subLanguage]),
															m[h.subLanguage] = e._top
													} else
															e = highlightAuto(_, h.subLanguage.length ? h.subLanguage : null);
													h.relevance > 0 && (f += e.relevance),
													g.addSublanguage(e._emitter, e.language)
											}() : processKeywords(),
											_ = ""
									}
									function emitMultiClass(e, t) {
											let n = 1;
											const i = t.length - 1;
											for (; n <= i; ) {
													if (!e._emit[n]) {
															n++;
															continue
													}
													const i = d.classNameAliases[e[n]] || e[n]
														, r = t[n];
													i ? g.addKeyword(r, i) : (_ = r,
													processKeywords(),
													_ = ""),
													n++
											}
									}
									function startNewMode(e, t) {
											return e.scope && "string" == typeof e.scope && g.openNode(d.classNameAliases[e.scope] || e.scope),
											e.beginScope && (e.beginScope._wrap ? (g.addKeyword(_, d.classNameAliases[e.beginScope._wrap] || e.beginScope._wrap),
											_ = "") : e.beginScope._multi && (emitMultiClass(e.beginScope, t),
											_ = "")),
											h = Object.create(e, {
													parent: {
															value: h
													}
											}),
											h
									}
									function endOfMode(e, t, n) {
											let i = function(e, t) {
													const n = e && e.exec(t);
													return n && 0 === n.index
											}(e.endRe, n);
											if (i) {
													if (e["on:end"]) {
															const n = new Response(e);
															e["on:end"](t, n),
															n.isMatchIgnored && (i = !1)
													}
													if (i) {
															for (; e.endsParent && e.parent; )
																	e = e.parent;
															return e
													}
											}
											if (e.endsWithParent)
													return endOfMode(e.parent, t, n)
									}
									function doIgnore(e) {
											return 0 === h.matcher.regexIndex ? (_ += e[0],
											1) : (b = !0,
											0)
									}
									function doEndMatch(e) {
											const n = e[0]
												, i = t.substring(e.index)
												, r = endOfMode(h, e, i);
											if (!r)
													return A;
											const o = h;
											h.endScope && h.endScope._wrap ? (processBuffer(),
											g.addKeyword(n, h.endScope._wrap)) : h.endScope && h.endScope._multi ? (processBuffer(),
											emitMultiClass(h.endScope, e)) : o.skip ? _ += n : (o.returnEnd || o.excludeEnd || (_ += n),
											processBuffer(),
											o.excludeEnd && (_ = n));
											do {
													h.scope && g.closeNode(),
													h.skip || h.subLanguage || (f += h.relevance),
													h = h.parent
											} while (h !== r.parent);
											return r.starts && startNewMode(r.starts, e),
											o.returnEnd ? 0 : n.length
									}
									let c = {};
									function processLexeme(n, r) {
											const s = r && r[0];
											if (_ += n,
											null == s)
													return processBuffer(),
													0;
											if ("begin" === c.type && "end" === r.type && c.index === r.index && "" === s) {
													if (_ += t.slice(r.index, r.index + 1),
													!o) {
															const t = new Error(`0 width match regex (${e})`);
															throw t.languageName = e,
															t.badRule = c.rule,
															t
													}
													return 1
											}
											if (c = r,
											"begin" === r.type)
													return function(e) {
															const t = e[0]
																, n = e.rule
																, i = new Response(n)
																, r = [n.__beforeBegin, n["on:begin"]];
															for (const n of r)
																	if (n && (n(e, i),
																	i.isMatchIgnored))
																			return doIgnore(t);
															return n.skip ? _ += t : (n.excludeBegin && (_ += t),
															processBuffer(),
															n.returnBegin || n.excludeBegin || (_ = t)),
															startNewMode(n, e),
															n.returnBegin ? 0 : t.length
													}(r);
											if ("illegal" === r.type && !i) {
													const e = new Error('Illegal lexeme "' + s + '" for mode "' + (h.scope || "<unnamed>") + '"');
													throw e.mode = h,
													e
											}
											if ("end" === r.type) {
													const e = doEndMatch(r);
													if (e !== A)
															return e
											}
											if ("illegal" === r.type && "" === s)
													return 1;
											if (v > 1e5 && v > 3 * r.index) {
													throw new Error("potential infinite loop, way more iterations than matches")
											}
											return _ += s,
											s.length
									}
									const d = getLanguage(e);
									if (!d)
											throw error(s.replace("{}", e)),
											new Error('Unknown language: "' + e + '"');
									const p = compileLanguage(d);
									let u = ""
										, h = r || p;
									const m = {}
										, g = new l.__emitter(l);
									(function() {
											const e = [];
											for (let t = h; t !== d; t = t.parent)
													t.scope && e.unshift(t.scope);
											e.forEach((e=>g.openNode(e)))
									}
									)();
									let _ = ""
										, f = 0
										, y = 0
										, v = 0
										, b = !1;
									try {
											for (h.matcher.considerAll(); ; ) {
													v++,
													b ? b = !1 : h.matcher.considerAll(),
													h.matcher.lastIndex = y;
													const e = h.matcher.exec(t);
													if (!e)
															break;
													const n = processLexeme(t.substring(y, e.index), e);
													y = e.index + n
											}
											return processLexeme(t.substring(y)),
											g.closeAllNodes(),
											g.finalize(),
											u = g.toHTML(),
											{
													language: e,
													value: u,
													relevance: f,
													illegal: !1,
													_emitter: g,
													_top: h
											}
									} catch (n) {
											if (n.message && n.message.includes("Illegal"))
													return {
															language: e,
															value: I(t),
															illegal: !0,
															relevance: 0,
															_illegalBy: {
																	message: n.message,
																	index: y,
																	context: t.slice(y - 100, y + 100),
																	mode: n.mode,
																	resultSoFar: u
															},
															_emitter: g
													};
											if (o)
													return {
															language: e,
															value: I(t),
															illegal: !1,
															relevance: 0,
															errorRaised: n,
															_emitter: g,
															_top: h
													};
											throw n
									}
							}
							function highlightAuto(e, t) {
									t = t || l.languages || Object.keys(n);
									const i = function(e) {
											const t = {
													value: I(e),
													illegal: !1,
													relevance: 0,
													_top: a,
													_emitter: new l.__emitter(l)
											};
											return t._emitter.addText(e),
											t
									}(e)
										, r = t.filter(getLanguage).filter(autoDetection).map((t=>_highlight(t, e, !1)));
									r.unshift(i);
									const o = r.sort(((e,t)=>{
											if (e.relevance !== t.relevance)
													return t.relevance - e.relevance;
											if (e.language && t.language) {
													if (getLanguage(e.language).supersetOf === t.language)
															return 1;
													if (getLanguage(t.language).supersetOf === e.language)
															return -1
											}
											return 0
									}
									))
										, [s,c] = o
										, d = s;
									return d.secondBest = c,
									d
							}
							function highlightElement(e) {
									let t = null;
									const n = function(e) {
											let t = e.className + " ";
											t += e.parentNode ? e.parentNode.className : "";
											const n = l.languageDetectRe.exec(t);
											if (n) {
													const t = getLanguage(n[1]);
													return t || (warn(s.replace("{}", n[1])),
													warn("Falling back to no-highlight mode for this block.", e)),
													t ? n[1] : "no-highlight"
											}
											return t.split(/\s+/).find((e=>shouldNotHighlight(e) || getLanguage(e)))
									}(e);
									if (shouldNotHighlight(n))
											return;
									if (fire("before:highlightElement", {
											el: e,
											language: n
									}),
									e.children.length > 0 && (l.ignoreUnescapedHTML || (console.warn("One of your code blocks includes unescaped HTML. This is a potentially serious security risk."),
									console.warn("https://github.com/highlightjs/highlight.js/wiki/security"),
									console.warn("The element with unescaped HTML:"),
									console.warn(e)),
									l.throwUnescapedHTML)) {
											throw new HTMLInjectionError("One of your code blocks includes unescaped HTML.",e.innerHTML)
									}
									t = e;
									const r = t.textContent
										, o = n ? highlight(r, {
											language: n,
											ignoreIllegals: !0
									}) : highlightAuto(r);
									e.innerHTML = o.value,
									function(e, t, n) {
											const r = t && i[t] || n;
											e.classList.add("hljs"),
											e.classList.add(`language-${r}`)
									}(e, n, o.language),
									e.result = {
											language: o.language,
											re: o.relevance,
											relevance: o.relevance
									},
									o.secondBest && (e.secondBest = {
											language: o.secondBest.language,
											relevance: o.secondBest.relevance
									}),
									fire("after:highlightElement", {
											el: e,
											result: o,
											text: r
									})
							}
							let c = !1;
							function highlightAll() {
									if ("loading" === document.readyState)
											return void (c = !0);
									document.querySelectorAll(l.cssSelector).forEach(highlightElement)
							}
							function getLanguage(e) {
									return e = (e || "").toLowerCase(),
									n[e] || n[i[e]]
							}
							function registerAliases(e, {languageName: t}) {
									"string" == typeof e && (e = [e]),
									e.forEach((e=>{
											i[e.toLowerCase()] = t
									}
									))
							}
							function autoDetection(e) {
									const t = getLanguage(e);
									return t && !t.disableAutodetect
							}
							function fire(e, t) {
									const n = e;
									r.forEach((function(e) {
											e[n] && e[n](t)
									}
									))
							}
							"undefined" != typeof window && window.addEventListener && window.addEventListener("DOMContentLoaded", (function() {
									c && highlightAll()
							}
							), !1),
							Object.assign(e, {
									highlight,
									highlightAuto,
									highlightAll,
									highlightElement,
									highlightBlock: function(e) {
											return deprecated("10.7.0", "highlightBlock will be removed entirely in v12.0"),
											deprecated("10.7.0", "Please use highlightElement now."),
											highlightElement(e)
									},
									configure: function(e) {
											l = w(l, e)
									},
									initHighlighting: ()=>{
											highlightAll(),
											deprecated("10.6.0", "initHighlighting() deprecated.  Use highlightAll() now.")
									}
									,
									initHighlightingOnLoad: function() {
											highlightAll(),
											deprecated("10.6.0", "initHighlightingOnLoad() deprecated.  Use highlightAll() now.")
									},
									registerLanguage: function(t, i) {
											let r = null;
											try {
													r = i(e)
											} catch (e) {
													if (error("Language definition for '{}' could not be registered.".replace("{}", t)),
													!o)
															throw e;
													error(e),
													r = a
											}
											r.name || (r.name = t),
											n[t] = r,
											r.rawDefinition = i.bind(null, e),
											r.aliases && registerAliases(r.aliases, {
													languageName: t
											})
									},
									unregisterLanguage: function(e) {
											delete n[e];
											for (const t of Object.keys(i))
													i[t] === e && delete i[t]
									},
									listLanguages: function() {
											return Object.keys(n)
									},
									getLanguage,
									registerAliases,
									autoDetection,
									inherit: w,
									addPlugin: function(e) {
											(function(e) {
													e["before:highlightBlock"] && !e["before:highlightElement"] && (e["before:highlightElement"] = t=>{
															e["before:highlightBlock"](Object.assign({
																	block: t.el
															}, t))
													}
													),
													e["after:highlightBlock"] && !e["after:highlightElement"] && (e["after:highlightElement"] = t=>{
															e["after:highlightBlock"](Object.assign({
																	block: t.el
															}, t))
													}
													)
											}
											)(e),
											r.push(e)
									}
							}),
							e.debugMode = function() {
									o = !1
							}
							,
							e.safeMode = function() {
									o = !0
							}
							,
							e.versionString = "11.7.0",
							e.regex = {
									concat,
									lookahead,
									either,
									optional,
									anyNumberOfTimes
							};
							for (const e in S)
									"object" == typeof S[e] && t.exports(S[e]);
							return Object.assign(e, S),
							e
					}({});
					e.exports = R,
					R.HighlightJS = R,
					R.default = R
			}
			,
			5031: (e,t,n)=>{
					var i = n(8396);
					i.registerLanguage("1c", n(5508)),
					i.registerLanguage("abnf", n(2965)),
					i.registerLanguage("accesslog", n(1075)),
					i.registerLanguage("actionscript", n(7169)),
					i.registerLanguage("ada", n(5346)),
					i.registerLanguage("angelscript", n(4239)),
					i.registerLanguage("apache", n(871)),
					i.registerLanguage("applescript", n(7626)),
					i.registerLanguage("arcade", n(925)),
					i.registerLanguage("arduino", n(7648)),
					i.registerLanguage("armasm", n(3618)),
					i.registerLanguage("xml", n(4980)),
					i.registerLanguage("asciidoc", n(1730)),
					i.registerLanguage("aspectj", n(574)),
					i.registerLanguage("autohotkey", n(7225)),
					i.registerLanguage("autoit", n(2017)),
					i.registerLanguage("avrasm", n(304)),
					i.registerLanguage("awk", n(7106)),
					i.registerLanguage("axapta", n(6783)),
					i.registerLanguage("bash", n(1914)),
					i.registerLanguage("basic", n(5606)),
					i.registerLanguage("bnf", n(2707)),
					i.registerLanguage("brainfuck", n(6932)),
					i.registerLanguage("c", n(6379)),
					i.registerLanguage("cal", n(6140)),
					i.registerLanguage("capnproto", n(82)),
					i.registerLanguage("ceylon", n(9363)),
					i.registerLanguage("clean", n(4656)),
					i.registerLanguage("clojure", n(9646)),
					i.registerLanguage("clojure-repl", n(2607)),
					i.registerLanguage("cmake", n(6691)),
					i.registerLanguage("coffeescript", n(2975)),
					i.registerLanguage("coq", n(204)),
					i.registerLanguage("cos", n(7156)),
					i.registerLanguage("cpp", n(9355)),
					i.registerLanguage("crmsh", n(1820)),
					i.registerLanguage("crystal", n(1464)),
					i.registerLanguage("csharp", n(7207)),
					i.registerLanguage("csp", n(632)),
					i.registerLanguage("css", n(3460)),
					i.registerLanguage("d", n(6509)),
					i.registerLanguage("markdown", n(1032)),
					i.registerLanguage("dart", n(9823)),
					i.registerLanguage("delphi", n(5071)),
					i.registerLanguage("diff", n(2464)),
					i.registerLanguage("django", n(8936)),
					i.registerLanguage("dns", n(5342)),
					i.registerLanguage("dockerfile", n(6826)),
					i.registerLanguage("dos", n(7892)),
					i.registerLanguage("dsconfig", n(1266)),
					i.registerLanguage("dts", n(6163)),
					i.registerLanguage("dust", n(5401)),
					i.registerLanguage("ebnf", n(3292)),
					i.registerLanguage("elixir", n(3332)),
					i.registerLanguage("elm", n(4144)),
					i.registerLanguage("ruby", n(1809)),
					i.registerLanguage("erb", n(9876)),
					i.registerLanguage("erlang-repl", n(1015)),
					i.registerLanguage("erlang", n(5214)),
					i.registerLanguage("excel", n(3424)),
					i.registerLanguage("fix", n(2743)),
					i.registerLanguage("flix", n(4516)),
					i.registerLanguage("fortran", n(1117)),
					i.registerLanguage("fsharp", n(6478)),
					i.registerLanguage("gams", n(8644)),
					i.registerLanguage("gauss", n(1321)),
					i.registerLanguage("gcode", n(7943)),
					i.registerLanguage("gherkin", n(136)),
					i.registerLanguage("glsl", n(9544)),
					i.registerLanguage("gml", n(8636)),
					i.registerLanguage("go", n(6148)),
					i.registerLanguage("golo", n(8158)),
					i.registerLanguage("gradle", n(2237)),
					i.registerLanguage("graphql", n(3489)),
					i.registerLanguage("groovy", n(7810)),
					i.registerLanguage("haml", n(3250)),
					i.registerLanguage("handlebars", n(2161)),
					i.registerLanguage("haskell", n(6536)),
					i.registerLanguage("haxe", n(5425)),
					i.registerLanguage("hsp", n(7505)),
					i.registerLanguage("http", n(1961)),
					i.registerLanguage("hy", n(9183)),
					i.registerLanguage("inform7", n(6111)),
					i.registerLanguage("ini", n(2754)),
					i.registerLanguage("irpf90", n(9140)),
					i.registerLanguage("isbl", n(4967)),
					i.registerLanguage("java", n(6829)),
					i.registerLanguage("javascript", n(5739)),
					i.registerLanguage("jboss-cli", n(893)),
					i.registerLanguage("json", n(3169)),
					i.registerLanguage("julia", n(5537)),
					i.registerLanguage("julia-repl", n(1708)),
					i.registerLanguage("kotlin", n(2672)),
					i.registerLanguage("lasso", n(1349)),
					i.registerLanguage("latex", n(7798)),
					i.registerLanguage("ldif", n(7847)),
					i.registerLanguage("leaf", n(2714)),
					i.registerLanguage("less", n(7425)),
					i.registerLanguage("lisp", n(4743)),
					i.registerLanguage("livecodeserver", n(2939)),
					i.registerLanguage("livescript", n(8429)),
					i.registerLanguage("llvm", n(8475)),
					i.registerLanguage("lsl", n(6578)),
					i.registerLanguage("lua", n(1640)),
					i.registerLanguage("makefile", n(3425)),
					i.registerLanguage("mathematica", n(6584)),
					i.registerLanguage("matlab", n(259)),
					i.registerLanguage("maxima", n(6664)),
					i.registerLanguage("mel", n(428)),
					i.registerLanguage("mercury", n(7600)),
					i.registerLanguage("mipsasm", n(294)),
					i.registerLanguage("mizar", n(5275)),
					i.registerLanguage("perl", n(1854)),
					i.registerLanguage("mojolicious", n(3539)),
					i.registerLanguage("monkey", n(6981)),
					i.registerLanguage("moonscript", n(4285)),
					i.registerLanguage("n1ql", n(4862)),
					i.registerLanguage("nestedtext", n(7510)),
					i.registerLanguage("nginx", n(7959)),
					i.registerLanguage("nim", n(7390)),
					i.registerLanguage("nix", n(1466)),
					i.registerLanguage("node-repl", n(6114)),
					i.registerLanguage("nsis", n(4941)),
					i.registerLanguage("objectivec", n(8547)),
					i.registerLanguage("ocaml", n(9379)),
					i.registerLanguage("openscad", n(8390)),
					i.registerLanguage("oxygene", n(7493)),
					i.registerLanguage("parser3", n(4479)),
					i.registerLanguage("pf", n(567)),
					i.registerLanguage("pgsql", n(8304)),
					i.registerLanguage("php", n(9496)),
					i.registerLanguage("php-template", n(8924)),
					i.registerLanguage("plaintext", n(2066)),
					i.registerLanguage("pony", n(7190)),
					i.registerLanguage("powershell", n(3344)),
					i.registerLanguage("processing", n(5148)),
					i.registerLanguage("profile", n(454)),
					i.registerLanguage("prolog", n(59)),
					i.registerLanguage("properties", n(328)),
					i.registerLanguage("protobuf", n(1460)),
					i.registerLanguage("puppet", n(673)),
					i.registerLanguage("purebasic", n(4321)),
					i.registerLanguage("python", n(3359)),
					i.registerLanguage("python-repl", n(8480)),
					i.registerLanguage("q", n(2506)),
					i.registerLanguage("qml", n(7526)),
					i.registerLanguage("r", n(3191)),
					i.registerLanguage("reasonml", n(492)),
					i.registerLanguage("rib", n(8716)),
					i.registerLanguage("roboconf", n(1467)),
					i.registerLanguage("routeros", n(3749)),
					i.registerLanguage("rsl", n(1429)),
					i.registerLanguage("ruleslanguage", n(9039)),
					i.registerLanguage("rust", n(37)),
					i.registerLanguage("sas", n(5253)),
					i.registerLanguage("scala", n(1849)),
					i.registerLanguage("scheme", n(2122)),
					i.registerLanguage("scilab", n(4728)),
					i.registerLanguage("scss", n(6482)),
					i.registerLanguage("shell", n(4509)),
					i.registerLanguage("smali", n(243)),
					i.registerLanguage("smalltalk", n(5657)),
					i.registerLanguage("sml", n(5244)),
					i.registerLanguage("sqf", n(7055)),
					i.registerLanguage("sql", n(5069)),
					i.registerLanguage("stan", n(1940)),
					i.registerLanguage("stata", n(1964)),
					i.registerLanguage("step21", n(2793)),
					i.registerLanguage("stylus", n(415)),
					i.registerLanguage("subunit", n(9503)),
					i.registerLanguage("swift", n(6437)),
					i.registerLanguage("taggerscript", n(8902)),
					i.registerLanguage("yaml", n(8425)),
					i.registerLanguage("tap", n(1441)),
					i.registerLanguage("tcl", n(1955)),
					i.registerLanguage("thrift", n(3058)),
					i.registerLanguage("tp", n(2183)),
					i.registerLanguage("twig", n(1498)),
					i.registerLanguage("typescript", n(1381)),
					i.registerLanguage("vala", n(5615)),
					i.registerLanguage("vbnet", n(3514)),
					i.registerLanguage("vbscript", n(3732)),
					i.registerLanguage("vbscript-html", n(9969)),
					i.registerLanguage("verilog", n(1838)),
					i.registerLanguage("vhdl", n(7708)),
					i.registerLanguage("vim", n(5277)),
					i.registerLanguage("wasm", n(2116)),
					i.registerLanguage("wren", n(614)),
					i.registerLanguage("x86asm", n(537)),
					i.registerLanguage("xl", n(1136)),
					i.registerLanguage("xquery", n(7942)),
					i.registerLanguage("zephir", n(2391)),
					i.HighlightJS = i,
					i.default = i,
					e.exports = i
			}
			,
			5508: e=>{
					e.exports = function(e) {
							const t = "[A-Za-zА-Яа-яёЁ_][A-Za-zА-Яа-яёЁ_0-9]+"
								, n = "далее возврат вызватьисключение выполнить для если и из или иначе иначеесли исключение каждого конецесли конецпопытки конеццикла не новый перейти перем по пока попытка прервать продолжить тогда цикл экспорт "
								, i = "null истина ложь неопределено"
								, r = e.inherit(e.NUMBER_MODE)
								, o = {
									className: "string",
									begin: '"|\\|',
									end: '"|$',
									contains: [{
											begin: '""'
									}]
							}
								, s = {
									begin: "'",
									end: "'",
									excludeBegin: !0,
									excludeEnd: !0,
									contains: [{
											className: "number",
											begin: "\\d{4}([\\.\\\\/:-]?\\d{2}){0,5}"
									}]
							}
								, a = e.inherit(e.C_LINE_COMMENT_MODE);
							return {
									name: "1C:Enterprise",
									case_insensitive: !0,
									keywords: {
											$pattern: t,
											keyword: n,
											built_in: "разделительстраниц разделительстрок символтабуляции ansitooem oemtoansi ввестивидсубконто ввестиперечисление ввестипериод ввестиплансчетов выбранныйплансчетов датагод датамесяц датачисло заголовоксистемы значениевстроку значениеизстроки каталогиб каталогпользователя кодсимв конгода конецпериодаби конецрассчитанногопериодаби конецстандартногоинтервала конквартала конмесяца коннедели лог лог10 максимальноеколичествосубконто названиеинтерфейса названиенабораправ назначитьвид назначитьсчет найтиссылки началопериодаби началостандартногоинтервала начгода начквартала начмесяца начнедели номерднягода номерднянедели номернеделигода обработкаожидания основнойжурналрасчетов основнойплансчетов основнойязык очиститьокносообщений периодстр получитьвремята получитьдатута получитьдокументта получитьзначенияотбора получитьпозициюта получитьпустоезначение получитьта префиксавтонумерации пропись пустоезначение разм разобратьпозициюдокумента рассчитатьрегистрына рассчитатьрегистрыпо симв создатьобъект статусвозврата стрколичествострок сформироватьпозициюдокумента счетпокоду текущеевремя типзначения типзначениястр установитьтана установитьтапо фиксшаблон шаблон acos asin atan base64значение base64строка cos exp log log10 pow sin sqrt tan xmlзначение xmlстрока xmlтип xmlтипзнч активноеокно безопасныйрежим безопасныйрежимразделенияданных булево ввестидату ввестизначение ввестистроку ввестичисло возможностьчтенияxml вопрос восстановитьзначение врег выгрузитьжурналрегистрации выполнитьобработкуоповещения выполнитьпроверкуправдоступа вычислить год данныеформывзначение дата день деньгода деньнедели добавитьмесяц заблокироватьданныедляредактирования заблокироватьработупользователя завершитьработусистемы загрузитьвнешнююкомпоненту закрытьсправку записатьjson записатьxml записатьдатуjson записьжурналарегистрации заполнитьзначениясвойств запроситьразрешениепользователя запуститьприложение запуститьсистему зафиксироватьтранзакцию значениевданныеформы значениевстрокувнутр значениевфайл значениезаполнено значениеизстрокивнутр значениеизфайла изxmlтипа импортмоделиxdto имякомпьютера имяпользователя инициализироватьпредопределенныеданные информацияобошибке каталогбиблиотекимобильногоустройства каталогвременныхфайлов каталогдокументов каталогпрограммы кодироватьстроку кодлокализацииинформационнойбазы кодсимвола командасистемы конецгода конецдня конецквартала конецмесяца конецминуты конецнедели конецчаса конфигурациябазыданныхизмененадинамически конфигурацияизменена копироватьданныеформы копироватьфайл краткоепредставлениеошибки лев макс местноевремя месяц мин минута монопольныйрежим найти найтинедопустимыесимволыxml найтиокнопонавигационнойссылке найтипомеченныенаудаление найтипоссылкам найтифайлы началогода началодня началоквартала началомесяца началоминуты началонедели началочаса начатьзапросразрешенияпользователя начатьзапускприложения начатькопированиефайла начатьперемещениефайла начатьподключениевнешнейкомпоненты начатьподключениерасширенияработыскриптографией начатьподключениерасширенияработысфайлами начатьпоискфайлов начатьполучениекаталогавременныхфайлов начатьполучениекаталогадокументов начатьполучениерабочегокаталогаданныхпользователя начатьполучениефайлов начатьпомещениефайла начатьпомещениефайлов начатьсозданиедвоичныхданныхизфайла начатьсозданиекаталога начатьтранзакцию начатьудалениефайлов начатьустановкувнешнейкомпоненты начатьустановкурасширенияработыскриптографией начатьустановкурасширенияработысфайлами неделягода необходимостьзавершениясоединения номерсеансаинформационнойбазы номерсоединенияинформационнойбазы нрег нстр обновитьинтерфейс обновитьнумерациюобъектов обновитьповторноиспользуемыезначения обработкапрерыванияпользователя объединитьфайлы окр описаниеошибки оповестить оповеститьобизменении отключитьобработчикзапросанастроекклиенталицензирования отключитьобработчикожидания отключитьобработчикоповещения открытьзначение открытьиндекссправки открытьсодержаниесправки открытьсправку открытьформу открытьформумодально отменитьтранзакцию очиститьжурналрегистрации очиститьнастройкипользователя очиститьсообщения параметрыдоступа перейтипонавигационнойссылке переместитьфайл подключитьвнешнююкомпоненту подключитьобработчикзапросанастроекклиенталицензирования подключитьобработчикожидания подключитьобработчикоповещения подключитьрасширениеработыскриптографией подключитьрасширениеработысфайлами подробноепредставлениеошибки показатьвводдаты показатьвводзначения показатьвводстроки показатьвводчисла показатьвопрос показатьзначение показатьинформациюобошибке показатьнакарте показатьоповещениепользователя показатьпредупреждение полноеимяпользователя получитьcomобъект получитьxmlтип получитьадреспоместоположению получитьблокировкусеансов получитьвремязавершенияспящегосеанса получитьвремязасыпанияпассивногосеанса получитьвремяожиданияблокировкиданных получитьданныевыбора получитьдополнительныйпараметрклиенталицензирования получитьдопустимыекодылокализации получитьдопустимыечасовыепояса получитьзаголовокклиентскогоприложения получитьзаголовоксистемы получитьзначенияотборажурналарегистрации получитьидентификаторконфигурации получитьизвременногохранилища получитьимявременногофайла получитьимяклиенталицензирования получитьинформациюэкрановклиента получитьиспользованиежурналарегистрации получитьиспользованиесобытияжурналарегистрации получитькраткийзаголовокприложения получитьмакетоформления получитьмаскувсефайлы получитьмаскувсефайлыклиента получитьмаскувсефайлысервера получитьместоположениепоадресу получитьминимальнуюдлинупаролейпользователей получитьнавигационнуюссылку получитьнавигационнуюссылкуинформационнойбазы получитьобновлениеконфигурациибазыданных получитьобновлениепредопределенныхданныхинформационнойбазы получитьобщиймакет получитьобщуюформу получитьокна получитьоперативнуюотметкувремени получитьотключениебезопасногорежима получитьпараметрыфункциональныхопцийинтерфейса получитьполноеимяпредопределенногозначения получитьпредставлениянавигационныхссылок получитьпроверкусложностипаролейпользователей получитьразделительпути получитьразделительпутиклиента получитьразделительпутисервера получитьсеансыинформационнойбазы получитьскоростьклиентскогосоединения получитьсоединенияинформационнойбазы получитьсообщенияпользователю получитьсоответствиеобъектаиформы получитьсоставстандартногоинтерфейсаodata получитьструктурухранениябазыданных получитьтекущийсеансинформационнойбазы получитьфайл получитьфайлы получитьформу получитьфункциональнуюопцию получитьфункциональнуюопциюинтерфейса получитьчасовойпоясинформационнойбазы пользователиос поместитьвовременноехранилище поместитьфайл поместитьфайлы прав праводоступа предопределенноезначение представлениекодалокализации представлениепериода представлениеправа представлениеприложения представлениесобытияжурналарегистрации представлениечасовогопояса предупреждение прекратитьработусистемы привилегированныйрежим продолжитьвызов прочитатьjson прочитатьxml прочитатьдатуjson пустаястрока рабочийкаталогданныхпользователя разблокироватьданныедляредактирования разделитьфайл разорватьсоединениесвнешнимисточникомданных раскодироватьстроку рольдоступна секунда сигнал символ скопироватьжурналрегистрации смещениелетнеговремени смещениестандартноговремени соединитьбуферыдвоичныхданных создатькаталог создатьфабрикуxdto сокрл сокрлп сокрп сообщить состояние сохранитьзначение сохранитьнастройкипользователя сред стрдлина стрзаканчиваетсяна стрзаменить стрнайти стрначинаетсяс строка строкасоединенияинформационнойбазы стрполучитьстроку стрразделить стрсоединить стрсравнить стрчисловхождений стрчислострок стршаблон текущаядата текущаядатасеанса текущаяуниверсальнаядата текущаяуниверсальнаядатавмиллисекундах текущийвариантинтерфейсаклиентскогоприложения текущийвариантосновногошрифтаклиентскогоприложения текущийкодлокализации текущийрежимзапуска текущийязык текущийязыксистемы тип типзнч транзакцияактивна трег удалитьданныеинформационнойбазы удалитьизвременногохранилища удалитьобъекты удалитьфайлы универсальноевремя установитьбезопасныйрежим установитьбезопасныйрежимразделенияданных установитьблокировкусеансов установитьвнешнююкомпоненту установитьвремязавершенияспящегосеанса установитьвремязасыпанияпассивногосеанса установитьвремяожиданияблокировкиданных установитьзаголовокклиентскогоприложения установитьзаголовоксистемы установитьиспользованиежурналарегистрации установитьиспользованиесобытияжурналарегистрации установитькраткийзаголовокприложения установитьминимальнуюдлинупаролейпользователей установитьмонопольныйрежим установитьнастройкиклиенталицензирования установитьобновлениепредопределенныхданныхинформационнойбазы установитьотключениебезопасногорежима установитьпараметрыфункциональныхопцийинтерфейса установитьпривилегированныйрежим установитьпроверкусложностипаролейпользователей установитьрасширениеработыскриптографией установитьрасширениеработысфайлами установитьсоединениесвнешнимисточникомданных установитьсоответствиеобъектаиформы установитьсоставстандартногоинтерфейсаodata установитьчасовойпоясинформационнойбазы установитьчасовойпояссеанса формат цел час часовойпояс часовойпояссеанса число числопрописью этоадресвременногохранилища wsссылки библиотекакартинок библиотекамакетовоформлениякомпоновкиданных библиотекастилей бизнеспроцессы внешниеисточникиданных внешниеобработки внешниеотчеты встроенныепокупки главныйинтерфейс главныйстиль документы доставляемыеуведомления журналыдокументов задачи информацияобинтернетсоединении использованиерабочейдаты историяработыпользователя константы критерииотбора метаданные обработки отображениерекламы отправкадоставляемыхуведомлений отчеты панельзадачос параметрзапуска параметрысеанса перечисления планывидоврасчета планывидовхарактеристик планыобмена планысчетов полнотекстовыйпоиск пользователиинформационнойбазы последовательности проверкавстроенныхпокупок рабочаядата расширенияконфигурации регистрыбухгалтерии регистрынакопления регистрырасчета регистрысведений регламентныезадания сериализаторxdto справочники средствагеопозиционирования средствакриптографии средствамультимедиа средстваотображениярекламы средствапочты средствателефонии фабрикаxdto файловыепотоки фоновыезадания хранилищанастроек хранилищевариантовотчетов хранилищенастроекданныхформ хранилищеобщихнастроек хранилищепользовательскихнастроекдинамическихсписков хранилищепользовательскихнастроекотчетов хранилищесистемныхнастроек ",
											class: "webцвета windowsцвета windowsшрифты библиотекакартинок рамкистиля символы цветастиля шрифтыстиля автоматическоесохранениеданныхформывнастройках автонумерациявформе автораздвижениесерий анимациядиаграммы вариантвыравниванияэлементовизаголовков вариантуправлениявысотойтаблицы вертикальнаяпрокруткаформы вертикальноеположение вертикальноеположениеэлемента видгруппыформы виддекорацииформы виддополненияэлементаформы видизмененияданных видкнопкиформы видпереключателя видподписейкдиаграмме видполяформы видфлажка влияниеразмеранапузырекдиаграммы горизонтальноеположение горизонтальноеположениеэлемента группировкаколонок группировкаподчиненныхэлементовформы группыиэлементы действиеперетаскивания дополнительныйрежимотображения допустимыедействияперетаскивания интервалмеждуэлементамиформы использованиевывода использованиеполосыпрокрутки используемоезначениеточкибиржевойдиаграммы историявыборапривводе источникзначенийоситочекдиаграммы источникзначенияразмерапузырькадиаграммы категориягруппыкоманд максимумсерий начальноеотображениедерева начальноеотображениесписка обновлениетекстаредактирования ориентациядендрограммы ориентациядиаграммы ориентацияметокдиаграммы ориентацияметоксводнойдиаграммы ориентацияэлементаформы отображениевдиаграмме отображениевлегендедиаграммы отображениегруппыкнопок отображениезаголовкашкалыдиаграммы отображениезначенийсводнойдиаграммы отображениезначенияизмерительнойдиаграммы отображениеинтерваладиаграммыганта отображениекнопки отображениекнопкивыбора отображениеобсужденийформы отображениеобычнойгруппы отображениеотрицательныхзначенийпузырьковойдиаграммы отображениепанелипоиска отображениеподсказки отображениепредупрежденияприредактировании отображениеразметкиполосырегулирования отображениестраницформы отображениетаблицы отображениетекстазначениядиаграммыганта отображениеуправленияобычнойгруппы отображениефигурыкнопки палитрацветовдиаграммы поведениеобычнойгруппы поддержкамасштабадендрограммы поддержкамасштабадиаграммыганта поддержкамасштабасводнойдиаграммы поисквтаблицепривводе положениезаголовкаэлементаформы положениекартинкикнопкиформы положениекартинкиэлементаграфическойсхемы положениекоманднойпанелиформы положениекоманднойпанелиэлементаформы положениеопорнойточкиотрисовки положениеподписейкдиаграмме положениеподписейшкалызначенийизмерительнойдиаграммы положениесостоянияпросмотра положениестрокипоиска положениетекстасоединительнойлинии положениеуправленияпоиском положениешкалывремени порядокотображенияточекгоризонтальнойгистограммы порядоксерийвлегендедиаграммы размеркартинки расположениезаголовкашкалыдиаграммы растягиваниеповертикалидиаграммыганта режимавтоотображениясостояния режимвводастроктаблицы режимвыборанезаполненного режимвыделениядаты режимвыделениястрокитаблицы режимвыделениятаблицы режимизмененияразмера режимизменениясвязанногозначения режимиспользованиядиалогапечати режимиспользованияпараметракоманды режиммасштабированияпросмотра режимосновногоокнаклиентскогоприложения режимоткрытияокнаформы режимотображениявыделения режимотображениягеографическойсхемы режимотображениязначенийсерии режимотрисовкисеткиграфическойсхемы режимполупрозрачностидиаграммы режимпробеловдиаграммы режимразмещениянастранице режимредактированияколонки режимсглаживаниядиаграммы режимсглаживанияиндикатора режимсписказадач сквозноевыравнивание сохранениеданныхформывнастройках способзаполнениятекстазаголовкашкалыдиаграммы способопределенияограничивающегозначениядиаграммы стандартнаягруппакоманд стандартноеоформление статусоповещенияпользователя стильстрелки типаппроксимациилиниитрендадиаграммы типдиаграммы типединицышкалывремени типимпортасерийслоягеографическойсхемы типлиниигеографическойсхемы типлиниидиаграммы типмаркерагеографическойсхемы типмаркерадиаграммы типобластиоформления типорганизацииисточникаданныхгеографическойсхемы типотображениясериислоягеографическойсхемы типотображенияточечногообъектагеографическойсхемы типотображенияшкалыэлементалегендыгеографическойсхемы типпоискаобъектовгеографическойсхемы типпроекциигеографическойсхемы типразмещенияизмерений типразмещенияреквизитовизмерений типрамкиэлементауправления типсводнойдиаграммы типсвязидиаграммыганта типсоединениязначенийпосериямдиаграммы типсоединенияточекдиаграммы типсоединительнойлинии типстороныэлементаграфическойсхемы типформыотчета типшкалырадарнойдиаграммы факторлиниитрендадиаграммы фигуракнопки фигурыграфическойсхемы фиксациявтаблице форматдняшкалывремени форматкартинки ширинаподчиненныхэлементовформы виддвижениябухгалтерии виддвижениянакопления видпериодарегистрарасчета видсчета видточкимаршрутабизнеспроцесса использованиеагрегатарегистранакопления использованиегруппиэлементов использованиережимапроведения использованиесреза периодичностьагрегатарегистранакопления режимавтовремя режимзаписидокумента режимпроведениядокумента авторегистрацияизменений допустимыйномерсообщения отправкаэлементаданных получениеэлементаданных использованиерасшифровкитабличногодокумента ориентациястраницы положениеитоговколоноксводнойтаблицы положениеитоговстроксводнойтаблицы положениетекстаотносительнокартинки расположениезаголовкагруппировкитабличногодокумента способчтениязначенийтабличногодокумента типдвустороннейпечати типзаполненияобластитабличногодокумента типкурсоровтабличногодокумента типлиниирисункатабличногодокумента типлинииячейкитабличногодокумента типнаправленияпереходатабличногодокумента типотображениявыделениятабличногодокумента типотображениялинийсводнойтаблицы типразмещениятекстатабличногодокумента типрисункатабличногодокумента типсмещениятабличногодокумента типузоратабличногодокумента типфайлатабличногодокумента точностьпечати чередованиерасположениястраниц отображениевремениэлементовпланировщика типфайлаформатированногодокумента обходрезультатазапроса типзаписизапроса видзаполнениярасшифровкипостроителяотчета типдобавленияпредставлений типизмеренияпостроителяотчета типразмещенияитогов доступкфайлу режимдиалогавыборафайла режимоткрытияфайла типизмеренияпостроителязапроса видданныханализа методкластеризации типединицыинтервалавременианализаданных типзаполнениятаблицырезультатаанализаданных типиспользованиячисловыхзначенийанализаданных типисточникаданныхпоискаассоциаций типколонкианализаданныхдереворешений типколонкианализаданныхкластеризация типколонкианализаданныхобщаястатистика типколонкианализаданныхпоискассоциаций типколонкианализаданныхпоискпоследовательностей типколонкимоделипрогноза типмерырасстоянияанализаданных типотсеченияправилассоциации типполяанализаданных типстандартизациианализаданных типупорядочиванияправилассоциациианализаданных типупорядочиванияшаблоновпоследовательностейанализаданных типупрощениядереварешений wsнаправлениепараметра вариантxpathxs вариантзаписидатыjson вариантпростоготипаxs видгруппымоделиxs видфасетаxdto действиепостроителяdom завершенностьпростоготипаxs завершенностьсоставноготипаxs завершенностьсхемыxs запрещенныеподстановкиxs исключениягруппподстановкиxs категорияиспользованияатрибутаxs категорияограниченияидентичностиxs категорияограниченияпространствименxs методнаследованияxs модельсодержимогоxs назначениетипаxml недопустимыеподстановкиxs обработкапробельныхсимволовxs обработкасодержимогоxs ограничениезначенияxs параметрыотбораузловdom переносстрокjson позициявдокументеdom пробельныесимволыxml типатрибутаxml типзначенияjson типканоническогоxml типкомпонентыxs типпроверкиxml типрезультатаdomxpath типузлаdom типузлаxml формаxml формапредставленияxs форматдатыjson экранированиесимволовjson видсравнениякомпоновкиданных действиеобработкирасшифровкикомпоновкиданных направлениесортировкикомпоновкиданных расположениевложенныхэлементоврезультатакомпоновкиданных расположениеитоговкомпоновкиданных расположениегруппировкикомпоновкиданных расположениеполейгруппировкикомпоновкиданных расположениеполякомпоновкиданных расположениереквизитовкомпоновкиданных расположениересурсовкомпоновкиданных типбухгалтерскогоостаткакомпоновкиданных типвыводатекстакомпоновкиданных типгруппировкикомпоновкиданных типгруппыэлементовотборакомпоновкиданных типдополненияпериодакомпоновкиданных типзаголовкаполейкомпоновкиданных типмакетагруппировкикомпоновкиданных типмакетаобластикомпоновкиданных типостаткакомпоновкиданных типпериодакомпоновкиданных типразмещениятекстакомпоновкиданных типсвязинаборовданныхкомпоновкиданных типэлементарезультатакомпоновкиданных расположениелегендыдиаграммыкомпоновкиданных типпримененияотборакомпоновкиданных режимотображенияэлементанастройкикомпоновкиданных режимотображениянастроеккомпоновкиданных состояниеэлементанастройкикомпоновкиданных способвосстановлениянастроеккомпоновкиданных режимкомпоновкирезультата использованиепараметракомпоновкиданных автопозицияресурсовкомпоновкиданных вариантиспользованиягруппировкикомпоновкиданных расположениересурсоввдиаграммекомпоновкиданных фиксациякомпоновкиданных использованиеусловногооформлениякомпоновкиданных важностьинтернетпочтовогосообщения обработкатекстаинтернетпочтовогосообщения способкодированияинтернетпочтовоговложения способкодированиянеasciiсимволовинтернетпочтовогосообщения типтекстапочтовогосообщения протоколинтернетпочты статусразборапочтовогосообщения режимтранзакциизаписижурналарегистрации статустранзакциизаписижурналарегистрации уровеньжурналарегистрации расположениехранилищасертификатовкриптографии режимвключениясертификатовкриптографии режимпроверкисертификатакриптографии типхранилищасертификатовкриптографии кодировкаименфайловвzipфайле методсжатияzip методшифрованияzip режимвосстановленияпутейфайловzip режимобработкиподкаталоговzip режимсохраненияпутейzip уровеньсжатияzip звуковоеоповещение направлениепереходакстроке позициявпотоке порядокбайтов режимблокировкиданных режимуправленияблокировкойданных сервисвстроенныхпокупок состояниефоновогозадания типподписчикадоставляемыхуведомлений уровеньиспользованиязащищенногосоединенияftp направлениепорядкасхемызапроса типдополненияпериодамисхемызапроса типконтрольнойточкисхемызапроса типобъединениясхемызапроса типпараметрадоступнойтаблицысхемызапроса типсоединениясхемызапроса httpметод автоиспользованиеобщегореквизита автопрефиксномеразадачи вариантвстроенногоязыка видиерархии видрегистранакопления видтаблицывнешнегоисточникаданных записьдвиженийприпроведении заполнениепоследовательностей индексирование использованиебазыпланавидоврасчета использованиебыстроговыбора использованиеобщегореквизита использованиеподчинения использованиеполнотекстовогопоиска использованиеразделяемыхданныхобщегореквизита использованиереквизита назначениеиспользованияприложения назначениерасширенияконфигурации направлениепередачи обновлениепредопределенныхданных оперативноепроведение основноепредставлениевидарасчета основноепредставлениевидахарактеристики основноепредставлениезадачи основноепредставлениепланаобмена основноепредставлениесправочника основноепредставлениесчета перемещениеграницыприпроведении периодичностьномерабизнеспроцесса периодичностьномерадокумента периодичностьрегистрарасчета периодичностьрегистрасведений повторноеиспользованиевозвращаемыхзначений полнотекстовыйпоискпривводепостроке принадлежностьобъекта проведение разделениеаутентификацииобщегореквизита разделениеданныхобщегореквизита разделениерасширенийконфигурацииобщегореквизита режимавтонумерацииобъектов режимзаписирегистра режимиспользованиямодальности режимиспользованиясинхронныхвызововрасширенийплатформыивнешнихкомпонент режимповторногоиспользованиясеансов режимполученияданныхвыборапривводепостроке режимсовместимости режимсовместимостиинтерфейса режимуправленияблокировкойданныхпоумолчанию сериикодовпланавидовхарактеристик сериикодовпланасчетов сериикодовсправочника созданиепривводе способвыбора способпоискастрокипривводепостроке способредактирования типданныхтаблицывнешнегоисточникаданных типкодапланавидоврасчета типкодасправочника типмакета типномерабизнеспроцесса типномерадокумента типномеразадачи типформы удалениедвижений важностьпроблемыприменениярасширенияконфигурации вариантинтерфейсаклиентскогоприложения вариантмасштабаформклиентскогоприложения вариантосновногошрифтаклиентскогоприложения вариантстандартногопериода вариантстандартнойдатыначала видграницы видкартинки видотображенияполнотекстовогопоиска видрамки видсравнения видцвета видчисловогозначения видшрифта допустимаядлина допустимыйзнак использованиеbyteordermark использованиеметаданныхполнотекстовогопоиска источникрасширенийконфигурации клавиша кодвозвратадиалога кодировкаxbase кодировкатекста направлениепоиска направлениесортировки обновлениепредопределенныхданных обновлениеприизмененииданных отображениепанелиразделов проверказаполнения режимдиалогавопрос режимзапускаклиентскогоприложения режимокругления режимоткрытияформприложения режимполнотекстовогопоиска скоростьклиентскогосоединения состояниевнешнегоисточникаданных состояниеобновленияконфигурациибазыданных способвыборасертификатаwindows способкодированиястроки статуссообщения типвнешнейкомпоненты типплатформы типповеденияклавишиenter типэлементаинформацииовыполненииобновленияконфигурациибазыданных уровеньизоляциитранзакций хешфункция частидаты",
											type: "comобъект ftpсоединение httpзапрос httpсервисответ httpсоединение wsопределения wsпрокси xbase анализданных аннотацияxs блокировкаданных буфердвоичныхданных включениеxs выражениекомпоновкиданных генераторслучайныхчисел географическаясхема географическиекоординаты графическаясхема группамоделиxs данныерасшифровкикомпоновкиданных двоичныеданные дендрограмма диаграмма диаграммаганта диалогвыборафайла диалогвыборацвета диалогвыборашрифта диалограсписаниярегламентногозадания диалогредактированиястандартногопериода диапазон документdom документhtml документацияxs доставляемоеуведомление записьdom записьfastinfoset записьhtml записьjson записьxml записьzipфайла записьданных записьтекста записьузловdom запрос защищенноесоединениеopenssl значенияполейрасшифровкикомпоновкиданных извлечениетекста импортxs интернетпочта интернетпочтовоесообщение интернетпочтовыйпрофиль интернетпрокси интернетсоединение информациядляприложенияxs использованиеатрибутаxs использованиесобытияжурналарегистрации источникдоступныхнастроеккомпоновкиданных итераторузловdom картинка квалификаторыдаты квалификаторыдвоичныхданных квалификаторыстроки квалификаторычисла компоновщикмакетакомпоновкиданных компоновщикнастроеккомпоновкиданных конструктормакетаоформлениякомпоновкиданных конструкторнастроеккомпоновкиданных конструкторформатнойстроки линия макеткомпоновкиданных макетобластикомпоновкиданных макетоформлениякомпоновкиданных маскаxs менеджеркриптографии наборсхемxml настройкикомпоновкиданных настройкисериализацииjson обработкакартинок обработкарасшифровкикомпоновкиданных обходдереваdom объявлениеатрибутаxs объявлениенотацииxs объявлениеэлементаxs описаниеиспользованиясобытиядоступжурналарегистрации описаниеиспользованиясобытияотказвдоступежурналарегистрации описаниеобработкирасшифровкикомпоновкиданных описаниепередаваемогофайла описаниетипов определениегруппыатрибутовxs определениегруппымоделиxs определениеограниченияидентичностиxs определениепростоготипаxs определениесоставноготипаxs определениетипадокументаdom определенияxpathxs отборкомпоновкиданных пакетотображаемыхдокументов параметрвыбора параметркомпоновкиданных параметрызаписиjson параметрызаписиxml параметрычтенияxml переопределениеxs планировщик полеанализаданных полекомпоновкиданных построительdom построительзапроса построительотчета построительотчетаанализаданных построительсхемxml поток потоквпамяти почта почтовоесообщение преобразованиеxsl преобразованиекканоническомуxml процессорвыводарезультатакомпоновкиданныхвколлекциюзначений процессорвыводарезультатакомпоновкиданныхвтабличныйдокумент процессоркомпоновкиданных разыменовательпространствименdom рамка расписаниерегламентногозадания расширенноеимяxml результатчтенияданных своднаядиаграмма связьпараметравыбора связьпотипу связьпотипукомпоновкиданных сериализаторxdto сертификатклиентаwindows сертификатклиентафайл сертификаткриптографии сертификатыудостоверяющихцентровwindows сертификатыудостоверяющихцентровфайл сжатиеданных системнаяинформация сообщениепользователю сочетаниеклавиш сравнениезначений стандартнаядатаначала стандартныйпериод схемаxml схемакомпоновкиданных табличныйдокумент текстовыйдокумент тестируемоеприложение типданныхxml уникальныйидентификатор фабрикаxdto файл файловыйпоток фасетдлиныxs фасетколичестваразрядовдробнойчастиxs фасетмаксимальноговключающегозначенияxs фасетмаксимальногоисключающегозначенияxs фасетмаксимальнойдлиныxs фасетминимальноговключающегозначенияxs фасетминимальногоисключающегозначенияxs фасетминимальнойдлиныxs фасетобразцаxs фасетобщегоколичестваразрядовxs фасетперечисленияxs фасетпробельныхсимволовxs фильтрузловdom форматированнаястрока форматированныйдокумент фрагментxs хешированиеданных хранилищезначения цвет чтениеfastinfoset чтениеhtml чтениеjson чтениеxml чтениеzipфайла чтениеданных чтениетекста чтениеузловdom шрифт элементрезультатакомпоновкиданных comsafearray деревозначений массив соответствие списокзначений структура таблицазначений фиксированнаяструктура фиксированноесоответствие фиксированныймассив ",
											literal: i
									},
									contains: [{
											className: "meta",
											begin: "#|&",
											end: "$",
											keywords: {
													$pattern: t,
													keyword: n + "загрузитьизфайла вебклиент вместо внешнеесоединение клиент конецобласти мобильноеприложениеклиент мобильноеприложениесервер наклиенте наклиентенасервере наклиентенасерверебезконтекста насервере насерверебезконтекста область перед после сервер толстыйклиентобычноеприложение толстыйклиентуправляемоеприложение тонкийклиент "
											},
											contains: [a]
									}, {
											className: "function",
											variants: [{
													begin: "процедура|функция",
													end: "\\)",
													keywords: "процедура функция"
											}, {
													begin: "конецпроцедуры|конецфункции",
													keywords: "конецпроцедуры конецфункции"
											}],
											contains: [{
													begin: "\\(",
													end: "\\)",
													endsParent: !0,
													contains: [{
															className: "params",
															begin: t,
															end: ",",
															excludeEnd: !0,
															endsWithParent: !0,
															keywords: {
																	$pattern: t,
																	keyword: "знач",
																	literal: i
															},
															contains: [r, o, s]
													}, a]
											}, e.inherit(e.TITLE_MODE, {
													begin: t
											})]
									}, a, {
											className: "symbol",
											begin: "~",
											end: ";|:",
											excludeEnd: !0
									}, r, o, s]
							}
					}
			}
			,
			2965: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = e.COMMENT(/;/, /$/);
							return {
									name: "Augmented Backus-Naur Form",
									illegal: /[!@#$^&',?+~`|:]/,
									keywords: ["ALPHA", "BIT", "CHAR", "CR", "CRLF", "CTL", "DIGIT", "DQUOTE", "HEXDIG", "HTAB", "LF", "LWSP", "OCTET", "SP", "VCHAR", "WSP"],
									contains: [{
											scope: "operator",
											match: /=\/?/
									}, {
											scope: "attribute",
											match: t.concat(/^[a-zA-Z][a-zA-Z0-9-]*/, /(?=\s*=)/)
									}, n, {
											scope: "symbol",
											match: /%b[0-1]+(-[0-1]+|(\.[0-1]+)+)?/
									}, {
											scope: "symbol",
											match: /%d[0-9]+(-[0-9]+|(\.[0-9]+)+)?/
									}, {
											scope: "symbol",
											match: /%x[0-9A-F]+(-[0-9A-F]+|(\.[0-9A-F]+)+)?/
									}, {
											scope: "symbol",
											match: /%[si](?=".*")/
									}, e.QUOTE_STRING_MODE, e.NUMBER_MODE]
							}
					}
			}
			,
			1075: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = ["GET", "POST", "HEAD", "PUT", "DELETE", "CONNECT", "OPTIONS", "PATCH", "TRACE"];
							return {
									name: "Apache Access Log",
									contains: [{
											className: "number",
											begin: /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(:\d{1,5})?\b/,
											relevance: 5
									}, {
											className: "number",
											begin: /\b\d+\b/,
											relevance: 0
									}, {
											className: "string",
											begin: t.concat(/"/, t.either(...n)),
											end: /"/,
											keywords: n,
											illegal: /\n/,
											relevance: 5,
											contains: [{
													begin: /HTTP\/[12]\.\d'/,
													relevance: 5
											}]
									}, {
											className: "string",
											begin: /\[\d[^\]\n]{8,}\]/,
											illegal: /\n/,
											relevance: 1
									}, {
											className: "string",
											begin: /\[/,
											end: /\]/,
											illegal: /\n/,
											relevance: 0
									}, {
											className: "string",
											begin: /"Mozilla\/\d\.\d \(/,
											end: /"/,
											illegal: /\n/,
											relevance: 3
									}, {
											className: "string",
											begin: /"/,
											end: /"/,
											illegal: /\n/,
											relevance: 0
									}]
							}
					}
			}
			,
			7169: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = /[a-zA-Z_$][a-zA-Z0-9_$]*/
								, i = t.concat(n, t.concat("(\\.", n, ")*"))
								, r = {
									className: "rest_arg",
									begin: /[.]{3}/,
									end: n,
									relevance: 10
							};
							return {
									name: "ActionScript",
									aliases: ["as"],
									keywords: {
											keyword: ["as", "break", "case", "catch", "class", "const", "continue", "default", "delete", "do", "dynamic", "each", "else", "extends", "final", "finally", "for", "function", "get", "if", "implements", "import", "in", "include", "instanceof", "interface", "internal", "is", "namespace", "native", "new", "override", "package", "private", "protected", "public", "return", "set", "static", "super", "switch", "this", "throw", "try", "typeof", "use", "var", "void", "while", "with"],
											literal: ["true", "false", "null", "undefined"]
									},
									contains: [e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.C_NUMBER_MODE, {
											match: [/\bpackage/, /\s+/, i],
											className: {
													1: "keyword",
													3: "title.class"
											}
									}, {
											match: [/\b(?:class|interface|extends|implements)/, /\s+/, n],
											className: {
													1: "keyword",
													3: "title.class"
											}
									}, {
											className: "meta",
											beginKeywords: "import include",
											end: /;/,
											keywords: {
													keyword: "import include"
											}
									}, {
											beginKeywords: "function",
											end: /[{;]/,
											excludeEnd: !0,
											illegal: /\S/,
											contains: [e.inherit(e.TITLE_MODE, {
													className: "title.function"
											}), {
													className: "params",
													begin: /\(/,
													end: /\)/,
													contains: [e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, r]
											}, {
													begin: t.concat(/:\s*/, /([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)/)
											}]
									}, e.METHOD_GUARD],
									illegal: /#/
							}
					}
			}
			,
			5346: e=>{
					e.exports = function(e) {
							const t = "\\d(_|\\d)*"
								, n = "[eE][-+]?" + t
								, i = "\\b(" + (t + "#\\w+(\\.\\w+)?#(" + n + ")?") + "|" + (t + "(\\." + t + ")?(" + n + ")?") + ")"
								, r = "[A-Za-z](_?[A-Za-z0-9.])*"
								, o = "[]\\{\\}%#'\""
								, s = e.COMMENT("--", "$")
								, a = {
									begin: "\\s+:\\s+",
									end: "\\s*(:=|;|\\)|=>|$)",
									illegal: o,
									contains: [{
											beginKeywords: "loop for declare others",
											endsParent: !0
									}, {
											className: "keyword",
											beginKeywords: "not null constant access function procedure in out aliased exception"
									}, {
											className: "type",
											begin: r,
											endsParent: !0,
											relevance: 0
									}]
							};
							return {
									name: "Ada",
									case_insensitive: !0,
									keywords: {
											keyword: ["abort", "else", "new", "return", "abs", "elsif", "not", "reverse", "abstract", "end", "accept", "entry", "select", "access", "exception", "of", "separate", "aliased", "exit", "or", "some", "all", "others", "subtype", "and", "for", "out", "synchronized", "array", "function", "overriding", "at", "tagged", "generic", "package", "task", "begin", "goto", "pragma", "terminate", "body", "private", "then", "if", "procedure", "type", "case", "in", "protected", "constant", "interface", "is", "raise", "use", "declare", "range", "delay", "limited", "record", "when", "delta", "loop", "rem", "while", "digits", "renames", "with", "do", "mod", "requeue", "xor"],
											literal: ["True", "False"]
									},
									contains: [s, {
											className: "string",
											begin: /"/,
											end: /"/,
											contains: [{
													begin: /""/,
													relevance: 0
											}]
									}, {
											className: "string",
											begin: /'.'/
									}, {
											className: "number",
											begin: i,
											relevance: 0
									}, {
											className: "symbol",
											begin: "'" + r
									}, {
											className: "title",
											begin: "(\\bwith\\s+)?(\\bprivate\\s+)?\\bpackage\\s+(\\bbody\\s+)?",
											end: "(is|$)",
											keywords: "package body",
											excludeBegin: !0,
											excludeEnd: !0,
											illegal: o
									}, {
											begin: "(\\b(with|overriding)\\s+)?\\b(function|procedure)\\s+",
											end: "(\\bis|\\bwith|\\brenames|\\)\\s*;)",
											keywords: "overriding function procedure with is renames return",
											returnBegin: !0,
											contains: [s, {
													className: "title",
													begin: "(\\bwith\\s+)?\\b(function|procedure)\\s+",
													end: "(\\(|\\s+|$)",
													excludeBegin: !0,
													excludeEnd: !0,
													illegal: o
											}, a, {
													className: "type",
													begin: "\\breturn\\s+",
													end: "(\\s+|;|$)",
													keywords: "return",
													excludeBegin: !0,
													excludeEnd: !0,
													endsParent: !0,
													illegal: o
											}]
									}, {
											className: "type",
											begin: "\\b(sub)?type\\s+",
											end: "\\s+",
											keywords: "type",
											excludeBegin: !0,
											illegal: o
									}, a]
							}
					}
			}
			,
			4239: e=>{
					e.exports = function(e) {
							const t = {
									className: "built_in",
									begin: "\\b(void|bool|int8|int16|int32|int64|int|uint8|uint16|uint32|uint64|uint|string|ref|array|double|float|auto|dictionary)"
							}
								, n = {
									className: "symbol",
									begin: "[a-zA-Z0-9_]+@"
							}
								, i = {
									className: "keyword",
									begin: "<",
									end: ">",
									contains: [t, n]
							};
							return t.contains = [i],
							n.contains = [i],
							{
									name: "AngelScript",
									aliases: ["asc"],
									keywords: ["for", "in|0", "break", "continue", "while", "do|0", "return", "if", "else", "case", "switch", "namespace", "is", "cast", "or", "and", "xor", "not", "get|0", "in", "inout|10", "out", "override", "set|0", "private", "public", "const", "default|0", "final", "shared", "external", "mixin|10", "enum", "typedef", "funcdef", "this", "super", "import", "from", "interface", "abstract|0", "try", "catch", "protected", "explicit", "property"],
									illegal: "(^using\\s+[A-Za-z0-9_\\.]+;$|\\bfunction\\s*[^\\(])",
									contains: [{
											className: "string",
											begin: "'",
											end: "'",
											illegal: "\\n",
											contains: [e.BACKSLASH_ESCAPE],
											relevance: 0
									}, {
											className: "string",
											begin: '"""',
											end: '"""'
									}, {
											className: "string",
											begin: '"',
											end: '"',
											illegal: "\\n",
											contains: [e.BACKSLASH_ESCAPE],
											relevance: 0
									}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, {
											className: "string",
											begin: "^\\s*\\[",
											end: "\\]"
									}, {
											beginKeywords: "interface namespace",
											end: /\{/,
											illegal: "[;.\\-]",
											contains: [{
													className: "symbol",
													begin: "[a-zA-Z0-9_]+"
											}]
									}, {
											beginKeywords: "class",
											end: /\{/,
											illegal: "[;.\\-]",
											contains: [{
													className: "symbol",
													begin: "[a-zA-Z0-9_]+",
													contains: [{
															begin: "[:,]\\s*",
															contains: [{
																	className: "symbol",
																	begin: "[a-zA-Z0-9_]+"
															}]
													}]
											}]
									}, t, n, {
											className: "literal",
											begin: "\\b(null|true|false)"
									}, {
											className: "number",
											relevance: 0,
											begin: "(-?)(\\b0[xXbBoOdD][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?f?|\\.\\d+f?)([eE][-+]?\\d+f?)?)"
									}]
							}
					}
			}
			,
			871: e=>{
					e.exports = function(e) {
							const t = {
									className: "number",
									begin: /\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(:\d{1,5})?/
							};
							return {
									name: "Apache config",
									aliases: ["apacheconf"],
									case_insensitive: !0,
									contains: [e.HASH_COMMENT_MODE, {
											className: "section",
											begin: /<\/?/,
											end: />/,
											contains: [t, {
													className: "number",
													begin: /:\d{1,5}/
											}, e.inherit(e.QUOTE_STRING_MODE, {
													relevance: 0
											})]
									}, {
											className: "attribute",
											begin: /\w+/,
											relevance: 0,
											keywords: {
													_: ["order", "deny", "allow", "setenv", "rewriterule", "rewriteengine", "rewritecond", "documentroot", "sethandler", "errordocument", "loadmodule", "options", "header", "listen", "serverroot", "servername"]
											},
											starts: {
													end: /$/,
													relevance: 0,
													keywords: {
															literal: "on off all deny allow"
													},
													contains: [{
															className: "meta",
															begin: /\s\[/,
															end: /\]$/
													}, {
															className: "variable",
															begin: /[\$%]\{/,
															end: /\}/,
															contains: ["self", {
																	className: "number",
																	begin: /[$%]\d+/
															}]
													}, t, {
															className: "number",
															begin: /\b\d+/
													}, e.QUOTE_STRING_MODE]
											}
									}],
									illegal: /\S/
							}
					}
			}
			,
			7626: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = e.inherit(e.QUOTE_STRING_MODE, {
									illegal: null
							})
								, i = {
									className: "params",
									begin: /\(/,
									end: /\)/,
									contains: ["self", e.C_NUMBER_MODE, n]
							}
								, r = e.COMMENT(/--/, /$/)
								, o = [r, e.COMMENT(/\(\*/, /\*\)/, {
									contains: ["self", r]
							}), e.HASH_COMMENT_MODE];
							return {
									name: "AppleScript",
									aliases: ["osascript"],
									keywords: {
											keyword: "about above after against and around as at back before beginning behind below beneath beside between but by considering contain contains continue copy div does eighth else end equal equals error every exit fifth first for fourth from front get given global if ignoring in into is it its last local me middle mod my ninth not of on onto or over prop property put ref reference repeat returning script second set seventh since sixth some tell tenth that the|0 then third through thru timeout times to transaction try until where while whose with without",
											literal: "AppleScript false linefeed return pi quote result space tab true",
											built_in: "alias application boolean class constant date file integer list number real record string text activate beep count delay launch log offset read round run say summarize write character characters contents day frontmost id item length month name|0 paragraph paragraphs rest reverse running time version weekday word words year"
									},
									contains: [n, e.C_NUMBER_MODE, {
											className: "built_in",
											begin: t.concat(/\b/, t.either(/clipboard info/, /the clipboard/, /info for/, /list (disks|folder)/, /mount volume/, /path to/, /(close|open for) access/, /(get|set) eof/, /current date/, /do shell script/, /get volume settings/, /random number/, /set volume/, /system attribute/, /system info/, /time to GMT/, /(load|run|store) script/, /scripting components/, /ASCII (character|number)/, /localized string/, /choose (application|color|file|file name|folder|from list|remote application|URL)/, /display (alert|dialog)/), /\b/)
									}, {
											className: "built_in",
											begin: /^\s*return\b/
									}, {
											className: "literal",
											begin: /\b(text item delimiters|current application|missing value)\b/
									}, {
											className: "keyword",
											begin: t.concat(/\b/, t.either(/apart from/, /aside from/, /instead of/, /out of/, /greater than/, /isn't|(doesn't|does not) (equal|come before|come after|contain)/, /(greater|less) than( or equal)?/, /(starts?|ends|begins?) with/, /contained by/, /comes (before|after)/, /a (ref|reference)/, /POSIX (file|path)/, /(date|time) string/, /quoted form/), /\b/)
									}, {
											beginKeywords: "on",
											illegal: /[${=;\n]/,
											contains: [e.UNDERSCORE_TITLE_MODE, i]
									}, ...o],
									illegal: /\/\/|->|=>|\[\[/
							}
					}
			}
			,
			925: e=>{
					e.exports = function(e) {
							const t = "[A-Za-z_][0-9A-Za-z_]*"
								, n = {
									keyword: ["if", "for", "while", "var", "new", "function", "do", "return", "void", "else", "break"],
									literal: ["BackSlash", "DoubleQuote", "false", "ForwardSlash", "Infinity", "NaN", "NewLine", "null", "PI", "SingleQuote", "Tab", "TextFormatting", "true", "undefined"],
									built_in: ["Abs", "Acos", "All", "Angle", "Any", "Area", "AreaGeodetic", "Array", "Asin", "Atan", "Atan2", "Attachments", "Average", "Back", "Bearing", "Boolean", "Buffer", "BufferGeodetic", "Ceil", "Centroid", "Clip", "Concatenate", "Console", "Constrain", "Contains", "ConvertDirection", "Cos", "Count", "Crosses", "Cut", "Date", "DateAdd", "DateDiff", "Day", "Decode", "DefaultValue", "Densify", "DensifyGeodetic", "Dictionary", "Difference", "Disjoint", "Distance", "DistanceGeodetic", "Distinct", "Domain", "DomainCode", "DomainName", "EnvelopeIntersects", "Equals", "Erase", "Exp", "Expects", "Extent", "Feature", "FeatureSet", "FeatureSetByAssociation", "FeatureSetById", "FeatureSetByName", "FeatureSetByPortalItem", "FeatureSetByRelationshipName", "Filter", "Find", "First", "Floor", "FromCharCode", "FromCodePoint", "FromJSON", "GdbVersion", "Generalize", "Geometry", "GetFeatureSet", "GetUser", "GroupBy", "Guid", "Hash", "HasKey", "Hour", "IIf", "Includes", "IndexOf", "Insert", "Intersection", "Intersects", "IsEmpty", "IsNan", "ISOMonth", "ISOWeek", "ISOWeekday", "ISOYear", "IsSelfIntersecting", "IsSimple", "Left|0", "Length", "Length3D", "LengthGeodetic", "Log", "Lower", "Map", "Max", "Mean", "Mid", "Millisecond", "Min", "Minute", "Month", "MultiPartToSinglePart", "Multipoint", "NextSequenceValue", "None", "Now", "Number", "Offset|0", "OrderBy", "Overlaps", "Point", "Polygon", "Polyline", "Pop", "Portal", "Pow", "Proper", "Push", "Random", "Reduce", "Relate", "Replace", "Resize", "Reverse", "Right|0", "RingIsClockwise", "Rotate", "Round", "Schema", "Second", "SetGeometry", "Simplify", "Sin", "Slice", "Sort", "Splice", "Split", "Sqrt", "Stdev", "SubtypeCode", "SubtypeName", "Subtypes", "Sum", "SymmetricDifference", "Tan", "Text", "Timestamp", "ToCharCode", "ToCodePoint", "Today", "ToHex", "ToLocal", "Top|0", "Touches", "ToUTC", "TrackAccelerationAt", "TrackAccelerationWindow", "TrackCurrentAcceleration", "TrackCurrentDistance", "TrackCurrentSpeed", "TrackCurrentTime", "TrackDistanceAt", "TrackDistanceWindow", "TrackDuration", "TrackFieldWindow", "TrackGeometryWindow", "TrackIndex", "TrackSpeedAt", "TrackSpeedWindow", "TrackStartTime", "TrackWindow", "Trim", "TypeOf", "Union", "Upper", "UrlEncode", "Variance", "Week", "Weekday", "When", "Within", "Year"]
							}
								, i = {
									className: "number",
									variants: [{
											begin: "\\b(0[bB][01]+)"
									}, {
											begin: "\\b(0[oO][0-7]+)"
									}, {
											begin: e.C_NUMBER_RE
									}],
									relevance: 0
							}
								, r = {
									className: "subst",
									begin: "\\$\\{",
									end: "\\}",
									keywords: n,
									contains: []
							}
								, o = {
									className: "string",
									begin: "`",
									end: "`",
									contains: [e.BACKSLASH_ESCAPE, r]
							};
							r.contains = [e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, o, i, e.REGEXP_MODE];
							const s = r.contains.concat([e.C_BLOCK_COMMENT_MODE, e.C_LINE_COMMENT_MODE]);
							return {
									name: "ArcGIS Arcade",
									case_insensitive: !0,
									keywords: n,
									contains: [e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, o, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, {
											className: "symbol",
											begin: "\\$[datastore|feature|layer|map|measure|sourcefeature|sourcelayer|targetfeature|targetlayer|value|view]+"
									}, i, {
											begin: /[{,]\s*/,
											relevance: 0,
											contains: [{
													begin: t + "\\s*:",
													returnBegin: !0,
													relevance: 0,
													contains: [{
															className: "attr",
															begin: t,
															relevance: 0
													}]
											}]
									}, {
											begin: "(" + e.RE_STARTERS_RE + "|\\b(return)\\b)\\s*",
											keywords: "return",
											contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.REGEXP_MODE, {
													className: "function",
													begin: "(\\(.*?\\)|" + t + ")\\s*=>",
													returnBegin: !0,
													end: "\\s*=>",
													contains: [{
															className: "params",
															variants: [{
																	begin: t
															}, {
																	begin: /\(\s*\)/
															}, {
																	begin: /\(/,
																	end: /\)/,
																	excludeBegin: !0,
																	excludeEnd: !0,
																	keywords: n,
																	contains: s
															}]
													}]
											}],
											relevance: 0
									}, {
											beginKeywords: "function",
											end: /\{/,
											excludeEnd: !0,
											contains: [e.inherit(e.TITLE_MODE, {
													className: "title.function",
													begin: t
											}), {
													className: "params",
													begin: /\(/,
													end: /\)/,
													excludeBegin: !0,
													excludeEnd: !0,
													contains: s
											}],
											illegal: /\[|%/
									}, {
											begin: /\$[(.]/
									}],
									illegal: /#(?!!)/
							}
					}
			}
			,
			7648: e=>{
					e.exports = function(e) {
							const t = {
									type: ["boolean", "byte", "word", "String"],
									built_in: ["KeyboardController", "MouseController", "SoftwareSerial", "EthernetServer", "EthernetClient", "LiquidCrystal", "RobotControl", "GSMVoiceCall", "EthernetUDP", "EsploraTFT", "HttpClient", "RobotMotor", "WiFiClient", "GSMScanner", "FileSystem", "Scheduler", "GSMServer", "YunClient", "YunServer", "IPAddress", "GSMClient", "GSMModem", "Keyboard", "Ethernet", "Console", "GSMBand", "Esplora", "Stepper", "Process", "WiFiUDP", "GSM_SMS", "Mailbox", "USBHost", "Firmata", "PImage", "Client", "Server", "GSMPIN", "FileIO", "Bridge", "Serial", "EEPROM", "Stream", "Mouse", "Audio", "Servo", "File", "Task", "GPRS", "WiFi", "Wire", "TFT", "GSM", "SPI", "SD"],
									_hints: ["setup", "loop", "runShellCommandAsynchronously", "analogWriteResolution", "retrieveCallingNumber", "printFirmwareVersion", "analogReadResolution", "sendDigitalPortPair", "noListenOnLocalhost", "readJoystickButton", "setFirmwareVersion", "readJoystickSwitch", "scrollDisplayRight", "getVoiceCallStatus", "scrollDisplayLeft", "writeMicroseconds", "delayMicroseconds", "beginTransmission", "getSignalStrength", "runAsynchronously", "getAsynchronously", "listenOnLocalhost", "getCurrentCarrier", "readAccelerometer", "messageAvailable", "sendDigitalPorts", "lineFollowConfig", "countryNameWrite", "runShellCommand", "readStringUntil", "rewindDirectory", "readTemperature", "setClockDivider", "readLightSensor", "endTransmission", "analogReference", "detachInterrupt", "countryNameRead", "attachInterrupt", "encryptionType", "readBytesUntil", "robotNameWrite", "readMicrophone", "robotNameRead", "cityNameWrite", "userNameWrite", "readJoystickY", "readJoystickX", "mouseReleased", "openNextFile", "scanNetworks", "noInterrupts", "digitalWrite", "beginSpeaker", "mousePressed", "isActionDone", "mouseDragged", "displayLogos", "noAutoscroll", "addParameter", "remoteNumber", "getModifiers", "keyboardRead", "userNameRead", "waitContinue", "processInput", "parseCommand", "printVersion", "readNetworks", "writeMessage", "blinkVersion", "cityNameRead", "readMessage", "setDataMode", "parsePacket", "isListening", "setBitOrder", "beginPacket", "isDirectory", "motorsWrite", "drawCompass", "digitalRead", "clearScreen", "serialEvent", "rightToLeft", "setTextSize", "leftToRight", "requestFrom", "keyReleased", "compassRead", "analogWrite", "interrupts", "WiFiServer", "disconnect", "playMelody", "parseFloat", "autoscroll", "getPINUsed", "setPINUsed", "setTimeout", "sendAnalog", "readSlider", "analogRead", "beginWrite", "createChar", "motorsStop", "keyPressed", "tempoWrite", "readButton", "subnetMask", "debugPrint", "macAddress", "writeGreen", "randomSeed", "attachGPRS", "readString", "sendString", "remotePort", "releaseAll", "mouseMoved", "background", "getXChange", "getYChange", "answerCall", "getResult", "voiceCall", "endPacket", "constrain", "getSocket", "writeJSON", "getButton", "available", "connected", "findUntil", "readBytes", "exitValue", "readGreen", "writeBlue", "startLoop", "IPAddress", "isPressed", "sendSysex", "pauseMode", "gatewayIP", "setCursor", "getOemKey", "tuneWrite", "noDisplay", "loadImage", "switchPIN", "onRequest", "onReceive", "changePIN", "playFile", "noBuffer", "parseInt", "overflow", "checkPIN", "knobRead", "beginTFT", "bitClear", "updateIR", "bitWrite", "position", "writeRGB", "highByte", "writeRed", "setSpeed", "readBlue", "noStroke", "remoteIP", "transfer", "shutdown", "hangCall", "beginSMS", "endWrite", "attached", "maintain", "noCursor", "checkReg", "checkPUK", "shiftOut", "isValid", "shiftIn", "pulseIn", "connect", "println", "localIP", "pinMode", "getIMEI", "display", "noBlink", "process", "getBand", "running", "beginSD", "drawBMP", "lowByte", "setBand", "release", "bitRead", "prepare", "pointTo", "readRed", "setMode", "noFill", "remove", "listen", "stroke", "detach", "attach", "noTone", "exists", "buffer", "height", "bitSet", "circle", "config", "cursor", "random", "IRread", "setDNS", "endSMS", "getKey", "micros", "millis", "begin", "print", "write", "ready", "flush", "width", "isPIN", "blink", "clear", "press", "mkdir", "rmdir", "close", "point", "yield", "image", "BSSID", "click", "delay", "read", "text", "move", "peek", "beep", "rect", "line", "open", "seek", "fill", "size", "turn", "stop", "home", "find", "step", "tone", "sqrt", "RSSI", "SSID", "end", "bit", "tan", "cos", "sin", "pow", "map", "abs", "max", "min", "get", "run", "put"],
									literal: ["DIGITAL_MESSAGE", "FIRMATA_STRING", "ANALOG_MESSAGE", "REPORT_DIGITAL", "REPORT_ANALOG", "INPUT_PULLUP", "SET_PIN_MODE", "INTERNAL2V56", "SYSTEM_RESET", "LED_BUILTIN", "INTERNAL1V1", "SYSEX_START", "INTERNAL", "EXTERNAL", "DEFAULT", "OUTPUT", "INPUT", "HIGH", "LOW"]
							}
								, n = function(e) {
									const t = e.regex
										, n = e.COMMENT("//", "$", {
											contains: [{
													begin: /\\\n/
											}]
									})
										, i = "decltype\\(auto\\)"
										, r = "[a-zA-Z_]\\w*::"
										, o = "(?!struct)(" + i + "|" + t.optional(r) + "[a-zA-Z_]\\w*" + t.optional("<[^<>]+>") + ")"
										, s = {
											className: "type",
											begin: "\\b[a-z\\d_]*_t\\b"
									}
										, a = {
											className: "string",
											variants: [{
													begin: '(u8?|U|L)?"',
													end: '"',
													illegal: "\\n",
													contains: [e.BACKSLASH_ESCAPE]
											}, {
													begin: "(u8?|U|L)?'(\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)|.)",
													end: "'",
													illegal: "."
											}, e.END_SAME_AS_BEGIN({
													begin: /(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,
													end: /\)([^()\\ ]{0,16})"/
											})]
									}
										, l = {
											className: "number",
											variants: [{
													begin: "\\b(0b[01']+)"
											}, {
													begin: "(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)"
											}, {
													begin: "(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"
											}],
											relevance: 0
									}
										, c = {
											className: "meta",
											begin: /#\s*[a-z]+\b/,
											end: /$/,
											keywords: {
													keyword: "if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include"
											},
											contains: [{
													begin: /\\\n/,
													relevance: 0
											}, e.inherit(a, {
													className: "string"
											}), {
													className: "string",
													begin: /<.*?>/
											}, n, e.C_BLOCK_COMMENT_MODE]
									}
										, d = {
											className: "title",
											begin: t.optional(r) + e.IDENT_RE,
											relevance: 0
									}
										, p = t.optional(r) + e.IDENT_RE + "\\s*\\("
										, u = {
											type: ["bool", "char", "char16_t", "char32_t", "char8_t", "double", "float", "int", "long", "short", "void", "wchar_t", "unsigned", "signed", "const", "static"],
											keyword: ["alignas", "alignof", "and", "and_eq", "asm", "atomic_cancel", "atomic_commit", "atomic_noexcept", "auto", "bitand", "bitor", "break", "case", "catch", "class", "co_await", "co_return", "co_yield", "compl", "concept", "const_cast|10", "consteval", "constexpr", "constinit", "continue", "decltype", "default", "delete", "do", "dynamic_cast|10", "else", "enum", "explicit", "export", "extern", "false", "final", "for", "friend", "goto", "if", "import", "inline", "module", "mutable", "namespace", "new", "noexcept", "not", "not_eq", "nullptr", "operator", "or", "or_eq", "override", "private", "protected", "public", "reflexpr", "register", "reinterpret_cast|10", "requires", "return", "sizeof", "static_assert", "static_cast|10", "struct", "switch", "synchronized", "template", "this", "thread_local", "throw", "transaction_safe", "transaction_safe_dynamic", "true", "try", "typedef", "typeid", "typename", "union", "using", "virtual", "volatile", "while", "xor", "xor_eq"],
											literal: ["NULL", "false", "nullopt", "nullptr", "true"],
											built_in: ["_Pragma"],
											_type_hints: ["any", "auto_ptr", "barrier", "binary_semaphore", "bitset", "complex", "condition_variable", "condition_variable_any", "counting_semaphore", "deque", "false_type", "future", "imaginary", "initializer_list", "istringstream", "jthread", "latch", "lock_guard", "multimap", "multiset", "mutex", "optional", "ostringstream", "packaged_task", "pair", "promise", "priority_queue", "queue", "recursive_mutex", "recursive_timed_mutex", "scoped_lock", "set", "shared_future", "shared_lock", "shared_mutex", "shared_timed_mutex", "shared_ptr", "stack", "string_view", "stringstream", "timed_mutex", "thread", "true_type", "tuple", "unique_lock", "unique_ptr", "unordered_map", "unordered_multimap", "unordered_multiset", "unordered_set", "variant", "vector", "weak_ptr", "wstring", "wstring_view"]
									}
										, h = {
											className: "function.dispatch",
											relevance: 0,
											keywords: {
													_hint: ["abort", "abs", "acos", "apply", "as_const", "asin", "atan", "atan2", "calloc", "ceil", "cerr", "cin", "clog", "cos", "cosh", "cout", "declval", "endl", "exchange", "exit", "exp", "fabs", "floor", "fmod", "forward", "fprintf", "fputs", "free", "frexp", "fscanf", "future", "invoke", "isalnum", "isalpha", "iscntrl", "isdigit", "isgraph", "islower", "isprint", "ispunct", "isspace", "isupper", "isxdigit", "labs", "launder", "ldexp", "log", "log10", "make_pair", "make_shared", "make_shared_for_overwrite", "make_tuple", "make_unique", "malloc", "memchr", "memcmp", "memcpy", "memset", "modf", "move", "pow", "printf", "putchar", "puts", "realloc", "scanf", "sin", "sinh", "snprintf", "sprintf", "sqrt", "sscanf", "std", "stderr", "stdin", "stdout", "strcat", "strchr", "strcmp", "strcpy", "strcspn", "strlen", "strncat", "strncmp", "strncpy", "strpbrk", "strrchr", "strspn", "strstr", "swap", "tan", "tanh", "terminate", "to_underlying", "tolower", "toupper", "vfprintf", "visit", "vprintf", "vsprintf"]
											},
											begin: t.concat(/\b/, /(?!decltype)/, /(?!if)/, /(?!for)/, /(?!switch)/, /(?!while)/, e.IDENT_RE, t.lookahead(/(<[^<>]+>|)\s*\(/))
									}
										, m = [h, c, s, n, e.C_BLOCK_COMMENT_MODE, l, a]
										, g = {
											variants: [{
													begin: /=/,
													end: /;/
											}, {
													begin: /\(/,
													end: /\)/
											}, {
													beginKeywords: "new throw return else",
													end: /;/
											}],
											keywords: u,
											contains: m.concat([{
													begin: /\(/,
													end: /\)/,
													keywords: u,
													contains: m.concat(["self"]),
													relevance: 0
											}]),
											relevance: 0
									}
										, _ = {
											className: "function",
											begin: "(" + o + "[\\*&\\s]+)+" + p,
											returnBegin: !0,
											end: /[{;=]/,
											excludeEnd: !0,
											keywords: u,
											illegal: /[^\w\s\*&:<>.]/,
											contains: [{
													begin: i,
													keywords: u,
													relevance: 0
											}, {
													begin: p,
													returnBegin: !0,
													contains: [d],
													relevance: 0
											}, {
													begin: /::/,
													relevance: 0
											}, {
													begin: /:/,
													endsWithParent: !0,
													contains: [a, l]
											}, {
													relevance: 0,
													match: /,/
											}, {
													className: "params",
													begin: /\(/,
													end: /\)/,
													keywords: u,
													relevance: 0,
													contains: [n, e.C_BLOCK_COMMENT_MODE, a, l, s, {
															begin: /\(/,
															end: /\)/,
															keywords: u,
															relevance: 0,
															contains: ["self", n, e.C_BLOCK_COMMENT_MODE, a, l, s]
													}]
											}, s, n, e.C_BLOCK_COMMENT_MODE, c]
									};
									return {
											name: "C++",
											aliases: ["cc", "c++", "h++", "hpp", "hh", "hxx", "cxx"],
											keywords: u,
											illegal: "</",
											classNameAliases: {
													"function.dispatch": "built_in"
											},
											contains: [].concat(g, _, h, m, [c, {
													begin: "\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\s*<(?!<)",
													end: ">",
													keywords: u,
													contains: ["self", s]
											}, {
													begin: e.IDENT_RE + "::",
													keywords: u
											}, {
													match: [/\b(?:enum(?:\s+(?:class|struct))?|class|struct|union)/, /\s+/, /\w+/],
													className: {
															1: "keyword",
															3: "title.class"
													}
											}])
									}
							}(e)
								, i = n.keywords;
							return i.type = [...i.type, ...t.type],
							i.literal = [...i.literal, ...t.literal],
							i.built_in = [...i.built_in, ...t.built_in],
							i._hints = t._hints,
							n.name = "Arduino",
							n.aliases = ["ino"],
							n.supersetOf = "cpp",
							n
					}
			}
			,
			3618: e=>{
					e.exports = function(e) {
							const t = {
									variants: [e.COMMENT("^[ \\t]*(?=#)", "$", {
											relevance: 0,
											excludeBegin: !0
									}), e.COMMENT("[;@]", "$", {
											relevance: 0
									}), e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
							};
							return {
									name: "ARM Assembly",
									case_insensitive: !0,
									aliases: ["arm"],
									keywords: {
											$pattern: "\\.?" + e.IDENT_RE,
											meta: ".2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .arm .thumb .code16 .code32 .force_thumb .thumb_func .ltorg ALIAS ALIGN ARM AREA ASSERT ATTR CN CODE CODE16 CODE32 COMMON CP DATA DCB DCD DCDU DCDO DCFD DCFDU DCI DCQ DCQU DCW DCWU DN ELIF ELSE END ENDFUNC ENDIF ENDP ENTRY EQU EXPORT EXPORTAS EXTERN FIELD FILL FUNCTION GBLA GBLL GBLS GET GLOBAL IF IMPORT INCBIN INCLUDE INFO KEEP LCLA LCLL LCLS LTORG MACRO MAP MEND MEXIT NOFP OPT PRESERVE8 PROC QN READONLY RELOC REQUIRE REQUIRE8 RLIST FN ROUT SETA SETL SETS SN SPACE SUBT THUMB THUMBX TTL WHILE WEND ",
											built_in: "r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 pc lr sp ip sl sb fp a1 a2 a3 a4 v1 v2 v3 v4 v5 v6 v7 v8 f0 f1 f2 f3 f4 f5 f6 f7 p0 p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14 p15 c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 q0 q1 q2 q3 q4 q5 q6 q7 q8 q9 q10 q11 q12 q13 q14 q15 cpsr_c cpsr_x cpsr_s cpsr_f cpsr_cx cpsr_cxs cpsr_xs cpsr_xsf cpsr_sf cpsr_cxsf spsr_c spsr_x spsr_s spsr_f spsr_cx spsr_cxs spsr_xs spsr_xsf spsr_sf spsr_cxsf s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12 d13 d14 d15 d16 d17 d18 d19 d20 d21 d22 d23 d24 d25 d26 d27 d28 d29 d30 d31 {PC} {VAR} {TRUE} {FALSE} {OPT} {CONFIG} {ENDIAN} {CODESIZE} {CPU} {FPU} {ARCHITECTURE} {PCSTOREOFFSET} {ARMASM_VERSION} {INTER} {ROPI} {RWPI} {SWST} {NOSWST} . @"
									},
									contains: [{
											className: "keyword",
											begin: "\\b(adc|(qd?|sh?|u[qh]?)?add(8|16)?|usada?8|(q|sh?|u[qh]?)?(as|sa)x|and|adrl?|sbc|rs[bc]|asr|b[lx]?|blx|bxj|cbn?z|tb[bh]|bic|bfc|bfi|[su]bfx|bkpt|cdp2?|clz|clrex|cmp|cmn|cpsi[ed]|cps|setend|dbg|dmb|dsb|eor|isb|it[te]{0,3}|lsl|lsr|ror|rrx|ldm(([id][ab])|f[ds])?|ldr((s|ex)?[bhd])?|movt?|mvn|mra|mar|mul|[us]mull|smul[bwt][bt]|smu[as]d|smmul|smmla|mla|umlaal|smlal?([wbt][bt]|d)|mls|smlsl?[ds]|smc|svc|sev|mia([bt]{2}|ph)?|mrr?c2?|mcrr2?|mrs|msr|orr|orn|pkh(tb|bt)|rbit|rev(16|sh)?|sel|[su]sat(16)?|nop|pop|push|rfe([id][ab])?|stm([id][ab])?|str(ex)?[bhd]?|(qd?)?sub|(sh?|q|u[qh]?)?sub(8|16)|[su]xt(a?h|a?b(16)?)|srs([id][ab])?|swpb?|swi|smi|tst|teq|wfe|wfi|yield)(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al|hs|lo)?[sptrx]?(?=\\s)"
									}, t, e.QUOTE_STRING_MODE, {
											className: "string",
											begin: "'",
											end: "[^\\\\]'",
											relevance: 0
									}, {
											className: "title",
											begin: "\\|",
											end: "\\|",
											illegal: "\\n",
											relevance: 0
									}, {
											className: "number",
											variants: [{
													begin: "[#$=]?0x[0-9a-f]+"
											}, {
													begin: "[#$=]?0b[01]+"
											}, {
													begin: "[#$=]\\d+"
											}, {
													begin: "\\b\\d+"
											}],
											relevance: 0
									}, {
											className: "symbol",
											variants: [{
													begin: "^[ \\t]*[a-z_\\.\\$][a-z0-9_\\.\\$]+:"
											}, {
													begin: "^[a-z_\\.\\$][a-z0-9_\\.\\$]+"
											}, {
													begin: "[=#]\\w+"
											}],
											relevance: 0
									}]
							}
					}
			}
			,
			1730: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = [{
									className: "strong",
									begin: /\*{2}([^\n]+?)\*{2}/
							}, {
									className: "strong",
									begin: t.concat(/\*\*/, /((\*(?!\*)|\\[^\n]|[^*\n\\])+\n)+/, /(\*(?!\*)|\\[^\n]|[^*\n\\])*/, /\*\*/),
									relevance: 0
							}, {
									className: "strong",
									begin: /\B\*(\S|\S[^\n]*?\S)\*(?!\w)/
							}, {
									className: "strong",
									begin: /\*[^\s]([^\n]+\n)+([^\n]+)\*/
							}]
								, i = [{
									className: "emphasis",
									begin: /_{2}([^\n]+?)_{2}/
							}, {
									className: "emphasis",
									begin: t.concat(/__/, /((_(?!_)|\\[^\n]|[^_\n\\])+\n)+/, /(_(?!_)|\\[^\n]|[^_\n\\])*/, /__/),
									relevance: 0
							}, {
									className: "emphasis",
									begin: /\b_(\S|\S[^\n]*?\S)_(?!\w)/
							}, {
									className: "emphasis",
									begin: /_[^\s]([^\n]+\n)+([^\n]+)_/
							}, {
									className: "emphasis",
									begin: "\\B'(?!['\\s])",
									end: "(\\n{2}|')",
									contains: [{
											begin: "\\\\'\\w",
											relevance: 0
									}],
									relevance: 0
							}];
							return {
									name: "AsciiDoc",
									aliases: ["adoc"],
									contains: [e.COMMENT("^/{4,}\\n", "\\n/{4,}$", {
											relevance: 10
									}), e.COMMENT("^//", "$", {
											relevance: 0
									}), {
											className: "title",
											begin: "^\\.\\w.*$"
									}, {
											begin: "^[=\\*]{4,}\\n",
											end: "\\n^[=\\*]{4,}$",
											relevance: 10
									}, {
											className: "section",
											relevance: 10,
											variants: [{
													begin: "^(={1,6})[ \t].+?([ \t]\\1)?$"
											}, {
													begin: "^[^\\[\\]\\n]+?\\n[=\\-~\\^\\+]{2,}$"
											}]
									}, {
											className: "meta",
											begin: "^:.+?:",
											end: "\\s",
											excludeEnd: !0,
											relevance: 10
									}, {
											className: "meta",
											begin: "^\\[.+?\\]$",
											relevance: 0
									}, {
											className: "quote",
											begin: "^_{4,}\\n",
											end: "\\n_{4,}$",
											relevance: 10
									}, {
											className: "code",
											begin: "^[\\-\\.]{4,}\\n",
											end: "\\n[\\-\\.]{4,}$",
											relevance: 10
									}, {
											begin: "^\\+{4,}\\n",
											end: "\\n\\+{4,}$",
											contains: [{
													begin: "<",
													end: ">",
													subLanguage: "xml",
													relevance: 0
											}],
											relevance: 10
									}, {
											className: "bullet",
											begin: "^(\\*+|-+|\\.+|[^\\n]+?::)\\s+"
									}, {
											className: "symbol",
											begin: "^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\s+",
											relevance: 10
									}, {
											begin: /\\[*_`]/
									}, {
											begin: /\\\\\*{2}[^\n]*?\*{2}/
									}, {
											begin: /\\\\_{2}[^\n]*_{2}/
									}, {
											begin: /\\\\`{2}[^\n]*`{2}/
									}, {
											begin: /[:;}][*_`](?![*_`])/
									}, ...n, ...i, {
											className: "string",
											variants: [{
													begin: "``.+?''"
											}, {
													begin: "`.+?'"
											}]
									}, {
											className: "code",
											begin: /`{2}/,
											end: /(\n{2}|`{2})/
									}, {
											className: "code",
											begin: "(`.+?`|\\+.+?\\+)",
											relevance: 0
									}, {
											className: "code",
											begin: "^[ \\t]",
											end: "$",
											relevance: 0
									}, {
											begin: "^'{3,}[ \\t]*$",
											relevance: 10
									}, {
											begin: "(link:)?(http|https|ftp|file|irc|image:?):\\S+?\\[[^[]*?\\]",
											returnBegin: !0,
											contains: [{
													begin: "(link|image:?):",
													relevance: 0
											}, {
													className: "link",
													begin: "\\w",
													end: "[^\\[]+",
													relevance: 0
											}, {
													className: "string",
													begin: "\\[",
													end: "\\]",
													excludeBegin: !0,
													excludeEnd: !0,
													relevance: 0
											}],
											relevance: 10
									}]
							}
					}
			}
			,
			574: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = ["false", "synchronized", "int", "abstract", "float", "private", "char", "boolean", "static", "null", "if", "const", "for", "true", "while", "long", "throw", "strictfp", "finally", "protected", "import", "native", "final", "return", "void", "enum", "else", "extends", "implements", "break", "transient", "new", "catch", "instanceof", "byte", "super", "volatile", "case", "assert", "short", "package", "default", "double", "public", "try", "this", "switch", "continue", "throws", "privileged", "aspectOf", "adviceexecution", "proceed", "cflowbelow", "cflow", "initialization", "preinitialization", "staticinitialization", "withincode", "target", "within", "execution", "getWithinTypeName", "handler", "thisJoinPoint", "thisJoinPointStaticPart", "thisEnclosingJoinPointStaticPart", "declare", "parents", "warning", "error", "soft", "precedence", "thisAspectInstance"]
								, i = ["get", "set", "args", "call"];
							return {
									name: "AspectJ",
									keywords: n,
									illegal: /<\/|#/,
									contains: [e.COMMENT(/\/\*\*/, /\*\//, {
											relevance: 0,
											contains: [{
													begin: /\w+@/,
													relevance: 0
											}, {
													className: "doctag",
													begin: /@[A-Za-z]+/
											}]
									}), e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, {
											className: "class",
											beginKeywords: "aspect",
											end: /[{;=]/,
											excludeEnd: !0,
											illegal: /[:;"\[\]]/,
											contains: [{
													beginKeywords: "extends implements pertypewithin perthis pertarget percflowbelow percflow issingleton"
											}, e.UNDERSCORE_TITLE_MODE, {
													begin: /\([^\)]*/,
													end: /[)]+/,
													keywords: n.concat(i),
													excludeEnd: !1
											}]
									}, {
											className: "class",
											beginKeywords: "class interface",
											end: /[{;=]/,
											excludeEnd: !0,
											relevance: 0,
											keywords: "class interface",
											illegal: /[:"\[\]]/,
											contains: [{
													beginKeywords: "extends implements"
											}, e.UNDERSCORE_TITLE_MODE]
									}, {
											beginKeywords: "pointcut after before around throwing returning",
											end: /[)]/,
											excludeEnd: !1,
											illegal: /["\[\]]/,
											contains: [{
													begin: t.concat(e.UNDERSCORE_IDENT_RE, /\s*\(/),
													returnBegin: !0,
													contains: [e.UNDERSCORE_TITLE_MODE]
											}]
									}, {
											begin: /[:]/,
											returnBegin: !0,
											end: /[{;]/,
											relevance: 0,
											excludeEnd: !1,
											keywords: n,
											illegal: /["\[\]]/,
											contains: [{
													begin: t.concat(e.UNDERSCORE_IDENT_RE, /\s*\(/),
													keywords: n.concat(i),
													relevance: 0
											}, e.QUOTE_STRING_MODE]
									}, {
											beginKeywords: "new throw",
											relevance: 0
									}, {
											className: "function",
											begin: /\w+ +\w+(\.\w+)?\s*\([^\)]*\)\s*((throws)[\w\s,]+)?[\{;]/,
											returnBegin: !0,
											end: /[{;=]/,
											keywords: n,
											excludeEnd: !0,
											contains: [{
													begin: t.concat(e.UNDERSCORE_IDENT_RE, /\s*\(/),
													returnBegin: !0,
													relevance: 0,
													contains: [e.UNDERSCORE_TITLE_MODE]
											}, {
													className: "params",
													begin: /\(/,
													end: /\)/,
													relevance: 0,
													keywords: n,
													contains: [e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, e.C_NUMBER_MODE, e.C_BLOCK_COMMENT_MODE]
											}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
									}, e.C_NUMBER_MODE, {
											className: "meta",
											begin: /@[A-Za-z]+/
									}]
							}
					}
			}
			,
			7225: e=>{
					e.exports = function(e) {
							const t = {
									begin: "`[\\s\\S]"
							};
							return {
									name: "AutoHotkey",
									case_insensitive: !0,
									aliases: ["ahk"],
									keywords: {
											keyword: "Break Continue Critical Exit ExitApp Gosub Goto New OnExit Pause return SetBatchLines SetTimer Suspend Thread Throw Until ahk_id ahk_class ahk_pid ahk_exe ahk_group",
											literal: "true false NOT AND OR",
											built_in: "ComSpec Clipboard ClipboardAll ErrorLevel"
									},
									contains: [t, e.inherit(e.QUOTE_STRING_MODE, {
											contains: [t]
									}), e.COMMENT(";", "$", {
											relevance: 0
									}), e.C_BLOCK_COMMENT_MODE, {
											className: "number",
											begin: e.NUMBER_RE,
											relevance: 0
									}, {
											className: "variable",
											begin: "%[a-zA-Z0-9#_$@]+%"
									}, {
											className: "built_in",
											begin: "^\\s*\\w+\\s*(,|%)"
									}, {
											className: "title",
											variants: [{
													begin: '^[^\\n";]+::(?!=)'
											}, {
													begin: '^[^\\n";]+:(?!=)',
													relevance: 0
											}]
									}, {
											className: "meta",
											begin: "^\\s*#\\w+",
											end: "$",
											relevance: 0
									}, {
											className: "built_in",
											begin: "A_[a-zA-Z0-9]+"
									}, {
											begin: ",\\s*,"
									}]
							}
					}
			}
			,
			2017: e=>{
					e.exports = function(e) {
							const t = {
									variants: [e.COMMENT(";", "$", {
											relevance: 0
									}), e.COMMENT("#cs", "#ce"), e.COMMENT("#comments-start", "#comments-end")]
							}
								, n = {
									begin: "\\$[A-z0-9_]+"
							}
								, i = {
									className: "string",
									variants: [{
											begin: /"/,
											end: /"/,
											contains: [{
													begin: /""/,
													relevance: 0
											}]
									}, {
											begin: /'/,
											end: /'/,
											contains: [{
													begin: /''/,
													relevance: 0
											}]
									}]
							}
								, r = {
									variants: [e.BINARY_NUMBER_MODE, e.C_NUMBER_MODE]
							};
							return {
									name: "AutoIt",
									case_insensitive: !0,
									illegal: /\/\*/,
									keywords: {
											keyword: "ByRef Case Const ContinueCase ContinueLoop Dim Do Else ElseIf EndFunc EndIf EndSelect EndSwitch EndWith Enum Exit ExitLoop For Func Global If In Local Next ReDim Return Select Static Step Switch Then To Until Volatile WEnd While With",
											built_in: "Abs ACos AdlibRegister AdlibUnRegister Asc AscW ASin Assign ATan AutoItSetOption AutoItWinGetTitle AutoItWinSetTitle Beep Binary BinaryLen BinaryMid BinaryToString BitAND BitNOT BitOR BitRotate BitShift BitXOR BlockInput Break Call CDTray Ceiling Chr ChrW ClipGet ClipPut ConsoleRead ConsoleWrite ConsoleWriteError ControlClick ControlCommand ControlDisable ControlEnable ControlFocus ControlGetFocus ControlGetHandle ControlGetPos ControlGetText ControlHide ControlListView ControlMove ControlSend ControlSetText ControlShow ControlTreeView Cos Dec DirCopy DirCreate DirGetSize DirMove DirRemove DllCall DllCallAddress DllCallbackFree DllCallbackGetPtr DllCallbackRegister DllClose DllOpen DllStructCreate DllStructGetData DllStructGetPtr DllStructGetSize DllStructSetData DriveGetDrive DriveGetFileSystem DriveGetLabel DriveGetSerial DriveGetType DriveMapAdd DriveMapDel DriveMapGet DriveSetLabel DriveSpaceFree DriveSpaceTotal DriveStatus EnvGet EnvSet EnvUpdate Eval Execute Exp FileChangeDir FileClose FileCopy FileCreateNTFSLink FileCreateShortcut FileDelete FileExists FileFindFirstFile FileFindNextFile FileFlush FileGetAttrib FileGetEncoding FileGetLongName FileGetPos FileGetShortcut FileGetShortName FileGetSize FileGetTime FileGetVersion FileInstall FileMove FileOpen FileOpenDialog FileRead FileReadLine FileReadToArray FileRecycle FileRecycleEmpty FileSaveDialog FileSelectFolder FileSetAttrib FileSetEnd FileSetPos FileSetTime FileWrite FileWriteLine Floor FtpSetProxy FuncName GUICreate GUICtrlCreateAvi GUICtrlCreateButton GUICtrlCreateCheckbox GUICtrlCreateCombo GUICtrlCreateContextMenu GUICtrlCreateDate GUICtrlCreateDummy GUICtrlCreateEdit GUICtrlCreateGraphic GUICtrlCreateGroup GUICtrlCreateIcon GUICtrlCreateInput GUICtrlCreateLabel GUICtrlCreateList GUICtrlCreateListView GUICtrlCreateListViewItem GUICtrlCreateMenu GUICtrlCreateMenuItem GUICtrlCreateMonthCal GUICtrlCreateObj GUICtrlCreatePic GUICtrlCreateProgress GUICtrlCreateRadio GUICtrlCreateSlider GUICtrlCreateTab GUICtrlCreateTabItem GUICtrlCreateTreeView GUICtrlCreateTreeViewItem GUICtrlCreateUpdown GUICtrlDelete GUICtrlGetHandle GUICtrlGetState GUICtrlRead GUICtrlRecvMsg GUICtrlRegisterListViewSort GUICtrlSendMsg GUICtrlSendToDummy GUICtrlSetBkColor GUICtrlSetColor GUICtrlSetCursor GUICtrlSetData GUICtrlSetDefBkColor GUICtrlSetDefColor GUICtrlSetFont GUICtrlSetGraphic GUICtrlSetImage GUICtrlSetLimit GUICtrlSetOnEvent GUICtrlSetPos GUICtrlSetResizing GUICtrlSetState GUICtrlSetStyle GUICtrlSetTip GUIDelete GUIGetCursorInfo GUIGetMsg GUIGetStyle GUIRegisterMsg GUISetAccelerators GUISetBkColor GUISetCoord GUISetCursor GUISetFont GUISetHelp GUISetIcon GUISetOnEvent GUISetState GUISetStyle GUIStartGroup GUISwitch Hex HotKeySet HttpSetProxy HttpSetUserAgent HWnd InetClose InetGet InetGetInfo InetGetSize InetRead IniDelete IniRead IniReadSection IniReadSectionNames IniRenameSection IniWrite IniWriteSection InputBox Int IsAdmin IsArray IsBinary IsBool IsDeclared IsDllStruct IsFloat IsFunc IsHWnd IsInt IsKeyword IsNumber IsObj IsPtr IsString Log MemGetStats Mod MouseClick MouseClickDrag MouseDown MouseGetCursor MouseGetPos MouseMove MouseUp MouseWheel MsgBox Number ObjCreate ObjCreateInterface ObjEvent ObjGet ObjName OnAutoItExitRegister OnAutoItExitUnRegister Ping PixelChecksum PixelGetColor PixelSearch ProcessClose ProcessExists ProcessGetStats ProcessList ProcessSetPriority ProcessWait ProcessWaitClose ProgressOff ProgressOn ProgressSet Ptr Random RegDelete RegEnumKey RegEnumVal RegRead RegWrite Round Run RunAs RunAsWait RunWait Send SendKeepActive SetError SetExtended ShellExecute ShellExecuteWait Shutdown Sin Sleep SoundPlay SoundSetWaveVolume SplashImageOn SplashOff SplashTextOn Sqrt SRandom StatusbarGetText StderrRead StdinWrite StdioClose StdoutRead String StringAddCR StringCompare StringFormat StringFromASCIIArray StringInStr StringIsAlNum StringIsAlpha StringIsASCII StringIsDigit StringIsFloat StringIsInt StringIsLower StringIsSpace StringIsUpper StringIsXDigit StringLeft StringLen StringLower StringMid StringRegExp StringRegExpReplace StringReplace StringReverse StringRight StringSplit StringStripCR StringStripWS StringToASCIIArray StringToBinary StringTrimLeft StringTrimRight StringUpper Tan TCPAccept TCPCloseSocket TCPConnect TCPListen TCPNameToIP TCPRecv TCPSend TCPShutdown, UDPShutdown TCPStartup, UDPStartup TimerDiff TimerInit ToolTip TrayCreateItem TrayCreateMenu TrayGetMsg TrayItemDelete TrayItemGetHandle TrayItemGetState TrayItemGetText TrayItemSetOnEvent TrayItemSetState TrayItemSetText TraySetClick TraySetIcon TraySetOnEvent TraySetPauseIcon TraySetState TraySetToolTip TrayTip UBound UDPBind UDPCloseSocket UDPOpen UDPRecv UDPSend VarGetType WinActivate WinActive WinClose WinExists WinFlash WinGetCaretPos WinGetClassList WinGetClientSize WinGetHandle WinGetPos WinGetProcess WinGetState WinGetText WinGetTitle WinKill WinList WinMenuSelectItem WinMinimizeAll WinMinimizeAllUndo WinMove WinSetOnTop WinSetState WinSetTitle WinSetTrans WinWait WinWaitActive WinWaitClose WinWaitNotActive",
											literal: "True False And Null Not Or Default"
									},
									contains: [t, n, i, r, {
											className: "meta",
											begin: "#",
											end: "$",
											keywords: {
													keyword: ["EndRegion", "forcedef", "forceref", "ignorefunc", "include", "include-once", "NoTrayIcon", "OnAutoItStartRegister", "pragma", "Region", "RequireAdmin", "Tidy_Off", "Tidy_On", "Tidy_Parameters"]
											},
											contains: [{
													begin: /\\\n/,
													relevance: 0
											}, {
													beginKeywords: "include",
													keywords: {
															keyword: "include"
													},
													end: "$",
													contains: [i, {
															className: "string",
															variants: [{
																	begin: "<",
																	end: ">"
															}, {
																	begin: /"/,
																	end: /"/,
																	contains: [{
																			begin: /""/,
																			relevance: 0
																	}]
															}, {
																	begin: /'/,
																	end: /'/,
																	contains: [{
																			begin: /''/,
																			relevance: 0
																	}]
															}]
													}]
											}, i, t]
									}, {
											className: "symbol",
											begin: "@[A-z0-9_]+"
									}, {
											beginKeywords: "Func",
											end: "$",
											illegal: "\\$|\\[|%",
											contains: [e.inherit(e.UNDERSCORE_TITLE_MODE, {
													className: "title.function"
											}), {
													className: "params",
													begin: "\\(",
													end: "\\)",
													contains: [n, i, r]
											}]
									}]
							}
					}
			}
			,
			304: e=>{
					e.exports = function(e) {
							return {
									name: "AVR Assembly",
									case_insensitive: !0,
									keywords: {
											$pattern: "\\.?" + e.IDENT_RE,
											keyword: "adc add adiw and andi asr bclr bld brbc brbs brcc brcs break breq brge brhc brhs brid brie brlo brlt brmi brne brpl brsh brtc brts brvc brvs bset bst call cbi cbr clc clh cli cln clr cls clt clv clz com cp cpc cpi cpse dec eicall eijmp elpm eor fmul fmuls fmulsu icall ijmp in inc jmp ld ldd ldi lds lpm lsl lsr mov movw mul muls mulsu neg nop or ori out pop push rcall ret reti rjmp rol ror sbc sbr sbrc sbrs sec seh sbi sbci sbic sbis sbiw sei sen ser ses set sev sez sleep spm st std sts sub subi swap tst wdr",
											built_in: "r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r22 r23 r24 r25 r26 r27 r28 r29 r30 r31 x|0 xh xl y|0 yh yl z|0 zh zl ucsr1c udr1 ucsr1a ucsr1b ubrr1l ubrr1h ucsr0c ubrr0h tccr3c tccr3a tccr3b tcnt3h tcnt3l ocr3ah ocr3al ocr3bh ocr3bl ocr3ch ocr3cl icr3h icr3l etimsk etifr tccr1c ocr1ch ocr1cl twcr twdr twar twsr twbr osccal xmcra xmcrb eicra spmcsr spmcr portg ddrg ping portf ddrf sreg sph spl xdiv rampz eicrb eimsk gimsk gicr eifr gifr timsk tifr mcucr mcucsr tccr0 tcnt0 ocr0 assr tccr1a tccr1b tcnt1h tcnt1l ocr1ah ocr1al ocr1bh ocr1bl icr1h icr1l tccr2 tcnt2 ocr2 ocdr wdtcr sfior eearh eearl eedr eecr porta ddra pina portb ddrb pinb portc ddrc pinc portd ddrd pind spdr spsr spcr udr0 ucsr0a ucsr0b ubrr0l acsr admux adcsr adch adcl porte ddre pine pinf",
											meta: ".byte .cseg .db .def .device .dseg .dw .endmacro .equ .eseg .exit .include .list .listmac .macro .nolist .org .set"
									},
									contains: [e.C_BLOCK_COMMENT_MODE, e.COMMENT(";", "$", {
											relevance: 0
									}), e.C_NUMBER_MODE, e.BINARY_NUMBER_MODE, {
											className: "number",
											begin: "\\b(\\$[a-zA-Z0-9]+|0o[0-7]+)"
									}, e.QUOTE_STRING_MODE, {
											className: "string",
											begin: "'",
											end: "[^\\\\]'",
											illegal: "[^\\\\][^']"
									}, {
											className: "symbol",
											begin: "^[A-Za-z0-9_.$]+:"
									}, {
											className: "meta",
											begin: "#",
											end: "$"
									}, {
											className: "subst",
											begin: "@[0-9]+"
									}]
							}
					}
			}
			,
			7106: e=>{
					e.exports = function(e) {
							return {
									name: "Awk",
									keywords: {
											keyword: "BEGIN END if else while do for in break continue delete next nextfile function func exit|10"
									},
									contains: [{
											className: "variable",
											variants: [{
													begin: /\$[\w\d#@][\w\d_]*/
											}, {
													begin: /\$\{(.*?)\}/
											}]
									}, {
											className: "string",
											contains: [e.BACKSLASH_ESCAPE],
											variants: [{
													begin: /(u|b)?r?'''/,
													end: /'''/,
													relevance: 10
											}, {
													begin: /(u|b)?r?"""/,
													end: /"""/,
													relevance: 10
											}, {
													begin: /(u|r|ur)'/,
													end: /'/,
													relevance: 10
											}, {
													begin: /(u|r|ur)"/,
													end: /"/,
													relevance: 10
											}, {
													begin: /(b|br)'/,
													end: /'/
											}, {
													begin: /(b|br)"/,
													end: /"/
											}, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE]
									}, e.REGEXP_MODE, e.HASH_COMMENT_MODE, e.NUMBER_MODE]
							}
					}
			}
			,
			6783: e=>{
					e.exports = function(e) {
							const t = e.UNDERSCORE_IDENT_RE
								, n = {
									keyword: ["abstract", "as", "asc", "avg", "break", "breakpoint", "by", "byref", "case", "catch", "changecompany", "class", "client", "client", "common", "const", "continue", "count", "crosscompany", "delegate", "delete_from", "desc", "display", "div", "do", "edit", "else", "eventhandler", "exists", "extends", "final", "finally", "firstfast", "firstonly", "firstonly1", "firstonly10", "firstonly100", "firstonly1000", "flush", "for", "forceliterals", "forcenestedloop", "forceplaceholders", "forceselectorder", "forupdate", "from", "generateonly", "group", "hint", "if", "implements", "in", "index", "insert_recordset", "interface", "internal", "is", "join", "like", "maxof", "minof", "mod", "namespace", "new", "next", "nofetch", "notexists", "optimisticlock", "order", "outer", "pessimisticlock", "print", "private", "protected", "public", "readonly", "repeatableread", "retry", "return", "reverse", "select", "server", "setting", "static", "sum", "super", "switch", "this", "throw", "try", "ttsabort", "ttsbegin", "ttscommit", "unchecked", "update_recordset", "using", "validtimestate", "void", "where", "while"],
									built_in: ["anytype", "boolean", "byte", "char", "container", "date", "double", "enum", "guid", "int", "int64", "long", "real", "short", "str", "utcdatetime", "var"],
									literal: ["default", "false", "null", "true"]
							}
								, i = {
									variants: [{
											match: [/(class|interface)\s+/, t, /\s+(extends|implements)\s+/, t]
									}, {
											match: [/class\s+/, t]
									}],
									scope: {
											2: "title.class",
											4: "title.class.inherited"
									},
									keywords: n
							};
							return {
									name: "X++",
									aliases: ["x++"],
									keywords: n,
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, e.C_NUMBER_MODE, {
											className: "meta",
											begin: "#",
											end: "$"
									}, i]
							}
					}
			}
			,
			1914: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = {}
								, i = {
									begin: /\$\{/,
									end: /\}/,
									contains: ["self", {
											begin: /:-/,
											contains: [n]
									}]
							};
							Object.assign(n, {
									className: "variable",
									variants: [{
											begin: t.concat(/\$[\w\d#@][\w\d_]*/, "(?![\\w\\d])(?![$])")
									}, i]
							});
							const r = {
									className: "subst",
									begin: /\$\(/,
									end: /\)/,
									contains: [e.BACKSLASH_ESCAPE]
							}
								, o = {
									begin: /<<-?\s*(?=\w+)/,
									starts: {
											contains: [e.END_SAME_AS_BEGIN({
													begin: /(\w+)/,
													end: /(\w+)/,
													className: "string"
											})]
									}
							}
								, s = {
									className: "string",
									begin: /"/,
									end: /"/,
									contains: [e.BACKSLASH_ESCAPE, n, r]
							};
							r.contains.push(s);
							const a = {
									begin: /\$?\(\(/,
									end: /\)\)/,
									contains: [{
											begin: /\d+#[0-9a-f]+/,
											className: "number"
									}, e.NUMBER_MODE, n]
							}
								, l = e.SHEBANG({
									binary: `(${["fish", "bash", "zsh", "sh", "csh", "ksh", "tcsh", "dash", "scsh"].join("|")})`,
									relevance: 10
							})
								, c = {
									className: "function",
									begin: /\w[\w\d_]*\s*\(\s*\)\s*\{/,
									returnBegin: !0,
									contains: [e.inherit(e.TITLE_MODE, {
											begin: /\w[\w\d_]*/
									})],
									relevance: 0
							};
							return {
									name: "Bash",
									aliases: ["sh"],
									keywords: {
											$pattern: /\b[a-z][a-z0-9._-]+\b/,
											keyword: ["if", "then", "else", "elif", "fi", "for", "while", "in", "do", "done", "case", "esac", "function"],
											literal: ["true", "false"],
											built_in: ["break", "cd", "continue", "eval", "exec", "exit", "export", "getopts", "hash", "pwd", "readonly", "return", "shift", "test", "times", "trap", "umask", "unset", "alias", "bind", "builtin", "caller", "command", "declare", "echo", "enable", "help", "let", "local", "logout", "mapfile", "printf", "read", "readarray", "source", "type", "typeset", "ulimit", "unalias", "set", "shopt", "autoload", "bg", "bindkey", "bye", "cap", "chdir", "clone", "comparguments", "compcall", "compctl", "compdescribe", "compfiles", "compgroups", "compquote", "comptags", "comptry", "compvalues", "dirs", "disable", "disown", "echotc", "echoti", "emulate", "fc", "fg", "float", "functions", "getcap", "getln", "history", "integer", "jobs", "kill", "limit", "log", "noglob", "popd", "print", "pushd", "pushln", "rehash", "sched", "setcap", "setopt", "stat", "suspend", "ttyctl", "unfunction", "unhash", "unlimit", "unsetopt", "vared", "wait", "whence", "where", "which", "zcompile", "zformat", "zftp", "zle", "zmodload", "zparseopts", "zprof", "zpty", "zregexparse", "zsocket", "zstyle", "ztcp", "chcon", "chgrp", "chown", "chmod", "cp", "dd", "df", "dir", "dircolors", "ln", "ls", "mkdir", "mkfifo", "mknod", "mktemp", "mv", "realpath", "rm", "rmdir", "shred", "sync", "touch", "truncate", "vdir", "b2sum", "base32", "base64", "cat", "cksum", "comm", "csplit", "cut", "expand", "fmt", "fold", "head", "join", "md5sum", "nl", "numfmt", "od", "paste", "ptx", "pr", "sha1sum", "sha224sum", "sha256sum", "sha384sum", "sha512sum", "shuf", "sort", "split", "sum", "tac", "tail", "tr", "tsort", "unexpand", "uniq", "wc", "arch", "basename", "chroot", "date", "dirname", "du", "echo", "env", "expr", "factor", "groups", "hostid", "id", "link", "logname", "nice", "nohup", "nproc", "pathchk", "pinky", "printenv", "printf", "pwd", "readlink", "runcon", "seq", "sleep", "stat", "stdbuf", "stty", "tee", "test", "timeout", "tty", "uname", "unlink", "uptime", "users", "who", "whoami", "yes"]
									},
									contains: [l, e.SHEBANG(), c, a, e.HASH_COMMENT_MODE, o, {
											match: /(\/[a-z._-]+)+/
									}, s, {
											className: "",
											begin: /\\"/
									}, {
											className: "string",
											begin: /'/,
											end: /'/
									}, n]
							}
					}
			}
			,
			5606: e=>{
					e.exports = function(e) {
							return {
									name: "BASIC",
									case_insensitive: !0,
									illegal: "^.",
									keywords: {
											$pattern: "[a-zA-Z][a-zA-Z0-9_$%!#]*",
											keyword: ["ABS", "ASC", "AND", "ATN", "AUTO|0", "BEEP", "BLOAD|10", "BSAVE|10", "CALL", "CALLS", "CDBL", "CHAIN", "CHDIR", "CHR$|10", "CINT", "CIRCLE", "CLEAR", "CLOSE", "CLS", "COLOR", "COM", "COMMON", "CONT", "COS", "CSNG", "CSRLIN", "CVD", "CVI", "CVS", "DATA", "DATE$", "DEFDBL", "DEFINT", "DEFSNG", "DEFSTR", "DEF|0", "SEG", "USR", "DELETE", "DIM", "DRAW", "EDIT", "END", "ENVIRON", "ENVIRON$", "EOF", "EQV", "ERASE", "ERDEV", "ERDEV$", "ERL", "ERR", "ERROR", "EXP", "FIELD", "FILES", "FIX", "FOR|0", "FRE", "GET", "GOSUB|10", "GOTO", "HEX$", "IF", "THEN", "ELSE|0", "INKEY$", "INP", "INPUT", "INPUT#", "INPUT$", "INSTR", "IMP", "INT", "IOCTL", "IOCTL$", "KEY", "ON", "OFF", "LIST", "KILL", "LEFT$", "LEN", "LET", "LINE", "LLIST", "LOAD", "LOC", "LOCATE", "LOF", "LOG", "LPRINT", "USING", "LSET", "MERGE", "MID$", "MKDIR", "MKD$", "MKI$", "MKS$", "MOD", "NAME", "NEW", "NEXT", "NOISE", "NOT", "OCT$", "ON", "OR", "PEN", "PLAY", "STRIG", "OPEN", "OPTION", "BASE", "OUT", "PAINT", "PALETTE", "PCOPY", "PEEK", "PMAP", "POINT", "POKE", "POS", "PRINT", "PRINT]", "PSET", "PRESET", "PUT", "RANDOMIZE", "READ", "REM", "RENUM", "RESET|0", "RESTORE", "RESUME", "RETURN|0", "RIGHT$", "RMDIR", "RND", "RSET", "RUN", "SAVE", "SCREEN", "SGN", "SHELL", "SIN", "SOUND", "SPACE$", "SPC", "SQR", "STEP", "STICK", "STOP", "STR$", "STRING$", "SWAP", "SYSTEM", "TAB", "TAN", "TIME$", "TIMER", "TROFF", "TRON", "TO", "USR", "VAL", "VARPTR", "VARPTR$", "VIEW", "WAIT", "WHILE", "WEND", "WIDTH", "WINDOW", "WRITE", "XOR"]
									},
									contains: [e.QUOTE_STRING_MODE, e.COMMENT("REM", "$", {
											relevance: 10
									}), e.COMMENT("'", "$", {
											relevance: 0
									}), {
											className: "symbol",
											begin: "^[0-9]+ ",
											relevance: 10
									}, {
											className: "number",
											begin: "\\b\\d+(\\.\\d+)?([edED]\\d+)?[#!]?",
											relevance: 0
									}, {
											className: "number",
											begin: "(&[hH][0-9a-fA-F]{1,4})"
									}, {
											className: "number",
											begin: "(&[oO][0-7]{1,6})"
									}]
							}
					}
			}
			,
			2707: e=>{
					e.exports = function(e) {
							return {
									name: "Backus–Naur Form",
									contains: [{
											className: "attribute",
											begin: /</,
											end: />/
									}, {
											begin: /::=/,
											end: /$/,
											contains: [{
													begin: /</,
													end: />/
											}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE]
									}]
							}
					}
			}
			,
			6932: e=>{
					e.exports = function(e) {
							const t = {
									className: "literal",
									begin: /[+-]+/,
									relevance: 0
							};
							return {
									name: "Brainfuck",
									aliases: ["bf"],
									contains: [e.COMMENT(/[^\[\]\.,\+\-<> \r\n]/, /[\[\]\.,\+\-<> \r\n]/, {
											contains: [{
													match: /[ ]+[^\[\]\.,\+\-<> \r\n]/,
													relevance: 0
											}],
											returnEnd: !0,
											relevance: 0
									}), {
											className: "title",
											begin: "[\\[\\]]",
											relevance: 0
									}, {
											className: "string",
											begin: "[\\.,]",
											relevance: 0
									}, {
											begin: /(?=\+\+|--)/,
											contains: [t]
									}, t]
							}
					}
			}
			,
			6379: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = e.COMMENT("//", "$", {
									contains: [{
											begin: /\\\n/
									}]
							})
								, i = "decltype\\(auto\\)"
								, r = "[a-zA-Z_]\\w*::"
								, o = "(" + i + "|" + t.optional(r) + "[a-zA-Z_]\\w*" + t.optional("<[^<>]+>") + ")"
								, s = {
									className: "type",
									variants: [{
											begin: "\\b[a-z\\d_]*_t\\b"
									}, {
											match: /\batomic_[a-z]{3,6}\b/
									}]
							}
								, a = {
									className: "string",
									variants: [{
											begin: '(u8?|U|L)?"',
											end: '"',
											illegal: "\\n",
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											begin: "(u8?|U|L)?'(\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)|.)",
											end: "'",
											illegal: "."
									}, e.END_SAME_AS_BEGIN({
											begin: /(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,
											end: /\)([^()\\ ]{0,16})"/
									})]
							}
								, l = {
									className: "number",
									variants: [{
											begin: "\\b(0b[01']+)"
									}, {
											begin: "(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)"
									}, {
											begin: "(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"
									}],
									relevance: 0
							}
								, c = {
									className: "meta",
									begin: /#\s*[a-z]+\b/,
									end: /$/,
									keywords: {
											keyword: "if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include"
									},
									contains: [{
											begin: /\\\n/,
											relevance: 0
									}, e.inherit(a, {
											className: "string"
									}), {
											className: "string",
											begin: /<.*?>/
									}, n, e.C_BLOCK_COMMENT_MODE]
							}
								, d = {
									className: "title",
									begin: t.optional(r) + e.IDENT_RE,
									relevance: 0
							}
								, p = t.optional(r) + e.IDENT_RE + "\\s*\\("
								, u = {
									keyword: ["asm", "auto", "break", "case", "continue", "default", "do", "else", "enum", "extern", "for", "fortran", "goto", "if", "inline", "register", "restrict", "return", "sizeof", "struct", "switch", "typedef", "union", "volatile", "while", "_Alignas", "_Alignof", "_Atomic", "_Generic", "_Noreturn", "_Static_assert", "_Thread_local", "alignas", "alignof", "noreturn", "static_assert", "thread_local", "_Pragma"],
									type: ["float", "double", "signed", "unsigned", "int", "short", "long", "char", "void", "_Bool", "_Complex", "_Imaginary", "_Decimal32", "_Decimal64", "_Decimal128", "const", "static", "complex", "bool", "imaginary"],
									literal: "true false NULL",
									built_in: "std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan vfprintf vprintf vsprintf endl initializer_list unique_ptr"
							}
								, h = [c, s, n, e.C_BLOCK_COMMENT_MODE, l, a]
								, m = {
									variants: [{
											begin: /=/,
											end: /;/
									}, {
											begin: /\(/,
											end: /\)/
									}, {
											beginKeywords: "new throw return else",
											end: /;/
									}],
									keywords: u,
									contains: h.concat([{
											begin: /\(/,
											end: /\)/,
											keywords: u,
											contains: h.concat(["self"]),
											relevance: 0
									}]),
									relevance: 0
							}
								, g = {
									begin: "(" + o + "[\\*&\\s]+)+" + p,
									returnBegin: !0,
									end: /[{;=]/,
									excludeEnd: !0,
									keywords: u,
									illegal: /[^\w\s\*&:<>.]/,
									contains: [{
											begin: i,
											keywords: u,
											relevance: 0
									}, {
											begin: p,
											returnBegin: !0,
											contains: [e.inherit(d, {
													className: "title.function"
											})],
											relevance: 0
									}, {
											relevance: 0,
											match: /,/
									}, {
											className: "params",
											begin: /\(/,
											end: /\)/,
											keywords: u,
											relevance: 0,
											contains: [n, e.C_BLOCK_COMMENT_MODE, a, l, s, {
													begin: /\(/,
													end: /\)/,
													keywords: u,
													relevance: 0,
													contains: ["self", n, e.C_BLOCK_COMMENT_MODE, a, l, s]
											}]
									}, s, n, e.C_BLOCK_COMMENT_MODE, c]
							};
							return {
									name: "C",
									aliases: ["h"],
									keywords: u,
									disableAutodetect: !0,
									illegal: "</",
									contains: [].concat(m, g, h, [c, {
											begin: e.IDENT_RE + "::",
											keywords: u
									}, {
											className: "class",
											beginKeywords: "enum class struct union",
											end: /[{;:<>=]/,
											contains: [{
													beginKeywords: "final class struct"
											}, e.TITLE_MODE]
									}]),
									exports: {
											preprocessor: c,
											strings: a,
											keywords: u
									}
							}
					}
			}
			,
			6140: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = ["div", "mod", "in", "and", "or", "not", "xor", "asserterror", "begin", "case", "do", "downto", "else", "end", "exit", "for", "local", "if", "of", "repeat", "then", "to", "until", "while", "with", "var"]
								, i = [e.C_LINE_COMMENT_MODE, e.COMMENT(/\{/, /\}/, {
									relevance: 0
							}), e.COMMENT(/\(\*/, /\*\)/, {
									relevance: 10
							})]
								, r = {
									className: "string",
									begin: /'/,
									end: /'/,
									contains: [{
											begin: /''/
									}]
							}
								, o = {
									className: "string",
									begin: /(#\d+)+/
							}
								, s = {
									match: [/procedure/, /\s+/, /[a-zA-Z_][\w@]*/, /\s*/],
									scope: {
											1: "keyword",
											3: "title.function"
									},
									contains: [{
											className: "params",
											begin: /\(/,
											end: /\)/,
											keywords: n,
											contains: [r, o, e.NUMBER_MODE]
									}, ...i]
							}
								, a = {
									match: [/OBJECT/, /\s+/, t.either("Table", "Form", "Report", "Dataport", "Codeunit", "XMLport", "MenuSuite", "Page", "Query"), /\s+/, /\d+/, /\s+(?=[^\s])/, /.*/, /$/],
									relevance: 3,
									scope: {
											1: "keyword",
											3: "type",
											5: "number",
											7: "title"
									}
							};
							return {
									name: "C/AL",
									case_insensitive: !0,
									keywords: {
											keyword: n,
											literal: "false true"
									},
									illegal: /\/\*/,
									contains: [{
											match: /[\w]+(?=\=)/,
											scope: "attribute",
											relevance: 0
									}, r, o, {
											className: "number",
											begin: "\\b\\d+(\\.\\d+)?(DT|D|T)",
											relevance: 0
									}, {
											className: "string",
											begin: '"',
											end: '"'
									}, e.NUMBER_MODE, a, s]
							}
					}
			}
			,
			82: e=>{
					e.exports = function(e) {
							const t = {
									variants: [{
											match: [/(struct|enum|interface)/, /\s+/, e.IDENT_RE]
									}, {
											match: [/extends/, /\s*\(/, e.IDENT_RE, /\s*\)/]
									}],
									scope: {
											1: "keyword",
											3: "title.class"
									}
							};
							return {
									name: "Cap’n Proto",
									aliases: ["capnp"],
									keywords: {
											keyword: ["struct", "enum", "interface", "union", "group", "import", "using", "const", "annotation", "extends", "in", "of", "on", "as", "with", "from", "fixed"],
											type: ["Void", "Bool", "Int8", "Int16", "Int32", "Int64", "UInt8", "UInt16", "UInt32", "UInt64", "Float32", "Float64", "Text", "Data", "AnyPointer", "AnyStruct", "Capability", "List"],
											literal: ["true", "false"]
									},
									contains: [e.QUOTE_STRING_MODE, e.NUMBER_MODE, e.HASH_COMMENT_MODE, {
											className: "meta",
											begin: /@0x[\w\d]{16};/,
											illegal: /\n/
									}, {
											className: "symbol",
											begin: /@\d+\b/
									}, t]
							}
					}
			}
			,
			9363: e=>{
					e.exports = function(e) {
							const t = ["assembly", "module", "package", "import", "alias", "class", "interface", "object", "given", "value", "assign", "void", "function", "new", "of", "extends", "satisfies", "abstracts", "in", "out", "return", "break", "continue", "throw", "assert", "dynamic", "if", "else", "switch", "case", "for", "while", "try", "catch", "finally", "then", "let", "this", "outer", "super", "is", "exists", "nonempty"]
								, n = {
									className: "subst",
									excludeBegin: !0,
									excludeEnd: !0,
									begin: /``/,
									end: /``/,
									keywords: t,
									relevance: 10
							}
								, i = [{
									className: "string",
									begin: '"""',
									end: '"""',
									relevance: 10
							}, {
									className: "string",
									begin: '"',
									end: '"',
									contains: [n]
							}, {
									className: "string",
									begin: "'",
									end: "'"
							}, {
									className: "number",
									begin: "#[0-9a-fA-F_]+|\\$[01_]+|[0-9_]+(?:\\.[0-9_](?:[eE][+-]?\\d+)?)?[kMGTPmunpf]?",
									relevance: 0
							}];
							return n.contains = i,
							{
									name: "Ceylon",
									keywords: {
											keyword: t.concat(["shared", "abstract", "formal", "default", "actual", "variable", "late", "native", "deprecated", "final", "sealed", "annotation", "suppressWarnings", "small"]),
											meta: ["doc", "by", "license", "see", "throws", "tagged"]
									},
									illegal: "\\$[^01]|#[^0-9a-fA-F]",
									contains: [e.C_LINE_COMMENT_MODE, e.COMMENT("/\\*", "\\*/", {
											contains: ["self"]
									}), {
											className: "meta",
											begin: '@[a-z]\\w*(?::"[^"]*")?'
									}].concat(i)
							}
					}
			}
			,
			4656: e=>{
					e.exports = function(e) {
							return {
									name: "Clean",
									aliases: ["icl", "dcl"],
									keywords: {
											keyword: ["if", "let", "in", "with", "where", "case", "of", "class", "instance", "otherwise", "implementation", "definition", "system", "module", "from", "import", "qualified", "as", "special", "code", "inline", "foreign", "export", "ccall", "stdcall", "generic", "derive", "infix", "infixl", "infixr"],
											built_in: "Int Real Char Bool",
											literal: "True False"
									},
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, e.C_NUMBER_MODE, {
											begin: "->|<-[|:]?|#!?|>>=|\\{\\||\\|\\}|:==|=:|<>"
									}]
							}
					}
			}
			,
			2607: e=>{
					e.exports = function(e) {
							return {
									name: "Clojure REPL",
									contains: [{
											className: "meta.prompt",
											begin: /^([\w.-]+|\s*#_)?=>/,
											starts: {
													end: /$/,
													subLanguage: "clojure"
											}
									}]
							}
					}
			}
			,
			9646: e=>{
					e.exports = function(e) {
							const t = "a-zA-Z_\\-!.?+*=<>&'"
								, n = "[#]?[" + t + "][" + t + "0-9/;:$#]*"
								, i = "def defonce defprotocol defstruct defmulti defmethod defn- defn defmacro deftype defrecord"
								, r = {
									$pattern: n,
									built_in: i + " cond apply if-not if-let if not not= =|0 <|0 >|0 <=|0 >=|0 ==|0 +|0 /|0 *|0 -|0 rem quot neg? pos? delay? symbol? keyword? true? false? integer? empty? coll? list? set? ifn? fn? associative? sequential? sorted? counted? reversible? number? decimal? class? distinct? isa? float? rational? reduced? ratio? odd? even? char? seq? vector? string? map? nil? contains? zero? instance? not-every? not-any? libspec? -> ->> .. . inc compare do dotimes mapcat take remove take-while drop letfn drop-last take-last drop-while while intern condp case reduced cycle split-at split-with repeat replicate iterate range merge zipmap declare line-seq sort comparator sort-by dorun doall nthnext nthrest partition eval doseq await await-for let agent atom send send-off release-pending-sends add-watch mapv filterv remove-watch agent-error restart-agent set-error-handler error-handler set-error-mode! error-mode shutdown-agents quote var fn loop recur throw try monitor-enter monitor-exit macroexpand macroexpand-1 for dosync and or when when-not when-let comp juxt partial sequence memoize constantly complement identity assert peek pop doto proxy first rest cons cast coll last butlast sigs reify second ffirst fnext nfirst nnext meta with-meta ns in-ns create-ns import refer keys select-keys vals key val rseq name namespace promise into transient persistent! conj! assoc! dissoc! pop! disj! use class type num float double short byte boolean bigint biginteger bigdec print-method print-dup throw-if printf format load compile get-in update-in pr pr-on newline flush read slurp read-line subvec with-open memfn time re-find re-groups rand-int rand mod locking assert-valid-fdecl alias resolve ref deref refset swap! reset! set-validator! compare-and-set! alter-meta! reset-meta! commute get-validator alter ref-set ref-history-count ref-min-history ref-max-history ensure sync io! new next conj set! to-array future future-call into-array aset gen-class reduce map filter find empty hash-map hash-set sorted-map sorted-map-by sorted-set sorted-set-by vec vector seq flatten reverse assoc dissoc list disj get union difference intersection extend extend-type extend-protocol int nth delay count concat chunk chunk-buffer chunk-append chunk-first chunk-rest max min dec unchecked-inc-int unchecked-inc unchecked-dec-inc unchecked-dec unchecked-negate unchecked-add-int unchecked-add unchecked-subtract-int unchecked-subtract chunk-next chunk-cons chunked-seq? prn vary-meta lazy-seq spread list* str find-keyword keyword symbol gensym force rationalize"
							}
								, o = {
									begin: n,
									relevance: 0
							}
								, s = {
									scope: "number",
									relevance: 0,
									variants: [{
											match: /[-+]?0[xX][0-9a-fA-F]+N?/
									}, {
											match: /[-+]?0[0-7]+N?/
									}, {
											match: /[-+]?[1-9][0-9]?[rR][0-9a-zA-Z]+N?/
									}, {
											match: /[-+]?[0-9]+\/[0-9]+N?/
									}, {
											match: /[-+]?[0-9]+((\.[0-9]*([eE][+-]?[0-9]+)?M?)|([eE][+-]?[0-9]+M?|M))/
									}, {
											match: /[-+]?([1-9][0-9]*|0)N?/
									}]
							}
								, a = {
									scope: "character",
									variants: [{
											match: /\\o[0-3]?[0-7]{1,2}/
									}, {
											match: /\\u[0-9a-fA-F]{4}/
									}, {
											match: /\\(newline|space|tab|formfeed|backspace|return)/
									}, {
											match: /\\\S/,
											relevance: 0
									}]
							}
								, l = {
									scope: "regex",
									begin: /#"/,
									end: /"/,
									contains: [e.BACKSLASH_ESCAPE]
							}
								, c = e.inherit(e.QUOTE_STRING_MODE, {
									illegal: null
							})
								, d = {
									scope: "punctuation",
									match: /,/,
									relevance: 0
							}
								, p = e.COMMENT(";", "$", {
									relevance: 0
							})
								, u = {
									className: "literal",
									begin: /\b(true|false|nil)\b/
							}
								, h = {
									begin: "\\[|(#::?" + n + ")?\\{",
									end: "[\\]\\}]",
									relevance: 0
							}
								, m = {
									className: "symbol",
									begin: "[:]{1,2}" + n
							}
								, g = {
									begin: "\\(",
									end: "\\)"
							}
								, _ = {
									endsWithParent: !0,
									relevance: 0
							}
								, f = {
									keywords: r,
									className: "name",
									begin: n,
									relevance: 0,
									starts: _
							}
								, y = [d, g, a, l, c, p, m, h, s, u, o]
								, v = {
									beginKeywords: i,
									keywords: {
											$pattern: n,
											keyword: i
									},
									end: '(\\[|#|\\d|"|:|\\{|\\)|\\(|$)',
									contains: [{
											className: "title",
											begin: n,
											relevance: 0,
											excludeEnd: !0,
											endsParent: !0
									}].concat(y)
							};
							return g.contains = [v, f, _],
							_.contains = y,
							h.contains = y,
							{
									name: "Clojure",
									aliases: ["clj", "edn"],
									illegal: /\S/,
									contains: [d, g, a, l, c, p, m, h, s, u]
							}
					}
			}
			,
			6691: e=>{
					e.exports = function(e) {
							return {
									name: "CMake",
									aliases: ["cmake.in"],
									case_insensitive: !0,
									keywords: {
											keyword: "break cmake_host_system_information cmake_minimum_required cmake_parse_arguments cmake_policy configure_file continue elseif else endforeach endfunction endif endmacro endwhile execute_process file find_file find_library find_package find_path find_program foreach function get_cmake_property get_directory_property get_filename_component get_property if include include_guard list macro mark_as_advanced math message option return separate_arguments set_directory_properties set_property set site_name string unset variable_watch while add_compile_definitions add_compile_options add_custom_command add_custom_target add_definitions add_dependencies add_executable add_library add_link_options add_subdirectory add_test aux_source_directory build_command create_test_sourcelist define_property enable_language enable_testing export fltk_wrap_ui get_source_file_property get_target_property get_test_property include_directories include_external_msproject include_regular_expression install link_directories link_libraries load_cache project qt_wrap_cpp qt_wrap_ui remove_definitions set_source_files_properties set_target_properties set_tests_properties source_group target_compile_definitions target_compile_features target_compile_options target_include_directories target_link_directories target_link_libraries target_link_options target_sources try_compile try_run ctest_build ctest_configure ctest_coverage ctest_empty_binary_directory ctest_memcheck ctest_read_custom_files ctest_run_script ctest_sleep ctest_start ctest_submit ctest_test ctest_update ctest_upload build_name exec_program export_library_dependencies install_files install_programs install_targets load_command make_directory output_required_files remove subdir_depends subdirs use_mangled_mesa utility_source variable_requires write_file qt5_use_modules qt5_use_package qt5_wrap_cpp on off true false and or not command policy target test exists is_newer_than is_directory is_symlink is_absolute matches less greater equal less_equal greater_equal strless strgreater strequal strless_equal strgreater_equal version_less version_greater version_equal version_less_equal version_greater_equal in_list defined"
									},
									contains: [{
											className: "variable",
											begin: /\$\{/,
											end: /\}/
									}, e.COMMENT(/#\[\[/, /]]/), e.HASH_COMMENT_MODE, e.QUOTE_STRING_MODE, e.NUMBER_MODE]
							}
					}
			}
			,
			2975: e=>{
					const t = ["as", "in", "of", "if", "for", "while", "finally", "var", "new", "function", "do", "return", "void", "else", "break", "catch", "instanceof", "with", "throw", "case", "default", "try", "switch", "continue", "typeof", "delete", "let", "yield", "const", "class", "debugger", "async", "await", "static", "import", "from", "export", "extends"]
						, n = ["true", "false", "null", "undefined", "NaN", "Infinity"]
						, i = [].concat(["setInterval", "setTimeout", "clearInterval", "clearTimeout", "require", "exports", "eval", "isFinite", "isNaN", "parseFloat", "parseInt", "decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "escape", "unescape"], ["Object", "Function", "Boolean", "Symbol", "Math", "Date", "Number", "BigInt", "String", "RegExp", "Array", "Float32Array", "Float64Array", "Int8Array", "Uint8Array", "Uint8ClampedArray", "Int16Array", "Int32Array", "Uint16Array", "Uint32Array", "BigInt64Array", "BigUint64Array", "Set", "Map", "WeakSet", "WeakMap", "ArrayBuffer", "SharedArrayBuffer", "Atomics", "DataView", "JSON", "Promise", "Generator", "GeneratorFunction", "AsyncFunction", "Reflect", "Proxy", "Intl", "WebAssembly"], ["Error", "EvalError", "InternalError", "RangeError", "ReferenceError", "SyntaxError", "TypeError", "URIError"]);
					e.exports = function(e) {
							const r = {
									keyword: t.concat(["then", "unless", "until", "loop", "by", "when", "and", "or", "is", "isnt", "not"]).filter((o = ["var", "const", "let", "function", "static"],
									e=>!o.includes(e))),
									literal: n.concat(["yes", "no", "on", "off"]),
									built_in: i.concat(["npm", "print"])
							};
							var o;
							const s = "[A-Za-z$_][0-9A-Za-z$_]*"
								, a = {
									className: "subst",
									begin: /#\{/,
									end: /\}/,
									keywords: r
							}
								, l = [e.BINARY_NUMBER_MODE, e.inherit(e.C_NUMBER_MODE, {
									starts: {
											end: "(\\s*/)?",
											relevance: 0
									}
							}), {
									className: "string",
									variants: [{
											begin: /'''/,
											end: /'''/,
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											begin: /'/,
											end: /'/,
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											begin: /"""/,
											end: /"""/,
											contains: [e.BACKSLASH_ESCAPE, a]
									}, {
											begin: /"/,
											end: /"/,
											contains: [e.BACKSLASH_ESCAPE, a]
									}]
							}, {
									className: "regexp",
									variants: [{
											begin: "///",
											end: "///",
											contains: [a, e.HASH_COMMENT_MODE]
									}, {
											begin: "//[gim]{0,3}(?=\\W)",
											relevance: 0
									}, {
											begin: /\/(?![ *]).*?(?![\\]).\/[gim]{0,3}(?=\W)/
									}]
							}, {
									begin: "@" + s
							}, {
									subLanguage: "javascript",
									excludeBegin: !0,
									excludeEnd: !0,
									variants: [{
											begin: "```",
											end: "```"
									}, {
											begin: "`",
											end: "`"
									}]
							}];
							a.contains = l;
							const c = e.inherit(e.TITLE_MODE, {
									begin: s
							})
								, d = "(\\(.*\\)\\s*)?\\B[-=]>"
								, p = {
									className: "params",
									begin: "\\([^\\(]",
									returnBegin: !0,
									contains: [{
											begin: /\(/,
											end: /\)/,
											keywords: r,
											contains: ["self"].concat(l)
									}]
							}
								, u = {
									variants: [{
											match: [/class\s+/, s, /\s+extends\s+/, s]
									}, {
											match: [/class\s+/, s]
									}],
									scope: {
											2: "title.class",
											4: "title.class.inherited"
									},
									keywords: r
							};
							return {
									name: "CoffeeScript",
									aliases: ["coffee", "cson", "iced"],
									keywords: r,
									illegal: /\/\*/,
									contains: [...l, e.COMMENT("###", "###"), e.HASH_COMMENT_MODE, {
											className: "function",
											begin: "^\\s*" + s + "\\s*=\\s*" + d,
											end: "[-=]>",
											returnBegin: !0,
											contains: [c, p]
									}, {
											begin: /[:\(,=]\s*/,
											relevance: 0,
											contains: [{
													className: "function",
													begin: d,
													end: "[-=]>",
													returnBegin: !0,
													contains: [p]
											}]
									}, u, {
											begin: s + ":",
											end: ":",
											returnBegin: !0,
											returnEnd: !0,
											relevance: 0
									}]
							}
					}
			}
			,
			204: e=>{
					e.exports = function(e) {
							return {
									name: "Coq",
									keywords: {
											keyword: ["_|0", "as", "at", "cofix", "else", "end", "exists", "exists2", "fix", "for", "forall", "fun", "if", "IF", "in", "let", "match", "mod", "Prop", "return", "Set", "then", "Type", "using", "where", "with", "Abort", "About", "Add", "Admit", "Admitted", "All", "Arguments", "Assumptions", "Axiom", "Back", "BackTo", "Backtrack", "Bind", "Blacklist", "Canonical", "Cd", "Check", "Class", "Classes", "Close", "Coercion", "Coercions", "CoFixpoint", "CoInductive", "Collection", "Combined", "Compute", "Conjecture", "Conjectures", "Constant", "constr", "Constraint", "Constructors", "Context", "Corollary", "CreateHintDb", "Cut", "Declare", "Defined", "Definition", "Delimit", "Dependencies", "Dependent", "Derive", "Drop", "eauto", "End", "Equality", "Eval", "Example", "Existential", "Existentials", "Existing", "Export", "exporting", "Extern", "Extract", "Extraction", "Fact", "Field", "Fields", "File", "Fixpoint", "Focus", "for", "From", "Function", "Functional", "Generalizable", "Global", "Goal", "Grab", "Grammar", "Graph", "Guarded", "Heap", "Hint", "HintDb", "Hints", "Hypotheses", "Hypothesis", "ident", "Identity", "If", "Immediate", "Implicit", "Import", "Include", "Inductive", "Infix", "Info", "Initial", "Inline", "Inspect", "Instance", "Instances", "Intro", "Intros", "Inversion", "Inversion_clear", "Language", "Left", "Lemma", "Let", "Libraries", "Library", "Load", "LoadPath", "Local", "Locate", "Ltac", "ML", "Mode", "Module", "Modules", "Monomorphic", "Morphism", "Next", "NoInline", "Notation", "Obligation", "Obligations", "Opaque", "Open", "Optimize", "Options", "Parameter", "Parameters", "Parametric", "Path", "Paths", "pattern", "Polymorphic", "Preterm", "Print", "Printing", "Program", "Projections", "Proof", "Proposition", "Pwd", "Qed", "Quit", "Rec", "Record", "Recursive", "Redirect", "Relation", "Remark", "Remove", "Require", "Reserved", "Reset", "Resolve", "Restart", "Rewrite", "Right", "Ring", "Rings", "Save", "Scheme", "Scope", "Scopes", "Script", "Search", "SearchAbout", "SearchHead", "SearchPattern", "SearchRewrite", "Section", "Separate", "Set", "Setoid", "Show", "Solve", "Sorted", "Step", "Strategies", "Strategy", "Structure", "SubClass", "Table", "Tables", "Tactic", "Term", "Test", "Theorem", "Time", "Timeout", "Transparent", "Type", "Typeclasses", "Types", "Undelimit", "Undo", "Unfocus", "Unfocused", "Unfold", "Universe", "Universes", "Unset", "Unshelve", "using", "Variable", "Variables", "Variant", "Verbose", "Visibility", "where", "with"],
											built_in: ["abstract", "absurd", "admit", "after", "apply", "as", "assert", "assumption", "at", "auto", "autorewrite", "autounfold", "before", "bottom", "btauto", "by", "case", "case_eq", "cbn", "cbv", "change", "classical_left", "classical_right", "clear", "clearbody", "cofix", "compare", "compute", "congruence", "constr_eq", "constructor", "contradict", "contradiction", "cut", "cutrewrite", "cycle", "decide", "decompose", "dependent", "destruct", "destruction", "dintuition", "discriminate", "discrR", "do", "double", "dtauto", "eapply", "eassumption", "eauto", "ecase", "econstructor", "edestruct", "ediscriminate", "eelim", "eexact", "eexists", "einduction", "einjection", "eleft", "elim", "elimtype", "enough", "equality", "erewrite", "eright", "esimplify_eq", "esplit", "evar", "exact", "exactly_once", "exfalso", "exists", "f_equal", "fail", "field", "field_simplify", "field_simplify_eq", "first", "firstorder", "fix", "fold", "fourier", "functional", "generalize", "generalizing", "gfail", "give_up", "has_evar", "hnf", "idtac", "in", "induction", "injection", "instantiate", "intro", "intro_pattern", "intros", "intuition", "inversion", "inversion_clear", "is_evar", "is_var", "lapply", "lazy", "left", "lia", "lra", "move", "native_compute", "nia", "nsatz", "omega", "once", "pattern", "pose", "progress", "proof", "psatz", "quote", "record", "red", "refine", "reflexivity", "remember", "rename", "repeat", "replace", "revert", "revgoals", "rewrite", "rewrite_strat", "right", "ring", "ring_simplify", "rtauto", "set", "setoid_reflexivity", "setoid_replace", "setoid_rewrite", "setoid_symmetry", "setoid_transitivity", "shelve", "shelve_unifiable", "simpl", "simple", "simplify_eq", "solve", "specialize", "split", "split_Rabs", "split_Rmult", "stepl", "stepr", "subst", "sum", "swap", "symmetry", "tactic", "tauto", "time", "timeout", "top", "transitivity", "trivial", "try", "tryif", "unfold", "unify", "until", "using", "vm_compute", "with"]
									},
									contains: [e.QUOTE_STRING_MODE, e.COMMENT("\\(\\*", "\\*\\)"), e.C_NUMBER_MODE, {
											className: "type",
											excludeBegin: !0,
											begin: "\\|\\s*",
											end: "\\w+"
									}, {
											begin: /[-=]>/
									}]
							}
					}
			}
			,
			7156: e=>{
					e.exports = function(e) {
							return {
									name: "Caché Object Script",
									case_insensitive: !0,
									aliases: ["cls"],
									keywords: "property parameter class classmethod clientmethod extends as break catch close continue do d|0 else elseif for goto halt hang h|0 if job j|0 kill k|0 lock l|0 merge new open quit q|0 read r|0 return set s|0 tcommit throw trollback try tstart use view while write w|0 xecute x|0 zkill znspace zn ztrap zwrite zw zzdump zzwrite print zbreak zinsert zload zprint zremove zsave zzprint mv mvcall mvcrt mvdim mvprint zquit zsync ascii",
									contains: [{
											className: "number",
											begin: "\\b(\\d+(\\.\\d*)?|\\.\\d+)",
											relevance: 0
									}, {
											className: "string",
											variants: [{
													begin: '"',
													end: '"',
													contains: [{
															begin: '""',
															relevance: 0
													}]
											}]
									}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, {
											className: "comment",
											begin: /;/,
											end: "$",
											relevance: 0
									}, {
											className: "built_in",
											begin: /(?:\$\$?|\.\.)\^?[a-zA-Z]+/
									}, {
											className: "built_in",
											begin: /\$\$\$[a-zA-Z]+/
									}, {
											className: "built_in",
											begin: /%[a-z]+(?:\.[a-z]+)*/
									}, {
											className: "symbol",
											begin: /\^%?[a-zA-Z][\w]*/
									}, {
											className: "keyword",
											begin: /##class|##super|#define|#dim/
									}, {
											begin: /&sql\(/,
											end: /\)/,
											excludeBegin: !0,
											excludeEnd: !0,
											subLanguage: "sql"
									}, {
											begin: /&(js|jscript|javascript)</,
											end: />/,
											excludeBegin: !0,
											excludeEnd: !0,
											subLanguage: "javascript"
									}, {
											begin: /&html<\s*</,
											end: />\s*>/,
											subLanguage: "xml"
									}]
							}
					}
			}
			,
			9355: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = e.COMMENT("//", "$", {
									contains: [{
											begin: /\\\n/
									}]
							})
								, i = "decltype\\(auto\\)"
								, r = "[a-zA-Z_]\\w*::"
								, o = "(?!struct)(" + i + "|" + t.optional(r) + "[a-zA-Z_]\\w*" + t.optional("<[^<>]+>") + ")"
								, s = {
									className: "type",
									begin: "\\b[a-z\\d_]*_t\\b"
							}
								, a = {
									className: "string",
									variants: [{
											begin: '(u8?|U|L)?"',
											end: '"',
											illegal: "\\n",
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											begin: "(u8?|U|L)?'(\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)|.)",
											end: "'",
											illegal: "."
									}, e.END_SAME_AS_BEGIN({
											begin: /(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,
											end: /\)([^()\\ ]{0,16})"/
									})]
							}
								, l = {
									className: "number",
									variants: [{
											begin: "\\b(0b[01']+)"
									}, {
											begin: "(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)"
									}, {
											begin: "(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"
									}],
									relevance: 0
							}
								, c = {
									className: "meta",
									begin: /#\s*[a-z]+\b/,
									end: /$/,
									keywords: {
											keyword: "if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include"
									},
									contains: [{
											begin: /\\\n/,
											relevance: 0
									}, e.inherit(a, {
											className: "string"
									}), {
											className: "string",
											begin: /<.*?>/
									}, n, e.C_BLOCK_COMMENT_MODE]
							}
								, d = {
									className: "title",
									begin: t.optional(r) + e.IDENT_RE,
									relevance: 0
							}
								, p = t.optional(r) + e.IDENT_RE + "\\s*\\("
								, u = {
									type: ["bool", "char", "char16_t", "char32_t", "char8_t", "double", "float", "int", "long", "short", "void", "wchar_t", "unsigned", "signed", "const", "static"],
									keyword: ["alignas", "alignof", "and", "and_eq", "asm", "atomic_cancel", "atomic_commit", "atomic_noexcept", "auto", "bitand", "bitor", "break", "case", "catch", "class", "co_await", "co_return", "co_yield", "compl", "concept", "const_cast|10", "consteval", "constexpr", "constinit", "continue", "decltype", "default", "delete", "do", "dynamic_cast|10", "else", "enum", "explicit", "export", "extern", "false", "final", "for", "friend", "goto", "if", "import", "inline", "module", "mutable", "namespace", "new", "noexcept", "not", "not_eq", "nullptr", "operator", "or", "or_eq", "override", "private", "protected", "public", "reflexpr", "register", "reinterpret_cast|10", "requires", "return", "sizeof", "static_assert", "static_cast|10", "struct", "switch", "synchronized", "template", "this", "thread_local", "throw", "transaction_safe", "transaction_safe_dynamic", "true", "try", "typedef", "typeid", "typename", "union", "using", "virtual", "volatile", "while", "xor", "xor_eq"],
									literal: ["NULL", "false", "nullopt", "nullptr", "true"],
									built_in: ["_Pragma"],
									_type_hints: ["any", "auto_ptr", "barrier", "binary_semaphore", "bitset", "complex", "condition_variable", "condition_variable_any", "counting_semaphore", "deque", "false_type", "future", "imaginary", "initializer_list", "istringstream", "jthread", "latch", "lock_guard", "multimap", "multiset", "mutex", "optional", "ostringstream", "packaged_task", "pair", "promise", "priority_queue", "queue", "recursive_mutex", "recursive_timed_mutex", "scoped_lock", "set", "shared_future", "shared_lock", "shared_mutex", "shared_timed_mutex", "shared_ptr", "stack", "string_view", "stringstream", "timed_mutex", "thread", "true_type", "tuple", "unique_lock", "unique_ptr", "unordered_map", "unordered_multimap", "unordered_multiset", "unordered_set", "variant", "vector", "weak_ptr", "wstring", "wstring_view"]
							}
								, h = {
									className: "function.dispatch",
									relevance: 0,
									keywords: {
											_hint: ["abort", "abs", "acos", "apply", "as_const", "asin", "atan", "atan2", "calloc", "ceil", "cerr", "cin", "clog", "cos", "cosh", "cout", "declval", "endl", "exchange", "exit", "exp", "fabs", "floor", "fmod", "forward", "fprintf", "fputs", "free", "frexp", "fscanf", "future", "invoke", "isalnum", "isalpha", "iscntrl", "isdigit", "isgraph", "islower", "isprint", "ispunct", "isspace", "isupper", "isxdigit", "labs", "launder", "ldexp", "log", "log10", "make_pair", "make_shared", "make_shared_for_overwrite", "make_tuple", "make_unique", "malloc", "memchr", "memcmp", "memcpy", "memset", "modf", "move", "pow", "printf", "putchar", "puts", "realloc", "scanf", "sin", "sinh", "snprintf", "sprintf", "sqrt", "sscanf", "std", "stderr", "stdin", "stdout", "strcat", "strchr", "strcmp", "strcpy", "strcspn", "strlen", "strncat", "strncmp", "strncpy", "strpbrk", "strrchr", "strspn", "strstr", "swap", "tan", "tanh", "terminate", "to_underlying", "tolower", "toupper", "vfprintf", "visit", "vprintf", "vsprintf"]
									},
									begin: t.concat(/\b/, /(?!decltype)/, /(?!if)/, /(?!for)/, /(?!switch)/, /(?!while)/, e.IDENT_RE, t.lookahead(/(<[^<>]+>|)\s*\(/))
							}
								, m = [h, c, s, n, e.C_BLOCK_COMMENT_MODE, l, a]
								, g = {
									variants: [{
											begin: /=/,
											end: /;/
									}, {
											begin: /\(/,
											end: /\)/
									}, {
											beginKeywords: "new throw return else",
											end: /;/
									}],
									keywords: u,
									contains: m.concat([{
											begin: /\(/,
											end: /\)/,
											keywords: u,
											contains: m.concat(["self"]),
											relevance: 0
									}]),
									relevance: 0
							}
								, _ = {
									className: "function",
									begin: "(" + o + "[\\*&\\s]+)+" + p,
									returnBegin: !0,
									end: /[{;=]/,
									excludeEnd: !0,
									keywords: u,
									illegal: /[^\w\s\*&:<>.]/,
									contains: [{
											begin: i,
											keywords: u,
											relevance: 0
									}, {
											begin: p,
											returnBegin: !0,
											contains: [d],
											relevance: 0
									}, {
											begin: /::/,
											relevance: 0
									}, {
											begin: /:/,
											endsWithParent: !0,
											contains: [a, l]
									}, {
											relevance: 0,
											match: /,/
									}, {
											className: "params",
											begin: /\(/,
											end: /\)/,
											keywords: u,
											relevance: 0,
											contains: [n, e.C_BLOCK_COMMENT_MODE, a, l, s, {
													begin: /\(/,
													end: /\)/,
													keywords: u,
													relevance: 0,
													contains: ["self", n, e.C_BLOCK_COMMENT_MODE, a, l, s]
											}]
									}, s, n, e.C_BLOCK_COMMENT_MODE, c]
							};
							return {
									name: "C++",
									aliases: ["cc", "c++", "h++", "hpp", "hh", "hxx", "cxx"],
									keywords: u,
									illegal: "</",
									classNameAliases: {
											"function.dispatch": "built_in"
									},
									contains: [].concat(g, _, h, m, [c, {
											begin: "\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\s*<(?!<)",
											end: ">",
											keywords: u,
											contains: ["self", s]
									}, {
											begin: e.IDENT_RE + "::",
											keywords: u
									}, {
											match: [/\b(?:enum(?:\s+(?:class|struct))?|class|struct|union)/, /\s+/, /\w+/],
											className: {
													1: "keyword",
													3: "title.class"
											}
									}])
							}
					}
			}
			,
			1820: e=>{
					e.exports = function(e) {
							const t = "group clone ms master location colocation order fencing_topology rsc_ticket acl_target acl_group user role tag xml";
							return {
									name: "crmsh",
									aliases: ["crm", "pcmk"],
									case_insensitive: !0,
									keywords: {
											keyword: "params meta operations op rule attributes utilization read write deny defined not_defined in_range date spec in ref reference attribute type xpath version and or lt gt tag lte gte eq ne \\ number string",
											literal: "Master Started Slave Stopped start promote demote stop monitor true false"
									},
									contains: [e.HASH_COMMENT_MODE, {
											beginKeywords: "node",
											starts: {
													end: "\\s*([\\w_-]+:)?",
													starts: {
															className: "title",
															end: "\\s*[\\$\\w_][\\w_-]*"
													}
											}
									}, {
											beginKeywords: "primitive rsc_template",
											starts: {
													className: "title",
													end: "\\s*[\\$\\w_][\\w_-]*",
													starts: {
															end: "\\s*@?[\\w_][\\w_\\.:-]*"
													}
											}
									}, {
											begin: "\\b(" + t.split(" ").join("|") + ")\\s+",
											keywords: t,
											starts: {
													className: "title",
													end: "[\\$\\w_][\\w_-]*"
											}
									}, {
											beginKeywords: "property rsc_defaults op_defaults",
											starts: {
													className: "title",
													end: "\\s*([\\w_-]+:)?"
											}
									}, e.QUOTE_STRING_MODE, {
											className: "meta",
											begin: "(ocf|systemd|service|lsb):[\\w_:-]+",
											relevance: 0
									}, {
											className: "number",
											begin: "\\b\\d+(\\.\\d+)?(ms|s|h|m)?",
											relevance: 0
									}, {
											className: "literal",
											begin: "[-]?(infinity|inf)",
											relevance: 0
									}, {
											className: "attr",
											begin: /([A-Za-z$_#][\w_-]+)=/,
											relevance: 0
									}, {
											className: "tag",
											begin: "</?",
											end: "/?>",
											relevance: 0
									}]
							}
					}
			}
			,
			1464: e=>{
					e.exports = function(e) {
							const t = "(_?[ui](8|16|32|64|128))?"
								, n = "[a-zA-Z_]\\w*[!?=]?|[-+~]@|<<|>>|[=!]~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~|]|//|//=|&[-+*]=?|&\\*\\*|\\[\\][=?]?"
								, i = "[A-Za-z_]\\w*(::\\w+)*(\\?|!)?"
								, r = {
									$pattern: "[a-zA-Z_]\\w*[!?=]?",
									keyword: "abstract alias annotation as as? asm begin break case class def do else elsif end ensure enum extend for fun if include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? return require select self sizeof struct super then type typeof union uninitialized unless until verbatim when while with yield __DIR__ __END_LINE__ __FILE__ __LINE__",
									literal: "false nil true"
							}
								, o = {
									className: "subst",
									begin: /#\{/,
									end: /\}/,
									keywords: r
							}
								, s = {
									className: "variable",
									begin: "(\\$\\W)|((\\$|@@?)(\\w+))(?=[^@$?])(?![A-Za-z])(?![@$?'])"
							}
								, a = {
									className: "template-variable",
									variants: [{
											begin: "\\{\\{",
											end: "\\}\\}"
									}, {
											begin: "\\{%",
											end: "%\\}"
									}],
									keywords: r
							};
							function recursiveParen(e, t) {
									const n = [{
											begin: e,
											end: t
									}];
									return n[0].contains = n,
									n
							}
							const l = {
									className: "string",
									contains: [e.BACKSLASH_ESCAPE, o],
									variants: [{
											begin: /'/,
											end: /'/
									}, {
											begin: /"/,
											end: /"/
									}, {
											begin: /`/,
											end: /`/
									}, {
											begin: "%[Qwi]?\\(",
											end: "\\)",
											contains: recursiveParen("\\(", "\\)")
									}, {
											begin: "%[Qwi]?\\[",
											end: "\\]",
											contains: recursiveParen("\\[", "\\]")
									}, {
											begin: "%[Qwi]?\\{",
											end: /\}/,
											contains: recursiveParen(/\{/, /\}/)
									}, {
											begin: "%[Qwi]?<",
											end: ">",
											contains: recursiveParen("<", ">")
									}, {
											begin: "%[Qwi]?\\|",
											end: "\\|"
									}, {
											begin: /<<-\w+$/,
											end: /^\s*\w+$/
									}],
									relevance: 0
							}
								, c = {
									className: "string",
									variants: [{
											begin: "%q\\(",
											end: "\\)",
											contains: recursiveParen("\\(", "\\)")
									}, {
											begin: "%q\\[",
											end: "\\]",
											contains: recursiveParen("\\[", "\\]")
									}, {
											begin: "%q\\{",
											end: /\}/,
											contains: recursiveParen(/\{/, /\}/)
									}, {
											begin: "%q<",
											end: ">",
											contains: recursiveParen("<", ">")
									}, {
											begin: "%q\\|",
											end: "\\|"
									}, {
											begin: /<<-'\w+'$/,
											end: /^\s*\w+$/
									}],
									relevance: 0
							}
								, d = {
									begin: "(?!%\\})(" + e.RE_STARTERS_RE + "|\\n|\\b(case|if|select|unless|until|when|while)\\b)\\s*",
									keywords: "case if select unless until when while",
									contains: [{
											className: "regexp",
											contains: [e.BACKSLASH_ESCAPE, o],
											variants: [{
													begin: "//[a-z]*",
													relevance: 0
											}, {
													begin: "/(?!\\/)",
													end: "/[a-z]*"
											}]
									}],
									relevance: 0
							}
								, p = [a, l, c, {
									className: "regexp",
									contains: [e.BACKSLASH_ESCAPE, o],
									variants: [{
											begin: "%r\\(",
											end: "\\)",
											contains: recursiveParen("\\(", "\\)")
									}, {
											begin: "%r\\[",
											end: "\\]",
											contains: recursiveParen("\\[", "\\]")
									}, {
											begin: "%r\\{",
											end: /\}/,
											contains: recursiveParen(/\{/, /\}/)
									}, {
											begin: "%r<",
											end: ">",
											contains: recursiveParen("<", ">")
									}, {
											begin: "%r\\|",
											end: "\\|"
									}],
									relevance: 0
							}, d, {
									className: "meta",
									begin: "@\\[",
									end: "\\]",
									contains: [e.inherit(e.QUOTE_STRING_MODE, {
											className: "string"
									})]
							}, s, e.HASH_COMMENT_MODE, {
									className: "class",
									beginKeywords: "class module struct",
									end: "$|;",
									illegal: /=/,
									contains: [e.HASH_COMMENT_MODE, e.inherit(e.TITLE_MODE, {
											begin: i
									}), {
											begin: "<"
									}]
							}, {
									className: "class",
									beginKeywords: "lib enum union",
									end: "$|;",
									illegal: /=/,
									contains: [e.HASH_COMMENT_MODE, e.inherit(e.TITLE_MODE, {
											begin: i
									})]
							}, {
									beginKeywords: "annotation",
									end: "$|;",
									illegal: /=/,
									contains: [e.HASH_COMMENT_MODE, e.inherit(e.TITLE_MODE, {
											begin: i
									})],
									relevance: 2
							}, {
									className: "function",
									beginKeywords: "def",
									end: /\B\b/,
									contains: [e.inherit(e.TITLE_MODE, {
											begin: n,
											endsParent: !0
									})]
							}, {
									className: "function",
									beginKeywords: "fun macro",
									end: /\B\b/,
									contains: [e.inherit(e.TITLE_MODE, {
											begin: n,
											endsParent: !0
									})],
									relevance: 2
							}, {
									className: "symbol",
									begin: e.UNDERSCORE_IDENT_RE + "(!|\\?)?:",
									relevance: 0
							}, {
									className: "symbol",
									begin: ":",
									contains: [l, {
											begin: n
									}],
									relevance: 0
							}, {
									className: "number",
									variants: [{
											begin: "\\b0b([01_]+)" + t
									}, {
											begin: "\\b0o([0-7_]+)" + t
									}, {
											begin: "\\b0x([A-Fa-f0-9_]+)" + t
									}, {
											begin: "\\b([1-9][0-9_]*[0-9]|[0-9])(\\.[0-9][0-9_]*)?([eE]_?[-+]?[0-9_]*)?(_?f(32|64))?(?!_)"
									}, {
											begin: "\\b([1-9][0-9_]*|0)" + t
									}],
									relevance: 0
							}];
							return o.contains = p,
							a.contains = p.slice(1),
							{
									name: "Crystal",
									aliases: ["cr"],
									keywords: r,
									contains: p
							}
					}
			}
			,
			7207: e=>{
					e.exports = function(e) {
							const t = {
									keyword: ["abstract", "as", "base", "break", "case", "catch", "class", "const", "continue", "do", "else", "event", "explicit", "extern", "finally", "fixed", "for", "foreach", "goto", "if", "implicit", "in", "interface", "internal", "is", "lock", "namespace", "new", "operator", "out", "override", "params", "private", "protected", "public", "readonly", "record", "ref", "return", "scoped", "sealed", "sizeof", "stackalloc", "static", "struct", "switch", "this", "throw", "try", "typeof", "unchecked", "unsafe", "using", "virtual", "void", "volatile", "while"].concat(["add", "alias", "and", "ascending", "async", "await", "by", "descending", "equals", "from", "get", "global", "group", "init", "into", "join", "let", "nameof", "not", "notnull", "on", "or", "orderby", "partial", "remove", "select", "set", "unmanaged", "value|0", "var", "when", "where", "with", "yield"]),
									built_in: ["bool", "byte", "char", "decimal", "delegate", "double", "dynamic", "enum", "float", "int", "long", "nint", "nuint", "object", "sbyte", "short", "string", "ulong", "uint", "ushort"],
									literal: ["default", "false", "null", "true"]
							}
								, n = e.inherit(e.TITLE_MODE, {
									begin: "[a-zA-Z](\\.?\\w)*"
							})
								, i = {
									className: "number",
									variants: [{
											begin: "\\b(0b[01']+)"
									}, {
											begin: "(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)(u|U|l|L|ul|UL|f|F|b|B)"
									}, {
											begin: "(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"
									}],
									relevance: 0
							}
								, r = {
									className: "string",
									begin: '@"',
									end: '"',
									contains: [{
											begin: '""'
									}]
							}
								, o = e.inherit(r, {
									illegal: /\n/
							})
								, s = {
									className: "subst",
									begin: /\{/,
									end: /\}/,
									keywords: t
							}
								, a = e.inherit(s, {
									illegal: /\n/
							})
								, l = {
									className: "string",
									begin: /\$"/,
									end: '"',
									illegal: /\n/,
									contains: [{
											begin: /\{\{/
									}, {
											begin: /\}\}/
									}, e.BACKSLASH_ESCAPE, a]
							}
								, c = {
									className: "string",
									begin: /\$@"/,
									end: '"',
									contains: [{
											begin: /\{\{/
									}, {
											begin: /\}\}/
									}, {
											begin: '""'
									}, s]
							}
								, d = e.inherit(c, {
									illegal: /\n/,
									contains: [{
											begin: /\{\{/
									}, {
											begin: /\}\}/
									}, {
											begin: '""'
									}, a]
							});
							s.contains = [c, l, r, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, i, e.C_BLOCK_COMMENT_MODE],
							a.contains = [d, l, o, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, i, e.inherit(e.C_BLOCK_COMMENT_MODE, {
									illegal: /\n/
							})];
							const p = {
									variants: [c, l, r, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE]
							}
								, u = {
									begin: "<",
									end: ">",
									contains: [{
											beginKeywords: "in out"
									}, n]
							}
								, h = e.IDENT_RE + "(<" + e.IDENT_RE + "(\\s*,\\s*" + e.IDENT_RE + ")*>)?(\\[\\])?"
								, m = {
									begin: "@" + e.IDENT_RE,
									relevance: 0
							};
							return {
									name: "C#",
									aliases: ["cs", "c#"],
									keywords: t,
									illegal: /::/,
									contains: [e.COMMENT("///", "$", {
											returnBegin: !0,
											contains: [{
													className: "doctag",
													variants: [{
															begin: "///",
															relevance: 0
													}, {
															begin: "\x3c!--|--\x3e"
													}, {
															begin: "</?",
															end: ">"
													}]
											}]
									}), e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, {
											className: "meta",
											begin: "#",
											end: "$",
											keywords: {
													keyword: "if else elif endif define undef warning error line region endregion pragma checksum"
											}
									}, p, i, {
											beginKeywords: "class interface",
											relevance: 0,
											end: /[{;=]/,
											illegal: /[^\s:,]/,
											contains: [{
													beginKeywords: "where class"
											}, n, u, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
									}, {
											beginKeywords: "namespace",
											relevance: 0,
											end: /[{;=]/,
											illegal: /[^\s:]/,
											contains: [n, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
									}, {
											beginKeywords: "record",
											relevance: 0,
											end: /[{;=]/,
											illegal: /[^\s:]/,
											contains: [n, u, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
									}, {
											className: "meta",
											begin: "^\\s*\\[(?=[\\w])",
											excludeBegin: !0,
											end: "\\]",
											excludeEnd: !0,
											contains: [{
													className: "string",
													begin: /"/,
													end: /"/
											}]
									}, {
											beginKeywords: "new return throw await else",
											relevance: 0
									}, {
											className: "function",
											begin: "(" + h + "\\s+)+" + e.IDENT_RE + "\\s*(<[^=]+>\\s*)?\\(",
											returnBegin: !0,
											end: /\s*[{;=]/,
											excludeEnd: !0,
											keywords: t,
											contains: [{
													beginKeywords: ["public", "private", "protected", "static", "internal", "protected", "abstract", "async", "extern", "override", "unsafe", "virtual", "new", "sealed", "partial"].join(" "),
													relevance: 0
											}, {
													begin: e.IDENT_RE + "\\s*(<[^=]+>\\s*)?\\(",
													returnBegin: !0,
													contains: [e.TITLE_MODE, u],
													relevance: 0
											}, {
													match: /\(\)/
											}, {
													className: "params",
													begin: /\(/,
													end: /\)/,
													excludeBegin: !0,
													excludeEnd: !0,
													keywords: t,
													relevance: 0,
													contains: [p, i, e.C_BLOCK_COMMENT_MODE]
											}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
									}, m]
							}
					}
			}
			,
			632: e=>{
					e.exports = function(e) {
							return {
									name: "CSP",
									case_insensitive: !1,
									keywords: {
											$pattern: "[a-zA-Z][a-zA-Z0-9_-]*",
											keyword: ["base-uri", "child-src", "connect-src", "default-src", "font-src", "form-action", "frame-ancestors", "frame-src", "img-src", "manifest-src", "media-src", "object-src", "plugin-types", "report-uri", "sandbox", "script-src", "style-src", "trusted-types", "unsafe-hashes", "worker-src"]
									},
									contains: [{
											className: "string",
											begin: "'",
											end: "'"
									}, {
											className: "attribute",
											begin: "^Content",
											end: ":",
											excludeEnd: !0
									}]
							}
					}
			}
			,
			3460: e=>{
					const t = ["a", "abbr", "address", "article", "aside", "audio", "b", "blockquote", "body", "button", "canvas", "caption", "cite", "code", "dd", "del", "details", "dfn", "div", "dl", "dt", "em", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hgroup", "html", "i", "iframe", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "mark", "menu", "nav", "object", "ol", "p", "q", "quote", "samp", "section", "span", "strong", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "tr", "ul", "var", "video"]
						, n = ["any-hover", "any-pointer", "aspect-ratio", "color", "color-gamut", "color-index", "device-aspect-ratio", "device-height", "device-width", "display-mode", "forced-colors", "grid", "height", "hover", "inverted-colors", "monochrome", "orientation", "overflow-block", "overflow-inline", "pointer", "prefers-color-scheme", "prefers-contrast", "prefers-reduced-motion", "prefers-reduced-transparency", "resolution", "scan", "scripting", "update", "width", "min-width", "max-width", "min-height", "max-height"]
						, i = ["active", "any-link", "blank", "checked", "current", "default", "defined", "dir", "disabled", "drop", "empty", "enabled", "first", "first-child", "first-of-type", "fullscreen", "future", "focus", "focus-visible", "focus-within", "has", "host", "host-context", "hover", "indeterminate", "in-range", "invalid", "is", "lang", "last-child", "last-of-type", "left", "link", "local-link", "not", "nth-child", "nth-col", "nth-last-child", "nth-last-col", "nth-last-of-type", "nth-of-type", "only-child", "only-of-type", "optional", "out-of-range", "past", "placeholder-shown", "read-only", "read-write", "required", "right", "root", "scope", "target", "target-within", "user-invalid", "valid", "visited", "where"]
						, r = ["after", "backdrop", "before", "cue", "cue-region", "first-letter", "first-line", "grammar-error", "marker", "part", "placeholder", "selection", "slotted", "spelling-error"]
						, o = ["align-content", "align-items", "align-self", "all", "animation", "animation-delay", "animation-direction", "animation-duration", "animation-fill-mode", "animation-iteration-count", "animation-name", "animation-play-state", "animation-timing-function", "backface-visibility", "background", "background-attachment", "background-blend-mode", "background-clip", "background-color", "background-image", "background-origin", "background-position", "background-repeat", "background-size", "block-size", "border", "border-block", "border-block-color", "border-block-end", "border-block-end-color", "border-block-end-style", "border-block-end-width", "border-block-start", "border-block-start-color", "border-block-start-style", "border-block-start-width", "border-block-style", "border-block-width", "border-bottom", "border-bottom-color", "border-bottom-left-radius", "border-bottom-right-radius", "border-bottom-style", "border-bottom-width", "border-collapse", "border-color", "border-image", "border-image-outset", "border-image-repeat", "border-image-slice", "border-image-source", "border-image-width", "border-inline", "border-inline-color", "border-inline-end", "border-inline-end-color", "border-inline-end-style", "border-inline-end-width", "border-inline-start", "border-inline-start-color", "border-inline-start-style", "border-inline-start-width", "border-inline-style", "border-inline-width", "border-left", "border-left-color", "border-left-style", "border-left-width", "border-radius", "border-right", "border-right-color", "border-right-style", "border-right-width", "border-spacing", "border-style", "border-top", "border-top-color", "border-top-left-radius", "border-top-right-radius", "border-top-style", "border-top-width", "border-width", "bottom", "box-decoration-break", "box-shadow", "box-sizing", "break-after", "break-before", "break-inside", "caption-side", "caret-color", "clear", "clip", "clip-path", "clip-rule", "color", "column-count", "column-fill", "column-gap", "column-rule", "column-rule-color", "column-rule-style", "column-rule-width", "column-span", "column-width", "columns", "contain", "content", "content-visibility", "counter-increment", "counter-reset", "cue", "cue-after", "cue-before", "cursor", "direction", "display", "empty-cells", "filter", "flex", "flex-basis", "flex-direction", "flex-flow", "flex-grow", "flex-shrink", "flex-wrap", "float", "flow", "font", "font-display", "font-family", "font-feature-settings", "font-kerning", "font-language-override", "font-size", "font-size-adjust", "font-smoothing", "font-stretch", "font-style", "font-synthesis", "font-variant", "font-variant-caps", "font-variant-east-asian", "font-variant-ligatures", "font-variant-numeric", "font-variant-position", "font-variation-settings", "font-weight", "gap", "glyph-orientation-vertical", "grid", "grid-area", "grid-auto-columns", "grid-auto-flow", "grid-auto-rows", "grid-column", "grid-column-end", "grid-column-start", "grid-gap", "grid-row", "grid-row-end", "grid-row-start", "grid-template", "grid-template-areas", "grid-template-columns", "grid-template-rows", "hanging-punctuation", "height", "hyphens", "icon", "image-orientation", "image-rendering", "image-resolution", "ime-mode", "inline-size", "isolation", "justify-content", "left", "letter-spacing", "line-break", "line-height", "list-style", "list-style-image", "list-style-position", "list-style-type", "margin", "margin-block", "margin-block-end", "margin-block-start", "margin-bottom", "margin-inline", "margin-inline-end", "margin-inline-start", "margin-left", "margin-right", "margin-top", "marks", "mask", "mask-border", "mask-border-mode", "mask-border-outset", "mask-border-repeat", "mask-border-slice", "mask-border-source", "mask-border-width", "mask-clip", "mask-composite", "mask-image", "mask-mode", "mask-origin", "mask-position", "mask-repeat", "mask-size", "mask-type", "max-block-size", "max-height", "max-inline-size", "max-width", "min-block-size", "min-height", "min-inline-size", "min-width", "mix-blend-mode", "nav-down", "nav-index", "nav-left", "nav-right", "nav-up", "none", "normal", "object-fit", "object-position", "opacity", "order", "orphans", "outline", "outline-color", "outline-offset", "outline-style", "outline-width", "overflow", "overflow-wrap", "overflow-x", "overflow-y", "padding", "padding-block", "padding-block-end", "padding-block-start", "padding-bottom", "padding-inline", "padding-inline-end", "padding-inline-start", "padding-left", "padding-right", "padding-top", "page-break-after", "page-break-before", "page-break-inside", "pause", "pause-after", "pause-before", "perspective", "perspective-origin", "pointer-events", "position", "quotes", "resize", "rest", "rest-after", "rest-before", "right", "row-gap", "scroll-margin", "scroll-margin-block", "scroll-margin-block-end", "scroll-margin-block-start", "scroll-margin-bottom", "scroll-margin-inline", "scroll-margin-inline-end", "scroll-margin-inline-start", "scroll-margin-left", "scroll-margin-right", "scroll-margin-top", "scroll-padding", "scroll-padding-block", "scroll-padding-block-end", "scroll-padding-block-start", "scroll-padding-bottom", "scroll-padding-inline", "scroll-padding-inline-end", "scroll-padding-inline-start", "scroll-padding-left", "scroll-padding-right", "scroll-padding-top", "scroll-snap-align", "scroll-snap-stop", "scroll-snap-type", "scrollbar-color", "scrollbar-gutter", "scrollbar-width", "shape-image-threshold", "shape-margin", "shape-outside", "speak", "speak-as", "src", "tab-size", "table-layout", "text-align", "text-align-all", "text-align-last", "text-combine-upright", "text-decoration", "text-decoration-color", "text-decoration-line", "text-decoration-style", "text-emphasis", "text-emphasis-color", "text-emphasis-position", "text-emphasis-style", "text-indent", "text-justify", "text-orientation", "text-overflow", "text-rendering", "text-shadow", "text-transform", "text-underline-position", "top", "transform", "transform-box", "transform-origin", "transform-style", "transition", "transition-delay", "transition-duration", "transition-property", "transition-timing-function", "unicode-bidi", "vertical-align", "visibility", "voice-balance", "voice-duration", "voice-family", "voice-pitch", "voice-range", "voice-rate", "voice-stress", "voice-volume", "white-space", "widows", "width", "will-change", "word-break", "word-spacing", "word-wrap", "writing-mode", "z-index"].reverse();
					e.exports = function(e) {
							const s = e.regex
								, a = (e=>({
									IMPORTANT: {
											scope: "meta",
											begin: "!important"
									},
									BLOCK_COMMENT: e.C_BLOCK_COMMENT_MODE,
									HEXCOLOR: {
											scope: "number",
											begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/
									},
									FUNCTION_DISPATCH: {
											className: "built_in",
											begin: /[\w-]+(?=\()/
									},
									ATTRIBUTE_SELECTOR_MODE: {
											scope: "selector-attr",
											begin: /\[/,
											end: /\]/,
											illegal: "$",
											contains: [e.APOS_STRING_MODE, e.QUOTE_STRING_MODE]
									},
									CSS_NUMBER_MODE: {
											scope: "number",
											begin: e.NUMBER_RE + "(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",
											relevance: 0
									},
									CSS_VARIABLE: {
											className: "attr",
											begin: /--[A-Za-z][A-Za-z0-9_-]*/
									}
							}))(e)
								, l = [e.APOS_STRING_MODE, e.QUOTE_STRING_MODE];
							return {
									name: "CSS",
									case_insensitive: !0,
									illegal: /[=|'\$]/,
									keywords: {
											keyframePosition: "from to"
									},
									classNameAliases: {
											keyframePosition: "selector-tag"
									},
									contains: [a.BLOCK_COMMENT, {
											begin: /-(webkit|moz|ms|o)-(?=[a-z])/
									}, a.CSS_NUMBER_MODE, {
											className: "selector-id",
											begin: /#[A-Za-z0-9_-]+/,
											relevance: 0
									}, {
											className: "selector-class",
											begin: "\\.[a-zA-Z-][a-zA-Z0-9_-]*",
											relevance: 0
									}, a.ATTRIBUTE_SELECTOR_MODE, {
											className: "selector-pseudo",
											variants: [{
													begin: ":(" + i.join("|") + ")"
											}, {
													begin: ":(:)?(" + r.join("|") + ")"
											}]
									}, a.CSS_VARIABLE, {
											className: "attribute",
											begin: "\\b(" + o.join("|") + ")\\b"
									}, {
											begin: /:/,
											end: /[;}{]/,
											contains: [a.BLOCK_COMMENT, a.HEXCOLOR, a.IMPORTANT, a.CSS_NUMBER_MODE, ...l, {
													begin: /(url|data-uri)\(/,
													end: /\)/,
													relevance: 0,
													keywords: {
															built_in: "url data-uri"
													},
													contains: [...l, {
															className: "string",
															begin: /[^)]/,
															endsWithParent: !0,
															excludeEnd: !0
													}]
											}, a.FUNCTION_DISPATCH]
									}, {
											begin: s.lookahead(/@/),
											end: "[{;]",
											relevance: 0,
											illegal: /:/,
											contains: [{
													className: "keyword",
													begin: /@-?\w[\w]*(-\w+)*/
											}, {
													begin: /\s/,
													endsWithParent: !0,
													excludeEnd: !0,
													relevance: 0,
													keywords: {
															$pattern: /[a-z-]+/,
															keyword: "and or not only",
															attribute: n.join(" ")
													},
													contains: [{
															begin: /[a-z-]+(?=:)/,
															className: "attribute"
													}, ...l, a.CSS_NUMBER_MODE]
											}]
									}, {
											className: "selector-tag",
											begin: "\\b(" + t.join("|") + ")\\b"
									}]
							}
					}
			}
			,
			6509: e=>{
					e.exports = function(e) {
							const t = {
									$pattern: e.UNDERSCORE_IDENT_RE,
									keyword: "abstract alias align asm assert auto body break byte case cast catch class const continue debug default delete deprecated do else enum export extern final finally for foreach foreach_reverse|10 goto if immutable import in inout int interface invariant is lazy macro mixin module new nothrow out override package pragma private protected public pure ref return scope shared static struct super switch synchronized template this throw try typedef typeid typeof union unittest version void volatile while with __FILE__ __LINE__ __gshared|10 __thread __traits __DATE__ __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__",
									built_in: "bool cdouble cent cfloat char creal dchar delegate double dstring float function idouble ifloat ireal long real short string ubyte ucent uint ulong ushort wchar wstring",
									literal: "false null true"
							}
								, n = "(0|[1-9][\\d_]*)"
								, i = "(0|[1-9][\\d_]*|\\d[\\d_]*|[\\d_]+?\\d)"
								, r = "([\\da-fA-F][\\da-fA-F_]*|_[\\da-fA-F][\\da-fA-F_]*)"
								, o = "([eE][+-]?" + i + ")"
								, s = "(" + n + "|0[bB][01_]+|" + ("0[xX]" + r) + ")"
								, a = "\\\\(['\"\\?\\\\abfnrtv]|u[\\dA-Fa-f]{4}|[0-7]{1,3}|x[\\dA-Fa-f]{2}|U[\\dA-Fa-f]{8})|&[a-zA-Z\\d]{2,};"
								, l = {
									className: "number",
									begin: "\\b" + s + "(L|u|U|Lu|LU|uL|UL)?",
									relevance: 0
							}
								, c = {
									className: "number",
									begin: "\\b(" + ("(" + ("(0[xX](" + r + "\\." + r + "|\\.?" + r + ")[pP][+-]?" + i + ")") + "|" + ("(" + i + "(\\.\\d*|" + o + ")|\\d+\\." + i + "|\\." + n + o + "?)") + ")") + "([fF]|L|i|[fF]i|Li)?|" + s + "(i|[fF]i|Li))",
									relevance: 0
							}
								, d = {
									className: "string",
									begin: "'(" + a + "|.)",
									end: "'",
									illegal: "."
							}
								, p = {
									className: "string",
									begin: '"',
									contains: [{
											begin: a,
											relevance: 0
									}],
									end: '"[cwd]?'
							}
								, u = e.COMMENT("\\/\\+", "\\+\\/", {
									contains: ["self"],
									relevance: 10
							});
							return {
									name: "D",
									keywords: t,
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, u, {
											className: "string",
											begin: 'x"[\\da-fA-F\\s\\n\\r]*"[cwd]?',
											relevance: 10
									}, p, {
											className: "string",
											begin: '[rq]"',
											end: '"[cwd]?',
											relevance: 5
									}, {
											className: "string",
											begin: "`",
											end: "`[cwd]?"
									}, {
											className: "string",
											begin: 'q"\\{',
											end: '\\}"'
									}, c, l, d, {
											className: "meta",
											begin: "^#!",
											end: "$",
											relevance: 5
									}, {
											className: "meta",
											begin: "#(line)",
											end: "$",
											relevance: 5
									}, {
											className: "keyword",
											begin: "@[a-zA-Z_][a-zA-Z_\\d]*"
									}]
							}
					}
			}
			,
			9823: e=>{
					e.exports = function(e) {
							const t = {
									className: "subst",
									variants: [{
											begin: "\\$[A-Za-z0-9_]+"
									}]
							}
								, n = {
									className: "subst",
									variants: [{
											begin: /\$\{/,
											end: /\}/
									}],
									keywords: "true false null this is new super"
							}
								, i = {
									className: "string",
									variants: [{
											begin: "r'''",
											end: "'''"
									}, {
											begin: 'r"""',
											end: '"""'
									}, {
											begin: "r'",
											end: "'",
											illegal: "\\n"
									}, {
											begin: 'r"',
											end: '"',
											illegal: "\\n"
									}, {
											begin: "'''",
											end: "'''",
											contains: [e.BACKSLASH_ESCAPE, t, n]
									}, {
											begin: '"""',
											end: '"""',
											contains: [e.BACKSLASH_ESCAPE, t, n]
									}, {
											begin: "'",
											end: "'",
											illegal: "\\n",
											contains: [e.BACKSLASH_ESCAPE, t, n]
									}, {
											begin: '"',
											end: '"',
											illegal: "\\n",
											contains: [e.BACKSLASH_ESCAPE, t, n]
									}]
							};
							n.contains = [e.C_NUMBER_MODE, i];
							const r = ["Comparable", "DateTime", "Duration", "Function", "Iterable", "Iterator", "List", "Map", "Match", "Object", "Pattern", "RegExp", "Set", "Stopwatch", "String", "StringBuffer", "StringSink", "Symbol", "Type", "Uri", "bool", "double", "int", "num", "Element", "ElementList"]
								, o = r.map((e=>`${e}?`));
							return {
									name: "Dart",
									keywords: {
											keyword: ["abstract", "as", "assert", "async", "await", "break", "case", "catch", "class", "const", "continue", "covariant", "default", "deferred", "do", "dynamic", "else", "enum", "export", "extends", "extension", "external", "factory", "false", "final", "finally", "for", "Function", "get", "hide", "if", "implements", "import", "in", "inferface", "is", "late", "library", "mixin", "new", "null", "on", "operator", "part", "required", "rethrow", "return", "set", "show", "static", "super", "switch", "sync", "this", "throw", "true", "try", "typedef", "var", "void", "while", "with", "yield"],
											built_in: r.concat(o).concat(["Never", "Null", "dynamic", "print", "document", "querySelector", "querySelectorAll", "window"]),
											$pattern: /[A-Za-z][A-Za-z0-9_]*\??/
									},
									contains: [i, e.COMMENT(/\/\*\*(?!\/)/, /\*\//, {
											subLanguage: "markdown",
											relevance: 0
									}), e.COMMENT(/\/{3,} ?/, /$/, {
											contains: [{
													subLanguage: "markdown",
													begin: ".",
													end: "$",
													relevance: 0
											}]
									}), e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, {
											className: "class",
											beginKeywords: "class interface",
											end: /\{/,
											excludeEnd: !0,
											contains: [{
													beginKeywords: "extends implements"
											}, e.UNDERSCORE_TITLE_MODE]
									}, e.C_NUMBER_MODE, {
											className: "meta",
											begin: "@[A-Za-z]+"
									}, {
											begin: "=>"
									}]
							}
					}
			}
			,
			5071: e=>{
					e.exports = function(e) {
							const t = ["exports", "register", "file", "shl", "array", "record", "property", "for", "mod", "while", "set", "ally", "label", "uses", "raise", "not", "stored", "class", "safecall", "var", "interface", "or", "private", "static", "exit", "index", "inherited", "to", "else", "stdcall", "override", "shr", "asm", "far", "resourcestring", "finalization", "packed", "virtual", "out", "and", "protected", "library", "do", "xorwrite", "goto", "near", "function", "end", "div", "overload", "object", "unit", "begin", "string", "on", "inline", "repeat", "until", "destructor", "write", "message", "program", "with", "read", "initialization", "except", "default", "nil", "if", "case", "cdecl", "in", "downto", "threadvar", "of", "try", "pascal", "const", "external", "constructor", "type", "public", "then", "implementation", "finally", "published", "procedure", "absolute", "reintroduce", "operator", "as", "is", "abstract", "alias", "assembler", "bitpacked", "break", "continue", "cppdecl", "cvar", "enumerator", "experimental", "platform", "deprecated", "unimplemented", "dynamic", "export", "far16", "forward", "generic", "helper", "implements", "interrupt", "iochecks", "local", "name", "nodefault", "noreturn", "nostackframe", "oldfpccall", "otherwise", "saveregisters", "softfloat", "specialize", "strict", "unaligned", "varargs"]
								, n = [e.C_LINE_COMMENT_MODE, e.COMMENT(/\{/, /\}/, {
									relevance: 0
							}), e.COMMENT(/\(\*/, /\*\)/, {
									relevance: 10
							})]
								, i = {
									className: "meta",
									variants: [{
											begin: /\{\$/,
											end: /\}/
									}, {
											begin: /\(\*\$/,
											end: /\*\)/
									}]
							}
								, r = {
									className: "string",
									begin: /'/,
									end: /'/,
									contains: [{
											begin: /''/
									}]
							}
								, o = {
									className: "string",
									begin: /(#\d+)+/
							}
								, s = {
									begin: e.IDENT_RE + "\\s*=\\s*class\\s*\\(",
									returnBegin: !0,
									contains: [e.TITLE_MODE]
							}
								, a = {
									className: "function",
									beginKeywords: "function constructor destructor procedure",
									end: /[:;]/,
									keywords: "function constructor|10 destructor|10 procedure|10",
									contains: [e.TITLE_MODE, {
											className: "params",
											begin: /\(/,
											end: /\)/,
											keywords: t,
											contains: [r, o, i].concat(n)
									}, i].concat(n)
							};
							return {
									name: "Delphi",
									aliases: ["dpr", "dfm", "pas", "pascal"],
									case_insensitive: !0,
									keywords: t,
									illegal: /"|\$[G-Zg-z]|\/\*|<\/|\|/,
									contains: [r, o, e.NUMBER_MODE, {
											className: "number",
											relevance: 0,
											variants: [{
													begin: "\\$[0-9A-Fa-f]+"
											}, {
													begin: "&[0-7]+"
											}, {
													begin: "%[01]+"
											}]
									}, s, a, i].concat(n)
							}
					}
			}
			,
			2464: e=>{
					e.exports = function(e) {
							const t = e.regex;
							return {
									name: "Diff",
									aliases: ["patch"],
									contains: [{
											className: "meta",
											relevance: 10,
											match: t.either(/^@@ +-\d+,\d+ +\+\d+,\d+ +@@/, /^\*\*\* +\d+,\d+ +\*\*\*\*$/, /^--- +\d+,\d+ +----$/)
									}, {
											className: "comment",
											variants: [{
													begin: t.either(/Index: /, /^index/, /={3,}/, /^-{3}/, /^\*{3} /, /^\+{3}/, /^diff --git/),
													end: /$/
											}, {
													match: /^\*{15}$/
											}]
									}, {
											className: "addition",
											begin: /^\+/,
											end: /$/
									}, {
											className: "deletion",
											begin: /^-/,
											end: /$/
									}, {
											className: "addition",
											begin: /^!/,
											end: /$/
									}]
							}
					}
			}
			,
			8936: e=>{
					e.exports = function(e) {
							const t = {
									begin: /\|[A-Za-z]+:?/,
									keywords: {
											name: "truncatewords removetags linebreaksbr yesno get_digit timesince random striptags filesizeformat escape linebreaks length_is ljust rjust cut urlize fix_ampersands title floatformat capfirst pprint divisibleby add make_list unordered_list urlencode timeuntil urlizetrunc wordcount stringformat linenumbers slice date dictsort dictsortreversed default_if_none pluralize lower join center default truncatewords_html upper length phone2numeric wordwrap time addslashes slugify first escapejs force_escape iriencode last safe safeseq truncatechars localize unlocalize localtime utc timezone"
									},
									contains: [e.QUOTE_STRING_MODE, e.APOS_STRING_MODE]
							};
							return {
									name: "Django",
									aliases: ["jinja"],
									case_insensitive: !0,
									subLanguage: "xml",
									contains: [e.COMMENT(/\{%\s*comment\s*%\}/, /\{%\s*endcomment\s*%\}/), e.COMMENT(/\{#/, /#\}/), {
											className: "template-tag",
											begin: /\{%/,
											end: /%\}/,
											contains: [{
													className: "name",
													begin: /\w+/,
													keywords: {
															name: "comment endcomment load templatetag ifchanged endifchanged if endif firstof for endfor ifnotequal endifnotequal widthratio extends include spaceless endspaceless regroup ifequal endifequal ssi now with cycle url filter endfilter debug block endblock else autoescape endautoescape csrf_token empty elif endwith static trans blocktrans endblocktrans get_static_prefix get_media_prefix plural get_current_language language get_available_languages get_current_language_bidi get_language_info get_language_info_list localize endlocalize localtime endlocaltime timezone endtimezone get_current_timezone verbatim"
													},
													starts: {
															endsWithParent: !0,
															keywords: "in by as",
															contains: [t],
															relevance: 0
													}
											}]
									}, {
											className: "template-variable",
											begin: /\{\{/,
											end: /\}\}/,
											contains: [t]
									}]
							}
					}
			}
			,
			5342: e=>{
					e.exports = function(e) {
							return {
									name: "DNS Zone",
									aliases: ["bind", "zone"],
									keywords: ["IN", "A", "AAAA", "AFSDB", "APL", "CAA", "CDNSKEY", "CDS", "CERT", "CNAME", "DHCID", "DLV", "DNAME", "DNSKEY", "DS", "HIP", "IPSECKEY", "KEY", "KX", "LOC", "MX", "NAPTR", "NS", "NSEC", "NSEC3", "NSEC3PARAM", "PTR", "RRSIG", "RP", "SIG", "SOA", "SRV", "SSHFP", "TA", "TKEY", "TLSA", "TSIG", "TXT"],
									contains: [e.COMMENT(";", "$", {
											relevance: 0
									}), {
											className: "meta",
											begin: /^\$(TTL|GENERATE|INCLUDE|ORIGIN)\b/
									}, {
											className: "number",
											begin: "((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))\\b"
									}, {
											className: "number",
											begin: "((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]).){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\b"
									}, e.inherit(e.NUMBER_MODE, {
											begin: /\b\d+[dhwm]?/
									})]
							}
					}
			}
			,
			6826: e=>{
					e.exports = function(e) {
							return {
									name: "Dockerfile",
									aliases: ["docker"],
									case_insensitive: !0,
									keywords: ["from", "maintainer", "expose", "env", "arg", "user", "onbuild", "stopsignal"],
									contains: [e.HASH_COMMENT_MODE, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, e.NUMBER_MODE, {
											beginKeywords: "run cmd entrypoint volume add copy workdir label healthcheck shell",
											starts: {
													end: /[^\\]$/,
													subLanguage: "bash"
											}
									}],
									illegal: "</"
							}
					}
			}
			,
			7892: e=>{
					e.exports = function(e) {
							const t = e.COMMENT(/^\s*@?rem\b/, /$/, {
									relevance: 10
							});
							return {
									name: "Batch file (DOS)",
									aliases: ["bat", "cmd"],
									case_insensitive: !0,
									illegal: /\/\*/,
									keywords: {
											keyword: ["if", "else", "goto", "for", "in", "do", "call", "exit", "not", "exist", "errorlevel", "defined", "equ", "neq", "lss", "leq", "gtr", "geq"],
											built_in: ["prn", "nul", "lpt3", "lpt2", "lpt1", "con", "com4", "com3", "com2", "com1", "aux", "shift", "cd", "dir", "echo", "setlocal", "endlocal", "set", "pause", "copy", "append", "assoc", "at", "attrib", "break", "cacls", "cd", "chcp", "chdir", "chkdsk", "chkntfs", "cls", "cmd", "color", "comp", "compact", "convert", "date", "dir", "diskcomp", "diskcopy", "doskey", "erase", "fs", "find", "findstr", "format", "ftype", "graftabl", "help", "keyb", "label", "md", "mkdir", "mode", "more", "move", "path", "pause", "print", "popd", "pushd", "promt", "rd", "recover", "rem", "rename", "replace", "restore", "rmdir", "shift", "sort", "start", "subst", "time", "title", "tree", "type", "ver", "verify", "vol", "ping", "net", "ipconfig", "taskkill", "xcopy", "ren", "del"]
									},
									contains: [{
											className: "variable",
											begin: /%%[^ ]|%[^ ]+?%|![^ ]+?!/
									}, {
											className: "function",
											begin: "^\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\s+label)",
											end: "goto:eof",
											contains: [e.inherit(e.TITLE_MODE, {
													begin: "([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*"
											}), t]
									}, {
											className: "number",
											begin: "\\b\\d+",
											relevance: 0
									}, t]
							}
					}
			}
			,
			1266: e=>{
					e.exports = function(e) {
							return {
									keywords: "dsconfig",
									contains: [{
											className: "keyword",
											begin: "^dsconfig",
											end: /\s/,
											excludeEnd: !0,
											relevance: 10
									}, {
											className: "built_in",
											begin: /(list|create|get|set|delete)-(\w+)/,
											end: /\s/,
											excludeEnd: !0,
											illegal: "!@#$%^&*()",
											relevance: 10
									}, {
											className: "built_in",
											begin: /--(\w+)/,
											end: /\s/,
											excludeEnd: !0
									}, {
											className: "string",
											begin: /"/,
											end: /"/
									}, {
											className: "string",
											begin: /'/,
											end: /'/
									}, {
											className: "string",
											begin: /[\w\-?]+:\w+/,
											end: /\W/,
											relevance: 0
									}, {
											className: "string",
											begin: /\w+(\-\w+)*/,
											end: /(?=\W)/,
											relevance: 0
									}, e.HASH_COMMENT_MODE]
							}
					}
			}
			,
			6163: e=>{
					e.exports = function(e) {
							const t = {
									className: "string",
									variants: [e.inherit(e.QUOTE_STRING_MODE, {
											begin: '((u8?|U)|L)?"'
									}), {
											begin: '(u8?|U)?R"',
											end: '"',
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											begin: "'\\\\?.",
											end: "'",
											illegal: "."
									}]
							}
								, n = {
									className: "number",
									variants: [{
											begin: "\\b(\\d+(\\.\\d*)?|\\.\\d+)(u|U|l|L|ul|UL|f|F)"
									}, {
											begin: e.C_NUMBER_RE
									}],
									relevance: 0
							}
								, i = {
									className: "meta",
									begin: "#",
									end: "$",
									keywords: {
											keyword: "if else elif endif define undef ifdef ifndef"
									},
									contains: [{
											begin: /\\\n/,
											relevance: 0
									}, {
											beginKeywords: "include",
											end: "$",
											keywords: {
													keyword: "include"
											},
											contains: [e.inherit(t, {
													className: "string"
											}), {
													className: "string",
													begin: "<",
													end: ">",
													illegal: "\\n"
											}]
									}, t, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
							}
								, r = {
									className: "variable",
									begin: /&[a-z\d_]*\b/
							};
							return {
									name: "Device Tree",
									contains: [{
											className: "title.class",
											begin: /^\/(?=\s*\{)/,
											relevance: 10
									}, r, {
											className: "keyword",
											begin: "/[a-z][a-z\\d-]*/"
									}, {
											className: "symbol",
											begin: "^\\s*[a-zA-Z_][a-zA-Z\\d_]*:"
									}, {
											className: "title.class",
											begin: /[a-zA-Z_][a-zA-Z\d_@-]*(?=\s\{)/,
											relevance: .2
									}, {
											relevance: 0,
											match: [/[a-z][a-z-,]+/, /\s*/, /=/],
											scope: {
													1: "attr",
													3: "operator"
											}
									}, {
											match: /[a-z][a-z-,]+(?=;)/,
											relevance: 0,
											scope: "attr"
									}, {
											className: "params",
											relevance: 0,
											begin: "<",
											end: ">",
											contains: [n, r]
									}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, n, t, i, {
											scope: "punctuation",
											relevance: 0,
											match: /\};|[;{}]/
									}, {
											begin: e.IDENT_RE + "::",
											keywords: ""
									}]
							}
					}
			}
			,
			5401: e=>{
					e.exports = function(e) {
							return {
									name: "Dust",
									aliases: ["dst"],
									case_insensitive: !0,
									subLanguage: "xml",
									contains: [{
											className: "template-tag",
											begin: /\{[#\/]/,
											end: /\}/,
											illegal: /;/,
											contains: [{
													className: "name",
													begin: /[a-zA-Z\.-]+/,
													starts: {
															endsWithParent: !0,
															relevance: 0,
															contains: [e.QUOTE_STRING_MODE]
													}
											}]
									}, {
											className: "template-variable",
											begin: /\{/,
											end: /\}/,
											illegal: /;/,
											keywords: "if eq ne lt lte gt gte select default math sep"
									}]
							}
					}
			}
			,
			3292: e=>{
					e.exports = function(e) {
							const t = e.COMMENT(/\(\*/, /\*\)/);
							return {
									name: "Extended Backus-Naur Form",
									illegal: /\S/,
									contains: [t, {
											className: "attribute",
											begin: /^[ ]*[a-zA-Z]+([\s_-]+[a-zA-Z]+)*/
									}, {
											begin: /=/,
											end: /[.;]/,
											contains: [t, {
													className: "meta",
													begin: /\?.*\?/
											}, {
													className: "string",
													variants: [e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, {
															begin: "`",
															end: "`"
													}]
											}]
									}]
							}
					}
			}
			,
			3332: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = "[a-zA-Z_][a-zA-Z0-9_.]*(!|\\?)?"
								, i = {
									$pattern: n,
									keyword: ["after", "alias", "and", "case", "catch", "cond", "defstruct", "defguard", "do", "else", "end", "fn", "for", "if", "import", "in", "not", "or", "quote", "raise", "receive", "require", "reraise", "rescue", "try", "unless", "unquote", "unquote_splicing", "use", "when", "with|0"],
									literal: ["false", "nil", "true"]
							}
								, r = {
									className: "subst",
									begin: /#\{/,
									end: /\}/,
									keywords: i
							}
								, o = {
									match: /\\[\s\S]/,
									scope: "char.escape",
									relevance: 0
							}
								, s = "[/|([{<\"']"
								, a = [{
									begin: /"/,
									end: /"/
							}, {
									begin: /'/,
									end: /'/
							}, {
									begin: /\//,
									end: /\//
							}, {
									begin: /\|/,
									end: /\|/
							}, {
									begin: /\(/,
									end: /\)/
							}, {
									begin: /\[/,
									end: /\]/
							}, {
									begin: /\{/,
									end: /\}/
							}, {
									begin: /</,
									end: />/
							}]
								, escapeSigilEnd = e=>({
									scope: "char.escape",
									begin: t.concat(/\\/, e),
									relevance: 0
							})
								, l = {
									className: "string",
									begin: "~[a-z](?=" + s + ")",
									contains: a.map((t=>e.inherit(t, {
											contains: [escapeSigilEnd(t.end), o, r]
									})))
							}
								, c = {
									className: "string",
									begin: "~[A-Z](?=" + s + ")",
									contains: a.map((t=>e.inherit(t, {
											contains: [escapeSigilEnd(t.end)]
									})))
							}
								, d = {
									className: "regex",
									variants: [{
											begin: "~r(?=" + s + ")",
											contains: a.map((n=>e.inherit(n, {
													end: t.concat(n.end, /[uismxfU]{0,7}/),
													contains: [escapeSigilEnd(n.end), o, r]
											})))
									}, {
											begin: "~R(?=" + s + ")",
											contains: a.map((n=>e.inherit(n, {
													end: t.concat(n.end, /[uismxfU]{0,7}/),
													contains: [escapeSigilEnd(n.end)]
											})))
									}]
							}
								, p = {
									className: "string",
									contains: [e.BACKSLASH_ESCAPE, r],
									variants: [{
											begin: /"""/,
											end: /"""/
									}, {
											begin: /'''/,
											end: /'''/
									}, {
											begin: /~S"""/,
											end: /"""/,
											contains: []
									}, {
											begin: /~S"/,
											end: /"/,
											contains: []
									}, {
											begin: /~S'''/,
											end: /'''/,
											contains: []
									}, {
											begin: /~S'/,
											end: /'/,
											contains: []
									}, {
											begin: /'/,
											end: /'/
									}, {
											begin: /"/,
											end: /"/
									}]
							}
								, u = {
									className: "function",
									beginKeywords: "def defp defmacro defmacrop",
									end: /\B\b/,
									contains: [e.inherit(e.TITLE_MODE, {
											begin: n,
											endsParent: !0
									})]
							}
								, h = e.inherit(u, {
									className: "class",
									beginKeywords: "defimpl defmodule defprotocol defrecord",
									end: /\bdo\b|$|;/
							})
								, m = [p, d, c, l, e.HASH_COMMENT_MODE, h, u, {
									begin: "::"
							}, {
									className: "symbol",
									begin: ":(?![\\s:])",
									contains: [p, {
											begin: "[a-zA-Z_]\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?"
									}],
									relevance: 0
							}, {
									className: "symbol",
									begin: n + ":(?!:)",
									relevance: 0
							}, {
									className: "title.class",
									begin: /(\b[A-Z][a-zA-Z0-9_]+)/,
									relevance: 0
							}, {
									className: "number",
									begin: "(\\b0o[0-7_]+)|(\\b0b[01_]+)|(\\b0x[0-9a-fA-F_]+)|(-?\\b[0-9][0-9_]*(\\.[0-9_]+([eE][-+]?[0-9]+)?)?)",
									relevance: 0
							}, {
									className: "variable",
									begin: "(\\$\\W)|((\\$|@@?)(\\w+))"
							}];
							return r.contains = m,
							{
									name: "Elixir",
									aliases: ["ex", "exs"],
									keywords: i,
									contains: m
							}
					}
			}
			,
			4144: e=>{
					e.exports = function(e) {
							const t = {
									variants: [e.COMMENT("--", "$"), e.COMMENT(/\{-/, /-\}/, {
											contains: ["self"]
									})]
							}
								, n = {
									className: "type",
									begin: "\\b[A-Z][\\w']*",
									relevance: 0
							}
								, i = {
									begin: "\\(",
									end: "\\)",
									illegal: '"',
									contains: [{
											className: "type",
											begin: "\\b[A-Z][\\w]*(\\((\\.\\.|,|\\w+)\\))?"
									}, t]
							};
							return {
									name: "Elm",
									keywords: ["let", "in", "if", "then", "else", "case", "of", "where", "module", "import", "exposing", "type", "alias", "as", "infix", "infixl", "infixr", "port", "effect", "command", "subscription"],
									contains: [{
											beginKeywords: "port effect module",
											end: "exposing",
											keywords: "port effect module where command subscription exposing",
											contains: [i, t],
											illegal: "\\W\\.|;"
									}, {
											begin: "import",
											end: "$",
											keywords: "import as exposing",
											contains: [i, t],
											illegal: "\\W\\.|;"
									}, {
											begin: "type",
											end: "$",
											keywords: "type alias",
											contains: [n, i, {
													begin: /\{/,
													end: /\}/,
													contains: i.contains
											}, t]
									}, {
											beginKeywords: "infix infixl infixr",
											end: "$",
											contains: [e.C_NUMBER_MODE, t]
									}, {
											begin: "port",
											end: "$",
											keywords: "port",
											contains: [t]
									}, {
											className: "string",
											begin: "'\\\\?.",
											end: "'",
											illegal: "."
									}, e.QUOTE_STRING_MODE, e.C_NUMBER_MODE, n, e.inherit(e.TITLE_MODE, {
											begin: "^[_a-z][\\w']*"
									}), t, {
											begin: "->|<-"
									}],
									illegal: /;/
							}
					}
			}
			,
			9876: e=>{
					e.exports = function(e) {
							return {
									name: "ERB",
									subLanguage: "xml",
									contains: [e.COMMENT("<%#", "%>"), {
											begin: "<%[%=-]?",
											end: "[%-]?%>",
											subLanguage: "ruby",
											excludeBegin: !0,
											excludeEnd: !0
									}]
							}
					}
			}
			,
			1015: e=>{
					e.exports = function(e) {
							const t = e.regex;
							return {
									name: "Erlang REPL",
									keywords: {
											built_in: "spawn spawn_link self",
											keyword: "after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if let not of or orelse|10 query receive rem try when xor"
									},
									contains: [{
											className: "meta.prompt",
											begin: "^[0-9]+> ",
											relevance: 10
									}, e.COMMENT("%", "$"), {
											className: "number",
											begin: "\\b(\\d+(_\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\d+(_\\d+)*(\\.\\d+(_\\d+)*)?([eE][-+]?\\d+)?)",
											relevance: 0
									}, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, {
											begin: t.concat(/\?(::)?/, /([A-Z]\w*)/, /((::)[A-Z]\w*)*/)
									}, {
											begin: "->"
									}, {
											begin: "ok"
									}, {
											begin: "!"
									}, {
											begin: "(\\b[a-z'][a-zA-Z0-9_']*:[a-z'][a-zA-Z0-9_']*)|(\\b[a-z'][a-zA-Z0-9_']*)",
											relevance: 0
									}, {
											begin: "[A-Z][a-zA-Z0-9_']*",
											relevance: 0
									}]
							}
					}
			}
			,
			5214: e=>{
					e.exports = function(e) {
							const t = "[a-z'][a-zA-Z0-9_']*"
								, n = "(" + t + ":" + t + "|" + t + ")"
								, i = {
									keyword: "after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if let not of orelse|10 query receive rem try when xor",
									literal: "false true"
							}
								, r = e.COMMENT("%", "$")
								, o = {
									className: "number",
									begin: "\\b(\\d+(_\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\d+(_\\d+)*(\\.\\d+(_\\d+)*)?([eE][-+]?\\d+)?)",
									relevance: 0
							}
								, s = {
									begin: "fun\\s+" + t + "/\\d+"
							}
								, a = {
									begin: n + "\\(",
									end: "\\)",
									returnBegin: !0,
									relevance: 0,
									contains: [{
											begin: n,
											relevance: 0
									}, {
											begin: "\\(",
											end: "\\)",
											endsWithParent: !0,
											returnEnd: !0,
											relevance: 0
									}]
							}
								, l = {
									begin: /\{/,
									end: /\}/,
									relevance: 0
							}
								, c = {
									begin: "\\b_([A-Z][A-Za-z0-9_]*)?",
									relevance: 0
							}
								, d = {
									begin: "[A-Z][a-zA-Z0-9_]*",
									relevance: 0
							}
								, p = {
									begin: "#" + e.UNDERSCORE_IDENT_RE,
									relevance: 0,
									returnBegin: !0,
									contains: [{
											begin: "#" + e.UNDERSCORE_IDENT_RE,
											relevance: 0
									}, {
											begin: /\{/,
											end: /\}/,
											relevance: 0
									}]
							}
								, u = {
									beginKeywords: "fun receive if try case",
									end: "end",
									keywords: i
							};
							u.contains = [r, s, e.inherit(e.APOS_STRING_MODE, {
									className: ""
							}), u, a, e.QUOTE_STRING_MODE, o, l, c, d, p];
							const h = [r, s, u, a, e.QUOTE_STRING_MODE, o, l, c, d, p];
							a.contains[1].contains = h,
							l.contains = h,
							p.contains[1].contains = h;
							const m = {
									className: "params",
									begin: "\\(",
									end: "\\)",
									contains: h
							};
							return {
									name: "Erlang",
									aliases: ["erl"],
									keywords: i,
									illegal: "(</|\\*=|\\+=|-=|/\\*|\\*/|\\(\\*|\\*\\))",
									contains: [{
											className: "function",
											begin: "^" + t + "\\s*\\(",
											end: "->",
											returnBegin: !0,
											illegal: "\\(|#|//|/\\*|\\\\|:|;",
											contains: [m, e.inherit(e.TITLE_MODE, {
													begin: t
											})],
											starts: {
													end: ";|\\.",
													keywords: i,
													contains: h
											}
									}, r, {
											begin: "^-",
											end: "\\.",
											relevance: 0,
											excludeEnd: !0,
											returnBegin: !0,
											keywords: {
													$pattern: "-" + e.IDENT_RE,
													keyword: ["-module", "-record", "-undef", "-export", "-ifdef", "-ifndef", "-author", "-copyright", "-doc", "-vsn", "-import", "-include", "-include_lib", "-compile", "-define", "-else", "-endif", "-file", "-behaviour", "-behavior", "-spec"].map((e=>`${e}|1.5`)).join(" ")
											},
											contains: [m]
									}, o, e.QUOTE_STRING_MODE, p, c, d, l, {
											begin: /\.$/
									}]
							}
					}
			}
			,
			3424: e=>{
					e.exports = function(e) {
							return {
									name: "Excel formulae",
									aliases: ["xlsx", "xls"],
									case_insensitive: !0,
									keywords: {
											$pattern: /[a-zA-Z][\w\.]*/,
											built_in: ["ABS", "ACCRINT", "ACCRINTM", "ACOS", "ACOSH", "ACOT", "ACOTH", "AGGREGATE", "ADDRESS", "AMORDEGRC", "AMORLINC", "AND", "ARABIC", "AREAS", "ASC", "ASIN", "ASINH", "ATAN", "ATAN2", "ATANH", "AVEDEV", "AVERAGE", "AVERAGEA", "AVERAGEIF", "AVERAGEIFS", "BAHTTEXT", "BASE", "BESSELI", "BESSELJ", "BESSELK", "BESSELY", "BETADIST", "BETA.DIST", "BETAINV", "BETA.INV", "BIN2DEC", "BIN2HEX", "BIN2OCT", "BINOMDIST", "BINOM.DIST", "BINOM.DIST.RANGE", "BINOM.INV", "BITAND", "BITLSHIFT", "BITOR", "BITRSHIFT", "BITXOR", "CALL", "CEILING", "CEILING.MATH", "CEILING.PRECISE", "CELL", "CHAR", "CHIDIST", "CHIINV", "CHITEST", "CHISQ.DIST", "CHISQ.DIST.RT", "CHISQ.INV", "CHISQ.INV.RT", "CHISQ.TEST", "CHOOSE", "CLEAN", "CODE", "COLUMN", "COLUMNS", "COMBIN", "COMBINA", "COMPLEX", "CONCAT", "CONCATENATE", "CONFIDENCE", "CONFIDENCE.NORM", "CONFIDENCE.T", "CONVERT", "CORREL", "COS", "COSH", "COT", "COTH", "COUNT", "COUNTA", "COUNTBLANK", "COUNTIF", "COUNTIFS", "COUPDAYBS", "COUPDAYS", "COUPDAYSNC", "COUPNCD", "COUPNUM", "COUPPCD", "COVAR", "COVARIANCE.P", "COVARIANCE.S", "CRITBINOM", "CSC", "CSCH", "CUBEKPIMEMBER", "CUBEMEMBER", "CUBEMEMBERPROPERTY", "CUBERANKEDMEMBER", "CUBESET", "CUBESETCOUNT", "CUBEVALUE", "CUMIPMT", "CUMPRINC", "DATE", "DATEDIF", "DATEVALUE", "DAVERAGE", "DAY", "DAYS", "DAYS360", "DB", "DBCS", "DCOUNT", "DCOUNTA", "DDB", "DEC2BIN", "DEC2HEX", "DEC2OCT", "DECIMAL", "DEGREES", "DELTA", "DEVSQ", "DGET", "DISC", "DMAX", "DMIN", "DOLLAR", "DOLLARDE", "DOLLARFR", "DPRODUCT", "DSTDEV", "DSTDEVP", "DSUM", "DURATION", "DVAR", "DVARP", "EDATE", "EFFECT", "ENCODEURL", "EOMONTH", "ERF", "ERF.PRECISE", "ERFC", "ERFC.PRECISE", "ERROR.TYPE", "EUROCONVERT", "EVEN", "EXACT", "EXP", "EXPON.DIST", "EXPONDIST", "FACT", "FACTDOUBLE", "FALSE|0", "F.DIST", "FDIST", "F.DIST.RT", "FILTERXML", "FIND", "FINDB", "F.INV", "F.INV.RT", "FINV", "FISHER", "FISHERINV", "FIXED", "FLOOR", "FLOOR.MATH", "FLOOR.PRECISE", "FORECAST", "FORECAST.ETS", "FORECAST.ETS.CONFINT", "FORECAST.ETS.SEASONALITY", "FORECAST.ETS.STAT", "FORECAST.LINEAR", "FORMULATEXT", "FREQUENCY", "F.TEST", "FTEST", "FV", "FVSCHEDULE", "GAMMA", "GAMMA.DIST", "GAMMADIST", "GAMMA.INV", "GAMMAINV", "GAMMALN", "GAMMALN.PRECISE", "GAUSS", "GCD", "GEOMEAN", "GESTEP", "GETPIVOTDATA", "GROWTH", "HARMEAN", "HEX2BIN", "HEX2DEC", "HEX2OCT", "HLOOKUP", "HOUR", "HYPERLINK", "HYPGEOM.DIST", "HYPGEOMDIST", "IF", "IFERROR", "IFNA", "IFS", "IMABS", "IMAGINARY", "IMARGUMENT", "IMCONJUGATE", "IMCOS", "IMCOSH", "IMCOT", "IMCSC", "IMCSCH", "IMDIV", "IMEXP", "IMLN", "IMLOG10", "IMLOG2", "IMPOWER", "IMPRODUCT", "IMREAL", "IMSEC", "IMSECH", "IMSIN", "IMSINH", "IMSQRT", "IMSUB", "IMSUM", "IMTAN", "INDEX", "INDIRECT", "INFO", "INT", "INTERCEPT", "INTRATE", "IPMT", "IRR", "ISBLANK", "ISERR", "ISERROR", "ISEVEN", "ISFORMULA", "ISLOGICAL", "ISNA", "ISNONTEXT", "ISNUMBER", "ISODD", "ISREF", "ISTEXT", "ISO.CEILING", "ISOWEEKNUM", "ISPMT", "JIS", "KURT", "LARGE", "LCM", "LEFT", "LEFTB", "LEN", "LENB", "LINEST", "LN", "LOG", "LOG10", "LOGEST", "LOGINV", "LOGNORM.DIST", "LOGNORMDIST", "LOGNORM.INV", "LOOKUP", "LOWER", "MATCH", "MAX", "MAXA", "MAXIFS", "MDETERM", "MDURATION", "MEDIAN", "MID", "MIDBs", "MIN", "MINIFS", "MINA", "MINUTE", "MINVERSE", "MIRR", "MMULT", "MOD", "MODE", "MODE.MULT", "MODE.SNGL", "MONTH", "MROUND", "MULTINOMIAL", "MUNIT", "N", "NA", "NEGBINOM.DIST", "NEGBINOMDIST", "NETWORKDAYS", "NETWORKDAYS.INTL", "NOMINAL", "NORM.DIST", "NORMDIST", "NORMINV", "NORM.INV", "NORM.S.DIST", "NORMSDIST", "NORM.S.INV", "NORMSINV", "NOT", "NOW", "NPER", "NPV", "NUMBERVALUE", "OCT2BIN", "OCT2DEC", "OCT2HEX", "ODD", "ODDFPRICE", "ODDFYIELD", "ODDLPRICE", "ODDLYIELD", "OFFSET", "OR", "PDURATION", "PEARSON", "PERCENTILE.EXC", "PERCENTILE.INC", "PERCENTILE", "PERCENTRANK.EXC", "PERCENTRANK.INC", "PERCENTRANK", "PERMUT", "PERMUTATIONA", "PHI", "PHONETIC", "PI", "PMT", "POISSON.DIST", "POISSON", "POWER", "PPMT", "PRICE", "PRICEDISC", "PRICEMAT", "PROB", "PRODUCT", "PROPER", "PV", "QUARTILE", "QUARTILE.EXC", "QUARTILE.INC", "QUOTIENT", "RADIANS", "RAND", "RANDBETWEEN", "RANK.AVG", "RANK.EQ", "RANK", "RATE", "RECEIVED", "REGISTER.ID", "REPLACE", "REPLACEB", "REPT", "RIGHT", "RIGHTB", "ROMAN", "ROUND", "ROUNDDOWN", "ROUNDUP", "ROW", "ROWS", "RRI", "RSQ", "RTD", "SEARCH", "SEARCHB", "SEC", "SECH", "SECOND", "SERIESSUM", "SHEET", "SHEETS", "SIGN", "SIN", "SINH", "SKEW", "SKEW.P", "SLN", "SLOPE", "SMALL", "SQL.REQUEST", "SQRT", "SQRTPI", "STANDARDIZE", "STDEV", "STDEV.P", "STDEV.S", "STDEVA", "STDEVP", "STDEVPA", "STEYX", "SUBSTITUTE", "SUBTOTAL", "SUM", "SUMIF", "SUMIFS", "SUMPRODUCT", "SUMSQ", "SUMX2MY2", "SUMX2PY2", "SUMXMY2", "SWITCH", "SYD", "T", "TAN", "TANH", "TBILLEQ", "TBILLPRICE", "TBILLYIELD", "T.DIST", "T.DIST.2T", "T.DIST.RT", "TDIST", "TEXT", "TEXTJOIN", "TIME", "TIMEVALUE", "T.INV", "T.INV.2T", "TINV", "TODAY", "TRANSPOSE", "TREND", "TRIM", "TRIMMEAN", "TRUE|0", "TRUNC", "T.TEST", "TTEST", "TYPE", "UNICHAR", "UNICODE", "UPPER", "VALUE", "VAR", "VAR.P", "VAR.S", "VARA", "VARP", "VARPA", "VDB", "VLOOKUP", "WEBSERVICE", "WEEKDAY", "WEEKNUM", "WEIBULL", "WEIBULL.DIST", "WORKDAY", "WORKDAY.INTL", "XIRR", "XNPV", "XOR", "YEAR", "YEARFRAC", "YIELD", "YIELDDISC", "YIELDMAT", "Z.TEST", "ZTEST"]
									},
									contains: [{
											begin: /^=/,
											end: /[^=]/,
											returnEnd: !0,
											illegal: /=/,
											relevance: 10
									}, {
											className: "symbol",
											begin: /\b[A-Z]{1,2}\d+\b/,
											end: /[^\d]/,
											excludeEnd: !0,
											relevance: 0
									}, {
											className: "symbol",
											begin: /[A-Z]{0,2}\d*:[A-Z]{0,2}\d*/,
											relevance: 0
									}, e.BACKSLASH_ESCAPE, e.QUOTE_STRING_MODE, {
											className: "number",
											begin: e.NUMBER_RE + "(%)?",
											relevance: 0
									}, e.COMMENT(/\bN\(/, /\)/, {
											excludeBegin: !0,
											excludeEnd: !0,
											illegal: /\n/
									})]
							}
					}
			}
			,
			2743: e=>{
					e.exports = function(e) {
							return {
									name: "FIX",
									contains: [{
											begin: /[^\u2401\u0001]+/,
											end: /[\u2401\u0001]/,
											excludeEnd: !0,
											returnBegin: !0,
											returnEnd: !1,
											contains: [{
													begin: /([^\u2401\u0001=]+)/,
													end: /=([^\u2401\u0001=]+)/,
													returnEnd: !0,
													returnBegin: !1,
													className: "attr"
											}, {
													begin: /=/,
													end: /([\u2401\u0001])/,
													excludeEnd: !0,
													excludeBegin: !0,
													className: "string"
											}]
									}],
									case_insensitive: !0
							}
					}
			}
			,
			4516: e=>{
					e.exports = function(e) {
							const t = {
									className: "function",
									beginKeywords: "def",
									end: /[:={\[(\n;]/,
									excludeEnd: !0,
									contains: [{
											className: "title",
											relevance: 0,
											begin: /[^0-9\n\t "'(),.`{}\[\]:;][^\n\t "'(),.`{}\[\]:;]+|[^0-9\n\t "'(),.`{}\[\]:;=]/
									}]
							};
							return {
									name: "Flix",
									keywords: {
											keyword: ["case", "class", "def", "else", "enum", "if", "impl", "import", "in", "lat", "rel", "index", "let", "match", "namespace", "switch", "type", "yield", "with"],
											literal: ["true", "false"]
									},
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, {
											className: "string",
											begin: /'(.|\\[xXuU][a-zA-Z0-9]+)'/
									}, {
											className: "string",
											variants: [{
													begin: '"',
													end: '"'
											}]
									}, t, e.C_NUMBER_MODE]
							}
					}
			}
			,
			1117: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = {
									variants: [e.COMMENT("!", "$", {
											relevance: 0
									}), e.COMMENT("^C[ ]", "$", {
											relevance: 0
									}), e.COMMENT("^C$", "$", {
											relevance: 0
									})]
							}
								, i = /(_[a-z_\d]+)?/
								, r = /([de][+-]?\d+)?/
								, o = {
									className: "number",
									variants: [{
											begin: t.concat(/\b\d+/, /\.(\d*)/, r, i)
									}, {
											begin: t.concat(/\b\d+/, r, i)
									}, {
											begin: t.concat(/\.\d+/, r, i)
									}],
									relevance: 0
							}
								, s = {
									className: "function",
									beginKeywords: "subroutine function program",
									illegal: "[${=\\n]",
									contains: [e.UNDERSCORE_TITLE_MODE, {
											className: "params",
											begin: "\\(",
											end: "\\)"
									}]
							};
							return {
									name: "Fortran",
									case_insensitive: !0,
									aliases: ["f90", "f95"],
									keywords: {
											keyword: ["kind", "do", "concurrent", "local", "shared", "while", "private", "call", "intrinsic", "where", "elsewhere", "type", "endtype", "endmodule", "endselect", "endinterface", "end", "enddo", "endif", "if", "forall", "endforall", "only", "contains", "default", "return", "stop", "then", "block", "endblock", "endassociate", "public", "subroutine|10", "function", "program", ".and.", ".or.", ".not.", ".le.", ".eq.", ".ge.", ".gt.", ".lt.", "goto", "save", "else", "use", "module", "select", "case", "access", "blank", "direct", "exist", "file", "fmt", "form", "formatted", "iostat", "name", "named", "nextrec", "number", "opened", "rec", "recl", "sequential", "status", "unformatted", "unit", "continue", "format", "pause", "cycle", "exit", "c_null_char", "c_alert", "c_backspace", "c_form_feed", "flush", "wait", "decimal", "round", "iomsg", "synchronous", "nopass", "non_overridable", "pass", "protected", "volatile", "abstract", "extends", "import", "non_intrinsic", "value", "deferred", "generic", "final", "enumerator", "class", "associate", "bind", "enum", "c_int", "c_short", "c_long", "c_long_long", "c_signed_char", "c_size_t", "c_int8_t", "c_int16_t", "c_int32_t", "c_int64_t", "c_int_least8_t", "c_int_least16_t", "c_int_least32_t", "c_int_least64_t", "c_int_fast8_t", "c_int_fast16_t", "c_int_fast32_t", "c_int_fast64_t", "c_intmax_t", "C_intptr_t", "c_float", "c_double", "c_long_double", "c_float_complex", "c_double_complex", "c_long_double_complex", "c_bool", "c_char", "c_null_ptr", "c_null_funptr", "c_new_line", "c_carriage_return", "c_horizontal_tab", "c_vertical_tab", "iso_c_binding", "c_loc", "c_funloc", "c_associated", "c_f_pointer", "c_ptr", "c_funptr", "iso_fortran_env", "character_storage_size", "error_unit", "file_storage_size", "input_unit", "iostat_end", "iostat_eor", "numeric_storage_size", "output_unit", "c_f_procpointer", "ieee_arithmetic", "ieee_support_underflow_control", "ieee_get_underflow_mode", "ieee_set_underflow_mode", "newunit", "contiguous", "recursive", "pad", "position", "action", "delim", "readwrite", "eor", "advance", "nml", "interface", "procedure", "namelist", "include", "sequence", "elemental", "pure", "impure", "integer", "real", "character", "complex", "logical", "codimension", "dimension", "allocatable|10", "parameter", "external", "implicit|10", "none", "double", "precision", "assign", "intent", "optional", "pointer", "target", "in", "out", "common", "equivalence", "data"],
											literal: [".False.", ".True."],
											built_in: ["alog", "alog10", "amax0", "amax1", "amin0", "amin1", "amod", "cabs", "ccos", "cexp", "clog", "csin", "csqrt", "dabs", "dacos", "dasin", "datan", "datan2", "dcos", "dcosh", "ddim", "dexp", "dint", "dlog", "dlog10", "dmax1", "dmin1", "dmod", "dnint", "dsign", "dsin", "dsinh", "dsqrt", "dtan", "dtanh", "float", "iabs", "idim", "idint", "idnint", "ifix", "isign", "max0", "max1", "min0", "min1", "sngl", "algama", "cdabs", "cdcos", "cdexp", "cdlog", "cdsin", "cdsqrt", "cqabs", "cqcos", "cqexp", "cqlog", "cqsin", "cqsqrt", "dcmplx", "dconjg", "derf", "derfc", "dfloat", "dgamma", "dimag", "dlgama", "iqint", "qabs", "qacos", "qasin", "qatan", "qatan2", "qcmplx", "qconjg", "qcos", "qcosh", "qdim", "qerf", "qerfc", "qexp", "qgamma", "qimag", "qlgama", "qlog", "qlog10", "qmax1", "qmin1", "qmod", "qnint", "qsign", "qsin", "qsinh", "qsqrt", "qtan", "qtanh", "abs", "acos", "aimag", "aint", "anint", "asin", "atan", "atan2", "char", "cmplx", "conjg", "cos", "cosh", "exp", "ichar", "index", "int", "log", "log10", "max", "min", "nint", "sign", "sin", "sinh", "sqrt", "tan", "tanh", "print", "write", "dim", "lge", "lgt", "lle", "llt", "mod", "nullify", "allocate", "deallocate", "adjustl", "adjustr", "all", "allocated", "any", "associated", "bit_size", "btest", "ceiling", "count", "cshift", "date_and_time", "digits", "dot_product", "eoshift", "epsilon", "exponent", "floor", "fraction", "huge", "iand", "ibclr", "ibits", "ibset", "ieor", "ior", "ishft", "ishftc", "lbound", "len_trim", "matmul", "maxexponent", "maxloc", "maxval", "merge", "minexponent", "minloc", "minval", "modulo", "mvbits", "nearest", "pack", "present", "product", "radix", "random_number", "random_seed", "range", "repeat", "reshape", "rrspacing", "scale", "scan", "selected_int_kind", "selected_real_kind", "set_exponent", "shape", "size", "spacing", "spread", "sum", "system_clock", "tiny", "transpose", "trim", "ubound", "unpack", "verify", "achar", "iachar", "transfer", "dble", "entry", "dprod", "cpu_time", "command_argument_count", "get_command", "get_command_argument", "get_environment_variable", "is_iostat_end", "ieee_arithmetic", "ieee_support_underflow_control", "ieee_get_underflow_mode", "ieee_set_underflow_mode", "is_iostat_eor", "move_alloc", "new_line", "selected_char_kind", "same_type_as", "extends_type_of", "acosh", "asinh", "atanh", "bessel_j0", "bessel_j1", "bessel_jn", "bessel_y0", "bessel_y1", "bessel_yn", "erf", "erfc", "erfc_scaled", "gamma", "log_gamma", "hypot", "norm2", "atomic_define", "atomic_ref", "execute_command_line", "leadz", "trailz", "storage_size", "merge_bits", "bge", "bgt", "ble", "blt", "dshiftl", "dshiftr", "findloc", "iall", "iany", "iparity", "image_index", "lcobound", "ucobound", "maskl", "maskr", "num_images", "parity", "popcnt", "poppar", "shifta", "shiftl", "shiftr", "this_image", "sync", "change", "team", "co_broadcast", "co_max", "co_min", "co_sum", "co_reduce"]
									},
									illegal: /\/\*/,
									contains: [{
											className: "string",
											relevance: 0,
											variants: [e.APOS_STRING_MODE, e.QUOTE_STRING_MODE]
									}, s, {
											begin: /^C\s*=(?!=)/,
											relevance: 0
									}, n, o]
							}
					}
			}
			,
			6478: e=>{
					function escape(e) {
							return new RegExp(e.replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&"),"m")
					}
					function source(e) {
							return e ? "string" == typeof e ? e : e.source : null
					}
					function lookahead(e) {
							return concat("(?=", e, ")")
					}
					function concat(...e) {
							return e.map((e=>source(e))).join("")
					}
					function either(...e) {
							const t = function(e) {
									const t = e[e.length - 1];
									return "object" == typeof t && t.constructor === Object ? (e.splice(e.length - 1, 1),
									t) : {}
							}(e);
							return "(" + (t.capture ? "" : "?:") + e.map((e=>source(e))).join("|") + ")"
					}
					e.exports = function(e) {
							const t = {
									scope: "keyword",
									match: /\b(yield|return|let|do|match|use)!/
							}
								, n = ["bool", "byte", "sbyte", "int8", "int16", "int32", "uint8", "uint16", "uint32", "int", "uint", "int64", "uint64", "nativeint", "unativeint", "decimal", "float", "double", "float32", "single", "char", "string", "unit", "bigint", "option", "voption", "list", "array", "seq", "byref", "exn", "inref", "nativeptr", "obj", "outref", "voidptr", "Result"]
								, i = {
									keyword: ["abstract", "and", "as", "assert", "base", "begin", "class", "default", "delegate", "do", "done", "downcast", "downto", "elif", "else", "end", "exception", "extern", "finally", "fixed", "for", "fun", "function", "global", "if", "in", "inherit", "inline", "interface", "internal", "lazy", "let", "match", "member", "module", "mutable", "namespace", "new", "of", "open", "or", "override", "private", "public", "rec", "return", "static", "struct", "then", "to", "try", "type", "upcast", "use", "val", "void", "when", "while", "with", "yield"],
									literal: ["true", "false", "null", "Some", "None", "Ok", "Error", "infinity", "infinityf", "nan", "nanf"],
									built_in: ["not", "ref", "raise", "reraise", "dict", "readOnlyDict", "set", "get", "enum", "sizeof", "typeof", "typedefof", "nameof", "nullArg", "invalidArg", "invalidOp", "id", "fst", "snd", "ignore", "lock", "using", "box", "unbox", "tryUnbox", "printf", "printfn", "sprintf", "eprintf", "eprintfn", "fprintf", "fprintfn", "failwith", "failwithf"],
									"variable.constant": ["__LINE__", "__SOURCE_DIRECTORY__", "__SOURCE_FILE__"]
							}
								, r = {
									variants: [e.COMMENT(/\(\*(?!\))/, /\*\)/, {
											contains: ["self"]
									}), e.C_LINE_COMMENT_MODE]
							}
								, o = {
									scope: "variable",
									begin: /``/,
									end: /``/
							}
								, s = /\B('|\^)/
								, a = {
									scope: "symbol",
									variants: [{
											match: concat(s, /``.*?``/)
									}, {
											match: concat(s, e.UNDERSCORE_IDENT_RE)
									}],
									relevance: 0
							}
								, makeOperatorMode = function({includeEqual: e}) {
									let t;
									t = e ? "!%&*+-/<=>@^|~?" : "!%&*+-/<>@^|~?";
									const n = concat("[", ...Array.from(t).map(escape), "]")
										, i = either(n, /\./)
										, r = concat(i, lookahead(i))
										, o = either(concat(r, i, "*"), concat(n, "+"));
									return {
											scope: "operator",
											match: either(o, /:\?>/, /:\?/, /:>/, /:=/, /::?/, /\$/),
											relevance: 0
									}
							}
								, l = makeOperatorMode({
									includeEqual: !0
							})
								, c = makeOperatorMode({
									includeEqual: !1
							})
								, makeTypeAnnotationMode = function(t, s) {
									return {
											begin: concat(t, lookahead(concat(/\s*/, either(/\w/, /'/, /\^/, /#/, /``/, /\(/, /{\|/)))),
											beginScope: s,
											end: lookahead(either(/\n/, /=/)),
											relevance: 0,
											keywords: e.inherit(i, {
													type: n
											}),
											contains: [r, a, e.inherit(o, {
													scope: null
											}), c]
									}
							}
								, d = makeTypeAnnotationMode(/:/, "operator")
								, p = makeTypeAnnotationMode(/\bof\b/, "keyword")
								, u = {
									begin: [/(^|\s+)/, /type/, /\s+/, /[a-zA-Z_](\w|')*/],
									beginScope: {
											2: "keyword",
											4: "title.class"
									},
									end: lookahead(/\(|=|$/),
									keywords: i,
									contains: [r, e.inherit(o, {
											scope: null
									}), a, {
											scope: "operator",
											match: /<|>/
									}, d]
							}
								, h = {
									scope: "computation-expression",
									match: /\b[_a-z]\w*(?=\s*\{)/
							}
								, m = {
									begin: [/^\s*/, concat(/#/, either("if", "else", "endif", "line", "nowarn", "light", "r", "i", "I", "load", "time", "help", "quit")), /\b/],
									beginScope: {
											2: "meta"
									},
									end: lookahead(/\s|$/)
							}
								, g = {
									variants: [e.BINARY_NUMBER_MODE, e.C_NUMBER_MODE]
							}
								, _ = {
									scope: "string",
									begin: /"/,
									end: /"/,
									contains: [e.BACKSLASH_ESCAPE]
							}
								, f = {
									scope: "string",
									begin: /@"/,
									end: /"/,
									contains: [{
											match: /""/
									}, e.BACKSLASH_ESCAPE]
							}
								, y = {
									scope: "string",
									begin: /"""/,
									end: /"""/,
									relevance: 2
							}
								, v = {
									scope: "subst",
									begin: /\{/,
									end: /\}/,
									keywords: i
							}
								, b = {
									scope: "string",
									begin: /\$"/,
									end: /"/,
									contains: [{
											match: /\{\{/
									}, {
											match: /\}\}/
									}, e.BACKSLASH_ESCAPE, v]
							}
								, S = {
									scope: "string",
									begin: /(\$@|@\$)"/,
									end: /"/,
									contains: [{
											match: /\{\{/
									}, {
											match: /\}\}/
									}, {
											match: /""/
									}, e.BACKSLASH_ESCAPE, v]
							}
								, C = {
									scope: "string",
									begin: /\$"""/,
									end: /"""/,
									contains: [{
											match: /\{\{/
									}, {
											match: /\}\}/
									}, v],
									relevance: 2
							}
								, E = {
									scope: "string",
									match: concat(/'/, either(/[^\\']/, /\\(?:.|\d{3}|x[a-fA-F\d]{2}|u[a-fA-F\d]{4}|U[a-fA-F\d]{8})/), /'/)
							};
							return v.contains = [S, b, f, _, E, t, r, o, d, h, m, g, a, l],
							{
									name: "F#",
									aliases: ["fs", "f#"],
									keywords: i,
									illegal: /\/\*/,
									classNameAliases: {
											"computation-expression": "keyword"
									},
									contains: [t, {
											variants: [C, S, b, y, f, _, E]
									}, r, o, u, {
											scope: "meta",
											begin: /\[</,
											end: />\]/,
											relevance: 2,
											contains: [o, y, f, _, E, g]
									}, p, d, h, m, g, a, l]
							}
					}
			}
			,
			8644: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = {
									keyword: "abort acronym acronyms alias all and assign binary card diag display else eq file files for free ge gt if integer le loop lt maximizing minimizing model models ne negative no not option options or ord positive prod put putpage puttl repeat sameas semicont semiint smax smin solve sos1 sos2 sum system table then until using while xor yes",
									literal: "eps inf na",
									built_in: "abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power randBinomial randLinear randTriangle round rPower sigmoid sign signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion handleCollect handleDelete handleStatus handleSubmit heapFree heapLimit heapSize jobHandle jobKill jobStatus jobTerminate licenseLevel licenseStatus maxExecError sleep timeClose timeComp timeElapsed timeExec timeStart"
							}
								, i = {
									className: "symbol",
									variants: [{
											begin: /=[lgenxc]=/
									}, {
											begin: /\$/
									}]
							}
								, r = {
									className: "comment",
									variants: [{
											begin: "'",
											end: "'"
									}, {
											begin: '"',
											end: '"'
									}],
									illegal: "\\n",
									contains: [e.BACKSLASH_ESCAPE]
							}
								, o = {
									begin: "/",
									end: "/",
									keywords: n,
									contains: [r, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.QUOTE_STRING_MODE, e.APOS_STRING_MODE, e.C_NUMBER_MODE]
							}
								, s = /[a-z0-9&#*=?@\\><:,()$[\]_.{}!+%^-]+/
								, a = {
									begin: /[a-z][a-z0-9_]*(\([a-z0-9_, ]*\))?[ \t]+/,
									excludeBegin: !0,
									end: "$",
									endsWithParent: !0,
									contains: [r, o, {
											className: "comment",
											begin: t.concat(s, t.anyNumberOfTimes(t.concat(/[ ]+/, s))),
											relevance: 0
									}]
							};
							return {
									name: "GAMS",
									aliases: ["gms"],
									case_insensitive: !0,
									keywords: n,
									contains: [e.COMMENT(/^\$ontext/, /^\$offtext/), {
											className: "meta",
											begin: "^\\$[a-z0-9]+",
											end: "$",
											returnBegin: !0,
											contains: [{
													className: "keyword",
													begin: "^\\$[a-z0-9]+"
											}]
									}, e.COMMENT("^\\*", "$"), e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.QUOTE_STRING_MODE, e.APOS_STRING_MODE, {
											beginKeywords: "set sets parameter parameters variable variables scalar scalars equation equations",
											end: ";",
											contains: [e.COMMENT("^\\*", "$"), e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.QUOTE_STRING_MODE, e.APOS_STRING_MODE, o, a]
									}, {
											beginKeywords: "table",
											end: ";",
											returnBegin: !0,
											contains: [{
													beginKeywords: "table",
													end: "$",
													contains: [a]
											}, e.COMMENT("^\\*", "$"), e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.QUOTE_STRING_MODE, e.APOS_STRING_MODE, e.C_NUMBER_MODE]
									}, {
											className: "function",
											begin: /^[a-z][a-z0-9_,\-+' ()$]+\.{2}/,
											returnBegin: !0,
											contains: [{
													className: "title",
													begin: /^[a-z0-9_]+/
											}, {
													className: "params",
													begin: /\(/,
													end: /\)/,
													excludeBegin: !0,
													excludeEnd: !0
											}, i]
									}, e.C_NUMBER_MODE, i]
							}
					}
			}
			,
			1321: e=>{
					e.exports = function(e) {
							const t = {
									keyword: "bool break call callexe checkinterrupt clear clearg closeall cls comlog compile continue create debug declare delete disable dlibrary dllcall do dos ed edit else elseif enable end endfor endif endp endo errorlog errorlogat expr external fn for format goto gosub graph if keyword let lib library line load loadarray loadexe loadf loadk loadm loadp loads loadx local locate loopnextindex lprint lpwidth lshow matrix msym ndpclex new open output outwidth plot plotsym pop prcsn print printdos proc push retp return rndcon rndmod rndmult rndseed run save saveall screen scroll setarray show sparse stop string struct system trace trap threadfor threadendfor threadbegin threadjoin threadstat threadend until use while winprint ne ge le gt lt and xor or not eq eqv",
									built_in: "abs acf aconcat aeye amax amean AmericanBinomCall AmericanBinomCall_Greeks AmericanBinomCall_ImpVol AmericanBinomPut AmericanBinomPut_Greeks AmericanBinomPut_ImpVol AmericanBSCall AmericanBSCall_Greeks AmericanBSCall_ImpVol AmericanBSPut AmericanBSPut_Greeks AmericanBSPut_ImpVol amin amult annotationGetDefaults annotationSetBkd annotationSetFont annotationSetLineColor annotationSetLineStyle annotationSetLineThickness annualTradingDays arccos arcsin areshape arrayalloc arrayindex arrayinit arraytomat asciiload asclabel astd astds asum atan atan2 atranspose axmargin balance band bandchol bandcholsol bandltsol bandrv bandsolpd bar base10 begwind besselj bessely beta box boxcox cdfBeta cdfBetaInv cdfBinomial cdfBinomialInv cdfBvn cdfBvn2 cdfBvn2e cdfCauchy cdfCauchyInv cdfChic cdfChii cdfChinc cdfChincInv cdfExp cdfExpInv cdfFc cdfFnc cdfFncInv cdfGam cdfGenPareto cdfHyperGeo cdfLaplace cdfLaplaceInv cdfLogistic cdfLogisticInv cdfmControlCreate cdfMvn cdfMvn2e cdfMvnce cdfMvne cdfMvt2e cdfMvtce cdfMvte cdfN cdfN2 cdfNc cdfNegBinomial cdfNegBinomialInv cdfNi cdfPoisson cdfPoissonInv cdfRayleigh cdfRayleighInv cdfTc cdfTci cdfTnc cdfTvn cdfWeibull cdfWeibullInv cdir ceil ChangeDir chdir chiBarSquare chol choldn cholsol cholup chrs close code cols colsf combinate combinated complex con cond conj cons ConScore contour conv convertsatostr convertstrtosa corrm corrms corrvc corrx corrxs cos cosh counts countwts crossprd crout croutp csrcol csrlin csvReadM csvReadSA cumprodc cumsumc curve cvtos datacreate datacreatecomplex datalist dataload dataloop dataopen datasave date datestr datestring datestrymd dayinyr dayofweek dbAddDatabase dbClose dbCommit dbCreateQuery dbExecQuery dbGetConnectOptions dbGetDatabaseName dbGetDriverName dbGetDrivers dbGetHostName dbGetLastErrorNum dbGetLastErrorText dbGetNumericalPrecPolicy dbGetPassword dbGetPort dbGetTableHeaders dbGetTables dbGetUserName dbHasFeature dbIsDriverAvailable dbIsOpen dbIsOpenError dbOpen dbQueryBindValue dbQueryClear dbQueryCols dbQueryExecPrepared dbQueryFetchAllM dbQueryFetchAllSA dbQueryFetchOneM dbQueryFetchOneSA dbQueryFinish dbQueryGetBoundValue dbQueryGetBoundValues dbQueryGetField dbQueryGetLastErrorNum dbQueryGetLastErrorText dbQueryGetLastInsertID dbQueryGetLastQuery dbQueryGetPosition dbQueryIsActive dbQueryIsForwardOnly dbQueryIsNull dbQueryIsSelect dbQueryIsValid dbQueryPrepare dbQueryRows dbQuerySeek dbQuerySeekFirst dbQuerySeekLast dbQuerySeekNext dbQuerySeekPrevious dbQuerySetForwardOnly dbRemoveDatabase dbRollback dbSetConnectOptions dbSetDatabaseName dbSetHostName dbSetNumericalPrecPolicy dbSetPort dbSetUserName dbTransaction DeleteFile delif delrows denseToSp denseToSpRE denToZero design det detl dfft dffti diag diagrv digamma doswin DOSWinCloseall DOSWinOpen dotfeq dotfeqmt dotfge dotfgemt dotfgt dotfgtmt dotfle dotflemt dotflt dotfltmt dotfne dotfnemt draw drop dsCreate dstat dstatmt dstatmtControlCreate dtdate dtday dttime dttodtv dttostr dttoutc dtvnormal dtvtodt dtvtoutc dummy dummybr dummydn eig eigh eighv eigv elapsedTradingDays endwind envget eof eqSolve eqSolvemt eqSolvemtControlCreate eqSolvemtOutCreate eqSolveset erf erfc erfccplx erfcplx error etdays ethsec etstr EuropeanBinomCall EuropeanBinomCall_Greeks EuropeanBinomCall_ImpVol EuropeanBinomPut EuropeanBinomPut_Greeks EuropeanBinomPut_ImpVol EuropeanBSCall EuropeanBSCall_Greeks EuropeanBSCall_ImpVol EuropeanBSPut EuropeanBSPut_Greeks EuropeanBSPut_ImpVol exctsmpl exec execbg exp extern eye fcheckerr fclearerr feq feqmt fflush fft ffti fftm fftmi fftn fge fgemt fgets fgetsa fgetsat fgetst fgt fgtmt fileinfo filesa fle flemt floor flt fltmt fmod fne fnemt fonts fopen formatcv formatnv fputs fputst fseek fstrerror ftell ftocv ftos ftostrC gamma gammacplx gammaii gausset gdaAppend gdaCreate gdaDStat gdaDStatMat gdaGetIndex gdaGetName gdaGetNames gdaGetOrders gdaGetType gdaGetTypes gdaGetVarInfo gdaIsCplx gdaLoad gdaPack gdaRead gdaReadByIndex gdaReadSome gdaReadSparse gdaReadStruct gdaReportVarInfo gdaSave gdaUpdate gdaUpdateAndPack gdaVars gdaWrite gdaWrite32 gdaWriteSome getarray getdims getf getGAUSShome getmatrix getmatrix4D getname getnamef getNextTradingDay getNextWeekDay getnr getorders getpath getPreviousTradingDay getPreviousWeekDay getRow getscalar3D getscalar4D getTrRow getwind glm gradcplx gradMT gradMTm gradMTT gradMTTm gradp graphprt graphset hasimag header headermt hess hessMT hessMTg hessMTgw hessMTm hessMTmw hessMTT hessMTTg hessMTTgw hessMTTm hessMTw hessp hist histf histp hsec imag indcv indexcat indices indices2 indicesf indicesfn indnv indsav integrate1d integrateControlCreate intgrat2 intgrat3 inthp1 inthp2 inthp3 inthp4 inthpControlCreate intquad1 intquad2 intquad3 intrleav intrleavsa intrsect intsimp inv invpd invswp iscplx iscplxf isden isinfnanmiss ismiss key keyav keyw lag lag1 lagn lapEighb lapEighi lapEighvb lapEighvi lapgEig lapgEigh lapgEighv lapgEigv lapgSchur lapgSvdcst lapgSvds lapgSvdst lapSvdcusv lapSvds lapSvdusv ldlp ldlsol linSolve listwise ln lncdfbvn lncdfbvn2 lncdfmvn lncdfn lncdfn2 lncdfnc lnfact lngammacplx lnpdfmvn lnpdfmvt lnpdfn lnpdft loadd loadstruct loadwind loess loessmt loessmtControlCreate log loglog logx logy lower lowmat lowmat1 ltrisol lu lusol machEpsilon make makevars makewind margin matalloc matinit mattoarray maxbytes maxc maxindc maxv maxvec mbesselei mbesselei0 mbesselei1 mbesseli mbesseli0 mbesseli1 meanc median mergeby mergevar minc minindc minv miss missex missrv moment momentd movingave movingaveExpwgt movingaveWgt nextindex nextn nextnevn nextwind ntos null null1 numCombinations ols olsmt olsmtControlCreate olsqr olsqr2 olsqrmt ones optn optnevn orth outtyp pacf packedToSp packr parse pause pdfCauchy pdfChi pdfExp pdfGenPareto pdfHyperGeo pdfLaplace pdfLogistic pdfn pdfPoisson pdfRayleigh pdfWeibull pi pinv pinvmt plotAddArrow plotAddBar plotAddBox plotAddHist plotAddHistF plotAddHistP plotAddPolar plotAddScatter plotAddShape plotAddTextbox plotAddTS plotAddXY plotArea plotBar plotBox plotClearLayout plotContour plotCustomLayout plotGetDefaults plotHist plotHistF plotHistP plotLayout plotLogLog plotLogX plotLogY plotOpenWindow plotPolar plotSave plotScatter plotSetAxesPen plotSetBar plotSetBarFill plotSetBarStacked plotSetBkdColor plotSetFill plotSetGrid plotSetLegend plotSetLineColor plotSetLineStyle plotSetLineSymbol plotSetLineThickness plotSetNewWindow plotSetTitle plotSetWhichYAxis plotSetXAxisShow plotSetXLabel plotSetXRange plotSetXTicInterval plotSetXTicLabel plotSetYAxisShow plotSetYLabel plotSetYRange plotSetZAxisShow plotSetZLabel plotSurface plotTS plotXY polar polychar polyeval polygamma polyint polymake polymat polymroot polymult polyroot pqgwin previousindex princomp printfm printfmt prodc psi putarray putf putvals pvCreate pvGetIndex pvGetParNames pvGetParVector pvLength pvList pvPack pvPacki pvPackm pvPackmi pvPacks pvPacksi pvPacksm pvPacksmi pvPutParVector pvTest pvUnpack QNewton QNewtonmt QNewtonmtControlCreate QNewtonmtOutCreate QNewtonSet QProg QProgmt QProgmtInCreate qqr qqre qqrep qr qre qrep qrsol qrtsol qtyr qtyre qtyrep quantile quantiled qyr qyre qyrep qz rank rankindx readr real reclassify reclassifyCuts recode recserar recsercp recserrc rerun rescale reshape rets rev rfft rffti rfftip rfftn rfftnp rfftp rndBernoulli rndBeta rndBinomial rndCauchy rndChiSquare rndCon rndCreateState rndExp rndGamma rndGeo rndGumbel rndHyperGeo rndi rndKMbeta rndKMgam rndKMi rndKMn rndKMnb rndKMp rndKMu rndKMvm rndLaplace rndLCbeta rndLCgam rndLCi rndLCn rndLCnb rndLCp rndLCu rndLCvm rndLogNorm rndMTu rndMVn rndMVt rndn rndnb rndNegBinomial rndp rndPoisson rndRayleigh rndStateSkip rndu rndvm rndWeibull rndWishart rotater round rows rowsf rref sampleData satostrC saved saveStruct savewind scale scale3d scalerr scalinfnanmiss scalmiss schtoc schur searchsourcepath seekr select selif seqa seqm setdif setdifsa setvars setvwrmode setwind shell shiftr sin singleindex sinh sleep solpd sortc sortcc sortd sorthc sorthcc sortind sortindc sortmc sortr sortrc spBiconjGradSol spChol spConjGradSol spCreate spDenseSubmat spDiagRvMat spEigv spEye spLDL spline spLU spNumNZE spOnes spreadSheetReadM spreadSheetReadSA spreadSheetWrite spScale spSubmat spToDense spTrTDense spTScalar spZeros sqpSolve sqpSolveMT sqpSolveMTControlCreate sqpSolveMTlagrangeCreate sqpSolveMToutCreate sqpSolveSet sqrt statements stdc stdsc stocv stof strcombine strindx strlen strput strrindx strsect strsplit strsplitPad strtodt strtof strtofcplx strtriml strtrimr strtrunc strtruncl strtruncpad strtruncr submat subscat substute subvec sumc sumr surface svd svd1 svd2 svdcusv svds svdusv sysstate tab tan tanh tempname time timedt timestr timeutc title tkf2eps tkf2ps tocart todaydt toeplitz token topolar trapchk trigamma trimr trunc type typecv typef union unionsa uniqindx uniqindxsa unique uniquesa upmat upmat1 upper utctodt utctodtv utrisol vals varCovMS varCovXS varget vargetl varmall varmares varput varputl vartypef vcm vcms vcx vcxs vec vech vecr vector vget view viewxyz vlist vnamecv volume vput vread vtypecv wait waitc walkindex where window writer xlabel xlsGetSheetCount xlsGetSheetSize xlsGetSheetTypes xlsMakeRange xlsReadM xlsReadSA xlsWrite xlsWriteM xlsWriteSA xpnd xtics xy xyz ylabel ytics zeros zeta zlabel ztics cdfEmpirical dot h5create h5open h5read h5readAttribute h5write h5writeAttribute ldl plotAddErrorBar plotAddSurface plotCDFEmpirical plotSetColormap plotSetContourLabels plotSetLegendFont plotSetTextInterpreter plotSetXTicCount plotSetYTicCount plotSetZLevels powerm strjoin sylvester strtrim",
									literal: "DB_AFTER_LAST_ROW DB_ALL_TABLES DB_BATCH_OPERATIONS DB_BEFORE_FIRST_ROW DB_BLOB DB_EVENT_NOTIFICATIONS DB_FINISH_QUERY DB_HIGH_PRECISION DB_LAST_INSERT_ID DB_LOW_PRECISION_DOUBLE DB_LOW_PRECISION_INT32 DB_LOW_PRECISION_INT64 DB_LOW_PRECISION_NUMBERS DB_MULTIPLE_RESULT_SETS DB_NAMED_PLACEHOLDERS DB_POSITIONAL_PLACEHOLDERS DB_PREPARED_QUERIES DB_QUERY_SIZE DB_SIMPLE_LOCKING DB_SYSTEM_TABLES DB_TABLES DB_TRANSACTIONS DB_UNICODE DB_VIEWS __STDIN __STDOUT __STDERR __FILE_DIR"
							}
								, n = e.COMMENT("@", "@")
								, i = {
									className: "meta",
									begin: "#",
									end: "$",
									keywords: {
											keyword: "define definecs|10 undef ifdef ifndef iflight ifdllcall ifmac ifos2win ifunix else endif lineson linesoff srcfile srcline"
									},
									contains: [{
											begin: /\\\n/,
											relevance: 0
									}, {
											beginKeywords: "include",
											end: "$",
											keywords: {
													keyword: "include"
											},
											contains: [{
													className: "string",
													begin: '"',
													end: '"',
													illegal: "\\n"
											}]
									}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, n]
							}
								, r = {
									begin: /\bstruct\s+/,
									end: /\s/,
									keywords: "struct",
									contains: [{
											className: "type",
											begin: e.UNDERSCORE_IDENT_RE,
											relevance: 0
									}]
							}
								, o = [{
									className: "params",
									begin: /\(/,
									end: /\)/,
									excludeBegin: !0,
									excludeEnd: !0,
									endsWithParent: !0,
									relevance: 0,
									contains: [{
											className: "literal",
											begin: /\.\.\./
									}, e.C_NUMBER_MODE, e.C_BLOCK_COMMENT_MODE, n, r]
							}]
								, s = {
									className: "title",
									begin: e.UNDERSCORE_IDENT_RE,
									relevance: 0
							}
								, DEFINITION = function(t, i, r) {
									const a = e.inherit({
											className: "function",
											beginKeywords: t,
											end: i,
											excludeEnd: !0,
											contains: [].concat(o)
									}, r || {});
									return a.contains.push(s),
									a.contains.push(e.C_NUMBER_MODE),
									a.contains.push(e.C_BLOCK_COMMENT_MODE),
									a.contains.push(n),
									a
							}
								, a = {
									className: "built_in",
									begin: "\\b(" + t.built_in.split(" ").join("|") + ")\\b"
							}
								, l = {
									className: "string",
									begin: '"',
									end: '"',
									contains: [e.BACKSLASH_ESCAPE],
									relevance: 0
							}
								, c = {
									begin: e.UNDERSCORE_IDENT_RE + "\\s*\\(",
									returnBegin: !0,
									keywords: t,
									relevance: 0,
									contains: [{
											beginKeywords: t.keyword
									}, a, {
											className: "built_in",
											begin: e.UNDERSCORE_IDENT_RE,
											relevance: 0
									}]
							}
								, d = {
									begin: /\(/,
									end: /\)/,
									relevance: 0,
									keywords: {
											built_in: t.built_in,
											literal: t.literal
									},
									contains: [e.C_NUMBER_MODE, e.C_BLOCK_COMMENT_MODE, n, a, c, l, "self"]
							};
							return c.contains.push(d),
							{
									name: "GAUSS",
									aliases: ["gss"],
									case_insensitive: !0,
									keywords: t,
									illegal: /(\{[%#]|[%#]\}| <- )/,
									contains: [e.C_NUMBER_MODE, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, n, l, i, {
											className: "keyword",
											begin: /\bexternal (matrix|string|array|sparse matrix|struct|proc|keyword|fn)/
									}, DEFINITION("proc keyword", ";"), DEFINITION("fn", "="), {
											beginKeywords: "for threadfor",
											end: /;/,
											relevance: 0,
											contains: [e.C_BLOCK_COMMENT_MODE, n, d]
									}, {
											variants: [{
													begin: e.UNDERSCORE_IDENT_RE + "\\." + e.UNDERSCORE_IDENT_RE
											}, {
													begin: e.UNDERSCORE_IDENT_RE + "\\s*="
											}],
											relevance: 0
									}, c, r]
							}
					}
			}
			,
			7943: e=>{
					e.exports = function(e) {
							const t = {
									$pattern: "[A-Z_][A-Z0-9_.]*",
									keyword: "IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT EQ LT GT NE GE LE OR XOR"
							}
								, n = e.inherit(e.C_NUMBER_MODE, {
									begin: "([-+]?((\\.\\d+)|(\\d+)(\\.\\d*)?))|" + e.C_NUMBER_RE
							})
								, i = [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.COMMENT(/\(/, /\)/), n, e.inherit(e.APOS_STRING_MODE, {
									illegal: null
							}), e.inherit(e.QUOTE_STRING_MODE, {
									illegal: null
							}), {
									className: "name",
									begin: "([G])([0-9]+\\.?[0-9]?)"
							}, {
									className: "name",
									begin: "([M])([0-9]+\\.?[0-9]?)"
							}, {
									className: "attr",
									begin: "(VC|VS|#)",
									end: "(\\d+)"
							}, {
									className: "attr",
									begin: "(VZOFX|VZOFY|VZOFZ)"
							}, {
									className: "built_in",
									begin: "(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\[)",
									contains: [n],
									end: "\\]"
							}, {
									className: "symbol",
									variants: [{
											begin: "N",
											end: "\\d+",
											illegal: "\\W"
									}]
							}];
							return {
									name: "G-code (ISO 6983)",
									aliases: ["nc"],
									case_insensitive: !0,
									keywords: t,
									contains: [{
											className: "meta",
											begin: "%"
									}, {
											className: "meta",
											begin: "([O])([0-9]+)"
									}].concat(i)
							}
					}
			}
			,
			136: e=>{
					e.exports = function(e) {
							return {
									name: "Gherkin",
									aliases: ["feature"],
									keywords: "Feature Background Ability Business Need Scenario Scenarios Scenario Outline Scenario Template Examples Given And Then But When",
									contains: [{
											className: "symbol",
											begin: "\\*",
											relevance: 0
									}, {
											className: "meta",
											begin: "@[^@\\s]+"
									}, {
											begin: "\\|",
											end: "\\|\\w*$",
											contains: [{
													className: "string",
													begin: "[^|]+"
											}]
									}, {
											className: "variable",
											begin: "<",
											end: ">"
									}, e.HASH_COMMENT_MODE, {
											className: "string",
											begin: '"""',
											end: '"""'
									}, e.QUOTE_STRING_MODE]
							}
					}
			}
			,
			9544: e=>{
					e.exports = function(e) {
							return {
									name: "GLSL",
									keywords: {
											keyword: "break continue discard do else for if return while switch case default attribute binding buffer ccw centroid centroid varying coherent column_major const cw depth_any depth_greater depth_less depth_unchanged early_fragment_tests equal_spacing flat fractional_even_spacing fractional_odd_spacing highp in index inout invariant invocations isolines layout line_strip lines lines_adjacency local_size_x local_size_y local_size_z location lowp max_vertices mediump noperspective offset origin_upper_left out packed patch pixel_center_integer point_mode points precise precision quads r11f_g11f_b10f r16 r16_snorm r16f r16i r16ui r32f r32i r32ui r8 r8_snorm r8i r8ui readonly restrict rg16 rg16_snorm rg16f rg16i rg16ui rg32f rg32i rg32ui rg8 rg8_snorm rg8i rg8ui rgb10_a2 rgb10_a2ui rgba16 rgba16_snorm rgba16f rgba16i rgba16ui rgba32f rgba32i rgba32ui rgba8 rgba8_snorm rgba8i rgba8ui row_major sample shared smooth std140 std430 stream triangle_strip triangles triangles_adjacency uniform varying vertices volatile writeonly",
											type: "atomic_uint bool bvec2 bvec3 bvec4 dmat2 dmat2x2 dmat2x3 dmat2x4 dmat3 dmat3x2 dmat3x3 dmat3x4 dmat4 dmat4x2 dmat4x3 dmat4x4 double dvec2 dvec3 dvec4 float iimage1D iimage1DArray iimage2D iimage2DArray iimage2DMS iimage2DMSArray iimage2DRect iimage3D iimageBuffer iimageCube iimageCubeArray image1D image1DArray image2D image2DArray image2DMS image2DMSArray image2DRect image3D imageBuffer imageCube imageCubeArray int isampler1D isampler1DArray isampler2D isampler2DArray isampler2DMS isampler2DMSArray isampler2DRect isampler3D isamplerBuffer isamplerCube isamplerCubeArray ivec2 ivec3 ivec4 mat2 mat2x2 mat2x3 mat2x4 mat3 mat3x2 mat3x3 mat3x4 mat4 mat4x2 mat4x3 mat4x4 sampler1D sampler1DArray sampler1DArrayShadow sampler1DShadow sampler2D sampler2DArray sampler2DArrayShadow sampler2DMS sampler2DMSArray sampler2DRect sampler2DRectShadow sampler2DShadow sampler3D samplerBuffer samplerCube samplerCubeArray samplerCubeArrayShadow samplerCubeShadow image1D uimage1DArray uimage2D uimage2DArray uimage2DMS uimage2DMSArray uimage2DRect uimage3D uimageBuffer uimageCube uimageCubeArray uint usampler1D usampler1DArray usampler2D usampler2DArray usampler2DMS usampler2DMSArray usampler2DRect usampler3D samplerBuffer usamplerCube usamplerCubeArray uvec2 uvec3 uvec4 vec2 vec3 vec4 void",
											built_in: "gl_MaxAtomicCounterBindings gl_MaxAtomicCounterBufferSize gl_MaxClipDistances gl_MaxClipPlanes gl_MaxCombinedAtomicCounterBuffers gl_MaxCombinedAtomicCounters gl_MaxCombinedImageUniforms gl_MaxCombinedImageUnitsAndFragmentOutputs gl_MaxCombinedTextureImageUnits gl_MaxComputeAtomicCounterBuffers gl_MaxComputeAtomicCounters gl_MaxComputeImageUniforms gl_MaxComputeTextureImageUnits gl_MaxComputeUniformComponents gl_MaxComputeWorkGroupCount gl_MaxComputeWorkGroupSize gl_MaxDrawBuffers gl_MaxFragmentAtomicCounterBuffers gl_MaxFragmentAtomicCounters gl_MaxFragmentImageUniforms gl_MaxFragmentInputComponents gl_MaxFragmentInputVectors gl_MaxFragmentUniformComponents gl_MaxFragmentUniformVectors gl_MaxGeometryAtomicCounterBuffers gl_MaxGeometryAtomicCounters gl_MaxGeometryImageUniforms gl_MaxGeometryInputComponents gl_MaxGeometryOutputComponents gl_MaxGeometryOutputVertices gl_MaxGeometryTextureImageUnits gl_MaxGeometryTotalOutputComponents gl_MaxGeometryUniformComponents gl_MaxGeometryVaryingComponents gl_MaxImageSamples gl_MaxImageUnits gl_MaxLights gl_MaxPatchVertices gl_MaxProgramTexelOffset gl_MaxTessControlAtomicCounterBuffers gl_MaxTessControlAtomicCounters gl_MaxTessControlImageUniforms gl_MaxTessControlInputComponents gl_MaxTessControlOutputComponents gl_MaxTessControlTextureImageUnits gl_MaxTessControlTotalOutputComponents gl_MaxTessControlUniformComponents gl_MaxTessEvaluationAtomicCounterBuffers gl_MaxTessEvaluationAtomicCounters gl_MaxTessEvaluationImageUniforms gl_MaxTessEvaluationInputComponents gl_MaxTessEvaluationOutputComponents gl_MaxTessEvaluationTextureImageUnits gl_MaxTessEvaluationUniformComponents gl_MaxTessGenLevel gl_MaxTessPatchComponents gl_MaxTextureCoords gl_MaxTextureImageUnits gl_MaxTextureUnits gl_MaxVaryingComponents gl_MaxVaryingFloats gl_MaxVaryingVectors gl_MaxVertexAtomicCounterBuffers gl_MaxVertexAtomicCounters gl_MaxVertexAttribs gl_MaxVertexImageUniforms gl_MaxVertexOutputComponents gl_MaxVertexOutputVectors gl_MaxVertexTextureImageUnits gl_MaxVertexUniformComponents gl_MaxVertexUniformVectors gl_MaxViewports gl_MinProgramTexelOffset gl_BackColor gl_BackLightModelProduct gl_BackLightProduct gl_BackMaterial gl_BackSecondaryColor gl_ClipDistance gl_ClipPlane gl_ClipVertex gl_Color gl_DepthRange gl_EyePlaneQ gl_EyePlaneR gl_EyePlaneS gl_EyePlaneT gl_Fog gl_FogCoord gl_FogFragCoord gl_FragColor gl_FragCoord gl_FragData gl_FragDepth gl_FrontColor gl_FrontFacing gl_FrontLightModelProduct gl_FrontLightProduct gl_FrontMaterial gl_FrontSecondaryColor gl_GlobalInvocationID gl_InstanceID gl_InvocationID gl_Layer gl_LightModel gl_LightSource gl_LocalInvocationID gl_LocalInvocationIndex gl_ModelViewMatrix gl_ModelViewMatrixInverse gl_ModelViewMatrixInverseTranspose gl_ModelViewMatrixTranspose gl_ModelViewProjectionMatrix gl_ModelViewProjectionMatrixInverse gl_ModelViewProjectionMatrixInverseTranspose gl_ModelViewProjectionMatrixTranspose gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 gl_Normal gl_NormalMatrix gl_NormalScale gl_NumSamples gl_NumWorkGroups gl_ObjectPlaneQ gl_ObjectPlaneR gl_ObjectPlaneS gl_ObjectPlaneT gl_PatchVerticesIn gl_Point gl_PointCoord gl_PointSize gl_Position gl_PrimitiveID gl_PrimitiveIDIn gl_ProjectionMatrix gl_ProjectionMatrixInverse gl_ProjectionMatrixInverseTranspose gl_ProjectionMatrixTranspose gl_SampleID gl_SampleMask gl_SampleMaskIn gl_SamplePosition gl_SecondaryColor gl_TessCoord gl_TessLevelInner gl_TessLevelOuter gl_TexCoord gl_TextureEnvColor gl_TextureMatrix gl_TextureMatrixInverse gl_TextureMatrixInverseTranspose gl_TextureMatrixTranspose gl_Vertex gl_VertexID gl_ViewportIndex gl_WorkGroupID gl_WorkGroupSize gl_in gl_out EmitStreamVertex EmitVertex EndPrimitive EndStreamPrimitive abs acos acosh all any asin asinh atan atanh atomicAdd atomicAnd atomicCompSwap atomicCounter atomicCounterDecrement atomicCounterIncrement atomicExchange atomicMax atomicMin atomicOr atomicXor barrier bitCount bitfieldExtract bitfieldInsert bitfieldReverse ceil clamp cos cosh cross dFdx dFdy degrees determinant distance dot equal exp exp2 faceforward findLSB findMSB floatBitsToInt floatBitsToUint floor fma fract frexp ftransform fwidth greaterThan greaterThanEqual groupMemoryBarrier imageAtomicAdd imageAtomicAnd imageAtomicCompSwap imageAtomicExchange imageAtomicMax imageAtomicMin imageAtomicOr imageAtomicXor imageLoad imageSize imageStore imulExtended intBitsToFloat interpolateAtCentroid interpolateAtOffset interpolateAtSample inverse inversesqrt isinf isnan ldexp length lessThan lessThanEqual log log2 matrixCompMult max memoryBarrier memoryBarrierAtomicCounter memoryBarrierBuffer memoryBarrierImage memoryBarrierShared min mix mod modf noise1 noise2 noise3 noise4 normalize not notEqual outerProduct packDouble2x32 packHalf2x16 packSnorm2x16 packSnorm4x8 packUnorm2x16 packUnorm4x8 pow radians reflect refract round roundEven shadow1D shadow1DLod shadow1DProj shadow1DProjLod shadow2D shadow2DLod shadow2DProj shadow2DProjLod sign sin sinh smoothstep sqrt step tan tanh texelFetch texelFetchOffset texture texture1D texture1DLod texture1DProj texture1DProjLod texture2D texture2DLod texture2DProj texture2DProjLod texture3D texture3DLod texture3DProj texture3DProjLod textureCube textureCubeLod textureGather textureGatherOffset textureGatherOffsets textureGrad textureGradOffset textureLod textureLodOffset textureOffset textureProj textureProjGrad textureProjGradOffset textureProjLod textureProjLodOffset textureProjOffset textureQueryLevels textureQueryLod textureSize transpose trunc uaddCarry uintBitsToFloat umulExtended unpackDouble2x32 unpackHalf2x16 unpackSnorm2x16 unpackSnorm4x8 unpackUnorm2x16 unpackUnorm4x8 usubBorrow",
											literal: "true false"
									},
									illegal: '"',
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.C_NUMBER_MODE, {
											className: "meta",
											begin: "#",
											end: "$"
									}]
							}
					}
			}
			,
			8636: e=>{
					e.exports = function(e) {
							return {
									name: "GML",
									case_insensitive: !1,
									keywords: {
											keyword: ["#endregion", "#macro", "#region", "and", "begin", "break", "case", "constructor", "continue", "default", "delete", "div", "do", "else", "end", "enum", "exit", "for", "function", "globalvar", "if", "mod", "not", "or", "repeat", "return", "switch", "then", "until", "var", "while", "with", "xor"],
											built_in: ["abs", "achievement_available", "achievement_event", "achievement_get_challenges", "achievement_get_info", "achievement_get_pic", "achievement_increment", "achievement_load_friends", "achievement_load_leaderboard", "achievement_load_progress", "achievement_login", "achievement_login_status", "achievement_logout", "achievement_post", "achievement_post_score", "achievement_reset", "achievement_send_challenge", "achievement_show", "achievement_show_achievements", "achievement_show_challenge_notifications", "achievement_show_leaderboards", "action_inherited", "action_kill_object", "ads_disable", "ads_enable", "ads_engagement_active", "ads_engagement_available", "ads_engagement_launch", "ads_event", "ads_event_preload", "ads_get_display_height", "ads_get_display_width", "ads_interstitial_available", "ads_interstitial_display", "ads_move", "ads_set_reward_callback", "ads_setup", "alarm_get", "alarm_set", "analytics_event", "analytics_event_ext", "angle_difference", "ansi_char", "application_get_position", "application_surface_draw_enable", "application_surface_enable", "application_surface_is_enabled", "arccos", "arcsin", "arctan", "arctan2", "array_copy", "array_create", "array_delete", "array_equals", "array_height_2d", "array_insert", "array_length", "array_length_1d", "array_length_2d", "array_pop", "array_push", "array_resize", "array_sort", "asset_get_index", "asset_get_type", "audio_channel_num", "audio_create_buffer_sound", "audio_create_play_queue", "audio_create_stream", "audio_create_sync_group", "audio_debug", "audio_destroy_stream", "audio_destroy_sync_group", "audio_emitter_create", "audio_emitter_exists", "audio_emitter_falloff", "audio_emitter_free", "audio_emitter_gain", "audio_emitter_get_gain", "audio_emitter_get_listener_mask", "audio_emitter_get_pitch", "audio_emitter_get_vx", "audio_emitter_get_vy", "audio_emitter_get_vz", "audio_emitter_get_x", "audio_emitter_get_y", "audio_emitter_get_z", "audio_emitter_pitch", "audio_emitter_position", "audio_emitter_set_listener_mask", "audio_emitter_velocity", "audio_exists", "audio_falloff_set_model", "audio_free_buffer_sound", "audio_free_play_queue", "audio_get_listener_count", "audio_get_listener_info", "audio_get_listener_mask", "audio_get_master_gain", "audio_get_name", "audio_get_recorder_count", "audio_get_recorder_info", "audio_get_type", "audio_group_is_loaded", "audio_group_load", "audio_group_load_progress", "audio_group_name", "audio_group_set_gain", "audio_group_stop_all", "audio_group_unload", "audio_is_paused", "audio_is_playing", "audio_listener_get_data", "audio_listener_orientation", "audio_listener_position", "audio_listener_set_orientation", "audio_listener_set_position", "audio_listener_set_velocity", "audio_listener_velocity", "audio_master_gain", "audio_music_gain", "audio_music_is_playing", "audio_pause_all", "audio_pause_music", "audio_pause_sound", "audio_pause_sync_group", "audio_play_in_sync_group", "audio_play_music", "audio_play_sound", "audio_play_sound_at", "audio_play_sound_on", "audio_queue_sound", "audio_resume_all", "audio_resume_music", "audio_resume_sound", "audio_resume_sync_group", "audio_set_listener_mask", "audio_set_master_gain", "audio_sound_gain", "audio_sound_get_gain", "audio_sound_get_listener_mask", "audio_sound_get_pitch", "audio_sound_get_track_position", "audio_sound_length", "audio_sound_pitch", "audio_sound_set_listener_mask", "audio_sound_set_track_position", "audio_start_recording", "audio_start_sync_group", "audio_stop_all", "audio_stop_music", "audio_stop_recording", "audio_stop_sound", "audio_stop_sync_group", "audio_sync_group_debug", "audio_sync_group_get_track_pos", "audio_sync_group_is_playing", "audio_system", "background_get_height", "background_get_width", "base64_decode", "base64_encode", "browser_input_capture", "buffer_async_group_begin", "buffer_async_group_end", "buffer_async_group_option", "buffer_base64_decode", "buffer_base64_decode_ext", "buffer_base64_encode", "buffer_copy", "buffer_copy_from_vertex_buffer", "buffer_create", "buffer_create_from_vertex_buffer", "buffer_create_from_vertex_buffer_ext", "buffer_delete", "buffer_exists", "buffer_fill", "buffer_get_address", "buffer_get_alignment", "buffer_get_size", "buffer_get_surface", "buffer_get_type", "buffer_load", "buffer_load_async", "buffer_load_ext", "buffer_load_partial", "buffer_md5", "buffer_peek", "buffer_poke", "buffer_read", "buffer_resize", "buffer_save", "buffer_save_async", "buffer_save_ext", "buffer_seek", "buffer_set_surface", "buffer_sha1", "buffer_sizeof", "buffer_tell", "buffer_write", "camera_apply", "camera_create", "camera_create_view", "camera_destroy", "camera_get_active", "camera_get_begin_script", "camera_get_default", "camera_get_end_script", "camera_get_proj_mat", "camera_get_update_script", "camera_get_view_angle", "camera_get_view_border_x", "camera_get_view_border_y", "camera_get_view_height", "camera_get_view_mat", "camera_get_view_speed_x", "camera_get_view_speed_y", "camera_get_view_target", "camera_get_view_width", "camera_get_view_x", "camera_get_view_y", "camera_set_begin_script", "camera_set_default", "camera_set_end_script", "camera_set_proj_mat", "camera_set_update_script", "camera_set_view_angle", "camera_set_view_border", "camera_set_view_mat", "camera_set_view_pos", "camera_set_view_size", "camera_set_view_speed", "camera_set_view_target", "ceil", "choose", "chr", "clamp", "clickable_add", "clickable_add_ext", "clickable_change", "clickable_change_ext", "clickable_delete", "clickable_exists", "clickable_set_style", "clipboard_get_text", "clipboard_has_text", "clipboard_set_text", "cloud_file_save", "cloud_string_save", "cloud_synchronise", "code_is_compiled", "collision_circle", "collision_circle_list", "collision_ellipse", "collision_ellipse_list", "collision_line", "collision_line_list", "collision_point", "collision_point_list", "collision_rectangle", "collision_rectangle_list", "color_get_blue", "color_get_green", "color_get_hue", "color_get_red", "color_get_saturation", "color_get_value", "colour_get_blue", "colour_get_green", "colour_get_hue", "colour_get_red", "colour_get_saturation", "colour_get_value", "cos", "darccos", "darcsin", "darctan", "darctan2", "date_compare_date", "date_compare_datetime", "date_compare_time", "date_create_datetime", "date_current_datetime", "date_date_of", "date_date_string", "date_datetime_string", "date_day_span", "date_days_in_month", "date_days_in_year", "date_get_day", "date_get_day_of_year", "date_get_hour", "date_get_hour_of_year", "date_get_minute", "date_get_minute_of_year", "date_get_month", "date_get_second", "date_get_second_of_year", "date_get_timezone", "date_get_week", "date_get_weekday", "date_get_year", "date_hour_span", "date_inc_day", "date_inc_hour", "date_inc_minute", "date_inc_month", "date_inc_second", "date_inc_week", "date_inc_year", "date_is_today", "date_leap_year", "date_minute_span", "date_month_span", "date_second_span", "date_set_timezone", "date_time_of", "date_time_string", "date_valid_datetime", "date_week_span", "date_year_span", "dcos", "debug_event", "debug_get_callstack", "degtorad", "device_get_tilt_x", "device_get_tilt_y", "device_get_tilt_z", "device_is_keypad_open", "device_mouse_check_button", "device_mouse_check_button_pressed", "device_mouse_check_button_released", "device_mouse_dbclick_enable", "device_mouse_raw_x", "device_mouse_raw_y", "device_mouse_x", "device_mouse_x_to_gui", "device_mouse_y", "device_mouse_y_to_gui", "directory_create", "directory_destroy", "directory_exists", "display_get_dpi_x", "display_get_dpi_y", "display_get_gui_height", "display_get_gui_width", "display_get_height", "display_get_orientation", "display_get_sleep_margin", "display_get_timing_method", "display_get_width", "display_mouse_get_x", "display_mouse_get_y", "display_mouse_set", "display_reset", "display_set_gui_maximise", "display_set_gui_maximize", "display_set_gui_size", "display_set_sleep_margin", "display_set_timing_method", "display_set_ui_visibility", "distance_to_object", "distance_to_point", "dot_product", "dot_product_3d", "dot_product_3d_normalised", "dot_product_3d_normalized", "dot_product_normalised", "dot_product_normalized", "draw_arrow", "draw_background", "draw_background_ext", "draw_background_part_ext", "draw_background_tiled", "draw_button", "draw_circle", "draw_circle_color", "draw_circle_colour", "draw_clear", "draw_clear_alpha", "draw_ellipse", "draw_ellipse_color", "draw_ellipse_colour", "draw_enable_alphablend", "draw_enable_drawevent", "draw_enable_swf_aa", "draw_flush", "draw_get_alpha", "draw_get_color", "draw_get_colour", "draw_get_lighting", "draw_get_swf_aa_level", "draw_getpixel", "draw_getpixel_ext", "draw_healthbar", "draw_highscore", "draw_light_define_ambient", "draw_light_define_direction", "draw_light_define_point", "draw_light_enable", "draw_light_get", "draw_light_get_ambient", "draw_line", "draw_line_color", "draw_line_colour", "draw_line_width", "draw_line_width_color", "draw_line_width_colour", "draw_path", "draw_point", "draw_point_color", "draw_point_colour", "draw_primitive_begin", "draw_primitive_begin_texture", "draw_primitive_end", "draw_rectangle", "draw_rectangle_color", "draw_rectangle_colour", "draw_roundrect", "draw_roundrect_color", "draw_roundrect_color_ext", "draw_roundrect_colour", "draw_roundrect_colour_ext", "draw_roundrect_ext", "draw_self", "draw_set_alpha", "draw_set_alpha_test", "draw_set_alpha_test_ref_value", "draw_set_blend_mode", "draw_set_blend_mode_ext", "draw_set_circle_precision", "draw_set_color", "draw_set_color_write_enable", "draw_set_colour", "draw_set_font", "draw_set_halign", "draw_set_lighting", "draw_set_swf_aa_level", "draw_set_valign", "draw_skeleton", "draw_skeleton_collision", "draw_skeleton_instance", "draw_skeleton_time", "draw_sprite", "draw_sprite_ext", "draw_sprite_general", "draw_sprite_part", "draw_sprite_part_ext", "draw_sprite_pos", "draw_sprite_stretched", "draw_sprite_stretched_ext", "draw_sprite_tiled", "draw_sprite_tiled_ext", "draw_surface", "draw_surface_ext", "draw_surface_general", "draw_surface_part", "draw_surface_part_ext", "draw_surface_stretched", "draw_surface_stretched_ext", "draw_surface_tiled", "draw_surface_tiled_ext", "draw_text", "draw_text_color", "draw_text_colour", "draw_text_ext", "draw_text_ext_color", "draw_text_ext_colour", "draw_text_ext_transformed", "draw_text_ext_transformed_color", "draw_text_ext_transformed_colour", "draw_text_transformed", "draw_text_transformed_color", "draw_text_transformed_colour", "draw_texture_flush", "draw_tile", "draw_tilemap", "draw_triangle", "draw_triangle_color", "draw_triangle_colour", "draw_vertex", "draw_vertex_color", "draw_vertex_colour", "draw_vertex_texture", "draw_vertex_texture_color", "draw_vertex_texture_colour", "ds_exists", "ds_grid_add", "ds_grid_add_disk", "ds_grid_add_grid_region", "ds_grid_add_region", "ds_grid_clear", "ds_grid_copy", "ds_grid_create", "ds_grid_destroy", "ds_grid_get", "ds_grid_get_disk_max", "ds_grid_get_disk_mean", "ds_grid_get_disk_min", "ds_grid_get_disk_sum", "ds_grid_get_max", "ds_grid_get_mean", "ds_grid_get_min", "ds_grid_get_sum", "ds_grid_height", "ds_grid_multiply", "ds_grid_multiply_disk", "ds_grid_multiply_grid_region", "ds_grid_multiply_region", "ds_grid_read", "ds_grid_resize", "ds_grid_set", "ds_grid_set_disk", "ds_grid_set_grid_region", "ds_grid_set_region", "ds_grid_shuffle", "ds_grid_sort", "ds_grid_value_disk_exists", "ds_grid_value_disk_x", "ds_grid_value_disk_y", "ds_grid_value_exists", "ds_grid_value_x", "ds_grid_value_y", "ds_grid_width", "ds_grid_write", "ds_list_add", "ds_list_clear", "ds_list_copy", "ds_list_create", "ds_list_delete", "ds_list_destroy", "ds_list_empty", "ds_list_find_index", "ds_list_find_value", "ds_list_insert", "ds_list_mark_as_list", "ds_list_mark_as_map", "ds_list_read", "ds_list_replace", "ds_list_set", "ds_list_shuffle", "ds_list_size", "ds_list_sort", "ds_list_write", "ds_map_add", "ds_map_add_list", "ds_map_add_map", "ds_map_clear", "ds_map_copy", "ds_map_create", "ds_map_delete", "ds_map_destroy", "ds_map_empty", "ds_map_exists", "ds_map_find_first", "ds_map_find_last", "ds_map_find_next", "ds_map_find_previous", "ds_map_find_value", "ds_map_read", "ds_map_replace", "ds_map_replace_list", "ds_map_replace_map", "ds_map_secure_load", "ds_map_secure_load_buffer", "ds_map_secure_save", "ds_map_secure_save_buffer", "ds_map_set", "ds_map_size", "ds_map_write", "ds_priority_add", "ds_priority_change_priority", "ds_priority_clear", "ds_priority_copy", "ds_priority_create", "ds_priority_delete_max", "ds_priority_delete_min", "ds_priority_delete_value", "ds_priority_destroy", "ds_priority_empty", "ds_priority_find_max", "ds_priority_find_min", "ds_priority_find_priority", "ds_priority_read", "ds_priority_size", "ds_priority_write", "ds_queue_clear", "ds_queue_copy", "ds_queue_create", "ds_queue_dequeue", "ds_queue_destroy", "ds_queue_empty", "ds_queue_enqueue", "ds_queue_head", "ds_queue_read", "ds_queue_size", "ds_queue_tail", "ds_queue_write", "ds_set_precision", "ds_stack_clear", "ds_stack_copy", "ds_stack_create", "ds_stack_destroy", "ds_stack_empty", "ds_stack_pop", "ds_stack_push", "ds_stack_read", "ds_stack_size", "ds_stack_top", "ds_stack_write", "dsin", "dtan", "effect_clear", "effect_create_above", "effect_create_below", "environment_get_variable", "event_inherited", "event_perform", "event_perform_object", "event_user", "exp", "external_call", "external_define", "external_free", "facebook_accesstoken", "facebook_check_permission", "facebook_dialog", "facebook_graph_request", "facebook_init", "facebook_launch_offerwall", "facebook_login", "facebook_logout", "facebook_post_message", "facebook_request_publish_permissions", "facebook_request_read_permissions", "facebook_send_invite", "facebook_status", "facebook_user_id", "file_attributes", "file_bin_close", "file_bin_open", "file_bin_position", "file_bin_read_byte", "file_bin_rewrite", "file_bin_seek", "file_bin_size", "file_bin_write_byte", "file_copy", "file_delete", "file_exists", "file_find_close", "file_find_first", "file_find_next", "file_rename", "file_text_close", "file_text_eof", "file_text_eoln", "file_text_open_append", "file_text_open_from_string", "file_text_open_read", "file_text_open_write", "file_text_read_real", "file_text_read_string", "file_text_readln", "file_text_write_real", "file_text_write_string", "file_text_writeln", "filename_change_ext", "filename_dir", "filename_drive", "filename_ext", "filename_name", "filename_path", "floor", "font_add", "font_add_enable_aa", "font_add_get_enable_aa", "font_add_sprite", "font_add_sprite_ext", "font_delete", "font_exists", "font_get_bold", "font_get_first", "font_get_fontname", "font_get_italic", "font_get_last", "font_get_name", "font_get_size", "font_get_texture", "font_get_uvs", "font_replace", "font_replace_sprite", "font_replace_sprite_ext", "font_set_cache_size", "font_texture_page_size", "frac", "game_end", "game_get_speed", "game_load", "game_load_buffer", "game_restart", "game_save", "game_save_buffer", "game_set_speed", "gamepad_axis_count", "gamepad_axis_value", "gamepad_button_check", "gamepad_button_check_pressed", "gamepad_button_check_released", "gamepad_button_count", "gamepad_button_value", "gamepad_get_axis_deadzone", "gamepad_get_button_threshold", "gamepad_get_description", "gamepad_get_device_count", "gamepad_is_connected", "gamepad_is_supported", "gamepad_set_axis_deadzone", "gamepad_set_button_threshold", "gamepad_set_color", "gamepad_set_colour", "gamepad_set_vibration", "gesture_double_tap_distance", "gesture_double_tap_time", "gesture_drag_distance", "gesture_drag_time", "gesture_flick_speed", "gesture_get_double_tap_distance", "gesture_get_double_tap_time", "gesture_get_drag_distance", "gesture_get_drag_time", "gesture_get_flick_speed", "gesture_get_pinch_angle_away", "gesture_get_pinch_angle_towards", "gesture_get_pinch_distance", "gesture_get_rotate_angle", "gesture_get_rotate_time", "gesture_get_tap_count", "gesture_pinch_angle_away", "gesture_pinch_angle_towards", "gesture_pinch_distance", "gesture_rotate_angle", "gesture_rotate_time", "gesture_tap_count", "get_integer", "get_integer_async", "get_login_async", "get_open_filename", "get_open_filename_ext", "get_save_filename", "get_save_filename_ext", "get_string", "get_string_async", "get_timer", "gml_pragma", "gml_release_mode", "gpu_get_alphatestenable", "gpu_get_alphatestfunc", "gpu_get_alphatestref", "gpu_get_blendenable", "gpu_get_blendmode", "gpu_get_blendmode_dest", "gpu_get_blendmode_destalpha", "gpu_get_blendmode_ext", "gpu_get_blendmode_ext_sepalpha", "gpu_get_blendmode_src", "gpu_get_blendmode_srcalpha", "gpu_get_colorwriteenable", "gpu_get_colourwriteenable", "gpu_get_cullmode", "gpu_get_fog", "gpu_get_lightingenable", "gpu_get_state", "gpu_get_tex_filter", "gpu_get_tex_filter_ext", "gpu_get_tex_max_aniso", "gpu_get_tex_max_aniso_ext", "gpu_get_tex_max_mip", "gpu_get_tex_max_mip_ext", "gpu_get_tex_min_mip", "gpu_get_tex_min_mip_ext", "gpu_get_tex_mip_bias", "gpu_get_tex_mip_bias_ext", "gpu_get_tex_mip_enable", "gpu_get_tex_mip_enable_ext", "gpu_get_tex_mip_filter", "gpu_get_tex_mip_filter_ext", "gpu_get_tex_repeat", "gpu_get_tex_repeat_ext", "gpu_get_texfilter", "gpu_get_texfilter_ext", "gpu_get_texrepeat", "gpu_get_texrepeat_ext", "gpu_get_zfunc", "gpu_get_ztestenable", "gpu_get_zwriteenable", "gpu_pop_state", "gpu_push_state", "gpu_set_alphatestenable", "gpu_set_alphatestfunc", "gpu_set_alphatestref", "gpu_set_blendenable", "gpu_set_blendmode", "gpu_set_blendmode_ext", "gpu_set_blendmode_ext_sepalpha", "gpu_set_colorwriteenable", "gpu_set_colourwriteenable", "gpu_set_cullmode", "gpu_set_fog", "gpu_set_lightingenable", "gpu_set_state", "gpu_set_tex_filter", "gpu_set_tex_filter_ext", "gpu_set_tex_max_aniso", "gpu_set_tex_max_aniso_ext", "gpu_set_tex_max_mip", "gpu_set_tex_max_mip_ext", "gpu_set_tex_min_mip", "gpu_set_tex_min_mip_ext", "gpu_set_tex_mip_bias", "gpu_set_tex_mip_bias_ext", "gpu_set_tex_mip_enable", "gpu_set_tex_mip_enable_ext", "gpu_set_tex_mip_filter", "gpu_set_tex_mip_filter_ext", "gpu_set_tex_repeat", "gpu_set_tex_repeat_ext", "gpu_set_texfilter", "gpu_set_texfilter_ext", "gpu_set_texrepeat", "gpu_set_texrepeat_ext", "gpu_set_zfunc", "gpu_set_ztestenable", "gpu_set_zwriteenable", "highscore_add", "highscore_clear", "highscore_name", "highscore_value", "http_get", "http_get_file", "http_post_string", "http_request", "iap_acquire", "iap_activate", "iap_consume", "iap_enumerate_products", "iap_product_details", "iap_purchase_details", "iap_restore_all", "iap_status", "ini_close", "ini_key_delete", "ini_key_exists", "ini_open", "ini_open_from_string", "ini_read_real", "ini_read_string", "ini_section_delete", "ini_section_exists", "ini_write_real", "ini_write_string", "instance_activate_all", "instance_activate_layer", "instance_activate_object", "instance_activate_region", "instance_change", "instance_copy", "instance_create", "instance_create_depth", "instance_create_layer", "instance_deactivate_all", "instance_deactivate_layer", "instance_deactivate_object", "instance_deactivate_region", "instance_destroy", "instance_exists", "instance_find", "instance_furthest", "instance_id_get", "instance_nearest", "instance_number", "instance_place", "instance_place_list", "instance_position", "instance_position_list", "int64", "io_clear", "irandom", "irandom_range", "is_array", "is_bool", "is_infinity", "is_int32", "is_int64", "is_matrix", "is_method", "is_nan", "is_numeric", "is_ptr", "is_real", "is_string", "is_struct", "is_undefined", "is_vec3", "is_vec4", "json_decode", "json_encode", "keyboard_check", "keyboard_check_direct", "keyboard_check_pressed", "keyboard_check_released", "keyboard_clear", "keyboard_get_map", "keyboard_get_numlock", "keyboard_key_press", "keyboard_key_release", "keyboard_set_map", "keyboard_set_numlock", "keyboard_unset_map", "keyboard_virtual_height", "keyboard_virtual_hide", "keyboard_virtual_show", "keyboard_virtual_status", "layer_add_instance", "layer_background_alpha", "layer_background_blend", "layer_background_change", "layer_background_create", "layer_background_destroy", "layer_background_exists", "layer_background_get_alpha", "layer_background_get_blend", "layer_background_get_htiled", "layer_background_get_id", "layer_background_get_index", "layer_background_get_speed", "layer_background_get_sprite", "layer_background_get_stretch", "layer_background_get_visible", "layer_background_get_vtiled", "layer_background_get_xscale", "layer_background_get_yscale", "layer_background_htiled", "layer_background_index", "layer_background_speed", "layer_background_sprite", "layer_background_stretch", "layer_background_visible", "layer_background_vtiled", "layer_background_xscale", "layer_background_yscale", "layer_create", "layer_depth", "layer_destroy", "layer_destroy_instances", "layer_element_move", "layer_exists", "layer_force_draw_depth", "layer_get_all", "layer_get_all_elements", "layer_get_depth", "layer_get_element_layer", "layer_get_element_type", "layer_get_forced_depth", "layer_get_hspeed", "layer_get_id", "layer_get_id_at_depth", "layer_get_name", "layer_get_script_begin", "layer_get_script_end", "layer_get_shader", "layer_get_target_room", "layer_get_visible", "layer_get_vspeed", "layer_get_x", "layer_get_y", "layer_has_instance", "layer_hspeed", "layer_instance_get_instance", "layer_is_draw_depth_forced", "layer_reset_target_room", "layer_script_begin", "layer_script_end", "layer_set_target_room", "layer_set_visible", "layer_shader", "layer_sprite_alpha", "layer_sprite_angle", "layer_sprite_blend", "layer_sprite_change", "layer_sprite_create", "layer_sprite_destroy", "layer_sprite_exists", "layer_sprite_get_alpha", "layer_sprite_get_angle", "layer_sprite_get_blend", "layer_sprite_get_id", "layer_sprite_get_index", "layer_sprite_get_speed", "layer_sprite_get_sprite", "layer_sprite_get_x", "layer_sprite_get_xscale", "layer_sprite_get_y", "layer_sprite_get_yscale", "layer_sprite_index", "layer_sprite_speed", "layer_sprite_x", "layer_sprite_xscale", "layer_sprite_y", "layer_sprite_yscale", "layer_tile_alpha", "layer_tile_blend", "layer_tile_change", "layer_tile_create", "layer_tile_destroy", "layer_tile_exists", "layer_tile_get_alpha", "layer_tile_get_blend", "layer_tile_get_region", "layer_tile_get_sprite", "layer_tile_get_visible", "layer_tile_get_x", "layer_tile_get_xscale", "layer_tile_get_y", "layer_tile_get_yscale", "layer_tile_region", "layer_tile_visible", "layer_tile_x", "layer_tile_xscale", "layer_tile_y", "layer_tile_yscale", "layer_tilemap_create", "layer_tilemap_destroy", "layer_tilemap_exists", "layer_tilemap_get_id", "layer_vspeed", "layer_x", "layer_y", "lengthdir_x", "lengthdir_y", "lerp", "ln", "load_csv", "log10", "log2", "logn", "make_color_hsv", "make_color_rgb", "make_colour_hsv", "make_colour_rgb", "math_get_epsilon", "math_set_epsilon", "matrix_build", "matrix_build_identity", "matrix_build_lookat", "matrix_build_projection_ortho", "matrix_build_projection_perspective", "matrix_build_projection_perspective_fov", "matrix_get", "matrix_multiply", "matrix_set", "matrix_stack_clear", "matrix_stack_is_empty", "matrix_stack_multiply", "matrix_stack_pop", "matrix_stack_push", "matrix_stack_set", "matrix_stack_top", "matrix_transform_vertex", "max", "md5_file", "md5_string_unicode", "md5_string_utf8", "mean", "median", "merge_color", "merge_colour", "min", "motion_add", "motion_set", "mouse_check_button", "mouse_check_button_pressed", "mouse_check_button_released", "mouse_clear", "mouse_wheel_down", "mouse_wheel_up", "move_bounce_all", "move_bounce_solid", "move_contact_all", "move_contact_solid", "move_outside_all", "move_outside_solid", "move_random", "move_snap", "move_towards_point", "move_wrap", "mp_grid_add_cell", "mp_grid_add_instances", "mp_grid_add_rectangle", "mp_grid_clear_all", "mp_grid_clear_cell", "mp_grid_clear_rectangle", "mp_grid_create", "mp_grid_destroy", "mp_grid_draw", "mp_grid_get_cell", "mp_grid_path", "mp_grid_to_ds_grid", "mp_linear_path", "mp_linear_path_object", "mp_linear_step", "mp_linear_step_object", "mp_potential_path", "mp_potential_path_object", "mp_potential_settings", "mp_potential_step", "mp_potential_step_object", "network_connect", "network_connect_raw", "network_create_server", "network_create_server_raw", "network_create_socket", "network_create_socket_ext", "network_destroy", "network_resolve", "network_send_broadcast", "network_send_packet", "network_send_raw", "network_send_udp", "network_send_udp_raw", "network_set_config", "network_set_timeout", "object_exists", "object_get_depth", "object_get_mask", "object_get_name", "object_get_parent", "object_get_persistent", "object_get_physics", "object_get_solid", "object_get_sprite", "object_get_visible", "object_is_ancestor", "object_set_mask", "object_set_persistent", "object_set_solid", "object_set_sprite", "object_set_visible", "ord", "os_get_config", "os_get_info", "os_get_language", "os_get_region", "os_is_network_connected", "os_is_paused", "os_lock_orientation", "os_powersave_enable", "parameter_count", "parameter_string", "part_emitter_burst", "part_emitter_clear", "part_emitter_create", "part_emitter_destroy", "part_emitter_destroy_all", "part_emitter_exists", "part_emitter_region", "part_emitter_stream", "part_particles_clear", "part_particles_count", "part_particles_create", "part_particles_create_color", "part_particles_create_colour", "part_system_automatic_draw", "part_system_automatic_update", "part_system_clear", "part_system_create", "part_system_create_layer", "part_system_depth", "part_system_destroy", "part_system_draw_order", "part_system_drawit", "part_system_exists", "part_system_get_layer", "part_system_layer", "part_system_position", "part_system_update", "part_type_alpha1", "part_type_alpha2", "part_type_alpha3", "part_type_blend", "part_type_clear", "part_type_color1", "part_type_color2", "part_type_color3", "part_type_color_hsv", "part_type_color_mix", "part_type_color_rgb", "part_type_colour1", "part_type_colour2", "part_type_colour3", "part_type_colour_hsv", "part_type_colour_mix", "part_type_colour_rgb", "part_type_create", "part_type_death", "part_type_destroy", "part_type_direction", "part_type_exists", "part_type_gravity", "part_type_life", "part_type_orientation", "part_type_scale", "part_type_shape", "part_type_size", "part_type_speed", "part_type_sprite", "part_type_step", "path_add", "path_add_point", "path_append", "path_assign", "path_change_point", "path_clear_points", "path_delete", "path_delete_point", "path_duplicate", "path_end", "path_exists", "path_flip", "path_get_closed", "path_get_kind", "path_get_length", "path_get_name", "path_get_number", "path_get_point_speed", "path_get_point_x", "path_get_point_y", "path_get_precision", "path_get_speed", "path_get_time", "path_get_x", "path_get_y", "path_insert_point", "path_mirror", "path_rescale", "path_reverse", "path_rotate", "path_set_closed", "path_set_kind", "path_set_precision", "path_shift", "path_start", "physics_apply_angular_impulse", "physics_apply_force", "physics_apply_impulse", "physics_apply_local_force", "physics_apply_local_impulse", "physics_apply_torque", "physics_draw_debug", "physics_fixture_add_point", "physics_fixture_bind", "physics_fixture_bind_ext", "physics_fixture_create", "physics_fixture_delete", "physics_fixture_set_angular_damping", "physics_fixture_set_awake", "physics_fixture_set_box_shape", "physics_fixture_set_chain_shape", "physics_fixture_set_circle_shape", "physics_fixture_set_collision_group", "physics_fixture_set_density", "physics_fixture_set_edge_shape", "physics_fixture_set_friction", "physics_fixture_set_kinematic", "physics_fixture_set_linear_damping", "physics_fixture_set_polygon_shape", "physics_fixture_set_restitution", "physics_fixture_set_sensor", "physics_get_density", "physics_get_friction", "physics_get_restitution", "physics_joint_delete", "physics_joint_distance_create", "physics_joint_enable_motor", "physics_joint_friction_create", "physics_joint_gear_create", "physics_joint_get_value", "physics_joint_prismatic_create", "physics_joint_pulley_create", "physics_joint_revolute_create", "physics_joint_rope_create", "physics_joint_set_value", "physics_joint_weld_create", "physics_joint_wheel_create", "physics_mass_properties", "physics_particle_count", "physics_particle_create", "physics_particle_delete", "physics_particle_delete_region_box", "physics_particle_delete_region_circle", "physics_particle_delete_region_poly", "physics_particle_draw", "physics_particle_draw_ext", "physics_particle_get_damping", "physics_particle_get_data", "physics_particle_get_data_particle", "physics_particle_get_density", "physics_particle_get_gravity_scale", "physics_particle_get_group_flags", "physics_particle_get_max_count", "physics_particle_get_radius", "physics_particle_group_add_point", "physics_particle_group_begin", "physics_particle_group_box", "physics_particle_group_circle", "physics_particle_group_count", "physics_particle_group_delete", "physics_particle_group_end", "physics_particle_group_get_ang_vel", "physics_particle_group_get_angle", "physics_particle_group_get_centre_x", "physics_particle_group_get_centre_y", "physics_particle_group_get_data", "physics_particle_group_get_inertia", "physics_particle_group_get_mass", "physics_particle_group_get_vel_x", "physics_particle_group_get_vel_y", "physics_particle_group_get_x", "physics_particle_group_get_y", "physics_particle_group_join", "physics_particle_group_polygon", "physics_particle_set_category_flags", "physics_particle_set_damping", "physics_particle_set_density", "physics_particle_set_flags", "physics_particle_set_gravity_scale", "physics_particle_set_group_flags", "physics_particle_set_max_count", "physics_particle_set_radius", "physics_pause_enable", "physics_remove_fixture", "physics_set_density", "physics_set_friction", "physics_set_restitution", "physics_test_overlap", "physics_world_create", "physics_world_draw_debug", "physics_world_gravity", "physics_world_update_iterations", "physics_world_update_speed", "place_empty", "place_free", "place_meeting", "place_snapped", "point_direction", "point_distance", "point_distance_3d", "point_in_circle", "point_in_rectangle", "point_in_triangle", "position_change", "position_destroy", "position_empty", "position_meeting", "power", "ptr", "push_cancel_local_notification", "push_get_first_local_notification", "push_get_next_local_notification", "push_local_notification", "radtodeg", "random", "random_get_seed", "random_range", "random_set_seed", "randomise", "randomize", "real", "rectangle_in_circle", "rectangle_in_rectangle", "rectangle_in_triangle", "room_add", "room_assign", "room_duplicate", "room_exists", "room_get_camera", "room_get_name", "room_get_viewport", "room_goto", "room_goto_next", "room_goto_previous", "room_instance_add", "room_instance_clear", "room_next", "room_previous", "room_restart", "room_set_background_color", "room_set_background_colour", "room_set_camera", "room_set_height", "room_set_persistent", "room_set_view", "room_set_view_enabled", "room_set_viewport", "room_set_width", "round", "screen_save", "screen_save_part", "script_execute", "script_exists", "script_get_name", "sha1_file", "sha1_string_unicode", "sha1_string_utf8", "shader_current", "shader_enable_corner_id", "shader_get_name", "shader_get_sampler_index", "shader_get_uniform", "shader_is_compiled", "shader_reset", "shader_set", "shader_set_uniform_f", "shader_set_uniform_f_array", "shader_set_uniform_i", "shader_set_uniform_i_array", "shader_set_uniform_matrix", "shader_set_uniform_matrix_array", "shaders_are_supported", "shop_leave_rating", "show_debug_message", "show_debug_overlay", "show_error", "show_message", "show_message_async", "show_question", "show_question_async", "sign", "sin", "skeleton_animation_clear", "skeleton_animation_get", "skeleton_animation_get_duration", "skeleton_animation_get_ext", "skeleton_animation_get_frame", "skeleton_animation_get_frames", "skeleton_animation_list", "skeleton_animation_mix", "skeleton_animation_set", "skeleton_animation_set_ext", "skeleton_animation_set_frame", "skeleton_attachment_create", "skeleton_attachment_get", "skeleton_attachment_set", "skeleton_bone_data_get", "skeleton_bone_data_set", "skeleton_bone_state_get", "skeleton_bone_state_set", "skeleton_collision_draw_set", "skeleton_get_bounds", "skeleton_get_minmax", "skeleton_get_num_bounds", "skeleton_skin_get", "skeleton_skin_list", "skeleton_skin_set", "skeleton_slot_data", "sprite_add", "sprite_add_from_surface", "sprite_assign", "sprite_collision_mask", "sprite_create_from_surface", "sprite_delete", "sprite_duplicate", "sprite_exists", "sprite_flush", "sprite_flush_multi", "sprite_get_bbox_bottom", "sprite_get_bbox_left", "sprite_get_bbox_right", "sprite_get_bbox_top", "sprite_get_height", "sprite_get_name", "sprite_get_number", "sprite_get_speed", "sprite_get_speed_type", "sprite_get_texture", "sprite_get_tpe", "sprite_get_uvs", "sprite_get_width", "sprite_get_xoffset", "sprite_get_yoffset", "sprite_merge", "sprite_prefetch", "sprite_prefetch_multi", "sprite_replace", "sprite_save", "sprite_save_strip", "sprite_set_alpha_from_sprite", "sprite_set_cache_size", "sprite_set_cache_size_ext", "sprite_set_offset", "sprite_set_speed", "sqr", "sqrt", "steam_activate_overlay", "steam_activate_overlay_browser", "steam_activate_overlay_store", "steam_activate_overlay_user", "steam_available_languages", "steam_clear_achievement", "steam_create_leaderboard", "steam_current_game_language", "steam_download_friends_scores", "steam_download_scores", "steam_download_scores_around_user", "steam_file_delete", "steam_file_exists", "steam_file_persisted", "steam_file_read", "steam_file_share", "steam_file_size", "steam_file_write", "steam_file_write_file", "steam_get_achievement", "steam_get_app_id", "steam_get_persona_name", "steam_get_quota_free", "steam_get_quota_total", "steam_get_stat_avg_rate", "steam_get_stat_float", "steam_get_stat_int", "steam_get_user_account_id", "steam_get_user_persona_name", "steam_get_user_steam_id", "steam_initialised", "steam_is_cloud_enabled_for_account", "steam_is_cloud_enabled_for_app", "steam_is_overlay_activated", "steam_is_overlay_enabled", "steam_is_screenshot_requested", "steam_is_user_logged_on", "steam_reset_all_stats", "steam_reset_all_stats_achievements", "steam_send_screenshot", "steam_set_achievement", "steam_set_stat_avg_rate", "steam_set_stat_float", "steam_set_stat_int", "steam_stats_ready", "steam_ugc_create_item", "steam_ugc_create_query_all", "steam_ugc_create_query_all_ex", "steam_ugc_create_query_user", "steam_ugc_create_query_user_ex", "steam_ugc_download", "steam_ugc_get_item_install_info", "steam_ugc_get_item_update_info", "steam_ugc_get_item_update_progress", "steam_ugc_get_subscribed_items", "steam_ugc_num_subscribed_items", "steam_ugc_query_add_excluded_tag", "steam_ugc_query_add_required_tag", "steam_ugc_query_set_allow_cached_response", "steam_ugc_query_set_cloud_filename_filter", "steam_ugc_query_set_match_any_tag", "steam_ugc_query_set_ranked_by_trend_days", "steam_ugc_query_set_return_long_description", "steam_ugc_query_set_return_total_only", "steam_ugc_query_set_search_text", "steam_ugc_request_item_details", "steam_ugc_send_query", "steam_ugc_set_item_content", "steam_ugc_set_item_description", "steam_ugc_set_item_preview", "steam_ugc_set_item_tags", "steam_ugc_set_item_title", "steam_ugc_set_item_visibility", "steam_ugc_start_item_update", "steam_ugc_submit_item_update", "steam_ugc_subscribe_item", "steam_ugc_unsubscribe_item", "steam_upload_score", "steam_upload_score_buffer", "steam_upload_score_buffer_ext", "steam_upload_score_ext", "steam_user_installed_dlc", "steam_user_owns_dlc", "string", "string_byte_at", "string_byte_length", "string_char_at", "string_copy", "string_count", "string_delete", "string_digits", "string_format", "string_hash_to_newline", "string_height", "string_height_ext", "string_insert", "string_length", "string_letters", "string_lettersdigits", "string_lower", "string_ord_at", "string_pos", "string_repeat", "string_replace", "string_replace_all", "string_set_byte_at", "string_upper", "string_width", "string_width_ext", "surface_copy", "surface_copy_part", "surface_create", "surface_create_ext", "surface_depth_disable", "surface_exists", "surface_free", "surface_get_depth_disable", "surface_get_height", "surface_get_texture", "surface_get_width", "surface_getpixel", "surface_getpixel_ext", "surface_reset_target", "surface_resize", "surface_save", "surface_save_part", "surface_set_target", "surface_set_target_ext", "tan", "texture_get_height", "texture_get_texel_height", "texture_get_texel_width", "texture_get_uvs", "texture_get_width", "texture_global_scale", "texture_set_stage", "tile_get_empty", "tile_get_flip", "tile_get_index", "tile_get_mirror", "tile_get_rotate", "tile_set_empty", "tile_set_flip", "tile_set_index", "tile_set_mirror", "tile_set_rotate", "tilemap_clear", "tilemap_get", "tilemap_get_at_pixel", "tilemap_get_cell_x_at_pixel", "tilemap_get_cell_y_at_pixel", "tilemap_get_frame", "tilemap_get_global_mask", "tilemap_get_height", "tilemap_get_mask", "tilemap_get_tile_height", "tilemap_get_tile_width", "tilemap_get_tileset", "tilemap_get_width", "tilemap_get_x", "tilemap_get_y", "tilemap_set", "tilemap_set_at_pixel", "tilemap_set_global_mask", "tilemap_set_mask", "tilemap_tileset", "tilemap_x", "tilemap_y", "timeline_add", "timeline_clear", "timeline_delete", "timeline_exists", "timeline_get_name", "timeline_max_moment", "timeline_moment_add_script", "timeline_moment_clear", "timeline_size", "typeof", "url_get_domain", "url_open", "url_open_ext", "url_open_full", "variable_global_exists", "variable_global_get", "variable_global_set", "variable_instance_exists", "variable_instance_get", "variable_instance_get_names", "variable_instance_set", "variable_struct_exists", "variable_struct_get", "variable_struct_get_names", "variable_struct_names_count", "variable_struct_remove", "variable_struct_set", "vertex_argb", "vertex_begin", "vertex_color", "vertex_colour", "vertex_create_buffer", "vertex_create_buffer_ext", "vertex_create_buffer_from_buffer", "vertex_create_buffer_from_buffer_ext", "vertex_delete_buffer", "vertex_end", "vertex_float1", "vertex_float2", "vertex_float3", "vertex_float4", "vertex_format_add_color", "vertex_format_add_colour", "vertex_format_add_custom", "vertex_format_add_normal", "vertex_format_add_position", "vertex_format_add_position_3d", "vertex_format_add_texcoord", "vertex_format_add_textcoord", "vertex_format_begin", "vertex_format_delete", "vertex_format_end", "vertex_freeze", "vertex_get_buffer_size", "vertex_get_number", "vertex_normal", "vertex_position", "vertex_position_3d", "vertex_submit", "vertex_texcoord", "vertex_ubyte4", "view_get_camera", "view_get_hport", "view_get_surface_id", "view_get_visible", "view_get_wport", "view_get_xport", "view_get_yport", "view_set_camera", "view_set_hport", "view_set_surface_id", "view_set_visible", "view_set_wport", "view_set_xport", "view_set_yport", "virtual_key_add", "virtual_key_delete", "virtual_key_hide", "virtual_key_show", "win8_appbar_add_element", "win8_appbar_enable", "win8_appbar_remove_element", "win8_device_touchscreen_available", "win8_license_initialize_sandbox", "win8_license_trial_version", "win8_livetile_badge_clear", "win8_livetile_badge_notification", "win8_livetile_notification_begin", "win8_livetile_notification_end", "win8_livetile_notification_expiry", "win8_livetile_notification_image_add", "win8_livetile_notification_secondary_begin", "win8_livetile_notification_tag", "win8_livetile_notification_text_add", "win8_livetile_queue_enable", "win8_livetile_tile_clear", "win8_livetile_tile_notification", "win8_search_add_suggestions", "win8_search_disable", "win8_search_enable", "win8_secondarytile_badge_notification", "win8_secondarytile_delete", "win8_secondarytile_pin", "win8_settingscharm_add_entry", "win8_settingscharm_add_html_entry", "win8_settingscharm_add_xaml_entry", "win8_settingscharm_get_xaml_property", "win8_settingscharm_remove_entry", "win8_settingscharm_set_xaml_property", "win8_share_file", "win8_share_image", "win8_share_screenshot", "win8_share_text", "win8_share_url", "window_center", "window_device", "window_get_caption", "window_get_color", "window_get_colour", "window_get_cursor", "window_get_fullscreen", "window_get_height", "window_get_visible_rects", "window_get_width", "window_get_x", "window_get_y", "window_handle", "window_has_focus", "window_mouse_get_x", "window_mouse_get_y", "window_mouse_set", "window_set_caption", "window_set_color", "window_set_colour", "window_set_cursor", "window_set_fullscreen", "window_set_max_height", "window_set_max_width", "window_set_min_height", "window_set_min_width", "window_set_position", "window_set_rectangle", "window_set_size", "window_view_mouse_get_x", "window_view_mouse_get_y", "window_views_mouse_get_x", "window_views_mouse_get_y", "winphone_license_trial_version", "winphone_tile_back_content", "winphone_tile_back_content_wide", "winphone_tile_back_image", "winphone_tile_back_image_wide", "winphone_tile_back_title", "winphone_tile_background_color", "winphone_tile_background_colour", "winphone_tile_count", "winphone_tile_cycle_images", "winphone_tile_front_image", "winphone_tile_front_image_small", "winphone_tile_front_image_wide", "winphone_tile_icon_image", "winphone_tile_small_background_image", "winphone_tile_small_icon_image", "winphone_tile_title", "winphone_tile_wide_content", "zip_unzip"],
											literal: ["all", "false", "noone", "pointer_invalid", "pointer_null", "true", "undefined"],
											symbol: ["ANSI_CHARSET", "ARABIC_CHARSET", "BALTIC_CHARSET", "CHINESEBIG5_CHARSET", "DEFAULT_CHARSET", "EASTEUROPE_CHARSET", "GB2312_CHARSET", "GM_build_date", "GM_runtime_version", "GM_version", "GREEK_CHARSET", "HANGEUL_CHARSET", "HEBREW_CHARSET", "JOHAB_CHARSET", "MAC_CHARSET", "OEM_CHARSET", "RUSSIAN_CHARSET", "SHIFTJIS_CHARSET", "SYMBOL_CHARSET", "THAI_CHARSET", "TURKISH_CHARSET", "VIETNAMESE_CHARSET", "achievement_achievement_info", "achievement_filter_all_players", "achievement_filter_favorites_only", "achievement_filter_friends_only", "achievement_friends_info", "achievement_leaderboard_info", "achievement_our_info", "achievement_pic_loaded", "achievement_show_achievement", "achievement_show_bank", "achievement_show_friend_picker", "achievement_show_leaderboard", "achievement_show_profile", "achievement_show_purchase_prompt", "achievement_show_ui", "achievement_type_achievement_challenge", "achievement_type_score_challenge", "asset_font", "asset_object", "asset_path", "asset_room", "asset_script", "asset_shader", "asset_sound", "asset_sprite", "asset_tiles", "asset_timeline", "asset_unknown", "audio_3d", "audio_falloff_exponent_distance", "audio_falloff_exponent_distance_clamped", "audio_falloff_inverse_distance", "audio_falloff_inverse_distance_clamped", "audio_falloff_linear_distance", "audio_falloff_linear_distance_clamped", "audio_falloff_none", "audio_mono", "audio_new_system", "audio_old_system", "audio_stereo", "bm_add", "bm_complex", "bm_dest_alpha", "bm_dest_color", "bm_dest_colour", "bm_inv_dest_alpha", "bm_inv_dest_color", "bm_inv_dest_colour", "bm_inv_src_alpha", "bm_inv_src_color", "bm_inv_src_colour", "bm_max", "bm_normal", "bm_one", "bm_src_alpha", "bm_src_alpha_sat", "bm_src_color", "bm_src_colour", "bm_subtract", "bm_zero", "browser_chrome", "browser_edge", "browser_firefox", "browser_ie", "browser_ie_mobile", "browser_not_a_browser", "browser_opera", "browser_safari", "browser_safari_mobile", "browser_tizen", "browser_unknown", "browser_windows_store", "buffer_bool", "buffer_f16", "buffer_f32", "buffer_f64", "buffer_fast", "buffer_fixed", "buffer_generalerror", "buffer_grow", "buffer_invalidtype", "buffer_network", "buffer_outofbounds", "buffer_outofspace", "buffer_s16", "buffer_s32", "buffer_s8", "buffer_seek_end", "buffer_seek_relative", "buffer_seek_start", "buffer_string", "buffer_surface_copy", "buffer_text", "buffer_u16", "buffer_u32", "buffer_u64", "buffer_u8", "buffer_vbuffer", "buffer_wrap", "button_type", "c_aqua", "c_black", "c_blue", "c_dkgray", "c_fuchsia", "c_gray", "c_green", "c_lime", "c_ltgray", "c_maroon", "c_navy", "c_olive", "c_orange", "c_purple", "c_red", "c_silver", "c_teal", "c_white", "c_yellow", "cmpfunc_always", "cmpfunc_equal", "cmpfunc_greater", "cmpfunc_greaterequal", "cmpfunc_less", "cmpfunc_lessequal", "cmpfunc_never", "cmpfunc_notequal", "cr_appstart", "cr_arrow", "cr_beam", "cr_cross", "cr_default", "cr_drag", "cr_handpoint", "cr_hourglass", "cr_none", "cr_size_all", "cr_size_nesw", "cr_size_ns", "cr_size_nwse", "cr_size_we", "cr_uparrow", "cull_clockwise", "cull_counterclockwise", "cull_noculling", "device_emulator", "device_ios_ipad", "device_ios_ipad_retina", "device_ios_iphone", "device_ios_iphone5", "device_ios_iphone6", "device_ios_iphone6plus", "device_ios_iphone_retina", "device_ios_unknown", "device_tablet", "display_landscape", "display_landscape_flipped", "display_portrait", "display_portrait_flipped", "dll_cdecl", "dll_stdcall", "ds_type_grid", "ds_type_list", "ds_type_map", "ds_type_priority", "ds_type_queue", "ds_type_stack", "ef_cloud", "ef_ellipse", "ef_explosion", "ef_firework", "ef_flare", "ef_rain", "ef_ring", "ef_smoke", "ef_smokeup", "ef_snow", "ef_spark", "ef_star", "ev_alarm", "ev_animation_end", "ev_boundary", "ev_cleanup", "ev_close_button", "ev_collision", "ev_create", "ev_destroy", "ev_draw", "ev_draw_begin", "ev_draw_end", "ev_draw_post", "ev_draw_pre", "ev_end_of_path", "ev_game_end", "ev_game_start", "ev_gesture", "ev_gesture_double_tap", "ev_gesture_drag_end", "ev_gesture_drag_start", "ev_gesture_dragging", "ev_gesture_flick", "ev_gesture_pinch_end", "ev_gesture_pinch_in", "ev_gesture_pinch_out", "ev_gesture_pinch_start", "ev_gesture_rotate_end", "ev_gesture_rotate_start", "ev_gesture_rotating", "ev_gesture_tap", "ev_global_gesture_double_tap", "ev_global_gesture_drag_end", "ev_global_gesture_drag_start", "ev_global_gesture_dragging", "ev_global_gesture_flick", "ev_global_gesture_pinch_end", "ev_global_gesture_pinch_in", "ev_global_gesture_pinch_out", "ev_global_gesture_pinch_start", "ev_global_gesture_rotate_end", "ev_global_gesture_rotate_start", "ev_global_gesture_rotating", "ev_global_gesture_tap", "ev_global_left_button", "ev_global_left_press", "ev_global_left_release", "ev_global_middle_button", "ev_global_middle_press", "ev_global_middle_release", "ev_global_right_button", "ev_global_right_press", "ev_global_right_release", "ev_gui", "ev_gui_begin", "ev_gui_end", "ev_joystick1_button1", "ev_joystick1_button2", "ev_joystick1_button3", "ev_joystick1_button4", "ev_joystick1_button5", "ev_joystick1_button6", "ev_joystick1_button7", "ev_joystick1_button8", "ev_joystick1_down", "ev_joystick1_left", "ev_joystick1_right", "ev_joystick1_up", "ev_joystick2_button1", "ev_joystick2_button2", "ev_joystick2_button3", "ev_joystick2_button4", "ev_joystick2_button5", "ev_joystick2_button6", "ev_joystick2_button7", "ev_joystick2_button8", "ev_joystick2_down", "ev_joystick2_left", "ev_joystick2_right", "ev_joystick2_up", "ev_keyboard", "ev_keypress", "ev_keyrelease", "ev_left_button", "ev_left_press", "ev_left_release", "ev_middle_button", "ev_middle_press", "ev_middle_release", "ev_mouse", "ev_mouse_enter", "ev_mouse_leave", "ev_mouse_wheel_down", "ev_mouse_wheel_up", "ev_no_button", "ev_no_more_health", "ev_no_more_lives", "ev_other", "ev_outside", "ev_right_button", "ev_right_press", "ev_right_release", "ev_room_end", "ev_room_start", "ev_step", "ev_step_begin", "ev_step_end", "ev_step_normal", "ev_trigger", "ev_user0", "ev_user1", "ev_user2", "ev_user3", "ev_user4", "ev_user5", "ev_user6", "ev_user7", "ev_user8", "ev_user9", "ev_user10", "ev_user11", "ev_user12", "ev_user13", "ev_user14", "ev_user15", "fa_archive", "fa_bottom", "fa_center", "fa_directory", "fa_hidden", "fa_left", "fa_middle", "fa_readonly", "fa_right", "fa_sysfile", "fa_top", "fa_volumeid", "fb_login_default", "fb_login_fallback_to_webview", "fb_login_forcing_safari", "fb_login_forcing_webview", "fb_login_no_fallback_to_webview", "fb_login_use_system_account", "gamespeed_fps", "gamespeed_microseconds", "ge_lose", "global", "gp_axislh", "gp_axislv", "gp_axisrh", "gp_axisrv", "gp_face1", "gp_face2", "gp_face3", "gp_face4", "gp_padd", "gp_padl", "gp_padr", "gp_padu", "gp_select", "gp_shoulderl", "gp_shoulderlb", "gp_shoulderr", "gp_shoulderrb", "gp_start", "gp_stickl", "gp_stickr", "iap_available", "iap_canceled", "iap_ev_consume", "iap_ev_product", "iap_ev_purchase", "iap_ev_restore", "iap_ev_storeload", "iap_failed", "iap_purchased", "iap_refunded", "iap_status_available", "iap_status_loading", "iap_status_processing", "iap_status_restoring", "iap_status_unavailable", "iap_status_uninitialised", "iap_storeload_failed", "iap_storeload_ok", "iap_unavailable", "input_type", "kbv_autocapitalize_characters", "kbv_autocapitalize_none", "kbv_autocapitalize_sentences", "kbv_autocapitalize_words", "kbv_returnkey_continue", "kbv_returnkey_default", "kbv_returnkey_done", "kbv_returnkey_emergency", "kbv_returnkey_go", "kbv_returnkey_google", "kbv_returnkey_join", "kbv_returnkey_next", "kbv_returnkey_route", "kbv_returnkey_search", "kbv_returnkey_send", "kbv_returnkey_yahoo", "kbv_type_ascii", "kbv_type_default", "kbv_type_email", "kbv_type_numbers", "kbv_type_phone", "kbv_type_phone_name", "kbv_type_url", "layerelementtype_background", "layerelementtype_instance", "layerelementtype_oldtilemap", "layerelementtype_particlesystem", "layerelementtype_sprite", "layerelementtype_tile", "layerelementtype_tilemap", "layerelementtype_undefined", "lb_disp_none", "lb_disp_numeric", "lb_disp_time_ms", "lb_disp_time_sec", "lb_sort_ascending", "lb_sort_descending", "lb_sort_none", "leaderboard_type_number", "leaderboard_type_time_mins_secs", "lighttype_dir", "lighttype_point", "local", "matrix_projection", "matrix_view", "matrix_world", "mb_any", "mb_left", "mb_middle", "mb_none", "mb_right", "mip_markedonly", "mip_off", "mip_on", "network_config_connect_timeout", "network_config_disable_reliable_udp", "network_config_enable_reliable_udp", "network_config_use_non_blocking_socket", "network_socket_bluetooth", "network_socket_tcp", "network_socket_udp", "network_type_connect", "network_type_data", "network_type_disconnect", "network_type_non_blocking_connect", "of_challen", "of_challenge_tie", "of_challenge_win", "os_3ds", "os_android", "os_bb10", "os_ios", "os_linux", "os_macosx", "os_ps3", "os_ps4", "os_psvita", "os_switch", "os_symbian", "os_tizen", "os_tvos", "os_unknown", "os_uwp", "os_wiiu", "os_win32", "os_win8native", "os_windows", "os_winphone", "os_xbox360", "os_xboxone", "other", "ov_achievements", "ov_community", "ov_friends", "ov_gamegroup", "ov_players", "ov_settings", "path_action_continue", "path_action_restart", "path_action_reverse", "path_action_stop", "phy_debug_render_aabb", "phy_debug_render_collision_pairs", "phy_debug_render_coms", "phy_debug_render_core_shapes", "phy_debug_render_joints", "phy_debug_render_obb", "phy_debug_render_shapes", "phy_joint_anchor_1_x", "phy_joint_anchor_1_y", "phy_joint_anchor_2_x", "phy_joint_anchor_2_y", "phy_joint_angle", "phy_joint_angle_limits", "phy_joint_damping_ratio", "phy_joint_frequency", "phy_joint_length_1", "phy_joint_length_2", "phy_joint_lower_angle_limit", "phy_joint_max_force", "phy_joint_max_length", "phy_joint_max_motor_force", "phy_joint_max_motor_torque", "phy_joint_max_torque", "phy_joint_motor_force", "phy_joint_motor_speed", "phy_joint_motor_torque", "phy_joint_reaction_force_x", "phy_joint_reaction_force_y", "phy_joint_reaction_torque", "phy_joint_speed", "phy_joint_translation", "phy_joint_upper_angle_limit", "phy_particle_data_flag_category", "phy_particle_data_flag_color", "phy_particle_data_flag_colour", "phy_particle_data_flag_position", "phy_particle_data_flag_typeflags", "phy_particle_data_flag_velocity", "phy_particle_flag_colormixing", "phy_particle_flag_colourmixing", "phy_particle_flag_elastic", "phy_particle_flag_powder", "phy_particle_flag_spring", "phy_particle_flag_tensile", "phy_particle_flag_viscous", "phy_particle_flag_wall", "phy_particle_flag_water", "phy_particle_flag_zombie", "phy_particle_group_flag_rigid", "phy_particle_group_flag_solid", "pi", "pr_linelist", "pr_linestrip", "pr_pointlist", "pr_trianglefan", "pr_trianglelist", "pr_trianglestrip", "ps_distr_gaussian", "ps_distr_invgaussian", "ps_distr_linear", "ps_shape_diamond", "ps_shape_ellipse", "ps_shape_line", "ps_shape_rectangle", "pt_shape_circle", "pt_shape_cloud", "pt_shape_disk", "pt_shape_explosion", "pt_shape_flare", "pt_shape_line", "pt_shape_pixel", "pt_shape_ring", "pt_shape_smoke", "pt_shape_snow", "pt_shape_spark", "pt_shape_sphere", "pt_shape_square", "pt_shape_star", "spritespeed_framespergameframe", "spritespeed_framespersecond", "text_type", "tf_anisotropic", "tf_linear", "tf_point", "tile_flip", "tile_index_mask", "tile_mirror", "tile_rotate", "timezone_local", "timezone_utc", "tm_countvsyncs", "tm_sleep", "ty_real", "ty_string", "ugc_filetype_community", "ugc_filetype_microtrans", "ugc_list_Favorited", "ugc_list_Followed", "ugc_list_Published", "ugc_list_Subscribed", "ugc_list_UsedOrPlayed", "ugc_list_VotedDown", "ugc_list_VotedOn", "ugc_list_VotedUp", "ugc_list_WillVoteLater", "ugc_match_AllGuides", "ugc_match_Artwork", "ugc_match_Collections", "ugc_match_ControllerBindings", "ugc_match_IntegratedGuides", "ugc_match_Items", "ugc_match_Items_Mtx", "ugc_match_Items_ReadyToUse", "ugc_match_Screenshots", "ugc_match_UsableInGame", "ugc_match_Videos", "ugc_match_WebGuides", "ugc_query_AcceptedForGameRankedByAcceptanceDate", "ugc_query_CreatedByFollowedUsersRankedByPublicationDate", "ugc_query_CreatedByFriendsRankedByPublicationDate", "ugc_query_FavoritedByFriendsRankedByPublicationDate", "ugc_query_NotYetRated", "ugc_query_RankedByNumTimesReported", "ugc_query_RankedByPublicationDate", "ugc_query_RankedByTextSearch", "ugc_query_RankedByTotalVotesAsc", "ugc_query_RankedByTrend", "ugc_query_RankedByVote", "ugc_query_RankedByVotesUp", "ugc_result_success", "ugc_sortorder_CreationOrderAsc", "ugc_sortorder_CreationOrderDesc", "ugc_sortorder_ForModeration", "ugc_sortorder_LastUpdatedDesc", "ugc_sortorder_SubscriptionDateDesc", "ugc_sortorder_TitleAsc", "ugc_sortorder_VoteScoreDesc", "ugc_visibility_friends_only", "ugc_visibility_private", "ugc_visibility_public", "vertex_type_color", "vertex_type_colour", "vertex_type_float1", "vertex_type_float2", "vertex_type_float3", "vertex_type_float4", "vertex_type_ubyte4", "vertex_usage_binormal", "vertex_usage_blendindices", "vertex_usage_blendweight", "vertex_usage_color", "vertex_usage_colour", "vertex_usage_depth", "vertex_usage_fog", "vertex_usage_normal", "vertex_usage_position", "vertex_usage_psize", "vertex_usage_sample", "vertex_usage_tangent", "vertex_usage_texcoord", "vertex_usage_textcoord", "vk_add", "vk_alt", "vk_anykey", "vk_backspace", "vk_control", "vk_decimal", "vk_delete", "vk_divide", "vk_down", "vk_end", "vk_enter", "vk_escape", "vk_f1", "vk_f2", "vk_f3", "vk_f4", "vk_f5", "vk_f6", "vk_f7", "vk_f8", "vk_f9", "vk_f10", "vk_f11", "vk_f12", "vk_home", "vk_insert", "vk_lalt", "vk_lcontrol", "vk_left", "vk_lshift", "vk_multiply", "vk_nokey", "vk_numpad0", "vk_numpad1", "vk_numpad2", "vk_numpad3", "vk_numpad4", "vk_numpad5", "vk_numpad6", "vk_numpad7", "vk_numpad8", "vk_numpad9", "vk_pagedown", "vk_pageup", "vk_pause", "vk_printscreen", "vk_ralt", "vk_rcontrol", "vk_return", "vk_right", "vk_rshift", "vk_shift", "vk_space", "vk_subtract", "vk_tab", "vk_up"],
											"variable.language": ["alarm", "application_surface", "argument", "argument0", "argument1", "argument2", "argument3", "argument4", "argument5", "argument6", "argument7", "argument8", "argument9", "argument10", "argument11", "argument12", "argument13", "argument14", "argument15", "argument_count", "argument_relative", "async_load", "background_color", "background_colour", "background_showcolor", "background_showcolour", "bbox_bottom", "bbox_left", "bbox_right", "bbox_top", "browser_height", "browser_width", "caption_health", "caption_lives", "caption_score", "current_day", "current_hour", "current_minute", "current_month", "current_second", "current_time", "current_weekday", "current_year", "cursor_sprite", "debug_mode", "delta_time", "depth", "direction", "display_aa", "error_last", "error_occurred", "event_action", "event_data", "event_number", "event_object", "event_type", "fps", "fps_real", "friction", "game_display_name", "game_id", "game_project_name", "game_save_id", "gamemaker_pro", "gamemaker_registered", "gamemaker_version", "gravity", "gravity_direction", "health", "hspeed", "iap_data", "id|0", "image_alpha", "image_angle", "image_blend", "image_index", "image_number", "image_speed", "image_xscale", "image_yscale", "instance_count", "instance_id", "keyboard_key", "keyboard_lastchar", "keyboard_lastkey", "keyboard_string", "layer", "lives", "mask_index", "mouse_button", "mouse_lastbutton", "mouse_x", "mouse_y", "object_index", "os_browser", "os_device", "os_type", "os_version", "path_endaction", "path_index", "path_orientation", "path_position", "path_positionprevious", "path_scale", "path_speed", "persistent", "phy_active", "phy_angular_damping", "phy_angular_velocity", "phy_bullet", "phy_col_normal_x", "phy_col_normal_y", "phy_collision_points", "phy_collision_x", "phy_collision_y", "phy_com_x", "phy_com_y", "phy_dynamic", "phy_fixed_rotation", "phy_inertia", "phy_kinematic", "phy_linear_damping", "phy_linear_velocity_x", "phy_linear_velocity_y", "phy_mass", "phy_position_x", "phy_position_xprevious", "phy_position_y", "phy_position_yprevious", "phy_rotation", "phy_sleeping", "phy_speed", "phy_speed_x", "phy_speed_y", "program_directory", "room", "room_caption", "room_first", "room_height", "room_last", "room_persistent", "room_speed", "room_width", "score", "self", "show_health", "show_lives", "show_score", "solid", "speed", "sprite_height", "sprite_index", "sprite_width", "sprite_xoffset", "sprite_yoffset", "temp_directory", "timeline_index", "timeline_loop", "timeline_position", "timeline_running", "timeline_speed", "view_angle", "view_camera", "view_current", "view_enabled", "view_hborder", "view_hport", "view_hspeed", "view_hview", "view_object", "view_surface_id", "view_vborder", "view_visible", "view_vspeed", "view_wport", "view_wview", "view_xport", "view_xview", "view_yport", "view_yview", "visible", "vspeed", "webgl_enabled", "working_directory", "xprevious", "xstart", "x|0", "yprevious", "ystart", "y|0"]
									},
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, e.C_NUMBER_MODE]
							}
					}
			}
			,
			6148: e=>{
					e.exports = function(e) {
							const t = {
									keyword: ["break", "case", "chan", "const", "continue", "default", "defer", "else", "fallthrough", "for", "func", "go", "goto", "if", "import", "interface", "map", "package", "range", "return", "select", "struct", "switch", "type", "var"],
									type: ["bool", "byte", "complex64", "complex128", "error", "float32", "float64", "int8", "int16", "int32", "int64", "string", "uint8", "uint16", "uint32", "uint64", "int", "uint", "uintptr", "rune"],
									literal: ["true", "false", "iota", "nil"],
									built_in: ["append", "cap", "close", "complex", "copy", "imag", "len", "make", "new", "panic", "print", "println", "real", "recover", "delete"]
							};
							return {
									name: "Go",
									aliases: ["golang"],
									keywords: t,
									illegal: "</",
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, {
											className: "string",
											variants: [e.QUOTE_STRING_MODE, e.APOS_STRING_MODE, {
													begin: "`",
													end: "`"
											}]
									}, {
											className: "number",
											variants: [{
													begin: e.C_NUMBER_RE + "[i]",
													relevance: 1
											}, e.C_NUMBER_MODE]
									}, {
											begin: /:=/
									}, {
											className: "function",
											beginKeywords: "func",
											end: "\\s*(\\{|$)",
											excludeEnd: !0,
											contains: [e.TITLE_MODE, {
													className: "params",
													begin: /\(/,
													end: /\)/,
													endsParent: !0,
													keywords: t,
													illegal: /["']/
											}]
									}]
							}
					}
			}
			,
			8158: e=>{
					e.exports = function(e) {
							return {
									name: "Golo",
									keywords: {
											keyword: ["println", "readln", "print", "import", "module", "function", "local", "return", "let", "var", "while", "for", "foreach", "times", "in", "case", "when", "match", "with", "break", "continue", "augment", "augmentation", "each", "find", "filter", "reduce", "if", "then", "else", "otherwise", "try", "catch", "finally", "raise", "throw", "orIfNull", "DynamicObject|10", "DynamicVariable", "struct", "Observable", "map", "set", "vector", "list", "array"],
											literal: ["true", "false", "null"]
									},
									contains: [e.HASH_COMMENT_MODE, e.QUOTE_STRING_MODE, e.C_NUMBER_MODE, {
											className: "meta",
											begin: "@[A-Za-z]+"
									}]
							}
					}
			}
			,
			2237: e=>{
					e.exports = function(e) {
							return {
									name: "Gradle",
									case_insensitive: !0,
									keywords: ["task", "project", "allprojects", "subprojects", "artifacts", "buildscript", "configurations", "dependencies", "repositories", "sourceSets", "description", "delete", "from", "into", "include", "exclude", "source", "classpath", "destinationDir", "includes", "options", "sourceCompatibility", "targetCompatibility", "group", "flatDir", "doLast", "doFirst", "flatten", "todir", "fromdir", "ant", "def", "abstract", "break", "case", "catch", "continue", "default", "do", "else", "extends", "final", "finally", "for", "if", "implements", "instanceof", "native", "new", "private", "protected", "public", "return", "static", "switch", "synchronized", "throw", "throws", "transient", "try", "volatile", "while", "strictfp", "package", "import", "false", "null", "super", "this", "true", "antlrtask", "checkstyle", "codenarc", "copy", "boolean", "byte", "char", "class", "double", "float", "int", "interface", "long", "short", "void", "compile", "runTime", "file", "fileTree", "abs", "any", "append", "asList", "asWritable", "call", "collect", "compareTo", "count", "div", "dump", "each", "eachByte", "eachFile", "eachLine", "every", "find", "findAll", "flatten", "getAt", "getErr", "getIn", "getOut", "getText", "grep", "immutable", "inject", "inspect", "intersect", "invokeMethods", "isCase", "join", "leftShift", "minus", "multiply", "newInputStream", "newOutputStream", "newPrintWriter", "newReader", "newWriter", "next", "plus", "pop", "power", "previous", "print", "println", "push", "putAt", "read", "readBytes", "readLines", "reverse", "reverseEach", "round", "size", "sort", "splitEachLine", "step", "subMap", "times", "toInteger", "toList", "tokenize", "upto", "waitForOrKill", "withPrintWriter", "withReader", "withStream", "withWriter", "withWriterAppend", "write", "writeLine"],
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, e.NUMBER_MODE, e.REGEXP_MODE]
							}
					}
			}
			,
			3489: e=>{
					e.exports = function(e) {
							const t = e.regex;
							return {
									name: "GraphQL",
									aliases: ["gql"],
									case_insensitive: !0,
									disableAutodetect: !1,
									keywords: {
											keyword: ["query", "mutation", "subscription", "type", "input", "schema", "directive", "interface", "union", "scalar", "fragment", "enum", "on"],
											literal: ["true", "false", "null"]
									},
									contains: [e.HASH_COMMENT_MODE, e.QUOTE_STRING_MODE, e.NUMBER_MODE, {
											scope: "punctuation",
											match: /[.]{3}/,
											relevance: 0
									}, {
											scope: "punctuation",
											begin: /[\!\(\)\:\=\[\]\{\|\}]{1}/,
											relevance: 0
									}, {
											scope: "variable",
											begin: /\$/,
											end: /\W/,
											excludeEnd: !0,
											relevance: 0
									}, {
											scope: "meta",
											match: /@\w+/,
											excludeEnd: !0
									}, {
											scope: "symbol",
											begin: t.concat(/[_A-Za-z][_0-9A-Za-z]*/, t.lookahead(/\s*:/)),
											relevance: 0
									}],
									illegal: [/[;<']/, /BEGIN/]
							}
					}
			}
			,
			7810: e=>{
					function variants(e, t={}) {
							return t.variants = e,
							t
					}
					e.exports = function(e) {
							const t = e.regex
								, n = "[A-Za-z0-9_$]+"
								, i = variants([e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.COMMENT("/\\*\\*", "\\*/", {
									relevance: 0,
									contains: [{
											begin: /\w+@/,
											relevance: 0
									}, {
											className: "doctag",
											begin: "@[A-Za-z]+"
									}]
							})])
								, r = {
									className: "regexp",
									begin: /~?\/[^\/\n]+\//,
									contains: [e.BACKSLASH_ESCAPE]
							}
								, o = variants([e.BINARY_NUMBER_MODE, e.C_NUMBER_MODE])
								, s = variants([{
									begin: /"""/,
									end: /"""/
							}, {
									begin: /'''/,
									end: /'''/
							}, {
									begin: "\\$/",
									end: "/\\$",
									relevance: 10
							}, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE], {
									className: "string"
							})
								, a = {
									match: [/(class|interface|trait|enum|extends|implements)/, /\s+/, e.UNDERSCORE_IDENT_RE],
									scope: {
											1: "keyword",
											3: "title.class"
									}
							};
							return {
									name: "Groovy",
									keywords: {
											"variable.language": "this super",
											literal: "true false null",
											type: ["byte", "short", "char", "int", "long", "boolean", "float", "double", "void"],
											keyword: ["def", "as", "in", "assert", "trait", "abstract", "static", "volatile", "transient", "public", "private", "protected", "synchronized", "final", "class", "interface", "enum", "if", "else", "for", "while", "switch", "case", "break", "default", "continue", "throw", "throws", "try", "catch", "finally", "implements", "extends", "new", "import", "package", "return", "instanceof"]
									},
									contains: [e.SHEBANG({
											binary: "groovy",
											relevance: 10
									}), i, s, r, o, a, {
											className: "meta",
											begin: "@[A-Za-z]+",
											relevance: 0
									}, {
											className: "attr",
											begin: n + "[ \t]*:",
											relevance: 0
									}, {
											begin: /\?/,
											end: /:/,
											relevance: 0,
											contains: [i, s, r, o, "self"]
									}, {
											className: "symbol",
											begin: "^[ \t]*" + t.lookahead(n + ":"),
											excludeBegin: !0,
											end: n + ":",
											relevance: 0
									}],
									illegal: /#|<\//
							}
					}
			}
			,
			3250: e=>{
					e.exports = function(e) {
							return {
									name: "HAML",
									case_insensitive: !0,
									contains: [{
											className: "meta",
											begin: "^!!!( (5|1\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\b.*))?$",
											relevance: 10
									}, e.COMMENT("^\\s*(!=#|=#|-#|/).*$", null, {
											relevance: 0
									}), {
											begin: "^\\s*(-|=|!=)(?!#)",
											end: /$/,
											subLanguage: "ruby",
											excludeBegin: !0,
											excludeEnd: !0
									}, {
											className: "tag",
											begin: "^\\s*%",
											contains: [{
													className: "selector-tag",
													begin: "\\w+"
											}, {
													className: "selector-id",
													begin: "#[\\w-]+"
											}, {
													className: "selector-class",
													begin: "\\.[\\w-]+"
											}, {
													begin: /\{\s*/,
													end: /\s*\}/,
													contains: [{
															begin: ":\\w+\\s*=>",
															end: ",\\s+",
															returnBegin: !0,
															endsWithParent: !0,
															contains: [{
																	className: "attr",
																	begin: ":\\w+"
															}, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, {
																	begin: "\\w+",
																	relevance: 0
															}]
													}]
											}, {
													begin: "\\(\\s*",
													end: "\\s*\\)",
													excludeEnd: !0,
													contains: [{
															begin: "\\w+\\s*=",
															end: "\\s+",
															returnBegin: !0,
															endsWithParent: !0,
															contains: [{
																	className: "attr",
																	begin: "\\w+",
																	relevance: 0
															}, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, {
																	begin: "\\w+",
																	relevance: 0
															}]
													}]
											}]
									}, {
											begin: "^\\s*[=~]\\s*"
									}, {
											begin: /#\{/,
											end: /\}/,
											subLanguage: "ruby",
											excludeBegin: !0,
											excludeEnd: !0
									}]
							}
					}
			}
			,
			2161: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = {
									$pattern: /[\w.\/]+/,
									built_in: ["action", "bindattr", "collection", "component", "concat", "debugger", "each", "each-in", "get", "hash", "if", "in", "input", "link-to", "loc", "log", "lookup", "mut", "outlet", "partial", "query-params", "render", "template", "textarea", "unbound", "unless", "view", "with", "yield"]
							}
								, i = /\[\]|\[[^\]]+\]/
								, r = /[^\s!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~]+/
								, o = t.either(/""|"[^"]+"/, /''|'[^']+'/, i, r)
								, s = t.concat(t.optional(/\.|\.\/|\//), o, t.anyNumberOfTimes(t.concat(/(\.|\/)/, o)))
								, a = t.concat("(", i, "|", r, ")(?==)")
								, l = {
									begin: s
							}
								, c = e.inherit(l, {
									keywords: {
											$pattern: /[\w.\/]+/,
											literal: ["true", "false", "undefined", "null"]
									}
							})
								, d = {
									begin: /\(/,
									end: /\)/
							}
								, p = {
									className: "attr",
									begin: a,
									relevance: 0,
									starts: {
											begin: /=/,
											end: /=/,
											starts: {
													contains: [e.NUMBER_MODE, e.QUOTE_STRING_MODE, e.APOS_STRING_MODE, c, d]
											}
									}
							}
								, u = {
									contains: [e.NUMBER_MODE, e.QUOTE_STRING_MODE, e.APOS_STRING_MODE, {
											begin: /as\s+\|/,
											keywords: {
													keyword: "as"
											},
											end: /\|/,
											contains: [{
													begin: /\w+/
											}]
									}, p, c, d],
									returnEnd: !0
							}
								, h = e.inherit(l, {
									className: "name",
									keywords: n,
									starts: e.inherit(u, {
											end: /\)/
									})
							});
							d.contains = [h];
							const m = e.inherit(l, {
									keywords: n,
									className: "name",
									starts: e.inherit(u, {
											end: /\}\}/
									})
							})
								, g = e.inherit(l, {
									keywords: n,
									className: "name"
							})
								, _ = e.inherit(l, {
									className: "name",
									keywords: n,
									starts: e.inherit(u, {
											end: /\}\}/
									})
							});
							return {
									name: "Handlebars",
									aliases: ["hbs", "html.hbs", "html.handlebars", "htmlbars"],
									case_insensitive: !0,
									subLanguage: "xml",
									contains: [{
											begin: /\\\{\{/,
											skip: !0
									}, {
											begin: /\\\\(?=\{\{)/,
											skip: !0
									}, e.COMMENT(/\{\{!--/, /--\}\}/), e.COMMENT(/\{\{!/, /\}\}/), {
											className: "template-tag",
											begin: /\{\{\{\{(?!\/)/,
											end: /\}\}\}\}/,
											contains: [m],
											starts: {
													end: /\{\{\{\{\//,
													returnEnd: !0,
													subLanguage: "xml"
											}
									}, {
											className: "template-tag",
											begin: /\{\{\{\{\//,
											end: /\}\}\}\}/,
											contains: [g]
									}, {
											className: "template-tag",
											begin: /\{\{#/,
											end: /\}\}/,
											contains: [m]
									}, {
											className: "template-tag",
											begin: /\{\{(?=else\}\})/,
											end: /\}\}/,
											keywords: "else"
									}, {
											className: "template-tag",
											begin: /\{\{(?=else if)/,
											end: /\}\}/,
											keywords: "else if"
									}, {
											className: "template-tag",
											begin: /\{\{\//,
											end: /\}\}/,
											contains: [g]
									}, {
											className: "template-variable",
											begin: /\{\{\{/,
											end: /\}\}\}/,
											contains: [_]
									}, {
											className: "template-variable",
											begin: /\{\{/,
											end: /\}\}/,
											contains: [_]
									}]
							}
					}
			}
			,
			6536: e=>{
					e.exports = function(e) {
							const t = {
									variants: [e.COMMENT("--", "$"), e.COMMENT(/\{-/, /-\}/, {
											contains: ["self"]
									})]
							}
								, n = {
									className: "meta",
									begin: /\{-#/,
									end: /#-\}/
							}
								, i = {
									className: "meta",
									begin: "^#",
									end: "$"
							}
								, r = {
									className: "type",
									begin: "\\b[A-Z][\\w']*",
									relevance: 0
							}
								, o = {
									begin: "\\(",
									end: "\\)",
									illegal: '"',
									contains: [n, i, {
											className: "type",
											begin: "\\b[A-Z][\\w]*(\\((\\.\\.|,|\\w+)\\))?"
									}, e.inherit(e.TITLE_MODE, {
											begin: "[_a-z][\\w']*"
									}), t]
							}
								, s = "([0-9]_*)+"
								, a = "([0-9a-fA-F]_*)+"
								, l = {
									className: "number",
									relevance: 0,
									variants: [{
											match: `\\b(${s})(\\.(${s}))?([eE][+-]?(${s}))?\\b`
									}, {
											match: `\\b0[xX]_*(${a})(\\.(${a}))?([pP][+-]?(${s}))?\\b`
									}, {
											match: "\\b0[oO](([0-7]_*)+)\\b"
									}, {
											match: "\\b0[bB](([01]_*)+)\\b"
									}]
							};
							return {
									name: "Haskell",
									aliases: ["hs"],
									keywords: "let in if then else case of where do module import hiding qualified type data newtype deriving class instance as default infix infixl infixr foreign export ccall stdcall cplusplus jvm dotnet safe unsafe family forall mdo proc rec",
									contains: [{
											beginKeywords: "module",
											end: "where",
											keywords: "module where",
											contains: [o, t],
											illegal: "\\W\\.|;"
									}, {
											begin: "\\bimport\\b",
											end: "$",
											keywords: "import qualified as hiding",
											contains: [o, t],
											illegal: "\\W\\.|;"
									}, {
											className: "class",
											begin: "^(\\s*)?(class|instance)\\b",
											end: "where",
											keywords: "class family instance where",
											contains: [r, o, t]
									}, {
											className: "class",
											begin: "\\b(data|(new)?type)\\b",
											end: "$",
											keywords: "data family type newtype deriving",
											contains: [n, r, o, {
													begin: /\{/,
													end: /\}/,
													contains: o.contains
											}, t]
									}, {
											beginKeywords: "default",
											end: "$",
											contains: [r, o, t]
									}, {
											beginKeywords: "infix infixl infixr",
											end: "$",
											contains: [e.C_NUMBER_MODE, t]
									}, {
											begin: "\\bforeign\\b",
											end: "$",
											keywords: "foreign import export ccall stdcall cplusplus jvm dotnet safe unsafe",
											contains: [r, e.QUOTE_STRING_MODE, t]
									}, {
											className: "meta",
											begin: "#!\\/usr\\/bin\\/env runhaskell",
											end: "$"
									}, n, i, e.QUOTE_STRING_MODE, l, r, e.inherit(e.TITLE_MODE, {
											begin: "^[_a-z][\\w']*"
									}), t, {
											begin: "->|<-"
									}]
							}
					}
			}
			,
			5425: e=>{
					e.exports = function(e) {
							return {
									name: "Haxe",
									aliases: ["hx"],
									keywords: {
											keyword: "break case cast catch continue default do dynamic else enum extern for function here if import in inline never new override package private get set public return static super switch this throw trace try typedef untyped using var while Int Float String Bool Dynamic Void Array ",
											built_in: "trace this",
											literal: "true false null _"
									},
									contains: [{
											className: "string",
											begin: "'",
											end: "'",
											contains: [e.BACKSLASH_ESCAPE, {
													className: "subst",
													begin: "\\$\\{",
													end: "\\}"
											}, {
													className: "subst",
													begin: "\\$",
													end: /\W\}/
											}]
									}, e.QUOTE_STRING_MODE, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.C_NUMBER_MODE, {
											className: "meta",
											begin: "@:",
											end: "$"
									}, {
											className: "meta",
											begin: "#",
											end: "$",
											keywords: {
													keyword: "if else elseif end error"
											}
									}, {
											className: "type",
											begin: ":[ \t]*",
											end: "[^A-Za-z0-9_ \t\\->]",
											excludeBegin: !0,
											excludeEnd: !0,
											relevance: 0
									}, {
											className: "type",
											begin: ":[ \t]*",
											end: "\\W",
											excludeBegin: !0,
											excludeEnd: !0
									}, {
											className: "type",
											begin: "new *",
											end: "\\W",
											excludeBegin: !0,
											excludeEnd: !0
									}, {
											className: "class",
											beginKeywords: "enum",
											end: "\\{",
											contains: [e.TITLE_MODE]
									}, {
											className: "class",
											beginKeywords: "abstract",
											end: "[\\{$]",
											contains: [{
													className: "type",
													begin: "\\(",
													end: "\\)",
													excludeBegin: !0,
													excludeEnd: !0
											}, {
													className: "type",
													begin: "from +",
													end: "\\W",
													excludeBegin: !0,
													excludeEnd: !0
											}, {
													className: "type",
													begin: "to +",
													end: "\\W",
													excludeBegin: !0,
													excludeEnd: !0
											}, e.TITLE_MODE],
											keywords: {
													keyword: "abstract from to"
											}
									}, {
											className: "class",
											begin: "\\b(class|interface) +",
											end: "[\\{$]",
											excludeEnd: !0,
											keywords: "class interface",
											contains: [{
													className: "keyword",
													begin: "\\b(extends|implements) +",
													keywords: "extends implements",
													contains: [{
															className: "type",
															begin: e.IDENT_RE,
															relevance: 0
													}]
											}, e.TITLE_MODE]
									}, {
											className: "function",
											beginKeywords: "function",
											end: "\\(",
											excludeEnd: !0,
											illegal: "\\S",
											contains: [e.TITLE_MODE]
									}],
									illegal: /<\//
							}
					}
			}
			,
			7505: e=>{
					e.exports = function(e) {
							return {
									name: "HSP",
									case_insensitive: !0,
									keywords: {
											$pattern: /[\w._]+/,
											keyword: "goto gosub return break repeat loop continue wait await dim sdim foreach dimtype dup dupptr end stop newmod delmod mref run exgoto on mcall assert logmes newlab resume yield onexit onerror onkey onclick oncmd exist delete mkdir chdir dirlist bload bsave bcopy memfile if else poke wpoke lpoke getstr chdpm memexpand memcpy memset notesel noteadd notedel noteload notesave randomize noteunsel noteget split strrep setease button chgdisp exec dialog mmload mmplay mmstop mci pset pget syscolor mes print title pos circle cls font sysfont objsize picload color palcolor palette redraw width gsel gcopy gzoom gmode bmpsave hsvcolor getkey listbox chkbox combox input mesbox buffer screen bgscr mouse objsel groll line clrobj boxf objprm objmode stick grect grotate gsquare gradf objimage objskip objenable celload celdiv celput newcom querycom delcom cnvstow comres axobj winobj sendmsg comevent comevarg sarrayconv callfunc cnvwtos comevdisp libptr system hspstat hspver stat cnt err strsize looplev sublev iparam wparam lparam refstr refdval int rnd strlen length length2 length3 length4 vartype gettime peek wpeek lpeek varptr varuse noteinfo instr abs limit getease str strmid strf getpath strtrim sin cos tan atan sqrt double absf expf logf limitf powf geteasef mousex mousey mousew hwnd hinstance hdc ginfo objinfo dirinfo sysinfo thismod __hspver__ __hsp30__ __date__ __time__ __line__ __file__ _debug __hspdef__ and or xor not screen_normal screen_palette screen_hide screen_fixedsize screen_tool screen_frame gmode_gdi gmode_mem gmode_rgb0 gmode_alpha gmode_rgb0alpha gmode_add gmode_sub gmode_pixela ginfo_mx ginfo_my ginfo_act ginfo_sel ginfo_wx1 ginfo_wy1 ginfo_wx2 ginfo_wy2 ginfo_vx ginfo_vy ginfo_sizex ginfo_sizey ginfo_winx ginfo_winy ginfo_mesx ginfo_mesy ginfo_r ginfo_g ginfo_b ginfo_paluse ginfo_dispx ginfo_dispy ginfo_cx ginfo_cy ginfo_intid ginfo_newid ginfo_sx ginfo_sy objinfo_mode objinfo_bmscr objinfo_hwnd notemax notesize dir_cur dir_exe dir_win dir_sys dir_cmdline dir_desktop dir_mydoc dir_tv font_normal font_bold font_italic font_underline font_strikeout font_antialias objmode_normal objmode_guifont objmode_usefont gsquare_grad msgothic msmincho do until while wend for next _break _continue switch case default swbreak swend ddim ldim alloc m_pi rad2deg deg2rad ease_linear ease_quad_in ease_quad_out ease_quad_inout ease_cubic_in ease_cubic_out ease_cubic_inout ease_quartic_in ease_quartic_out ease_quartic_inout ease_bounce_in ease_bounce_out ease_bounce_inout ease_shake_in ease_shake_out ease_shake_inout ease_loop"
									},
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.QUOTE_STRING_MODE, e.APOS_STRING_MODE, {
											className: "string",
											begin: /\{"/,
											end: /"\}/,
											contains: [e.BACKSLASH_ESCAPE]
									}, e.COMMENT(";", "$", {
											relevance: 0
									}), {
											className: "meta",
											begin: "#",
											end: "$",
											keywords: {
													keyword: "addion cfunc cmd cmpopt comfunc const defcfunc deffunc define else endif enum epack func global if ifdef ifndef include modcfunc modfunc modinit modterm module pack packopt regcmd runtime undef usecom uselib"
											},
											contains: [e.inherit(e.QUOTE_STRING_MODE, {
													className: "string"
											}), e.NUMBER_MODE, e.C_NUMBER_MODE, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
									}, {
											className: "symbol",
											begin: "^\\*(\\w+|@)"
									}, e.NUMBER_MODE, e.C_NUMBER_MODE]
							}
					}
			}
			,
			1961: e=>{
					e.exports = function(e) {
							const t = "HTTP/(2|1\\.[01])"
								, n = {
									className: "attribute",
									begin: e.regex.concat("^", /[A-Za-z][A-Za-z0-9-]*/, "(?=\\:\\s)"),
									starts: {
											contains: [{
													className: "punctuation",
													begin: /: /,
													relevance: 0,
													starts: {
															end: "$",
															relevance: 0
													}
											}]
									}
							}
								, i = [n, {
									begin: "\\n\\n",
									starts: {
											subLanguage: [],
											endsWithParent: !0
									}
							}];
							return {
									name: "HTTP",
									aliases: ["https"],
									illegal: /\S/,
									contains: [{
											begin: "^(?=" + t + " \\d{3})",
											end: /$/,
											contains: [{
													className: "meta",
													begin: t
											}, {
													className: "number",
													begin: "\\b\\d{3}\\b"
											}],
											starts: {
													end: /\b\B/,
													illegal: /\S/,
													contains: i
											}
									}, {
											begin: "(?=^[A-Z]+ (.*?) " + t + "$)",
											end: /$/,
											contains: [{
													className: "string",
													begin: " ",
													end: " ",
													excludeBegin: !0,
													excludeEnd: !0
											}, {
													className: "meta",
													begin: t
											}, {
													className: "keyword",
													begin: "[A-Z]+"
											}],
											starts: {
													end: /\b\B/,
													illegal: /\S/,
													contains: i
											}
									}, e.inherit(n, {
											relevance: 0
									})]
							}
					}
			}
			,
			9183: e=>{
					e.exports = function(e) {
							const t = "a-zA-Z_\\-!.?+*=<>&#'"
								, n = "[" + t + "][" + t + "0-9/;:]*"
								, i = {
									$pattern: n,
									built_in: "!= % %= & &= * ** **= *= *map + += , --build-class-- --import-- -= . / // //= /= < << <<= <= = > >= >> >>= @ @= ^ ^= abs accumulate all and any ap-compose ap-dotimes ap-each ap-each-while ap-filter ap-first ap-if ap-last ap-map ap-map-when ap-pipe ap-reduce ap-reject apply as-> ascii assert assoc bin break butlast callable calling-module-name car case cdr chain chr coll? combinations compile compress cond cons cons? continue count curry cut cycle dec def default-method defclass defmacro defmacro-alias defmacro/g! defmain defmethod defmulti defn defn-alias defnc defnr defreader defseq del delattr delete-route dict-comp dir disassemble dispatch-reader-macro distinct divmod do doto drop drop-last drop-while empty? end-sequence eval eval-and-compile eval-when-compile even? every? except exec filter first flatten float? fn fnc fnr for for* format fraction genexpr gensym get getattr global globals group-by hasattr hash hex id identity if if* if-not if-python2 import in inc input instance? integer integer-char? integer? interleave interpose is is-coll is-cons is-empty is-even is-every is-float is-instance is-integer is-integer-char is-iterable is-iterator is-keyword is-neg is-none is-not is-numeric is-odd is-pos is-string is-symbol is-zero isinstance islice issubclass iter iterable? iterate iterator? keyword keyword? lambda last len let lif lif-not list* list-comp locals loop macro-error macroexpand macroexpand-1 macroexpand-all map max merge-with method-decorator min multi-decorator multicombinations name neg? next none? nonlocal not not-in not? nth numeric? oct odd? open or ord partition permutations pos? post-route postwalk pow prewalk print product profile/calls profile/cpu put-route quasiquote quote raise range read read-str recursive-replace reduce remove repeat repeatedly repr require rest round route route-with-methods rwm second seq set-comp setattr setv some sorted string string? sum switch symbol? take take-nth take-while tee try unless unquote unquote-splicing vars walk when while with with* with-decorator with-gensyms xi xor yield yield-from zero? zip zip-longest | |= ~"
							}
								, r = {
									begin: n,
									relevance: 0
							}
								, o = {
									className: "number",
									begin: "[-+]?\\d+(\\.\\d+)?",
									relevance: 0
							}
								, s = e.inherit(e.QUOTE_STRING_MODE, {
									illegal: null
							})
								, a = e.COMMENT(";", "$", {
									relevance: 0
							})
								, l = {
									className: "literal",
									begin: /\b([Tt]rue|[Ff]alse|nil|None)\b/
							}
								, c = {
									begin: "[\\[\\{]",
									end: "[\\]\\}]",
									relevance: 0
							}
								, d = {
									className: "comment",
									begin: "\\^" + n
							}
								, p = e.COMMENT("\\^\\{", "\\}")
								, u = {
									className: "symbol",
									begin: "[:]{1,2}" + n
							}
								, h = {
									begin: "\\(",
									end: "\\)"
							}
								, m = {
									endsWithParent: !0,
									relevance: 0
							}
								, g = {
									className: "name",
									relevance: 0,
									keywords: i,
									begin: n,
									starts: m
							}
								, _ = [h, s, d, p, a, u, c, o, l, r];
							return h.contains = [e.COMMENT("comment", ""), g, m],
							m.contains = _,
							c.contains = _,
							{
									name: "Hy",
									aliases: ["hylang"],
									illegal: /\S/,
									contains: [e.SHEBANG(), h, s, d, p, a, u, c, o, l]
							}
					}
			}
			,
			6111: e=>{
					e.exports = function(e) {
							return {
									name: "Inform 7",
									aliases: ["i7"],
									case_insensitive: !0,
									keywords: {
											keyword: "thing room person man woman animal container supporter backdrop door scenery open closed locked inside gender is are say understand kind of rule"
									},
									contains: [{
											className: "string",
											begin: '"',
											end: '"',
											relevance: 0,
											contains: [{
													className: "subst",
													begin: "\\[",
													end: "\\]"
											}]
									}, {
											className: "section",
											begin: /^(Volume|Book|Part|Chapter|Section|Table)\b/,
											end: "$"
									}, {
											begin: /^(Check|Carry out|Report|Instead of|To|Rule|When|Before|After)\b/,
											end: ":",
											contains: [{
													begin: "\\(This",
													end: "\\)"
											}]
									}, {
											className: "comment",
											begin: "\\[",
											end: "\\]",
											contains: ["self"]
									}]
							}
					}
			}
			,
			2754: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = {
									className: "number",
									relevance: 0,
									variants: [{
											begin: /([+-]+)?[\d]+_[\d_]+/
									}, {
											begin: e.NUMBER_RE
									}]
							}
								, i = e.COMMENT();
							i.variants = [{
									begin: /;/,
									end: /$/
							}, {
									begin: /#/,
									end: /$/
							}];
							const r = {
									className: "variable",
									variants: [{
											begin: /\$[\w\d"][\w\d_]*/
									}, {
											begin: /\$\{(.*?)\}/
									}]
							}
								, o = {
									className: "literal",
									begin: /\bon|off|true|false|yes|no\b/
							}
								, s = {
									className: "string",
									contains: [e.BACKSLASH_ESCAPE],
									variants: [{
											begin: "'''",
											end: "'''",
											relevance: 10
									}, {
											begin: '"""',
											end: '"""',
											relevance: 10
									}, {
											begin: '"',
											end: '"'
									}, {
											begin: "'",
											end: "'"
									}]
							}
								, a = {
									begin: /\[/,
									end: /\]/,
									contains: [i, o, r, s, n, "self"],
									relevance: 0
							}
								, l = t.either(/[A-Za-z0-9_-]+/, /"(\\"|[^"])*"/, /'[^']*'/);
							return {
									name: "TOML, also INI",
									aliases: ["toml"],
									case_insensitive: !0,
									illegal: /\S/,
									contains: [i, {
											className: "section",
											begin: /\[+/,
											end: /\]+/
									}, {
											begin: t.concat(l, "(\\s*\\.\\s*", l, ")*", t.lookahead(/\s*=\s*[^#\s]/)),
											className: "attr",
											starts: {
													end: /$/,
													contains: [i, a, o, r, s, n]
											}
									}]
							}
					}
			}
			,
			9140: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = /(_[a-z_\d]+)?/
								, i = /([de][+-]?\d+)?/
								, r = {
									className: "number",
									variants: [{
											begin: t.concat(/\b\d+/, /\.(\d*)/, i, n)
									}, {
											begin: t.concat(/\b\d+/, i, n)
									}, {
											begin: t.concat(/\.\d+/, i, n)
									}],
									relevance: 0
							};
							return {
									name: "IRPF90",
									case_insensitive: !0,
									keywords: {
											literal: ".False. .True.",
											keyword: "kind do while private call intrinsic where elsewhere type endtype endmodule endselect endinterface end enddo endif if forall endforall only contains default return stop then public subroutine|10 function program .and. .or. .not. .le. .eq. .ge. .gt. .lt. goto save else use module select case access blank direct exist file fmt form formatted iostat name named nextrec number opened rec recl sequential status unformatted unit continue format pause cycle exit c_null_char c_alert c_backspace c_form_feed flush wait decimal round iomsg synchronous nopass non_overridable pass protected volatile abstract extends import non_intrinsic value deferred generic final enumerator class associate bind enum c_int c_short c_long c_long_long c_signed_char c_size_t c_int8_t c_int16_t c_int32_t c_int64_t c_int_least8_t c_int_least16_t c_int_least32_t c_int_least64_t c_int_fast8_t c_int_fast16_t c_int_fast32_t c_int_fast64_t c_intmax_t C_intptr_t c_float c_double c_long_double c_float_complex c_double_complex c_long_double_complex c_bool c_char c_null_ptr c_null_funptr c_new_line c_carriage_return c_horizontal_tab c_vertical_tab iso_c_binding c_loc c_funloc c_associated  c_f_pointer c_ptr c_funptr iso_fortran_env character_storage_size error_unit file_storage_size input_unit iostat_end iostat_eor numeric_storage_size output_unit c_f_procpointer ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode newunit contiguous recursive pad position action delim readwrite eor advance nml interface procedure namelist include sequence elemental pure integer real character complex logical dimension allocatable|10 parameter external implicit|10 none double precision assign intent optional pointer target in out common equivalence data begin_provider &begin_provider end_provider begin_shell end_shell begin_template end_template subst assert touch soft_touch provide no_dep free irp_if irp_else irp_endif irp_write irp_read",
											built_in: "alog alog10 amax0 amax1 amin0 amin1 amod cabs ccos cexp clog csin csqrt dabs dacos dasin datan datan2 dcos dcosh ddim dexp dint dlog dlog10 dmax1 dmin1 dmod dnint dsign dsin dsinh dsqrt dtan dtanh float iabs idim idint idnint ifix isign max0 max1 min0 min1 sngl algama cdabs cdcos cdexp cdlog cdsin cdsqrt cqabs cqcos cqexp cqlog cqsin cqsqrt dcmplx dconjg derf derfc dfloat dgamma dimag dlgama iqint qabs qacos qasin qatan qatan2 qcmplx qconjg qcos qcosh qdim qerf qerfc qexp qgamma qimag qlgama qlog qlog10 qmax1 qmin1 qmod qnint qsign qsin qsinh qsqrt qtan qtanh abs acos aimag aint anint asin atan atan2 char cmplx conjg cos cosh exp ichar index int log log10 max min nint sign sin sinh sqrt tan tanh print write dim lge lgt lle llt mod nullify allocate deallocate adjustl adjustr all allocated any associated bit_size btest ceiling count cshift date_and_time digits dot_product eoshift epsilon exponent floor fraction huge iand ibclr ibits ibset ieor ior ishft ishftc lbound len_trim matmul maxexponent maxloc maxval merge minexponent minloc minval modulo mvbits nearest pack present product radix random_number random_seed range repeat reshape rrspacing scale scan selected_int_kind selected_real_kind set_exponent shape size spacing spread sum system_clock tiny transpose trim ubound unpack verify achar iachar transfer dble entry dprod cpu_time command_argument_count get_command get_command_argument get_environment_variable is_iostat_end ieee_arithmetic ieee_support_underflow_control ieee_get_underflow_mode ieee_set_underflow_mode is_iostat_eor move_alloc new_line selected_char_kind same_type_as extends_type_of acosh asinh atanh bessel_j0 bessel_j1 bessel_jn bessel_y0 bessel_y1 bessel_yn erf erfc erfc_scaled gamma log_gamma hypot norm2 atomic_define atomic_ref execute_command_line leadz trailz storage_size merge_bits bge bgt ble blt dshiftl dshiftr findloc iall iany iparity image_index lcobound ucobound maskl maskr num_images parity popcnt poppar shifta shiftl shiftr this_image IRP_ALIGN irp_here"
									},
									illegal: /\/\*/,
									contains: [e.inherit(e.APOS_STRING_MODE, {
											className: "string",
											relevance: 0
									}), e.inherit(e.QUOTE_STRING_MODE, {
											className: "string",
											relevance: 0
									}), {
											className: "function",
											beginKeywords: "subroutine function program",
											illegal: "[${=\\n]",
											contains: [e.UNDERSCORE_TITLE_MODE, {
													className: "params",
													begin: "\\(",
													end: "\\)"
											}]
									}, e.COMMENT("!", "$", {
											relevance: 0
									}), e.COMMENT("begin_doc", "end_doc", {
											relevance: 10
									}), r]
							}
					}
			}
			,
			4967: e=>{
					e.exports = function(e) {
							const t = "[A-Za-zА-Яа-яёЁ_!][A-Za-zА-Яа-яёЁ_0-9]*"
								, n = {
									className: "number",
									begin: e.NUMBER_RE,
									relevance: 0
							}
								, i = {
									className: "string",
									variants: [{
											begin: '"',
											end: '"'
									}, {
											begin: "'",
											end: "'"
									}]
							}
								, r = {
									className: "doctag",
									begin: "\\b(?:TODO|DONE|BEGIN|END|STUB|CHG|FIXME|NOTE|BUG|XXX)\\b",
									relevance: 0
							}
								, o = {
									variants: [{
											className: "comment",
											begin: "//",
											end: "$",
											relevance: 0,
											contains: [e.PHRASAL_WORDS_MODE, r]
									}, {
											className: "comment",
											begin: "/\\*",
											end: "\\*/",
											relevance: 0,
											contains: [e.PHRASAL_WORDS_MODE, r]
									}]
							}
								, s = {
									$pattern: t,
									keyword: "and и else иначе endexcept endfinally endforeach конецвсе endif конецесли endwhile конецпока except exitfor finally foreach все if если in в not не or или try while пока ",
									built_in: "SYSRES_CONST_ACCES_RIGHT_TYPE_EDIT SYSRES_CONST_ACCES_RIGHT_TYPE_FULL SYSRES_CONST_ACCES_RIGHT_TYPE_VIEW SYSRES_CONST_ACCESS_MODE_REQUISITE_CODE SYSRES_CONST_ACCESS_NO_ACCESS_VIEW SYSRES_CONST_ACCESS_NO_ACCESS_VIEW_CODE SYSRES_CONST_ACCESS_RIGHTS_ADD_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_ADD_REQUISITE_YES_CODE SYSRES_CONST_ACCESS_RIGHTS_CHANGE_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_CHANGE_REQUISITE_YES_CODE SYSRES_CONST_ACCESS_RIGHTS_DELETE_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_DELETE_REQUISITE_YES_CODE SYSRES_CONST_ACCESS_RIGHTS_EXECUTE_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_EXECUTE_REQUISITE_YES_CODE SYSRES_CONST_ACCESS_RIGHTS_NO_ACCESS_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_NO_ACCESS_REQUISITE_YES_CODE SYSRES_CONST_ACCESS_RIGHTS_RATIFY_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_RATIFY_REQUISITE_YES_CODE SYSRES_CONST_ACCESS_RIGHTS_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_VIEW SYSRES_CONST_ACCESS_RIGHTS_VIEW_CODE SYSRES_CONST_ACCESS_RIGHTS_VIEW_REQUISITE_CODE SYSRES_CONST_ACCESS_RIGHTS_VIEW_REQUISITE_YES_CODE SYSRES_CONST_ACCESS_TYPE_CHANGE SYSRES_CONST_ACCESS_TYPE_CHANGE_CODE SYSRES_CONST_ACCESS_TYPE_EXISTS SYSRES_CONST_ACCESS_TYPE_EXISTS_CODE SYSRES_CONST_ACCESS_TYPE_FULL SYSRES_CONST_ACCESS_TYPE_FULL_CODE SYSRES_CONST_ACCESS_TYPE_VIEW SYSRES_CONST_ACCESS_TYPE_VIEW_CODE SYSRES_CONST_ACTION_TYPE_ABORT SYSRES_CONST_ACTION_TYPE_ACCEPT SYSRES_CONST_ACTION_TYPE_ACCESS_RIGHTS SYSRES_CONST_ACTION_TYPE_ADD_ATTACHMENT SYSRES_CONST_ACTION_TYPE_CHANGE_CARD SYSRES_CONST_ACTION_TYPE_CHANGE_KIND SYSRES_CONST_ACTION_TYPE_CHANGE_STORAGE SYSRES_CONST_ACTION_TYPE_CONTINUE SYSRES_CONST_ACTION_TYPE_COPY SYSRES_CONST_ACTION_TYPE_CREATE SYSRES_CONST_ACTION_TYPE_CREATE_VERSION SYSRES_CONST_ACTION_TYPE_DELETE SYSRES_CONST_ACTION_TYPE_DELETE_ATTACHMENT SYSRES_CONST_ACTION_TYPE_DELETE_VERSION SYSRES_CONST_ACTION_TYPE_DISABLE_DELEGATE_ACCESS_RIGHTS SYSRES_CONST_ACTION_TYPE_ENABLE_DELEGATE_ACCESS_RIGHTS SYSRES_CONST_ACTION_TYPE_ENCRYPTION_BY_CERTIFICATE SYSRES_CONST_ACTION_TYPE_ENCRYPTION_BY_CERTIFICATE_AND_PASSWORD SYSRES_CONST_ACTION_TYPE_ENCRYPTION_BY_PASSWORD SYSRES_CONST_ACTION_TYPE_EXPORT_WITH_LOCK SYSRES_CONST_ACTION_TYPE_EXPORT_WITHOUT_LOCK SYSRES_CONST_ACTION_TYPE_IMPORT_WITH_UNLOCK SYSRES_CONST_ACTION_TYPE_IMPORT_WITHOUT_UNLOCK SYSRES_CONST_ACTION_TYPE_LIFE_CYCLE_STAGE SYSRES_CONST_ACTION_TYPE_LOCK SYSRES_CONST_ACTION_TYPE_LOCK_FOR_SERVER SYSRES_CONST_ACTION_TYPE_LOCK_MODIFY SYSRES_CONST_ACTION_TYPE_MARK_AS_READED SYSRES_CONST_ACTION_TYPE_MARK_AS_UNREADED SYSRES_CONST_ACTION_TYPE_MODIFY SYSRES_CONST_ACTION_TYPE_MODIFY_CARD SYSRES_CONST_ACTION_TYPE_MOVE_TO_ARCHIVE SYSRES_CONST_ACTION_TYPE_OFF_ENCRYPTION SYSRES_CONST_ACTION_TYPE_PASSWORD_CHANGE SYSRES_CONST_ACTION_TYPE_PERFORM SYSRES_CONST_ACTION_TYPE_RECOVER_FROM_LOCAL_COPY SYSRES_CONST_ACTION_TYPE_RESTART SYSRES_CONST_ACTION_TYPE_RESTORE_FROM_ARCHIVE SYSRES_CONST_ACTION_TYPE_REVISION SYSRES_CONST_ACTION_TYPE_SEND_BY_MAIL SYSRES_CONST_ACTION_TYPE_SIGN SYSRES_CONST_ACTION_TYPE_START SYSRES_CONST_ACTION_TYPE_UNLOCK SYSRES_CONST_ACTION_TYPE_UNLOCK_FROM_SERVER SYSRES_CONST_ACTION_TYPE_VERSION_STATE SYSRES_CONST_ACTION_TYPE_VERSION_VISIBILITY SYSRES_CONST_ACTION_TYPE_VIEW SYSRES_CONST_ACTION_TYPE_VIEW_SHADOW_COPY SYSRES_CONST_ACTION_TYPE_WORKFLOW_DESCRIPTION_MODIFY SYSRES_CONST_ACTION_TYPE_WRITE_HISTORY SYSRES_CONST_ACTIVE_VERSION_STATE_PICK_VALUE SYSRES_CONST_ADD_REFERENCE_MODE_NAME SYSRES_CONST_ADDITION_REQUISITE_CODE SYSRES_CONST_ADDITIONAL_PARAMS_REQUISITE_CODE SYSRES_CONST_ADITIONAL_JOB_END_DATE_REQUISITE_NAME SYSRES_CONST_ADITIONAL_JOB_READ_REQUISITE_NAME SYSRES_CONST_ADITIONAL_JOB_START_DATE_REQUISITE_NAME SYSRES_CONST_ADITIONAL_JOB_STATE_REQUISITE_NAME SYSRES_CONST_ADMINISTRATION_HISTORY_ADDING_USER_TO_GROUP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_ADDING_USER_TO_GROUP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_COMP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_COMP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_GROUP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_GROUP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_USER_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_CREATION_USER_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_DATABASE_USER_CREATION SYSRES_CONST_ADMINISTRATION_HISTORY_DATABASE_USER_CREATION_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_DATABASE_USER_DELETION SYSRES_CONST_ADMINISTRATION_HISTORY_DATABASE_USER_DELETION_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_COMP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_COMP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_GROUP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_GROUP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_USER_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_USER_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_USER_FROM_GROUP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_DELETION_USER_FROM_GROUP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_FILTERER_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_FILTERER_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_FILTERER_RESTRICTION_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_FILTERER_RESTRICTION_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_PRIVILEGE_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_PRIVILEGE_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_RIGHTS_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_GRANTING_RIGHTS_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_IS_MAIN_SERVER_CHANGED_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_IS_MAIN_SERVER_CHANGED_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_IS_PUBLIC_CHANGED_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_IS_PUBLIC_CHANGED_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_FILTERER_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_FILTERER_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_FILTERER_RESTRICTION_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_FILTERER_RESTRICTION_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_PRIVILEGE_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_PRIVILEGE_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_RIGHTS_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_REMOVING_RIGHTS_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_SERVER_LOGIN_CREATION SYSRES_CONST_ADMINISTRATION_HISTORY_SERVER_LOGIN_CREATION_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_SERVER_LOGIN_DELETION SYSRES_CONST_ADMINISTRATION_HISTORY_SERVER_LOGIN_DELETION_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_CATEGORY_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_CATEGORY_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_COMP_TITLE_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_COMP_TITLE_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_FULL_NAME_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_FULL_NAME_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_GROUP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_GROUP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_PARENT_GROUP_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_PARENT_GROUP_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_AUTH_TYPE_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_AUTH_TYPE_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_LOGIN_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_LOGIN_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_STATUS_ACTION SYSRES_CONST_ADMINISTRATION_HISTORY_UPDATING_USER_STATUS_ACTION_CODE SYSRES_CONST_ADMINISTRATION_HISTORY_USER_PASSWORD_CHANGE SYSRES_CONST_ADMINISTRATION_HISTORY_USER_PASSWORD_CHANGE_ACTION SYSRES_CONST_ALL_ACCEPT_CONDITION_RUS SYSRES_CONST_ALL_USERS_GROUP SYSRES_CONST_ALL_USERS_GROUP_NAME SYSRES_CONST_ALL_USERS_SERVER_GROUP_NAME SYSRES_CONST_ALLOWED_ACCESS_TYPE_CODE SYSRES_CONST_ALLOWED_ACCESS_TYPE_NAME SYSRES_CONST_APP_VIEWER_TYPE_REQUISITE_CODE SYSRES_CONST_APPROVING_SIGNATURE_NAME SYSRES_CONST_APPROVING_SIGNATURE_REQUISITE_CODE SYSRES_CONST_ASSISTANT_SUBSTITUE_TYPE SYSRES_CONST_ASSISTANT_SUBSTITUE_TYPE_CODE SYSRES_CONST_ATTACH_TYPE_COMPONENT_TOKEN SYSRES_CONST_ATTACH_TYPE_DOC SYSRES_CONST_ATTACH_TYPE_EDOC SYSRES_CONST_ATTACH_TYPE_FOLDER SYSRES_CONST_ATTACH_TYPE_JOB SYSRES_CONST_ATTACH_TYPE_REFERENCE SYSRES_CONST_ATTACH_TYPE_TASK SYSRES_CONST_AUTH_ENCODED_PASSWORD SYSRES_CONST_AUTH_ENCODED_PASSWORD_CODE SYSRES_CONST_AUTH_NOVELL SYSRES_CONST_AUTH_PASSWORD SYSRES_CONST_AUTH_PASSWORD_CODE SYSRES_CONST_AUTH_WINDOWS SYSRES_CONST_AUTHENTICATING_SIGNATURE_NAME SYSRES_CONST_AUTHENTICATING_SIGNATURE_REQUISITE_CODE SYSRES_CONST_AUTO_ENUM_METHOD_FLAG SYSRES_CONST_AUTO_NUMERATION_CODE SYSRES_CONST_AUTO_STRONG_ENUM_METHOD_FLAG SYSRES_CONST_AUTOTEXT_NAME_REQUISITE_CODE SYSRES_CONST_AUTOTEXT_TEXT_REQUISITE_CODE SYSRES_CONST_AUTOTEXT_USAGE_ALL SYSRES_CONST_AUTOTEXT_USAGE_ALL_CODE SYSRES_CONST_AUTOTEXT_USAGE_SIGN SYSRES_CONST_AUTOTEXT_USAGE_SIGN_CODE SYSRES_CONST_AUTOTEXT_USAGE_WORK SYSRES_CONST_AUTOTEXT_USAGE_WORK_CODE SYSRES_CONST_AUTOTEXT_USE_ANYWHERE_CODE SYSRES_CONST_AUTOTEXT_USE_ON_SIGNING_CODE SYSRES_CONST_AUTOTEXT_USE_ON_WORK_CODE SYSRES_CONST_BEGIN_DATE_REQUISITE_CODE SYSRES_CONST_BLACK_LIFE_CYCLE_STAGE_FONT_COLOR SYSRES_CONST_BLUE_LIFE_CYCLE_STAGE_FONT_COLOR SYSRES_CONST_BTN_PART SYSRES_CONST_CALCULATED_ROLE_TYPE_CODE SYSRES_CONST_CALL_TYPE_VARIABLE_BUTTON_VALUE SYSRES_CONST_CALL_TYPE_VARIABLE_PROGRAM_VALUE SYSRES_CONST_CANCEL_MESSAGE_FUNCTION_RESULT SYSRES_CONST_CARD_PART SYSRES_CONST_CARD_REFERENCE_MODE_NAME SYSRES_CONST_CERTIFICATE_TYPE_REQUISITE_ENCRYPT_VALUE SYSRES_CONST_CERTIFICATE_TYPE_REQUISITE_SIGN_AND_ENCRYPT_VALUE SYSRES_CONST_CERTIFICATE_TYPE_REQUISITE_SIGN_VALUE SYSRES_CONST_CHECK_PARAM_VALUE_DATE_PARAM_TYPE SYSRES_CONST_CHECK_PARAM_VALUE_FLOAT_PARAM_TYPE SYSRES_CONST_CHECK_PARAM_VALUE_INTEGER_PARAM_TYPE SYSRES_CONST_CHECK_PARAM_VALUE_PICK_PARAM_TYPE SYSRES_CONST_CHECK_PARAM_VALUE_REEFRENCE_PARAM_TYPE SYSRES_CONST_CLOSED_RECORD_FLAG_VALUE_FEMININE SYSRES_CONST_CLOSED_RECORD_FLAG_VALUE_MASCULINE SYSRES_CONST_CODE_COMPONENT_TYPE_ADMIN SYSRES_CONST_CODE_COMPONENT_TYPE_DEVELOPER SYSRES_CONST_CODE_COMPONENT_TYPE_DOCS SYSRES_CONST_CODE_COMPONENT_TYPE_EDOC_CARDS SYSRES_CONST_CODE_COMPONENT_TYPE_EXTERNAL_EXECUTABLE SYSRES_CONST_CODE_COMPONENT_TYPE_OTHER SYSRES_CONST_CODE_COMPONENT_TYPE_REFERENCE SYSRES_CONST_CODE_COMPONENT_TYPE_REPORT SYSRES_CONST_CODE_COMPONENT_TYPE_SCRIPT SYSRES_CONST_CODE_COMPONENT_TYPE_URL SYSRES_CONST_CODE_REQUISITE_ACCESS SYSRES_CONST_CODE_REQUISITE_CODE SYSRES_CONST_CODE_REQUISITE_COMPONENT SYSRES_CONST_CODE_REQUISITE_DESCRIPTION SYSRES_CONST_CODE_REQUISITE_EXCLUDE_COMPONENT SYSRES_CONST_CODE_REQUISITE_RECORD SYSRES_CONST_COMMENT_REQ_CODE SYSRES_CONST_COMMON_SETTINGS_REQUISITE_CODE SYSRES_CONST_COMP_CODE_GRD SYSRES_CONST_COMPONENT_GROUP_TYPE_REQUISITE_CODE SYSRES_CONST_COMPONENT_TYPE_ADMIN_COMPONENTS SYSRES_CONST_COMPONENT_TYPE_DEVELOPER_COMPONENTS SYSRES_CONST_COMPONENT_TYPE_DOCS SYSRES_CONST_COMPONENT_TYPE_EDOC_CARDS SYSRES_CONST_COMPONENT_TYPE_EDOCS SYSRES_CONST_COMPONENT_TYPE_EXTERNAL_EXECUTABLE SYSRES_CONST_COMPONENT_TYPE_OTHER SYSRES_CONST_COMPONENT_TYPE_REFERENCE_TYPES SYSRES_CONST_COMPONENT_TYPE_REFERENCES SYSRES_CONST_COMPONENT_TYPE_REPORTS SYSRES_CONST_COMPONENT_TYPE_SCRIPTS SYSRES_CONST_COMPONENT_TYPE_URL SYSRES_CONST_COMPONENTS_REMOTE_SERVERS_VIEW_CODE SYSRES_CONST_CONDITION_BLOCK_DESCRIPTION SYSRES_CONST_CONST_FIRM_STATUS_COMMON SYSRES_CONST_CONST_FIRM_STATUS_INDIVIDUAL SYSRES_CONST_CONST_NEGATIVE_VALUE SYSRES_CONST_CONST_POSITIVE_VALUE SYSRES_CONST_CONST_SERVER_STATUS_DONT_REPLICATE SYSRES_CONST_CONST_SERVER_STATUS_REPLICATE SYSRES_CONST_CONTENTS_REQUISITE_CODE SYSRES_CONST_DATA_TYPE_BOOLEAN SYSRES_CONST_DATA_TYPE_DATE SYSRES_CONST_DATA_TYPE_FLOAT SYSRES_CONST_DATA_TYPE_INTEGER SYSRES_CONST_DATA_TYPE_PICK SYSRES_CONST_DATA_TYPE_REFERENCE SYSRES_CONST_DATA_TYPE_STRING SYSRES_CONST_DATA_TYPE_TEXT SYSRES_CONST_DATA_TYPE_VARIANT SYSRES_CONST_DATE_CLOSE_REQ_CODE SYSRES_CONST_DATE_FORMAT_DATE_ONLY_CHAR SYSRES_CONST_DATE_OPEN_REQ_CODE SYSRES_CONST_DATE_REQUISITE SYSRES_CONST_DATE_REQUISITE_CODE SYSRES_CONST_DATE_REQUISITE_NAME SYSRES_CONST_DATE_REQUISITE_TYPE SYSRES_CONST_DATE_TYPE_CHAR SYSRES_CONST_DATETIME_FORMAT_VALUE SYSRES_CONST_DEA_ACCESS_RIGHTS_ACTION_CODE SYSRES_CONST_DESCRIPTION_LOCALIZE_ID_REQUISITE_CODE SYSRES_CONST_DESCRIPTION_REQUISITE_CODE SYSRES_CONST_DET1_PART SYSRES_CONST_DET2_PART SYSRES_CONST_DET3_PART SYSRES_CONST_DET4_PART SYSRES_CONST_DET5_PART SYSRES_CONST_DET6_PART SYSRES_CONST_DETAIL_DATASET_KEY_REQUISITE_CODE SYSRES_CONST_DETAIL_PICK_REQUISITE_CODE SYSRES_CONST_DETAIL_REQ_CODE SYSRES_CONST_DO_NOT_USE_ACCESS_TYPE_CODE SYSRES_CONST_DO_NOT_USE_ACCESS_TYPE_NAME SYSRES_CONST_DO_NOT_USE_ON_VIEW_ACCESS_TYPE_CODE SYSRES_CONST_DO_NOT_USE_ON_VIEW_ACCESS_TYPE_NAME SYSRES_CONST_DOCUMENT_STORAGES_CODE SYSRES_CONST_DOCUMENT_TEMPLATES_TYPE_NAME SYSRES_CONST_DOUBLE_REQUISITE_CODE SYSRES_CONST_EDITOR_CLOSE_FILE_OBSERV_TYPE_CODE SYSRES_CONST_EDITOR_CLOSE_PROCESS_OBSERV_TYPE_CODE SYSRES_CONST_EDITOR_TYPE_REQUISITE_CODE SYSRES_CONST_EDITORS_APPLICATION_NAME_REQUISITE_CODE SYSRES_CONST_EDITORS_CREATE_SEVERAL_PROCESSES_REQUISITE_CODE SYSRES_CONST_EDITORS_EXTENSION_REQUISITE_CODE SYSRES_CONST_EDITORS_OBSERVER_BY_PROCESS_TYPE SYSRES_CONST_EDITORS_REFERENCE_CODE SYSRES_CONST_EDITORS_REPLACE_SPEC_CHARS_REQUISITE_CODE SYSRES_CONST_EDITORS_USE_PLUGINS_REQUISITE_CODE SYSRES_CONST_EDITORS_VIEW_DOCUMENT_OPENED_TO_EDIT_CODE SYSRES_CONST_EDOC_CARD_TYPE_REQUISITE_CODE SYSRES_CONST_EDOC_CARD_TYPES_LINK_REQUISITE_CODE SYSRES_CONST_EDOC_CERTIFICATE_AND_PASSWORD_ENCODE_CODE SYSRES_CONST_EDOC_CERTIFICATE_ENCODE_CODE SYSRES_CONST_EDOC_DATE_REQUISITE_CODE SYSRES_CONST_EDOC_KIND_REFERENCE_CODE SYSRES_CONST_EDOC_KINDS_BY_TEMPLATE_ACTION_CODE SYSRES_CONST_EDOC_MANAGE_ACCESS_CODE SYSRES_CONST_EDOC_NONE_ENCODE_CODE SYSRES_CONST_EDOC_NUMBER_REQUISITE_CODE SYSRES_CONST_EDOC_PASSWORD_ENCODE_CODE SYSRES_CONST_EDOC_READONLY_ACCESS_CODE SYSRES_CONST_EDOC_SHELL_LIFE_TYPE_VIEW_VALUE SYSRES_CONST_EDOC_SIZE_RESTRICTION_PRIORITY_REQUISITE_CODE SYSRES_CONST_EDOC_STORAGE_CHECK_ACCESS_RIGHTS_REQUISITE_CODE SYSRES_CONST_EDOC_STORAGE_COMPUTER_NAME_REQUISITE_CODE SYSRES_CONST_EDOC_STORAGE_DATABASE_NAME_REQUISITE_CODE SYSRES_CONST_EDOC_STORAGE_EDIT_IN_STORAGE_REQUISITE_CODE SYSRES_CONST_EDOC_STORAGE_LOCAL_PATH_REQUISITE_CODE SYSRES_CONST_EDOC_STORAGE_SHARED_SOURCE_NAME_REQUISITE_CODE SYSRES_CONST_EDOC_TEMPLATE_REQUISITE_CODE SYSRES_CONST_EDOC_TYPES_REFERENCE_CODE SYSRES_CONST_EDOC_VERSION_ACTIVE_STAGE_CODE SYSRES_CONST_EDOC_VERSION_DESIGN_STAGE_CODE SYSRES_CONST_EDOC_VERSION_OBSOLETE_STAGE_CODE SYSRES_CONST_EDOC_WRITE_ACCES_CODE SYSRES_CONST_EDOCUMENT_CARD_REQUISITES_REFERENCE_CODE_SELECTED_REQUISITE SYSRES_CONST_ENCODE_CERTIFICATE_TYPE_CODE SYSRES_CONST_END_DATE_REQUISITE_CODE SYSRES_CONST_ENUMERATION_TYPE_REQUISITE_CODE SYSRES_CONST_EXECUTE_ACCESS_RIGHTS_TYPE_CODE SYSRES_CONST_EXECUTIVE_FILE_STORAGE_TYPE SYSRES_CONST_EXIST_CONST SYSRES_CONST_EXIST_VALUE SYSRES_CONST_EXPORT_LOCK_TYPE_ASK SYSRES_CONST_EXPORT_LOCK_TYPE_WITH_LOCK SYSRES_CONST_EXPORT_LOCK_TYPE_WITHOUT_LOCK SYSRES_CONST_EXPORT_VERSION_TYPE_ASK SYSRES_CONST_EXPORT_VERSION_TYPE_LAST SYSRES_CONST_EXPORT_VERSION_TYPE_LAST_ACTIVE SYSRES_CONST_EXTENSION_REQUISITE_CODE SYSRES_CONST_FILTER_NAME_REQUISITE_CODE SYSRES_CONST_FILTER_REQUISITE_CODE SYSRES_CONST_FILTER_TYPE_COMMON_CODE SYSRES_CONST_FILTER_TYPE_COMMON_NAME SYSRES_CONST_FILTER_TYPE_USER_CODE SYSRES_CONST_FILTER_TYPE_USER_NAME SYSRES_CONST_FILTER_VALUE_REQUISITE_NAME SYSRES_CONST_FLOAT_NUMBER_FORMAT_CHAR SYSRES_CONST_FLOAT_REQUISITE_TYPE SYSRES_CONST_FOLDER_AUTHOR_VALUE SYSRES_CONST_FOLDER_KIND_ANY_OBJECTS SYSRES_CONST_FOLDER_KIND_COMPONENTS SYSRES_CONST_FOLDER_KIND_EDOCS SYSRES_CONST_FOLDER_KIND_JOBS SYSRES_CONST_FOLDER_KIND_TASKS SYSRES_CONST_FOLDER_TYPE_COMMON SYSRES_CONST_FOLDER_TYPE_COMPONENT SYSRES_CONST_FOLDER_TYPE_FAVORITES SYSRES_CONST_FOLDER_TYPE_INBOX SYSRES_CONST_FOLDER_TYPE_OUTBOX SYSRES_CONST_FOLDER_TYPE_QUICK_LAUNCH SYSRES_CONST_FOLDER_TYPE_SEARCH SYSRES_CONST_FOLDER_TYPE_SHORTCUTS SYSRES_CONST_FOLDER_TYPE_USER SYSRES_CONST_FROM_DICTIONARY_ENUM_METHOD_FLAG SYSRES_CONST_FULL_SUBSTITUTE_TYPE SYSRES_CONST_FULL_SUBSTITUTE_TYPE_CODE SYSRES_CONST_FUNCTION_CANCEL_RESULT SYSRES_CONST_FUNCTION_CATEGORY_SYSTEM SYSRES_CONST_FUNCTION_CATEGORY_USER SYSRES_CONST_FUNCTION_FAILURE_RESULT SYSRES_CONST_FUNCTION_SAVE_RESULT SYSRES_CONST_GENERATED_REQUISITE SYSRES_CONST_GREEN_LIFE_CYCLE_STAGE_FONT_COLOR SYSRES_CONST_GROUP_ACCOUNT_TYPE_VALUE_CODE SYSRES_CONST_GROUP_CATEGORY_NORMAL_CODE SYSRES_CONST_GROUP_CATEGORY_NORMAL_NAME SYSRES_CONST_GROUP_CATEGORY_SERVICE_CODE SYSRES_CONST_GROUP_CATEGORY_SERVICE_NAME SYSRES_CONST_GROUP_COMMON_CATEGORY_FIELD_VALUE SYSRES_CONST_GROUP_FULL_NAME_REQUISITE_CODE SYSRES_CONST_GROUP_NAME_REQUISITE_CODE SYSRES_CONST_GROUP_RIGHTS_T_REQUISITE_CODE SYSRES_CONST_GROUP_SERVER_CODES_REQUISITE_CODE SYSRES_CONST_GROUP_SERVER_NAME_REQUISITE_CODE SYSRES_CONST_GROUP_SERVICE_CATEGORY_FIELD_VALUE SYSRES_CONST_GROUP_USER_REQUISITE_CODE SYSRES_CONST_GROUPS_REFERENCE_CODE SYSRES_CONST_GROUPS_REQUISITE_CODE SYSRES_CONST_HIDDEN_MODE_NAME SYSRES_CONST_HIGH_LVL_REQUISITE_CODE SYSRES_CONST_HISTORY_ACTION_CREATE_CODE SYSRES_CONST_HISTORY_ACTION_DELETE_CODE SYSRES_CONST_HISTORY_ACTION_EDIT_CODE SYSRES_CONST_HOUR_CHAR SYSRES_CONST_ID_REQUISITE_CODE SYSRES_CONST_IDSPS_REQUISITE_CODE SYSRES_CONST_IMAGE_MODE_COLOR SYSRES_CONST_IMAGE_MODE_GREYSCALE SYSRES_CONST_IMAGE_MODE_MONOCHROME SYSRES_CONST_IMPORTANCE_HIGH SYSRES_CONST_IMPORTANCE_LOW SYSRES_CONST_IMPORTANCE_NORMAL SYSRES_CONST_IN_DESIGN_VERSION_STATE_PICK_VALUE SYSRES_CONST_INCOMING_WORK_RULE_TYPE_CODE SYSRES_CONST_INT_REQUISITE SYSRES_CONST_INT_REQUISITE_TYPE SYSRES_CONST_INTEGER_NUMBER_FORMAT_CHAR SYSRES_CONST_INTEGER_TYPE_CHAR SYSRES_CONST_IS_GENERATED_REQUISITE_NEGATIVE_VALUE SYSRES_CONST_IS_PUBLIC_ROLE_REQUISITE_CODE SYSRES_CONST_IS_REMOTE_USER_NEGATIVE_VALUE SYSRES_CONST_IS_REMOTE_USER_POSITIVE_VALUE SYSRES_CONST_IS_STORED_REQUISITE_NEGATIVE_VALUE SYSRES_CONST_IS_STORED_REQUISITE_STORED_VALUE SYSRES_CONST_ITALIC_LIFE_CYCLE_STAGE_DRAW_STYLE SYSRES_CONST_JOB_BLOCK_DESCRIPTION SYSRES_CONST_JOB_KIND_CONTROL_JOB SYSRES_CONST_JOB_KIND_JOB SYSRES_CONST_JOB_KIND_NOTICE SYSRES_CONST_JOB_STATE_ABORTED SYSRES_CONST_JOB_STATE_COMPLETE SYSRES_CONST_JOB_STATE_WORKING SYSRES_CONST_KIND_REQUISITE_CODE SYSRES_CONST_KIND_REQUISITE_NAME SYSRES_CONST_KINDS_CREATE_SHADOW_COPIES_REQUISITE_CODE SYSRES_CONST_KINDS_DEFAULT_EDOC_LIFE_STAGE_REQUISITE_CODE SYSRES_CONST_KINDS_EDOC_ALL_TEPLATES_ALLOWED_REQUISITE_CODE SYSRES_CONST_KINDS_EDOC_ALLOW_LIFE_CYCLE_STAGE_CHANGING_REQUISITE_CODE SYSRES_CONST_KINDS_EDOC_ALLOW_MULTIPLE_ACTIVE_VERSIONS_REQUISITE_CODE SYSRES_CONST_KINDS_EDOC_SHARE_ACCES_RIGHTS_BY_DEFAULT_CODE SYSRES_CONST_KINDS_EDOC_TEMPLATE_REQUISITE_CODE SYSRES_CONST_KINDS_EDOC_TYPE_REQUISITE_CODE SYSRES_CONST_KINDS_SIGNERS_REQUISITES_CODE SYSRES_CONST_KOD_INPUT_TYPE SYSRES_CONST_LAST_UPDATE_DATE_REQUISITE_CODE SYSRES_CONST_LIFE_CYCLE_START_STAGE_REQUISITE_CODE SYSRES_CONST_LILAC_LIFE_CYCLE_STAGE_FONT_COLOR SYSRES_CONST_LINK_OBJECT_KIND_COMPONENT SYSRES_CONST_LINK_OBJECT_KIND_DOCUMENT SYSRES_CONST_LINK_OBJECT_KIND_EDOC SYSRES_CONST_LINK_OBJECT_KIND_FOLDER SYSRES_CONST_LINK_OBJECT_KIND_JOB SYSRES_CONST_LINK_OBJECT_KIND_REFERENCE SYSRES_CONST_LINK_OBJECT_KIND_TASK SYSRES_CONST_LINK_REF_TYPE_REQUISITE_CODE SYSRES_CONST_LIST_REFERENCE_MODE_NAME SYSRES_CONST_LOCALIZATION_DICTIONARY_MAIN_VIEW_CODE SYSRES_CONST_MAIN_VIEW_CODE SYSRES_CONST_MANUAL_ENUM_METHOD_FLAG SYSRES_CONST_MASTER_COMP_TYPE_REQUISITE_CODE SYSRES_CONST_MASTER_TABLE_REC_ID_REQUISITE_CODE SYSRES_CONST_MAXIMIZED_MODE_NAME SYSRES_CONST_ME_VALUE SYSRES_CONST_MESSAGE_ATTENTION_CAPTION SYSRES_CONST_MESSAGE_CONFIRMATION_CAPTION SYSRES_CONST_MESSAGE_ERROR_CAPTION SYSRES_CONST_MESSAGE_INFORMATION_CAPTION SYSRES_CONST_MINIMIZED_MODE_NAME SYSRES_CONST_MINUTE_CHAR SYSRES_CONST_MODULE_REQUISITE_CODE SYSRES_CONST_MONITORING_BLOCK_DESCRIPTION SYSRES_CONST_MONTH_FORMAT_VALUE SYSRES_CONST_NAME_LOCALIZE_ID_REQUISITE_CODE SYSRES_CONST_NAME_REQUISITE_CODE SYSRES_CONST_NAME_SINGULAR_REQUISITE_CODE SYSRES_CONST_NAMEAN_INPUT_TYPE SYSRES_CONST_NEGATIVE_PICK_VALUE SYSRES_CONST_NEGATIVE_VALUE SYSRES_CONST_NO SYSRES_CONST_NO_PICK_VALUE SYSRES_CONST_NO_SIGNATURE_REQUISITE_CODE SYSRES_CONST_NO_VALUE SYSRES_CONST_NONE_ACCESS_RIGHTS_TYPE_CODE SYSRES_CONST_NONOPERATING_RECORD_FLAG_VALUE SYSRES_CONST_NONOPERATING_RECORD_FLAG_VALUE_MASCULINE SYSRES_CONST_NORMAL_ACCESS_RIGHTS_TYPE_CODE SYSRES_CONST_NORMAL_LIFE_CYCLE_STAGE_DRAW_STYLE SYSRES_CONST_NORMAL_MODE_NAME SYSRES_CONST_NOT_ALLOWED_ACCESS_TYPE_CODE SYSRES_CONST_NOT_ALLOWED_ACCESS_TYPE_NAME SYSRES_CONST_NOTE_REQUISITE_CODE SYSRES_CONST_NOTICE_BLOCK_DESCRIPTION SYSRES_CONST_NUM_REQUISITE SYSRES_CONST_NUM_STR_REQUISITE_CODE SYSRES_CONST_NUMERATION_AUTO_NOT_STRONG SYSRES_CONST_NUMERATION_AUTO_STRONG SYSRES_CONST_NUMERATION_FROM_DICTONARY SYSRES_CONST_NUMERATION_MANUAL SYSRES_CONST_NUMERIC_TYPE_CHAR SYSRES_CONST_NUMREQ_REQUISITE_CODE SYSRES_CONST_OBSOLETE_VERSION_STATE_PICK_VALUE SYSRES_CONST_OPERATING_RECORD_FLAG_VALUE SYSRES_CONST_OPERATING_RECORD_FLAG_VALUE_CODE SYSRES_CONST_OPERATING_RECORD_FLAG_VALUE_FEMININE SYSRES_CONST_OPERATING_RECORD_FLAG_VALUE_MASCULINE SYSRES_CONST_OPTIONAL_FORM_COMP_REQCODE_PREFIX SYSRES_CONST_ORANGE_LIFE_CYCLE_STAGE_FONT_COLOR SYSRES_CONST_ORIGINALREF_REQUISITE_CODE SYSRES_CONST_OURFIRM_REF_CODE SYSRES_CONST_OURFIRM_REQUISITE_CODE SYSRES_CONST_OURFIRM_VAR SYSRES_CONST_OUTGOING_WORK_RULE_TYPE_CODE SYSRES_CONST_PICK_NEGATIVE_RESULT SYSRES_CONST_PICK_POSITIVE_RESULT SYSRES_CONST_PICK_REQUISITE SYSRES_CONST_PICK_REQUISITE_TYPE SYSRES_CONST_PICK_TYPE_CHAR SYSRES_CONST_PLAN_STATUS_REQUISITE_CODE SYSRES_CONST_PLATFORM_VERSION_COMMENT SYSRES_CONST_PLUGINS_SETTINGS_DESCRIPTION_REQUISITE_CODE SYSRES_CONST_POSITIVE_PICK_VALUE SYSRES_CONST_POWER_TO_CREATE_ACTION_CODE SYSRES_CONST_POWER_TO_SIGN_ACTION_CODE SYSRES_CONST_PRIORITY_REQUISITE_CODE SYSRES_CONST_QUALIFIED_TASK_TYPE SYSRES_CONST_QUALIFIED_TASK_TYPE_CODE SYSRES_CONST_RECSTAT_REQUISITE_CODE SYSRES_CONST_RED_LIFE_CYCLE_STAGE_FONT_COLOR SYSRES_CONST_REF_ID_T_REF_TYPE_REQUISITE_CODE SYSRES_CONST_REF_REQUISITE SYSRES_CONST_REF_REQUISITE_TYPE SYSRES_CONST_REF_REQUISITES_REFERENCE_CODE_SELECTED_REQUISITE SYSRES_CONST_REFERENCE_RECORD_HISTORY_CREATE_ACTION_CODE SYSRES_CONST_REFERENCE_RECORD_HISTORY_DELETE_ACTION_CODE SYSRES_CONST_REFERENCE_RECORD_HISTORY_MODIFY_ACTION_CODE SYSRES_CONST_REFERENCE_TYPE_CHAR SYSRES_CONST_REFERENCE_TYPE_REQUISITE_NAME SYSRES_CONST_REFERENCES_ADD_PARAMS_REQUISITE_CODE SYSRES_CONST_REFERENCES_DISPLAY_REQUISITE_REQUISITE_CODE SYSRES_CONST_REMOTE_SERVER_STATUS_WORKING SYSRES_CONST_REMOTE_SERVER_TYPE_MAIN SYSRES_CONST_REMOTE_SERVER_TYPE_SECONDARY SYSRES_CONST_REMOTE_USER_FLAG_VALUE_CODE SYSRES_CONST_REPORT_APP_EDITOR_INTERNAL SYSRES_CONST_REPORT_BASE_REPORT_ID_REQUISITE_CODE SYSRES_CONST_REPORT_BASE_REPORT_REQUISITE_CODE SYSRES_CONST_REPORT_SCRIPT_REQUISITE_CODE SYSRES_CONST_REPORT_TEMPLATE_REQUISITE_CODE SYSRES_CONST_REPORT_VIEWER_CODE_REQUISITE_CODE SYSRES_CONST_REQ_ALLOW_COMPONENT_DEFAULT_VALUE SYSRES_CONST_REQ_ALLOW_RECORD_DEFAULT_VALUE SYSRES_CONST_REQ_ALLOW_SERVER_COMPONENT_DEFAULT_VALUE SYSRES_CONST_REQ_MODE_AVAILABLE_CODE SYSRES_CONST_REQ_MODE_EDIT_CODE SYSRES_CONST_REQ_MODE_HIDDEN_CODE SYSRES_CONST_REQ_MODE_NOT_AVAILABLE_CODE SYSRES_CONST_REQ_MODE_VIEW_CODE SYSRES_CONST_REQ_NUMBER_REQUISITE_CODE SYSRES_CONST_REQ_SECTION_VALUE SYSRES_CONST_REQ_TYPE_VALUE SYSRES_CONST_REQUISITE_FORMAT_BY_UNIT SYSRES_CONST_REQUISITE_FORMAT_DATE_FULL SYSRES_CONST_REQUISITE_FORMAT_DATE_TIME SYSRES_CONST_REQUISITE_FORMAT_LEFT SYSRES_CONST_REQUISITE_FORMAT_RIGHT SYSRES_CONST_REQUISITE_FORMAT_WITHOUT_UNIT SYSRES_CONST_REQUISITE_NUMBER_REQUISITE_CODE SYSRES_CONST_REQUISITE_SECTION_ACTIONS SYSRES_CONST_REQUISITE_SECTION_BUTTON SYSRES_CONST_REQUISITE_SECTION_BUTTONS SYSRES_CONST_REQUISITE_SECTION_CARD SYSRES_CONST_REQUISITE_SECTION_TABLE SYSRES_CONST_REQUISITE_SECTION_TABLE10 SYSRES_CONST_REQUISITE_SECTION_TABLE11 SYSRES_CONST_REQUISITE_SECTION_TABLE12 SYSRES_CONST_REQUISITE_SECTION_TABLE13 SYSRES_CONST_REQUISITE_SECTION_TABLE14 SYSRES_CONST_REQUISITE_SECTION_TABLE15 SYSRES_CONST_REQUISITE_SECTION_TABLE16 SYSRES_CONST_REQUISITE_SECTION_TABLE17 SYSRES_CONST_REQUISITE_SECTION_TABLE18 SYSRES_CONST_REQUISITE_SECTION_TABLE19 SYSRES_CONST_REQUISITE_SECTION_TABLE2 SYSRES_CONST_REQUISITE_SECTION_TABLE20 SYSRES_CONST_REQUISITE_SECTION_TABLE21 SYSRES_CONST_REQUISITE_SECTION_TABLE22 SYSRES_CONST_REQUISITE_SECTION_TABLE23 SYSRES_CONST_REQUISITE_SECTION_TABLE24 SYSRES_CONST_REQUISITE_SECTION_TABLE3 SYSRES_CONST_REQUISITE_SECTION_TABLE4 SYSRES_CONST_REQUISITE_SECTION_TABLE5 SYSRES_CONST_REQUISITE_SECTION_TABLE6 SYSRES_CONST_REQUISITE_SECTION_TABLE7 SYSRES_CONST_REQUISITE_SECTION_TABLE8 SYSRES_CONST_REQUISITE_SECTION_TABLE9 SYSRES_CONST_REQUISITES_PSEUDOREFERENCE_REQUISITE_NUMBER_REQUISITE_CODE SYSRES_CONST_RIGHT_ALIGNMENT_CODE SYSRES_CONST_ROLES_REFERENCE_CODE SYSRES_CONST_ROUTE_STEP_AFTER_RUS SYSRES_CONST_ROUTE_STEP_AND_CONDITION_RUS SYSRES_CONST_ROUTE_STEP_OR_CONDITION_RUS SYSRES_CONST_ROUTE_TYPE_COMPLEX SYSRES_CONST_ROUTE_TYPE_PARALLEL SYSRES_CONST_ROUTE_TYPE_SERIAL SYSRES_CONST_SBDATASETDESC_NEGATIVE_VALUE SYSRES_CONST_SBDATASETDESC_POSITIVE_VALUE SYSRES_CONST_SBVIEWSDESC_POSITIVE_VALUE SYSRES_CONST_SCRIPT_BLOCK_DESCRIPTION SYSRES_CONST_SEARCH_BY_TEXT_REQUISITE_CODE SYSRES_CONST_SEARCHES_COMPONENT_CONTENT SYSRES_CONST_SEARCHES_CRITERIA_ACTION_NAME SYSRES_CONST_SEARCHES_EDOC_CONTENT SYSRES_CONST_SEARCHES_FOLDER_CONTENT SYSRES_CONST_SEARCHES_JOB_CONTENT SYSRES_CONST_SEARCHES_REFERENCE_CODE SYSRES_CONST_SEARCHES_TASK_CONTENT SYSRES_CONST_SECOND_CHAR SYSRES_CONST_SECTION_REQUISITE_ACTIONS_VALUE SYSRES_CONST_SECTION_REQUISITE_CARD_VALUE SYSRES_CONST_SECTION_REQUISITE_CODE SYSRES_CONST_SECTION_REQUISITE_DETAIL_1_VALUE SYSRES_CONST_SECTION_REQUISITE_DETAIL_2_VALUE SYSRES_CONST_SECTION_REQUISITE_DETAIL_3_VALUE SYSRES_CONST_SECTION_REQUISITE_DETAIL_4_VALUE SYSRES_CONST_SECTION_REQUISITE_DETAIL_5_VALUE SYSRES_CONST_SECTION_REQUISITE_DETAIL_6_VALUE SYSRES_CONST_SELECT_REFERENCE_MODE_NAME SYSRES_CONST_SELECT_TYPE_SELECTABLE SYSRES_CONST_SELECT_TYPE_SELECTABLE_ONLY_CHILD SYSRES_CONST_SELECT_TYPE_SELECTABLE_WITH_CHILD SYSRES_CONST_SELECT_TYPE_UNSLECTABLE SYSRES_CONST_SERVER_TYPE_MAIN SYSRES_CONST_SERVICE_USER_CATEGORY_FIELD_VALUE SYSRES_CONST_SETTINGS_USER_REQUISITE_CODE SYSRES_CONST_SIGNATURE_AND_ENCODE_CERTIFICATE_TYPE_CODE SYSRES_CONST_SIGNATURE_CERTIFICATE_TYPE_CODE SYSRES_CONST_SINGULAR_TITLE_REQUISITE_CODE SYSRES_CONST_SQL_SERVER_AUTHENTIFICATION_FLAG_VALUE_CODE SYSRES_CONST_SQL_SERVER_ENCODE_AUTHENTIFICATION_FLAG_VALUE_CODE SYSRES_CONST_STANDART_ROUTE_REFERENCE_CODE SYSRES_CONST_STANDART_ROUTE_REFERENCE_COMMENT_REQUISITE_CODE SYSRES_CONST_STANDART_ROUTES_GROUPS_REFERENCE_CODE SYSRES_CONST_STATE_REQ_NAME SYSRES_CONST_STATE_REQUISITE_ACTIVE_VALUE SYSRES_CONST_STATE_REQUISITE_CLOSED_VALUE SYSRES_CONST_STATE_REQUISITE_CODE SYSRES_CONST_STATIC_ROLE_TYPE_CODE SYSRES_CONST_STATUS_PLAN_DEFAULT_VALUE SYSRES_CONST_STATUS_VALUE_AUTOCLEANING SYSRES_CONST_STATUS_VALUE_BLUE_SQUARE SYSRES_CONST_STATUS_VALUE_COMPLETE SYSRES_CONST_STATUS_VALUE_GREEN_SQUARE SYSRES_CONST_STATUS_VALUE_ORANGE_SQUARE SYSRES_CONST_STATUS_VALUE_PURPLE_SQUARE SYSRES_CONST_STATUS_VALUE_RED_SQUARE SYSRES_CONST_STATUS_VALUE_SUSPEND SYSRES_CONST_STATUS_VALUE_YELLOW_SQUARE SYSRES_CONST_STDROUTE_SHOW_TO_USERS_REQUISITE_CODE SYSRES_CONST_STORAGE_TYPE_FILE SYSRES_CONST_STORAGE_TYPE_SQL_SERVER SYSRES_CONST_STR_REQUISITE SYSRES_CONST_STRIKEOUT_LIFE_CYCLE_STAGE_DRAW_STYLE SYSRES_CONST_STRING_FORMAT_LEFT_ALIGN_CHAR SYSRES_CONST_STRING_FORMAT_RIGHT_ALIGN_CHAR SYSRES_CONST_STRING_REQUISITE_CODE SYSRES_CONST_STRING_REQUISITE_TYPE SYSRES_CONST_STRING_TYPE_CHAR SYSRES_CONST_SUBSTITUTES_PSEUDOREFERENCE_CODE SYSRES_CONST_SUBTASK_BLOCK_DESCRIPTION SYSRES_CONST_SYSTEM_SETTING_CURRENT_USER_PARAM_VALUE SYSRES_CONST_SYSTEM_SETTING_EMPTY_VALUE_PARAM_VALUE SYSRES_CONST_SYSTEM_VERSION_COMMENT SYSRES_CONST_TASK_ACCESS_TYPE_ALL SYSRES_CONST_TASK_ACCESS_TYPE_ALL_MEMBERS SYSRES_CONST_TASK_ACCESS_TYPE_MANUAL SYSRES_CONST_TASK_ENCODE_TYPE_CERTIFICATION SYSRES_CONST_TASK_ENCODE_TYPE_CERTIFICATION_AND_PASSWORD SYSRES_CONST_TASK_ENCODE_TYPE_NONE SYSRES_CONST_TASK_ENCODE_TYPE_PASSWORD SYSRES_CONST_TASK_ROUTE_ALL_CONDITION SYSRES_CONST_TASK_ROUTE_AND_CONDITION SYSRES_CONST_TASK_ROUTE_OR_CONDITION SYSRES_CONST_TASK_STATE_ABORTED SYSRES_CONST_TASK_STATE_COMPLETE SYSRES_CONST_TASK_STATE_CONTINUED SYSRES_CONST_TASK_STATE_CONTROL SYSRES_CONST_TASK_STATE_INIT SYSRES_CONST_TASK_STATE_WORKING SYSRES_CONST_TASK_TITLE SYSRES_CONST_TASK_TYPES_GROUPS_REFERENCE_CODE SYSRES_CONST_TASK_TYPES_REFERENCE_CODE SYSRES_CONST_TEMPLATES_REFERENCE_CODE SYSRES_CONST_TEST_DATE_REQUISITE_NAME SYSRES_CONST_TEST_DEV_DATABASE_NAME SYSRES_CONST_TEST_DEV_SYSTEM_CODE SYSRES_CONST_TEST_EDMS_DATABASE_NAME SYSRES_CONST_TEST_EDMS_MAIN_CODE SYSRES_CONST_TEST_EDMS_MAIN_DB_NAME SYSRES_CONST_TEST_EDMS_SECOND_CODE SYSRES_CONST_TEST_EDMS_SECOND_DB_NAME SYSRES_CONST_TEST_EDMS_SYSTEM_CODE SYSRES_CONST_TEST_NUMERIC_REQUISITE_NAME SYSRES_CONST_TEXT_REQUISITE SYSRES_CONST_TEXT_REQUISITE_CODE SYSRES_CONST_TEXT_REQUISITE_TYPE SYSRES_CONST_TEXT_TYPE_CHAR SYSRES_CONST_TYPE_CODE_REQUISITE_CODE SYSRES_CONST_TYPE_REQUISITE_CODE SYSRES_CONST_UNDEFINED_LIFE_CYCLE_STAGE_FONT_COLOR SYSRES_CONST_UNITS_SECTION_ID_REQUISITE_CODE SYSRES_CONST_UNITS_SECTION_REQUISITE_CODE SYSRES_CONST_UNOPERATING_RECORD_FLAG_VALUE_CODE SYSRES_CONST_UNSTORED_DATA_REQUISITE_CODE SYSRES_CONST_UNSTORED_DATA_REQUISITE_NAME SYSRES_CONST_USE_ACCESS_TYPE_CODE SYSRES_CONST_USE_ACCESS_TYPE_NAME SYSRES_CONST_USER_ACCOUNT_TYPE_VALUE_CODE SYSRES_CONST_USER_ADDITIONAL_INFORMATION_REQUISITE_CODE SYSRES_CONST_USER_AND_GROUP_ID_FROM_PSEUDOREFERENCE_REQUISITE_CODE SYSRES_CONST_USER_CATEGORY_NORMAL SYSRES_CONST_USER_CERTIFICATE_REQUISITE_CODE SYSRES_CONST_USER_CERTIFICATE_STATE_REQUISITE_CODE SYSRES_CONST_USER_CERTIFICATE_SUBJECT_NAME_REQUISITE_CODE SYSRES_CONST_USER_CERTIFICATE_THUMBPRINT_REQUISITE_CODE SYSRES_CONST_USER_COMMON_CATEGORY SYSRES_CONST_USER_COMMON_CATEGORY_CODE SYSRES_CONST_USER_FULL_NAME_REQUISITE_CODE SYSRES_CONST_USER_GROUP_TYPE_REQUISITE_CODE SYSRES_CONST_USER_LOGIN_REQUISITE_CODE SYSRES_CONST_USER_REMOTE_CONTROLLER_REQUISITE_CODE SYSRES_CONST_USER_REMOTE_SYSTEM_REQUISITE_CODE SYSRES_CONST_USER_RIGHTS_T_REQUISITE_CODE SYSRES_CONST_USER_SERVER_NAME_REQUISITE_CODE SYSRES_CONST_USER_SERVICE_CATEGORY SYSRES_CONST_USER_SERVICE_CATEGORY_CODE SYSRES_CONST_USER_STATUS_ADMINISTRATOR_CODE SYSRES_CONST_USER_STATUS_ADMINISTRATOR_NAME SYSRES_CONST_USER_STATUS_DEVELOPER_CODE SYSRES_CONST_USER_STATUS_DEVELOPER_NAME SYSRES_CONST_USER_STATUS_DISABLED_CODE SYSRES_CONST_USER_STATUS_DISABLED_NAME SYSRES_CONST_USER_STATUS_SYSTEM_DEVELOPER_CODE SYSRES_CONST_USER_STATUS_USER_CODE SYSRES_CONST_USER_STATUS_USER_NAME SYSRES_CONST_USER_STATUS_USER_NAME_DEPRECATED SYSRES_CONST_USER_TYPE_FIELD_VALUE_USER SYSRES_CONST_USER_TYPE_REQUISITE_CODE SYSRES_CONST_USERS_CONTROLLER_REQUISITE_CODE SYSRES_CONST_USERS_IS_MAIN_SERVER_REQUISITE_CODE SYSRES_CONST_USERS_REFERENCE_CODE SYSRES_CONST_USERS_REGISTRATION_CERTIFICATES_ACTION_NAME SYSRES_CONST_USERS_REQUISITE_CODE SYSRES_CONST_USERS_SYSTEM_REQUISITE_CODE SYSRES_CONST_USERS_USER_ACCESS_RIGHTS_TYPR_REQUISITE_CODE SYSRES_CONST_USERS_USER_AUTHENTICATION_REQUISITE_CODE SYSRES_CONST_USERS_USER_COMPONENT_REQUISITE_CODE SYSRES_CONST_USERS_USER_GROUP_REQUISITE_CODE SYSRES_CONST_USERS_VIEW_CERTIFICATES_ACTION_NAME SYSRES_CONST_VIEW_DEFAULT_CODE SYSRES_CONST_VIEW_DEFAULT_NAME SYSRES_CONST_VIEWER_REQUISITE_CODE SYSRES_CONST_WAITING_BLOCK_DESCRIPTION SYSRES_CONST_WIZARD_FORM_LABEL_TEST_STRING  SYSRES_CONST_WIZARD_QUERY_PARAM_HEIGHT_ETALON_STRING SYSRES_CONST_WIZARD_REFERENCE_COMMENT_REQUISITE_CODE SYSRES_CONST_WORK_RULES_DESCRIPTION_REQUISITE_CODE SYSRES_CONST_WORK_TIME_CALENDAR_REFERENCE_CODE SYSRES_CONST_WORK_WORKFLOW_HARD_ROUTE_TYPE_VALUE SYSRES_CONST_WORK_WORKFLOW_HARD_ROUTE_TYPE_VALUE_CODE SYSRES_CONST_WORK_WORKFLOW_HARD_ROUTE_TYPE_VALUE_CODE_RUS SYSRES_CONST_WORK_WORKFLOW_SOFT_ROUTE_TYPE_VALUE_CODE_RUS SYSRES_CONST_WORKFLOW_ROUTE_TYPR_HARD SYSRES_CONST_WORKFLOW_ROUTE_TYPR_SOFT SYSRES_CONST_XML_ENCODING SYSRES_CONST_XREC_STAT_REQUISITE_CODE SYSRES_CONST_XRECID_FIELD_NAME SYSRES_CONST_YES SYSRES_CONST_YES_NO_2_REQUISITE_CODE SYSRES_CONST_YES_NO_REQUISITE_CODE SYSRES_CONST_YES_NO_T_REF_TYPE_REQUISITE_CODE SYSRES_CONST_YES_PICK_VALUE SYSRES_CONST_YES_VALUE CR FALSE nil NO_VALUE NULL TAB TRUE YES_VALUE ADMINISTRATORS_GROUP_NAME CUSTOMIZERS_GROUP_NAME DEVELOPERS_GROUP_NAME SERVICE_USERS_GROUP_NAME DECISION_BLOCK_FIRST_OPERAND_PROPERTY DECISION_BLOCK_NAME_PROPERTY DECISION_BLOCK_OPERATION_PROPERTY DECISION_BLOCK_RESULT_TYPE_PROPERTY DECISION_BLOCK_SECOND_OPERAND_PROPERTY ANY_FILE_EXTENTION COMPRESSED_DOCUMENT_EXTENSION EXTENDED_DOCUMENT_EXTENSION SHORT_COMPRESSED_DOCUMENT_EXTENSION SHORT_EXTENDED_DOCUMENT_EXTENSION JOB_BLOCK_ABORT_DEADLINE_PROPERTY JOB_BLOCK_AFTER_FINISH_EVENT JOB_BLOCK_AFTER_QUERY_PARAMETERS_EVENT JOB_BLOCK_ATTACHMENT_PROPERTY JOB_BLOCK_ATTACHMENTS_RIGHTS_GROUP_PROPERTY JOB_BLOCK_ATTACHMENTS_RIGHTS_TYPE_PROPERTY JOB_BLOCK_BEFORE_QUERY_PARAMETERS_EVENT JOB_BLOCK_BEFORE_START_EVENT JOB_BLOCK_CREATED_JOBS_PROPERTY JOB_BLOCK_DEADLINE_PROPERTY JOB_BLOCK_EXECUTION_RESULTS_PROPERTY JOB_BLOCK_IS_PARALLEL_PROPERTY JOB_BLOCK_IS_RELATIVE_ABORT_DEADLINE_PROPERTY JOB_BLOCK_IS_RELATIVE_DEADLINE_PROPERTY JOB_BLOCK_JOB_TEXT_PROPERTY JOB_BLOCK_NAME_PROPERTY JOB_BLOCK_NEED_SIGN_ON_PERFORM_PROPERTY JOB_BLOCK_PERFORMER_PROPERTY JOB_BLOCK_RELATIVE_ABORT_DEADLINE_TYPE_PROPERTY JOB_BLOCK_RELATIVE_DEADLINE_TYPE_PROPERTY JOB_BLOCK_SUBJECT_PROPERTY ENGLISH_LANGUAGE_CODE RUSSIAN_LANGUAGE_CODE smHidden smMaximized smMinimized smNormal wmNo wmYes COMPONENT_TOKEN_LINK_KIND DOCUMENT_LINK_KIND EDOCUMENT_LINK_KIND FOLDER_LINK_KIND JOB_LINK_KIND REFERENCE_LINK_KIND TASK_LINK_KIND COMPONENT_TOKEN_LOCK_TYPE EDOCUMENT_VERSION_LOCK_TYPE MONITOR_BLOCK_AFTER_FINISH_EVENT MONITOR_BLOCK_BEFORE_START_EVENT MONITOR_BLOCK_DEADLINE_PROPERTY MONITOR_BLOCK_INTERVAL_PROPERTY MONITOR_BLOCK_INTERVAL_TYPE_PROPERTY MONITOR_BLOCK_IS_RELATIVE_DEADLINE_PROPERTY MONITOR_BLOCK_NAME_PROPERTY MONITOR_BLOCK_RELATIVE_DEADLINE_TYPE_PROPERTY MONITOR_BLOCK_SEARCH_SCRIPT_PROPERTY NOTICE_BLOCK_AFTER_FINISH_EVENT NOTICE_BLOCK_ATTACHMENT_PROPERTY NOTICE_BLOCK_ATTACHMENTS_RIGHTS_GROUP_PROPERTY NOTICE_BLOCK_ATTACHMENTS_RIGHTS_TYPE_PROPERTY NOTICE_BLOCK_BEFORE_START_EVENT NOTICE_BLOCK_CREATED_NOTICES_PROPERTY NOTICE_BLOCK_DEADLINE_PROPERTY NOTICE_BLOCK_IS_RELATIVE_DEADLINE_PROPERTY NOTICE_BLOCK_NAME_PROPERTY NOTICE_BLOCK_NOTICE_TEXT_PROPERTY NOTICE_BLOCK_PERFORMER_PROPERTY NOTICE_BLOCK_RELATIVE_DEADLINE_TYPE_PROPERTY NOTICE_BLOCK_SUBJECT_PROPERTY dseAfterCancel dseAfterClose dseAfterDelete dseAfterDeleteOutOfTransaction dseAfterInsert dseAfterOpen dseAfterScroll dseAfterUpdate dseAfterUpdateOutOfTransaction dseBeforeCancel dseBeforeClose dseBeforeDelete dseBeforeDetailUpdate dseBeforeInsert dseBeforeOpen dseBeforeUpdate dseOnAnyRequisiteChange dseOnCloseRecord dseOnDeleteError dseOnOpenRecord dseOnPrepareUpdate dseOnUpdateError dseOnUpdateRatifiedRecord dseOnValidDelete dseOnValidUpdate reOnChange reOnChangeValues SELECTION_BEGIN_ROUTE_EVENT SELECTION_END_ROUTE_EVENT CURRENT_PERIOD_IS_REQUIRED PREVIOUS_CARD_TYPE_NAME SHOW_RECORD_PROPERTIES_FORM ACCESS_RIGHTS_SETTING_DIALOG_CODE ADMINISTRATOR_USER_CODE ANALYTIC_REPORT_TYPE asrtHideLocal asrtHideRemote CALCULATED_ROLE_TYPE_CODE COMPONENTS_REFERENCE_DEVELOPER_VIEW_CODE DCTS_TEST_PROTOCOLS_FOLDER_PATH E_EDOC_VERSION_ALREADY_APPROVINGLY_SIGNED E_EDOC_VERSION_ALREADY_APPROVINGLY_SIGNED_BY_USER E_EDOC_VERSION_ALREDY_SIGNED E_EDOC_VERSION_ALREDY_SIGNED_BY_USER EDOC_TYPES_CODE_REQUISITE_FIELD_NAME EDOCUMENTS_ALIAS_NAME FILES_FOLDER_PATH FILTER_OPERANDS_DELIMITER FILTER_OPERATIONS_DELIMITER FORMCARD_NAME FORMLIST_NAME GET_EXTENDED_DOCUMENT_EXTENSION_CREATION_MODE GET_EXTENDED_DOCUMENT_EXTENSION_IMPORT_MODE INTEGRATED_REPORT_TYPE IS_BUILDER_APPLICATION_ROLE IS_BUILDER_APPLICATION_ROLE2 IS_BUILDER_USERS ISBSYSDEV LOG_FOLDER_PATH mbCancel mbNo mbNoToAll mbOK mbYes mbYesToAll MEMORY_DATASET_DESRIPTIONS_FILENAME mrNo mrNoToAll mrYes mrYesToAll MULTIPLE_SELECT_DIALOG_CODE NONOPERATING_RECORD_FLAG_FEMININE NONOPERATING_RECORD_FLAG_MASCULINE OPERATING_RECORD_FLAG_FEMININE OPERATING_RECORD_FLAG_MASCULINE PROFILING_SETTINGS_COMMON_SETTINGS_CODE_VALUE PROGRAM_INITIATED_LOOKUP_ACTION ratDelete ratEdit ratInsert REPORT_TYPE REQUIRED_PICK_VALUES_VARIABLE rmCard rmList SBRTE_PROGID_DEV SBRTE_PROGID_RELEASE STATIC_ROLE_TYPE_CODE SUPPRESS_EMPTY_TEMPLATE_CREATION SYSTEM_USER_CODE UPDATE_DIALOG_DATASET USED_IN_OBJECT_HINT_PARAM USER_INITIATED_LOOKUP_ACTION USER_NAME_FORMAT USER_SELECTION_RESTRICTIONS WORKFLOW_TEST_PROTOCOLS_FOLDER_PATH ELS_SUBTYPE_CONTROL_NAME ELS_FOLDER_KIND_CONTROL_NAME REPEAT_PROCESS_CURRENT_OBJECT_EXCEPTION_NAME PRIVILEGE_COMPONENT_FULL_ACCESS PRIVILEGE_DEVELOPMENT_EXPORT PRIVILEGE_DEVELOPMENT_IMPORT PRIVILEGE_DOCUMENT_DELETE PRIVILEGE_ESD PRIVILEGE_FOLDER_DELETE PRIVILEGE_MANAGE_ACCESS_RIGHTS PRIVILEGE_MANAGE_REPLICATION PRIVILEGE_MANAGE_SESSION_SERVER PRIVILEGE_OBJECT_FULL_ACCESS PRIVILEGE_OBJECT_VIEW PRIVILEGE_RESERVE_LICENSE PRIVILEGE_SYSTEM_CUSTOMIZE PRIVILEGE_SYSTEM_DEVELOP PRIVILEGE_SYSTEM_INSTALL PRIVILEGE_TASK_DELETE PRIVILEGE_USER_PLUGIN_SETTINGS_CUSTOMIZE PRIVILEGES_PSEUDOREFERENCE_CODE ACCESS_TYPES_PSEUDOREFERENCE_CODE ALL_AVAILABLE_COMPONENTS_PSEUDOREFERENCE_CODE ALL_AVAILABLE_PRIVILEGES_PSEUDOREFERENCE_CODE ALL_REPLICATE_COMPONENTS_PSEUDOREFERENCE_CODE AVAILABLE_DEVELOPERS_COMPONENTS_PSEUDOREFERENCE_CODE COMPONENTS_PSEUDOREFERENCE_CODE FILTRATER_SETTINGS_CONFLICTS_PSEUDOREFERENCE_CODE GROUPS_PSEUDOREFERENCE_CODE RECEIVE_PROTOCOL_PSEUDOREFERENCE_CODE REFERENCE_REQUISITE_PSEUDOREFERENCE_CODE REFERENCE_REQUISITES_PSEUDOREFERENCE_CODE REFTYPES_PSEUDOREFERENCE_CODE REPLICATION_SEANCES_DIARY_PSEUDOREFERENCE_CODE SEND_PROTOCOL_PSEUDOREFERENCE_CODE SUBSTITUTES_PSEUDOREFERENCE_CODE SYSTEM_SETTINGS_PSEUDOREFERENCE_CODE UNITS_PSEUDOREFERENCE_CODE USERS_PSEUDOREFERENCE_CODE VIEWERS_PSEUDOREFERENCE_CODE CERTIFICATE_TYPE_ENCRYPT CERTIFICATE_TYPE_SIGN CERTIFICATE_TYPE_SIGN_AND_ENCRYPT STORAGE_TYPE_FILE STORAGE_TYPE_NAS_CIFS STORAGE_TYPE_SAPERION STORAGE_TYPE_SQL_SERVER COMPTYPE2_REQUISITE_DOCUMENTS_VALUE COMPTYPE2_REQUISITE_TASKS_VALUE COMPTYPE2_REQUISITE_FOLDERS_VALUE COMPTYPE2_REQUISITE_REFERENCES_VALUE SYSREQ_CODE SYSREQ_COMPTYPE2 SYSREQ_CONST_AVAILABLE_FOR_WEB SYSREQ_CONST_COMMON_CODE SYSREQ_CONST_COMMON_VALUE SYSREQ_CONST_FIRM_CODE SYSREQ_CONST_FIRM_STATUS SYSREQ_CONST_FIRM_VALUE SYSREQ_CONST_SERVER_STATUS SYSREQ_CONTENTS SYSREQ_DATE_OPEN SYSREQ_DATE_CLOSE SYSREQ_DESCRIPTION SYSREQ_DESCRIPTION_LOCALIZE_ID SYSREQ_DOUBLE SYSREQ_EDOC_ACCESS_TYPE SYSREQ_EDOC_AUTHOR SYSREQ_EDOC_CREATED SYSREQ_EDOC_DELEGATE_RIGHTS_REQUISITE_CODE SYSREQ_EDOC_EDITOR SYSREQ_EDOC_ENCODE_TYPE SYSREQ_EDOC_ENCRYPTION_PLUGIN_NAME SYSREQ_EDOC_ENCRYPTION_PLUGIN_VERSION SYSREQ_EDOC_EXPORT_DATE SYSREQ_EDOC_EXPORTER SYSREQ_EDOC_KIND SYSREQ_EDOC_LIFE_STAGE_NAME SYSREQ_EDOC_LOCKED_FOR_SERVER_CODE SYSREQ_EDOC_MODIFIED SYSREQ_EDOC_NAME SYSREQ_EDOC_NOTE SYSREQ_EDOC_QUALIFIED_ID SYSREQ_EDOC_SESSION_KEY SYSREQ_EDOC_SESSION_KEY_ENCRYPTION_PLUGIN_NAME SYSREQ_EDOC_SESSION_KEY_ENCRYPTION_PLUGIN_VERSION SYSREQ_EDOC_SIGNATURE_TYPE SYSREQ_EDOC_SIGNED SYSREQ_EDOC_STORAGE SYSREQ_EDOC_STORAGES_ARCHIVE_STORAGE SYSREQ_EDOC_STORAGES_CHECK_RIGHTS SYSREQ_EDOC_STORAGES_COMPUTER_NAME SYSREQ_EDOC_STORAGES_EDIT_IN_STORAGE SYSREQ_EDOC_STORAGES_EXECUTIVE_STORAGE SYSREQ_EDOC_STORAGES_FUNCTION SYSREQ_EDOC_STORAGES_INITIALIZED SYSREQ_EDOC_STORAGES_LOCAL_PATH SYSREQ_EDOC_STORAGES_SAPERION_DATABASE_NAME SYSREQ_EDOC_STORAGES_SEARCH_BY_TEXT SYSREQ_EDOC_STORAGES_SERVER_NAME SYSREQ_EDOC_STORAGES_SHARED_SOURCE_NAME SYSREQ_EDOC_STORAGES_TYPE SYSREQ_EDOC_TEXT_MODIFIED SYSREQ_EDOC_TYPE_ACT_CODE SYSREQ_EDOC_TYPE_ACT_DESCRIPTION SYSREQ_EDOC_TYPE_ACT_DESCRIPTION_LOCALIZE_ID SYSREQ_EDOC_TYPE_ACT_ON_EXECUTE SYSREQ_EDOC_TYPE_ACT_ON_EXECUTE_EXISTS SYSREQ_EDOC_TYPE_ACT_SECTION SYSREQ_EDOC_TYPE_ADD_PARAMS SYSREQ_EDOC_TYPE_COMMENT SYSREQ_EDOC_TYPE_EVENT_TEXT SYSREQ_EDOC_TYPE_NAME_IN_SINGULAR SYSREQ_EDOC_TYPE_NAME_IN_SINGULAR_LOCALIZE_ID SYSREQ_EDOC_TYPE_NAME_LOCALIZE_ID SYSREQ_EDOC_TYPE_NUMERATION_METHOD SYSREQ_EDOC_TYPE_PSEUDO_REQUISITE_CODE SYSREQ_EDOC_TYPE_REQ_CODE SYSREQ_EDOC_TYPE_REQ_DESCRIPTION SYSREQ_EDOC_TYPE_REQ_DESCRIPTION_LOCALIZE_ID SYSREQ_EDOC_TYPE_REQ_IS_LEADING SYSREQ_EDOC_TYPE_REQ_IS_REQUIRED SYSREQ_EDOC_TYPE_REQ_NUMBER SYSREQ_EDOC_TYPE_REQ_ON_CHANGE SYSREQ_EDOC_TYPE_REQ_ON_CHANGE_EXISTS SYSREQ_EDOC_TYPE_REQ_ON_SELECT SYSREQ_EDOC_TYPE_REQ_ON_SELECT_KIND SYSREQ_EDOC_TYPE_REQ_SECTION SYSREQ_EDOC_TYPE_VIEW_CARD SYSREQ_EDOC_TYPE_VIEW_CODE SYSREQ_EDOC_TYPE_VIEW_COMMENT SYSREQ_EDOC_TYPE_VIEW_IS_MAIN SYSREQ_EDOC_TYPE_VIEW_NAME SYSREQ_EDOC_TYPE_VIEW_NAME_LOCALIZE_ID SYSREQ_EDOC_VERSION_AUTHOR SYSREQ_EDOC_VERSION_CRC SYSREQ_EDOC_VERSION_DATA SYSREQ_EDOC_VERSION_EDITOR SYSREQ_EDOC_VERSION_EXPORT_DATE SYSREQ_EDOC_VERSION_EXPORTER SYSREQ_EDOC_VERSION_HIDDEN SYSREQ_EDOC_VERSION_LIFE_STAGE SYSREQ_EDOC_VERSION_MODIFIED SYSREQ_EDOC_VERSION_NOTE SYSREQ_EDOC_VERSION_SIGNATURE_TYPE SYSREQ_EDOC_VERSION_SIGNED SYSREQ_EDOC_VERSION_SIZE SYSREQ_EDOC_VERSION_SOURCE SYSREQ_EDOC_VERSION_TEXT_MODIFIED SYSREQ_EDOCKIND_DEFAULT_VERSION_STATE_CODE SYSREQ_FOLDER_KIND SYSREQ_FUNC_CATEGORY SYSREQ_FUNC_COMMENT SYSREQ_FUNC_GROUP SYSREQ_FUNC_GROUP_COMMENT SYSREQ_FUNC_GROUP_NUMBER SYSREQ_FUNC_HELP SYSREQ_FUNC_PARAM_DEF_VALUE SYSREQ_FUNC_PARAM_IDENT SYSREQ_FUNC_PARAM_NUMBER SYSREQ_FUNC_PARAM_TYPE SYSREQ_FUNC_TEXT SYSREQ_GROUP_CATEGORY SYSREQ_ID SYSREQ_LAST_UPDATE SYSREQ_LEADER_REFERENCE SYSREQ_LINE_NUMBER SYSREQ_MAIN_RECORD_ID SYSREQ_NAME SYSREQ_NAME_LOCALIZE_ID SYSREQ_NOTE SYSREQ_ORIGINAL_RECORD SYSREQ_OUR_FIRM SYSREQ_PROFILING_SETTINGS_BATCH_LOGING SYSREQ_PROFILING_SETTINGS_BATCH_SIZE SYSREQ_PROFILING_SETTINGS_PROFILING_ENABLED SYSREQ_PROFILING_SETTINGS_SQL_PROFILING_ENABLED SYSREQ_PROFILING_SETTINGS_START_LOGGED SYSREQ_RECORD_STATUS SYSREQ_REF_REQ_FIELD_NAME SYSREQ_REF_REQ_FORMAT SYSREQ_REF_REQ_GENERATED SYSREQ_REF_REQ_LENGTH SYSREQ_REF_REQ_PRECISION SYSREQ_REF_REQ_REFERENCE SYSREQ_REF_REQ_SECTION SYSREQ_REF_REQ_STORED SYSREQ_REF_REQ_TOKENS SYSREQ_REF_REQ_TYPE SYSREQ_REF_REQ_VIEW SYSREQ_REF_TYPE_ACT_CODE SYSREQ_REF_TYPE_ACT_DESCRIPTION SYSREQ_REF_TYPE_ACT_DESCRIPTION_LOCALIZE_ID SYSREQ_REF_TYPE_ACT_ON_EXECUTE SYSREQ_REF_TYPE_ACT_ON_EXECUTE_EXISTS SYSREQ_REF_TYPE_ACT_SECTION SYSREQ_REF_TYPE_ADD_PARAMS SYSREQ_REF_TYPE_COMMENT SYSREQ_REF_TYPE_COMMON_SETTINGS SYSREQ_REF_TYPE_DISPLAY_REQUISITE_NAME SYSREQ_REF_TYPE_EVENT_TEXT SYSREQ_REF_TYPE_MAIN_LEADING_REF SYSREQ_REF_TYPE_NAME_IN_SINGULAR SYSREQ_REF_TYPE_NAME_IN_SINGULAR_LOCALIZE_ID SYSREQ_REF_TYPE_NAME_LOCALIZE_ID SYSREQ_REF_TYPE_NUMERATION_METHOD SYSREQ_REF_TYPE_REQ_CODE SYSREQ_REF_TYPE_REQ_DESCRIPTION SYSREQ_REF_TYPE_REQ_DESCRIPTION_LOCALIZE_ID SYSREQ_REF_TYPE_REQ_IS_CONTROL SYSREQ_REF_TYPE_REQ_IS_FILTER SYSREQ_REF_TYPE_REQ_IS_LEADING SYSREQ_REF_TYPE_REQ_IS_REQUIRED SYSREQ_REF_TYPE_REQ_NUMBER SYSREQ_REF_TYPE_REQ_ON_CHANGE SYSREQ_REF_TYPE_REQ_ON_CHANGE_EXISTS SYSREQ_REF_TYPE_REQ_ON_SELECT SYSREQ_REF_TYPE_REQ_ON_SELECT_KIND SYSREQ_REF_TYPE_REQ_SECTION SYSREQ_REF_TYPE_VIEW_CARD SYSREQ_REF_TYPE_VIEW_CODE SYSREQ_REF_TYPE_VIEW_COMMENT SYSREQ_REF_TYPE_VIEW_IS_MAIN SYSREQ_REF_TYPE_VIEW_NAME SYSREQ_REF_TYPE_VIEW_NAME_LOCALIZE_ID SYSREQ_REFERENCE_TYPE_ID SYSREQ_STATE SYSREQ_STATЕ SYSREQ_SYSTEM_SETTINGS_VALUE SYSREQ_TYPE SYSREQ_UNIT SYSREQ_UNIT_ID SYSREQ_USER_GROUPS_GROUP_FULL_NAME SYSREQ_USER_GROUPS_GROUP_NAME SYSREQ_USER_GROUPS_GROUP_SERVER_NAME SYSREQ_USERS_ACCESS_RIGHTS SYSREQ_USERS_AUTHENTICATION SYSREQ_USERS_CATEGORY SYSREQ_USERS_COMPONENT SYSREQ_USERS_COMPONENT_USER_IS_PUBLIC SYSREQ_USERS_DOMAIN SYSREQ_USERS_FULL_USER_NAME SYSREQ_USERS_GROUP SYSREQ_USERS_IS_MAIN_SERVER SYSREQ_USERS_LOGIN SYSREQ_USERS_REFERENCE_USER_IS_PUBLIC SYSREQ_USERS_STATUS SYSREQ_USERS_USER_CERTIFICATE SYSREQ_USERS_USER_CERTIFICATE_INFO SYSREQ_USERS_USER_CERTIFICATE_PLUGIN_NAME SYSREQ_USERS_USER_CERTIFICATE_PLUGIN_VERSION SYSREQ_USERS_USER_CERTIFICATE_STATE SYSREQ_USERS_USER_CERTIFICATE_SUBJECT_NAME SYSREQ_USERS_USER_CERTIFICATE_THUMBPRINT SYSREQ_USERS_USER_DEFAULT_CERTIFICATE SYSREQ_USERS_USER_DESCRIPTION SYSREQ_USERS_USER_GLOBAL_NAME SYSREQ_USERS_USER_LOGIN SYSREQ_USERS_USER_MAIN_SERVER SYSREQ_USERS_USER_TYPE SYSREQ_WORK_RULES_FOLDER_ID RESULT_VAR_NAME RESULT_VAR_NAME_ENG AUTO_NUMERATION_RULE_ID CANT_CHANGE_ID_REQUISITE_RULE_ID CANT_CHANGE_OURFIRM_REQUISITE_RULE_ID CHECK_CHANGING_REFERENCE_RECORD_USE_RULE_ID CHECK_CODE_REQUISITE_RULE_ID CHECK_DELETING_REFERENCE_RECORD_USE_RULE_ID CHECK_FILTRATER_CHANGES_RULE_ID CHECK_RECORD_INTERVAL_RULE_ID CHECK_REFERENCE_INTERVAL_RULE_ID CHECK_REQUIRED_DATA_FULLNESS_RULE_ID CHECK_REQUIRED_REQUISITES_FULLNESS_RULE_ID MAKE_RECORD_UNRATIFIED_RULE_ID RESTORE_AUTO_NUMERATION_RULE_ID SET_FIRM_CONTEXT_FROM_RECORD_RULE_ID SET_FIRST_RECORD_IN_LIST_FORM_RULE_ID SET_IDSPS_VALUE_RULE_ID SET_NEXT_CODE_VALUE_RULE_ID SET_OURFIRM_BOUNDS_RULE_ID SET_OURFIRM_REQUISITE_RULE_ID SCRIPT_BLOCK_AFTER_FINISH_EVENT SCRIPT_BLOCK_BEFORE_START_EVENT SCRIPT_BLOCK_EXECUTION_RESULTS_PROPERTY SCRIPT_BLOCK_NAME_PROPERTY SCRIPT_BLOCK_SCRIPT_PROPERTY SUBTASK_BLOCK_ABORT_DEADLINE_PROPERTY SUBTASK_BLOCK_AFTER_FINISH_EVENT SUBTASK_BLOCK_ASSIGN_PARAMS_EVENT SUBTASK_BLOCK_ATTACHMENTS_PROPERTY SUBTASK_BLOCK_ATTACHMENTS_RIGHTS_GROUP_PROPERTY SUBTASK_BLOCK_ATTACHMENTS_RIGHTS_TYPE_PROPERTY SUBTASK_BLOCK_BEFORE_START_EVENT SUBTASK_BLOCK_CREATED_TASK_PROPERTY SUBTASK_BLOCK_CREATION_EVENT SUBTASK_BLOCK_DEADLINE_PROPERTY SUBTASK_BLOCK_IMPORTANCE_PROPERTY SUBTASK_BLOCK_INITIATOR_PROPERTY SUBTASK_BLOCK_IS_RELATIVE_ABORT_DEADLINE_PROPERTY SUBTASK_BLOCK_IS_RELATIVE_DEADLINE_PROPERTY SUBTASK_BLOCK_JOBS_TYPE_PROPERTY SUBTASK_BLOCK_NAME_PROPERTY SUBTASK_BLOCK_PARALLEL_ROUTE_PROPERTY SUBTASK_BLOCK_PERFORMERS_PROPERTY SUBTASK_BLOCK_RELATIVE_ABORT_DEADLINE_TYPE_PROPERTY SUBTASK_BLOCK_RELATIVE_DEADLINE_TYPE_PROPERTY SUBTASK_BLOCK_REQUIRE_SIGN_PROPERTY SUBTASK_BLOCK_STANDARD_ROUTE_PROPERTY SUBTASK_BLOCK_START_EVENT SUBTASK_BLOCK_STEP_CONTROL_PROPERTY SUBTASK_BLOCK_SUBJECT_PROPERTY SUBTASK_BLOCK_TASK_CONTROL_PROPERTY SUBTASK_BLOCK_TEXT_PROPERTY SUBTASK_BLOCK_UNLOCK_ATTACHMENTS_ON_STOP_PROPERTY SUBTASK_BLOCK_USE_STANDARD_ROUTE_PROPERTY SUBTASK_BLOCK_WAIT_FOR_TASK_COMPLETE_PROPERTY SYSCOMP_CONTROL_JOBS SYSCOMP_FOLDERS SYSCOMP_JOBS SYSCOMP_NOTICES SYSCOMP_TASKS SYSDLG_CREATE_EDOCUMENT SYSDLG_CREATE_EDOCUMENT_VERSION SYSDLG_CURRENT_PERIOD SYSDLG_EDIT_FUNCTION_HELP SYSDLG_EDOCUMENT_KINDS_FOR_TEMPLATE SYSDLG_EXPORT_MULTIPLE_EDOCUMENTS SYSDLG_EXPORT_SINGLE_EDOCUMENT SYSDLG_IMPORT_EDOCUMENT SYSDLG_MULTIPLE_SELECT SYSDLG_SETUP_ACCESS_RIGHTS SYSDLG_SETUP_DEFAULT_RIGHTS SYSDLG_SETUP_FILTER_CONDITION SYSDLG_SETUP_SIGN_RIGHTS SYSDLG_SETUP_TASK_OBSERVERS SYSDLG_SETUP_TASK_ROUTE SYSDLG_SETUP_USERS_LIST SYSDLG_SIGN_EDOCUMENT SYSDLG_SIGN_MULTIPLE_EDOCUMENTS SYSREF_ACCESS_RIGHTS_TYPES SYSREF_ADMINISTRATION_HISTORY SYSREF_ALL_AVAILABLE_COMPONENTS SYSREF_ALL_AVAILABLE_PRIVILEGES SYSREF_ALL_REPLICATING_COMPONENTS SYSREF_AVAILABLE_DEVELOPERS_COMPONENTS SYSREF_CALENDAR_EVENTS SYSREF_COMPONENT_TOKEN_HISTORY SYSREF_COMPONENT_TOKENS SYSREF_COMPONENTS SYSREF_CONSTANTS SYSREF_DATA_RECEIVE_PROTOCOL SYSREF_DATA_SEND_PROTOCOL SYSREF_DIALOGS SYSREF_DIALOGS_REQUISITES SYSREF_EDITORS SYSREF_EDOC_CARDS SYSREF_EDOC_TYPES SYSREF_EDOCUMENT_CARD_REQUISITES SYSREF_EDOCUMENT_CARD_TYPES SYSREF_EDOCUMENT_CARD_TYPES_REFERENCE SYSREF_EDOCUMENT_CARDS SYSREF_EDOCUMENT_HISTORY SYSREF_EDOCUMENT_KINDS SYSREF_EDOCUMENT_REQUISITES SYSREF_EDOCUMENT_SIGNATURES SYSREF_EDOCUMENT_TEMPLATES SYSREF_EDOCUMENT_TEXT_STORAGES SYSREF_EDOCUMENT_VIEWS SYSREF_FILTERER_SETUP_CONFLICTS SYSREF_FILTRATER_SETTING_CONFLICTS SYSREF_FOLDER_HISTORY SYSREF_FOLDERS SYSREF_FUNCTION_GROUPS SYSREF_FUNCTION_PARAMS SYSREF_FUNCTIONS SYSREF_JOB_HISTORY SYSREF_LINKS SYSREF_LOCALIZATION_DICTIONARY SYSREF_LOCALIZATION_LANGUAGES SYSREF_MODULES SYSREF_PRIVILEGES SYSREF_RECORD_HISTORY SYSREF_REFERENCE_REQUISITES SYSREF_REFERENCE_TYPE_VIEWS SYSREF_REFERENCE_TYPES SYSREF_REFERENCES SYSREF_REFERENCES_REQUISITES SYSREF_REMOTE_SERVERS SYSREF_REPLICATION_SESSIONS_LOG SYSREF_REPLICATION_SESSIONS_PROTOCOL SYSREF_REPORTS SYSREF_ROLES SYSREF_ROUTE_BLOCK_GROUPS SYSREF_ROUTE_BLOCKS SYSREF_SCRIPTS SYSREF_SEARCHES SYSREF_SERVER_EVENTS SYSREF_SERVER_EVENTS_HISTORY SYSREF_STANDARD_ROUTE_GROUPS SYSREF_STANDARD_ROUTES SYSREF_STATUSES SYSREF_SYSTEM_SETTINGS SYSREF_TASK_HISTORY SYSREF_TASK_KIND_GROUPS SYSREF_TASK_KINDS SYSREF_TASK_RIGHTS SYSREF_TASK_SIGNATURES SYSREF_TASKS SYSREF_UNITS SYSREF_USER_GROUPS SYSREF_USER_GROUPS_REFERENCE SYSREF_USER_SUBSTITUTION SYSREF_USERS SYSREF_USERS_REFERENCE SYSREF_VIEWERS SYSREF_WORKING_TIME_CALENDARS ACCESS_RIGHTS_TABLE_NAME EDMS_ACCESS_TABLE_NAME EDOC_TYPES_TABLE_NAME TEST_DEV_DB_NAME TEST_DEV_SYSTEM_CODE TEST_EDMS_DB_NAME TEST_EDMS_MAIN_CODE TEST_EDMS_MAIN_DB_NAME TEST_EDMS_SECOND_CODE TEST_EDMS_SECOND_DB_NAME TEST_EDMS_SYSTEM_CODE TEST_ISB5_MAIN_CODE TEST_ISB5_SECOND_CODE TEST_SQL_SERVER_2005_NAME TEST_SQL_SERVER_NAME ATTENTION_CAPTION cbsCommandLinks cbsDefault CONFIRMATION_CAPTION ERROR_CAPTION INFORMATION_CAPTION mrCancel mrOk EDOC_VERSION_ACTIVE_STAGE_CODE EDOC_VERSION_DESIGN_STAGE_CODE EDOC_VERSION_OBSOLETE_STAGE_CODE cpDataEnciphermentEnabled cpDigitalSignatureEnabled cpID cpIssuer cpPluginVersion cpSerial cpSubjectName cpSubjSimpleName cpValidFromDate cpValidToDate ISBL_SYNTAX NO_SYNTAX XML_SYNTAX WAIT_BLOCK_AFTER_FINISH_EVENT WAIT_BLOCK_BEFORE_START_EVENT WAIT_BLOCK_DEADLINE_PROPERTY WAIT_BLOCK_IS_RELATIVE_DEADLINE_PROPERTY WAIT_BLOCK_NAME_PROPERTY WAIT_BLOCK_RELATIVE_DEADLINE_TYPE_PROPERTY SYSRES_COMMON SYSRES_CONST SYSRES_MBFUNC SYSRES_SBDATA SYSRES_SBGUI SYSRES_SBINTF SYSRES_SBREFDSC SYSRES_SQLERRORS SYSRES_SYSCOMP atUser atGroup atRole aemEnabledAlways aemDisabledAlways aemEnabledOnBrowse aemEnabledOnEdit aemDisabledOnBrowseEmpty apBegin apEnd alLeft alRight asmNever asmNoButCustomize asmAsLastTime asmYesButCustomize asmAlways cirCommon cirRevoked ctSignature ctEncode ctSignatureEncode clbUnchecked clbChecked clbGrayed ceISB ceAlways ceNever ctDocument ctReference ctScript ctUnknown ctReport ctDialog ctFunction ctFolder ctEDocument ctTask ctJob ctNotice ctControlJob cfInternal cfDisplay ciUnspecified ciWrite ciRead ckFolder ckEDocument ckTask ckJob ckComponentToken ckAny ckReference ckScript ckReport ckDialog ctISBLEditor ctBevel ctButton ctCheckListBox ctComboBox ctComboEdit ctGrid ctDBCheckBox ctDBComboBox ctDBEdit ctDBEllipsis ctDBMemo ctDBNavigator ctDBRadioGroup ctDBStatusLabel ctEdit ctGroupBox ctInplaceHint ctMemo ctPanel ctListBox ctRadioButton ctRichEdit ctTabSheet ctWebBrowser ctImage ctHyperLink ctLabel ctDBMultiEllipsis ctRibbon ctRichView ctInnerPanel ctPanelGroup ctBitButton cctDate cctInteger cctNumeric cctPick cctReference cctString cctText cltInternal cltPrimary cltGUI dseBeforeOpen dseAfterOpen dseBeforeClose dseAfterClose dseOnValidDelete dseBeforeDelete dseAfterDelete dseAfterDeleteOutOfTransaction dseOnDeleteError dseBeforeInsert dseAfterInsert dseOnValidUpdate dseBeforeUpdate dseOnUpdateRatifiedRecord dseAfterUpdate dseAfterUpdateOutOfTransaction dseOnUpdateError dseAfterScroll dseOnOpenRecord dseOnCloseRecord dseBeforeCancel dseAfterCancel dseOnUpdateDeadlockError dseBeforeDetailUpdate dseOnPrepareUpdate dseOnAnyRequisiteChange dssEdit dssInsert dssBrowse dssInActive dftDate dftShortDate dftDateTime dftTimeStamp dotDays dotHours dotMinutes dotSeconds dtkndLocal dtkndUTC arNone arView arEdit arFull ddaView ddaEdit emLock emEdit emSign emExportWithLock emImportWithUnlock emChangeVersionNote emOpenForModify emChangeLifeStage emDelete emCreateVersion emImport emUnlockExportedWithLock emStart emAbort emReInit emMarkAsReaded emMarkAsUnreaded emPerform emAccept emResume emChangeRights emEditRoute emEditObserver emRecoveryFromLocalCopy emChangeWorkAccessType emChangeEncodeTypeToCertificate emChangeEncodeTypeToPassword emChangeEncodeTypeToNone emChangeEncodeTypeToCertificatePassword emChangeStandardRoute emGetText emOpenForView emMoveToStorage emCreateObject emChangeVersionHidden emDeleteVersion emChangeLifeCycleStage emApprovingSign emExport emContinue emLockFromEdit emUnLockForEdit emLockForServer emUnlockFromServer emDelegateAccessRights emReEncode ecotFile ecotProcess eaGet eaCopy eaCreate eaCreateStandardRoute edltAll edltNothing edltQuery essmText essmCard esvtLast esvtLastActive esvtSpecified edsfExecutive edsfArchive edstSQLServer edstFile edvstNone edvstEDocumentVersionCopy edvstFile edvstTemplate edvstScannedFile vsDefault vsDesign vsActive vsObsolete etNone etCertificate etPassword etCertificatePassword ecException ecWarning ecInformation estAll estApprovingOnly evtLast evtLastActive evtQuery fdtString fdtNumeric fdtInteger fdtDate fdtText fdtUnknown fdtWideString fdtLargeInteger ftInbox ftOutbox ftFavorites ftCommonFolder ftUserFolder ftComponents ftQuickLaunch ftShortcuts ftSearch grhAuto grhX1 grhX2 grhX3 hltText hltRTF hltHTML iffBMP iffJPEG iffMultiPageTIFF iffSinglePageTIFF iffTIFF iffPNG im8bGrayscale im24bRGB im1bMonochrome itBMP itJPEG itWMF itPNG ikhInformation ikhWarning ikhError ikhNoIcon icUnknown icScript icFunction icIntegratedReport icAnalyticReport icDataSetEventHandler icActionHandler icFormEventHandler icLookUpEventHandler icRequisiteChangeEventHandler icBeforeSearchEventHandler icRoleCalculation icSelectRouteEventHandler icBlockPropertyCalculation icBlockQueryParamsEventHandler icChangeSearchResultEventHandler icBlockEventHandler icSubTaskInitEventHandler icEDocDataSetEventHandler icEDocLookUpEventHandler icEDocActionHandler icEDocFormEventHandler icEDocRequisiteChangeEventHandler icStructuredConversionRule icStructuredConversionEventBefore icStructuredConversionEventAfter icWizardEventHandler icWizardFinishEventHandler icWizardStepEventHandler icWizardStepFinishEventHandler icWizardActionEnableEventHandler icWizardActionExecuteEventHandler icCreateJobsHandler icCreateNoticesHandler icBeforeLookUpEventHandler icAfterLookUpEventHandler icTaskAbortEventHandler icWorkflowBlockActionHandler icDialogDataSetEventHandler icDialogActionHandler icDialogLookUpEventHandler icDialogRequisiteChangeEventHandler icDialogFormEventHandler icDialogValidCloseEventHandler icBlockFormEventHandler icTaskFormEventHandler icReferenceMethod icEDocMethod icDialogMethod icProcessMessageHandler isShow isHide isByUserSettings jkJob jkNotice jkControlJob jtInner jtLeft jtRight jtFull jtCross lbpAbove lbpBelow lbpLeft lbpRight eltPerConnection eltPerUser sfcUndefined sfcBlack sfcGreen sfcRed sfcBlue sfcOrange sfcLilac sfsItalic sfsStrikeout sfsNormal ldctStandardRoute ldctWizard ldctScript ldctFunction ldctRouteBlock ldctIntegratedReport ldctAnalyticReport ldctReferenceType ldctEDocumentType ldctDialog ldctServerEvents mrcrtNone mrcrtUser mrcrtMaximal mrcrtCustom vtEqual vtGreaterOrEqual vtLessOrEqual vtRange rdYesterday rdToday rdTomorrow rdThisWeek rdThisMonth rdThisYear rdNextMonth rdNextWeek rdLastWeek rdLastMonth rdWindow rdFile rdPrinter rdtString rdtNumeric rdtInteger rdtDate rdtReference rdtAccount rdtText rdtPick rdtUnknown rdtLargeInteger rdtDocument reOnChange reOnChangeValues ttGlobal ttLocal ttUser ttSystem ssmBrowse ssmSelect ssmMultiSelect ssmBrowseModal smSelect smLike smCard stNone stAuthenticating stApproving sctString sctStream sstAnsiSort sstNaturalSort svtEqual svtContain soatString soatNumeric soatInteger soatDatetime soatReferenceRecord soatText soatPick soatBoolean soatEDocument soatAccount soatIntegerCollection soatNumericCollection soatStringCollection soatPickCollection soatDatetimeCollection soatBooleanCollection soatReferenceRecordCollection soatEDocumentCollection soatAccountCollection soatContents soatUnknown tarAbortByUser tarAbortByWorkflowException tvtAllWords tvtExactPhrase tvtAnyWord usNone usCompleted usRedSquare usBlueSquare usYellowSquare usGreenSquare usOrangeSquare usPurpleSquare usFollowUp utUnknown utUser utDeveloper utAdministrator utSystemDeveloper utDisconnected btAnd btDetailAnd btOr btNotOr btOnly vmView vmSelect vmNavigation vsmSingle vsmMultiple vsmMultipleCheck vsmNoSelection wfatPrevious wfatNext wfatCancel wfatFinish wfepUndefined wfepText3 wfepText6 wfepText9 wfepSpinEdit wfepDropDown wfepRadioGroup wfepFlag wfepText12 wfepText15 wfepText18 wfepText21 wfepText24 wfepText27 wfepText30 wfepRadioGroupColumn1 wfepRadioGroupColumn2 wfepRadioGroupColumn3 wfetQueryParameter wfetText wfetDelimiter wfetLabel wptString wptInteger wptNumeric wptBoolean wptDateTime wptPick wptText wptUser wptUserList wptEDocumentInfo wptEDocumentInfoList wptReferenceRecordInfo wptReferenceRecordInfoList wptFolderInfo wptTaskInfo wptContents wptFileName wptDate wsrComplete wsrGoNext wsrGoPrevious wsrCustom wsrCancel wsrGoFinal wstForm wstEDocument wstTaskCard wstReferenceRecordCard wstFinal waAll waPerformers waManual wsbStart wsbFinish wsbNotice wsbStep wsbDecision wsbWait wsbMonitor wsbScript wsbConnector wsbSubTask wsbLifeCycleStage wsbPause wdtInteger wdtFloat wdtString wdtPick wdtDateTime wdtBoolean wdtTask wdtJob wdtFolder wdtEDocument wdtReferenceRecord wdtUser wdtGroup wdtRole wdtIntegerCollection wdtFloatCollection wdtStringCollection wdtPickCollection wdtDateTimeCollection wdtBooleanCollection wdtTaskCollection wdtJobCollection wdtFolderCollection wdtEDocumentCollection wdtReferenceRecordCollection wdtUserCollection wdtGroupCollection wdtRoleCollection wdtContents wdtUserList wdtSearchDescription wdtDeadLine wdtPickSet wdtAccountCollection wiLow wiNormal wiHigh wrtSoft wrtHard wsInit wsRunning wsDone wsControlled wsAborted wsContinued wtmFull wtmFromCurrent wtmOnlyCurrent ",
									class: "AltState Application CallType ComponentTokens CreatedJobs CreatedNotices ControlState DialogResult Dialogs EDocuments EDocumentVersionSource Folders GlobalIDs Job Jobs InputValue LookUpReference LookUpRequisiteNames LookUpSearch Object ParentComponent Processes References Requisite ReportName Reports Result Scripts Searches SelectedAttachments SelectedItems SelectMode Sender ServerEvents ServiceFactory ShiftState SubTask SystemDialogs Tasks Wizard Wizards Work ВызовСпособ ИмяОтчета РеквЗнач ",
									literal: "null true false nil "
							}
								, a = {
									begin: "\\.\\s*" + e.UNDERSCORE_IDENT_RE,
									keywords: s,
									relevance: 0
							}
								, l = {
									className: "type",
									begin: ":[ \\t]*(" + "IApplication IAccessRights IAccountRepository IAccountSelectionRestrictions IAction IActionList IAdministrationHistoryDescription IAnchors IApplication IArchiveInfo IAttachment IAttachmentList ICheckListBox ICheckPointedList IColumn IComponent IComponentDescription IComponentToken IComponentTokenFactory IComponentTokenInfo ICompRecordInfo IConnection IContents IControl IControlJob IControlJobInfo IControlList ICrypto ICrypto2 ICustomJob ICustomJobInfo ICustomListBox ICustomObjectWizardStep ICustomWork ICustomWorkInfo IDataSet IDataSetAccessInfo IDataSigner IDateCriterion IDateRequisite IDateRequisiteDescription IDateValue IDeaAccessRights IDeaObjectInfo IDevelopmentComponentLock IDialog IDialogFactory IDialogPickRequisiteItems IDialogsFactory IDICSFactory IDocRequisite IDocumentInfo IDualListDialog IECertificate IECertificateInfo IECertificates IEditControl IEditorForm IEdmsExplorer IEdmsObject IEdmsObjectDescription IEdmsObjectFactory IEdmsObjectInfo IEDocument IEDocumentAccessRights IEDocumentDescription IEDocumentEditor IEDocumentFactory IEDocumentInfo IEDocumentStorage IEDocumentVersion IEDocumentVersionListDialog IEDocumentVersionSource IEDocumentWizardStep IEDocVerSignature IEDocVersionState IEnabledMode IEncodeProvider IEncrypter IEvent IEventList IException IExternalEvents IExternalHandler IFactory IField IFileDialog IFolder IFolderDescription IFolderDialog IFolderFactory IFolderInfo IForEach IForm IFormTitle IFormWizardStep IGlobalIDFactory IGlobalIDInfo IGrid IHasher IHistoryDescription IHyperLinkControl IImageButton IImageControl IInnerPanel IInplaceHint IIntegerCriterion IIntegerList IIntegerRequisite IIntegerValue IISBLEditorForm IJob IJobDescription IJobFactory IJobForm IJobInfo ILabelControl ILargeIntegerCriterion ILargeIntegerRequisite ILargeIntegerValue ILicenseInfo ILifeCycleStage IList IListBox ILocalIDInfo ILocalization ILock IMemoryDataSet IMessagingFactory IMetadataRepository INotice INoticeInfo INumericCriterion INumericRequisite INumericValue IObject IObjectDescription IObjectImporter IObjectInfo IObserver IPanelGroup IPickCriterion IPickProperty IPickRequisite IPickRequisiteDescription IPickRequisiteItem IPickRequisiteItems IPickValue IPrivilege IPrivilegeList IProcess IProcessFactory IProcessMessage IProgress IProperty IPropertyChangeEvent IQuery IReference IReferenceCriterion IReferenceEnabledMode IReferenceFactory IReferenceHistoryDescription IReferenceInfo IReferenceRecordCardWizardStep IReferenceRequisiteDescription IReferencesFactory IReferenceValue IRefRequisite IReport IReportFactory IRequisite IRequisiteDescription IRequisiteDescriptionList IRequisiteFactory IRichEdit IRouteStep IRule IRuleList ISchemeBlock IScript IScriptFactory ISearchCriteria ISearchCriterion ISearchDescription ISearchFactory ISearchFolderInfo ISearchForObjectDescription ISearchResultRestrictions ISecuredContext ISelectDialog IServerEvent IServerEventFactory IServiceDialog IServiceFactory ISignature ISignProvider ISignProvider2 ISignProvider3 ISimpleCriterion IStringCriterion IStringList IStringRequisite IStringRequisiteDescription IStringValue ISystemDialogsFactory ISystemInfo ITabSheet ITask ITaskAbortReasonInfo ITaskCardWizardStep ITaskDescription ITaskFactory ITaskInfo ITaskRoute ITextCriterion ITextRequisite ITextValue ITreeListSelectDialog IUser IUserList IValue IView IWebBrowserControl IWizard IWizardAction IWizardFactory IWizardFormElement IWizardParam IWizardPickParam IWizardReferenceParam IWizardStep IWorkAccessRights IWorkDescription IWorkflowAskableParam IWorkflowAskableParams IWorkflowBlock IWorkflowBlockResult IWorkflowEnabledMode IWorkflowParam IWorkflowPickParam IWorkflowReferenceParam IWorkState IWorkTreeCustomNode IWorkTreeJobNode IWorkTreeTaskNode IXMLEditorForm SBCrypto ".trim().replace(/\s/g, "|") + ")",
									end: "[ \\t]*=",
									excludeEnd: !0
							}
								, c = {
									className: "variable",
									keywords: s,
									begin: t,
									relevance: 0,
									contains: [l, a]
							}
								, d = "[A-Za-zА-Яа-яёЁ_][A-Za-zА-Яа-яёЁ_0-9]*\\(";
							return {
									name: "ISBL",
									case_insensitive: !0,
									keywords: s,
									illegal: "\\$|\\?|%|,|;$|~|#|@|</",
									contains: [{
											className: "function",
											begin: d,
											end: "\\)$",
											returnBegin: !0,
											keywords: s,
											illegal: "[\\[\\]\\|\\$\\?%,~#@]",
											contains: [{
													className: "title",
													keywords: {
															$pattern: t,
															built_in: "AddSubString AdjustLineBreaks AmountInWords Analysis ArrayDimCount ArrayHighBound ArrayLowBound ArrayOf ArrayReDim Assert Assigned BeginOfMonth BeginOfPeriod BuildProfilingOperationAnalysis CallProcedure CanReadFile CArrayElement CDataSetRequisite ChangeDate ChangeReferenceDataset Char CharPos CheckParam CheckParamValue CompareStrings ConstantExists ControlState ConvertDateStr Copy CopyFile CreateArray CreateCachedReference CreateConnection CreateDialog CreateDualListDialog CreateEditor CreateException CreateFile CreateFolderDialog CreateInputDialog CreateLinkFile CreateList CreateLock CreateMemoryDataSet CreateObject CreateOpenDialog CreateProgress CreateQuery CreateReference CreateReport CreateSaveDialog CreateScript CreateSQLPivotFunction CreateStringList CreateTreeListSelectDialog CSelectSQL CSQL CSubString CurrentUserID CurrentUserName CurrentVersion DataSetLocateEx DateDiff DateTimeDiff DateToStr DayOfWeek DeleteFile DirectoryExists DisableCheckAccessRights DisableCheckFullShowingRestriction DisableMassTaskSendingRestrictions DropTable DupeString EditText EnableCheckAccessRights EnableCheckFullShowingRestriction EnableMassTaskSendingRestrictions EndOfMonth EndOfPeriod ExceptionExists ExceptionsOff ExceptionsOn Execute ExecuteProcess Exit ExpandEnvironmentVariables ExtractFileDrive ExtractFileExt ExtractFileName ExtractFilePath ExtractParams FileExists FileSize FindFile FindSubString FirmContext ForceDirectories Format FormatDate FormatNumeric FormatSQLDate FormatString FreeException GetComponent GetComponentLaunchParam GetConstant GetLastException GetReferenceRecord GetRefTypeByRefID GetTableID GetTempFolder IfThen In IndexOf InputDialog InputDialogEx InteractiveMode IsFileLocked IsGraphicFile IsNumeric Length LoadString LoadStringFmt LocalTimeToUTC LowerCase Max MessageBox MessageBoxEx MimeDecodeBinary MimeDecodeString MimeEncodeBinary MimeEncodeString Min MoneyInWords MoveFile NewID Now OpenFile Ord Precision Raise ReadCertificateFromFile ReadFile ReferenceCodeByID ReferenceNumber ReferenceRequisiteMode ReferenceRequisiteValue RegionDateSettings RegionNumberSettings RegionTimeSettings RegRead RegWrite RenameFile Replace Round SelectServerCode SelectSQL ServerDateTime SetConstant SetManagedFolderFieldsState ShowConstantsInputDialog ShowMessage Sleep Split SQL SQL2XLSTAB SQLProfilingSendReport StrToDate SubString SubStringCount SystemSetting Time TimeDiff Today Transliterate Trim UpperCase UserStatus UTCToLocalTime ValidateXML VarIsClear VarIsEmpty VarIsNull WorkTimeDiff WriteFile WriteFileEx WriteObjectHistory Анализ БазаДанных БлокЕсть БлокЕстьРасш БлокИнфо БлокСнять БлокСнятьРасш БлокУстановить Ввод ВводМеню ВедС ВедСпр ВерхняяГраницаМассива ВнешПрогр Восст ВременнаяПапка Время ВыборSQL ВыбратьЗапись ВыделитьСтр Вызвать Выполнить ВыпПрогр ГрафическийФайл ГруппаДополнительно ДатаВремяСерв ДеньНедели ДиалогДаНет ДлинаСтр ДобПодстр ЕПусто ЕслиТо ЕЧисло ЗамПодстр ЗаписьСправочника ЗначПоляСпр ИДТипСпр ИзвлечьДиск ИзвлечьИмяФайла ИзвлечьПуть ИзвлечьРасширение ИзмДат ИзменитьРазмерМассива ИзмеренийМассива ИмяОрг ИмяПоляСпр Индекс ИндикаторЗакрыть ИндикаторОткрыть ИндикаторШаг ИнтерактивныйРежим ИтогТблСпр КодВидВедСпр КодВидСпрПоИД КодПоAnalit КодСимвола КодСпр КолПодстр КолПроп КонМес Конст КонстЕсть КонстЗнач КонТран КопироватьФайл КопияСтр КПериод КСтрТблСпр Макс МаксСтрТблСпр Массив Меню МенюРасш Мин НаборДанныхНайтиРасш НаимВидСпр НаимПоAnalit НаимСпр НастроитьПереводыСтрок НачМес НачТран НижняяГраницаМассива НомерСпр НПериод Окно Окр Окружение ОтлИнфДобавить ОтлИнфУдалить Отчет ОтчетАнал ОтчетИнт ПапкаСуществует Пауза ПВыборSQL ПереименоватьФайл Переменные ПереместитьФайл Подстр ПоискПодстр ПоискСтр ПолучитьИДТаблицы ПользовательДополнительно ПользовательИД ПользовательИмя ПользовательСтатус Прервать ПроверитьПараметр ПроверитьПараметрЗнач ПроверитьУсловие РазбСтр РазнВремя РазнДат РазнДатаВремя РазнРабВремя РегУстВрем РегУстДат РегУстЧсл РедТекст РеестрЗапись РеестрСписокИменПарам РеестрЧтение РеквСпр РеквСпрПр Сегодня Сейчас Сервер СерверПроцессИД СертификатФайлСчитать СжПроб Символ СистемаДиректумКод СистемаИнформация СистемаКод Содержит СоединениеЗакрыть СоединениеОткрыть СоздатьДиалог СоздатьДиалогВыбораИзДвухСписков СоздатьДиалогВыбораПапки СоздатьДиалогОткрытияФайла СоздатьДиалогСохраненияФайла СоздатьЗапрос СоздатьИндикатор СоздатьИсключение СоздатьКэшированныйСправочник СоздатьМассив СоздатьНаборДанных СоздатьОбъект СоздатьОтчет СоздатьПапку СоздатьРедактор СоздатьСоединение СоздатьСписок СоздатьСписокСтрок СоздатьСправочник СоздатьСценарий СоздСпр СостСпр Сохр СохрСпр СписокСистем Спр Справочник СпрБлокЕсть СпрБлокСнять СпрБлокСнятьРасш СпрБлокУстановить СпрИзмНабДан СпрКод СпрНомер СпрОбновить СпрОткрыть СпрОтменить СпрПарам СпрПолеЗнач СпрПолеИмя СпрРекв СпрРеквВведЗн СпрРеквНовые СпрРеквПр СпрРеквПредЗн СпрРеквРежим СпрРеквТипТекст СпрСоздать СпрСост СпрСохранить СпрТблИтог СпрТблСтр СпрТблСтрКол СпрТблСтрМакс СпрТблСтрМин СпрТблСтрПред СпрТблСтрСлед СпрТблСтрСозд СпрТблСтрУд СпрТекПредст СпрУдалить СравнитьСтр СтрВерхРегистр СтрНижнРегистр СтрТблСпр СумПроп Сценарий СценарийПарам ТекВерсия ТекОрг Точн Тран Транслитерация УдалитьТаблицу УдалитьФайл УдСпр УдСтрТблСпр Уст УстановкиКонстант ФайлАтрибутСчитать ФайлАтрибутУстановить ФайлВремя ФайлВремяУстановить ФайлВыбрать ФайлЗанят ФайлЗаписать ФайлИскать ФайлКопировать ФайлМожноЧитать ФайлОткрыть ФайлПереименовать ФайлПерекодировать ФайлПереместить ФайлПросмотреть ФайлРазмер ФайлСоздать ФайлСсылкаСоздать ФайлСуществует ФайлСчитать ФайлУдалить ФмтSQLДат ФмтДат ФмтСтр ФмтЧсл Формат ЦМассивЭлемент ЦНаборДанныхРеквизит ЦПодстр "
													},
													begin: d,
													end: "\\(",
													returnBegin: !0,
													excludeEnd: !0
											}, a, c, i, n, o]
									}, l, a, c, i, n, o]
							}
					}
			}
			,
			6829: e=>{
					var t = "[0-9](_*[0-9])*"
						, n = `\\.(${t})`
						, i = "[0-9a-fA-F](_*[0-9a-fA-F])*"
						, r = {
							className: "number",
							variants: [{
									begin: `(\\b(${t})((${n})|\\.)?|(${n}))[eE][+-]?(${t})[fFdD]?\\b`
							}, {
									begin: `\\b(${t})((${n})[fFdD]?\\b|\\.([fFdD]\\b)?)`
							}, {
									begin: `(${n})[fFdD]?\\b`
							}, {
									begin: `\\b(${t})[fFdD]\\b`
							}, {
									begin: `\\b0[xX]((${i})\\.?|(${i})?\\.(${i}))[pP][+-]?(${t})[fFdD]?\\b`
							}, {
									begin: "\\b(0|[1-9](_*[0-9])*)[lL]?\\b"
							}, {
									begin: `\\b0[xX](${i})[lL]?\\b`
							}, {
									begin: "\\b0(_*[0-7])*[lL]?\\b"
							}, {
									begin: "\\b0[bB][01](_*[01])*[lL]?\\b"
							}],
							relevance: 0
					};
					function recurRegex(e, t, n) {
							return -1 === n ? "" : e.replace(t, (i=>recurRegex(e, t, n - 1)))
					}
					e.exports = function(e) {
							const t = e.regex
								, n = "[À-ʸa-zA-Z_$][À-ʸa-zA-Z_$0-9]*"
								, i = n + recurRegex("(?:<" + n + "~~~(?:\\s*,\\s*" + n + "~~~)*>)?", /~~~/g, 2)
								, o = {
									keyword: ["synchronized", "abstract", "private", "var", "static", "if", "const ", "for", "while", "strictfp", "finally", "protected", "import", "native", "final", "void", "enum", "else", "break", "transient", "catch", "instanceof", "volatile", "case", "assert", "package", "default", "public", "try", "switch", "continue", "throws", "protected", "public", "private", "module", "requires", "exports", "do", "sealed", "yield", "permits"],
									literal: ["false", "true", "null"],
									type: ["char", "boolean", "long", "float", "int", "byte", "short", "double"],
									built_in: ["super", "this"]
							}
								, s = {
									className: "meta",
									begin: "@" + n,
									contains: [{
											begin: /\(/,
											end: /\)/,
											contains: ["self"]
									}]
							}
								, a = {
									className: "params",
									begin: /\(/,
									end: /\)/,
									keywords: o,
									relevance: 0,
									contains: [e.C_BLOCK_COMMENT_MODE],
									endsParent: !0
							};
							return {
									name: "Java",
									aliases: ["jsp"],
									keywords: o,
									illegal: /<\/|#/,
									contains: [e.COMMENT("/\\*\\*", "\\*/", {
											relevance: 0,
											contains: [{
													begin: /\w+@/,
													relevance: 0
											}, {
													className: "doctag",
													begin: "@[A-Za-z]+"
											}]
									}), {
											begin: /import java\.[a-z]+\./,
											keywords: "import",
											relevance: 2
									}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, {
											begin: /"""/,
											end: /"""/,
											className: "string",
											contains: [e.BACKSLASH_ESCAPE]
									}, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, {
											match: [/\b(?:class|interface|enum|extends|implements|new)/, /\s+/, n],
											className: {
													1: "keyword",
													3: "title.class"
											}
									}, {
											match: /non-sealed/,
											scope: "keyword"
									}, {
											begin: [t.concat(/(?!else)/, n), /\s+/, n, /\s+/, /=(?!=)/],
											className: {
													1: "type",
													3: "variable",
													5: "operator"
											}
									}, {
											begin: [/record/, /\s+/, n],
											className: {
													1: "keyword",
													3: "title.class"
											},
											contains: [a, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
									}, {
											beginKeywords: "new throw return else",
											relevance: 0
									}, {
											begin: ["(?:" + i + "\\s+)", e.UNDERSCORE_IDENT_RE, /\s*(?=\()/],
											className: {
													2: "title.function"
											},
											keywords: o,
											contains: [{
													className: "params",
													begin: /\(/,
													end: /\)/,
													keywords: o,
													relevance: 0,
													contains: [s, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, r, e.C_BLOCK_COMMENT_MODE]
											}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
									}, r, s]
							}
					}
			}
			,
			5739: e=>{
					const t = "[A-Za-z$_][0-9A-Za-z$_]*"
						, n = ["as", "in", "of", "if", "for", "while", "finally", "var", "new", "function", "do", "return", "void", "else", "break", "catch", "instanceof", "with", "throw", "case", "default", "try", "switch", "continue", "typeof", "delete", "let", "yield", "const", "class", "debugger", "async", "await", "static", "import", "from", "export", "extends"]
						, i = ["true", "false", "null", "undefined", "NaN", "Infinity"]
						, r = ["Object", "Function", "Boolean", "Symbol", "Math", "Date", "Number", "BigInt", "String", "RegExp", "Array", "Float32Array", "Float64Array", "Int8Array", "Uint8Array", "Uint8ClampedArray", "Int16Array", "Int32Array", "Uint16Array", "Uint32Array", "BigInt64Array", "BigUint64Array", "Set", "Map", "WeakSet", "WeakMap", "ArrayBuffer", "SharedArrayBuffer", "Atomics", "DataView", "JSON", "Promise", "Generator", "GeneratorFunction", "AsyncFunction", "Reflect", "Proxy", "Intl", "WebAssembly"]
						, o = ["Error", "EvalError", "InternalError", "RangeError", "ReferenceError", "SyntaxError", "TypeError", "URIError"]
						, s = ["setInterval", "setTimeout", "clearInterval", "clearTimeout", "require", "exports", "eval", "isFinite", "isNaN", "parseFloat", "parseInt", "decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "escape", "unescape"]
						, a = ["arguments", "this", "super", "console", "window", "document", "localStorage", "module", "global"]
						, l = [].concat(s, r, o);
					e.exports = function(e) {
							const c = e.regex
								, d = t
								, p = "<>"
								, u = "</>"
								, h = {
									begin: /<[A-Za-z0-9\\._:-]+/,
									end: /\/[A-Za-z0-9\\._:-]+>|\/>/,
									isTrulyOpeningTag: (e,t)=>{
											const n = e[0].length + e.index
												, i = e.input[n];
											if ("<" === i || "," === i)
													return void t.ignoreMatch();
											let r;
											">" === i && (((e,{after: t})=>{
													const n = "</" + e[0].slice(1);
													return -1 !== e.input.indexOf(n, t)
											}
											)(e, {
													after: n
											}) || t.ignoreMatch());
											const o = e.input.substring(n);
											((r = o.match(/^\s*=/)) || (r = o.match(/^\s+extends\s+/)) && 0 === r.index) && t.ignoreMatch()
									}
							}
								, m = {
									$pattern: t,
									keyword: n,
									literal: i,
									built_in: l,
									"variable.language": a
							}
								, g = "[0-9](_?[0-9])*"
								, _ = `\\.(${g})`
								, f = "0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*"
								, y = {
									className: "number",
									variants: [{
											begin: `(\\b(${f})((${_})|\\.)?|(${_}))[eE][+-]?(${g})\\b`
									}, {
											begin: `\\b(${f})\\b((${_})\\b|\\.)?|(${_})\\b`
									}, {
											begin: "\\b(0|[1-9](_?[0-9])*)n\\b"
									}, {
											begin: "\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b"
									}, {
											begin: "\\b0[bB][0-1](_?[0-1])*n?\\b"
									}, {
											begin: "\\b0[oO][0-7](_?[0-7])*n?\\b"
									}, {
											begin: "\\b0[0-7]+n?\\b"
									}],
									relevance: 0
							}
								, v = {
									className: "subst",
									begin: "\\$\\{",
									end: "\\}",
									keywords: m,
									contains: []
							}
								, b = {
									begin: "html`",
									end: "",
									starts: {
											end: "`",
											returnEnd: !1,
											contains: [e.BACKSLASH_ESCAPE, v],
											subLanguage: "xml"
									}
							}
								, S = {
									begin: "css`",
									end: "",
									starts: {
											end: "`",
											returnEnd: !1,
											contains: [e.BACKSLASH_ESCAPE, v],
											subLanguage: "css"
									}
							}
								, C = {
									className: "string",
									begin: "`",
									end: "`",
									contains: [e.BACKSLASH_ESCAPE, v]
							}
								, E = {
									className: "comment",
									variants: [e.COMMENT(/\/\*\*(?!\/)/, "\\*/", {
											relevance: 0,
											contains: [{
													begin: "(?=@[A-Za-z]+)",
													relevance: 0,
													contains: [{
															className: "doctag",
															begin: "@[A-Za-z]+"
													}, {
															className: "type",
															begin: "\\{",
															end: "\\}",
															excludeEnd: !0,
															excludeBegin: !0,
															relevance: 0
													}, {
															className: "variable",
															begin: d + "(?=\\s*(-)|$)",
															endsParent: !0,
															relevance: 0
													}, {
															begin: /(?=[^\n])\s/,
															relevance: 0
													}]
											}]
									}), e.C_BLOCK_COMMENT_MODE, e.C_LINE_COMMENT_MODE]
							}
								, T = [e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, b, S, C, {
									match: /\$\d+/
							}, y];
							v.contains = T.concat({
									begin: /\{/,
									end: /\}/,
									keywords: m,
									contains: ["self"].concat(T)
							});
							const I = [].concat(E, v.contains)
								, w = I.concat([{
									begin: /\(/,
									end: /\)/,
									keywords: m,
									contains: ["self"].concat(I)
							}])
								, A = {
									className: "params",
									begin: /\(/,
									end: /\)/,
									excludeBegin: !0,
									excludeEnd: !0,
									keywords: m,
									contains: w
							}
								, R = {
									variants: [{
											match: [/class/, /\s+/, d, /\s+/, /extends/, /\s+/, c.concat(d, "(", c.concat(/\./, d), ")*")],
											scope: {
													1: "keyword",
													3: "title.class",
													5: "keyword",
													7: "title.class.inherited"
											}
									}, {
											match: [/class/, /\s+/, d],
											scope: {
													1: "keyword",
													3: "title.class"
											}
									}]
							}
								, x = {
									relevance: 0,
									match: c.either(/\bJSON/, /\b[A-Z][a-z]+([A-Z][a-z]*|\d)*/, /\b[A-Z]{2,}([A-Z][a-z]+|\d)+([A-Z][a-z]*)*/, /\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\d)*([A-Z][a-z]*)*/),
									className: "title.class",
									keywords: {
											_: [...r, ...o]
									}
							}
								, O = {
									variants: [{
											match: [/function/, /\s+/, d, /(?=\s*\()/]
									}, {
											match: [/function/, /\s*(?=\()/]
									}],
									className: {
											1: "keyword",
											3: "title.function"
									},
									label: "func.def",
									contains: [A],
									illegal: /%/
							}
								, N = {
									match: c.concat(/\b/, (P = [...s, "super", "import"],
									c.concat("(?!", P.join("|"), ")")), d, c.lookahead(/\(/)),
									className: "title.function",
									relevance: 0
							};
							var P;
							const D = {
									begin: c.concat(/\./, c.lookahead(c.concat(d, /(?![0-9A-Za-z$_(])/))),
									end: d,
									excludeBegin: !0,
									keywords: "prototype",
									className: "property",
									relevance: 0
							}
								, M = {
									match: [/get|set/, /\s+/, d, /(?=\()/],
									className: {
											1: "keyword",
											3: "title.function"
									},
									contains: [{
											begin: /\(\)/
									}, A]
							}
								, L = "(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|" + e.UNDERSCORE_IDENT_RE + ")\\s*=>"
								, k = {
									match: [/const|var|let/, /\s+/, d, /\s*/, /=\s*/, /(async\s*)?/, c.lookahead(L)],
									keywords: "async",
									className: {
											1: "keyword",
											3: "title.function"
									},
									contains: [A]
							};
							return {
									name: "Javascript",
									aliases: ["js", "jsx", "mjs", "cjs"],
									keywords: m,
									exports: {
											PARAMS_CONTAINS: w,
											CLASS_REFERENCE: x
									},
									illegal: /#(?![$_A-z])/,
									contains: [e.SHEBANG({
											label: "shebang",
											binary: "node",
											relevance: 5
									}), {
											label: "use_strict",
											className: "meta",
											relevance: 10,
											begin: /^\s*['"]use (strict|asm)['"]/
									}, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, b, S, C, E, {
											match: /\$\d+/
									}, y, x, {
											className: "attr",
											begin: d + c.lookahead(":"),
											relevance: 0
									}, k, {
											begin: "(" + e.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
											keywords: "return throw case",
											relevance: 0,
											contains: [E, e.REGEXP_MODE, {
													className: "function",
													begin: L,
													returnBegin: !0,
													end: "\\s*=>",
													contains: [{
															className: "params",
															variants: [{
																	begin: e.UNDERSCORE_IDENT_RE,
																	relevance: 0
															}, {
																	className: null,
																	begin: /\(\s*\)/,
																	skip: !0
															}, {
																	begin: /\(/,
																	end: /\)/,
																	excludeBegin: !0,
																	excludeEnd: !0,
																	keywords: m,
																	contains: w
															}]
													}]
											}, {
													begin: /,/,
													relevance: 0
											}, {
													match: /\s+/,
													relevance: 0
											}, {
													variants: [{
															begin: p,
															end: u
													}, {
															match: /<[A-Za-z0-9\\._:-]+\s*\/>/
													}, {
															begin: h.begin,
															"on:begin": h.isTrulyOpeningTag,
															end: h.end
													}],
													subLanguage: "xml",
													contains: [{
															begin: h.begin,
															end: h.end,
															skip: !0,
															contains: ["self"]
													}]
											}]
									}, O, {
											beginKeywords: "while if switch catch for"
									}, {
											begin: "\\b(?!function)" + e.UNDERSCORE_IDENT_RE + "\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",
											returnBegin: !0,
											label: "func.def",
											contains: [A, e.inherit(e.TITLE_MODE, {
													begin: d,
													className: "title.function"
											})]
									}, {
											match: /\.\.\./,
											relevance: 0
									}, D, {
											match: "\\$" + d,
											relevance: 0
									}, {
											match: [/\bconstructor(?=\s*\()/],
											className: {
													1: "title.function"
											},
											contains: [A]
									}, N, {
											relevance: 0,
											match: /\b[A-Z][A-Z_0-9]+\b/,
											className: "variable.constant"
									}, R, M, {
											match: /\$[(.]/
									}]
							}
					}
			}
			,
			893: e=>{
					e.exports = function(e) {
							const t = {
									className: "params",
									begin: /\(/,
									end: /\)/,
									contains: [{
											begin: /[\w-]+ *=/,
											returnBegin: !0,
											relevance: 0,
											contains: [{
													className: "attr",
													begin: /[\w-]+/
											}]
									}],
									relevance: 0
							};
							return {
									name: "JBoss CLI",
									aliases: ["wildfly-cli"],
									keywords: {
											$pattern: "[a-z-]+",
											keyword: "alias batch cd clear command connect connection-factory connection-info data-source deploy deployment-info deployment-overlay echo echo-dmr help history if jdbc-driver-info jms-queue|20 jms-topic|20 ls patch pwd quit read-attribute read-operation reload rollout-plan run-batch set shutdown try unalias undeploy unset version xa-data-source",
											literal: "true false"
									},
									contains: [e.HASH_COMMENT_MODE, e.QUOTE_STRING_MODE, {
											className: "params",
											begin: /--[\w\-=\/]+/
									}, {
											className: "function",
											begin: /:[\w\-.]+/,
											relevance: 0
									}, {
											className: "string",
											begin: /\B([\/.])[\w\-.\/=]+/
									}, t]
							}
					}
			}
			,
			3169: e=>{
					e.exports = function(e) {
							const t = ["true", "false", "null"]
								, n = {
									scope: "literal",
									beginKeywords: t.join(" ")
							};
							return {
									name: "JSON",
									keywords: {
											literal: t
									},
									contains: [{
											className: "attr",
											begin: /"(\\.|[^\\"\r\n])*"(?=\s*:)/,
											relevance: 1.01
									}, {
											match: /[{}[\],:]/,
											className: "punctuation",
											relevance: 0
									}, e.QUOTE_STRING_MODE, n, e.C_NUMBER_MODE, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE],
									illegal: "\\S"
							}
					}
			}
			,
			1708: e=>{
					e.exports = function(e) {
							return {
									name: "Julia REPL",
									contains: [{
											className: "meta.prompt",
											begin: /^julia>/,
											relevance: 10,
											starts: {
													end: /^(?![ ]{6})/,
													subLanguage: "julia"
											}
									}],
									aliases: ["jldoctest"]
							}
					}
			}
			,
			5537: e=>{
					e.exports = function(e) {
							const t = "[A-Za-z_\\u00A1-\\uFFFF][A-Za-z_0-9\\u00A1-\\uFFFF]*"
								, n = {
									$pattern: t,
									keyword: ["baremodule", "begin", "break", "catch", "ccall", "const", "continue", "do", "else", "elseif", "end", "export", "false", "finally", "for", "function", "global", "if", "import", "in", "isa", "let", "local", "macro", "module", "quote", "return", "true", "try", "using", "where", "while"],
									literal: ["ARGS", "C_NULL", "DEPOT_PATH", "ENDIAN_BOM", "ENV", "Inf", "Inf16", "Inf32", "Inf64", "InsertionSort", "LOAD_PATH", "MergeSort", "NaN", "NaN16", "NaN32", "NaN64", "PROGRAM_FILE", "QuickSort", "RoundDown", "RoundFromZero", "RoundNearest", "RoundNearestTiesAway", "RoundNearestTiesUp", "RoundToZero", "RoundUp", "VERSION|0", "devnull", "false", "im", "missing", "nothing", "pi", "stderr", "stdin", "stdout", "true", "undef", "π", "ℯ"],
									built_in: ["AbstractArray", "AbstractChannel", "AbstractChar", "AbstractDict", "AbstractDisplay", "AbstractFloat", "AbstractIrrational", "AbstractMatrix", "AbstractRange", "AbstractSet", "AbstractString", "AbstractUnitRange", "AbstractVecOrMat", "AbstractVector", "Any", "ArgumentError", "Array", "AssertionError", "BigFloat", "BigInt", "BitArray", "BitMatrix", "BitSet", "BitVector", "Bool", "BoundsError", "CapturedException", "CartesianIndex", "CartesianIndices", "Cchar", "Cdouble", "Cfloat", "Channel", "Char", "Cint", "Cintmax_t", "Clong", "Clonglong", "Cmd", "Colon", "Complex", "ComplexF16", "ComplexF32", "ComplexF64", "CompositeException", "Condition", "Cptrdiff_t", "Cshort", "Csize_t", "Cssize_t", "Cstring", "Cuchar", "Cuint", "Cuintmax_t", "Culong", "Culonglong", "Cushort", "Cvoid", "Cwchar_t", "Cwstring", "DataType", "DenseArray", "DenseMatrix", "DenseVecOrMat", "DenseVector", "Dict", "DimensionMismatch", "Dims", "DivideError", "DomainError", "EOFError", "Enum", "ErrorException", "Exception", "ExponentialBackOff", "Expr", "Float16", "Float32", "Float64", "Function", "GlobalRef", "HTML", "IO", "IOBuffer", "IOContext", "IOStream", "IdDict", "IndexCartesian", "IndexLinear", "IndexStyle", "InexactError", "InitError", "Int", "Int128", "Int16", "Int32", "Int64", "Int8", "Integer", "InterruptException", "InvalidStateException", "Irrational", "KeyError", "LinRange", "LineNumberNode", "LinearIndices", "LoadError", "MIME", "Matrix", "Method", "MethodError", "Missing", "MissingException", "Module", "NTuple", "NamedTuple", "Nothing", "Number", "OrdinalRange", "OutOfMemoryError", "OverflowError", "Pair", "PartialQuickSort", "PermutedDimsArray", "Pipe", "ProcessFailedException", "Ptr", "QuoteNode", "Rational", "RawFD", "ReadOnlyMemoryError", "Real", "ReentrantLock", "Ref", "Regex", "RegexMatch", "RoundingMode", "SegmentationFault", "Set", "Signed", "Some", "StackOverflowError", "StepRange", "StepRangeLen", "StridedArray", "StridedMatrix", "StridedVecOrMat", "StridedVector", "String", "StringIndexError", "SubArray", "SubString", "SubstitutionString", "Symbol", "SystemError", "Task", "TaskFailedException", "Text", "TextDisplay", "Timer", "Tuple", "Type", "TypeError", "TypeVar", "UInt", "UInt128", "UInt16", "UInt32", "UInt64", "UInt8", "UndefInitializer", "UndefKeywordError", "UndefRefError", "UndefVarError", "Union", "UnionAll", "UnitRange", "Unsigned", "Val", "Vararg", "VecElement", "VecOrMat", "Vector", "VersionNumber", "WeakKeyDict", "WeakRef"]
							}
								, i = {
									keywords: n,
									illegal: /<\//
							}
								, r = {
									className: "subst",
									begin: /\$\(/,
									end: /\)/,
									keywords: n
							}
								, o = {
									className: "variable",
									begin: "\\$" + t
							}
								, s = {
									className: "string",
									contains: [e.BACKSLASH_ESCAPE, r, o],
									variants: [{
											begin: /\w*"""/,
											end: /"""\w*/,
											relevance: 10
									}, {
											begin: /\w*"/,
											end: /"\w*/
									}]
							}
								, a = {
									className: "string",
									contains: [e.BACKSLASH_ESCAPE, r, o],
									begin: "`",
									end: "`"
							}
								, l = {
									className: "meta",
									begin: "@" + t
							};
							return i.name = "Julia",
							i.contains = [{
									className: "number",
									begin: /(\b0x[\d_]*(\.[\d_]*)?|0x\.\d[\d_]*)p[-+]?\d+|\b0[box][a-fA-F0-9][a-fA-F0-9_]*|(\b\d[\d_]*(\.[\d_]*)?|\.\d[\d_]*)([eEfF][-+]?\d+)?/,
									relevance: 0
							}, {
									className: "string",
									begin: /'(.|\\[xXuU][a-zA-Z0-9]+)'/
							}, s, a, l, {
									className: "comment",
									variants: [{
											begin: "#=",
											end: "=#",
											relevance: 10
									}, {
											begin: "#",
											end: "$"
									}]
							}, e.HASH_COMMENT_MODE, {
									className: "keyword",
									begin: "\\b(((abstract|primitive)\\s+)type|(mutable\\s+)?struct)\\b"
							}, {
									begin: /<:/
							}],
							r.contains = i.contains,
							i
					}
			}
			,
			2672: e=>{
					var t = "[0-9](_*[0-9])*"
						, n = `\\.(${t})`
						, i = "[0-9a-fA-F](_*[0-9a-fA-F])*"
						, r = {
							className: "number",
							variants: [{
									begin: `(\\b(${t})((${n})|\\.)?|(${n}))[eE][+-]?(${t})[fFdD]?\\b`
							}, {
									begin: `\\b(${t})((${n})[fFdD]?\\b|\\.([fFdD]\\b)?)`
							}, {
									begin: `(${n})[fFdD]?\\b`
							}, {
									begin: `\\b(${t})[fFdD]\\b`
							}, {
									begin: `\\b0[xX]((${i})\\.?|(${i})?\\.(${i}))[pP][+-]?(${t})[fFdD]?\\b`
							}, {
									begin: "\\b(0|[1-9](_*[0-9])*)[lL]?\\b"
							}, {
									begin: `\\b0[xX](${i})[lL]?\\b`
							}, {
									begin: "\\b0(_*[0-7])*[lL]?\\b"
							}, {
									begin: "\\b0[bB][01](_*[01])*[lL]?\\b"
							}],
							relevance: 0
					};
					e.exports = function(e) {
							const t = {
									keyword: "abstract as val var vararg get set class object open private protected public noinline crossinline dynamic final enum if else do while for when throw try catch finally import package is in fun override companion reified inline lateinit init interface annotation data sealed internal infix operator out by constructor super tailrec where const inner suspend typealias external expect actual",
									built_in: "Byte Short Char Int Long Boolean Float Double Void Unit Nothing",
									literal: "true false null"
							}
								, n = {
									className: "symbol",
									begin: e.UNDERSCORE_IDENT_RE + "@"
							}
								, i = {
									className: "subst",
									begin: /\$\{/,
									end: /\}/,
									contains: [e.C_NUMBER_MODE]
							}
								, o = {
									className: "variable",
									begin: "\\$" + e.UNDERSCORE_IDENT_RE
							}
								, s = {
									className: "string",
									variants: [{
											begin: '"""',
											end: '"""(?=[^"])',
											contains: [o, i]
									}, {
											begin: "'",
											end: "'",
											illegal: /\n/,
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											begin: '"',
											end: '"',
											illegal: /\n/,
											contains: [e.BACKSLASH_ESCAPE, o, i]
									}]
							};
							i.contains.push(s);
							const a = {
									className: "meta",
									begin: "@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\s*:(?:\\s*" + e.UNDERSCORE_IDENT_RE + ")?"
							}
								, l = {
									className: "meta",
									begin: "@" + e.UNDERSCORE_IDENT_RE,
									contains: [{
											begin: /\(/,
											end: /\)/,
											contains: [e.inherit(s, {
													className: "string"
											}), "self"]
									}]
							}
								, c = r
								, d = e.COMMENT("/\\*", "\\*/", {
									contains: [e.C_BLOCK_COMMENT_MODE]
							})
								, p = {
									variants: [{
											className: "type",
											begin: e.UNDERSCORE_IDENT_RE
									}, {
											begin: /\(/,
											end: /\)/,
											contains: []
									}]
							}
								, u = p;
							return u.variants[1].contains = [p],
							p.variants[1].contains = [u],
							{
									name: "Kotlin",
									aliases: ["kt", "kts"],
									keywords: t,
									contains: [e.COMMENT("/\\*\\*", "\\*/", {
											relevance: 0,
											contains: [{
													className: "doctag",
													begin: "@[A-Za-z]+"
											}]
									}), e.C_LINE_COMMENT_MODE, d, {
											className: "keyword",
											begin: /\b(break|continue|return|this)\b/,
											starts: {
													contains: [{
															className: "symbol",
															begin: /@\w+/
													}]
											}
									}, n, a, l, {
											className: "function",
											beginKeywords: "fun",
											end: "[(]|$",
											returnBegin: !0,
											excludeEnd: !0,
											keywords: t,
											relevance: 5,
											contains: [{
													begin: e.UNDERSCORE_IDENT_RE + "\\s*\\(",
													returnBegin: !0,
													relevance: 0,
													contains: [e.UNDERSCORE_TITLE_MODE]
											}, {
													className: "type",
													begin: /</,
													end: />/,
													keywords: "reified",
													relevance: 0
											}, {
													className: "params",
													begin: /\(/,
													end: /\)/,
													endsParent: !0,
													keywords: t,
													relevance: 0,
													contains: [{
															begin: /:/,
															end: /[=,\/]/,
															endsWithParent: !0,
															contains: [p, e.C_LINE_COMMENT_MODE, d],
															relevance: 0
													}, e.C_LINE_COMMENT_MODE, d, a, l, s, e.C_NUMBER_MODE]
											}, d]
									}, {
											begin: [/class|interface|trait/, /\s+/, e.UNDERSCORE_IDENT_RE],
											beginScope: {
													3: "title.class"
											},
											keywords: "class interface trait",
											end: /[:\{(]|$/,
											excludeEnd: !0,
											illegal: "extends implements",
											contains: [{
													beginKeywords: "public protected internal private constructor"
											}, e.UNDERSCORE_TITLE_MODE, {
													className: "type",
													begin: /</,
													end: />/,
													excludeBegin: !0,
													excludeEnd: !0,
													relevance: 0
											}, {
													className: "type",
													begin: /[,:]\s*/,
													end: /[<\(,){\s]|$/,
													excludeBegin: !0,
													returnEnd: !0
											}, a, l]
									}, s, {
											className: "meta",
											begin: "^#!/usr/bin/env",
											end: "$",
											illegal: "\n"
									}, c]
							}
					}
			}
			,
			1349: e=>{
					e.exports = function(e) {
							const t = "[a-zA-Z_][\\w.]*"
								, n = "<\\?(lasso(script)?|=)"
								, i = "\\]|\\?>"
								, r = {
									$pattern: t + "|&[lg]t;",
									literal: "true false none minimal full all void and or not bw nbw ew new cn ncn lt lte gt gte eq neq rx nrx ft",
									built_in: "array date decimal duration integer map pair string tag xml null boolean bytes keyword list locale queue set stack staticarray local var variable global data self inherited currentcapture givenblock",
									keyword: "cache database_names database_schemanames database_tablenames define_tag define_type email_batch encode_set html_comment handle handle_error header if inline iterate ljax_target link link_currentaction link_currentgroup link_currentrecord link_detail link_firstgroup link_firstrecord link_lastgroup link_lastrecord link_nextgroup link_nextrecord link_prevgroup link_prevrecord log loop namespace_using output_none portal private protect records referer referrer repeating resultset rows search_args search_arguments select sort_args sort_arguments thread_atomic value_list while abort case else fail_if fail_ifnot fail if_empty if_false if_null if_true loop_abort loop_continue loop_count params params_up return return_value run_children soap_definetag soap_lastrequest soap_lastresponse tag_name ascending average by define descending do equals frozen group handle_failure import in into join let match max min on order parent protected provide public require returnhome skip split_thread sum take thread to trait type where with yield yieldhome"
							}
								, o = e.COMMENT("\x3c!--", "--\x3e", {
									relevance: 0
							})
								, s = {
									className: "meta",
									begin: "\\[noprocess\\]",
									starts: {
											end: "\\[/noprocess\\]",
											returnEnd: !0,
											contains: [o]
									}
							}
								, a = {
									className: "meta",
									begin: "\\[/noprocess|" + n
							}
								, l = {
									className: "symbol",
									begin: "'" + t + "'"
							}
								, c = [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.inherit(e.C_NUMBER_MODE, {
									begin: e.C_NUMBER_RE + "|(-?infinity|NaN)\\b"
							}), e.inherit(e.APOS_STRING_MODE, {
									illegal: null
							}), e.inherit(e.QUOTE_STRING_MODE, {
									illegal: null
							}), {
									className: "string",
									begin: "`",
									end: "`"
							}, {
									variants: [{
											begin: "[#$]" + t
									}, {
											begin: "#",
											end: "\\d+",
											illegal: "\\W"
									}]
							}, {
									className: "type",
									begin: "::\\s*",
									end: t,
									illegal: "\\W"
							}, {
									className: "params",
									variants: [{
											begin: "-(?!infinity)" + t,
											relevance: 0
									}, {
											begin: "(\\.\\.\\.)"
									}]
							}, {
									begin: /(->|\.)\s*/,
									relevance: 0,
									contains: [l]
							}, {
									className: "class",
									beginKeywords: "define",
									returnEnd: !0,
									end: "\\(|=>",
									contains: [e.inherit(e.TITLE_MODE, {
											begin: t + "(=(?!>))?|[-+*/%](?!>)"
									})]
							}];
							return {
									name: "Lasso",
									aliases: ["ls", "lassoscript"],
									case_insensitive: !0,
									keywords: r,
									contains: [{
											className: "meta",
											begin: i,
											relevance: 0,
											starts: {
													end: "\\[|" + n,
													returnEnd: !0,
													relevance: 0,
													contains: [o]
											}
									}, s, a, {
											className: "meta",
											begin: "\\[no_square_brackets",
											starts: {
													end: "\\[/no_square_brackets\\]",
													keywords: r,
													contains: [{
															className: "meta",
															begin: i,
															relevance: 0,
															starts: {
																	end: "\\[noprocess\\]|" + n,
																	returnEnd: !0,
																	contains: [o]
															}
													}, s, a].concat(c)
											}
									}, {
											className: "meta",
											begin: "\\[",
											relevance: 0
									}, {
											className: "meta",
											begin: "^#!",
											end: "lasso9$",
											relevance: 10
									}].concat(c)
							}
					}
			}
			,
			7798: e=>{
					e.exports = function(e) {
							const t = [{
									begin: /\^{6}[0-9a-f]{6}/
							}, {
									begin: /\^{5}[0-9a-f]{5}/
							}, {
									begin: /\^{4}[0-9a-f]{4}/
							}, {
									begin: /\^{3}[0-9a-f]{3}/
							}, {
									begin: /\^{2}[0-9a-f]{2}/
							}, {
									begin: /\^{2}[\u0000-\u007f]/
							}]
								, n = [{
									className: "keyword",
									begin: /\\/,
									relevance: 0,
									contains: [{
											endsParent: !0,
											begin: e.regex.either(...["(?:NeedsTeXFormat|RequirePackage|GetIdInfo)", "Provides(?:Expl)?(?:Package|Class|File)", "(?:DeclareOption|ProcessOptions)", "(?:documentclass|usepackage|input|include)", "makeat(?:letter|other)", "ExplSyntax(?:On|Off)", "(?:new|renew|provide)?command", "(?:re)newenvironment", "(?:New|Renew|Provide|Declare)(?:Expandable)?DocumentCommand", "(?:New|Renew|Provide|Declare)DocumentEnvironment", "(?:(?:e|g|x)?def|let)", "(?:begin|end)", "(?:part|chapter|(?:sub){0,2}section|(?:sub)?paragraph)", "caption", "(?:label|(?:eq|page|name)?ref|(?:paren|foot|super)?cite)", "(?:alpha|beta|[Gg]amma|[Dd]elta|(?:var)?epsilon|zeta|eta|[Tt]heta|vartheta)", "(?:iota|(?:var)?kappa|[Ll]ambda|mu|nu|[Xx]i|[Pp]i|varpi|(?:var)rho)", "(?:[Ss]igma|varsigma|tau|[Uu]psilon|[Pp]hi|varphi|chi|[Pp]si|[Oo]mega)", "(?:frac|sum|prod|lim|infty|times|sqrt|leq|geq|left|right|middle|[bB]igg?)", "(?:[lr]angle|q?quad|[lcvdi]?dots|d?dot|hat|tilde|bar)"].map((e=>e + "(?![a-zA-Z@:_])")))
									}, {
											endsParent: !0,
											begin: new RegExp(["(?:__)?[a-zA-Z]{2,}_[a-zA-Z](?:_?[a-zA-Z])+:[a-zA-Z]*", "[lgc]__?[a-zA-Z](?:_?[a-zA-Z])*_[a-zA-Z]{2,}", "[qs]__?[a-zA-Z](?:_?[a-zA-Z])+", "use(?:_i)?:[a-zA-Z]*", "(?:else|fi|or):", "(?:if|cs|exp):w", "(?:hbox|vbox):n", "::[a-zA-Z]_unbraced", "::[a-zA-Z:]"].map((e=>e + "(?![a-zA-Z:_])")).join("|"))
									}, {
											endsParent: !0,
											variants: t
									}, {
											endsParent: !0,
											relevance: 0,
											variants: [{
													begin: /[a-zA-Z@]+/
											}, {
													begin: /[^a-zA-Z@]?/
											}]
									}]
							}, {
									className: "params",
									relevance: 0,
									begin: /#+\d?/
							}, {
									variants: t
							}, {
									className: "built_in",
									relevance: 0,
									begin: /[$&^_]/
							}, {
									className: "meta",
									begin: /% ?!(T[eE]X|tex|BIB|bib)/,
									end: "$",
									relevance: 10
							}, e.COMMENT("%", "$", {
									relevance: 0
							})]
								, i = {
									begin: /\{/,
									end: /\}/,
									relevance: 0,
									contains: ["self", ...n]
							}
								, r = e.inherit(i, {
									relevance: 0,
									endsParent: !0,
									contains: [i, ...n]
							})
								, o = {
									begin: /\[/,
									end: /\]/,
									endsParent: !0,
									relevance: 0,
									contains: [i, ...n]
							}
								, s = {
									begin: /\s+/,
									relevance: 0
							}
								, a = [r]
								, l = [o]
								, ARGUMENT_AND_THEN = function(e, t) {
									return {
											contains: [s],
											starts: {
													relevance: 0,
													contains: e,
													starts: t
											}
									}
							}
								, CSNAME = function(e, t) {
									return {
											begin: "\\\\" + e + "(?![a-zA-Z@:_])",
											keywords: {
													$pattern: /\\[a-zA-Z]+/,
													keyword: "\\" + e
											},
											relevance: 0,
											contains: [s],
											starts: t
									}
							}
								, BEGIN_ENV = function(t, n) {
									return e.inherit({
											begin: "\\\\begin(?=[ \t]*(\\r?\\n[ \t]*)?\\{" + t + "\\})",
											keywords: {
													$pattern: /\\[a-zA-Z]+/,
													keyword: "\\begin"
											},
											relevance: 0
									}, ARGUMENT_AND_THEN(a, n))
							}
								, VERBATIM_DELIMITED_EQUAL = (t="string")=>e.END_SAME_AS_BEGIN({
									className: t,
									begin: /(.|\r?\n)/,
									end: /(.|\r?\n)/,
									excludeBegin: !0,
									excludeEnd: !0,
									endsParent: !0
							})
								, VERBATIM_DELIMITED_ENV = function(e) {
									return {
											className: "string",
											end: "(?=\\\\end\\{" + e + "\\})"
									}
							}
								, VERBATIM_DELIMITED_BRACES = (e="string")=>({
									relevance: 0,
									begin: /\{/,
									starts: {
											endsParent: !0,
											contains: [{
													className: e,
													end: /(?=\})/,
													endsParent: !0,
													contains: [{
															begin: /\{/,
															end: /\}/,
															relevance: 0,
															contains: ["self"]
													}]
											}]
									}
							});
							return {
									name: "LaTeX",
									aliases: ["tex"],
									contains: [...[...["verb", "lstinline"].map((e=>CSNAME(e, {
											contains: [VERBATIM_DELIMITED_EQUAL()]
									}))), CSNAME("mint", ARGUMENT_AND_THEN(a, {
											contains: [VERBATIM_DELIMITED_EQUAL()]
									})), CSNAME("mintinline", ARGUMENT_AND_THEN(a, {
											contains: [VERBATIM_DELIMITED_BRACES(), VERBATIM_DELIMITED_EQUAL()]
									})), CSNAME("url", {
											contains: [VERBATIM_DELIMITED_BRACES("link"), VERBATIM_DELIMITED_BRACES("link")]
									}), CSNAME("hyperref", {
											contains: [VERBATIM_DELIMITED_BRACES("link")]
									}), CSNAME("href", ARGUMENT_AND_THEN(l, {
											contains: [VERBATIM_DELIMITED_BRACES("link")]
									})), ...[].concat(...["", "\\*"].map((e=>[BEGIN_ENV("verbatim" + e, VERBATIM_DELIMITED_ENV("verbatim" + e)), BEGIN_ENV("filecontents" + e, ARGUMENT_AND_THEN(a, VERBATIM_DELIMITED_ENV("filecontents" + e))), ...["", "B", "L"].map((t=>BEGIN_ENV(t + "Verbatim" + e, ARGUMENT_AND_THEN(l, VERBATIM_DELIMITED_ENV(t + "Verbatim" + e)))))]))), BEGIN_ENV("minted", ARGUMENT_AND_THEN(l, ARGUMENT_AND_THEN(a, VERBATIM_DELIMITED_ENV("minted"))))], ...n]
							}
					}
			}
			,
			7847: e=>{
					e.exports = function(e) {
							return {
									name: "LDIF",
									contains: [{
											className: "attribute",
											match: "^dn(?=:)",
											relevance: 10
									}, {
											className: "attribute",
											match: "^\\w+(?=:)"
									}, {
											className: "literal",
											match: "^-"
									}, e.HASH_COMMENT_MODE]
							}
					}
			}
			,
			2714: e=>{
					e.exports = function(e) {
							return {
									name: "Leaf",
									contains: [{
											className: "function",
											begin: "#+[A-Za-z_0-9]*\\(",
											end: / \{/,
											returnBegin: !0,
											excludeEnd: !0,
											contains: [{
													className: "keyword",
													begin: "#+"
											}, {
													className: "title",
													begin: "[A-Za-z_][A-Za-z_0-9]*"
											}, {
													className: "params",
													begin: "\\(",
													end: "\\)",
													endsParent: !0,
													contains: [{
															className: "string",
															begin: '"',
															end: '"'
													}, {
															className: "variable",
															begin: "[A-Za-z_][A-Za-z_0-9]*"
													}]
											}]
									}]
							}
					}
			}
			,
			7425: e=>{
					const t = ["a", "abbr", "address", "article", "aside", "audio", "b", "blockquote", "body", "button", "canvas", "caption", "cite", "code", "dd", "del", "details", "dfn", "div", "dl", "dt", "em", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hgroup", "html", "i", "iframe", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "mark", "menu", "nav", "object", "ol", "p", "q", "quote", "samp", "section", "span", "strong", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "tr", "ul", "var", "video"]
						, n = ["any-hover", "any-pointer", "aspect-ratio", "color", "color-gamut", "color-index", "device-aspect-ratio", "device-height", "device-width", "display-mode", "forced-colors", "grid", "height", "hover", "inverted-colors", "monochrome", "orientation", "overflow-block", "overflow-inline", "pointer", "prefers-color-scheme", "prefers-contrast", "prefers-reduced-motion", "prefers-reduced-transparency", "resolution", "scan", "scripting", "update", "width", "min-width", "max-width", "min-height", "max-height"]
						, i = ["active", "any-link", "blank", "checked", "current", "default", "defined", "dir", "disabled", "drop", "empty", "enabled", "first", "first-child", "first-of-type", "fullscreen", "future", "focus", "focus-visible", "focus-within", "has", "host", "host-context", "hover", "indeterminate", "in-range", "invalid", "is", "lang", "last-child", "last-of-type", "left", "link", "local-link", "not", "nth-child", "nth-col", "nth-last-child", "nth-last-col", "nth-last-of-type", "nth-of-type", "only-child", "only-of-type", "optional", "out-of-range", "past", "placeholder-shown", "read-only", "read-write", "required", "right", "root", "scope", "target", "target-within", "user-invalid", "valid", "visited", "where"]
						, r = ["after", "backdrop", "before", "cue", "cue-region", "first-letter", "first-line", "grammar-error", "marker", "part", "placeholder", "selection", "slotted", "spelling-error"]
						, o = ["align-content", "align-items", "align-self", "all", "animation", "animation-delay", "animation-direction", "animation-duration", "animation-fill-mode", "animation-iteration-count", "animation-name", "animation-play-state", "animation-timing-function", "backface-visibility", "background", "background-attachment", "background-blend-mode", "background-clip", "background-color", "background-image", "background-origin", "background-position", "background-repeat", "background-size", "block-size", "border", "border-block", "border-block-color", "border-block-end", "border-block-end-color", "border-block-end-style", "border-block-end-width", "border-block-start", "border-block-start-color", "border-block-start-style", "border-block-start-width", "border-block-style", "border-block-width", "border-bottom", "border-bottom-color", "border-bottom-left-radius", "border-bottom-right-radius", "border-bottom-style", "border-bottom-width", "border-collapse", "border-color", "border-image", "border-image-outset", "border-image-repeat", "border-image-slice", "border-image-source", "border-image-width", "border-inline", "border-inline-color", "border-inline-end", "border-inline-end-color", "border-inline-end-style", "border-inline-end-width", "border-inline-start", "border-inline-start-color", "border-inline-start-style", "border-inline-start-width", "border-inline-style", "border-inline-width", "border-left", "border-left-color", "border-left-style", "border-left-width", "border-radius", "border-right", "border-right-color", "border-right-style", "border-right-width", "border-spacing", "border-style", "border-top", "border-top-color", "border-top-left-radius", "border-top-right-radius", "border-top-style", "border-top-width", "border-width", "bottom", "box-decoration-break", "box-shadow", "box-sizing", "break-after", "break-before", "break-inside", "caption-side", "caret-color", "clear", "clip", "clip-path", "clip-rule", "color", "column-count", "column-fill", "column-gap", "column-rule", "column-rule-color", "column-rule-style", "column-rule-width", "column-span", "column-width", "columns", "contain", "content", "content-visibility", "counter-increment", "counter-reset", "cue", "cue-after", "cue-before", "cursor", "direction", "display", "empty-cells", "filter", "flex", "flex-basis", "flex-direction", "flex-flow", "flex-grow", "flex-shrink", "flex-wrap", "float", "flow", "font", "font-display", "font-family", "font-feature-settings", "font-kerning", "font-language-override", "font-size", "font-size-adjust", "font-smoothing", "font-stretch", "font-style", "font-synthesis", "font-variant", "font-variant-caps", "font-variant-east-asian", "font-variant-ligatures", "font-variant-numeric", "font-variant-position", "font-variation-settings", "font-weight", "gap", "glyph-orientation-vertical", "grid", "grid-area", "grid-auto-columns", "grid-auto-flow", "grid-auto-rows", "grid-column", "grid-column-end", "grid-column-start", "grid-gap", "grid-row", "grid-row-end", "grid-row-start", "grid-template", "grid-template-areas", "grid-template-columns", "grid-template-rows", "hanging-punctuation", "height", "hyphens", "icon", "image-orientation", "image-rendering", "image-resolution", "ime-mode", "inline-size", "isolation", "justify-content", "left", "letter-spacing", "line-break", "line-height", "list-style", "list-style-image", "list-style-position", "list-style-type", "margin", "margin-block", "margin-block-end", "margin-block-start", "margin-bottom", "margin-inline", "margin-inline-end", "margin-inline-start", "margin-left", "margin-right", "margin-top", "marks", "mask", "mask-border", "mask-border-mode", "mask-border-outset", "mask-border-repeat", "mask-border-slice", "mask-border-source", "mask-border-width", "mask-clip", "mask-composite", "mask-image", "mask-mode", "mask-origin", "mask-position", "mask-repeat", "mask-size", "mask-type", "max-block-size", "max-height", "max-inline-size", "max-width", "min-block-size", "min-height", "min-inline-size", "min-width", "mix-blend-mode", "nav-down", "nav-index", "nav-left", "nav-right", "nav-up", "none", "normal", "object-fit", "object-position", "opacity", "order", "orphans", "outline", "outline-color", "outline-offset", "outline-style", "outline-width", "overflow", "overflow-wrap", "overflow-x", "overflow-y", "padding", "padding-block", "padding-block-end", "padding-block-start", "padding-bottom", "padding-inline", "padding-inline-end", "padding-inline-start", "padding-left", "padding-right", "padding-top", "page-break-after", "page-break-before", "page-break-inside", "pause", "pause-after", "pause-before", "perspective", "perspective-origin", "pointer-events", "position", "quotes", "resize", "rest", "rest-after", "rest-before", "right", "row-gap", "scroll-margin", "scroll-margin-block", "scroll-margin-block-end", "scroll-margin-block-start", "scroll-margin-bottom", "scroll-margin-inline", "scroll-margin-inline-end", "scroll-margin-inline-start", "scroll-margin-left", "scroll-margin-right", "scroll-margin-top", "scroll-padding", "scroll-padding-block", "scroll-padding-block-end", "scroll-padding-block-start", "scroll-padding-bottom", "scroll-padding-inline", "scroll-padding-inline-end", "scroll-padding-inline-start", "scroll-padding-left", "scroll-padding-right", "scroll-padding-top", "scroll-snap-align", "scroll-snap-stop", "scroll-snap-type", "scrollbar-color", "scrollbar-gutter", "scrollbar-width", "shape-image-threshold", "shape-margin", "shape-outside", "speak", "speak-as", "src", "tab-size", "table-layout", "text-align", "text-align-all", "text-align-last", "text-combine-upright", "text-decoration", "text-decoration-color", "text-decoration-line", "text-decoration-style", "text-emphasis", "text-emphasis-color", "text-emphasis-position", "text-emphasis-style", "text-indent", "text-justify", "text-orientation", "text-overflow", "text-rendering", "text-shadow", "text-transform", "text-underline-position", "top", "transform", "transform-box", "transform-origin", "transform-style", "transition", "transition-delay", "transition-duration", "transition-property", "transition-timing-function", "unicode-bidi", "vertical-align", "visibility", "voice-balance", "voice-duration", "voice-family", "voice-pitch", "voice-range", "voice-rate", "voice-stress", "voice-volume", "white-space", "widows", "width", "will-change", "word-break", "word-spacing", "word-wrap", "writing-mode", "z-index"].reverse()
						, s = i.concat(r);
					e.exports = function(e) {
							const a = (e=>({
									IMPORTANT: {
											scope: "meta",
											begin: "!important"
									},
									BLOCK_COMMENT: e.C_BLOCK_COMMENT_MODE,
									HEXCOLOR: {
											scope: "number",
											begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/
									},
									FUNCTION_DISPATCH: {
											className: "built_in",
											begin: /[\w-]+(?=\()/
									},
									ATTRIBUTE_SELECTOR_MODE: {
											scope: "selector-attr",
											begin: /\[/,
											end: /\]/,
											illegal: "$",
											contains: [e.APOS_STRING_MODE, e.QUOTE_STRING_MODE]
									},
									CSS_NUMBER_MODE: {
											scope: "number",
											begin: e.NUMBER_RE + "(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",
											relevance: 0
									},
									CSS_VARIABLE: {
											className: "attr",
											begin: /--[A-Za-z][A-Za-z0-9_-]*/
									}
							}))(e)
								, l = s
								, c = "[\\w-]+"
								, d = "(" + c + "|@\\{" + c + "\\})"
								, p = []
								, u = []
								, STRING_MODE = function(e) {
									return {
											className: "string",
											begin: "~?" + e + ".*?" + e
									}
							}
								, IDENT_MODE = function(e, t, n) {
									return {
											className: e,
											begin: t,
											relevance: n
									}
							}
								, h = {
									$pattern: /[a-z-]+/,
									keyword: "and or not only",
									attribute: n.join(" ")
							}
								, m = {
									begin: "\\(",
									end: "\\)",
									contains: u,
									keywords: h,
									relevance: 0
							};
							u.push(e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, STRING_MODE("'"), STRING_MODE('"'), a.CSS_NUMBER_MODE, {
									begin: "(url|data-uri)\\(",
									starts: {
											className: "string",
											end: "[\\)\\n]",
											excludeEnd: !0
									}
							}, a.HEXCOLOR, m, IDENT_MODE("variable", "@@?" + c, 10), IDENT_MODE("variable", "@\\{" + c + "\\}"), IDENT_MODE("built_in", "~?`[^`]*?`"), {
									className: "attribute",
									begin: c + "\\s*:",
									end: ":",
									returnBegin: !0,
									excludeEnd: !0
							}, a.IMPORTANT, {
									beginKeywords: "and not"
							}, a.FUNCTION_DISPATCH);
							const g = u.concat({
									begin: /\{/,
									end: /\}/,
									contains: p
							})
								, _ = {
									beginKeywords: "when",
									endsWithParent: !0,
									contains: [{
											beginKeywords: "and not"
									}].concat(u)
							}
								, f = {
									begin: d + "\\s*:",
									returnBegin: !0,
									end: /[;}]/,
									relevance: 0,
									contains: [{
											begin: /-(webkit|moz|ms|o)-/
									}, a.CSS_VARIABLE, {
											className: "attribute",
											begin: "\\b(" + o.join("|") + ")\\b",
											end: /(?=:)/,
											starts: {
													endsWithParent: !0,
													illegal: "[<=$]",
													relevance: 0,
													contains: u
											}
									}]
							}
								, y = {
									className: "keyword",
									begin: "@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\b",
									starts: {
											end: "[;{}]",
											keywords: h,
											returnEnd: !0,
											contains: u,
											relevance: 0
									}
							}
								, v = {
									className: "variable",
									variants: [{
											begin: "@" + c + "\\s*:",
											relevance: 15
									}, {
											begin: "@" + c
									}],
									starts: {
											end: "[;}]",
											returnEnd: !0,
											contains: g
									}
							}
								, b = {
									variants: [{
											begin: "[\\.#:&\\[>]",
											end: "[;{}]"
									}, {
											begin: d,
											end: /\{/
									}],
									returnBegin: !0,
									returnEnd: !0,
									illegal: "[<='$\"]",
									relevance: 0,
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, _, IDENT_MODE("keyword", "all\\b"), IDENT_MODE("variable", "@\\{" + c + "\\}"), {
											begin: "\\b(" + t.join("|") + ")\\b",
											className: "selector-tag"
									}, a.CSS_NUMBER_MODE, IDENT_MODE("selector-tag", d, 0), IDENT_MODE("selector-id", "#" + d), IDENT_MODE("selector-class", "\\." + d, 0), IDENT_MODE("selector-tag", "&", 0), a.ATTRIBUTE_SELECTOR_MODE, {
											className: "selector-pseudo",
											begin: ":(" + i.join("|") + ")"
									}, {
											className: "selector-pseudo",
											begin: ":(:)?(" + r.join("|") + ")"
									}, {
											begin: /\(/,
											end: /\)/,
											relevance: 0,
											contains: g
									}, {
											begin: "!important"
									}, a.FUNCTION_DISPATCH]
							}
								, S = {
									begin: c + ":(:)?" + `(${l.join("|")})`,
									returnBegin: !0,
									contains: [b]
							};
							return p.push(e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, y, v, S, f, b, _, a.FUNCTION_DISPATCH),
							{
									name: "Less",
									case_insensitive: !0,
									illegal: "[=>'/<($\"]",
									contains: p
							}
					}
			}
			,
			4743: e=>{
					e.exports = function(e) {
							const t = "[a-zA-Z_\\-+\\*\\/<=>&#][a-zA-Z0-9_\\-+*\\/<=>&#!]*"
								, n = "\\|[^]*?\\|"
								, i = "(-|\\+)?\\d+(\\.\\d+|\\/\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\+|-)?\\d+)?"
								, r = {
									className: "literal",
									begin: "\\b(t{1}|nil)\\b"
							}
								, o = {
									className: "number",
									variants: [{
											begin: i,
											relevance: 0
									}, {
											begin: "#(b|B)[0-1]+(/[0-1]+)?"
									}, {
											begin: "#(o|O)[0-7]+(/[0-7]+)?"
									}, {
											begin: "#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?"
									}, {
											begin: "#(c|C)\\(" + i + " +" + i,
											end: "\\)"
									}]
							}
								, s = e.inherit(e.QUOTE_STRING_MODE, {
									illegal: null
							})
								, a = e.COMMENT(";", "$", {
									relevance: 0
							})
								, l = {
									begin: "\\*",
									end: "\\*"
							}
								, c = {
									className: "symbol",
									begin: "[:&]" + t
							}
								, d = {
									begin: t,
									relevance: 0
							}
								, p = {
									begin: n
							}
								, u = {
									contains: [o, s, l, c, {
											begin: "\\(",
											end: "\\)",
											contains: ["self", r, s, o, d]
									}, d],
									variants: [{
											begin: "['`]\\(",
											end: "\\)"
									}, {
											begin: "\\(quote ",
											end: "\\)",
											keywords: {
													name: "quote"
											}
									}, {
											begin: "'" + n
									}]
							}
								, h = {
									variants: [{
											begin: "'" + t
									}, {
											begin: "#'" + t + "(::" + t + ")*"
									}]
							}
								, m = {
									begin: "\\(\\s*",
									end: "\\)"
							}
								, g = {
									endsWithParent: !0,
									relevance: 0
							};
							return m.contains = [{
									className: "name",
									variants: [{
											begin: t,
											relevance: 0
									}, {
											begin: n
									}]
							}, g],
							g.contains = [u, h, m, r, o, s, a, l, c, p, d],
							{
									name: "Lisp",
									illegal: /\S/,
									contains: [o, e.SHEBANG(), r, s, a, u, h, m, d]
							}
					}
			}
			,
			2939: e=>{
					e.exports = function(e) {
							const t = {
									className: "variable",
									variants: [{
											begin: "\\b([gtps][A-Z]{1}[a-zA-Z0-9]*)(\\[.+\\])?(?:\\s*?)"
									}, {
											begin: "\\$_[A-Z]+"
									}],
									relevance: 0
							}
								, n = [e.C_BLOCK_COMMENT_MODE, e.HASH_COMMENT_MODE, e.COMMENT("--", "$"), e.COMMENT("[^:]//", "$")]
								, i = e.inherit(e.TITLE_MODE, {
									variants: [{
											begin: "\\b_*rig[A-Z][A-Za-z0-9_\\-]*"
									}, {
											begin: "\\b_[a-z0-9\\-]+"
									}]
							})
								, r = e.inherit(e.TITLE_MODE, {
									begin: "\\b([A-Za-z0-9_\\-]+)\\b"
							});
							return {
									name: "LiveCode",
									case_insensitive: !1,
									keywords: {
											keyword: "$_COOKIE $_FILES $_GET $_GET_BINARY $_GET_RAW $_POST $_POST_BINARY $_POST_RAW $_SESSION $_SERVER codepoint codepoints segment segments codeunit codeunits sentence sentences trueWord trueWords paragraph after byte bytes english the until http forever descending using line real8 with seventh for stdout finally element word words fourth before black ninth sixth characters chars stderr uInt1 uInt1s uInt2 uInt2s stdin string lines relative rel any fifth items from middle mid at else of catch then third it file milliseconds seconds second secs sec int1 int1s int4 int4s internet int2 int2s normal text item last long detailed effective uInt4 uInt4s repeat end repeat URL in try into switch to words https token binfile each tenth as ticks tick system real4 by dateItems without char character ascending eighth whole dateTime numeric short first ftp integer abbreviated abbr abbrev private case while if div mod wrap and or bitAnd bitNot bitOr bitXor among not in a an within contains ends with begins the keys of keys",
											literal: "SIX TEN FORMFEED NINE ZERO NONE SPACE FOUR FALSE COLON CRLF PI COMMA ENDOFFILE EOF EIGHT FIVE QUOTE EMPTY ONE TRUE RETURN CR LINEFEED RIGHT BACKSLASH NULL SEVEN TAB THREE TWO six ten formfeed nine zero none space four false colon crlf pi comma endoffile eof eight five quote empty one true return cr linefeed right backslash null seven tab three two RIVERSION RISTATE FILE_READ_MODE FILE_WRITE_MODE FILE_WRITE_MODE DIR_WRITE_MODE FILE_READ_UMASK FILE_WRITE_UMASK DIR_READ_UMASK DIR_WRITE_UMASK",
											built_in: "put abs acos aliasReference annuity arrayDecode arrayEncode asin atan atan2 average avg avgDev base64Decode base64Encode baseConvert binaryDecode binaryEncode byteOffset byteToNum cachedURL cachedURLs charToNum cipherNames codepointOffset codepointProperty codepointToNum codeunitOffset commandNames compound compress constantNames cos date dateFormat decompress difference directories diskSpace DNSServers exp exp1 exp2 exp10 extents files flushEvents folders format functionNames geometricMean global globals hasMemory harmonicMean hostAddress hostAddressToName hostName hostNameToAddress isNumber ISOToMac itemOffset keys len length libURLErrorData libUrlFormData libURLftpCommand libURLLastHTTPHeaders libURLLastRHHeaders libUrlMultipartFormAddPart libUrlMultipartFormData libURLVersion lineOffset ln ln1 localNames log log2 log10 longFilePath lower macToISO matchChunk matchText matrixMultiply max md5Digest median merge messageAuthenticationCode messageDigest millisec millisecs millisecond milliseconds min monthNames nativeCharToNum normalizeText num number numToByte numToChar numToCodepoint numToNativeChar offset open openfiles openProcesses openProcessIDs openSockets paragraphOffset paramCount param params peerAddress pendingMessages platform popStdDev populationStandardDeviation populationVariance popVariance processID random randomBytes replaceText result revCreateXMLTree revCreateXMLTreeFromFile revCurrentRecord revCurrentRecordIsFirst revCurrentRecordIsLast revDatabaseColumnCount revDatabaseColumnIsNull revDatabaseColumnLengths revDatabaseColumnNames revDatabaseColumnNamed revDatabaseColumnNumbered revDatabaseColumnTypes revDatabaseConnectResult revDatabaseCursors revDatabaseID revDatabaseTableNames revDatabaseType revDataFromQuery revdb_closeCursor revdb_columnbynumber revdb_columncount revdb_columnisnull revdb_columnlengths revdb_columnnames revdb_columntypes revdb_commit revdb_connect revdb_connections revdb_connectionerr revdb_currentrecord revdb_cursorconnection revdb_cursorerr revdb_cursors revdb_dbtype revdb_disconnect revdb_execute revdb_iseof revdb_isbof revdb_movefirst revdb_movelast revdb_movenext revdb_moveprev revdb_query revdb_querylist revdb_recordcount revdb_rollback revdb_tablenames revGetDatabaseDriverPath revNumberOfRecords revOpenDatabase revOpenDatabases revQueryDatabase revQueryDatabaseBlob revQueryResult revQueryIsAtStart revQueryIsAtEnd revUnixFromMacPath revXMLAttribute revXMLAttributes revXMLAttributeValues revXMLChildContents revXMLChildNames revXMLCreateTreeFromFileWithNamespaces revXMLCreateTreeWithNamespaces revXMLDataFromXPathQuery revXMLEvaluateXPath revXMLFirstChild revXMLMatchingNode revXMLNextSibling revXMLNodeContents revXMLNumberOfChildren revXMLParent revXMLPreviousSibling revXMLRootNode revXMLRPC_CreateRequest revXMLRPC_Documents revXMLRPC_Error revXMLRPC_GetHost revXMLRPC_GetMethod revXMLRPC_GetParam revXMLText revXMLRPC_Execute revXMLRPC_GetParamCount revXMLRPC_GetParamNode revXMLRPC_GetParamType revXMLRPC_GetPath revXMLRPC_GetPort revXMLRPC_GetProtocol revXMLRPC_GetRequest revXMLRPC_GetResponse revXMLRPC_GetSocket revXMLTree revXMLTrees revXMLValidateDTD revZipDescribeItem revZipEnumerateItems revZipOpenArchives round sampVariance sec secs seconds sentenceOffset sha1Digest shell shortFilePath sin specialFolderPath sqrt standardDeviation statRound stdDev sum sysError systemVersion tan tempName textDecode textEncode tick ticks time to tokenOffset toLower toUpper transpose truewordOffset trunc uniDecode uniEncode upper URLDecode URLEncode URLStatus uuid value variableNames variance version waitDepth weekdayNames wordOffset xsltApplyStylesheet xsltApplyStylesheetFromFile xsltLoadStylesheet xsltLoadStylesheetFromFile add breakpoint cancel clear local variable file word line folder directory URL close socket process combine constant convert create new alias folder directory decrypt delete variable word line folder directory URL dispatch divide do encrypt filter get include intersect kill libURLDownloadToFile libURLFollowHttpRedirects libURLftpUpload libURLftpUploadFile libURLresetAll libUrlSetAuthCallback libURLSetDriver libURLSetCustomHTTPHeaders libUrlSetExpect100 libURLSetFTPListCommand libURLSetFTPMode libURLSetFTPStopTime libURLSetStatusCallback load extension loadedExtensions multiply socket prepare process post seek rel relative read from process rename replace require resetAll resolve revAddXMLNode revAppendXML revCloseCursor revCloseDatabase revCommitDatabase revCopyFile revCopyFolder revCopyXMLNode revDeleteFolder revDeleteXMLNode revDeleteAllXMLTrees revDeleteXMLTree revExecuteSQL revGoURL revInsertXMLNode revMoveFolder revMoveToFirstRecord revMoveToLastRecord revMoveToNextRecord revMoveToPreviousRecord revMoveToRecord revMoveXMLNode revPutIntoXMLNode revRollBackDatabase revSetDatabaseDriverPath revSetXMLAttribute revXMLRPC_AddParam revXMLRPC_DeleteAllDocuments revXMLAddDTD revXMLRPC_Free revXMLRPC_FreeAll revXMLRPC_DeleteDocument revXMLRPC_DeleteParam revXMLRPC_SetHost revXMLRPC_SetMethod revXMLRPC_SetPort revXMLRPC_SetProtocol revXMLRPC_SetSocket revZipAddItemWithData revZipAddItemWithFile revZipAddUncompressedItemWithData revZipAddUncompressedItemWithFile revZipCancel revZipCloseArchive revZipDeleteItem revZipExtractItemToFile revZipExtractItemToVariable revZipSetProgressCallback revZipRenameItem revZipReplaceItemWithData revZipReplaceItemWithFile revZipOpenArchive send set sort split start stop subtract symmetric union unload vectorDotProduct wait write"
									},
									contains: [t, {
											className: "keyword",
											begin: "\\bend\\sif\\b"
									}, {
											className: "function",
											beginKeywords: "function",
											end: "$",
											contains: [t, r, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, e.BINARY_NUMBER_MODE, e.C_NUMBER_MODE, i]
									}, {
											className: "function",
											begin: "\\bend\\s+",
											end: "$",
											keywords: "end",
											contains: [r, i],
											relevance: 0
									}, {
											beginKeywords: "command on",
											end: "$",
											contains: [t, r, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, e.BINARY_NUMBER_MODE, e.C_NUMBER_MODE, i]
									}, {
											className: "meta",
											variants: [{
													begin: "<\\?(rev|lc|livecode)",
													relevance: 10
											}, {
													begin: "<\\?"
											}, {
													begin: "\\?>"
											}]
									}, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, e.BINARY_NUMBER_MODE, e.C_NUMBER_MODE, i].concat(n),
									illegal: ";$|^\\[|^=|&|\\{"
							}
					}
			}
			,
			8429: e=>{
					const t = ["as", "in", "of", "if", "for", "while", "finally", "var", "new", "function", "do", "return", "void", "else", "break", "catch", "instanceof", "with", "throw", "case", "default", "try", "switch", "continue", "typeof", "delete", "let", "yield", "const", "class", "debugger", "async", "await", "static", "import", "from", "export", "extends"]
						, n = ["true", "false", "null", "undefined", "NaN", "Infinity"]
						, i = [].concat(["setInterval", "setTimeout", "clearInterval", "clearTimeout", "require", "exports", "eval", "isFinite", "isNaN", "parseFloat", "parseInt", "decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "escape", "unescape"], ["Object", "Function", "Boolean", "Symbol", "Math", "Date", "Number", "BigInt", "String", "RegExp", "Array", "Float32Array", "Float64Array", "Int8Array", "Uint8Array", "Uint8ClampedArray", "Int16Array", "Int32Array", "Uint16Array", "Uint32Array", "BigInt64Array", "BigUint64Array", "Set", "Map", "WeakSet", "WeakMap", "ArrayBuffer", "SharedArrayBuffer", "Atomics", "DataView", "JSON", "Promise", "Generator", "GeneratorFunction", "AsyncFunction", "Reflect", "Proxy", "Intl", "WebAssembly"], ["Error", "EvalError", "InternalError", "RangeError", "ReferenceError", "SyntaxError", "TypeError", "URIError"]);
					e.exports = function(e) {
							const r = {
									keyword: t.concat(["then", "unless", "until", "loop", "of", "by", "when", "and", "or", "is", "isnt", "not", "it", "that", "otherwise", "from", "to", "til", "fallthrough", "case", "enum", "native", "list", "map", "__hasProp", "__extends", "__slice", "__bind", "__indexOf"]),
									literal: n.concat(["yes", "no", "on", "off", "it", "that", "void"]),
									built_in: i.concat(["npm", "print"])
							}
								, o = "[A-Za-z$_](?:-[0-9A-Za-z$_]|[0-9A-Za-z$_])*"
								, s = e.inherit(e.TITLE_MODE, {
									begin: o
							})
								, a = {
									className: "subst",
									begin: /#\{/,
									end: /\}/,
									keywords: r
							}
								, l = {
									className: "subst",
									begin: /#[A-Za-z$_]/,
									end: /(?:-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,
									keywords: r
							}
								, c = [e.BINARY_NUMBER_MODE, {
									className: "number",
									begin: "(\\b0[xX][a-fA-F0-9_]+)|(\\b\\d(\\d|_\\d)*(\\.(\\d(\\d|_\\d)*)?)?(_*[eE]([-+]\\d(_\\d|\\d)*)?)?[_a-z]*)",
									relevance: 0,
									starts: {
											end: "(\\s*/)?",
											relevance: 0
									}
							}, {
									className: "string",
									variants: [{
											begin: /'''/,
											end: /'''/,
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											begin: /'/,
											end: /'/,
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											begin: /"""/,
											end: /"""/,
											contains: [e.BACKSLASH_ESCAPE, a, l]
									}, {
											begin: /"/,
											end: /"/,
											contains: [e.BACKSLASH_ESCAPE, a, l]
									}, {
											begin: /\\/,
											end: /(\s|$)/,
											excludeEnd: !0
									}]
							}, {
									className: "regexp",
									variants: [{
											begin: "//",
											end: "//[gim]*",
											contains: [a, e.HASH_COMMENT_MODE]
									}, {
											begin: /\/(?![ *])(\\.|[^\\\n])*?\/[gim]*(?=\W)/
									}]
							}, {
									begin: "@" + o
							}, {
									begin: "``",
									end: "``",
									excludeBegin: !0,
									excludeEnd: !0,
									subLanguage: "javascript"
							}];
							a.contains = c;
							const d = {
									className: "params",
									begin: "\\(",
									returnBegin: !0,
									contains: [{
											begin: /\(/,
											end: /\)/,
											keywords: r,
											contains: ["self"].concat(c)
									}]
							}
								, p = {
									variants: [{
											match: [/class\s+/, o, /\s+extends\s+/, o]
									}, {
											match: [/class\s+/, o]
									}],
									scope: {
											2: "title.class",
											4: "title.class.inherited"
									},
									keywords: r
							};
							return {
									name: "LiveScript",
									aliases: ["ls"],
									keywords: r,
									illegal: /\/\*/,
									contains: c.concat([e.COMMENT("\\/\\*", "\\*\\/"), e.HASH_COMMENT_MODE, {
											begin: "(#=>|=>|\\|>>|-?->|!->)"
									}, {
											className: "function",
											contains: [s, d],
											returnBegin: !0,
											variants: [{
													begin: "(" + o + "\\s*(?:=|:=)\\s*)?(\\(.*\\)\\s*)?\\B->\\*?",
													end: "->\\*?"
											}, {
													begin: "(" + o + "\\s*(?:=|:=)\\s*)?!?(\\(.*\\)\\s*)?\\B[-~]{1,2}>\\*?",
													end: "[-~]{1,2}>\\*?"
											}, {
													begin: "(" + o + "\\s*(?:=|:=)\\s*)?(\\(.*\\)\\s*)?\\B!?[-~]{1,2}>\\*?",
													end: "!?[-~]{1,2}>\\*?"
											}]
									}, p, {
											begin: o + ":",
											end: ":",
											returnBegin: !0,
											returnEnd: !0,
											relevance: 0
									}])
							}
					}
			}
			,
			8475: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = /([-a-zA-Z$._][\w$.-]*)/
								, i = {
									className: "variable",
									variants: [{
											begin: t.concat(/%/, n)
									}, {
											begin: /%\d+/
									}, {
											begin: /#\d+/
									}]
							}
								, r = {
									className: "title",
									variants: [{
											begin: t.concat(/@/, n)
									}, {
											begin: /@\d+/
									}, {
											begin: t.concat(/!/, n)
									}, {
											begin: t.concat(/!\d+/, n)
									}, {
											begin: /!\d+/
									}]
							};
							return {
									name: "LLVM IR",
									keywords: "begin end true false declare define global constant private linker_private internal available_externally linkonce linkonce_odr weak weak_odr appending dllimport dllexport common default hidden protected extern_weak external thread_local zeroinitializer undef null to tail target triple datalayout volatile nuw nsw nnan ninf nsz arcp fast exact inbounds align addrspace section alias module asm sideeffect gc dbg linker_private_weak attributes blockaddress initialexec localdynamic localexec prefix unnamed_addr ccc fastcc coldcc x86_stdcallcc x86_fastcallcc arm_apcscc arm_aapcscc arm_aapcs_vfpcc ptx_device ptx_kernel intel_ocl_bicc msp430_intrcc spir_func spir_kernel x86_64_sysvcc x86_64_win64cc x86_thiscallcc cc c signext zeroext inreg sret nounwind noreturn noalias nocapture byval nest readnone readonly inlinehint noinline alwaysinline optsize ssp sspreq noredzone noimplicitfloat naked builtin cold nobuiltin noduplicate nonlazybind optnone returns_twice sanitize_address sanitize_memory sanitize_thread sspstrong uwtable returned type opaque eq ne slt sgt sle sge ult ugt ule uge oeq one olt ogt ole oge ord uno ueq une x acq_rel acquire alignstack atomic catch cleanup filter inteldialect max min monotonic nand personality release seq_cst singlethread umax umin unordered xchg add fadd sub fsub mul fmul udiv sdiv fdiv urem srem frem shl lshr ashr and or xor icmp fcmp phi call trunc zext sext fptrunc fpext uitofp sitofp fptoui fptosi inttoptr ptrtoint bitcast addrspacecast select va_arg ret br switch invoke unwind unreachable indirectbr landingpad resume malloc alloca free load store getelementptr extractelement insertelement shufflevector getresult extractvalue insertvalue atomicrmw cmpxchg fence argmemonly double",
									contains: [{
											className: "type",
											begin: /\bi\d+(?=\s|\b)/
									}, e.COMMENT(/;\s*$/, null, {
											relevance: 0
									}), e.COMMENT(/;/, /$/), {
											className: "string",
											begin: /"/,
											end: /"/,
											contains: [{
													className: "char.escape",
													match: /\\\d\d/
											}]
									}, r, {
											className: "punctuation",
											relevance: 0,
											begin: /,/
									}, {
											className: "operator",
											relevance: 0,
											begin: /=/
									}, i, {
											className: "symbol",
											variants: [{
													begin: /^\s*[a-z]+:/
											}],
											relevance: 0
									}, {
											className: "number",
											variants: [{
													begin: /[su]?0[xX][KMLHR]?[a-fA-F0-9]+/
											}, {
													begin: /[-+]?\d+(?:[.]\d+)?(?:[eE][-+]?\d+(?:[.]\d+)?)?/
											}],
											relevance: 0
									}]
							}
					}
			}
			,
			6578: e=>{
					e.exports = function(e) {
							const t = {
									className: "string",
									begin: '"',
									end: '"',
									contains: [{
											className: "subst",
											begin: /\\[tn"\\]/
									}]
							}
								, n = {
									className: "number",
									relevance: 0,
									begin: e.C_NUMBER_RE
							};
							return {
									name: "LSL (Linden Scripting Language)",
									illegal: ":",
									contains: [t, {
											className: "comment",
											variants: [e.COMMENT("//", "$"), e.COMMENT("/\\*", "\\*/")],
											relevance: 0
									}, n, {
											className: "section",
											variants: [{
													begin: "\\b(state|default)\\b"
											}, {
													begin: "\\b(state_(entry|exit)|touch(_(start|end))?|(land_)?collision(_(start|end))?|timer|listen|(no_)?sensor|control|(not_)?at_(rot_)?target|money|email|experience_permissions(_denied)?|run_time_permissions|changed|attach|dataserver|moving_(start|end)|link_message|(on|object)_rez|remote_data|http_re(sponse|quest)|path_update|transaction_result)\\b"
											}]
									}, {
											className: "built_in",
											begin: "\\b(ll(AgentInExperience|(Create|DataSize|Delete|KeyCount|Keys|Read|Update)KeyValue|GetExperience(Details|ErrorMessage)|ReturnObjectsBy(ID|Owner)|Json(2List|[GS]etValue|ValueType)|Sin|Cos|Tan|Atan2|Sqrt|Pow|Abs|Fabs|Frand|Floor|Ceil|Round|Vec(Mag|Norm|Dist)|Rot(Between|2(Euler|Fwd|Left|Up))|(Euler|Axes)2Rot|Whisper|(Region|Owner)?Say|Shout|Listen(Control|Remove)?|Sensor(Repeat|Remove)?|Detected(Name|Key|Owner|Type|Pos|Vel|Grab|Rot|Group|LinkNumber)|Die|Ground|Wind|([GS]et)(AnimationOverride|MemoryLimit|PrimMediaParams|ParcelMusicURL|Object(Desc|Name)|PhysicsMaterial|Status|Scale|Color|Alpha|Texture|Pos|Rot|Force|Torque)|ResetAnimationOverride|(Scale|Offset|Rotate)Texture|(Rot)?Target(Remove)?|(Stop)?MoveToTarget|Apply(Rotational)?Impulse|Set(KeyframedMotion|ContentType|RegionPos|(Angular)?Velocity|Buoyancy|HoverHeight|ForceAndTorque|TimerEvent|ScriptState|Damage|TextureAnim|Sound(Queueing|Radius)|Vehicle(Type|(Float|Vector|Rotation)Param)|(Touch|Sit)?Text|Camera(Eye|At)Offset|PrimitiveParams|ClickAction|Link(Alpha|Color|PrimitiveParams(Fast)?|Texture(Anim)?|Camera|Media)|RemoteScriptAccessPin|PayPrice|LocalRot)|ScaleByFactor|Get((Max|Min)ScaleFactor|ClosestNavPoint|StaticPath|SimStats|Env|PrimitiveParams|Link(PrimitiveParams|Number(OfSides)?|Key|Name|Media)|HTTPHeader|FreeURLs|Object(Details|PermMask|PrimCount)|Parcel(MaxPrims|Details|Prim(Count|Owners))|Attached(List)?|(SPMax|Free|Used)Memory|Region(Name|TimeDilation|FPS|Corner|AgentCount)|Root(Position|Rotation)|UnixTime|(Parcel|Region)Flags|(Wall|GMT)clock|SimulatorHostname|BoundingBox|GeometricCenter|Creator|NumberOf(Prims|NotecardLines|Sides)|Animation(List)?|(Camera|Local)(Pos|Rot)|Vel|Accel|Omega|Time(stamp|OfDay)|(Object|CenterOf)?Mass|MassMKS|Energy|Owner|(Owner)?Key|SunDirection|Texture(Offset|Scale|Rot)|Inventory(Number|Name|Key|Type|Creator|PermMask)|Permissions(Key)?|StartParameter|List(Length|EntryType)|Date|Agent(Size|Info|Language|List)|LandOwnerAt|NotecardLine|Script(Name|State))|(Get|Reset|GetAndReset)Time|PlaySound(Slave)?|LoopSound(Master|Slave)?|(Trigger|Stop|Preload)Sound|((Get|Delete)Sub|Insert)String|To(Upper|Lower)|Give(InventoryList|Money)|RezObject|(Stop)?LookAt|Sleep|CollisionFilter|(Take|Release)Controls|DetachFromAvatar|AttachToAvatar(Temp)?|InstantMessage|(GetNext)?Email|StopHover|MinEventDelay|RotLookAt|String(Length|Trim)|(Start|Stop)Animation|TargetOmega|Request(Experience)?Permissions|(Create|Break)Link|BreakAllLinks|(Give|Remove)Inventory|Water|PassTouches|Request(Agent|Inventory)Data|TeleportAgent(Home|GlobalCoords)?|ModifyLand|CollisionSound|ResetScript|MessageLinked|PushObject|PassCollisions|AxisAngle2Rot|Rot2(Axis|Angle)|A(cos|sin)|AngleBetween|AllowInventoryDrop|SubStringIndex|List2(CSV|Integer|Json|Float|String|Key|Vector|Rot|List(Strided)?)|DeleteSubList|List(Statistics|Sort|Randomize|(Insert|Find|Replace)List)|EdgeOfWorld|AdjustSoundVolume|Key2Name|TriggerSoundLimited|EjectFromLand|(CSV|ParseString)2List|OverMyLand|SameGroup|UnSit|Ground(Slope|Normal|Contour)|GroundRepel|(Set|Remove)VehicleFlags|SitOnLink|(AvatarOn)?(Link)?SitTarget|Script(Danger|Profiler)|Dialog|VolumeDetect|ResetOtherScript|RemoteLoadScriptPin|(Open|Close)RemoteDataChannel|SendRemoteData|RemoteDataReply|(Integer|String)ToBase64|XorBase64|Log(10)?|Base64To(String|Integer)|ParseStringKeepNulls|RezAtRoot|RequestSimulatorData|ForceMouselook|(Load|Release|(E|Une)scape)URL|ParcelMedia(CommandList|Query)|ModPow|MapDestination|(RemoveFrom|AddTo|Reset)Land(Pass|Ban)List|(Set|Clear)CameraParams|HTTP(Request|Response)|TextBox|DetectedTouch(UV|Face|Pos|(N|Bin)ormal|ST)|(MD5|SHA1|DumpList2)String|Request(Secure)?URL|Clear(Prim|Link)Media|(Link)?ParticleSystem|(Get|Request)(Username|DisplayName)|RegionSayTo|CastRay|GenerateKey|TransferLindenDollars|ManageEstateAccess|(Create|Delete)Character|ExecCharacterCmd|Evade|FleeFrom|NavigateTo|PatrolPoints|Pursue|UpdateCharacter|WanderWithin))\\b"
									}, {
											className: "literal",
											variants: [{
													begin: "\\b(PI|TWO_PI|PI_BY_TWO|DEG_TO_RAD|RAD_TO_DEG|SQRT2)\\b"
											}, {
													begin: "\\b(XP_ERROR_(EXPERIENCES_DISABLED|EXPERIENCE_(DISABLED|SUSPENDED)|INVALID_(EXPERIENCE|PARAMETERS)|KEY_NOT_FOUND|MATURITY_EXCEEDED|NONE|NOT_(FOUND|PERMITTED(_LAND)?)|NO_EXPERIENCE|QUOTA_EXCEEDED|RETRY_UPDATE|STORAGE_EXCEPTION|STORE_DISABLED|THROTTLED|UNKNOWN_ERROR)|JSON_APPEND|STATUS_(PHYSICS|ROTATE_[XYZ]|PHANTOM|SANDBOX|BLOCK_GRAB(_OBJECT)?|(DIE|RETURN)_AT_EDGE|CAST_SHADOWS|OK|MALFORMED_PARAMS|TYPE_MISMATCH|BOUNDS_ERROR|NOT_(FOUND|SUPPORTED)|INTERNAL_ERROR|WHITELIST_FAILED)|AGENT(_(BY_(LEGACY_|USER)NAME|FLYING|ATTACHMENTS|SCRIPTED|MOUSELOOK|SITTING|ON_OBJECT|AWAY|WALKING|IN_AIR|TYPING|CROUCHING|BUSY|ALWAYS_RUN|AUTOPILOT|LIST_(PARCEL(_OWNER)?|REGION)))?|CAMERA_(PITCH|DISTANCE|BEHINDNESS_(ANGLE|LAG)|(FOCUS|POSITION)(_(THRESHOLD|LOCKED|LAG))?|FOCUS_OFFSET|ACTIVE)|ANIM_ON|LOOP|REVERSE|PING_PONG|SMOOTH|ROTATE|SCALE|ALL_SIDES|LINK_(ROOT|SET|ALL_(OTHERS|CHILDREN)|THIS)|ACTIVE|PASS(IVE|_(ALWAYS|IF_NOT_HANDLED|NEVER))|SCRIPTED|CONTROL_(FWD|BACK|(ROT_)?(LEFT|RIGHT)|UP|DOWN|(ML_)?LBUTTON)|PERMISSION_(RETURN_OBJECTS|DEBIT|OVERRIDE_ANIMATIONS|SILENT_ESTATE_MANAGEMENT|TAKE_CONTROLS|TRIGGER_ANIMATION|ATTACH|CHANGE_LINKS|(CONTROL|TRACK)_CAMERA|TELEPORT)|INVENTORY_(TEXTURE|SOUND|OBJECT|SCRIPT|LANDMARK|CLOTHING|NOTECARD|BODYPART|ANIMATION|GESTURE|ALL|NONE)|CHANGED_(INVENTORY|COLOR|SHAPE|SCALE|TEXTURE|LINK|ALLOWED_DROP|OWNER|REGION(_START)?|TELEPORT|MEDIA)|OBJECT_(CLICK_ACTION|HOVER_HEIGHT|LAST_OWNER_ID|(PHYSICS|SERVER|STREAMING)_COST|UNKNOWN_DETAIL|CHARACTER_TIME|PHANTOM|PHYSICS|TEMP_(ATTACHED|ON_REZ)|NAME|DESC|POS|PRIM_(COUNT|EQUIVALENCE)|RETURN_(PARCEL(_OWNER)?|REGION)|REZZER_KEY|ROO?T|VELOCITY|OMEGA|OWNER|GROUP(_TAG)?|CREATOR|ATTACHED_(POINT|SLOTS_AVAILABLE)|RENDER_WEIGHT|(BODY_SHAPE|PATHFINDING)_TYPE|(RUNNING|TOTAL)_SCRIPT_COUNT|TOTAL_INVENTORY_COUNT|SCRIPT_(MEMORY|TIME))|TYPE_(INTEGER|FLOAT|STRING|KEY|VECTOR|ROTATION|INVALID)|(DEBUG|PUBLIC)_CHANNEL|ATTACH_(AVATAR_CENTER|CHEST|HEAD|BACK|PELVIS|MOUTH|CHIN|NECK|NOSE|BELLY|[LR](SHOULDER|HAND|FOOT|EAR|EYE|[UL](ARM|LEG)|HIP)|(LEFT|RIGHT)_PEC|HUD_(CENTER_[12]|TOP_(RIGHT|CENTER|LEFT)|BOTTOM(_(RIGHT|LEFT))?)|[LR]HAND_RING1|TAIL_(BASE|TIP)|[LR]WING|FACE_(JAW|[LR]EAR|[LR]EYE|TOUNGE)|GROIN|HIND_[LR]FOOT)|LAND_(LEVEL|RAISE|LOWER|SMOOTH|NOISE|REVERT)|DATA_(ONLINE|NAME|BORN|SIM_(POS|STATUS|RATING)|PAYINFO)|PAYMENT_INFO_(ON_FILE|USED)|REMOTE_DATA_(CHANNEL|REQUEST|REPLY)|PSYS_(PART_(BF_(ZERO|ONE(_MINUS_(DEST_COLOR|SOURCE_(ALPHA|COLOR)))?|DEST_COLOR|SOURCE_(ALPHA|COLOR))|BLEND_FUNC_(DEST|SOURCE)|FLAGS|(START|END)_(COLOR|ALPHA|SCALE|GLOW)|MAX_AGE|(RIBBON|WIND|INTERP_(COLOR|SCALE)|BOUNCE|FOLLOW_(SRC|VELOCITY)|TARGET_(POS|LINEAR)|EMISSIVE)_MASK)|SRC_(MAX_AGE|PATTERN|ANGLE_(BEGIN|END)|BURST_(RATE|PART_COUNT|RADIUS|SPEED_(MIN|MAX))|ACCEL|TEXTURE|TARGET_KEY|OMEGA|PATTERN_(DROP|EXPLODE|ANGLE(_CONE(_EMPTY)?)?)))|VEHICLE_(REFERENCE_FRAME|TYPE_(NONE|SLED|CAR|BOAT|AIRPLANE|BALLOON)|(LINEAR|ANGULAR)_(FRICTION_TIMESCALE|MOTOR_DIRECTION)|LINEAR_MOTOR_OFFSET|HOVER_(HEIGHT|EFFICIENCY|TIMESCALE)|BUOYANCY|(LINEAR|ANGULAR)_(DEFLECTION_(EFFICIENCY|TIMESCALE)|MOTOR_(DECAY_)?TIMESCALE)|VERTICAL_ATTRACTION_(EFFICIENCY|TIMESCALE)|BANKING_(EFFICIENCY|MIX|TIMESCALE)|FLAG_(NO_DEFLECTION_UP|LIMIT_(ROLL_ONLY|MOTOR_UP)|HOVER_((WATER|TERRAIN|UP)_ONLY|GLOBAL_HEIGHT)|MOUSELOOK_(STEER|BANK)|CAMERA_DECOUPLED))|PRIM_(ALLOW_UNSIT|ALPHA_MODE(_(BLEND|EMISSIVE|MASK|NONE))?|NORMAL|SPECULAR|TYPE(_(BOX|CYLINDER|PRISM|SPHERE|TORUS|TUBE|RING|SCULPT))?|HOLE_(DEFAULT|CIRCLE|SQUARE|TRIANGLE)|MATERIAL(_(STONE|METAL|GLASS|WOOD|FLESH|PLASTIC|RUBBER))?|SHINY_(NONE|LOW|MEDIUM|HIGH)|BUMP_(NONE|BRIGHT|DARK|WOOD|BARK|BRICKS|CHECKER|CONCRETE|TILE|STONE|DISKS|GRAVEL|BLOBS|SIDING|LARGETILE|STUCCO|SUCTION|WEAVE)|TEXGEN_(DEFAULT|PLANAR)|SCRIPTED_SIT_ONLY|SCULPT_(TYPE_(SPHERE|TORUS|PLANE|CYLINDER|MASK)|FLAG_(MIRROR|INVERT))|PHYSICS(_(SHAPE_(CONVEX|NONE|PRIM|TYPE)))?|(POS|ROT)_LOCAL|SLICE|TEXT|FLEXIBLE|POINT_LIGHT|TEMP_ON_REZ|PHANTOM|POSITION|SIT_TARGET|SIZE|ROTATION|TEXTURE|NAME|OMEGA|DESC|LINK_TARGET|COLOR|BUMP_SHINY|FULLBRIGHT|TEXGEN|GLOW|MEDIA_(ALT_IMAGE_ENABLE|CONTROLS|(CURRENT|HOME)_URL|AUTO_(LOOP|PLAY|SCALE|ZOOM)|FIRST_CLICK_INTERACT|(WIDTH|HEIGHT)_PIXELS|WHITELIST(_ENABLE)?|PERMS_(INTERACT|CONTROL)|PARAM_MAX|CONTROLS_(STANDARD|MINI)|PERM_(NONE|OWNER|GROUP|ANYONE)|MAX_(URL_LENGTH|WHITELIST_(SIZE|COUNT)|(WIDTH|HEIGHT)_PIXELS)))|MASK_(BASE|OWNER|GROUP|EVERYONE|NEXT)|PERM_(TRANSFER|MODIFY|COPY|MOVE|ALL)|PARCEL_(MEDIA_COMMAND_(STOP|PAUSE|PLAY|LOOP|TEXTURE|URL|TIME|AGENT|UNLOAD|AUTO_ALIGN|TYPE|SIZE|DESC|LOOP_SET)|FLAG_(ALLOW_(FLY|(GROUP_)?SCRIPTS|LANDMARK|TERRAFORM|DAMAGE|CREATE_(GROUP_)?OBJECTS)|USE_(ACCESS_(GROUP|LIST)|BAN_LIST|LAND_PASS_LIST)|LOCAL_SOUND_ONLY|RESTRICT_PUSHOBJECT|ALLOW_(GROUP|ALL)_OBJECT_ENTRY)|COUNT_(TOTAL|OWNER|GROUP|OTHER|SELECTED|TEMP)|DETAILS_(NAME|DESC|OWNER|GROUP|AREA|ID|SEE_AVATARS))|LIST_STAT_(MAX|MIN|MEAN|MEDIAN|STD_DEV|SUM(_SQUARES)?|NUM_COUNT|GEOMETRIC_MEAN|RANGE)|PAY_(HIDE|DEFAULT)|REGION_FLAG_(ALLOW_DAMAGE|FIXED_SUN|BLOCK_TERRAFORM|SANDBOX|DISABLE_(COLLISIONS|PHYSICS)|BLOCK_FLY|ALLOW_DIRECT_TELEPORT|RESTRICT_PUSHOBJECT)|HTTP_(METHOD|MIMETYPE|BODY_(MAXLENGTH|TRUNCATED)|CUSTOM_HEADER|PRAGMA_NO_CACHE|VERBOSE_THROTTLE|VERIFY_CERT)|SIT_(INVALID_(AGENT|LINK_OBJECT)|NO(T_EXPERIENCE|_(ACCESS|EXPERIENCE_PERMISSION|SIT_TARGET)))|STRING_(TRIM(_(HEAD|TAIL))?)|CLICK_ACTION_(NONE|TOUCH|SIT|BUY|PAY|OPEN(_MEDIA)?|PLAY|ZOOM)|TOUCH_INVALID_FACE|PROFILE_(NONE|SCRIPT_MEMORY)|RC_(DATA_FLAGS|DETECT_PHANTOM|GET_(LINK_NUM|NORMAL|ROOT_KEY)|MAX_HITS|REJECT_(TYPES|AGENTS|(NON)?PHYSICAL|LAND))|RCERR_(CAST_TIME_EXCEEDED|SIM_PERF_LOW|UNKNOWN)|ESTATE_ACCESS_(ALLOWED_(AGENT|GROUP)_(ADD|REMOVE)|BANNED_AGENT_(ADD|REMOVE))|DENSITY|FRICTION|RESTITUTION|GRAVITY_MULTIPLIER|KFM_(COMMAND|CMD_(PLAY|STOP|PAUSE)|MODE|FORWARD|LOOP|PING_PONG|REVERSE|DATA|ROTATION|TRANSLATION)|ERR_(GENERIC|PARCEL_PERMISSIONS|MALFORMED_PARAMS|RUNTIME_PERMISSIONS|THROTTLED)|CHARACTER_(CMD_((SMOOTH_)?STOP|JUMP)|DESIRED_(TURN_)?SPEED|RADIUS|STAY_WITHIN_PARCEL|LENGTH|ORIENTATION|ACCOUNT_FOR_SKIPPED_FRAMES|AVOIDANCE_MODE|TYPE(_([ABCD]|NONE))?|MAX_(DECEL|TURN_RADIUS|(ACCEL|SPEED)))|PURSUIT_(OFFSET|FUZZ_FACTOR|GOAL_TOLERANCE|INTERCEPT)|REQUIRE_LINE_OF_SIGHT|FORCE_DIRECT_PATH|VERTICAL|HORIZONTAL|AVOID_(CHARACTERS|DYNAMIC_OBSTACLES|NONE)|PU_(EVADE_(HIDDEN|SPOTTED)|FAILURE_(DYNAMIC_PATHFINDING_DISABLED|INVALID_(GOAL|START)|NO_(NAVMESH|VALID_DESTINATION)|OTHER|TARGET_GONE|(PARCEL_)?UNREACHABLE)|(GOAL|SLOWDOWN_DISTANCE)_REACHED)|TRAVERSAL_TYPE(_(FAST|NONE|SLOW))?|CONTENT_TYPE_(ATOM|FORM|HTML|JSON|LLSD|RSS|TEXT|XHTML|XML)|GCNP_(RADIUS|STATIC)|(PATROL|WANDER)_PAUSE_AT_WAYPOINTS|OPT_(AVATAR|CHARACTER|EXCLUSION_VOLUME|LEGACY_LINKSET|MATERIAL_VOLUME|OTHER|STATIC_OBSTACLE|WALKABLE)|SIM_STAT_PCT_CHARS_STEPPED)\\b"
											}, {
													begin: "\\b(FALSE|TRUE)\\b"
											}, {
													begin: "\\b(ZERO_ROTATION)\\b"
											}, {
													begin: "\\b(EOF|JSON_(ARRAY|DELETE|FALSE|INVALID|NULL|NUMBER|OBJECT|STRING|TRUE)|NULL_KEY|TEXTURE_(BLANK|DEFAULT|MEDIA|PLYWOOD|TRANSPARENT)|URL_REQUEST_(GRANTED|DENIED))\\b"
											}, {
													begin: "\\b(ZERO_VECTOR|TOUCH_INVALID_(TEXCOORD|VECTOR))\\b"
											}]
									}, {
											className: "type",
											begin: "\\b(integer|float|string|key|vector|quaternion|rotation|list)\\b"
									}]
							}
					}
			}
			,
			1640: e=>{
					e.exports = function(e) {
							const t = "\\[=*\\["
								, n = "\\]=*\\]"
								, i = {
									begin: t,
									end: n,
									contains: ["self"]
							}
								, r = [e.COMMENT("--(?!" + t + ")", "$"), e.COMMENT("--" + t, n, {
									contains: [i],
									relevance: 10
							})];
							return {
									name: "Lua",
									keywords: {
											$pattern: e.UNDERSCORE_IDENT_RE,
											literal: "true false nil",
											keyword: "and break do else elseif end for goto if in local not or repeat return then until while",
											built_in: "_G _ENV _VERSION __index __newindex __mode __call __metatable __tostring __len __gc __add __sub __mul __div __mod __pow __concat __unm __eq __lt __le assert collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring module next pairs pcall print rawequal rawget rawset require select setfenv setmetatable tonumber tostring type unpack xpcall arg self coroutine resume yield status wrap create running debug getupvalue debug sethook getmetatable gethook setmetatable setlocal traceback setfenv getinfo setupvalue getlocal getregistry getfenv io lines write close flush open output type read stderr stdin input stdout popen tmpfile math log max acos huge ldexp pi cos tanh pow deg tan cosh sinh random randomseed frexp ceil floor rad abs sqrt modf asin min mod fmod log10 atan2 exp sin atan os exit setlocale date getenv difftime remove time clock tmpname rename execute package preload loadlib loaded loaders cpath config path seeall string sub upper len gfind rep find match char dump gmatch reverse byte format gsub lower table setn insert getn foreachi maxn foreach concat sort remove"
									},
									contains: r.concat([{
											className: "function",
											beginKeywords: "function",
											end: "\\)",
											contains: [e.inherit(e.TITLE_MODE, {
													begin: "([_a-zA-Z]\\w*\\.)*([_a-zA-Z]\\w*:)?[_a-zA-Z]\\w*"
											}), {
													className: "params",
													begin: "\\(",
													endsWithParent: !0,
													contains: r
											}].concat(r)
									}, e.C_NUMBER_MODE, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, {
											className: "string",
											begin: t,
											end: n,
											contains: [i],
											relevance: 5
									}])
							}
					}
			}
			,
			3425: e=>{
					e.exports = function(e) {
							const t = {
									className: "variable",
									variants: [{
											begin: "\\$\\(" + e.UNDERSCORE_IDENT_RE + "\\)",
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											begin: /\$[@%<?\^\+\*]/
									}]
							}
								, n = {
									className: "string",
									begin: /"/,
									end: /"/,
									contains: [e.BACKSLASH_ESCAPE, t]
							}
								, i = {
									className: "variable",
									begin: /\$\([\w-]+\s/,
									end: /\)/,
									keywords: {
											built_in: "subst patsubst strip findstring filter filter-out sort word wordlist firstword lastword dir notdir suffix basename addsuffix addprefix join wildcard realpath abspath error warning shell origin flavor foreach if or and call eval file value"
									},
									contains: [t]
							}
								, r = {
									begin: "^" + e.UNDERSCORE_IDENT_RE + "\\s*(?=[:+?]?=)"
							}
								, o = {
									className: "section",
									begin: /^[^\s]+:/,
									end: /$/,
									contains: [t]
							};
							return {
									name: "Makefile",
									aliases: ["mk", "mak", "make"],
									keywords: {
											$pattern: /[\w-]+/,
											keyword: "define endef undefine ifdef ifndef ifeq ifneq else endif include -include sinclude override export unexport private vpath"
									},
									contains: [e.HASH_COMMENT_MODE, t, n, i, r, {
											className: "meta",
											begin: /^\.PHONY:/,
											end: /$/,
											keywords: {
													$pattern: /[\.\w]+/,
													keyword: ".PHONY"
											}
									}, o]
							}
					}
			}
			,
			1032: e=>{
					e.exports = function(e) {
							const t = {
									begin: /<\/?[A-Za-z_]/,
									end: ">",
									subLanguage: "xml",
									relevance: 0
							}
								, n = {
									variants: [{
											begin: /\[.+?\]\[.*?\]/,
											relevance: 0
									}, {
											begin: /\[.+?\]\(((data|javascript|mailto):|(?:http|ftp)s?:\/\/).*?\)/,
											relevance: 2
									}, {
											begin: e.regex.concat(/\[.+?\]\(/, /[A-Za-z][A-Za-z0-9+.-]*/, /:\/\/.*?\)/),
											relevance: 2
									}, {
											begin: /\[.+?\]\([./?&#].*?\)/,
											relevance: 1
									}, {
											begin: /\[.*?\]\(.*?\)/,
											relevance: 0
									}],
									returnBegin: !0,
									contains: [{
											match: /\[(?=\])/
									}, {
											className: "string",
											relevance: 0,
											begin: "\\[",
											end: "\\]",
											excludeBegin: !0,
											returnEnd: !0
									}, {
											className: "link",
											relevance: 0,
											begin: "\\]\\(",
											end: "\\)",
											excludeBegin: !0,
											excludeEnd: !0
									}, {
											className: "symbol",
											relevance: 0,
											begin: "\\]\\[",
											end: "\\]",
											excludeBegin: !0,
											excludeEnd: !0
									}]
							}
								, i = {
									className: "strong",
									contains: [],
									variants: [{
											begin: /_{2}(?!\s)/,
											end: /_{2}/
									}, {
											begin: /\*{2}(?!\s)/,
											end: /\*{2}/
									}]
							}
								, r = {
									className: "emphasis",
									contains: [],
									variants: [{
											begin: /\*(?![*\s])/,
											end: /\*/
									}, {
											begin: /_(?![_\s])/,
											end: /_/,
											relevance: 0
									}]
							}
								, o = e.inherit(i, {
									contains: []
							})
								, s = e.inherit(r, {
									contains: []
							});
							i.contains.push(s),
							r.contains.push(o);
							let a = [t, n];
							return [i, r, o, s].forEach((e=>{
									e.contains = e.contains.concat(a)
							}
							)),
							a = a.concat(i, r),
							{
									name: "Markdown",
									aliases: ["md", "mkdown", "mkd"],
									contains: [{
											className: "section",
											variants: [{
													begin: "^#{1,6}",
													end: "$",
													contains: a
											}, {
													begin: "(?=^.+?\\n[=-]{2,}$)",
													contains: [{
															begin: "^[=-]*$"
													}, {
															begin: "^",
															end: "\\n",
															contains: a
													}]
											}]
									}, t, {
											className: "bullet",
											begin: "^[ \t]*([*+-]|(\\d+\\.))(?=\\s+)",
											end: "\\s+",
											excludeEnd: !0
									}, i, r, {
											className: "quote",
											begin: "^>\\s+",
											contains: a,
											end: "$"
									}, {
											className: "code",
											variants: [{
													begin: "(`{3,})[^`](.|\\n)*?\\1`*[ ]*"
											}, {
													begin: "(~{3,})[^~](.|\\n)*?\\1~*[ ]*"
											}, {
													begin: "```",
													end: "```+[ ]*$"
											}, {
													begin: "~~~",
													end: "~~~+[ ]*$"
											}, {
													begin: "`.+?`"
											}, {
													begin: "(?=^( {4}|\\t))",
													contains: [{
															begin: "^( {4}|\\t)",
															end: "(\\n)$"
													}],
													relevance: 0
											}]
									}, {
											begin: "^[-\\*]{3,}",
											end: "$"
									}, n, {
											begin: /^\[[^\n]+\]:/,
											returnBegin: !0,
											contains: [{
													className: "symbol",
													begin: /\[/,
													end: /\]/,
													excludeBegin: !0,
													excludeEnd: !0
											}, {
													className: "link",
													begin: /:\s*/,
													end: /$/,
													excludeBegin: !0
											}]
									}]
							}
					}
			}
			,
			6584: e=>{
					const t = ["AASTriangle", "AbelianGroup", "Abort", "AbortKernels", "AbortProtect", "AbortScheduledTask", "Above", "Abs", "AbsArg", "AbsArgPlot", "Absolute", "AbsoluteCorrelation", "AbsoluteCorrelationFunction", "AbsoluteCurrentValue", "AbsoluteDashing", "AbsoluteFileName", "AbsoluteOptions", "AbsolutePointSize", "AbsoluteThickness", "AbsoluteTime", "AbsoluteTiming", "AcceptanceThreshold", "AccountingForm", "Accumulate", "Accuracy", "AccuracyGoal", "ActionDelay", "ActionMenu", "ActionMenuBox", "ActionMenuBoxOptions", "Activate", "Active", "ActiveClassification", "ActiveClassificationObject", "ActiveItem", "ActivePrediction", "ActivePredictionObject", "ActiveStyle", "AcyclicGraphQ", "AddOnHelpPath", "AddSides", "AddTo", "AddToSearchIndex", "AddUsers", "AdjacencyGraph", "AdjacencyList", "AdjacencyMatrix", "AdjacentMeshCells", "AdjustmentBox", "AdjustmentBoxOptions", "AdjustTimeSeriesForecast", "AdministrativeDivisionData", "AffineHalfSpace", "AffineSpace", "AffineStateSpaceModel", "AffineTransform", "After", "AggregatedEntityClass", "AggregationLayer", "AircraftData", "AirportData", "AirPressureData", "AirTemperatureData", "AiryAi", "AiryAiPrime", "AiryAiZero", "AiryBi", "AiryBiPrime", "AiryBiZero", "AlgebraicIntegerQ", "AlgebraicNumber", "AlgebraicNumberDenominator", "AlgebraicNumberNorm", "AlgebraicNumberPolynomial", "AlgebraicNumberTrace", "AlgebraicRules", "AlgebraicRulesData", "Algebraics", "AlgebraicUnitQ", "Alignment", "AlignmentMarker", "AlignmentPoint", "All", "AllowAdultContent", "AllowedCloudExtraParameters", "AllowedCloudParameterExtensions", "AllowedDimensions", "AllowedFrequencyRange", "AllowedHeads", "AllowGroupClose", "AllowIncomplete", "AllowInlineCells", "AllowKernelInitialization", "AllowLooseGrammar", "AllowReverseGroupClose", "AllowScriptLevelChange", "AllowVersionUpdate", "AllTrue", "Alphabet", "AlphabeticOrder", "AlphabeticSort", "AlphaChannel", "AlternateImage", "AlternatingFactorial", "AlternatingGroup", "AlternativeHypothesis", "Alternatives", "AltitudeMethod", "AmbientLight", "AmbiguityFunction", "AmbiguityList", "Analytic", "AnatomyData", "AnatomyForm", "AnatomyPlot3D", "AnatomySkinStyle", "AnatomyStyling", "AnchoredSearch", "And", "AndersonDarlingTest", "AngerJ", "AngleBisector", "AngleBracket", "AnglePath", "AnglePath3D", "AngleVector", "AngularGauge", "Animate", "AnimationCycleOffset", "AnimationCycleRepetitions", "AnimationDirection", "AnimationDisplayTime", "AnimationRate", "AnimationRepetitions", "AnimationRunning", "AnimationRunTime", "AnimationTimeIndex", "Animator", "AnimatorBox", "AnimatorBoxOptions", "AnimatorElements", "Annotate", "Annotation", "AnnotationDelete", "AnnotationKeys", "AnnotationRules", "AnnotationValue", "Annuity", "AnnuityDue", "Annulus", "AnomalyDetection", "AnomalyDetector", "AnomalyDetectorFunction", "Anonymous", "Antialiasing", "AntihermitianMatrixQ", "Antisymmetric", "AntisymmetricMatrixQ", "Antonyms", "AnyOrder", "AnySubset", "AnyTrue", "Apart", "ApartSquareFree", "APIFunction", "Appearance", "AppearanceElements", "AppearanceRules", "AppellF1", "Append", "AppendCheck", "AppendLayer", "AppendTo", "Apply", "ApplySides", "ArcCos", "ArcCosh", "ArcCot", "ArcCoth", "ArcCsc", "ArcCsch", "ArcCurvature", "ARCHProcess", "ArcLength", "ArcSec", "ArcSech", "ArcSin", "ArcSinDistribution", "ArcSinh", "ArcTan", "ArcTanh", "Area", "Arg", "ArgMax", "ArgMin", "ArgumentCountQ", "ARIMAProcess", "ArithmeticGeometricMean", "ARMAProcess", "Around", "AroundReplace", "ARProcess", "Array", "ArrayComponents", "ArrayDepth", "ArrayFilter", "ArrayFlatten", "ArrayMesh", "ArrayPad", "ArrayPlot", "ArrayQ", "ArrayResample", "ArrayReshape", "ArrayRules", "Arrays", "Arrow", "Arrow3DBox", "ArrowBox", "Arrowheads", "ASATriangle", "Ask", "AskAppend", "AskConfirm", "AskDisplay", "AskedQ", "AskedValue", "AskFunction", "AskState", "AskTemplateDisplay", "AspectRatio", "AspectRatioFixed", "Assert", "AssociateTo", "Association", "AssociationFormat", "AssociationMap", "AssociationQ", "AssociationThread", "AssumeDeterministic", "Assuming", "Assumptions", "AstronomicalData", "Asymptotic", "AsymptoticDSolveValue", "AsymptoticEqual", "AsymptoticEquivalent", "AsymptoticGreater", "AsymptoticGreaterEqual", "AsymptoticIntegrate", "AsymptoticLess", "AsymptoticLessEqual", "AsymptoticOutputTracker", "AsymptoticProduct", "AsymptoticRSolveValue", "AsymptoticSolve", "AsymptoticSum", "Asynchronous", "AsynchronousTaskObject", "AsynchronousTasks", "Atom", "AtomCoordinates", "AtomCount", "AtomDiagramCoordinates", "AtomList", "AtomQ", "AttentionLayer", "Attributes", "Audio", "AudioAmplify", "AudioAnnotate", "AudioAnnotationLookup", "AudioBlockMap", "AudioCapture", "AudioChannelAssignment", "AudioChannelCombine", "AudioChannelMix", "AudioChannels", "AudioChannelSeparate", "AudioData", "AudioDelay", "AudioDelete", "AudioDevice", "AudioDistance", "AudioEncoding", "AudioFade", "AudioFrequencyShift", "AudioGenerator", "AudioIdentify", "AudioInputDevice", "AudioInsert", "AudioInstanceQ", "AudioIntervals", "AudioJoin", "AudioLabel", "AudioLength", "AudioLocalMeasurements", "AudioLooping", "AudioLoudness", "AudioMeasurements", "AudioNormalize", "AudioOutputDevice", "AudioOverlay", "AudioPad", "AudioPan", "AudioPartition", "AudioPause", "AudioPitchShift", "AudioPlay", "AudioPlot", "AudioQ", "AudioRecord", "AudioReplace", "AudioResample", "AudioReverb", "AudioReverse", "AudioSampleRate", "AudioSpectralMap", "AudioSpectralTransformation", "AudioSplit", "AudioStop", "AudioStream", "AudioStreams", "AudioTimeStretch", "AudioTracks", "AudioTrim", "AudioType", "AugmentedPolyhedron", "AugmentedSymmetricPolynomial", "Authenticate", "Authentication", "AuthenticationDialog", "AutoAction", "Autocomplete", "AutocompletionFunction", "AutoCopy", "AutocorrelationTest", "AutoDelete", "AutoEvaluateEvents", "AutoGeneratedPackage", "AutoIndent", "AutoIndentSpacings", "AutoItalicWords", "AutoloadPath", "AutoMatch", "Automatic", "AutomaticImageSize", "AutoMultiplicationSymbol", "AutoNumberFormatting", "AutoOpenNotebooks", "AutoOpenPalettes", "AutoQuoteCharacters", "AutoRefreshed", "AutoRemove", "AutorunSequencing", "AutoScaling", "AutoScroll", "AutoSpacing", "AutoStyleOptions", "AutoStyleWords", "AutoSubmitting", "Axes", "AxesEdge", "AxesLabel", "AxesOrigin", "AxesStyle", "AxiomaticTheory", "Axis", "BabyMonsterGroupB", "Back", "Background", "BackgroundAppearance", "BackgroundTasksSettings", "Backslash", "Backsubstitution", "Backward", "Ball", "Band", "BandpassFilter", "BandstopFilter", "BarabasiAlbertGraphDistribution", "BarChart", "BarChart3D", "BarcodeImage", "BarcodeRecognize", "BaringhausHenzeTest", "BarLegend", "BarlowProschanImportance", "BarnesG", "BarOrigin", "BarSpacing", "BartlettHannWindow", "BartlettWindow", "BaseDecode", "BaseEncode", "BaseForm", "Baseline", "BaselinePosition", "BaseStyle", "BasicRecurrentLayer", "BatchNormalizationLayer", "BatchSize", "BatesDistribution", "BattleLemarieWavelet", "BayesianMaximization", "BayesianMaximizationObject", "BayesianMinimization", "BayesianMinimizationObject", "Because", "BeckmannDistribution", "Beep", "Before", "Begin", "BeginDialogPacket", "BeginFrontEndInteractionPacket", "BeginPackage", "BellB", "BellY", "Below", "BenfordDistribution", "BeniniDistribution", "BenktanderGibratDistribution", "BenktanderWeibullDistribution", "BernoulliB", "BernoulliDistribution", "BernoulliGraphDistribution", "BernoulliProcess", "BernsteinBasis", "BesselFilterModel", "BesselI", "BesselJ", "BesselJZero", "BesselK", "BesselY", "BesselYZero", "Beta", "BetaBinomialDistribution", "BetaDistribution", "BetaNegativeBinomialDistribution", "BetaPrimeDistribution", "BetaRegularized", "Between", "BetweennessCentrality", "BeveledPolyhedron", "BezierCurve", "BezierCurve3DBox", "BezierCurve3DBoxOptions", "BezierCurveBox", "BezierCurveBoxOptions", "BezierFunction", "BilateralFilter", "Binarize", "BinaryDeserialize", "BinaryDistance", "BinaryFormat", "BinaryImageQ", "BinaryRead", "BinaryReadList", "BinarySerialize", "BinaryWrite", "BinCounts", "BinLists", "Binomial", "BinomialDistribution", "BinomialProcess", "BinormalDistribution", "BiorthogonalSplineWavelet", "BipartiteGraphQ", "BiquadraticFilterModel", "BirnbaumImportance", "BirnbaumSaundersDistribution", "BitAnd", "BitClear", "BitGet", "BitLength", "BitNot", "BitOr", "BitSet", "BitShiftLeft", "BitShiftRight", "BitXor", "BiweightLocation", "BiweightMidvariance", "Black", "BlackmanHarrisWindow", "BlackmanNuttallWindow", "BlackmanWindow", "Blank", "BlankForm", "BlankNullSequence", "BlankSequence", "Blend", "Block", "BlockchainAddressData", "BlockchainBase", "BlockchainBlockData", "BlockchainContractValue", "BlockchainData", "BlockchainGet", "BlockchainKeyEncode", "BlockchainPut", "BlockchainTokenData", "BlockchainTransaction", "BlockchainTransactionData", "BlockchainTransactionSign", "BlockchainTransactionSubmit", "BlockMap", "BlockRandom", "BlomqvistBeta", "BlomqvistBetaTest", "Blue", "Blur", "BodePlot", "BohmanWindow", "Bold", "Bond", "BondCount", "BondList", "BondQ", "Bookmarks", "Boole", "BooleanConsecutiveFunction", "BooleanConvert", "BooleanCountingFunction", "BooleanFunction", "BooleanGraph", "BooleanMaxterms", "BooleanMinimize", "BooleanMinterms", "BooleanQ", "BooleanRegion", "Booleans", "BooleanStrings", "BooleanTable", "BooleanVariables", "BorderDimensions", "BorelTannerDistribution", "Bottom", "BottomHatTransform", "BoundaryDiscretizeGraphics", "BoundaryDiscretizeRegion", "BoundaryMesh", "BoundaryMeshRegion", "BoundaryMeshRegionQ", "BoundaryStyle", "BoundedRegionQ", "BoundingRegion", "Bounds", "Box", "BoxBaselineShift", "BoxData", "BoxDimensions", "Boxed", "Boxes", "BoxForm", "BoxFormFormatTypes", "BoxFrame", "BoxID", "BoxMargins", "BoxMatrix", "BoxObject", "BoxRatios", "BoxRotation", "BoxRotationPoint", "BoxStyle", "BoxWhiskerChart", "Bra", "BracketingBar", "BraKet", "BrayCurtisDistance", "BreadthFirstScan", "Break", "BridgeData", "BrightnessEqualize", "BroadcastStationData", "Brown", "BrownForsytheTest", "BrownianBridgeProcess", "BrowserCategory", "BSplineBasis", "BSplineCurve", "BSplineCurve3DBox", "BSplineCurve3DBoxOptions", "BSplineCurveBox", "BSplineCurveBoxOptions", "BSplineFunction", "BSplineSurface", "BSplineSurface3DBox", "BSplineSurface3DBoxOptions", "BubbleChart", "BubbleChart3D", "BubbleScale", "BubbleSizes", "BuildingData", "BulletGauge", "BusinessDayQ", "ButterflyGraph", "ButterworthFilterModel", "Button", "ButtonBar", "ButtonBox", "ButtonBoxOptions", "ButtonCell", "ButtonContents", "ButtonData", "ButtonEvaluator", "ButtonExpandable", "ButtonFrame", "ButtonFunction", "ButtonMargins", "ButtonMinHeight", "ButtonNote", "ButtonNotebook", "ButtonSource", "ButtonStyle", "ButtonStyleMenuListing", "Byte", "ByteArray", "ByteArrayFormat", "ByteArrayQ", "ByteArrayToString", "ByteCount", "ByteOrdering", "C", "CachedValue", "CacheGraphics", "CachePersistence", "CalendarConvert", "CalendarData", "CalendarType", "Callout", "CalloutMarker", "CalloutStyle", "CallPacket", "CanberraDistance", "Cancel", "CancelButton", "CandlestickChart", "CanonicalGraph", "CanonicalizePolygon", "CanonicalizePolyhedron", "CanonicalName", "CanonicalWarpingCorrespondence", "CanonicalWarpingDistance", "CantorMesh", "CantorStaircase", "Cap", "CapForm", "CapitalDifferentialD", "Capitalize", "CapsuleShape", "CaptureRunning", "CardinalBSplineBasis", "CarlemanLinearize", "CarmichaelLambda", "CaseOrdering", "Cases", "CaseSensitive", "Cashflow", "Casoratian", "Catalan", "CatalanNumber", "Catch", "CategoricalDistribution", "Catenate", "CatenateLayer", "CauchyDistribution", "CauchyWindow", "CayleyGraph", "CDF", "CDFDeploy", "CDFInformation", "CDFWavelet", "Ceiling", "CelestialSystem", "Cell", "CellAutoOverwrite", "CellBaseline", "CellBoundingBox", "CellBracketOptions", "CellChangeTimes", "CellContents", "CellContext", "CellDingbat", "CellDynamicExpression", "CellEditDuplicate", "CellElementsBoundingBox", "CellElementSpacings", "CellEpilog", "CellEvaluationDuplicate", "CellEvaluationFunction", "CellEvaluationLanguage", "CellEventActions", "CellFrame", "CellFrameColor", "CellFrameLabelMargins", "CellFrameLabels", "CellFrameMargins", "CellGroup", "CellGroupData", "CellGrouping", "CellGroupingRules", "CellHorizontalScrolling", "CellID", "CellLabel", "CellLabelAutoDelete", "CellLabelMargins", "CellLabelPositioning", "CellLabelStyle", "CellLabelTemplate", "CellMargins", "CellObject", "CellOpen", "CellPrint", "CellProlog", "Cells", "CellSize", "CellStyle", "CellTags", "CellularAutomaton", "CensoredDistribution", "Censoring", "Center", "CenterArray", "CenterDot", "CentralFeature", "CentralMoment", "CentralMomentGeneratingFunction", "Cepstrogram", "CepstrogramArray", "CepstrumArray", "CForm", "ChampernowneNumber", "ChangeOptions", "ChannelBase", "ChannelBrokerAction", "ChannelDatabin", "ChannelHistoryLength", "ChannelListen", "ChannelListener", "ChannelListeners", "ChannelListenerWait", "ChannelObject", "ChannelPreSendFunction", "ChannelReceiverFunction", "ChannelSend", "ChannelSubscribers", "ChanVeseBinarize", "Character", "CharacterCounts", "CharacterEncoding", "CharacterEncodingsPath", "CharacteristicFunction", "CharacteristicPolynomial", "CharacterName", "CharacterNormalize", "CharacterRange", "Characters", "ChartBaseStyle", "ChartElementData", "ChartElementDataFunction", "ChartElementFunction", "ChartElements", "ChartLabels", "ChartLayout", "ChartLegends", "ChartStyle", "Chebyshev1FilterModel", "Chebyshev2FilterModel", "ChebyshevDistance", "ChebyshevT", "ChebyshevU", "Check", "CheckAbort", "CheckAll", "Checkbox", "CheckboxBar", "CheckboxBox", "CheckboxBoxOptions", "ChemicalData", "ChessboardDistance", "ChiDistribution", "ChineseRemainder", "ChiSquareDistribution", "ChoiceButtons", "ChoiceDialog", "CholeskyDecomposition", "Chop", "ChromaticityPlot", "ChromaticityPlot3D", "ChromaticPolynomial", "Circle", "CircleBox", "CircleDot", "CircleMinus", "CirclePlus", "CirclePoints", "CircleThrough", "CircleTimes", "CirculantGraph", "CircularOrthogonalMatrixDistribution", "CircularQuaternionMatrixDistribution", "CircularRealMatrixDistribution", "CircularSymplecticMatrixDistribution", "CircularUnitaryMatrixDistribution", "Circumsphere", "CityData", "ClassifierFunction", "ClassifierInformation", "ClassifierMeasurements", "ClassifierMeasurementsObject", "Classify", "ClassPriors", "Clear", "ClearAll", "ClearAttributes", "ClearCookies", "ClearPermissions", "ClearSystemCache", "ClebschGordan", "ClickPane", "Clip", "ClipboardNotebook", "ClipFill", "ClippingStyle", "ClipPlanes", "ClipPlanesStyle", "ClipRange", "Clock", "ClockGauge", "ClockwiseContourIntegral", "Close", "Closed", "CloseKernels", "ClosenessCentrality", "Closing", "ClosingAutoSave", "ClosingEvent", "ClosingSaveDialog", "CloudAccountData", "CloudBase", "CloudConnect", "CloudConnections", "CloudDeploy", "CloudDirectory", "CloudDisconnect", "CloudEvaluate", "CloudExport", "CloudExpression", "CloudExpressions", "CloudFunction", "CloudGet", "CloudImport", "CloudLoggingData", "CloudObject", "CloudObjectInformation", "CloudObjectInformationData", "CloudObjectNameFormat", "CloudObjects", "CloudObjectURLType", "CloudPublish", "CloudPut", "CloudRenderingMethod", "CloudSave", "CloudShare", "CloudSubmit", "CloudSymbol", "CloudUnshare", "CloudUserID", "ClusterClassify", "ClusterDissimilarityFunction", "ClusteringComponents", "ClusteringTree", "CMYKColor", "Coarse", "CodeAssistOptions", "Coefficient", "CoefficientArrays", "CoefficientDomain", "CoefficientList", "CoefficientRules", "CoifletWavelet", "Collect", "Colon", "ColonForm", "ColorBalance", "ColorCombine", "ColorConvert", "ColorCoverage", "ColorData", "ColorDataFunction", "ColorDetect", "ColorDistance", "ColorFunction", "ColorFunctionScaling", "Colorize", "ColorNegate", "ColorOutput", "ColorProfileData", "ColorQ", "ColorQuantize", "ColorReplace", "ColorRules", "ColorSelectorSettings", "ColorSeparate", "ColorSetter", "ColorSetterBox", "ColorSetterBoxOptions", "ColorSlider", "ColorsNear", "ColorSpace", "ColorToneMapping", "Column", "ColumnAlignments", "ColumnBackgrounds", "ColumnForm", "ColumnLines", "ColumnsEqual", "ColumnSpacings", "ColumnWidths", "CombinedEntityClass", "CombinerFunction", "CometData", "CommonDefaultFormatTypes", "Commonest", "CommonestFilter", "CommonName", "CommonUnits", "CommunityBoundaryStyle", "CommunityGraphPlot", "CommunityLabels", "CommunityRegionStyle", "CompanyData", "CompatibleUnitQ", "CompilationOptions", "CompilationTarget", "Compile", "Compiled", "CompiledCodeFunction", "CompiledFunction", "CompilerOptions", "Complement", "ComplementedEntityClass", "CompleteGraph", "CompleteGraphQ", "CompleteKaryTree", "CompletionsListPacket", "Complex", "ComplexContourPlot", "Complexes", "ComplexExpand", "ComplexInfinity", "ComplexityFunction", "ComplexListPlot", "ComplexPlot", "ComplexPlot3D", "ComplexRegionPlot", "ComplexStreamPlot", "ComplexVectorPlot", "ComponentMeasurements", "ComponentwiseContextMenu", "Compose", "ComposeList", "ComposeSeries", "CompositeQ", "Composition", "CompoundElement", "CompoundExpression", "CompoundPoissonDistribution", "CompoundPoissonProcess", "CompoundRenewalProcess", "Compress", "CompressedData", "CompressionLevel", "ComputeUncertainty", "Condition", "ConditionalExpression", "Conditioned", "Cone", "ConeBox", "ConfidenceLevel", "ConfidenceRange", "ConfidenceTransform", "ConfigurationPath", "ConformAudio", "ConformImages", "Congruent", "ConicHullRegion", "ConicHullRegion3DBox", "ConicHullRegionBox", "ConicOptimization", "Conjugate", "ConjugateTranspose", "Conjunction", "Connect", "ConnectedComponents", "ConnectedGraphComponents", "ConnectedGraphQ", "ConnectedMeshComponents", "ConnectedMoleculeComponents", "ConnectedMoleculeQ", "ConnectionSettings", "ConnectLibraryCallbackFunction", "ConnectSystemModelComponents", "ConnesWindow", "ConoverTest", "ConsoleMessage", "ConsoleMessagePacket", "Constant", "ConstantArray", "ConstantArrayLayer", "ConstantImage", "ConstantPlusLayer", "ConstantRegionQ", "Constants", "ConstantTimesLayer", "ConstellationData", "ConstrainedMax", "ConstrainedMin", "Construct", "Containing", "ContainsAll", "ContainsAny", "ContainsExactly", "ContainsNone", "ContainsOnly", "ContentFieldOptions", "ContentLocationFunction", "ContentObject", "ContentPadding", "ContentsBoundingBox", "ContentSelectable", "ContentSize", "Context", "ContextMenu", "Contexts", "ContextToFileName", "Continuation", "Continue", "ContinuedFraction", "ContinuedFractionK", "ContinuousAction", "ContinuousMarkovProcess", "ContinuousTask", "ContinuousTimeModelQ", "ContinuousWaveletData", "ContinuousWaveletTransform", "ContourDetect", "ContourGraphics", "ContourIntegral", "ContourLabels", "ContourLines", "ContourPlot", "ContourPlot3D", "Contours", "ContourShading", "ContourSmoothing", "ContourStyle", "ContraharmonicMean", "ContrastiveLossLayer", "Control", "ControlActive", "ControlAlignment", "ControlGroupContentsBox", "ControllabilityGramian", "ControllabilityMatrix", "ControllableDecomposition", "ControllableModelQ", "ControllerDuration", "ControllerInformation", "ControllerInformationData", "ControllerLinking", "ControllerManipulate", "ControllerMethod", "ControllerPath", "ControllerState", "ControlPlacement", "ControlsRendering", "ControlType", "Convergents", "ConversionOptions", "ConversionRules", "ConvertToBitmapPacket", "ConvertToPostScript", "ConvertToPostScriptPacket", "ConvexHullMesh", "ConvexPolygonQ", "ConvexPolyhedronQ", "ConvolutionLayer", "Convolve", "ConwayGroupCo1", "ConwayGroupCo2", "ConwayGroupCo3", "CookieFunction", "Cookies", "CoordinateBoundingBox", "CoordinateBoundingBoxArray", "CoordinateBounds", "CoordinateBoundsArray", "CoordinateChartData", "CoordinatesToolOptions", "CoordinateTransform", "CoordinateTransformData", "CoprimeQ", "Coproduct", "CopulaDistribution", "Copyable", "CopyDatabin", "CopyDirectory", "CopyFile", "CopyTag", "CopyToClipboard", "CornerFilter", "CornerNeighbors", "Correlation", "CorrelationDistance", "CorrelationFunction", "CorrelationTest", "Cos", "Cosh", "CoshIntegral", "CosineDistance", "CosineWindow", "CosIntegral", "Cot", "Coth", "Count", "CountDistinct", "CountDistinctBy", "CounterAssignments", "CounterBox", "CounterBoxOptions", "CounterClockwiseContourIntegral", "CounterEvaluator", "CounterFunction", "CounterIncrements", "CounterStyle", "CounterStyleMenuListing", "CountRoots", "CountryData", "Counts", "CountsBy", "Covariance", "CovarianceEstimatorFunction", "CovarianceFunction", "CoxianDistribution", "CoxIngersollRossProcess", "CoxModel", "CoxModelFit", "CramerVonMisesTest", "CreateArchive", "CreateCellID", "CreateChannel", "CreateCloudExpression", "CreateDatabin", "CreateDataStructure", "CreateDataSystemModel", "CreateDialog", "CreateDirectory", "CreateDocument", "CreateFile", "CreateIntermediateDirectories", "CreateManagedLibraryExpression", "CreateNotebook", "CreatePacletArchive", "CreatePalette", "CreatePalettePacket", "CreatePermissionsGroup", "CreateScheduledTask", "CreateSearchIndex", "CreateSystemModel", "CreateTemporary", "CreateUUID", "CreateWindow", "CriterionFunction", "CriticalityFailureImportance", "CriticalitySuccessImportance", "CriticalSection", "Cross", "CrossEntropyLossLayer", "CrossingCount", "CrossingDetect", "CrossingPolygon", "CrossMatrix", "Csc", "Csch", "CTCLossLayer", "Cube", "CubeRoot", "Cubics", "Cuboid", "CuboidBox", "Cumulant", "CumulantGeneratingFunction", "Cup", "CupCap", "Curl", "CurlyDoubleQuote", "CurlyQuote", "CurrencyConvert", "CurrentDate", "CurrentImage", "CurrentlySpeakingPacket", "CurrentNotebookImage", "CurrentScreenImage", "CurrentValue", "Curry", "CurryApplied", "CurvatureFlowFilter", "CurveClosed", "Cyan", "CycleGraph", "CycleIndexPolynomial", "Cycles", "CyclicGroup", "Cyclotomic", "Cylinder", "CylinderBox", "CylindricalDecomposition", "D", "DagumDistribution", "DamData", "DamerauLevenshteinDistance", "DampingFactor", "Darker", "Dashed", "Dashing", "DatabaseConnect", "DatabaseDisconnect", "DatabaseReference", "Databin", "DatabinAdd", "DatabinRemove", "Databins", "DatabinUpload", "DataCompression", "DataDistribution", "DataRange", "DataReversed", "Dataset", "DatasetDisplayPanel", "DataStructure", "DataStructureQ", "Date", "DateBounds", "Dated", "DateDelimiters", "DateDifference", "DatedUnit", "DateFormat", "DateFunction", "DateHistogram", "DateInterval", "DateList", "DateListLogPlot", "DateListPlot", "DateListStepPlot", "DateObject", "DateObjectQ", "DateOverlapsQ", "DatePattern", "DatePlus", "DateRange", "DateReduction", "DateString", "DateTicksFormat", "DateValue", "DateWithinQ", "DaubechiesWavelet", "DavisDistribution", "DawsonF", "DayCount", "DayCountConvention", "DayHemisphere", "DaylightQ", "DayMatchQ", "DayName", "DayNightTerminator", "DayPlus", "DayRange", "DayRound", "DeBruijnGraph", "DeBruijnSequence", "Debug", "DebugTag", "Decapitalize", "Decimal", "DecimalForm", "DeclareKnownSymbols", "DeclarePackage", "Decompose", "DeconvolutionLayer", "Decrement", "Decrypt", "DecryptFile", "DedekindEta", "DeepSpaceProbeData", "Default", "DefaultAxesStyle", "DefaultBaseStyle", "DefaultBoxStyle", "DefaultButton", "DefaultColor", "DefaultControlPlacement", "DefaultDuplicateCellStyle", "DefaultDuration", "DefaultElement", "DefaultFaceGridsStyle", "DefaultFieldHintStyle", "DefaultFont", "DefaultFontProperties", "DefaultFormatType", "DefaultFormatTypeForStyle", "DefaultFrameStyle", "DefaultFrameTicksStyle", "DefaultGridLinesStyle", "DefaultInlineFormatType", "DefaultInputFormatType", "DefaultLabelStyle", "DefaultMenuStyle", "DefaultNaturalLanguage", "DefaultNewCellStyle", "DefaultNewInlineCellStyle", "DefaultNotebook", "DefaultOptions", "DefaultOutputFormatType", "DefaultPrintPrecision", "DefaultStyle", "DefaultStyleDefinitions", "DefaultTextFormatType", "DefaultTextInlineFormatType", "DefaultTicksStyle", "DefaultTooltipStyle", "DefaultValue", "DefaultValues", "Defer", "DefineExternal", "DefineInputStreamMethod", "DefineOutputStreamMethod", "DefineResourceFunction", "Definition", "Degree", "DegreeCentrality", "DegreeGraphDistribution", "DegreeLexicographic", "DegreeReverseLexicographic", "DEigensystem", "DEigenvalues", "Deinitialization", "Del", "DelaunayMesh", "Delayed", "Deletable", "Delete", "DeleteAnomalies", "DeleteBorderComponents", "DeleteCases", "DeleteChannel", "DeleteCloudExpression", "DeleteContents", "DeleteDirectory", "DeleteDuplicates", "DeleteDuplicatesBy", "DeleteFile", "DeleteMissing", "DeleteObject", "DeletePermissionsKey", "DeleteSearchIndex", "DeleteSmallComponents", "DeleteStopwords", "DeleteWithContents", "DeletionWarning", "DelimitedArray", "DelimitedSequence", "Delimiter", "DelimiterFlashTime", "DelimiterMatching", "Delimiters", "DeliveryFunction", "Dendrogram", "Denominator", "DensityGraphics", "DensityHistogram", "DensityPlot", "DensityPlot3D", "DependentVariables", "Deploy", "Deployed", "Depth", "DepthFirstScan", "Derivative", "DerivativeFilter", "DerivedKey", "DescriptorStateSpace", "DesignMatrix", "DestroyAfterEvaluation", "Det", "DeviceClose", "DeviceConfigure", "DeviceExecute", "DeviceExecuteAsynchronous", "DeviceObject", "DeviceOpen", "DeviceOpenQ", "DeviceRead", "DeviceReadBuffer", "DeviceReadLatest", "DeviceReadList", "DeviceReadTimeSeries", "Devices", "DeviceStreams", "DeviceWrite", "DeviceWriteBuffer", "DGaussianWavelet", "DiacriticalPositioning", "Diagonal", "DiagonalizableMatrixQ", "DiagonalMatrix", "DiagonalMatrixQ", "Dialog", "DialogIndent", "DialogInput", "DialogLevel", "DialogNotebook", "DialogProlog", "DialogReturn", "DialogSymbols", "Diamond", "DiamondMatrix", "DiceDissimilarity", "DictionaryLookup", "DictionaryWordQ", "DifferenceDelta", "DifferenceOrder", "DifferenceQuotient", "DifferenceRoot", "DifferenceRootReduce", "Differences", "DifferentialD", "DifferentialRoot", "DifferentialRootReduce", "DifferentiatorFilter", "DigitalSignature", "DigitBlock", "DigitBlockMinimum", "DigitCharacter", "DigitCount", "DigitQ", "DihedralAngle", "DihedralGroup", "Dilation", "DimensionalCombinations", "DimensionalMeshComponents", "DimensionReduce", "DimensionReducerFunction", "DimensionReduction", "Dimensions", "DiracComb", "DiracDelta", "DirectedEdge", "DirectedEdges", "DirectedGraph", "DirectedGraphQ", "DirectedInfinity", "Direction", "Directive", "Directory", "DirectoryName", "DirectoryQ", "DirectoryStack", "DirichletBeta", "DirichletCharacter", "DirichletCondition", "DirichletConvolve", "DirichletDistribution", "DirichletEta", "DirichletL", "DirichletLambda", "DirichletTransform", "DirichletWindow", "DisableConsolePrintPacket", "DisableFormatting", "DiscreteAsymptotic", "DiscreteChirpZTransform", "DiscreteConvolve", "DiscreteDelta", "DiscreteHadamardTransform", "DiscreteIndicator", "DiscreteLimit", "DiscreteLQEstimatorGains", "DiscreteLQRegulatorGains", "DiscreteLyapunovSolve", "DiscreteMarkovProcess", "DiscreteMaxLimit", "DiscreteMinLimit", "DiscretePlot", "DiscretePlot3D", "DiscreteRatio", "DiscreteRiccatiSolve", "DiscreteShift", "DiscreteTimeModelQ", "DiscreteUniformDistribution", "DiscreteVariables", "DiscreteWaveletData", "DiscreteWaveletPacketTransform", "DiscreteWaveletTransform", "DiscretizeGraphics", "DiscretizeRegion", "Discriminant", "DisjointQ", "Disjunction", "Disk", "DiskBox", "DiskMatrix", "DiskSegment", "Dispatch", "DispatchQ", "DispersionEstimatorFunction", "Display", "DisplayAllSteps", "DisplayEndPacket", "DisplayFlushImagePacket", "DisplayForm", "DisplayFunction", "DisplayPacket", "DisplayRules", "DisplaySetSizePacket", "DisplayString", "DisplayTemporary", "DisplayWith", "DisplayWithRef", "DisplayWithVariable", "DistanceFunction", "DistanceMatrix", "DistanceTransform", "Distribute", "Distributed", "DistributedContexts", "DistributeDefinitions", "DistributionChart", "DistributionDomain", "DistributionFitTest", "DistributionParameterAssumptions", "DistributionParameterQ", "Dithering", "Div", "Divergence", "Divide", "DivideBy", "Dividers", "DivideSides", "Divisible", "Divisors", "DivisorSigma", "DivisorSum", "DMSList", "DMSString", "Do", "DockedCells", "DocumentGenerator", "DocumentGeneratorInformation", "DocumentGeneratorInformationData", "DocumentGenerators", "DocumentNotebook", "DocumentWeightingRules", "Dodecahedron", "DomainRegistrationInformation", "DominantColors", "DOSTextFormat", "Dot", "DotDashed", "DotEqual", "DotLayer", "DotPlusLayer", "Dotted", "DoubleBracketingBar", "DoubleContourIntegral", "DoubleDownArrow", "DoubleLeftArrow", "DoubleLeftRightArrow", "DoubleLeftTee", "DoubleLongLeftArrow", "DoubleLongLeftRightArrow", "DoubleLongRightArrow", "DoubleRightArrow", "DoubleRightTee", "DoubleUpArrow", "DoubleUpDownArrow", "DoubleVerticalBar", "DoublyInfinite", "Down", "DownArrow", "DownArrowBar", "DownArrowUpArrow", "DownLeftRightVector", "DownLeftTeeVector", "DownLeftVector", "DownLeftVectorBar", "DownRightTeeVector", "DownRightVector", "DownRightVectorBar", "Downsample", "DownTee", "DownTeeArrow", "DownValues", "DragAndDrop", "DrawEdges", "DrawFrontFaces", "DrawHighlighted", "Drop", "DropoutLayer", "DSolve", "DSolveValue", "Dt", "DualLinearProgramming", "DualPolyhedron", "DualSystemsModel", "DumpGet", "DumpSave", "DuplicateFreeQ", "Duration", "Dynamic", "DynamicBox", "DynamicBoxOptions", "DynamicEvaluationTimeout", "DynamicGeoGraphics", "DynamicImage", "DynamicLocation", "DynamicModule", "DynamicModuleBox", "DynamicModuleBoxOptions", "DynamicModuleParent", "DynamicModuleValues", "DynamicName", "DynamicNamespace", "DynamicReference", "DynamicSetting", "DynamicUpdating", "DynamicWrapper", "DynamicWrapperBox", "DynamicWrapperBoxOptions", "E", "EarthImpactData", "EarthquakeData", "EccentricityCentrality", "Echo", "EchoFunction", "EclipseType", "EdgeAdd", "EdgeBetweennessCentrality", "EdgeCapacity", "EdgeCapForm", "EdgeColor", "EdgeConnectivity", "EdgeContract", "EdgeCost", "EdgeCount", "EdgeCoverQ", "EdgeCycleMatrix", "EdgeDashing", "EdgeDelete", "EdgeDetect", "EdgeForm", "EdgeIndex", "EdgeJoinForm", "EdgeLabeling", "EdgeLabels", "EdgeLabelStyle", "EdgeList", "EdgeOpacity", "EdgeQ", "EdgeRenderingFunction", "EdgeRules", "EdgeShapeFunction", "EdgeStyle", "EdgeTaggedGraph", "EdgeTaggedGraphQ", "EdgeTags", "EdgeThickness", "EdgeWeight", "EdgeWeightedGraphQ", "Editable", "EditButtonSettings", "EditCellTagsSettings", "EditDistance", "EffectiveInterest", "Eigensystem", "Eigenvalues", "EigenvectorCentrality", "Eigenvectors", "Element", "ElementData", "ElementwiseLayer", "ElidedForms", "Eliminate", "EliminationOrder", "Ellipsoid", "EllipticE", "EllipticExp", "EllipticExpPrime", "EllipticF", "EllipticFilterModel", "EllipticK", "EllipticLog", "EllipticNomeQ", "EllipticPi", "EllipticReducedHalfPeriods", "EllipticTheta", "EllipticThetaPrime", "EmbedCode", "EmbeddedHTML", "EmbeddedService", "EmbeddingLayer", "EmbeddingObject", "EmitSound", "EmphasizeSyntaxErrors", "EmpiricalDistribution", "Empty", "EmptyGraphQ", "EmptyRegion", "EnableConsolePrintPacket", "Enabled", "Encode", "Encrypt", "EncryptedObject", "EncryptFile", "End", "EndAdd", "EndDialogPacket", "EndFrontEndInteractionPacket", "EndOfBuffer", "EndOfFile", "EndOfLine", "EndOfString", "EndPackage", "EngineEnvironment", "EngineeringForm", "Enter", "EnterExpressionPacket", "EnterTextPacket", "Entity", "EntityClass", "EntityClassList", "EntityCopies", "EntityFunction", "EntityGroup", "EntityInstance", "EntityList", "EntityPrefetch", "EntityProperties", "EntityProperty", "EntityPropertyClass", "EntityRegister", "EntityStore", "EntityStores", "EntityTypeName", "EntityUnregister", "EntityValue", "Entropy", "EntropyFilter", "Environment", "Epilog", "EpilogFunction", "Equal", "EqualColumns", "EqualRows", "EqualTilde", "EqualTo", "EquatedTo", "Equilibrium", "EquirippleFilterKernel", "Equivalent", "Erf", "Erfc", "Erfi", "ErlangB", "ErlangC", "ErlangDistribution", "Erosion", "ErrorBox", "ErrorBoxOptions", "ErrorNorm", "ErrorPacket", "ErrorsDialogSettings", "EscapeRadius", "EstimatedBackground", "EstimatedDistribution", "EstimatedProcess", "EstimatorGains", "EstimatorRegulator", "EuclideanDistance", "EulerAngles", "EulerCharacteristic", "EulerE", "EulerGamma", "EulerianGraphQ", "EulerMatrix", "EulerPhi", "Evaluatable", "Evaluate", "Evaluated", "EvaluatePacket", "EvaluateScheduledTask", "EvaluationBox", "EvaluationCell", "EvaluationCompletionAction", "EvaluationData", "EvaluationElements", "EvaluationEnvironment", "EvaluationMode", "EvaluationMonitor", "EvaluationNotebook", "EvaluationObject", "EvaluationOrder", "Evaluator", "EvaluatorNames", "EvenQ", "EventData", "EventEvaluator", "EventHandler", "EventHandlerTag", "EventLabels", "EventSeries", "ExactBlackmanWindow", "ExactNumberQ", "ExactRootIsolation", "ExampleData", "Except", "ExcludedForms", "ExcludedLines", "ExcludedPhysicalQuantities", "ExcludePods", "Exclusions", "ExclusionsStyle", "Exists", "Exit", "ExitDialog", "ExoplanetData", "Exp", "Expand", "ExpandAll", "ExpandDenominator", "ExpandFileName", "ExpandNumerator", "Expectation", "ExpectationE", "ExpectedValue", "ExpGammaDistribution", "ExpIntegralE", "ExpIntegralEi", "ExpirationDate", "Exponent", "ExponentFunction", "ExponentialDistribution", "ExponentialFamily", "ExponentialGeneratingFunction", "ExponentialMovingAverage", "ExponentialPowerDistribution", "ExponentPosition", "ExponentStep", "Export", "ExportAutoReplacements", "ExportByteArray", "ExportForm", "ExportPacket", "ExportString", "Expression", "ExpressionCell", "ExpressionGraph", "ExpressionPacket", "ExpressionUUID", "ExpToTrig", "ExtendedEntityClass", "ExtendedGCD", "Extension", "ExtentElementFunction", "ExtentMarkers", "ExtentSize", "ExternalBundle", "ExternalCall", "ExternalDataCharacterEncoding", "ExternalEvaluate", "ExternalFunction", "ExternalFunctionName", "ExternalIdentifier", "ExternalObject", "ExternalOptions", "ExternalSessionObject", "ExternalSessions", "ExternalStorageBase", "ExternalStorageDownload", "ExternalStorageGet", "ExternalStorageObject", "ExternalStoragePut", "ExternalStorageUpload", "ExternalTypeSignature", "ExternalValue", "Extract", "ExtractArchive", "ExtractLayer", "ExtractPacletArchive", "ExtremeValueDistribution", "FaceAlign", "FaceForm", "FaceGrids", "FaceGridsStyle", "FacialFeatures", "Factor", "FactorComplete", "Factorial", "Factorial2", "FactorialMoment", "FactorialMomentGeneratingFunction", "FactorialPower", "FactorInteger", "FactorList", "FactorSquareFree", "FactorSquareFreeList", "FactorTerms", "FactorTermsList", "Fail", "Failure", "FailureAction", "FailureDistribution", "FailureQ", "False", "FareySequence", "FARIMAProcess", "FeatureDistance", "FeatureExtract", "FeatureExtraction", "FeatureExtractor", "FeatureExtractorFunction", "FeatureNames", "FeatureNearest", "FeatureSpacePlot", "FeatureSpacePlot3D", "FeatureTypes", "FEDisableConsolePrintPacket", "FeedbackLinearize", "FeedbackSector", "FeedbackSectorStyle", "FeedbackType", "FEEnableConsolePrintPacket", "FetalGrowthData", "Fibonacci", "Fibonorial", "FieldCompletionFunction", "FieldHint", "FieldHintStyle", "FieldMasked", "FieldSize", "File", "FileBaseName", "FileByteCount", "FileConvert", "FileDate", "FileExistsQ", "FileExtension", "FileFormat", "FileHandler", "FileHash", "FileInformation", "FileName", "FileNameDepth", "FileNameDialogSettings", "FileNameDrop", "FileNameForms", "FileNameJoin", "FileNames", "FileNameSetter", "FileNameSplit", "FileNameTake", "FilePrint", "FileSize", "FileSystemMap", "FileSystemScan", "FileTemplate", "FileTemplateApply", "FileType", "FilledCurve", "FilledCurveBox", "FilledCurveBoxOptions", "Filling", "FillingStyle", "FillingTransform", "FilteredEntityClass", "FilterRules", "FinancialBond", "FinancialData", "FinancialDerivative", "FinancialIndicator", "Find", "FindAnomalies", "FindArgMax", "FindArgMin", "FindChannels", "FindClique", "FindClusters", "FindCookies", "FindCurvePath", "FindCycle", "FindDevices", "FindDistribution", "FindDistributionParameters", "FindDivisions", "FindEdgeCover", "FindEdgeCut", "FindEdgeIndependentPaths", "FindEquationalProof", "FindEulerianCycle", "FindExternalEvaluators", "FindFaces", "FindFile", "FindFit", "FindFormula", "FindFundamentalCycles", "FindGeneratingFunction", "FindGeoLocation", "FindGeometricConjectures", "FindGeometricTransform", "FindGraphCommunities", "FindGraphIsomorphism", "FindGraphPartition", "FindHamiltonianCycle", "FindHamiltonianPath", "FindHiddenMarkovStates", "FindImageText", "FindIndependentEdgeSet", "FindIndependentVertexSet", "FindInstance", "FindIntegerNullVector", "FindKClan", "FindKClique", "FindKClub", "FindKPlex", "FindLibrary", "FindLinearRecurrence", "FindList", "FindMatchingColor", "FindMaximum", "FindMaximumCut", "FindMaximumFlow", "FindMaxValue", "FindMeshDefects", "FindMinimum", "FindMinimumCostFlow", "FindMinimumCut", "FindMinValue", "FindMoleculeSubstructure", "FindPath", "FindPeaks", "FindPermutation", "FindPostmanTour", "FindProcessParameters", "FindRepeat", "FindRoot", "FindSequenceFunction", "FindSettings", "FindShortestPath", "FindShortestTour", "FindSpanningTree", "FindSystemModelEquilibrium", "FindTextualAnswer", "FindThreshold", "FindTransientRepeat", "FindVertexCover", "FindVertexCut", "FindVertexIndependentPaths", "Fine", "FinishDynamic", "FiniteAbelianGroupCount", "FiniteGroupCount", "FiniteGroupData", "First", "FirstCase", "FirstPassageTimeDistribution", "FirstPosition", "FischerGroupFi22", "FischerGroupFi23", "FischerGroupFi24Prime", "FisherHypergeometricDistribution", "FisherRatioTest", "FisherZDistribution", "Fit", "FitAll", "FitRegularization", "FittedModel", "FixedOrder", "FixedPoint", "FixedPointList", "FlashSelection", "Flat", "Flatten", "FlattenAt", "FlattenLayer", "FlatTopWindow", "FlipView", "Floor", "FlowPolynomial", "FlushPrintOutputPacket", "Fold", "FoldList", "FoldPair", "FoldPairList", "FollowRedirects", "Font", "FontColor", "FontFamily", "FontForm", "FontName", "FontOpacity", "FontPostScriptName", "FontProperties", "FontReencoding", "FontSize", "FontSlant", "FontSubstitutions", "FontTracking", "FontVariations", "FontWeight", "For", "ForAll", "ForceVersionInstall", "Format", "FormatRules", "FormatType", "FormatTypeAutoConvert", "FormatValues", "FormBox", "FormBoxOptions", "FormControl", "FormFunction", "FormLayoutFunction", "FormObject", "FormPage", "FormTheme", "FormulaData", "FormulaLookup", "FortranForm", "Forward", "ForwardBackward", "Fourier", "FourierCoefficient", "FourierCosCoefficient", "FourierCosSeries", "FourierCosTransform", "FourierDCT", "FourierDCTFilter", "FourierDCTMatrix", "FourierDST", "FourierDSTMatrix", "FourierMatrix", "FourierParameters", "FourierSequenceTransform", "FourierSeries", "FourierSinCoefficient", "FourierSinSeries", "FourierSinTransform", "FourierTransform", "FourierTrigSeries", "FractionalBrownianMotionProcess", "FractionalGaussianNoiseProcess", "FractionalPart", "FractionBox", "FractionBoxOptions", "FractionLine", "Frame", "FrameBox", "FrameBoxOptions", "Framed", "FrameInset", "FrameLabel", "Frameless", "FrameMargins", "FrameRate", "FrameStyle", "FrameTicks", "FrameTicksStyle", "FRatioDistribution", "FrechetDistribution", "FreeQ", "FrenetSerretSystem", "FrequencySamplingFilterKernel", "FresnelC", "FresnelF", "FresnelG", "FresnelS", "Friday", "FrobeniusNumber", "FrobeniusSolve", "FromAbsoluteTime", "FromCharacterCode", "FromCoefficientRules", "FromContinuedFraction", "FromDate", "FromDigits", "FromDMS", "FromEntity", "FromJulianDate", "FromLetterNumber", "FromPolarCoordinates", "FromRomanNumeral", "FromSphericalCoordinates", "FromUnixTime", "Front", "FrontEndDynamicExpression", "FrontEndEventActions", "FrontEndExecute", "FrontEndObject", "FrontEndResource", "FrontEndResourceString", "FrontEndStackSize", "FrontEndToken", "FrontEndTokenExecute", "FrontEndValueCache", "FrontEndVersion", "FrontFaceColor", "FrontFaceOpacity", "Full", "FullAxes", "FullDefinition", "FullForm", "FullGraphics", "FullInformationOutputRegulator", "FullOptions", "FullRegion", "FullSimplify", "Function", "FunctionCompile", "FunctionCompileExport", "FunctionCompileExportByteArray", "FunctionCompileExportLibrary", "FunctionCompileExportString", "FunctionDomain", "FunctionExpand", "FunctionInterpolation", "FunctionPeriod", "FunctionRange", "FunctionSpace", "FussellVeselyImportance", "GaborFilter", "GaborMatrix", "GaborWavelet", "GainMargins", "GainPhaseMargins", "GalaxyData", "GalleryView", "Gamma", "GammaDistribution", "GammaRegularized", "GapPenalty", "GARCHProcess", "GatedRecurrentLayer", "Gather", "GatherBy", "GaugeFaceElementFunction", "GaugeFaceStyle", "GaugeFrameElementFunction", "GaugeFrameSize", "GaugeFrameStyle", "GaugeLabels", "GaugeMarkers", "GaugeStyle", "GaussianFilter", "GaussianIntegers", "GaussianMatrix", "GaussianOrthogonalMatrixDistribution", "GaussianSymplecticMatrixDistribution", "GaussianUnitaryMatrixDistribution", "GaussianWindow", "GCD", "GegenbauerC", "General", "GeneralizedLinearModelFit", "GenerateAsymmetricKeyPair", "GenerateConditions", "GeneratedCell", "GeneratedDocumentBinding", "GenerateDerivedKey", "GenerateDigitalSignature", "GenerateDocument", "GeneratedParameters", "GeneratedQuantityMagnitudes", "GenerateFileSignature", "GenerateHTTPResponse", "GenerateSecuredAuthenticationKey", "GenerateSymmetricKey", "GeneratingFunction", "GeneratorDescription", "GeneratorHistoryLength", "GeneratorOutputType", "Generic", "GenericCylindricalDecomposition", "GenomeData", "GenomeLookup", "GeoAntipode", "GeoArea", "GeoArraySize", "GeoBackground", "GeoBoundingBox", "GeoBounds", "GeoBoundsRegion", "GeoBubbleChart", "GeoCenter", "GeoCircle", "GeoContourPlot", "GeoDensityPlot", "GeodesicClosing", "GeodesicDilation", "GeodesicErosion", "GeodesicOpening", "GeoDestination", "GeodesyData", "GeoDirection", "GeoDisk", "GeoDisplacement", "GeoDistance", "GeoDistanceList", "GeoElevationData", "GeoEntities", "GeoGraphics", "GeogravityModelData", "GeoGridDirectionDifference", "GeoGridLines", "GeoGridLinesStyle", "GeoGridPosition", "GeoGridRange", "GeoGridRangePadding", "GeoGridUnitArea", "GeoGridUnitDistance", "GeoGridVector", "GeoGroup", "GeoHemisphere", "GeoHemisphereBoundary", "GeoHistogram", "GeoIdentify", "GeoImage", "GeoLabels", "GeoLength", "GeoListPlot", "GeoLocation", "GeologicalPeriodData", "GeomagneticModelData", "GeoMarker", "GeometricAssertion", "GeometricBrownianMotionProcess", "GeometricDistribution", "GeometricMean", "GeometricMeanFilter", "GeometricOptimization", "GeometricScene", "GeometricTransformation", "GeometricTransformation3DBox", "GeometricTransformation3DBoxOptions", "GeometricTransformationBox", "GeometricTransformationBoxOptions", "GeoModel", "GeoNearest", "GeoPath", "GeoPosition", "GeoPositionENU", "GeoPositionXYZ", "GeoProjection", "GeoProjectionData", "GeoRange", "GeoRangePadding", "GeoRegionValuePlot", "GeoResolution", "GeoScaleBar", "GeoServer", "GeoSmoothHistogram", "GeoStreamPlot", "GeoStyling", "GeoStylingImageFunction", "GeoVariant", "GeoVector", "GeoVectorENU", "GeoVectorPlot", "GeoVectorXYZ", "GeoVisibleRegion", "GeoVisibleRegionBoundary", "GeoWithinQ", "GeoZoomLevel", "GestureHandler", "GestureHandlerTag", "Get", "GetBoundingBoxSizePacket", "GetContext", "GetEnvironment", "GetFileName", "GetFrontEndOptionsDataPacket", "GetLinebreakInformationPacket", "GetMenusPacket", "GetPageBreakInformationPacket", "Glaisher", "GlobalClusteringCoefficient", "GlobalPreferences", "GlobalSession", "Glow", "GoldenAngle", "GoldenRatio", "GompertzMakehamDistribution", "GoochShading", "GoodmanKruskalGamma", "GoodmanKruskalGammaTest", "Goto", "Grad", "Gradient", "GradientFilter", "GradientOrientationFilter", "GrammarApply", "GrammarRules", "GrammarToken", "Graph", "Graph3D", "GraphAssortativity", "GraphAutomorphismGroup", "GraphCenter", "GraphComplement", "GraphData", "GraphDensity", "GraphDiameter", "GraphDifference", "GraphDisjointUnion", "GraphDistance", "GraphDistanceMatrix", "GraphElementData", "GraphEmbedding", "GraphHighlight", "GraphHighlightStyle", "GraphHub", "Graphics", "Graphics3D", "Graphics3DBox", "Graphics3DBoxOptions", "GraphicsArray", "GraphicsBaseline", "GraphicsBox", "GraphicsBoxOptions", "GraphicsColor", "GraphicsColumn", "GraphicsComplex", "GraphicsComplex3DBox", "GraphicsComplex3DBoxOptions", "GraphicsComplexBox", "GraphicsComplexBoxOptions", "GraphicsContents", "GraphicsData", "GraphicsGrid", "GraphicsGridBox", "GraphicsGroup", "GraphicsGroup3DBox", "GraphicsGroup3DBoxOptions", "GraphicsGroupBox", "GraphicsGroupBoxOptions", "GraphicsGrouping", "GraphicsHighlightColor", "GraphicsRow", "GraphicsSpacing", "GraphicsStyle", "GraphIntersection", "GraphLayout", "GraphLinkEfficiency", "GraphPeriphery", "GraphPlot", "GraphPlot3D", "GraphPower", "GraphPropertyDistribution", "GraphQ", "GraphRadius", "GraphReciprocity", "GraphRoot", "GraphStyle", "GraphUnion", "Gray", "GrayLevel", "Greater", "GreaterEqual", "GreaterEqualLess", "GreaterEqualThan", "GreaterFullEqual", "GreaterGreater", "GreaterLess", "GreaterSlantEqual", "GreaterThan", "GreaterTilde", "Green", "GreenFunction", "Grid", "GridBaseline", "GridBox", "GridBoxAlignment", "GridBoxBackground", "GridBoxDividers", "GridBoxFrame", "GridBoxItemSize", "GridBoxItemStyle", "GridBoxOptions", "GridBoxSpacings", "GridCreationSettings", "GridDefaultElement", "GridElementStyleOptions", "GridFrame", "GridFrameMargins", "GridGraph", "GridLines", "GridLinesStyle", "GroebnerBasis", "GroupActionBase", "GroupBy", "GroupCentralizer", "GroupElementFromWord", "GroupElementPosition", "GroupElementQ", "GroupElements", "GroupElementToWord", "GroupGenerators", "Groupings", "GroupMultiplicationTable", "GroupOrbits", "GroupOrder", "GroupPageBreakWithin", "GroupSetwiseStabilizer", "GroupStabilizer", "GroupStabilizerChain", "GroupTogetherGrouping", "GroupTogetherNestedGrouping", "GrowCutComponents", "Gudermannian", "GuidedFilter", "GumbelDistribution", "HaarWavelet", "HadamardMatrix", "HalfLine", "HalfNormalDistribution", "HalfPlane", "HalfSpace", "HalftoneShading", "HamiltonianGraphQ", "HammingDistance", "HammingWindow", "HandlerFunctions", "HandlerFunctionsKeys", "HankelH1", "HankelH2", "HankelMatrix", "HankelTransform", "HannPoissonWindow", "HannWindow", "HaradaNortonGroupHN", "HararyGraph", "HarmonicMean", "HarmonicMeanFilter", "HarmonicNumber", "Hash", "HatchFilling", "HatchShading", "Haversine", "HazardFunction", "Head", "HeadCompose", "HeaderAlignment", "HeaderBackground", "HeaderDisplayFunction", "HeaderLines", "HeaderSize", "HeaderStyle", "Heads", "HeavisideLambda", "HeavisidePi", "HeavisideTheta", "HeldGroupHe", "HeldPart", "HelpBrowserLookup", "HelpBrowserNotebook", "HelpBrowserSettings", "Here", "HermiteDecomposition", "HermiteH", "HermitianMatrixQ", "HessenbergDecomposition", "Hessian", "HeunB", "HeunBPrime", "HeunC", "HeunCPrime", "HeunD", "HeunDPrime", "HeunG", "HeunGPrime", "HeunT", "HeunTPrime", "HexadecimalCharacter", "Hexahedron", "HexahedronBox", "HexahedronBoxOptions", "HiddenItems", "HiddenMarkovProcess", "HiddenSurface", "Highlighted", "HighlightGraph", "HighlightImage", "HighlightMesh", "HighpassFilter", "HigmanSimsGroupHS", "HilbertCurve", "HilbertFilter", "HilbertMatrix", "Histogram", "Histogram3D", "HistogramDistribution", "HistogramList", "HistogramTransform", "HistogramTransformInterpolation", "HistoricalPeriodData", "HitMissTransform", "HITSCentrality", "HjorthDistribution", "HodgeDual", "HoeffdingD", "HoeffdingDTest", "Hold", "HoldAll", "HoldAllComplete", "HoldComplete", "HoldFirst", "HoldForm", "HoldPattern", "HoldRest", "HolidayCalendar", "HomeDirectory", "HomePage", "Horizontal", "HorizontalForm", "HorizontalGauge", "HorizontalScrollPosition", "HornerForm", "HostLookup", "HotellingTSquareDistribution", "HoytDistribution", "HTMLSave", "HTTPErrorResponse", "HTTPRedirect", "HTTPRequest", "HTTPRequestData", "HTTPResponse", "Hue", "HumanGrowthData", "HumpDownHump", "HumpEqual", "HurwitzLerchPhi", "HurwitzZeta", "HyperbolicDistribution", "HypercubeGraph", "HyperexponentialDistribution", "Hyperfactorial", "Hypergeometric0F1", "Hypergeometric0F1Regularized", "Hypergeometric1F1", "Hypergeometric1F1Regularized", "Hypergeometric2F1", "Hypergeometric2F1Regularized", "HypergeometricDistribution", "HypergeometricPFQ", "HypergeometricPFQRegularized", "HypergeometricU", "Hyperlink", "HyperlinkAction", "HyperlinkCreationSettings", "Hyperplane", "Hyphenation", "HyphenationOptions", "HypoexponentialDistribution", "HypothesisTestData", "I", "IconData", "Iconize", "IconizedObject", "IconRules", "Icosahedron", "Identity", "IdentityMatrix", "If", "IgnoreCase", "IgnoreDiacritics", "IgnorePunctuation", "IgnoreSpellCheck", "IgnoringInactive", "Im", "Image", "Image3D", "Image3DProjection", "Image3DSlices", "ImageAccumulate", "ImageAdd", "ImageAdjust", "ImageAlign", "ImageApply", "ImageApplyIndexed", "ImageAspectRatio", "ImageAssemble", "ImageAugmentationLayer", "ImageBoundingBoxes", "ImageCache", "ImageCacheValid", "ImageCapture", "ImageCaptureFunction", "ImageCases", "ImageChannels", "ImageClip", "ImageCollage", "ImageColorSpace", "ImageCompose", "ImageContainsQ", "ImageContents", "ImageConvolve", "ImageCooccurrence", "ImageCorners", "ImageCorrelate", "ImageCorrespondingPoints", "ImageCrop", "ImageData", "ImageDeconvolve", "ImageDemosaic", "ImageDifference", "ImageDimensions", "ImageDisplacements", "ImageDistance", "ImageEffect", "ImageExposureCombine", "ImageFeatureTrack", "ImageFileApply", "ImageFileFilter", "ImageFileScan", "ImageFilter", "ImageFocusCombine", "ImageForestingComponents", "ImageFormattingWidth", "ImageForwardTransformation", "ImageGraphics", "ImageHistogram", "ImageIdentify", "ImageInstanceQ", "ImageKeypoints", "ImageLabels", "ImageLegends", "ImageLevels", "ImageLines", "ImageMargins", "ImageMarker", "ImageMarkers", "ImageMeasurements", "ImageMesh", "ImageMultiply", "ImageOffset", "ImagePad", "ImagePadding", "ImagePartition", "ImagePeriodogram", "ImagePerspectiveTransformation", "ImagePosition", "ImagePreviewFunction", "ImagePyramid", "ImagePyramidApply", "ImageQ", "ImageRangeCache", "ImageRecolor", "ImageReflect", "ImageRegion", "ImageResize", "ImageResolution", "ImageRestyle", "ImageRotate", "ImageRotated", "ImageSaliencyFilter", "ImageScaled", "ImageScan", "ImageSize", "ImageSizeAction", "ImageSizeCache", "ImageSizeMultipliers", "ImageSizeRaw", "ImageSubtract", "ImageTake", "ImageTransformation", "ImageTrim", "ImageType", "ImageValue", "ImageValuePositions", "ImagingDevice", "ImplicitRegion", "Implies", "Import", "ImportAutoReplacements", "ImportByteArray", "ImportOptions", "ImportString", "ImprovementImportance", "In", "Inactivate", "Inactive", "IncidenceGraph", "IncidenceList", "IncidenceMatrix", "IncludeAromaticBonds", "IncludeConstantBasis", "IncludeDefinitions", "IncludeDirectories", "IncludeFileExtension", "IncludeGeneratorTasks", "IncludeHydrogens", "IncludeInflections", "IncludeMetaInformation", "IncludePods", "IncludeQuantities", "IncludeRelatedTables", "IncludeSingularTerm", "IncludeWindowTimes", "Increment", "IndefiniteMatrixQ", "Indent", "IndentingNewlineSpacings", "IndentMaxFraction", "IndependenceTest", "IndependentEdgeSetQ", "IndependentPhysicalQuantity", "IndependentUnit", "IndependentUnitDimension", "IndependentVertexSetQ", "Indeterminate", "IndeterminateThreshold", "IndexCreationOptions", "Indexed", "IndexEdgeTaggedGraph", "IndexGraph", "IndexTag", "Inequality", "InexactNumberQ", "InexactNumbers", "InfiniteFuture", "InfiniteLine", "InfinitePast", "InfinitePlane", "Infinity", "Infix", "InflationAdjust", "InflationMethod", "Information", "InformationData", "InformationDataGrid", "Inherited", "InheritScope", "InhomogeneousPoissonProcess", "InitialEvaluationHistory", "Initialization", "InitializationCell", "InitializationCellEvaluation", "InitializationCellWarning", "InitializationObjects", "InitializationValue", "Initialize", "InitialSeeding", "InlineCounterAssignments", "InlineCounterIncrements", "InlineRules", "Inner", "InnerPolygon", "InnerPolyhedron", "Inpaint", "Input", "InputAliases", "InputAssumptions", "InputAutoReplacements", "InputField", "InputFieldBox", "InputFieldBoxOptions", "InputForm", "InputGrouping", "InputNamePacket", "InputNotebook", "InputPacket", "InputSettings", "InputStream", "InputString", "InputStringPacket", "InputToBoxFormPacket", "Insert", "InsertionFunction", "InsertionPointObject", "InsertLinebreaks", "InsertResults", "Inset", "Inset3DBox", "Inset3DBoxOptions", "InsetBox", "InsetBoxOptions", "Insphere", "Install", "InstallService", "InstanceNormalizationLayer", "InString", "Integer", "IntegerDigits", "IntegerExponent", "IntegerLength", "IntegerName", "IntegerPart", "IntegerPartitions", "IntegerQ", "IntegerReverse", "Integers", "IntegerString", "Integral", "Integrate", "Interactive", "InteractiveTradingChart", "Interlaced", "Interleaving", "InternallyBalancedDecomposition", "InterpolatingFunction", "InterpolatingPolynomial", "Interpolation", "InterpolationOrder", "InterpolationPoints", "InterpolationPrecision", "Interpretation", "InterpretationBox", "InterpretationBoxOptions", "InterpretationFunction", "Interpreter", "InterpretTemplate", "InterquartileRange", "Interrupt", "InterruptSettings", "IntersectedEntityClass", "IntersectingQ", "Intersection", "Interval", "IntervalIntersection", "IntervalMarkers", "IntervalMarkersStyle", "IntervalMemberQ", "IntervalSlider", "IntervalUnion", "Into", "Inverse", "InverseBetaRegularized", "InverseCDF", "InverseChiSquareDistribution", "InverseContinuousWaveletTransform", "InverseDistanceTransform", "InverseEllipticNomeQ", "InverseErf", "InverseErfc", "InverseFourier", "InverseFourierCosTransform", "InverseFourierSequenceTransform", "InverseFourierSinTransform", "InverseFourierTransform", "InverseFunction", "InverseFunctions", "InverseGammaDistribution", "InverseGammaRegularized", "InverseGaussianDistribution", "InverseGudermannian", "InverseHankelTransform", "InverseHaversine", "InverseImagePyramid", "InverseJacobiCD", "InverseJacobiCN", "InverseJacobiCS", "InverseJacobiDC", "InverseJacobiDN", "InverseJacobiDS", "InverseJacobiNC", "InverseJacobiND", "InverseJacobiNS", "InverseJacobiSC", "InverseJacobiSD", "InverseJacobiSN", "InverseLaplaceTransform", "InverseMellinTransform", "InversePermutation", "InverseRadon", "InverseRadonTransform", "InverseSeries", "InverseShortTimeFourier", "InverseSpectrogram", "InverseSurvivalFunction", "InverseTransformedRegion", "InverseWaveletTransform", "InverseWeierstrassP", "InverseWishartMatrixDistribution", "InverseZTransform", "Invisible", "InvisibleApplication", "InvisibleTimes", "IPAddress", "IrreduciblePolynomialQ", "IslandData", "IsolatingInterval", "IsomorphicGraphQ", "IsotopeData", "Italic", "Item", "ItemAspectRatio", "ItemBox", "ItemBoxOptions", "ItemDisplayFunction", "ItemSize", "ItemStyle", "ItoProcess", "JaccardDissimilarity", "JacobiAmplitude", "Jacobian", "JacobiCD", "JacobiCN", "JacobiCS", "JacobiDC", "JacobiDN", "JacobiDS", "JacobiNC", "JacobiND", "JacobiNS", "JacobiP", "JacobiSC", "JacobiSD", "JacobiSN", "JacobiSymbol", "JacobiZeta", "JankoGroupJ1", "JankoGroupJ2", "JankoGroupJ3", "JankoGroupJ4", "JarqueBeraALMTest", "JohnsonDistribution", "Join", "JoinAcross", "Joined", "JoinedCurve", "JoinedCurveBox", "JoinedCurveBoxOptions", "JoinForm", "JordanDecomposition", "JordanModelDecomposition", "JulianDate", "JuliaSetBoettcher", "JuliaSetIterationCount", "JuliaSetPlot", "JuliaSetPoints", "K", "KagiChart", "KaiserBesselWindow", "KaiserWindow", "KalmanEstimator", "KalmanFilter", "KarhunenLoeveDecomposition", "KaryTree", "KatzCentrality", "KCoreComponents", "KDistribution", "KEdgeConnectedComponents", "KEdgeConnectedGraphQ", "KeepExistingVersion", "KelvinBei", "KelvinBer", "KelvinKei", "KelvinKer", "KendallTau", "KendallTauTest", "KernelExecute", "KernelFunction", "KernelMixtureDistribution", "KernelObject", "Kernels", "Ket", "Key", "KeyCollisionFunction", "KeyComplement", "KeyDrop", "KeyDropFrom", "KeyExistsQ", "KeyFreeQ", "KeyIntersection", "KeyMap", "KeyMemberQ", "KeypointStrength", "Keys", "KeySelect", "KeySort", "KeySortBy", "KeyTake", "KeyUnion", "KeyValueMap", "KeyValuePattern", "Khinchin", "KillProcess", "KirchhoffGraph", "KirchhoffMatrix", "KleinInvariantJ", "KnapsackSolve", "KnightTourGraph", "KnotData", "KnownUnitQ", "KochCurve", "KolmogorovSmirnovTest", "KroneckerDelta", "KroneckerModelDecomposition", "KroneckerProduct", "KroneckerSymbol", "KuiperTest", "KumaraswamyDistribution", "Kurtosis", "KuwaharaFilter", "KVertexConnectedComponents", "KVertexConnectedGraphQ", "LABColor", "Label", "Labeled", "LabeledSlider", "LabelingFunction", "LabelingSize", "LabelStyle", "LabelVisibility", "LaguerreL", "LakeData", "LambdaComponents", "LambertW", "LaminaData", "LanczosWindow", "LandauDistribution", "Language", "LanguageCategory", "LanguageData", "LanguageIdentify", "LanguageOptions", "LaplaceDistribution", "LaplaceTransform", "Laplacian", "LaplacianFilter", "LaplacianGaussianFilter", "Large", "Larger", "Last", "Latitude", "LatitudeLongitude", "LatticeData", "LatticeReduce", "Launch", "LaunchKernels", "LayeredGraphPlot", "LayerSizeFunction", "LayoutInformation", "LCHColor", "LCM", "LeaderSize", "LeafCount", "LeapYearQ", "LearnDistribution", "LearnedDistribution", "LearningRate", "LearningRateMultipliers", "LeastSquares", "LeastSquaresFilterKernel", "Left", "LeftArrow", "LeftArrowBar", "LeftArrowRightArrow", "LeftDownTeeVector", "LeftDownVector", "LeftDownVectorBar", "LeftRightArrow", "LeftRightVector", "LeftTee", "LeftTeeArrow", "LeftTeeVector", "LeftTriangle", "LeftTriangleBar", "LeftTriangleEqual", "LeftUpDownVector", "LeftUpTeeVector", "LeftUpVector", "LeftUpVectorBar", "LeftVector", "LeftVectorBar", "LegendAppearance", "Legended", "LegendFunction", "LegendLabel", "LegendLayout", "LegendMargins", "LegendMarkers", "LegendMarkerSize", "LegendreP", "LegendreQ", "LegendreType", "Length", "LengthWhile", "LerchPhi", "Less", "LessEqual", "LessEqualGreater", "LessEqualThan", "LessFullEqual", "LessGreater", "LessLess", "LessSlantEqual", "LessThan", "LessTilde", "LetterCharacter", "LetterCounts", "LetterNumber", "LetterQ", "Level", "LeveneTest", "LeviCivitaTensor", "LevyDistribution", "Lexicographic", "LibraryDataType", "LibraryFunction", "LibraryFunctionError", "LibraryFunctionInformation", "LibraryFunctionLoad", "LibraryFunctionUnload", "LibraryLoad", "LibraryUnload", "LicenseID", "LiftingFilterData", "LiftingWaveletTransform", "LightBlue", "LightBrown", "LightCyan", "Lighter", "LightGray", "LightGreen", "Lighting", "LightingAngle", "LightMagenta", "LightOrange", "LightPink", "LightPurple", "LightRed", "LightSources", "LightYellow", "Likelihood", "Limit", "LimitsPositioning", "LimitsPositioningTokens", "LindleyDistribution", "Line", "Line3DBox", "Line3DBoxOptions", "LinearFilter", "LinearFractionalOptimization", "LinearFractionalTransform", "LinearGradientImage", "LinearizingTransformationData", "LinearLayer", "LinearModelFit", "LinearOffsetFunction", "LinearOptimization", "LinearProgramming", "LinearRecurrence", "LinearSolve", "LinearSolveFunction", "LineBox", "LineBoxOptions", "LineBreak", "LinebreakAdjustments", "LineBreakChart", "LinebreakSemicolonWeighting", "LineBreakWithin", "LineColor", "LineGraph", "LineIndent", "LineIndentMaxFraction", "LineIntegralConvolutionPlot", "LineIntegralConvolutionScale", "LineLegend", "LineOpacity", "LineSpacing", "LineWrapParts", "LinkActivate", "LinkClose", "LinkConnect", "LinkConnectedQ", "LinkCreate", "LinkError", "LinkFlush", "LinkFunction", "LinkHost", "LinkInterrupt", "LinkLaunch", "LinkMode", "LinkObject", "LinkOpen", "LinkOptions", "LinkPatterns", "LinkProtocol", "LinkRankCentrality", "LinkRead", "LinkReadHeld", "LinkReadyQ", "Links", "LinkService", "LinkWrite", "LinkWriteHeld", "LiouvilleLambda", "List", "Listable", "ListAnimate", "ListContourPlot", "ListContourPlot3D", "ListConvolve", "ListCorrelate", "ListCurvePathPlot", "ListDeconvolve", "ListDensityPlot", "ListDensityPlot3D", "Listen", "ListFormat", "ListFourierSequenceTransform", "ListInterpolation", "ListLineIntegralConvolutionPlot", "ListLinePlot", "ListLogLinearPlot", "ListLogLogPlot", "ListLogPlot", "ListPicker", "ListPickerBox", "ListPickerBoxBackground", "ListPickerBoxOptions", "ListPlay", "ListPlot", "ListPlot3D", "ListPointPlot3D", "ListPolarPlot", "ListQ", "ListSliceContourPlot3D", "ListSliceDensityPlot3D", "ListSliceVectorPlot3D", "ListStepPlot", "ListStreamDensityPlot", "ListStreamPlot", "ListSurfacePlot3D", "ListVectorDensityPlot", "ListVectorPlot", "ListVectorPlot3D", "ListZTransform", "Literal", "LiteralSearch", "LocalAdaptiveBinarize", "LocalCache", "LocalClusteringCoefficient", "LocalizeDefinitions", "LocalizeVariables", "LocalObject", "LocalObjects", "LocalResponseNormalizationLayer", "LocalSubmit", "LocalSymbol", "LocalTime", "LocalTimeZone", "LocationEquivalenceTest", "LocationTest", "Locator", "LocatorAutoCreate", "LocatorBox", "LocatorBoxOptions", "LocatorCentering", "LocatorPane", "LocatorPaneBox", "LocatorPaneBoxOptions", "LocatorRegion", "Locked", "Log", "Log10", "Log2", "LogBarnesG", "LogGamma", "LogGammaDistribution", "LogicalExpand", "LogIntegral", "LogisticDistribution", "LogisticSigmoid", "LogitModelFit", "LogLikelihood", "LogLinearPlot", "LogLogisticDistribution", "LogLogPlot", "LogMultinormalDistribution", "LogNormalDistribution", "LogPlot", "LogRankTest", "LogSeriesDistribution", "LongEqual", "Longest", "LongestCommonSequence", "LongestCommonSequencePositions", "LongestCommonSubsequence", "LongestCommonSubsequencePositions", "LongestMatch", "LongestOrderedSequence", "LongForm", "Longitude", "LongLeftArrow", "LongLeftRightArrow", "LongRightArrow", "LongShortTermMemoryLayer", "Lookup", "Loopback", "LoopFreeGraphQ", "Looping", "LossFunction", "LowerCaseQ", "LowerLeftArrow", "LowerRightArrow", "LowerTriangularize", "LowerTriangularMatrixQ", "LowpassFilter", "LQEstimatorGains", "LQGRegulator", "LQOutputRegulatorGains", "LQRegulatorGains", "LUBackSubstitution", "LucasL", "LuccioSamiComponents", "LUDecomposition", "LunarEclipse", "LUVColor", "LyapunovSolve", "LyonsGroupLy", "MachineID", "MachineName", "MachineNumberQ", "MachinePrecision", "MacintoshSystemPageSetup", "Magenta", "Magnification", "Magnify", "MailAddressValidation", "MailExecute", "MailFolder", "MailItem", "MailReceiverFunction", "MailResponseFunction", "MailSearch", "MailServerConnect", "MailServerConnection", "MailSettings", "MainSolve", "MaintainDynamicCaches", "Majority", "MakeBoxes", "MakeExpression", "MakeRules", "ManagedLibraryExpressionID", "ManagedLibraryExpressionQ", "MandelbrotSetBoettcher", "MandelbrotSetDistance", "MandelbrotSetIterationCount", "MandelbrotSetMemberQ", "MandelbrotSetPlot", "MangoldtLambda", "ManhattanDistance", "Manipulate", "Manipulator", "MannedSpaceMissionData", "MannWhitneyTest", "MantissaExponent", "Manual", "Map", "MapAll", "MapAt", "MapIndexed", "MAProcess", "MapThread", "MarchenkoPasturDistribution", "MarcumQ", "MardiaCombinedTest", "MardiaKurtosisTest", "MardiaSkewnessTest", "MarginalDistribution", "MarkovProcessProperties", "Masking", "MatchingDissimilarity", "MatchLocalNameQ", "MatchLocalNames", "MatchQ", "Material", "MathematicalFunctionData", "MathematicaNotation", "MathieuC", "MathieuCharacteristicA", "MathieuCharacteristicB", "MathieuCharacteristicExponent", "MathieuCPrime", "MathieuGroupM11", "MathieuGroupM12", "MathieuGroupM22", "MathieuGroupM23", "MathieuGroupM24", "MathieuS", "MathieuSPrime", "MathMLForm", "MathMLText", "Matrices", "MatrixExp", "MatrixForm", "MatrixFunction", "MatrixLog", "MatrixNormalDistribution", "MatrixPlot", "MatrixPower", "MatrixPropertyDistribution", "MatrixQ", "MatrixRank", "MatrixTDistribution", "Max", "MaxBend", "MaxCellMeasure", "MaxColorDistance", "MaxDate", "MaxDetect", "MaxDuration", "MaxExtraBandwidths", "MaxExtraConditions", "MaxFeatureDisplacement", "MaxFeatures", "MaxFilter", "MaximalBy", "Maximize", "MaxItems", "MaxIterations", "MaxLimit", "MaxMemoryUsed", "MaxMixtureKernels", "MaxOverlapFraction", "MaxPlotPoints", "MaxPoints", "MaxRecursion", "MaxStableDistribution", "MaxStepFraction", "MaxSteps", "MaxStepSize", "MaxTrainingRounds", "MaxValue", "MaxwellDistribution", "MaxWordGap", "McLaughlinGroupMcL", "Mean", "MeanAbsoluteLossLayer", "MeanAround", "MeanClusteringCoefficient", "MeanDegreeConnectivity", "MeanDeviation", "MeanFilter", "MeanGraphDistance", "MeanNeighborDegree", "MeanShift", "MeanShiftFilter", "MeanSquaredLossLayer", "Median", "MedianDeviation", "MedianFilter", "MedicalTestData", "Medium", "MeijerG", "MeijerGReduce", "MeixnerDistribution", "MellinConvolve", "MellinTransform", "MemberQ", "MemoryAvailable", "MemoryConstrained", "MemoryConstraint", "MemoryInUse", "MengerMesh", "Menu", "MenuAppearance", "MenuCommandKey", "MenuEvaluator", "MenuItem", "MenuList", "MenuPacket", "MenuSortingValue", "MenuStyle", "MenuView", "Merge", "MergeDifferences", "MergingFunction", "MersennePrimeExponent", "MersennePrimeExponentQ", "Mesh", "MeshCellCentroid", "MeshCellCount", "MeshCellHighlight", "MeshCellIndex", "MeshCellLabel", "MeshCellMarker", "MeshCellMeasure", "MeshCellQuality", "MeshCells", "MeshCellShapeFunction", "MeshCellStyle", "MeshConnectivityGraph", "MeshCoordinates", "MeshFunctions", "MeshPrimitives", "MeshQualityGoal", "MeshRange", "MeshRefinementFunction", "MeshRegion", "MeshRegionQ", "MeshShading", "MeshStyle", "Message", "MessageDialog", "MessageList", "MessageName", "MessageObject", "MessageOptions", "MessagePacket", "Messages", "MessagesNotebook", "MetaCharacters", "MetaInformation", "MeteorShowerData", "Method", "MethodOptions", "MexicanHatWavelet", "MeyerWavelet", "Midpoint", "Min", "MinColorDistance", "MinDate", "MinDetect", "MineralData", "MinFilter", "MinimalBy", "MinimalPolynomial", "MinimalStateSpaceModel", "Minimize", "MinimumTimeIncrement", "MinIntervalSize", "MinkowskiQuestionMark", "MinLimit", "MinMax", "MinorPlanetData", "Minors", "MinRecursion", "MinSize", "MinStableDistribution", "Minus", "MinusPlus", "MinValue", "Missing", "MissingBehavior", "MissingDataMethod", "MissingDataRules", "MissingQ", "MissingString", "MissingStyle", "MissingValuePattern", "MittagLefflerE", "MixedFractionParts", "MixedGraphQ", "MixedMagnitude", "MixedRadix", "MixedRadixQuantity", "MixedUnit", "MixtureDistribution", "Mod", "Modal", "Mode", "Modular", "ModularInverse", "ModularLambda", "Module", "Modulus", "MoebiusMu", "Molecule", "MoleculeContainsQ", "MoleculeEquivalentQ", "MoleculeGraph", "MoleculeModify", "MoleculePattern", "MoleculePlot", "MoleculePlot3D", "MoleculeProperty", "MoleculeQ", "MoleculeRecognize", "MoleculeValue", "Moment", "Momentary", "MomentConvert", "MomentEvaluate", "MomentGeneratingFunction", "MomentOfInertia", "Monday", "Monitor", "MonomialList", "MonomialOrder", "MonsterGroupM", "MoonPhase", "MoonPosition", "MorletWavelet", "MorphologicalBinarize", "MorphologicalBranchPoints", "MorphologicalComponents", "MorphologicalEulerNumber", "MorphologicalGraph", "MorphologicalPerimeter", "MorphologicalTransform", "MortalityData", "Most", "MountainData", "MouseAnnotation", "MouseAppearance", "MouseAppearanceTag", "MouseButtons", "Mouseover", "MousePointerNote", "MousePosition", "MovieData", "MovingAverage", "MovingMap", "MovingMedian", "MoyalDistribution", "Multicolumn", "MultiedgeStyle", "MultigraphQ", "MultilaunchWarning", "MultiLetterItalics", "MultiLetterStyle", "MultilineFunction", "Multinomial", "MultinomialDistribution", "MultinormalDistribution", "MultiplicativeOrder", "Multiplicity", "MultiplySides", "Multiselection", "MultivariateHypergeometricDistribution", "MultivariatePoissonDistribution", "MultivariateTDistribution", "N", "NakagamiDistribution", "NameQ", "Names", "NamespaceBox", "NamespaceBoxOptions", "Nand", "NArgMax", "NArgMin", "NBernoulliB", "NBodySimulation", "NBodySimulationData", "NCache", "NDEigensystem", "NDEigenvalues", "NDSolve", "NDSolveValue", "Nearest", "NearestFunction", "NearestMeshCells", "NearestNeighborGraph", "NearestTo", "NebulaData", "NeedCurrentFrontEndPackagePacket", "NeedCurrentFrontEndSymbolsPacket", "NeedlemanWunschSimilarity", "Needs", "Negative", "NegativeBinomialDistribution", "NegativeDefiniteMatrixQ", "NegativeIntegers", "NegativeMultinomialDistribution", "NegativeRationals", "NegativeReals", "NegativeSemidefiniteMatrixQ", "NeighborhoodData", "NeighborhoodGraph", "Nest", "NestedGreaterGreater", "NestedLessLess", "NestedScriptRules", "NestGraph", "NestList", "NestWhile", "NestWhileList", "NetAppend", "NetBidirectionalOperator", "NetChain", "NetDecoder", "NetDelete", "NetDrop", "NetEncoder", "NetEvaluationMode", "NetExtract", "NetFlatten", "NetFoldOperator", "NetGANOperator", "NetGraph", "NetInformation", "NetInitialize", "NetInsert", "NetInsertSharedArrays", "NetJoin", "NetMapOperator", "NetMapThreadOperator", "NetMeasurements", "NetModel", "NetNestOperator", "NetPairEmbeddingOperator", "NetPort", "NetPortGradient", "NetPrepend", "NetRename", "NetReplace", "NetReplacePart", "NetSharedArray", "NetStateObject", "NetTake", "NetTrain", "NetTrainResultsObject", "NetworkPacketCapture", "NetworkPacketRecording", "NetworkPacketRecordingDuring", "NetworkPacketTrace", "NeumannValue", "NevilleThetaC", "NevilleThetaD", "NevilleThetaN", "NevilleThetaS", "NewPrimitiveStyle", "NExpectation", "Next", "NextCell", "NextDate", "NextPrime", "NextScheduledTaskTime", "NHoldAll", "NHoldFirst", "NHoldRest", "NicholsGridLines", "NicholsPlot", "NightHemisphere", "NIntegrate", "NMaximize", "NMaxValue", "NMinimize", "NMinValue", "NominalVariables", "NonAssociative", "NoncentralBetaDistribution", "NoncentralChiSquareDistribution", "NoncentralFRatioDistribution", "NoncentralStudentTDistribution", "NonCommutativeMultiply", "NonConstants", "NondimensionalizationTransform", "None", "NoneTrue", "NonlinearModelFit", "NonlinearStateSpaceModel", "NonlocalMeansFilter", "NonNegative", "NonNegativeIntegers", "NonNegativeRationals", "NonNegativeReals", "NonPositive", "NonPositiveIntegers", "NonPositiveRationals", "NonPositiveReals", "Nor", "NorlundB", "Norm", "Normal", "NormalDistribution", "NormalGrouping", "NormalizationLayer", "Normalize", "Normalized", "NormalizedSquaredEuclideanDistance", "NormalMatrixQ", "NormalsFunction", "NormFunction", "Not", "NotCongruent", "NotCupCap", "NotDoubleVerticalBar", "Notebook", "NotebookApply", "NotebookAutoSave", "NotebookClose", "NotebookConvertSettings", "NotebookCreate", "NotebookCreateReturnObject", "NotebookDefault", "NotebookDelete", "NotebookDirectory", "NotebookDynamicExpression", "NotebookEvaluate", "NotebookEventActions", "NotebookFileName", "NotebookFind", "NotebookFindReturnObject", "NotebookGet", "NotebookGetLayoutInformationPacket", "NotebookGetMisspellingsPacket", "NotebookImport", "NotebookInformation", "NotebookInterfaceObject", "NotebookLocate", "NotebookObject", "NotebookOpen", "NotebookOpenReturnObject", "NotebookPath", "NotebookPrint", "NotebookPut", "NotebookPutReturnObject", "NotebookRead", "NotebookResetGeneratedCells", "Notebooks", "NotebookSave", "NotebookSaveAs", "NotebookSelection", "NotebookSetupLayoutInformationPacket", "NotebooksMenu", "NotebookTemplate", "NotebookWrite", "NotElement", "NotEqualTilde", "NotExists", "NotGreater", "NotGreaterEqual", "NotGreaterFullEqual", "NotGreaterGreater", "NotGreaterLess", "NotGreaterSlantEqual", "NotGreaterTilde", "Nothing", "NotHumpDownHump", "NotHumpEqual", "NotificationFunction", "NotLeftTriangle", "NotLeftTriangleBar", "NotLeftTriangleEqual", "NotLess", "NotLessEqual", "NotLessFullEqual", "NotLessGreater", "NotLessLess", "NotLessSlantEqual", "NotLessTilde", "NotNestedGreaterGreater", "NotNestedLessLess", "NotPrecedes", "NotPrecedesEqual", "NotPrecedesSlantEqual", "NotPrecedesTilde", "NotReverseElement", "NotRightTriangle", "NotRightTriangleBar", "NotRightTriangleEqual", "NotSquareSubset", "NotSquareSubsetEqual", "NotSquareSuperset", "NotSquareSupersetEqual", "NotSubset", "NotSubsetEqual", "NotSucceeds", "NotSucceedsEqual", "NotSucceedsSlantEqual", "NotSucceedsTilde", "NotSuperset", "NotSupersetEqual", "NotTilde", "NotTildeEqual", "NotTildeFullEqual", "NotTildeTilde", "NotVerticalBar", "Now", "NoWhitespace", "NProbability", "NProduct", "NProductFactors", "NRoots", "NSolve", "NSum", "NSumTerms", "NuclearExplosionData", "NuclearReactorData", "Null", "NullRecords", "NullSpace", "NullWords", "Number", "NumberCompose", "NumberDecompose", "NumberExpand", "NumberFieldClassNumber", "NumberFieldDiscriminant", "NumberFieldFundamentalUnits", "NumberFieldIntegralBasis", "NumberFieldNormRepresentatives", "NumberFieldRegulator", "NumberFieldRootsOfUnity", "NumberFieldSignature", "NumberForm", "NumberFormat", "NumberLinePlot", "NumberMarks", "NumberMultiplier", "NumberPadding", "NumberPoint", "NumberQ", "NumberSeparator", "NumberSigns", "NumberString", "Numerator", "NumeratorDenominator", "NumericalOrder", "NumericalSort", "NumericArray", "NumericArrayQ", "NumericArrayType", "NumericFunction", "NumericQ", "NuttallWindow", "NValues", "NyquistGridLines", "NyquistPlot", "O", "ObservabilityGramian", "ObservabilityMatrix", "ObservableDecomposition", "ObservableModelQ", "OceanData", "Octahedron", "OddQ", "Off", "Offset", "OLEData", "On", "ONanGroupON", "Once", "OneIdentity", "Opacity", "OpacityFunction", "OpacityFunctionScaling", "Open", "OpenAppend", "Opener", "OpenerBox", "OpenerBoxOptions", "OpenerView", "OpenFunctionInspectorPacket", "Opening", "OpenRead", "OpenSpecialOptions", "OpenTemporary", "OpenWrite", "Operate", "OperatingSystem", "OperatorApplied", "OptimumFlowData", "Optional", "OptionalElement", "OptionInspectorSettings", "OptionQ", "Options", "OptionsPacket", "OptionsPattern", "OptionValue", "OptionValueBox", "OptionValueBoxOptions", "Or", "Orange", "Order", "OrderDistribution", "OrderedQ", "Ordering", "OrderingBy", "OrderingLayer", "Orderless", "OrderlessPatternSequence", "OrnsteinUhlenbeckProcess", "Orthogonalize", "OrthogonalMatrixQ", "Out", "Outer", "OuterPolygon", "OuterPolyhedron", "OutputAutoOverwrite", "OutputControllabilityMatrix", "OutputControllableModelQ", "OutputForm", "OutputFormData", "OutputGrouping", "OutputMathEditExpression", "OutputNamePacket", "OutputResponse", "OutputSizeLimit", "OutputStream", "Over", "OverBar", "OverDot", "Overflow", "OverHat", "Overlaps", "Overlay", "OverlayBox", "OverlayBoxOptions", "Overscript", "OverscriptBox", "OverscriptBoxOptions", "OverTilde", "OverVector", "OverwriteTarget", "OwenT", "OwnValues", "Package", "PackingMethod", "PackPaclet", "PacletDataRebuild", "PacletDirectoryAdd", "PacletDirectoryLoad", "PacletDirectoryRemove", "PacletDirectoryUnload", "PacletDisable", "PacletEnable", "PacletFind", "PacletFindRemote", "PacletInformation", "PacletInstall", "PacletInstallSubmit", "PacletNewerQ", "PacletObject", "PacletObjectQ", "PacletSite", "PacletSiteObject", "PacletSiteRegister", "PacletSites", "PacletSiteUnregister", "PacletSiteUpdate", "PacletUninstall", "PacletUpdate", "PaddedForm", "Padding", "PaddingLayer", "PaddingSize", "PadeApproximant", "PadLeft", "PadRight", "PageBreakAbove", "PageBreakBelow", "PageBreakWithin", "PageFooterLines", "PageFooters", "PageHeaderLines", "PageHeaders", "PageHeight", "PageRankCentrality", "PageTheme", "PageWidth", "Pagination", "PairedBarChart", "PairedHistogram", "PairedSmoothHistogram", "PairedTTest", "PairedZTest", "PaletteNotebook", "PalettePath", "PalindromeQ", "Pane", "PaneBox", "PaneBoxOptions", "Panel", "PanelBox", "PanelBoxOptions", "Paneled", "PaneSelector", "PaneSelectorBox", "PaneSelectorBoxOptions", "PaperWidth", "ParabolicCylinderD", "ParagraphIndent", "ParagraphSpacing", "ParallelArray", "ParallelCombine", "ParallelDo", "Parallelepiped", "ParallelEvaluate", "Parallelization", "Parallelize", "ParallelMap", "ParallelNeeds", "Parallelogram", "ParallelProduct", "ParallelSubmit", "ParallelSum", "ParallelTable", "ParallelTry", "Parameter", "ParameterEstimator", "ParameterMixtureDistribution", "ParameterVariables", "ParametricFunction", "ParametricNDSolve", "ParametricNDSolveValue", "ParametricPlot", "ParametricPlot3D", "ParametricRampLayer", "ParametricRegion", "ParentBox", "ParentCell", "ParentConnect", "ParentDirectory", "ParentForm", "Parenthesize", "ParentList", "ParentNotebook", "ParetoDistribution", "ParetoPickandsDistribution", "ParkData", "Part", "PartBehavior", "PartialCorrelationFunction", "PartialD", "ParticleAcceleratorData", "ParticleData", "Partition", "PartitionGranularity", "PartitionsP", "PartitionsQ", "PartLayer", "PartOfSpeech", "PartProtection", "ParzenWindow", "PascalDistribution", "PassEventsDown", "PassEventsUp", "Paste", "PasteAutoQuoteCharacters", "PasteBoxFormInlineCells", "PasteButton", "Path", "PathGraph", "PathGraphQ", "Pattern", "PatternFilling", "PatternSequence", "PatternTest", "PauliMatrix", "PaulWavelet", "Pause", "PausedTime", "PDF", "PeakDetect", "PeanoCurve", "PearsonChiSquareTest", "PearsonCorrelationTest", "PearsonDistribution", "PercentForm", "PerfectNumber", "PerfectNumberQ", "PerformanceGoal", "Perimeter", "PeriodicBoundaryCondition", "PeriodicInterpolation", "Periodogram", "PeriodogramArray", "Permanent", "Permissions", "PermissionsGroup", "PermissionsGroupMemberQ", "PermissionsGroups", "PermissionsKey", "PermissionsKeys", "PermutationCycles", "PermutationCyclesQ", "PermutationGroup", "PermutationLength", "PermutationList", "PermutationListQ", "PermutationMax", "PermutationMin", "PermutationOrder", "PermutationPower", "PermutationProduct", "PermutationReplace", "Permutations", "PermutationSupport", "Permute", "PeronaMalikFilter", "Perpendicular", "PerpendicularBisector", "PersistenceLocation", "PersistenceTime", "PersistentObject", "PersistentObjects", "PersistentValue", "PersonData", "PERTDistribution", "PetersenGraph", "PhaseMargins", "PhaseRange", "PhysicalSystemData", "Pi", "Pick", "PIDData", "PIDDerivativeFilter", "PIDFeedforward", "PIDTune", "Piecewise", "PiecewiseExpand", "PieChart", "PieChart3D", "PillaiTrace", "PillaiTraceTest", "PingTime", "Pink", "PitchRecognize", "Pivoting", "PixelConstrained", "PixelValue", "PixelValuePositions", "Placed", "Placeholder", "PlaceholderReplace", "Plain", "PlanarAngle", "PlanarGraph", "PlanarGraphQ", "PlanckRadiationLaw", "PlaneCurveData", "PlanetaryMoonData", "PlanetData", "PlantData", "Play", "PlayRange", "Plot", "Plot3D", "Plot3Matrix", "PlotDivision", "PlotJoined", "PlotLabel", "PlotLabels", "PlotLayout", "PlotLegends", "PlotMarkers", "PlotPoints", "PlotRange", "PlotRangeClipping", "PlotRangeClipPlanesStyle", "PlotRangePadding", "PlotRegion", "PlotStyle", "PlotTheme", "Pluralize", "Plus", "PlusMinus", "Pochhammer", "PodStates", "PodWidth", "Point", "Point3DBox", "Point3DBoxOptions", "PointBox", "PointBoxOptions", "PointFigureChart", "PointLegend", "PointSize", "PoissonConsulDistribution", "PoissonDistribution", "PoissonProcess", "PoissonWindow", "PolarAxes", "PolarAxesOrigin", "PolarGridLines", "PolarPlot", "PolarTicks", "PoleZeroMarkers", "PolyaAeppliDistribution", "PolyGamma", "Polygon", "Polygon3DBox", "Polygon3DBoxOptions", "PolygonalNumber", "PolygonAngle", "PolygonBox", "PolygonBoxOptions", "PolygonCoordinates", "PolygonDecomposition", "PolygonHoleScale", "PolygonIntersections", "PolygonScale", "Polyhedron", "PolyhedronAngle", "PolyhedronCoordinates", "PolyhedronData", "PolyhedronDecomposition", "PolyhedronGenus", "PolyLog", "PolynomialExtendedGCD", "PolynomialForm", "PolynomialGCD", "PolynomialLCM", "PolynomialMod", "PolynomialQ", "PolynomialQuotient", "PolynomialQuotientRemainder", "PolynomialReduce", "PolynomialRemainder", "Polynomials", "PoolingLayer", "PopupMenu", "PopupMenuBox", "PopupMenuBoxOptions", "PopupView", "PopupWindow", "Position", "PositionIndex", "Positive", "PositiveDefiniteMatrixQ", "PositiveIntegers", "PositiveRationals", "PositiveReals", "PositiveSemidefiniteMatrixQ", "PossibleZeroQ", "Postfix", "PostScript", "Power", "PowerDistribution", "PowerExpand", "PowerMod", "PowerModList", "PowerRange", "PowerSpectralDensity", "PowersRepresentations", "PowerSymmetricPolynomial", "Precedence", "PrecedenceForm", "Precedes", "PrecedesEqual", "PrecedesSlantEqual", "PrecedesTilde", "Precision", "PrecisionGoal", "PreDecrement", "Predict", "PredictionRoot", "PredictorFunction", "PredictorInformation", "PredictorMeasurements", "PredictorMeasurementsObject", "PreemptProtect", "PreferencesPath", "Prefix", "PreIncrement", "Prepend", "PrependLayer", "PrependTo", "PreprocessingRules", "PreserveColor", "PreserveImageOptions", "Previous", "PreviousCell", "PreviousDate", "PriceGraphDistribution", "PrimaryPlaceholder", "Prime", "PrimeNu", "PrimeOmega", "PrimePi", "PrimePowerQ", "PrimeQ", "Primes", "PrimeZetaP", "PrimitivePolynomialQ", "PrimitiveRoot", "PrimitiveRootList", "PrincipalComponents", "PrincipalValue", "Print", "PrintableASCIIQ", "PrintAction", "PrintForm", "PrintingCopies", "PrintingOptions", "PrintingPageRange", "PrintingStartingPageNumber", "PrintingStyleEnvironment", "Printout3D", "Printout3DPreviewer", "PrintPrecision", "PrintTemporary", "Prism", "PrismBox", "PrismBoxOptions", "PrivateCellOptions", "PrivateEvaluationOptions", "PrivateFontOptions", "PrivateFrontEndOptions", "PrivateKey", "PrivateNotebookOptions", "PrivatePaths", "Probability", "ProbabilityDistribution", "ProbabilityPlot", "ProbabilityPr", "ProbabilityScalePlot", "ProbitModelFit", "ProcessConnection", "ProcessDirectory", "ProcessEnvironment", "Processes", "ProcessEstimator", "ProcessInformation", "ProcessObject", "ProcessParameterAssumptions", "ProcessParameterQ", "ProcessStateDomain", "ProcessStatus", "ProcessTimeDomain", "Product", "ProductDistribution", "ProductLog", "ProgressIndicator", "ProgressIndicatorBox", "ProgressIndicatorBoxOptions", "Projection", "Prolog", "PromptForm", "ProofObject", "Properties", "Property", "PropertyList", "PropertyValue", "Proportion", "Proportional", "Protect", "Protected", "ProteinData", "Pruning", "PseudoInverse", "PsychrometricPropertyData", "PublicKey", "PublisherID", "PulsarData", "PunctuationCharacter", "Purple", "Put", "PutAppend", "Pyramid", "PyramidBox", "PyramidBoxOptions", "QBinomial", "QFactorial", "QGamma", "QHypergeometricPFQ", "QnDispersion", "QPochhammer", "QPolyGamma", "QRDecomposition", "QuadraticIrrationalQ", "QuadraticOptimization", "Quantile", "QuantilePlot", "Quantity", "QuantityArray", "QuantityDistribution", "QuantityForm", "QuantityMagnitude", "QuantityQ", "QuantityUnit", "QuantityVariable", "QuantityVariableCanonicalUnit", "QuantityVariableDimensions", "QuantityVariableIdentifier", "QuantityVariablePhysicalQuantity", "Quartics", "QuartileDeviation", "Quartiles", "QuartileSkewness", "Query", "QueueingNetworkProcess", "QueueingProcess", "QueueProperties", "Quiet", "Quit", "Quotient", "QuotientRemainder", "RadialGradientImage", "RadialityCentrality", "RadicalBox", "RadicalBoxOptions", "RadioButton", "RadioButtonBar", "RadioButtonBox", "RadioButtonBoxOptions", "Radon", "RadonTransform", "RamanujanTau", "RamanujanTauL", "RamanujanTauTheta", "RamanujanTauZ", "Ramp", "Random", "RandomChoice", "RandomColor", "RandomComplex", "RandomEntity", "RandomFunction", "RandomGeoPosition", "RandomGraph", "RandomImage", "RandomInstance", "RandomInteger", "RandomPermutation", "RandomPoint", "RandomPolygon", "RandomPolyhedron", "RandomPrime", "RandomReal", "RandomSample", "RandomSeed", "RandomSeeding", "RandomVariate", "RandomWalkProcess", "RandomWord", "Range", "RangeFilter", "RangeSpecification", "RankedMax", "RankedMin", "RarerProbability", "Raster", "Raster3D", "Raster3DBox", "Raster3DBoxOptions", "RasterArray", "RasterBox", "RasterBoxOptions", "Rasterize", "RasterSize", "Rational", "RationalFunctions", "Rationalize", "Rationals", "Ratios", "RawArray", "RawBoxes", "RawData", "RawMedium", "RayleighDistribution", "Re", "Read", "ReadByteArray", "ReadLine", "ReadList", "ReadProtected", "ReadString", "Real", "RealAbs", "RealBlockDiagonalForm", "RealDigits", "RealExponent", "Reals", "RealSign", "Reap", "RebuildPacletData", "RecognitionPrior", "RecognitionThreshold", "Record", "RecordLists", "RecordSeparators", "Rectangle", "RectangleBox", "RectangleBoxOptions", "RectangleChart", "RectangleChart3D", "RectangularRepeatingElement", "RecurrenceFilter", "RecurrenceTable", "RecurringDigitsForm", "Red", "Reduce", "RefBox", "ReferenceLineStyle", "ReferenceMarkers", "ReferenceMarkerStyle", "Refine", "ReflectionMatrix", "ReflectionTransform", "Refresh", "RefreshRate", "Region", "RegionBinarize", "RegionBoundary", "RegionBoundaryStyle", "RegionBounds", "RegionCentroid", "RegionDifference", "RegionDimension", "RegionDisjoint", "RegionDistance", "RegionDistanceFunction", "RegionEmbeddingDimension", "RegionEqual", "RegionFillingStyle", "RegionFunction", "RegionImage", "RegionIntersection", "RegionMeasure", "RegionMember", "RegionMemberFunction", "RegionMoment", "RegionNearest", "RegionNearestFunction", "RegionPlot", "RegionPlot3D", "RegionProduct", "RegionQ", "RegionResize", "RegionSize", "RegionSymmetricDifference", "RegionUnion", "RegionWithin", "RegisterExternalEvaluator", "RegularExpression", "Regularization", "RegularlySampledQ", "RegularPolygon", "ReIm", "ReImLabels", "ReImPlot", "ReImStyle", "Reinstall", "RelationalDatabase", "RelationGraph", "Release", "ReleaseHold", "ReliabilityDistribution", "ReliefImage", "ReliefPlot", "RemoteAuthorizationCaching", "RemoteConnect", "RemoteConnectionObject", "RemoteFile", "RemoteRun", "RemoteRunProcess", "Remove", "RemoveAlphaChannel", "RemoveAsynchronousTask", "RemoveAudioStream", "RemoveBackground", "RemoveChannelListener", "RemoveChannelSubscribers", "Removed", "RemoveDiacritics", "RemoveInputStreamMethod", "RemoveOutputStreamMethod", "RemoveProperty", "RemoveScheduledTask", "RemoveUsers", "RemoveVideoStream", "RenameDirectory", "RenameFile", "RenderAll", "RenderingOptions", "RenewalProcess", "RenkoChart", "RepairMesh", "Repeated", "RepeatedNull", "RepeatedString", "RepeatedTiming", "RepeatingElement", "Replace", "ReplaceAll", "ReplaceHeldPart", "ReplaceImageValue", "ReplaceList", "ReplacePart", "ReplacePixelValue", "ReplaceRepeated", "ReplicateLayer", "RequiredPhysicalQuantities", "Resampling", "ResamplingAlgorithmData", "ResamplingMethod", "Rescale", "RescalingTransform", "ResetDirectory", "ResetMenusPacket", "ResetScheduledTask", "ReshapeLayer", "Residue", "ResizeLayer", "Resolve", "ResourceAcquire", "ResourceData", "ResourceFunction", "ResourceObject", "ResourceRegister", "ResourceRemove", "ResourceSearch", "ResourceSubmissionObject", "ResourceSubmit", "ResourceSystemBase", "ResourceSystemPath", "ResourceUpdate", "ResourceVersion", "ResponseForm", "Rest", "RestartInterval", "Restricted", "Resultant", "ResumePacket", "Return", "ReturnEntersInput", "ReturnExpressionPacket", "ReturnInputFormPacket", "ReturnPacket", "ReturnReceiptFunction", "ReturnTextPacket", "Reverse", "ReverseApplied", "ReverseBiorthogonalSplineWavelet", "ReverseElement", "ReverseEquilibrium", "ReverseGraph", "ReverseSort", "ReverseSortBy", "ReverseUpEquilibrium", "RevolutionAxis", "RevolutionPlot3D", "RGBColor", "RiccatiSolve", "RiceDistribution", "RidgeFilter", "RiemannR", "RiemannSiegelTheta", "RiemannSiegelZ", "RiemannXi", "Riffle", "Right", "RightArrow", "RightArrowBar", "RightArrowLeftArrow", "RightComposition", "RightCosetRepresentative", "RightDownTeeVector", "RightDownVector", "RightDownVectorBar", "RightTee", "RightTeeArrow", "RightTeeVector", "RightTriangle", "RightTriangleBar", "RightTriangleEqual", "RightUpDownVector", "RightUpTeeVector", "RightUpVector", "RightUpVectorBar", "RightVector", "RightVectorBar", "RiskAchievementImportance", "RiskReductionImportance", "RogersTanimotoDissimilarity", "RollPitchYawAngles", "RollPitchYawMatrix", "RomanNumeral", "Root", "RootApproximant", "RootIntervals", "RootLocusPlot", "RootMeanSquare", "RootOfUnityQ", "RootReduce", "Roots", "RootSum", "Rotate", "RotateLabel", "RotateLeft", "RotateRight", "RotationAction", "RotationBox", "RotationBoxOptions", "RotationMatrix", "RotationTransform", "Round", "RoundImplies", "RoundingRadius", "Row", "RowAlignments", "RowBackgrounds", "RowBox", "RowHeights", "RowLines", "RowMinHeight", "RowReduce", "RowsEqual", "RowSpacings", "RSolve", "RSolveValue", "RudinShapiro", "RudvalisGroupRu", "Rule", "RuleCondition", "RuleDelayed", "RuleForm", "RulePlot", "RulerUnits", "Run", "RunProcess", "RunScheduledTask", "RunThrough", "RuntimeAttributes", "RuntimeOptions", "RussellRaoDissimilarity", "SameQ", "SameTest", "SameTestProperties", "SampledEntityClass", "SampleDepth", "SampledSoundFunction", "SampledSoundList", "SampleRate", "SamplingPeriod", "SARIMAProcess", "SARMAProcess", "SASTriangle", "SatelliteData", "SatisfiabilityCount", "SatisfiabilityInstances", "SatisfiableQ", "Saturday", "Save", "Saveable", "SaveAutoDelete", "SaveConnection", "SaveDefinitions", "SavitzkyGolayMatrix", "SawtoothWave", "Scale", "Scaled", "ScaleDivisions", "ScaledMousePosition", "ScaleOrigin", "ScalePadding", "ScaleRanges", "ScaleRangeStyle", "ScalingFunctions", "ScalingMatrix", "ScalingTransform", "Scan", "ScheduledTask", "ScheduledTaskActiveQ", "ScheduledTaskInformation", "ScheduledTaskInformationData", "ScheduledTaskObject", "ScheduledTasks", "SchurDecomposition", "ScientificForm", "ScientificNotationThreshold", "ScorerGi", "ScorerGiPrime", "ScorerHi", "ScorerHiPrime", "ScreenRectangle", "ScreenStyleEnvironment", "ScriptBaselineShifts", "ScriptForm", "ScriptLevel", "ScriptMinSize", "ScriptRules", "ScriptSizeMultipliers", "Scrollbars", "ScrollingOptions", "ScrollPosition", "SearchAdjustment", "SearchIndexObject", "SearchIndices", "SearchQueryString", "SearchResultObject", "Sec", "Sech", "SechDistribution", "SecondOrderConeOptimization", "SectionGrouping", "SectorChart", "SectorChart3D", "SectorOrigin", "SectorSpacing", "SecuredAuthenticationKey", "SecuredAuthenticationKeys", "SeedRandom", "Select", "Selectable", "SelectComponents", "SelectedCells", "SelectedNotebook", "SelectFirst", "Selection", "SelectionAnimate", "SelectionCell", "SelectionCellCreateCell", "SelectionCellDefaultStyle", "SelectionCellParentStyle", "SelectionCreateCell", "SelectionDebuggerTag", "SelectionDuplicateCell", "SelectionEvaluate", "SelectionEvaluateCreateCell", "SelectionMove", "SelectionPlaceholder", "SelectionSetStyle", "SelectWithContents", "SelfLoops", "SelfLoopStyle", "SemanticImport", "SemanticImportString", "SemanticInterpretation", "SemialgebraicComponentInstances", "SemidefiniteOptimization", "SendMail", "SendMessage", "Sequence", "SequenceAlignment", "SequenceAttentionLayer", "SequenceCases", "SequenceCount", "SequenceFold", "SequenceFoldList", "SequenceForm", "SequenceHold", "SequenceLastLayer", "SequenceMostLayer", "SequencePosition", "SequencePredict", "SequencePredictorFunction", "SequenceReplace", "SequenceRestLayer", "SequenceReverseLayer", "SequenceSplit", "Series", "SeriesCoefficient", "SeriesData", "SeriesTermGoal", "ServiceConnect", "ServiceDisconnect", "ServiceExecute", "ServiceObject", "ServiceRequest", "ServiceResponse", "ServiceSubmit", "SessionSubmit", "SessionTime", "Set", "SetAccuracy", "SetAlphaChannel", "SetAttributes", "Setbacks", "SetBoxFormNamesPacket", "SetCloudDirectory", "SetCookies", "SetDelayed", "SetDirectory", "SetEnvironment", "SetEvaluationNotebook", "SetFileDate", "SetFileLoadingContext", "SetNotebookStatusLine", "SetOptions", "SetOptionsPacket", "SetPermissions", "SetPrecision", "SetProperty", "SetSecuredAuthenticationKey", "SetSelectedNotebook", "SetSharedFunction", "SetSharedVariable", "SetSpeechParametersPacket", "SetStreamPosition", "SetSystemModel", "SetSystemOptions", "Setter", "SetterBar", "SetterBox", "SetterBoxOptions", "Setting", "SetUsers", "SetValue", "Shading", "Shallow", "ShannonWavelet", "ShapiroWilkTest", "Share", "SharingList", "Sharpen", "ShearingMatrix", "ShearingTransform", "ShellRegion", "ShenCastanMatrix", "ShiftedGompertzDistribution", "ShiftRegisterSequence", "Short", "ShortDownArrow", "Shortest", "ShortestMatch", "ShortestPathFunction", "ShortLeftArrow", "ShortRightArrow", "ShortTimeFourier", "ShortTimeFourierData", "ShortUpArrow", "Show", "ShowAutoConvert", "ShowAutoSpellCheck", "ShowAutoStyles", "ShowCellBracket", "ShowCellLabel", "ShowCellTags", "ShowClosedCellArea", "ShowCodeAssist", "ShowContents", "ShowControls", "ShowCursorTracker", "ShowGroupOpenCloseIcon", "ShowGroupOpener", "ShowInvisibleCharacters", "ShowPageBreaks", "ShowPredictiveInterface", "ShowSelection", "ShowShortBoxForm", "ShowSpecialCharacters", "ShowStringCharacters", "ShowSyntaxStyles", "ShrinkingDelay", "ShrinkWrapBoundingBox", "SiderealTime", "SiegelTheta", "SiegelTukeyTest", "SierpinskiCurve", "SierpinskiMesh", "Sign", "Signature", "SignedRankTest", "SignedRegionDistance", "SignificanceLevel", "SignPadding", "SignTest", "SimilarityRules", "SimpleGraph", "SimpleGraphQ", "SimplePolygonQ", "SimplePolyhedronQ", "Simplex", "Simplify", "Sin", "Sinc", "SinghMaddalaDistribution", "SingleEvaluation", "SingleLetterItalics", "SingleLetterStyle", "SingularValueDecomposition", "SingularValueList", "SingularValuePlot", "SingularValues", "Sinh", "SinhIntegral", "SinIntegral", "SixJSymbol", "Skeleton", "SkeletonTransform", "SkellamDistribution", "Skewness", "SkewNormalDistribution", "SkinStyle", "Skip", "SliceContourPlot3D", "SliceDensityPlot3D", "SliceDistribution", "SliceVectorPlot3D", "Slider", "Slider2D", "Slider2DBox", "Slider2DBoxOptions", "SliderBox", "SliderBoxOptions", "SlideView", "Slot", "SlotSequence", "Small", "SmallCircle", "Smaller", "SmithDecomposition", "SmithDelayCompensator", "SmithWatermanSimilarity", "SmoothDensityHistogram", "SmoothHistogram", "SmoothHistogram3D", "SmoothKernelDistribution", "SnDispersion", "Snippet", "SnubPolyhedron", "SocialMediaData", "Socket", "SocketConnect", "SocketListen", "SocketListener", "SocketObject", "SocketOpen", "SocketReadMessage", "SocketReadyQ", "Sockets", "SocketWaitAll", "SocketWaitNext", "SoftmaxLayer", "SokalSneathDissimilarity", "SolarEclipse", "SolarSystemFeatureData", "SolidAngle", "SolidData", "SolidRegionQ", "Solve", "SolveAlways", "SolveDelayed", "Sort", "SortBy", "SortedBy", "SortedEntityClass", "Sound", "SoundAndGraphics", "SoundNote", "SoundVolume", "SourceLink", "Sow", "Space", "SpaceCurveData", "SpaceForm", "Spacer", "Spacings", "Span", "SpanAdjustments", "SpanCharacterRounding", "SpanFromAbove", "SpanFromBoth", "SpanFromLeft", "SpanLineThickness", "SpanMaxSize", "SpanMinSize", "SpanningCharacters", "SpanSymmetric", "SparseArray", "SpatialGraphDistribution", "SpatialMedian", "SpatialTransformationLayer", "Speak", "SpeakerMatchQ", "SpeakTextPacket", "SpearmanRankTest", "SpearmanRho", "SpeciesData", "SpecificityGoal", "SpectralLineData", "Spectrogram", "SpectrogramArray", "Specularity", "SpeechCases", "SpeechInterpreter", "SpeechRecognize", "SpeechSynthesize", "SpellingCorrection", "SpellingCorrectionList", "SpellingDictionaries", "SpellingDictionariesPath", "SpellingOptions", "SpellingSuggestionsPacket", "Sphere", "SphereBox", "SpherePoints", "SphericalBesselJ", "SphericalBesselY", "SphericalHankelH1", "SphericalHankelH2", "SphericalHarmonicY", "SphericalPlot3D", "SphericalRegion", "SphericalShell", "SpheroidalEigenvalue", "SpheroidalJoiningFactor", "SpheroidalPS", "SpheroidalPSPrime", "SpheroidalQS", "SpheroidalQSPrime", "SpheroidalRadialFactor", "SpheroidalS1", "SpheroidalS1Prime", "SpheroidalS2", "SpheroidalS2Prime", "Splice", "SplicedDistribution", "SplineClosed", "SplineDegree", "SplineKnots", "SplineWeights", "Split", "SplitBy", "SpokenString", "Sqrt", "SqrtBox", "SqrtBoxOptions", "Square", "SquaredEuclideanDistance", "SquareFreeQ", "SquareIntersection", "SquareMatrixQ", "SquareRepeatingElement", "SquaresR", "SquareSubset", "SquareSubsetEqual", "SquareSuperset", "SquareSupersetEqual", "SquareUnion", "SquareWave", "SSSTriangle", "StabilityMargins", "StabilityMarginsStyle", "StableDistribution", "Stack", "StackBegin", "StackComplete", "StackedDateListPlot", "StackedListPlot", "StackInhibit", "StadiumShape", "StandardAtmosphereData", "StandardDeviation", "StandardDeviationFilter", "StandardForm", "Standardize", "Standardized", "StandardOceanData", "StandbyDistribution", "Star", "StarClusterData", "StarData", "StarGraph", "StartAsynchronousTask", "StartExternalSession", "StartingStepSize", "StartOfLine", "StartOfString", "StartProcess", "StartScheduledTask", "StartupSound", "StartWebSession", "StateDimensions", "StateFeedbackGains", "StateOutputEstimator", "StateResponse", "StateSpaceModel", "StateSpaceRealization", "StateSpaceTransform", "StateTransformationLinearize", "StationaryDistribution", "StationaryWaveletPacketTransform", "StationaryWaveletTransform", "StatusArea", "StatusCentrality", "StepMonitor", "StereochemistryElements", "StieltjesGamma", "StippleShading", "StirlingS1", "StirlingS2", "StopAsynchronousTask", "StoppingPowerData", "StopScheduledTask", "StrataVariables", "StratonovichProcess", "StreamColorFunction", "StreamColorFunctionScaling", "StreamDensityPlot", "StreamMarkers", "StreamPlot", "StreamPoints", "StreamPosition", "Streams", "StreamScale", "StreamStyle", "String", "StringBreak", "StringByteCount", "StringCases", "StringContainsQ", "StringCount", "StringDelete", "StringDrop", "StringEndsQ", "StringExpression", "StringExtract", "StringForm", "StringFormat", "StringFreeQ", "StringInsert", "StringJoin", "StringLength", "StringMatchQ", "StringPadLeft", "StringPadRight", "StringPart", "StringPartition", "StringPosition", "StringQ", "StringRepeat", "StringReplace", "StringReplaceList", "StringReplacePart", "StringReverse", "StringRiffle", "StringRotateLeft", "StringRotateRight", "StringSkeleton", "StringSplit", "StringStartsQ", "StringTake", "StringTemplate", "StringToByteArray", "StringToStream", "StringTrim", "StripBoxes", "StripOnInput", "StripWrapperBoxes", "StrokeForm", "StructuralImportance", "StructuredArray", "StructuredArrayHeadQ", "StructuredSelection", "StruveH", "StruveL", "Stub", "StudentTDistribution", "Style", "StyleBox", "StyleBoxAutoDelete", "StyleData", "StyleDefinitions", "StyleForm", "StyleHints", "StyleKeyMapping", "StyleMenuListing", "StyleNameDialogSettings", "StyleNames", "StylePrint", "StyleSheetPath", "Subdivide", "Subfactorial", "Subgraph", "SubMinus", "SubPlus", "SubresultantPolynomialRemainders", "SubresultantPolynomials", "Subresultants", "Subscript", "SubscriptBox", "SubscriptBoxOptions", "Subscripted", "Subsequences", "Subset", "SubsetCases", "SubsetCount", "SubsetEqual", "SubsetMap", "SubsetPosition", "SubsetQ", "SubsetReplace", "Subsets", "SubStar", "SubstitutionSystem", "Subsuperscript", "SubsuperscriptBox", "SubsuperscriptBoxOptions", "SubtitleEncoding", "SubtitleTracks", "Subtract", "SubtractFrom", "SubtractSides", "SubValues", "Succeeds", "SucceedsEqual", "SucceedsSlantEqual", "SucceedsTilde", "Success", "SuchThat", "Sum", "SumConvergence", "SummationLayer", "Sunday", "SunPosition", "Sunrise", "Sunset", "SuperDagger", "SuperMinus", "SupernovaData", "SuperPlus", "Superscript", "SuperscriptBox", "SuperscriptBoxOptions", "Superset", "SupersetEqual", "SuperStar", "Surd", "SurdForm", "SurfaceAppearance", "SurfaceArea", "SurfaceColor", "SurfaceData", "SurfaceGraphics", "SurvivalDistribution", "SurvivalFunction", "SurvivalModel", "SurvivalModelFit", "SuspendPacket", "SuzukiDistribution", "SuzukiGroupSuz", "SwatchLegend", "Switch", "Symbol", "SymbolName", "SymletWavelet", "Symmetric", "SymmetricGroup", "SymmetricKey", "SymmetricMatrixQ", "SymmetricPolynomial", "SymmetricReduction", "Symmetrize", "SymmetrizedArray", "SymmetrizedArrayRules", "SymmetrizedDependentComponents", "SymmetrizedIndependentComponents", "SymmetrizedReplacePart", "SynchronousInitialization", "SynchronousUpdating", "Synonyms", "Syntax", "SyntaxForm", "SyntaxInformation", "SyntaxLength", "SyntaxPacket", "SyntaxQ", "SynthesizeMissingValues", "SystemCredential", "SystemCredentialData", "SystemCredentialKey", "SystemCredentialKeys", "SystemCredentialStoreObject", "SystemDialogInput", "SystemException", "SystemGet", "SystemHelpPath", "SystemInformation", "SystemInformationData", "SystemInstall", "SystemModel", "SystemModeler", "SystemModelExamples", "SystemModelLinearize", "SystemModelParametricSimulate", "SystemModelPlot", "SystemModelProgressReporting", "SystemModelReliability", "SystemModels", "SystemModelSimulate", "SystemModelSimulateSensitivity", "SystemModelSimulationData", "SystemOpen", "SystemOptions", "SystemProcessData", "SystemProcesses", "SystemsConnectionsModel", "SystemsModelDelay", "SystemsModelDelayApproximate", "SystemsModelDelete", "SystemsModelDimensions", "SystemsModelExtract", "SystemsModelFeedbackConnect", "SystemsModelLabels", "SystemsModelLinearity", "SystemsModelMerge", "SystemsModelOrder", "SystemsModelParallelConnect", "SystemsModelSeriesConnect", "SystemsModelStateFeedbackConnect", "SystemsModelVectorRelativeOrders", "SystemStub", "SystemTest", "Tab", "TabFilling", "Table", "TableAlignments", "TableDepth", "TableDirections", "TableForm", "TableHeadings", "TableSpacing", "TableView", "TableViewBox", "TableViewBoxBackground", "TableViewBoxItemSize", "TableViewBoxOptions", "TabSpacings", "TabView", "TabViewBox", "TabViewBoxOptions", "TagBox", "TagBoxNote", "TagBoxOptions", "TaggingRules", "TagSet", "TagSetDelayed", "TagStyle", "TagUnset", "Take", "TakeDrop", "TakeLargest", "TakeLargestBy", "TakeList", "TakeSmallest", "TakeSmallestBy", "TakeWhile", "Tally", "Tan", "Tanh", "TargetDevice", "TargetFunctions", "TargetSystem", "TargetUnits", "TaskAbort", "TaskExecute", "TaskObject", "TaskRemove", "TaskResume", "Tasks", "TaskSuspend", "TaskWait", "TautologyQ", "TelegraphProcess", "TemplateApply", "TemplateArgBox", "TemplateBox", "TemplateBoxOptions", "TemplateEvaluate", "TemplateExpression", "TemplateIf", "TemplateObject", "TemplateSequence", "TemplateSlot", "TemplateSlotSequence", "TemplateUnevaluated", "TemplateVerbatim", "TemplateWith", "TemporalData", "TemporalRegularity", "Temporary", "TemporaryVariable", "TensorContract", "TensorDimensions", "TensorExpand", "TensorProduct", "TensorQ", "TensorRank", "TensorReduce", "TensorSymmetry", "TensorTranspose", "TensorWedge", "TestID", "TestReport", "TestReportObject", "TestResultObject", "Tetrahedron", "TetrahedronBox", "TetrahedronBoxOptions", "TeXForm", "TeXSave", "Text", "Text3DBox", "Text3DBoxOptions", "TextAlignment", "TextBand", "TextBoundingBox", "TextBox", "TextCases", "TextCell", "TextClipboardType", "TextContents", "TextData", "TextElement", "TextForm", "TextGrid", "TextJustification", "TextLine", "TextPacket", "TextParagraph", "TextPosition", "TextRecognize", "TextSearch", "TextSearchReport", "TextSentences", "TextString", "TextStructure", "TextStyle", "TextTranslation", "Texture", "TextureCoordinateFunction", "TextureCoordinateScaling", "TextWords", "Therefore", "ThermodynamicData", "ThermometerGauge", "Thick", "Thickness", "Thin", "Thinning", "ThisLink", "ThompsonGroupTh", "Thread", "ThreadingLayer", "ThreeJSymbol", "Threshold", "Through", "Throw", "ThueMorse", "Thumbnail", "Thursday", "Ticks", "TicksStyle", "TideData", "Tilde", "TildeEqual", "TildeFullEqual", "TildeTilde", "TimeConstrained", "TimeConstraint", "TimeDirection", "TimeFormat", "TimeGoal", "TimelinePlot", "TimeObject", "TimeObjectQ", "TimeRemaining", "Times", "TimesBy", "TimeSeries", "TimeSeriesAggregate", "TimeSeriesForecast", "TimeSeriesInsert", "TimeSeriesInvertibility", "TimeSeriesMap", "TimeSeriesMapThread", "TimeSeriesModel", "TimeSeriesModelFit", "TimeSeriesResample", "TimeSeriesRescale", "TimeSeriesShift", "TimeSeriesThread", "TimeSeriesWindow", "TimeUsed", "TimeValue", "TimeWarpingCorrespondence", "TimeWarpingDistance", "TimeZone", "TimeZoneConvert", "TimeZoneOffset", "Timing", "Tiny", "TitleGrouping", "TitsGroupT", "ToBoxes", "ToCharacterCode", "ToColor", "ToContinuousTimeModel", "ToDate", "Today", "ToDiscreteTimeModel", "ToEntity", "ToeplitzMatrix", "ToExpression", "ToFileName", "Together", "Toggle", "ToggleFalse", "Toggler", "TogglerBar", "TogglerBox", "TogglerBoxOptions", "ToHeldExpression", "ToInvertibleTimeSeries", "TokenWords", "Tolerance", "ToLowerCase", "Tomorrow", "ToNumberField", "TooBig", "Tooltip", "TooltipBox", "TooltipBoxOptions", "TooltipDelay", "TooltipStyle", "ToonShading", "Top", "TopHatTransform", "ToPolarCoordinates", "TopologicalSort", "ToRadicals", "ToRules", "ToSphericalCoordinates", "ToString", "Total", "TotalHeight", "TotalLayer", "TotalVariationFilter", "TotalWidth", "TouchPosition", "TouchscreenAutoZoom", "TouchscreenControlPlacement", "ToUpperCase", "Tr", "Trace", "TraceAbove", "TraceAction", "TraceBackward", "TraceDepth", "TraceDialog", "TraceForward", "TraceInternal", "TraceLevel", "TraceOff", "TraceOn", "TraceOriginal", "TracePrint", "TraceScan", "TrackedSymbols", "TrackingFunction", "TracyWidomDistribution", "TradingChart", "TraditionalForm", "TraditionalFunctionNotation", "TraditionalNotation", "TraditionalOrder", "TrainingProgressCheckpointing", "TrainingProgressFunction", "TrainingProgressMeasurements", "TrainingProgressReporting", "TrainingStoppingCriterion", "TrainingUpdateSchedule", "TransferFunctionCancel", "TransferFunctionExpand", "TransferFunctionFactor", "TransferFunctionModel", "TransferFunctionPoles", "TransferFunctionTransform", "TransferFunctionZeros", "TransformationClass", "TransformationFunction", "TransformationFunctions", "TransformationMatrix", "TransformedDistribution", "TransformedField", "TransformedProcess", "TransformedRegion", "TransitionDirection", "TransitionDuration", "TransitionEffect", "TransitiveClosureGraph", "TransitiveReductionGraph", "Translate", "TranslationOptions", "TranslationTransform", "Transliterate", "Transparent", "TransparentColor", "Transpose", "TransposeLayer", "TrapSelection", "TravelDirections", "TravelDirectionsData", "TravelDistance", "TravelDistanceList", "TravelMethod", "TravelTime", "TreeForm", "TreeGraph", "TreeGraphQ", "TreePlot", "TrendStyle", "Triangle", "TriangleCenter", "TriangleConstruct", "TriangleMeasurement", "TriangleWave", "TriangularDistribution", "TriangulateMesh", "Trig", "TrigExpand", "TrigFactor", "TrigFactorList", "Trigger", "TrigReduce", "TrigToExp", "TrimmedMean", "TrimmedVariance", "TropicalStormData", "True", "TrueQ", "TruncatedDistribution", "TruncatedPolyhedron", "TsallisQExponentialDistribution", "TsallisQGaussianDistribution", "TTest", "Tube", "TubeBezierCurveBox", "TubeBezierCurveBoxOptions", "TubeBox", "TubeBoxOptions", "TubeBSplineCurveBox", "TubeBSplineCurveBoxOptions", "Tuesday", "TukeyLambdaDistribution", "TukeyWindow", "TunnelData", "Tuples", "TuranGraph", "TuringMachine", "TuttePolynomial", "TwoWayRule", "Typed", "TypeSpecifier", "UnateQ", "Uncompress", "UnconstrainedParameters", "Undefined", "UnderBar", "Underflow", "Underlined", "Underoverscript", "UnderoverscriptBox", "UnderoverscriptBoxOptions", "Underscript", "UnderscriptBox", "UnderscriptBoxOptions", "UnderseaFeatureData", "UndirectedEdge", "UndirectedGraph", "UndirectedGraphQ", "UndoOptions", "UndoTrackedVariables", "Unequal", "UnequalTo", "Unevaluated", "UniformDistribution", "UniformGraphDistribution", "UniformPolyhedron", "UniformSumDistribution", "Uninstall", "Union", "UnionedEntityClass", "UnionPlus", "Unique", "UnitaryMatrixQ", "UnitBox", "UnitConvert", "UnitDimensions", "Unitize", "UnitRootTest", "UnitSimplify", "UnitStep", "UnitSystem", "UnitTriangle", "UnitVector", "UnitVectorLayer", "UnityDimensions", "UniverseModelData", "UniversityData", "UnixTime", "Unprotect", "UnregisterExternalEvaluator", "UnsameQ", "UnsavedVariables", "Unset", "UnsetShared", "UntrackedVariables", "Up", "UpArrow", "UpArrowBar", "UpArrowDownArrow", "Update", "UpdateDynamicObjects", "UpdateDynamicObjectsSynchronous", "UpdateInterval", "UpdatePacletSites", "UpdateSearchIndex", "UpDownArrow", "UpEquilibrium", "UpperCaseQ", "UpperLeftArrow", "UpperRightArrow", "UpperTriangularize", "UpperTriangularMatrixQ", "Upsample", "UpSet", "UpSetDelayed", "UpTee", "UpTeeArrow", "UpTo", "UpValues", "URL", "URLBuild", "URLDecode", "URLDispatcher", "URLDownload", "URLDownloadSubmit", "URLEncode", "URLExecute", "URLExpand", "URLFetch", "URLFetchAsynchronous", "URLParse", "URLQueryDecode", "URLQueryEncode", "URLRead", "URLResponseTime", "URLSave", "URLSaveAsynchronous", "URLShorten", "URLSubmit", "UseGraphicsRange", "UserDefinedWavelet", "Using", "UsingFrontEnd", "UtilityFunction", "V2Get", "ValenceErrorHandling", "ValidationLength", "ValidationSet", "Value", "ValueBox", "ValueBoxOptions", "ValueDimensions", "ValueForm", "ValuePreprocessingFunction", "ValueQ", "Values", "ValuesData", "Variables", "Variance", "VarianceEquivalenceTest", "VarianceEstimatorFunction", "VarianceGammaDistribution", "VarianceTest", "VectorAngle", "VectorAround", "VectorAspectRatio", "VectorColorFunction", "VectorColorFunctionScaling", "VectorDensityPlot", "VectorGlyphData", "VectorGreater", "VectorGreaterEqual", "VectorLess", "VectorLessEqual", "VectorMarkers", "VectorPlot", "VectorPlot3D", "VectorPoints", "VectorQ", "VectorRange", "Vectors", "VectorScale", "VectorScaling", "VectorSizes", "VectorStyle", "Vee", "Verbatim", "Verbose", "VerboseConvertToPostScriptPacket", "VerificationTest", "VerifyConvergence", "VerifyDerivedKey", "VerifyDigitalSignature", "VerifyFileSignature", "VerifyInterpretation", "VerifySecurityCertificates", "VerifySolutions", "VerifyTestAssumptions", "Version", "VersionedPreferences", "VersionNumber", "VertexAdd", "VertexCapacity", "VertexColors", "VertexComponent", "VertexConnectivity", "VertexContract", "VertexCoordinateRules", "VertexCoordinates", "VertexCorrelationSimilarity", "VertexCosineSimilarity", "VertexCount", "VertexCoverQ", "VertexDataCoordinates", "VertexDegree", "VertexDelete", "VertexDiceSimilarity", "VertexEccentricity", "VertexInComponent", "VertexInDegree", "VertexIndex", "VertexJaccardSimilarity", "VertexLabeling", "VertexLabels", "VertexLabelStyle", "VertexList", "VertexNormals", "VertexOutComponent", "VertexOutDegree", "VertexQ", "VertexRenderingFunction", "VertexReplace", "VertexShape", "VertexShapeFunction", "VertexSize", "VertexStyle", "VertexTextureCoordinates", "VertexWeight", "VertexWeightedGraphQ", "Vertical", "VerticalBar", "VerticalForm", "VerticalGauge", "VerticalSeparator", "VerticalSlider", "VerticalTilde", "Video", "VideoEncoding", "VideoExtractFrames", "VideoFrameList", "VideoFrameMap", "VideoPause", "VideoPlay", "VideoQ", "VideoStop", "VideoStream", "VideoStreams", "VideoTimeSeries", "VideoTracks", "VideoTrim", "ViewAngle", "ViewCenter", "ViewMatrix", "ViewPoint", "ViewPointSelectorSettings", "ViewPort", "ViewProjection", "ViewRange", "ViewVector", "ViewVertical", "VirtualGroupData", "Visible", "VisibleCell", "VoiceStyleData", "VoigtDistribution", "VolcanoData", "Volume", "VonMisesDistribution", "VoronoiMesh", "WaitAll", "WaitAsynchronousTask", "WaitNext", "WaitUntil", "WakebyDistribution", "WalleniusHypergeometricDistribution", "WaringYuleDistribution", "WarpingCorrespondence", "WarpingDistance", "WatershedComponents", "WatsonUSquareTest", "WattsStrogatzGraphDistribution", "WaveletBestBasis", "WaveletFilterCoefficients", "WaveletImagePlot", "WaveletListPlot", "WaveletMapIndexed", "WaveletMatrixPlot", "WaveletPhi", "WaveletPsi", "WaveletScale", "WaveletScalogram", "WaveletThreshold", "WeaklyConnectedComponents", "WeaklyConnectedGraphComponents", "WeaklyConnectedGraphQ", "WeakStationarity", "WeatherData", "WeatherForecastData", "WebAudioSearch", "WebElementObject", "WeberE", "WebExecute", "WebImage", "WebImageSearch", "WebSearch", "WebSessionObject", "WebSessions", "WebWindowObject", "Wedge", "Wednesday", "WeibullDistribution", "WeierstrassE1", "WeierstrassE2", "WeierstrassE3", "WeierstrassEta1", "WeierstrassEta2", "WeierstrassEta3", "WeierstrassHalfPeriods", "WeierstrassHalfPeriodW1", "WeierstrassHalfPeriodW2", "WeierstrassHalfPeriodW3", "WeierstrassInvariantG2", "WeierstrassInvariantG3", "WeierstrassInvariants", "WeierstrassP", "WeierstrassPPrime", "WeierstrassSigma", "WeierstrassZeta", "WeightedAdjacencyGraph", "WeightedAdjacencyMatrix", "WeightedData", "WeightedGraphQ", "Weights", "WelchWindow", "WheelGraph", "WhenEvent", "Which", "While", "White", "WhiteNoiseProcess", "WhitePoint", "Whitespace", "WhitespaceCharacter", "WhittakerM", "WhittakerW", "WienerFilter", "WienerProcess", "WignerD", "WignerSemicircleDistribution", "WikidataData", "WikidataSearch", "WikipediaData", "WikipediaSearch", "WilksW", "WilksWTest", "WindDirectionData", "WindingCount", "WindingPolygon", "WindowClickSelect", "WindowElements", "WindowFloating", "WindowFrame", "WindowFrameElements", "WindowMargins", "WindowMovable", "WindowOpacity", "WindowPersistentStyles", "WindowSelected", "WindowSize", "WindowStatusArea", "WindowTitle", "WindowToolbars", "WindowWidth", "WindSpeedData", "WindVectorData", "WinsorizedMean", "WinsorizedVariance", "WishartMatrixDistribution", "With", "WolframAlpha", "WolframAlphaDate", "WolframAlphaQuantity", "WolframAlphaResult", "WolframLanguageData", "Word", "WordBoundary", "WordCharacter", "WordCloud", "WordCount", "WordCounts", "WordData", "WordDefinition", "WordFrequency", "WordFrequencyData", "WordList", "WordOrientation", "WordSearch", "WordSelectionFunction", "WordSeparators", "WordSpacings", "WordStem", "WordTranslation", "WorkingPrecision", "WrapAround", "Write", "WriteLine", "WriteString", "Wronskian", "XMLElement", "XMLObject", "XMLTemplate", "Xnor", "Xor", "XYZColor", "Yellow", "Yesterday", "YuleDissimilarity", "ZernikeR", "ZeroSymmetric", "ZeroTest", "ZeroWidthTimes", "Zeta", "ZetaZero", "ZIPCodeData", "ZipfDistribution", "ZoomCenter", "ZoomFactor", "ZTest", "ZTransform", "$Aborted", "$ActivationGroupID", "$ActivationKey", "$ActivationUserRegistered", "$AddOnsDirectory", "$AllowDataUpdates", "$AllowExternalChannelFunctions", "$AllowInternet", "$AssertFunction", "$Assumptions", "$AsynchronousTask", "$AudioDecoders", "$AudioEncoders", "$AudioInputDevices", "$AudioOutputDevices", "$BaseDirectory", "$BasePacletsDirectory", "$BatchInput", "$BatchOutput", "$BlockchainBase", "$BoxForms", "$ByteOrdering", "$CacheBaseDirectory", "$Canceled", "$ChannelBase", "$CharacterEncoding", "$CharacterEncodings", "$CloudAccountName", "$CloudBase", "$CloudConnected", "$CloudConnection", "$CloudCreditsAvailable", "$CloudEvaluation", "$CloudExpressionBase", "$CloudObjectNameFormat", "$CloudObjectURLType", "$CloudRootDirectory", "$CloudSymbolBase", "$CloudUserID", "$CloudUserUUID", "$CloudVersion", "$CloudVersionNumber", "$CloudWolframEngineVersionNumber", "$CommandLine", "$CompilationTarget", "$ConditionHold", "$ConfiguredKernels", "$Context", "$ContextPath", "$ControlActiveSetting", "$Cookies", "$CookieStore", "$CreationDate", "$CurrentLink", "$CurrentTask", "$CurrentWebSession", "$DataStructures", "$DateStringFormat", "$DefaultAudioInputDevice", "$DefaultAudioOutputDevice", "$DefaultFont", "$DefaultFrontEnd", "$DefaultImagingDevice", "$DefaultLocalBase", "$DefaultMailbox", "$DefaultNetworkInterface", "$DefaultPath", "$DefaultProxyRules", "$DefaultSystemCredentialStore", "$Display", "$DisplayFunction", "$DistributedContexts", "$DynamicEvaluation", "$Echo", "$EmbedCodeEnvironments", "$EmbeddableServices", "$EntityStores", "$Epilog", "$EvaluationCloudBase", "$EvaluationCloudObject", "$EvaluationEnvironment", "$ExportFormats", "$ExternalIdentifierTypes", "$ExternalStorageBase", "$Failed", "$FinancialDataSource", "$FontFamilies", "$FormatType", "$FrontEnd", "$FrontEndSession", "$GeoEntityTypes", "$GeoLocation", "$GeoLocationCity", "$GeoLocationCountry", "$GeoLocationPrecision", "$GeoLocationSource", "$HistoryLength", "$HomeDirectory", "$HTMLExportRules", "$HTTPCookies", "$HTTPRequest", "$IgnoreEOF", "$ImageFormattingWidth", "$ImageResolution", "$ImagingDevice", "$ImagingDevices", "$ImportFormats", "$IncomingMailSettings", "$InitialDirectory", "$Initialization", "$InitializationContexts", "$Input", "$InputFileName", "$InputStreamMethods", "$Inspector", "$InstallationDate", "$InstallationDirectory", "$InterfaceEnvironment", "$InterpreterTypes", "$IterationLimit", "$KernelCount", "$KernelID", "$Language", "$LaunchDirectory", "$LibraryPath", "$LicenseExpirationDate", "$LicenseID", "$LicenseProcesses", "$LicenseServer", "$LicenseSubprocesses", "$LicenseType", "$Line", "$Linked", "$LinkSupported", "$LoadedFiles", "$LocalBase", "$LocalSymbolBase", "$MachineAddresses", "$MachineDomain", "$MachineDomains", "$MachineEpsilon", "$MachineID", "$MachineName", "$MachinePrecision", "$MachineType", "$MaxExtraPrecision", "$MaxLicenseProcesses", "$MaxLicenseSubprocesses", "$MaxMachineNumber", "$MaxNumber", "$MaxPiecewiseCases", "$MaxPrecision", "$MaxRootDegree", "$MessageGroups", "$MessageList", "$MessagePrePrint", "$Messages", "$MinMachineNumber", "$MinNumber", "$MinorReleaseNumber", "$MinPrecision", "$MobilePhone", "$ModuleNumber", "$NetworkConnected", "$NetworkInterfaces", "$NetworkLicense", "$NewMessage", "$NewSymbol", "$NotebookInlineStorageLimit", "$Notebooks", "$NoValue", "$NumberMarks", "$Off", "$OperatingSystem", "$Output", "$OutputForms", "$OutputSizeLimit", "$OutputStreamMethods", "$Packages", "$ParentLink", "$ParentProcessID", "$PasswordFile", "$PatchLevelID", "$Path", "$PathnameSeparator", "$PerformanceGoal", "$Permissions", "$PermissionsGroupBase", "$PersistenceBase", "$PersistencePath", "$PipeSupported", "$PlotTheme", "$Post", "$Pre", "$PreferencesDirectory", "$PreInitialization", "$PrePrint", "$PreRead", "$PrintForms", "$PrintLiteral", "$Printout3DPreviewer", "$ProcessID", "$ProcessorCount", "$ProcessorType", "$ProductInformation", "$ProgramName", "$PublisherID", "$RandomState", "$RecursionLimit", "$RegisteredDeviceClasses", "$RegisteredUserName", "$ReleaseNumber", "$RequesterAddress", "$RequesterWolframID", "$RequesterWolframUUID", "$RootDirectory", "$ScheduledTask", "$ScriptCommandLine", "$ScriptInputString", "$SecuredAuthenticationKeyTokens", "$ServiceCreditsAvailable", "$Services", "$SessionID", "$SetParentLink", "$SharedFunctions", "$SharedVariables", "$SoundDisplay", "$SoundDisplayFunction", "$SourceLink", "$SSHAuthentication", "$SubtitleDecoders", "$SubtitleEncoders", "$SummaryBoxDataSizeLimit", "$SuppressInputFormHeads", "$SynchronousEvaluation", "$SyntaxHandler", "$System", "$SystemCharacterEncoding", "$SystemCredentialStore", "$SystemID", "$SystemMemory", "$SystemShell", "$SystemTimeZone", "$SystemWordLength", "$TemplatePath", "$TemporaryDirectory", "$TemporaryPrefix", "$TestFileName", "$TextStyle", "$TimedOut", "$TimeUnit", "$TimeZone", "$TimeZoneEntity", "$TopDirectory", "$TraceOff", "$TraceOn", "$TracePattern", "$TracePostAction", "$TracePreAction", "$UnitSystem", "$Urgent", "$UserAddOnsDirectory", "$UserAgentLanguages", "$UserAgentMachine", "$UserAgentName", "$UserAgentOperatingSystem", "$UserAgentString", "$UserAgentVersion", "$UserBaseDirectory", "$UserBasePacletsDirectory", "$UserDocumentsDirectory", "$Username", "$UserName", "$UserURLBase", "$Version", "$VersionNumber", "$VideoDecoders", "$VideoEncoders", "$VoiceStyles", "$WolframDocumentsDirectory", "$WolframID", "$WolframUUID"];
					e.exports = function(e) {
							const n = e.regex
								, i = n.either(n.concat(/([2-9]|[1-2]\d|[3][0-5])\^\^/, /(\w*\.\w+|\w+\.\w*|\w+)/), /(\d*\.\d+|\d+\.\d*|\d+)/)
								, r = n.either(/``[+-]?(\d*\.\d+|\d+\.\d*|\d+)/, /`([+-]?(\d*\.\d+|\d+\.\d*|\d+))?/)
								, o = {
									className: "number",
									relevance: 0,
									begin: n.concat(i, n.optional(r), n.optional(/\*\^[+-]?\d+/))
							}
								, s = /[a-zA-Z$][a-zA-Z0-9$]*/
								, a = new Set(t)
								, l = {
									variants: [{
											className: "builtin-symbol",
											begin: s,
											"on:begin": (e,t)=>{
													a.has(e[0]) || t.ignoreMatch()
											}
									}, {
											className: "symbol",
											relevance: 0,
											begin: s
									}]
							}
								, c = {
									className: "message-name",
									relevance: 0,
									begin: n.concat("::", s)
							};
							return {
									name: "Mathematica",
									aliases: ["mma", "wl"],
									classNameAliases: {
											brace: "punctuation",
											pattern: "type",
											slot: "type",
											symbol: "variable",
											"named-character": "variable",
											"builtin-symbol": "built_in",
											"message-name": "string"
									},
									contains: [e.COMMENT(/\(\*/, /\*\)/, {
											contains: ["self"]
									}), {
											className: "pattern",
											relevance: 0,
											begin: /([a-zA-Z$][a-zA-Z0-9$]*)?_+([a-zA-Z$][a-zA-Z0-9$]*)?/
									}, {
											className: "slot",
											relevance: 0,
											begin: /#[a-zA-Z$][a-zA-Z0-9$]*|#+[0-9]?/
									}, c, l, {
											className: "named-character",
											begin: /\\\[[$a-zA-Z][$a-zA-Z0-9]+\]/
									}, e.QUOTE_STRING_MODE, o, {
											className: "operator",
											relevance: 0,
											begin: /[+\-*/,;.:@~=><&|_`'^?!%]+/
									}, {
											className: "brace",
											relevance: 0,
											begin: /[[\](){}]/
									}]
							}
					}
			}
			,
			259: e=>{
					e.exports = function(e) {
							const t = "('|\\.')+"
								, n = {
									relevance: 0,
									contains: [{
											begin: t
									}]
							};
							return {
									name: "Matlab",
									keywords: {
											keyword: "arguments break case catch classdef continue else elseif end enumeration events for function global if methods otherwise parfor persistent properties return spmd switch try while",
											built_in: "sin sind sinh asin asind asinh cos cosd cosh acos acosd acosh tan tand tanh atan atand atan2 atanh sec secd sech asec asecd asech csc cscd csch acsc acscd acsch cot cotd coth acot acotd acoth hypot exp expm1 log log1p log10 log2 pow2 realpow reallog realsqrt sqrt nthroot nextpow2 abs angle complex conj imag real unwrap isreal cplxpair fix floor ceil round mod rem sign airy besselj bessely besselh besseli besselk beta betainc betaln ellipj ellipke erf erfc erfcx erfinv expint gamma gammainc gammaln psi legendre cross dot factor isprime primes gcd lcm rat rats perms nchoosek factorial cart2sph cart2pol pol2cart sph2cart hsv2rgb rgb2hsv zeros ones eye repmat rand randn linspace logspace freqspace meshgrid accumarray size length ndims numel disp isempty isequal isequalwithequalnans cat reshape diag blkdiag tril triu fliplr flipud flipdim rot90 find sub2ind ind2sub bsxfun ndgrid permute ipermute shiftdim circshift squeeze isscalar isvector ans eps realmax realmin pi i|0 inf nan isnan isinf isfinite j|0 why compan gallery hadamard hankel hilb invhilb magic pascal rosser toeplitz vander wilkinson max min nanmax nanmin mean nanmean type table readtable writetable sortrows sort figure plot plot3 scatter scatter3 cellfun legend intersect ismember procrustes hold num2cell "
									},
									illegal: '(//|"|#|/\\*|\\s+/\\w+)',
									contains: [{
											className: "function",
											beginKeywords: "function",
											end: "$",
											contains: [e.UNDERSCORE_TITLE_MODE, {
													className: "params",
													variants: [{
															begin: "\\(",
															end: "\\)"
													}, {
															begin: "\\[",
															end: "\\]"
													}]
											}]
									}, {
											className: "built_in",
											begin: /true|false/,
											relevance: 0,
											starts: n
									}, {
											begin: "[a-zA-Z][a-zA-Z_0-9]*" + t,
											relevance: 0
									}, {
											className: "number",
											begin: e.C_NUMBER_RE,
											relevance: 0,
											starts: n
									}, {
											className: "string",
											begin: "'",
											end: "'",
											contains: [{
													begin: "''"
											}]
									}, {
											begin: /\]|\}|\)/,
											relevance: 0,
											starts: n
									}, {
											className: "string",
											begin: '"',
											end: '"',
											contains: [{
													begin: '""'
											}],
											starts: n
									}, e.COMMENT("^\\s*%\\{\\s*$", "^\\s*%\\}\\s*$"), e.COMMENT("%", "$")]
							}
					}
			}
			,
			6664: e=>{
					e.exports = function(e) {
							return {
									name: "Maxima",
									keywords: {
											$pattern: "[A-Za-z_%][0-9A-Za-z_%]*",
											keyword: "if then else elseif for thru do while unless step in and or not",
											literal: "true false unknown inf minf ind und %e %i %pi %phi %gamma",
											built_in: " abasep abs absint absolute_real_time acos acosh acot acoth acsc acsch activate addcol add_edge add_edges addmatrices addrow add_vertex add_vertices adjacency_matrix adjoin adjoint af agd airy airy_ai airy_bi airy_dai airy_dbi algsys alg_type alias allroots alphacharp alphanumericp amortization %and annuity_fv annuity_pv antid antidiff AntiDifference append appendfile apply apply1 apply2 applyb1 apropos args arit_amortization arithmetic arithsum array arrayapply arrayinfo arraymake arraysetapply ascii asec asech asin asinh askinteger asksign assoc assoc_legendre_p assoc_legendre_q assume assume_external_byte_order asympa at atan atan2 atanh atensimp atom atvalue augcoefmatrix augmented_lagrangian_method av average_degree backtrace bars barsplot barsplot_description base64 base64_decode bashindices batch batchload bc2 bdvac belln benefit_cost bern bernpoly bernstein_approx bernstein_expand bernstein_poly bessel bessel_i bessel_j bessel_k bessel_simplify bessel_y beta beta_incomplete beta_incomplete_generalized beta_incomplete_regularized bezout bfallroots bffac bf_find_root bf_fmin_cobyla bfhzeta bfloat bfloatp bfpsi bfpsi0 bfzeta biconnected_components bimetric binomial bipartition block blockmatrixp bode_gain bode_phase bothcoef box boxplot boxplot_description break bug_report build_info|10 buildq build_sample burn cabs canform canten cardinality carg cartan cartesian_product catch cauchy_matrix cbffac cdf_bernoulli cdf_beta cdf_binomial cdf_cauchy cdf_chi2 cdf_continuous_uniform cdf_discrete_uniform cdf_exp cdf_f cdf_gamma cdf_general_finite_discrete cdf_geometric cdf_gumbel cdf_hypergeometric cdf_laplace cdf_logistic cdf_lognormal cdf_negative_binomial cdf_noncentral_chi2 cdf_noncentral_student_t cdf_normal cdf_pareto cdf_poisson cdf_rank_sum cdf_rayleigh cdf_signed_rank cdf_student_t cdf_weibull cdisplay ceiling central_moment cequal cequalignore cf cfdisrep cfexpand cgeodesic cgreaterp cgreaterpignore changename changevar chaosgame charat charfun charfun2 charlist charp charpoly chdir chebyshev_t chebyshev_u checkdiv check_overlaps chinese cholesky christof chromatic_index chromatic_number cint circulant_graph clear_edge_weight clear_rules clear_vertex_label clebsch_gordan clebsch_graph clessp clesspignore close closefile cmetric coeff coefmatrix cograd col collapse collectterms columnop columnspace columnswap columnvector combination combine comp2pui compare compfile compile compile_file complement_graph complete_bipartite_graph complete_graph complex_number_p components compose_functions concan concat conjugate conmetderiv connected_components connect_vertices cons constant constantp constituent constvalue cont2part content continuous_freq contortion contour_plot contract contract_edge contragrad contrib_ode convert coord copy copy_file copy_graph copylist copymatrix cor cos cosh cot coth cov cov1 covdiff covect covers crc24sum create_graph create_list csc csch csetup cspline ctaylor ct_coordsys ctransform ctranspose cube_graph cuboctahedron_graph cunlisp cv cycle_digraph cycle_graph cylindrical days360 dblint deactivate declare declare_constvalue declare_dimensions declare_fundamental_dimensions declare_fundamental_units declare_qty declare_translated declare_unit_conversion declare_units declare_weights decsym defcon define define_alt_display define_variable defint defmatch defrule defstruct deftaylor degree_sequence del delete deleten delta demo demoivre denom depends derivdegree derivlist describe desolve determinant dfloat dgauss_a dgauss_b dgeev dgemm dgeqrf dgesv dgesvd diag diagmatrix diag_matrix diagmatrixp diameter diff digitcharp dimacs_export dimacs_import dimension dimensionless dimensions dimensions_as_list direct directory discrete_freq disjoin disjointp disolate disp dispcon dispform dispfun dispJordan display disprule dispterms distrib divide divisors divsum dkummer_m dkummer_u dlange dodecahedron_graph dotproduct dotsimp dpart draw draw2d draw3d drawdf draw_file draw_graph dscalar echelon edge_coloring edge_connectivity edges eigens_by_jacobi eigenvalues eigenvectors eighth einstein eivals eivects elapsed_real_time elapsed_run_time ele2comp ele2polynome ele2pui elem elementp elevation_grid elim elim_allbut eliminate eliminate_using ellipse elliptic_e elliptic_ec elliptic_eu elliptic_f elliptic_kc elliptic_pi ematrix empty_graph emptyp endcons entermatrix entertensor entier equal equalp equiv_classes erf erfc erf_generalized erfi errcatch error errormsg errors euler ev eval_string evenp every evolution evolution2d evundiff example exp expand expandwrt expandwrt_factored expint expintegral_chi expintegral_ci expintegral_e expintegral_e1 expintegral_ei expintegral_e_simplify expintegral_li expintegral_shi expintegral_si explicit explose exponentialize express expt exsec extdiff extract_linear_equations extremal_subset ezgcd %f f90 facsum factcomb factor factorfacsum factorial factorout factorsum facts fast_central_elements fast_linsolve fasttimes featurep fernfale fft fib fibtophi fifth filename_merge file_search file_type fillarray findde find_root find_root_abs find_root_error find_root_rel first fix flatten flength float floatnump floor flower_snark flush flush1deriv flushd flushnd flush_output fmin_cobyla forget fortran fourcos fourexpand fourier fourier_elim fourint fourintcos fourintsin foursimp foursin fourth fposition frame_bracket freeof freshline fresnel_c fresnel_s from_adjacency_matrix frucht_graph full_listify fullmap fullmapl fullratsimp fullratsubst fullsetify funcsolve fundamental_dimensions fundamental_units fundef funmake funp fv g0 g1 gamma gamma_greek gamma_incomplete gamma_incomplete_generalized gamma_incomplete_regularized gauss gauss_a gauss_b gaussprob gcd gcdex gcdivide gcfac gcfactor gd generalized_lambert_w genfact gen_laguerre genmatrix gensym geo_amortization geo_annuity_fv geo_annuity_pv geomap geometric geometric_mean geosum get getcurrentdirectory get_edge_weight getenv get_lu_factors get_output_stream_string get_pixel get_plot_option get_tex_environment get_tex_environment_default get_vertex_label gfactor gfactorsum ggf girth global_variances gn gnuplot_close gnuplot_replot gnuplot_reset gnuplot_restart gnuplot_start go Gosper GosperSum gr2d gr3d gradef gramschmidt graph6_decode graph6_encode graph6_export graph6_import graph_center graph_charpoly graph_eigenvalues graph_flow graph_order graph_periphery graph_product graph_size graph_union great_rhombicosidodecahedron_graph great_rhombicuboctahedron_graph grid_graph grind grobner_basis grotzch_graph hamilton_cycle hamilton_path hankel hankel_1 hankel_2 harmonic harmonic_mean hav heawood_graph hermite hessian hgfred hilbertmap hilbert_matrix hipow histogram histogram_description hodge horner hypergeometric i0 i1 %ibes ic1 ic2 ic_convert ichr1 ichr2 icosahedron_graph icosidodecahedron_graph icurvature ident identfor identity idiff idim idummy ieqn %if ifactors iframes ifs igcdex igeodesic_coords ilt image imagpart imetric implicit implicit_derivative implicit_plot indexed_tensor indices induced_subgraph inferencep inference_result infix info_display init_atensor init_ctensor in_neighbors innerproduct inpart inprod inrt integerp integer_partitions integrate intersect intersection intervalp intopois intosum invariant1 invariant2 inverse_fft inverse_jacobi_cd inverse_jacobi_cn inverse_jacobi_cs inverse_jacobi_dc inverse_jacobi_dn inverse_jacobi_ds inverse_jacobi_nc inverse_jacobi_nd inverse_jacobi_ns inverse_jacobi_sc inverse_jacobi_sd inverse_jacobi_sn invert invert_by_adjoint invert_by_lu inv_mod irr is is_biconnected is_bipartite is_connected is_digraph is_edge_in_graph is_graph is_graph_or_digraph ishow is_isomorphic isolate isomorphism is_planar isqrt isreal_p is_sconnected is_tree is_vertex_in_graph items_inference %j j0 j1 jacobi jacobian jacobi_cd jacobi_cn jacobi_cs jacobi_dc jacobi_dn jacobi_ds jacobi_nc jacobi_nd jacobi_ns jacobi_p jacobi_sc jacobi_sd jacobi_sn JF jn join jordan julia julia_set julia_sin %k kdels kdelta kill killcontext kostka kron_delta kronecker_product kummer_m kummer_u kurtosis kurtosis_bernoulli kurtosis_beta kurtosis_binomial kurtosis_chi2 kurtosis_continuous_uniform kurtosis_discrete_uniform kurtosis_exp kurtosis_f kurtosis_gamma kurtosis_general_finite_discrete kurtosis_geometric kurtosis_gumbel kurtosis_hypergeometric kurtosis_laplace kurtosis_logistic kurtosis_lognormal kurtosis_negative_binomial kurtosis_noncentral_chi2 kurtosis_noncentral_student_t kurtosis_normal kurtosis_pareto kurtosis_poisson kurtosis_rayleigh kurtosis_student_t kurtosis_weibull label labels lagrange laguerre lambda lambert_w laplace laplacian_matrix last lbfgs lc2kdt lcharp lc_l lcm lc_u ldefint ldisp ldisplay legendre_p legendre_q leinstein length let letrules letsimp levi_civita lfreeof lgtreillis lhs li liediff limit Lindstedt linear linearinterpol linear_program linear_regression line_graph linsolve listarray list_correlations listify list_matrix_entries list_nc_monomials listoftens listofvars listp lmax lmin load loadfile local locate_matrix_entry log logcontract log_gamma lopow lorentz_gauge lowercasep lpart lratsubst lreduce lriemann lsquares_estimates lsquares_estimates_approximate lsquares_estimates_exact lsquares_mse lsquares_residual_mse lsquares_residuals lsum ltreillis lu_backsub lucas lu_factor %m macroexpand macroexpand1 make_array makebox makefact makegamma make_graph make_level_picture makelist makeOrders make_poly_continent make_poly_country make_polygon make_random_state make_rgb_picture makeset make_string_input_stream make_string_output_stream make_transform mandelbrot mandelbrot_set map mapatom maplist matchdeclare matchfix mat_cond mat_fullunblocker mat_function mathml_display mat_norm matrix matrixmap matrixp matrix_size mattrace mat_trace mat_unblocker max max_clique max_degree max_flow maximize_lp max_independent_set max_matching maybe md5sum mean mean_bernoulli mean_beta mean_binomial mean_chi2 mean_continuous_uniform mean_deviation mean_discrete_uniform mean_exp mean_f mean_gamma mean_general_finite_discrete mean_geometric mean_gumbel mean_hypergeometric mean_laplace mean_logistic mean_lognormal mean_negative_binomial mean_noncentral_chi2 mean_noncentral_student_t mean_normal mean_pareto mean_poisson mean_rayleigh mean_student_t mean_weibull median median_deviation member mesh metricexpandall mgf1_sha1 min min_degree min_edge_cut minfactorial minimalPoly minimize_lp minimum_spanning_tree minor minpack_lsquares minpack_solve min_vertex_cover min_vertex_cut mkdir mnewton mod mode_declare mode_identity ModeMatrix moebius mon2schur mono monomial_dimensions multibernstein_poly multi_display_for_texinfo multi_elem multinomial multinomial_coeff multi_orbit multiplot_mode multi_pui multsym multthru mycielski_graph nary natural_unit nc_degree ncexpt ncharpoly negative_picture neighbors new newcontext newdet new_graph newline newton new_variable next_prime nicedummies niceindices ninth nofix nonarray noncentral_moment nonmetricity nonnegintegerp nonscalarp nonzeroandfreeof notequal nounify nptetrad npv nroots nterms ntermst nthroot nullity nullspace num numbered_boundaries numberp number_to_octets num_distinct_partitions numerval numfactor num_partitions nusum nzeta nzetai nzetar octets_to_number octets_to_oid odd_girth oddp ode2 ode_check odelin oid_to_octets op opena opena_binary openr openr_binary openw openw_binary operatorp opsubst optimize %or orbit orbits ordergreat ordergreatp orderless orderlessp orthogonal_complement orthopoly_recur orthopoly_weight outermap out_neighbors outofpois pade parabolic_cylinder_d parametric parametric_surface parg parGosper parse_string parse_timedate part part2cont partfrac partition partition_set partpol path_digraph path_graph pathname_directory pathname_name pathname_type pdf_bernoulli pdf_beta pdf_binomial pdf_cauchy pdf_chi2 pdf_continuous_uniform pdf_discrete_uniform pdf_exp pdf_f pdf_gamma pdf_general_finite_discrete pdf_geometric pdf_gumbel pdf_hypergeometric pdf_laplace pdf_logistic pdf_lognormal pdf_negative_binomial pdf_noncentral_chi2 pdf_noncentral_student_t pdf_normal pdf_pareto pdf_poisson pdf_rank_sum pdf_rayleigh pdf_signed_rank pdf_student_t pdf_weibull pearson_skewness permanent permut permutation permutations petersen_graph petrov pickapart picture_equalp picturep piechart piechart_description planar_embedding playback plog plot2d plot3d plotdf ploteq plsquares pochhammer points poisdiff poisexpt poisint poismap poisplus poissimp poissubst poistimes poistrim polar polarform polartorect polar_to_xy poly_add poly_buchberger poly_buchberger_criterion poly_colon_ideal poly_content polydecomp poly_depends_p poly_elimination_ideal poly_exact_divide poly_expand poly_expt poly_gcd polygon poly_grobner poly_grobner_equal poly_grobner_member poly_grobner_subsetp poly_ideal_intersection poly_ideal_polysaturation poly_ideal_polysaturation1 poly_ideal_saturation poly_ideal_saturation1 poly_lcm poly_minimization polymod poly_multiply polynome2ele polynomialp poly_normal_form poly_normalize poly_normalize_list poly_polysaturation_extension poly_primitive_part poly_pseudo_divide poly_reduced_grobner poly_reduction poly_saturation_extension poly_s_polynomial poly_subtract polytocompanion pop postfix potential power_mod powerseries powerset prefix prev_prime primep primes principal_components print printf printfile print_graph printpois printprops prodrac product properties propvars psi psubst ptriangularize pui pui2comp pui2ele pui2polynome pui_direct puireduc push put pv qput qrange qty quad_control quad_qag quad_qagi quad_qagp quad_qags quad_qawc quad_qawf quad_qawo quad_qaws quadrilateral quantile quantile_bernoulli quantile_beta quantile_binomial quantile_cauchy quantile_chi2 quantile_continuous_uniform quantile_discrete_uniform quantile_exp quantile_f quantile_gamma quantile_general_finite_discrete quantile_geometric quantile_gumbel quantile_hypergeometric quantile_laplace quantile_logistic quantile_lognormal quantile_negative_binomial quantile_noncentral_chi2 quantile_noncentral_student_t quantile_normal quantile_pareto quantile_poisson quantile_rayleigh quantile_student_t quantile_weibull quartile_skewness quit qunit quotient racah_v racah_w radcan radius random random_bernoulli random_beta random_binomial random_bipartite_graph random_cauchy random_chi2 random_continuous_uniform random_digraph random_discrete_uniform random_exp random_f random_gamma random_general_finite_discrete random_geometric random_graph random_graph1 random_gumbel random_hypergeometric random_laplace random_logistic random_lognormal random_negative_binomial random_network random_noncentral_chi2 random_noncentral_student_t random_normal random_pareto random_permutation random_poisson random_rayleigh random_regular_graph random_student_t random_tournament random_tree random_weibull range rank rat ratcoef ratdenom ratdiff ratdisrep ratexpand ratinterpol rational rationalize ratnumer ratnump ratp ratsimp ratsubst ratvars ratweight read read_array read_binary_array read_binary_list read_binary_matrix readbyte readchar read_hashed_array readline read_list read_matrix read_nested_list readonly read_xpm real_imagpart_to_conjugate realpart realroots rearray rectangle rectform rectform_log_if_constant recttopolar rediff reduce_consts reduce_order region region_boundaries region_boundaries_plus rem remainder remarray rembox remcomps remcon remcoord remfun remfunction remlet remove remove_constvalue remove_dimensions remove_edge remove_fundamental_dimensions remove_fundamental_units remove_plot_option remove_vertex rempart remrule remsym remvalue rename rename_file reset reset_displays residue resolvante resolvante_alternee1 resolvante_bipartite resolvante_diedrale resolvante_klein resolvante_klein3 resolvante_produit_sym resolvante_unitaire resolvante_vierer rest resultant return reveal reverse revert revert2 rgb2level rhs ricci riemann rinvariant risch rk rmdir rncombine romberg room rootscontract round row rowop rowswap rreduce run_testsuite %s save saving scalarp scaled_bessel_i scaled_bessel_i0 scaled_bessel_i1 scalefactors scanmap scatterplot scatterplot_description scene schur2comp sconcat scopy scsimp scurvature sdowncase sec sech second sequal sequalignore set_alt_display setdifference set_draw_defaults set_edge_weight setelmx setequalp setify setp set_partitions set_plot_option set_prompt set_random_state set_tex_environment set_tex_environment_default setunits setup_autoload set_up_dot_simplifications set_vertex_label seventh sexplode sf sha1sum sha256sum shortest_path shortest_weighted_path show showcomps showratvars sierpinskiale sierpinskimap sign signum similaritytransform simp_inequality simplify_sum simplode simpmetderiv simtran sin sinh sinsert sinvertcase sixth skewness skewness_bernoulli skewness_beta skewness_binomial skewness_chi2 skewness_continuous_uniform skewness_discrete_uniform skewness_exp skewness_f skewness_gamma skewness_general_finite_discrete skewness_geometric skewness_gumbel skewness_hypergeometric skewness_laplace skewness_logistic skewness_lognormal skewness_negative_binomial skewness_noncentral_chi2 skewness_noncentral_student_t skewness_normal skewness_pareto skewness_poisson skewness_rayleigh skewness_student_t skewness_weibull slength smake small_rhombicosidodecahedron_graph small_rhombicuboctahedron_graph smax smin smismatch snowmap snub_cube_graph snub_dodecahedron_graph solve solve_rec solve_rec_rat some somrac sort sparse6_decode sparse6_encode sparse6_export sparse6_import specint spherical spherical_bessel_j spherical_bessel_y spherical_hankel1 spherical_hankel2 spherical_harmonic spherical_to_xyz splice split sposition sprint sqfr sqrt sqrtdenest sremove sremovefirst sreverse ssearch ssort sstatus ssubst ssubstfirst staircase standardize standardize_inverse_trig starplot starplot_description status std std1 std_bernoulli std_beta std_binomial std_chi2 std_continuous_uniform std_discrete_uniform std_exp std_f std_gamma std_general_finite_discrete std_geometric std_gumbel std_hypergeometric std_laplace std_logistic std_lognormal std_negative_binomial std_noncentral_chi2 std_noncentral_student_t std_normal std_pareto std_poisson std_rayleigh std_student_t std_weibull stemplot stirling stirling1 stirling2 strim striml strimr string stringout stringp strong_components struve_h struve_l sublis sublist sublist_indices submatrix subsample subset subsetp subst substinpart subst_parallel substpart substring subvar subvarp sum sumcontract summand_to_rec supcase supcontext symbolp symmdifference symmetricp system take_channel take_inference tan tanh taylor taylorinfo taylorp taylor_simplifier taytorat tcl_output tcontract tellrat tellsimp tellsimpafter tentex tenth test_mean test_means_difference test_normality test_proportion test_proportions_difference test_rank_sum test_sign test_signed_rank test_variance test_variance_ratio tex tex1 tex_display texput %th third throw time timedate timer timer_info tldefint tlimit todd_coxeter toeplitz tokens to_lisp topological_sort to_poly to_poly_solve totaldisrep totalfourier totient tpartpol trace tracematrix trace_options transform_sample translate translate_file transpose treefale tree_reduce treillis treinat triangle triangularize trigexpand trigrat trigreduce trigsimp trunc truncate truncated_cube_graph truncated_dodecahedron_graph truncated_icosahedron_graph truncated_tetrahedron_graph tr_warnings_get tube tutte_graph ueivects uforget ultraspherical underlying_graph undiff union unique uniteigenvectors unitp units unit_step unitvector unorder unsum untellrat untimer untrace uppercasep uricci uriemann uvect vandermonde_matrix var var1 var_bernoulli var_beta var_binomial var_chi2 var_continuous_uniform var_discrete_uniform var_exp var_f var_gamma var_general_finite_discrete var_geometric var_gumbel var_hypergeometric var_laplace var_logistic var_lognormal var_negative_binomial var_noncentral_chi2 var_noncentral_student_t var_normal var_pareto var_poisson var_rayleigh var_student_t var_weibull vector vectorpotential vectorsimp verbify vers vertex_coloring vertex_connectivity vertex_degree vertex_distance vertex_eccentricity vertex_in_degree vertex_out_degree vertices vertices_to_cycle vertices_to_path %w weyl wheel_graph wiener_index wigner_3j wigner_6j wigner_9j with_stdout write_binary_data writebyte write_data writefile wronskian xreduce xthru %y Zeilberger zeroequiv zerofor zeromatrix zeromatrixp zeta zgeev zheev zlange zn_add_table zn_carmichael_lambda zn_characteristic_factors zn_determinant zn_factor_generators zn_invert_by_lu zn_log zn_mult_table absboxchar activecontexts adapt_depth additive adim aform algebraic algepsilon algexact aliases allbut all_dotsimp_denoms allocation allsym alphabetic animation antisymmetric arrays askexp assume_pos assume_pos_pred assumescalar asymbol atomgrad atrig1 axes axis_3d axis_bottom axis_left axis_right axis_top azimuth background background_color backsubst berlefact bernstein_explicit besselexpand beta_args_sum_to_integer beta_expand bftorat bftrunc bindtest border boundaries_array box boxchar breakup %c capping cauchysum cbrange cbtics center cflength cframe_flag cnonmet_flag color color_bar color_bar_tics colorbox columns commutative complex cone context contexts contour contour_levels cosnpiflag ctaypov ctaypt ctayswitch ctayvar ct_coords ctorsion_flag ctrgsimp cube current_let_rule_package cylinder data_file_name debugmode decreasing default_let_rule_package delay dependencies derivabbrev derivsubst detout diagmetric diff dim dimensions dispflag display2d|10 display_format_internal distribute_over doallmxops domain domxexpt domxmxops domxnctimes dontfactor doscmxops doscmxplus dot0nscsimp dot0simp dot1simp dotassoc dotconstrules dotdistrib dotexptsimp dotident dotscrules draw_graph_program draw_realpart edge_color edge_coloring edge_partition edge_type edge_width %edispflag elevation %emode endphi endtheta engineering_format_floats enhanced3d %enumer epsilon_lp erfflag erf_representation errormsg error_size error_syms error_type %e_to_numlog eval even evenfun evflag evfun ev_point expandwrt_denom expintexpand expintrep expon expop exptdispflag exptisolate exptsubst facexpand facsum_combine factlim factorflag factorial_expand factors_only fb feature features file_name file_output_append file_search_demo file_search_lisp file_search_maxima|10 file_search_tests file_search_usage file_type_lisp file_type_maxima|10 fill_color fill_density filled_func fixed_vertices flipflag float2bf font font_size fortindent fortspaces fpprec fpprintprec functions gamma_expand gammalim gdet genindex gensumnum GGFCFMAX GGFINFINITY globalsolve gnuplot_command gnuplot_curve_styles gnuplot_curve_titles gnuplot_default_term_command gnuplot_dumb_term_command gnuplot_file_args gnuplot_file_name gnuplot_out_file gnuplot_pdf_term_command gnuplot_pm3d gnuplot_png_term_command gnuplot_postamble gnuplot_preamble gnuplot_ps_term_command gnuplot_svg_term_command gnuplot_term gnuplot_view_args Gosper_in_Zeilberger gradefs grid grid2d grind halfangles head_angle head_both head_length head_type height hypergeometric_representation %iargs ibase icc1 icc2 icounter idummyx ieqnprint ifb ifc1 ifc2 ifg ifgi ifr iframe_bracket_form ifri igeowedge_flag ikt1 ikt2 imaginary inchar increasing infeval infinity inflag infolists inm inmc1 inmc2 intanalysis integer integervalued integrate_use_rootsof integration_constant integration_constant_counter interpolate_color intfaclim ip_grid ip_grid_in irrational isolate_wrt_times iterations itr julia_parameter %k1 %k2 keepfloat key key_pos kinvariant kt label label_alignment label_orientation labels lassociative lbfgs_ncorrections lbfgs_nfeval_max leftjust legend letrat let_rule_packages lfg lg lhospitallim limsubst linear linear_solver linechar linel|10 linenum line_type linewidth line_width linsolve_params linsolvewarn lispdisp listarith listconstvars listdummyvars lmxchar load_pathname loadprint logabs logarc logcb logconcoeffp logexpand lognegint logsimp logx logx_secondary logy logy_secondary logz lriem m1pbranch macroexpansion macros mainvar manual_demo maperror mapprint matrix_element_add matrix_element_mult matrix_element_transpose maxapplydepth maxapplyheight maxima_tempdir|10 maxima_userdir|10 maxnegex MAX_ORD maxposex maxpsifracdenom maxpsifracnum maxpsinegint maxpsiposint maxtayorder mesh_lines_color method mod_big_prime mode_check_errorp mode_checkp mode_check_warnp mod_test mod_threshold modular_linear_solver modulus multiplicative multiplicities myoptions nary negdistrib negsumdispflag newline newtonepsilon newtonmaxiter nextlayerfactor niceindicespref nm nmc noeval nolabels nonegative_lp noninteger nonscalar noun noundisp nouns np npi nticks ntrig numer numer_pbranch obase odd oddfun opacity opproperties opsubst optimprefix optionset orientation origin orthopoly_returns_intervals outative outchar packagefile palette partswitch pdf_file pfeformat phiresolution %piargs piece pivot_count_sx pivot_max_sx plot_format plot_options plot_realpart png_file pochhammer_max_index points pointsize point_size points_joined point_type poislim poisson poly_coefficient_ring poly_elimination_order polyfactor poly_grobner_algorithm poly_grobner_debug poly_monomial_order poly_primary_elimination_order poly_return_term_list poly_secondary_elimination_order poly_top_reduction_only posfun position powerdisp pred prederror primep_number_of_tests product_use_gamma program programmode promote_float_to_bigfloat prompt proportional_axes props psexpand ps_file radexpand radius radsubstflag rassociative ratalgdenom ratchristof ratdenomdivide rateinstein ratepsilon ratfac rational ratmx ratprint ratriemann ratsimpexpons ratvarswitch ratweights ratweyl ratwtlvl real realonly redraw refcheck resolution restart resultant ric riem rmxchar %rnum_list rombergabs rombergit rombergmin rombergtol rootsconmode rootsepsilon run_viewer same_xy same_xyz savedef savefactors scalar scalarmatrixp scale scale_lp setcheck setcheckbreak setval show_edge_color show_edges show_edge_type show_edge_width show_id show_label showtime show_vertex_color show_vertex_size show_vertex_type show_vertices show_weight simp simplified_output simplify_products simpproduct simpsum sinnpiflag solvedecomposes solveexplicit solvefactors solvenullwarn solveradcan solvetrigwarn space sparse sphere spring_embedding_depth sqrtdispflag stardisp startphi starttheta stats_numer stringdisp structures style sublis_apply_lambda subnumsimp sumexpand sumsplitfact surface surface_hide svg_file symmetric tab taylordepth taylor_logexpand taylor_order_coefficients taylor_truncate_polynomials tensorkill terminal testsuite_files thetaresolution timer_devalue title tlimswitch tr track transcompile transform transform_xy translate_fast_arrays transparent transrun tr_array_as_ref tr_bound_function_applyp tr_file_tty_messagesp tr_float_can_branch_complex tr_function_call_default trigexpandplus trigexpandtimes triginverses trigsign trivial_solutions tr_numer tr_optimize_max_loop tr_semicompile tr_state_vars tr_warn_bad_function_calls tr_warn_fexpr tr_warn_meval tr_warn_mode tr_warn_undeclared tr_warn_undefined_variable tstep ttyoff tube_extremes ufg ug %unitexpand unit_vectors uric uriem use_fast_arrays user_preamble usersetunits values vect_cross verbose vertex_color vertex_coloring vertex_partition vertex_size vertex_type view warnings weyl width windowname windowtitle wired_surface wireframe xaxis xaxis_color xaxis_secondary xaxis_type xaxis_width xlabel xlabel_secondary xlength xrange xrange_secondary xtics xtics_axis xtics_rotate xtics_rotate_secondary xtics_secondary xtics_secondary_axis xu_grid x_voxel xy_file xyplane xy_scale yaxis yaxis_color yaxis_secondary yaxis_type yaxis_width ylabel ylabel_secondary ylength yrange yrange_secondary ytics ytics_axis ytics_rotate ytics_rotate_secondary ytics_secondary ytics_secondary_axis yv_grid y_voxel yx_ratio zaxis zaxis_color zaxis_type zaxis_width zeroa zerob zerobern zeta%pi zlabel zlabel_rotate zlength zmin zn_primroot_limit zn_primroot_pretest",
											symbol: "_ __ %|0 %%|0"
									},
									contains: [{
											className: "comment",
											begin: "/\\*",
											end: "\\*/",
											contains: ["self"]
									}, e.QUOTE_STRING_MODE, {
											className: "number",
											relevance: 0,
											variants: [{
													begin: "\\b(\\d+|\\d+\\.|\\.\\d+|\\d+\\.\\d+)[Ee][-+]?\\d+\\b"
											}, {
													begin: "\\b(\\d+|\\d+\\.|\\.\\d+|\\d+\\.\\d+)[Bb][-+]?\\d+\\b",
													relevance: 10
											}, {
													begin: "\\b(\\.\\d+|\\d+\\.\\d+)\\b"
											}, {
													begin: "\\b(\\d+|0[0-9A-Za-z]+)\\.?\\b"
											}]
									}],
									illegal: /@/
							}
					}
			}
			,
			428: e=>{
					e.exports = function(e) {
							return {
									name: "MEL",
									keywords: "int float string vector matrix if else switch case default while do for in break continue global proc return about abs addAttr addAttributeEditorNodeHelp addDynamic addNewShelfTab addPP addPanelCategory addPrefixToName advanceToNextDrivenKey affectedNet affects aimConstraint air alias aliasAttr align alignCtx alignCurve alignSurface allViewFit ambientLight angle angleBetween animCone animCurveEditor animDisplay animView annotate appendStringArray applicationName applyAttrPreset applyTake arcLenDimContext arcLengthDimension arclen arrayMapper art3dPaintCtx artAttrCtx artAttrPaintVertexCtx artAttrSkinPaintCtx artAttrTool artBuildPaintMenu artFluidAttrCtx artPuttyCtx artSelectCtx artSetPaintCtx artUserPaintCtx assignCommand assignInputDevice assignViewportFactories attachCurve attachDeviceAttr attachSurface attrColorSliderGrp attrCompatibility attrControlGrp attrEnumOptionMenu attrEnumOptionMenuGrp attrFieldGrp attrFieldSliderGrp attrNavigationControlGrp attrPresetEditWin attributeExists attributeInfo attributeMenu attributeQuery autoKeyframe autoPlace bakeClip bakeFluidShading bakePartialHistory bakeResults bakeSimulation basename basenameEx batchRender bessel bevel bevelPlus binMembership bindSkin blend2 blendShape blendShapeEditor blendShapePanel blendTwoAttr blindDataType boneLattice boundary boxDollyCtx boxZoomCtx bufferCurve buildBookmarkMenu buildKeyframeMenu button buttonManip CBG cacheFile cacheFileCombine cacheFileMerge cacheFileTrack camera cameraView canCreateManip canvas capitalizeString catch catchQuiet ceil changeSubdivComponentDisplayLevel changeSubdivRegion channelBox character characterMap characterOutlineEditor characterize chdir checkBox checkBoxGrp checkDefaultRenderGlobals choice circle circularFillet clamp clear clearCache clip clipEditor clipEditorCurrentTimeCtx clipSchedule clipSchedulerOutliner clipTrimBefore closeCurve closeSurface cluster cmdFileOutput cmdScrollFieldExecuter cmdScrollFieldReporter cmdShell coarsenSubdivSelectionList collision color colorAtPoint colorEditor colorIndex colorIndexSliderGrp colorSliderButtonGrp colorSliderGrp columnLayout commandEcho commandLine commandPort compactHairSystem componentEditor compositingInterop computePolysetVolume condition cone confirmDialog connectAttr connectControl connectDynamic connectJoint connectionInfo constrain constrainValue constructionHistory container containsMultibyte contextInfo control convertFromOldLayers convertIffToPsd convertLightmap convertSolidTx convertTessellation convertUnit copyArray copyFlexor copyKey copySkinWeights cos cpButton cpCache cpClothSet cpCollision cpConstraint cpConvClothToMesh cpForces cpGetSolverAttr cpPanel cpProperty cpRigidCollisionFilter cpSeam cpSetEdit cpSetSolverAttr cpSolver cpSolverTypes cpTool cpUpdateClothUVs createDisplayLayer createDrawCtx createEditor createLayeredPsdFile createMotionField createNewShelf createNode createRenderLayer createSubdivRegion cross crossProduct ctxAbort ctxCompletion ctxEditMode ctxTraverse currentCtx currentTime currentTimeCtx currentUnit curve curveAddPtCtx curveCVCtx curveEPCtx curveEditorCtx curveIntersect curveMoveEPCtx curveOnSurface curveSketchCtx cutKey cycleCheck cylinder dagPose date defaultLightListCheckBox defaultNavigation defineDataServer defineVirtualDevice deformer deg_to_rad delete deleteAttr deleteShadingGroupsAndMaterials deleteShelfTab deleteUI deleteUnusedBrushes delrandstr detachCurve detachDeviceAttr detachSurface deviceEditor devicePanel dgInfo dgdirty dgeval dgtimer dimWhen directKeyCtx directionalLight dirmap dirname disable disconnectAttr disconnectJoint diskCache displacementToPoly displayAffected displayColor displayCull displayLevelOfDetail displayPref displayRGBColor displaySmoothness displayStats displayString displaySurface distanceDimContext distanceDimension doBlur dolly dollyCtx dopeSheetEditor dot dotProduct doubleProfileBirailSurface drag dragAttrContext draggerContext dropoffLocator duplicate duplicateCurve duplicateSurface dynCache dynControl dynExport dynExpression dynGlobals dynPaintEditor dynParticleCtx dynPref dynRelEdPanel dynRelEditor dynamicLoad editAttrLimits editDisplayLayerGlobals editDisplayLayerMembers editRenderLayerAdjustment editRenderLayerGlobals editRenderLayerMembers editor editorTemplate effector emit emitter enableDevice encodeString endString endsWith env equivalent equivalentTol erf error eval evalDeferred evalEcho event exactWorldBoundingBox exclusiveLightCheckBox exec executeForEachObject exists exp expression expressionEditorListen extendCurve extendSurface extrude fcheck fclose feof fflush fgetline fgetword file fileBrowserDialog fileDialog fileExtension fileInfo filetest filletCurve filter filterCurve filterExpand filterStudioImport findAllIntersections findAnimCurves findKeyframe findMenuItem findRelatedSkinCluster finder firstParentOf fitBspline flexor floatEq floatField floatFieldGrp floatScrollBar floatSlider floatSlider2 floatSliderButtonGrp floatSliderGrp floor flow fluidCacheInfo fluidEmitter fluidVoxelInfo flushUndo fmod fontDialog fopen formLayout format fprint frameLayout fread freeFormFillet frewind fromNativePath fwrite gamma gauss geometryConstraint getApplicationVersionAsFloat getAttr getClassification getDefaultBrush getFileList getFluidAttr getInputDeviceRange getMayaPanelTypes getModifiers getPanel getParticleAttr getPluginResource getenv getpid glRender glRenderEditor globalStitch gmatch goal gotoBindPose grabColor gradientControl gradientControlNoAttr graphDollyCtx graphSelectContext graphTrackCtx gravity grid gridLayout group groupObjectsByName HfAddAttractorToAS HfAssignAS HfBuildEqualMap HfBuildFurFiles HfBuildFurImages HfCancelAFR HfConnectASToHF HfCreateAttractor HfDeleteAS HfEditAS HfPerformCreateAS HfRemoveAttractorFromAS HfSelectAttached HfSelectAttractors HfUnAssignAS hardenPointCurve hardware hardwareRenderPanel headsUpDisplay headsUpMessage help helpLine hermite hide hilite hitTest hotBox hotkey hotkeyCheck hsv_to_rgb hudButton hudSlider hudSliderButton hwReflectionMap hwRender hwRenderLoad hyperGraph hyperPanel hyperShade hypot iconTextButton iconTextCheckBox iconTextRadioButton iconTextRadioCollection iconTextScrollList iconTextStaticLabel ikHandle ikHandleCtx ikHandleDisplayScale ikSolver ikSplineHandleCtx ikSystem ikSystemInfo ikfkDisplayMethod illustratorCurves image imfPlugins inheritTransform insertJoint insertJointCtx insertKeyCtx insertKnotCurve insertKnotSurface instance instanceable instancer intField intFieldGrp intScrollBar intSlider intSliderGrp interToUI internalVar intersect iprEngine isAnimCurve isConnected isDirty isParentOf isSameObject isTrue isValidObjectName isValidString isValidUiName isolateSelect itemFilter itemFilterAttr itemFilterRender itemFilterType joint jointCluster jointCtx jointDisplayScale jointLattice keyTangent keyframe keyframeOutliner keyframeRegionCurrentTimeCtx keyframeRegionDirectKeyCtx keyframeRegionDollyCtx keyframeRegionInsertKeyCtx keyframeRegionMoveKeyCtx keyframeRegionScaleKeyCtx keyframeRegionSelectKeyCtx keyframeRegionSetKeyCtx keyframeRegionTrackCtx keyframeStats lassoContext lattice latticeDeformKeyCtx launch launchImageEditor layerButton layeredShaderPort layeredTexturePort layout layoutDialog lightList lightListEditor lightListPanel lightlink lineIntersection linearPrecision linstep listAnimatable listAttr listCameras listConnections listDeviceAttachments listHistory listInputDeviceAxes listInputDeviceButtons listInputDevices listMenuAnnotation listNodeTypes listPanelCategories listRelatives listSets listTransforms listUnselected listerEditor loadFluid loadNewShelf loadPlugin loadPluginLanguageResources loadPrefObjects localizedPanelLabel lockNode loft log longNameOf lookThru ls lsThroughFilter lsType lsUI Mayatomr mag makeIdentity makeLive makePaintable makeRoll makeSingleSurface makeTubeOn makebot manipMoveContext manipMoveLimitsCtx manipOptions manipRotateContext manipRotateLimitsCtx manipScaleContext manipScaleLimitsCtx marker match max memory menu menuBarLayout menuEditor menuItem menuItemToShelf menuSet menuSetPref messageLine min minimizeApp mirrorJoint modelCurrentTimeCtx modelEditor modelPanel mouse movIn movOut move moveIKtoFK moveKeyCtx moveVertexAlongDirection multiProfileBirailSurface mute nParticle nameCommand nameField namespace namespaceInfo newPanelItems newton nodeCast nodeIconButton nodeOutliner nodePreset nodeType noise nonLinear normalConstraint normalize nurbsBoolean nurbsCopyUVSet nurbsCube nurbsEditUV nurbsPlane nurbsSelect nurbsSquare nurbsToPoly nurbsToPolygonsPref nurbsToSubdiv nurbsToSubdivPref nurbsUVSet nurbsViewDirectionVector objExists objectCenter objectLayer objectType objectTypeUI obsoleteProc oceanNurbsPreviewPlane offsetCurve offsetCurveOnSurface offsetSurface openGLExtension openMayaPref optionMenu optionMenuGrp optionVar orbit orbitCtx orientConstraint outlinerEditor outlinerPanel overrideModifier paintEffectsDisplay pairBlend palettePort paneLayout panel panelConfiguration panelHistory paramDimContext paramDimension paramLocator parent parentConstraint particle particleExists particleInstancer particleRenderInfo partition pasteKey pathAnimation pause pclose percent performanceOptions pfxstrokes pickWalk picture pixelMove planarSrf plane play playbackOptions playblast plugAttr plugNode pluginInfo pluginResourceUtil pointConstraint pointCurveConstraint pointLight pointMatrixMult pointOnCurve pointOnSurface pointPosition poleVectorConstraint polyAppend polyAppendFacetCtx polyAppendVertex polyAutoProjection polyAverageNormal polyAverageVertex polyBevel polyBlendColor polyBlindData polyBoolOp polyBridgeEdge polyCacheMonitor polyCheck polyChipOff polyClipboard polyCloseBorder polyCollapseEdge polyCollapseFacet polyColorBlindData polyColorDel polyColorPerVertex polyColorSet polyCompare polyCone polyCopyUV polyCrease polyCreaseCtx polyCreateFacet polyCreateFacetCtx polyCube polyCut polyCutCtx polyCylinder polyCylindricalProjection polyDelEdge polyDelFacet polyDelVertex polyDuplicateAndConnect polyDuplicateEdge polyEditUV polyEditUVShell polyEvaluate polyExtrudeEdge polyExtrudeFacet polyExtrudeVertex polyFlipEdge polyFlipUV polyForceUV polyGeoSampler polyHelix polyInfo polyInstallAction polyLayoutUV polyListComponentConversion polyMapCut polyMapDel polyMapSew polyMapSewMove polyMergeEdge polyMergeEdgeCtx polyMergeFacet polyMergeFacetCtx polyMergeUV polyMergeVertex polyMirrorFace polyMoveEdge polyMoveFacet polyMoveFacetUV polyMoveUV polyMoveVertex polyNormal polyNormalPerVertex polyNormalizeUV polyOptUvs polyOptions polyOutput polyPipe polyPlanarProjection polyPlane polyPlatonicSolid polyPoke polyPrimitive polyPrism polyProjection polyPyramid polyQuad polyQueryBlindData polyReduce polySelect polySelectConstraint polySelectConstraintMonitor polySelectCtx polySelectEditCtx polySeparate polySetToFaceNormal polySewEdge polyShortestPathCtx polySmooth polySoftEdge polySphere polySphericalProjection polySplit polySplitCtx polySplitEdge polySplitRing polySplitVertex polyStraightenUVBorder polySubdivideEdge polySubdivideFacet polyToSubdiv polyTorus polyTransfer polyTriangulate polyUVSet polyUnite polyWedgeFace popen popupMenu pose pow preloadRefEd print progressBar progressWindow projFileViewer projectCurve projectTangent projectionContext projectionManip promptDialog propModCtx propMove psdChannelOutliner psdEditTextureFile psdExport psdTextureFile putenv pwd python querySubdiv quit rad_to_deg radial radioButton radioButtonGrp radioCollection radioMenuItemCollection rampColorPort rand randomizeFollicles randstate rangeControl readTake rebuildCurve rebuildSurface recordAttr recordDevice redo reference referenceEdit referenceQuery refineSubdivSelectionList refresh refreshAE registerPluginResource rehash reloadImage removeJoint removeMultiInstance removePanelCategory rename renameAttr renameSelectionList renameUI render renderGlobalsNode renderInfo renderLayerButton renderLayerParent renderLayerPostProcess renderLayerUnparent renderManip renderPartition renderQualityNode renderSettings renderThumbnailUpdate renderWindowEditor renderWindowSelectContext renderer reorder reorderDeformers requires reroot resampleFluid resetAE resetPfxToPolyCamera resetTool resolutionNode retarget reverseCurve reverseSurface revolve rgb_to_hsv rigidBody rigidSolver roll rollCtx rootOf rot rotate rotationInterpolation roundConstantRadius rowColumnLayout rowLayout runTimeCommand runup sampleImage saveAllShelves saveAttrPreset saveFluid saveImage saveInitialState saveMenu savePrefObjects savePrefs saveShelf saveToolSettings scale scaleBrushBrightness scaleComponents scaleConstraint scaleKey scaleKeyCtx sceneEditor sceneUIReplacement scmh scriptCtx scriptEditorInfo scriptJob scriptNode scriptTable scriptToShelf scriptedPanel scriptedPanelType scrollField scrollLayout sculpt searchPathArray seed selLoadSettings select selectContext selectCurveCV selectKey selectKeyCtx selectKeyframeRegionCtx selectMode selectPref selectPriority selectType selectedNodes selectionConnection separator setAttr setAttrEnumResource setAttrMapping setAttrNiceNameResource setConstraintRestPosition setDefaultShadingGroup setDrivenKeyframe setDynamic setEditCtx setEditor setFluidAttr setFocus setInfinity setInputDeviceMapping setKeyCtx setKeyPath setKeyframe setKeyframeBlendshapeTargetWts setMenuMode setNodeNiceNameResource setNodeTypeFlag setParent setParticleAttr setPfxToPolyCamera setPluginResource setProject setStampDensity setStartupMessage setState setToolTo setUITemplate setXformManip sets shadingConnection shadingGeometryRelCtx shadingLightRelCtx shadingNetworkCompare shadingNode shapeCompare shelfButton shelfLayout shelfTabLayout shellField shortNameOf showHelp showHidden showManipCtx showSelectionInTitle showShadingGroupAttrEditor showWindow sign simplify sin singleProfileBirailSurface size sizeBytes skinCluster skinPercent smoothCurve smoothTangentSurface smoothstep snap2to2 snapKey snapMode snapTogetherCtx snapshot soft softMod softModCtx sort sound soundControl source spaceLocator sphere sphrand spotLight spotLightPreviewPort spreadSheetEditor spring sqrt squareSurface srtContext stackTrace startString startsWith stitchAndExplodeShell stitchSurface stitchSurfacePoints strcmp stringArrayCatenate stringArrayContains stringArrayCount stringArrayInsertAtIndex stringArrayIntersector stringArrayRemove stringArrayRemoveAtIndex stringArrayRemoveDuplicates stringArrayRemoveExact stringArrayToString stringToStringArray strip stripPrefixFromName stroke subdAutoProjection subdCleanTopology subdCollapse subdDuplicateAndConnect subdEditUV subdListComponentConversion subdMapCut subdMapSewMove subdMatchTopology subdMirror subdToBlind subdToPoly subdTransferUVsToCache subdiv subdivCrease subdivDisplaySmoothness substitute substituteAllString substituteGeometry substring surface surfaceSampler surfaceShaderList swatchDisplayPort switchTable symbolButton symbolCheckBox sysFile system tabLayout tan tangentConstraint texLatticeDeformContext texManipContext texMoveContext texMoveUVShellContext texRotateContext texScaleContext texSelectContext texSelectShortestPathCtx texSmudgeUVContext texWinToolCtx text textCurves textField textFieldButtonGrp textFieldGrp textManip textScrollList textToShelf textureDisplacePlane textureHairColor texturePlacementContext textureWindow threadCount threePointArcCtx timeControl timePort timerX toNativePath toggle toggleAxis toggleWindowVisibility tokenize tokenizeList tolerance tolower toolButton toolCollection toolDropped toolHasOptions toolPropertyWindow torus toupper trace track trackCtx transferAttributes transformCompare transformLimits translator trim trunc truncateFluidCache truncateHairCache tumble tumbleCtx turbulence twoPointArcCtx uiRes uiTemplate unassignInputDevice undo undoInfo ungroup uniform unit unloadPlugin untangleUV untitledFileName untrim upAxis updateAE userCtx uvLink uvSnapshot validateShelfName vectorize view2dToolCtx viewCamera viewClipPlane viewFit viewHeadOn viewLookAt viewManip viewPlace viewSet visor volumeAxis vortex waitCursor warning webBrowser webBrowserPrefs whatIs window windowPref wire wireContext workspace wrinkle wrinkleContext writeTake xbmLangPathList xform",
									illegal: "</",
									contains: [e.C_NUMBER_MODE, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, {
											className: "string",
											begin: "`",
											end: "`",
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											begin: /[$%@](\^\w\b|#\w+|[^\s\w{]|\{\w+\}|\w+)/
									}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
							}
					}
			}
			,
			7600: e=>{
					e.exports = function(e) {
							const t = e.COMMENT("%", "$")
								, n = e.inherit(e.APOS_STRING_MODE, {
									relevance: 0
							})
								, i = e.inherit(e.QUOTE_STRING_MODE, {
									relevance: 0
							});
							return i.contains = i.contains.slice(),
							i.contains.push({
									className: "subst",
									begin: "\\\\[abfnrtv]\\|\\\\x[0-9a-fA-F]*\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]",
									relevance: 0
							}),
							{
									name: "Mercury",
									aliases: ["m", "moo"],
									keywords: {
											keyword: "module use_module import_module include_module end_module initialise mutable initialize finalize finalise interface implementation pred mode func type inst solver any_pred any_func is semidet det nondet multi erroneous failure cc_nondet cc_multi typeclass instance where pragma promise external trace atomic or_else require_complete_switch require_det require_semidet require_multi require_nondet require_cc_multi require_cc_nondet require_erroneous require_failure",
											meta: "inline no_inline type_spec source_file fact_table obsolete memo loop_check minimal_model terminates does_not_terminate check_termination promise_equivalent_clauses foreign_proc foreign_decl foreign_code foreign_type foreign_import_module foreign_export_enum foreign_export foreign_enum may_call_mercury will_not_call_mercury thread_safe not_thread_safe maybe_thread_safe promise_pure promise_semipure tabled_for_io local untrailed trailed attach_to_io_state can_pass_as_mercury_type stable will_not_throw_exception may_modify_trail will_not_modify_trail may_duplicate may_not_duplicate affects_liveness does_not_affect_liveness doesnt_affect_liveness no_sharing unknown_sharing sharing",
											built_in: "some all not if then else true fail false try catch catch_any semidet_true semidet_false semidet_fail impure_true impure semipure"
									},
									contains: [{
											className: "built_in",
											variants: [{
													begin: "<=>"
											}, {
													begin: "<=",
													relevance: 0
											}, {
													begin: "=>",
													relevance: 0
											}, {
													begin: "/\\\\"
											}, {
													begin: "\\\\/"
											}]
									}, {
											className: "built_in",
											variants: [{
													begin: ":-\\|--\x3e"
											}, {
													begin: "=",
													relevance: 0
											}]
									}, t, e.C_BLOCK_COMMENT_MODE, {
											className: "number",
											begin: "0'.\\|0[box][0-9a-fA-F]*"
									}, e.NUMBER_MODE, n, i, {
											begin: /:-/
									}, {
											begin: /\.$/
									}]
							}
					}
			}
			,
			294: e=>{
					e.exports = function(e) {
							return {
									name: "MIPS Assembly",
									case_insensitive: !0,
									aliases: ["mips"],
									keywords: {
											$pattern: "\\.?" + e.IDENT_RE,
											meta: ".2byte .4byte .align .ascii .asciz .balign .byte .code .data .else .end .endif .endm .endr .equ .err .exitm .extern .global .hword .if .ifdef .ifndef .include .irp .long .macro .rept .req .section .set .skip .space .text .word .ltorg ",
											built_in: "$0 $1 $2 $3 $4 $5 $6 $7 $8 $9 $10 $11 $12 $13 $14 $15 $16 $17 $18 $19 $20 $21 $22 $23 $24 $25 $26 $27 $28 $29 $30 $31 zero at v0 v1 a0 a1 a2 a3 a4 a5 a6 a7 t0 t1 t2 t3 t4 t5 t6 t7 t8 t9 s0 s1 s2 s3 s4 s5 s6 s7 s8 k0 k1 gp sp fp ra $f0 $f1 $f2 $f2 $f4 $f5 $f6 $f7 $f8 $f9 $f10 $f11 $f12 $f13 $f14 $f15 $f16 $f17 $f18 $f19 $f20 $f21 $f22 $f23 $f24 $f25 $f26 $f27 $f28 $f29 $f30 $f31 Context Random EntryLo0 EntryLo1 Context PageMask Wired EntryHi HWREna BadVAddr Count Compare SR IntCtl SRSCtl SRSMap Cause EPC PRId EBase Config Config1 Config2 Config3 LLAddr Debug DEPC DESAVE CacheErr ECC ErrorEPC TagLo DataLo TagHi DataHi WatchLo WatchHi PerfCtl PerfCnt "
									},
									contains: [{
											className: "keyword",
											begin: "\\b(addi?u?|andi?|b(al)?|beql?|bgez(al)?l?|bgtzl?|blezl?|bltz(al)?l?|bnel?|cl[oz]|divu?|ext|ins|j(al)?|jalr(\\.hb)?|jr(\\.hb)?|lbu?|lhu?|ll|lui|lw[lr]?|maddu?|mfhi|mflo|movn|movz|move|msubu?|mthi|mtlo|mul|multu?|nop|nor|ori?|rotrv?|sb|sc|se[bh]|sh|sllv?|slti?u?|srav?|srlv?|subu?|sw[lr]?|xori?|wsbh|abs\\.[sd]|add\\.[sd]|alnv.ps|bc1[ft]l?|c\\.(s?f|un|u?eq|[ou]lt|[ou]le|ngle?|seq|l[et]|ng[et])\\.[sd]|(ceil|floor|round|trunc)\\.[lw]\\.[sd]|cfc1|cvt\\.d\\.[lsw]|cvt\\.l\\.[dsw]|cvt\\.ps\\.s|cvt\\.s\\.[dlw]|cvt\\.s\\.p[lu]|cvt\\.w\\.[dls]|div\\.[ds]|ldx?c1|luxc1|lwx?c1|madd\\.[sd]|mfc1|mov[fntz]?\\.[ds]|msub\\.[sd]|mth?c1|mul\\.[ds]|neg\\.[ds]|nmadd\\.[ds]|nmsub\\.[ds]|p[lu][lu]\\.ps|recip\\.fmt|r?sqrt\\.[ds]|sdx?c1|sub\\.[ds]|suxc1|swx?c1|break|cache|d?eret|[de]i|ehb|mfc0|mtc0|pause|prefx?|rdhwr|rdpgpr|sdbbp|ssnop|synci?|syscall|teqi?|tgei?u?|tlb(p|r|w[ir])|tlti?u?|tnei?|wait|wrpgpr)",
											end: "\\s"
									}, e.COMMENT("[;#](?!\\s*$)", "$"), e.C_BLOCK_COMMENT_MODE, e.QUOTE_STRING_MODE, {
											className: "string",
											begin: "'",
											end: "[^\\\\]'",
											relevance: 0
									}, {
											className: "title",
											begin: "\\|",
											end: "\\|",
											illegal: "\\n",
											relevance: 0
									}, {
											className: "number",
											variants: [{
													begin: "0x[0-9a-f]+"
											}, {
													begin: "\\b-?\\d+"
											}],
											relevance: 0
									}, {
											className: "symbol",
											variants: [{
													begin: "^\\s*[a-z_\\.\\$][a-z0-9_\\.\\$]+:"
											}, {
													begin: "^\\s*[0-9]+:"
											}, {
													begin: "[0-9]+[bf]"
											}],
											relevance: 0
									}],
									illegal: /\//
							}
					}
			}
			,
			5275: e=>{
					e.exports = function(e) {
							return {
									name: "Mizar",
									keywords: "environ vocabularies notations constructors definitions registrations theorems schemes requirements begin end definition registration cluster existence pred func defpred deffunc theorem proof let take assume then thus hence ex for st holds consider reconsider such that and in provided of as from be being by means equals implies iff redefine define now not or attr is mode suppose per cases set thesis contradiction scheme reserve struct correctness compatibility coherence symmetry assymetry reflexivity irreflexivity connectedness uniqueness commutativity idempotence involutiveness projectivity",
									contains: [e.COMMENT("::", "$")]
							}
					}
			}
			,
			3539: e=>{
					e.exports = function(e) {
							return {
									name: "Mojolicious",
									subLanguage: "xml",
									contains: [{
											className: "meta",
											begin: "^__(END|DATA)__$"
									}, {
											begin: "^\\s*%{1,2}={0,2}",
											end: "$",
											subLanguage: "perl"
									}, {
											begin: "<%{1,2}={0,2}",
											end: "={0,1}%>",
											subLanguage: "perl",
											excludeBegin: !0,
											excludeEnd: !0
									}]
							}
					}
			}
			,
			6981: e=>{
					e.exports = function(e) {
							const t = {
									className: "number",
									relevance: 0,
									variants: [{
											begin: "[$][a-fA-F0-9]+"
									}, e.NUMBER_MODE]
							}
								, n = {
									variants: [{
											match: [/(function|method)/, /\s+/, e.UNDERSCORE_IDENT_RE]
									}],
									scope: {
											1: "keyword",
											3: "title.function"
									}
							}
								, i = {
									variants: [{
											match: [/(class|interface|extends|implements)/, /\s+/, e.UNDERSCORE_IDENT_RE]
									}],
									scope: {
											1: "keyword",
											3: "title.class"
									}
							};
							return {
									name: "Monkey",
									case_insensitive: !0,
									keywords: {
											keyword: ["public", "private", "property", "continue", "exit", "extern", "new", "try", "catch", "eachin", "not", "abstract", "final", "select", "case", "default", "const", "local", "global", "field", "end", "if", "then", "else", "elseif", "endif", "while", "wend", "repeat", "until", "forever", "for", "to", "step", "next", "return", "module", "inline", "throw", "import", "and", "or", "shl", "shr", "mod"],
											built_in: ["DebugLog", "DebugStop", "Error", "Print", "ACos", "ACosr", "ASin", "ASinr", "ATan", "ATan2", "ATan2r", "ATanr", "Abs", "Abs", "Ceil", "Clamp", "Clamp", "Cos", "Cosr", "Exp", "Floor", "Log", "Max", "Max", "Min", "Min", "Pow", "Sgn", "Sgn", "Sin", "Sinr", "Sqrt", "Tan", "Tanr", "Seed", "PI", "HALFPI", "TWOPI"],
											literal: ["true", "false", "null"]
									},
									illegal: /\/\*/,
									contains: [e.COMMENT("#rem", "#end"), e.COMMENT("'", "$", {
											relevance: 0
									}), n, i, {
											className: "variable.language",
											begin: /\b(self|super)\b/
									}, {
											className: "meta",
											begin: /\s*#/,
											end: "$",
											keywords: {
													keyword: "if else elseif endif end then"
											}
									}, {
											match: [/^\s*/, /strict\b/],
											scope: {
													2: "meta"
											}
									}, {
											beginKeywords: "alias",
											end: "=",
											contains: [e.UNDERSCORE_TITLE_MODE]
									}, e.QUOTE_STRING_MODE, t]
							}
					}
			}
			,
			4285: e=>{
					e.exports = function(e) {
							const t = {
									keyword: "if then not for in while do return else elseif break continue switch and or unless when class extends super local import export from using",
									literal: "true false nil",
									built_in: "_G _VERSION assert collectgarbage dofile error getfenv getmetatable ipairs load loadfile loadstring module next pairs pcall print rawequal rawget rawset require select setfenv setmetatable tonumber tostring type unpack xpcall coroutine debug io math os package string table"
							}
								, n = "[A-Za-z$_][0-9A-Za-z$_]*"
								, i = {
									className: "subst",
									begin: /#\{/,
									end: /\}/,
									keywords: t
							}
								, r = [e.inherit(e.C_NUMBER_MODE, {
									starts: {
											end: "(\\s*/)?",
											relevance: 0
									}
							}), {
									className: "string",
									variants: [{
											begin: /'/,
											end: /'/,
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											begin: /"/,
											end: /"/,
											contains: [e.BACKSLASH_ESCAPE, i]
									}]
							}, {
									className: "built_in",
									begin: "@__" + e.IDENT_RE
							}, {
									begin: "@" + e.IDENT_RE
							}, {
									begin: e.IDENT_RE + "\\\\" + e.IDENT_RE
							}];
							i.contains = r;
							const o = e.inherit(e.TITLE_MODE, {
									begin: n
							})
								, s = "(\\(.*\\)\\s*)?\\B[-=]>"
								, a = {
									className: "params",
									begin: "\\([^\\(]",
									returnBegin: !0,
									contains: [{
											begin: /\(/,
											end: /\)/,
											keywords: t,
											contains: ["self"].concat(r)
									}]
							};
							return {
									name: "MoonScript",
									aliases: ["moon"],
									keywords: t,
									illegal: /\/\*/,
									contains: r.concat([e.COMMENT("--", "$"), {
											className: "function",
											begin: "^\\s*" + n + "\\s*=\\s*" + s,
											end: "[-=]>",
											returnBegin: !0,
											contains: [o, a]
									}, {
											begin: /[\(,:=]\s*/,
											relevance: 0,
											contains: [{
													className: "function",
													begin: s,
													end: "[-=]>",
													returnBegin: !0,
													contains: [a]
											}]
									}, {
											className: "class",
											beginKeywords: "class",
											end: "$",
											illegal: /[:="\[\]]/,
											contains: [{
													beginKeywords: "extends",
													endsWithParent: !0,
													illegal: /[:="\[\]]/,
													contains: [o]
											}, o]
									}, {
											className: "name",
											begin: n + ":",
											end: ":",
											returnBegin: !0,
											returnEnd: !0,
											relevance: 0
									}])
							}
					}
			}
			,
			4862: e=>{
					e.exports = function(e) {
							return {
									name: "N1QL",
									case_insensitive: !0,
									contains: [{
											beginKeywords: "build create index delete drop explain infer|10 insert merge prepare select update upsert|10",
											end: /;/,
											keywords: {
													keyword: ["all", "alter", "analyze", "and", "any", "array", "as", "asc", "begin", "between", "binary", "boolean", "break", "bucket", "build", "by", "call", "case", "cast", "cluster", "collate", "collection", "commit", "connect", "continue", "correlate", "cover", "create", "database", "dataset", "datastore", "declare", "decrement", "delete", "derived", "desc", "describe", "distinct", "do", "drop", "each", "element", "else", "end", "every", "except", "exclude", "execute", "exists", "explain", "fetch", "first", "flatten", "for", "force", "from", "function", "grant", "group", "gsi", "having", "if", "ignore", "ilike", "in", "include", "increment", "index", "infer", "inline", "inner", "insert", "intersect", "into", "is", "join", "key", "keys", "keyspace", "known", "last", "left", "let", "letting", "like", "limit", "lsm", "map", "mapping", "matched", "materialized", "merge", "minus", "namespace", "nest", "not", "number", "object", "offset", "on", "option", "or", "order", "outer", "over", "parse", "partition", "password", "path", "pool", "prepare", "primary", "private", "privilege", "procedure", "public", "raw", "realm", "reduce", "rename", "return", "returning", "revoke", "right", "role", "rollback", "satisfies", "schema", "select", "self", "semi", "set", "show", "some", "start", "statistics", "string", "system", "then", "to", "transaction", "trigger", "truncate", "under", "union", "unique", "unknown", "unnest", "unset", "update", "upsert", "use", "user", "using", "validate", "value", "valued", "values", "via", "view", "when", "where", "while", "with", "within", "work", "xor"],
													literal: ["true", "false", "null", "missing|5"],
													built_in: ["array_agg", "array_append", "array_concat", "array_contains", "array_count", "array_distinct", "array_ifnull", "array_length", "array_max", "array_min", "array_position", "array_prepend", "array_put", "array_range", "array_remove", "array_repeat", "array_replace", "array_reverse", "array_sort", "array_sum", "avg", "count", "max", "min", "sum", "greatest", "least", "ifmissing", "ifmissingornull", "ifnull", "missingif", "nullif", "ifinf", "ifnan", "ifnanorinf", "naninf", "neginfif", "posinfif", "clock_millis", "clock_str", "date_add_millis", "date_add_str", "date_diff_millis", "date_diff_str", "date_part_millis", "date_part_str", "date_trunc_millis", "date_trunc_str", "duration_to_str", "millis", "str_to_millis", "millis_to_str", "millis_to_utc", "millis_to_zone_name", "now_millis", "now_str", "str_to_duration", "str_to_utc", "str_to_zone_name", "decode_json", "encode_json", "encoded_size", "poly_length", "base64", "base64_encode", "base64_decode", "meta", "uuid", "abs", "acos", "asin", "atan", "atan2", "ceil", "cos", "degrees", "e", "exp", "ln", "log", "floor", "pi", "power", "radians", "random", "round", "sign", "sin", "sqrt", "tan", "trunc", "object_length", "object_names", "object_pairs", "object_inner_pairs", "object_values", "object_inner_values", "object_add", "object_put", "object_remove", "object_unwrap", "regexp_contains", "regexp_like", "regexp_position", "regexp_replace", "contains", "initcap", "length", "lower", "ltrim", "position", "repeat", "replace", "rtrim", "split", "substr", "title", "trim", "upper", "isarray", "isatom", "isboolean", "isnumber", "isobject", "isstring", "type", "toarray", "toatom", "toboolean", "tonumber", "toobject", "tostring"]
											},
											contains: [{
													className: "string",
													begin: "'",
													end: "'",
													contains: [e.BACKSLASH_ESCAPE]
											}, {
													className: "string",
													begin: '"',
													end: '"',
													contains: [e.BACKSLASH_ESCAPE]
											}, {
													className: "symbol",
													begin: "`",
													end: "`",
													contains: [e.BACKSLASH_ESCAPE]
											}, e.C_NUMBER_MODE, e.C_BLOCK_COMMENT_MODE]
									}, e.C_BLOCK_COMMENT_MODE]
							}
					}
			}
			,
			7510: e=>{
					e.exports = function(e) {
							return {
									name: "Nested Text",
									aliases: ["nt"],
									contains: [e.inherit(e.HASH_COMMENT_MODE, {
											begin: /^\s*(?=#)/,
											excludeBegin: !0
									}), {
											variants: [{
													match: [/^\s*/, /-/, /[ ]/, /.*$/]
											}, {
													match: [/^\s*/, /-$/]
											}],
											className: {
													2: "bullet",
													4: "string"
											}
									}, {
											match: [/^\s*/, />/, /[ ]/, /.*$/],
											className: {
													2: "punctuation",
													4: "string"
											}
									}, {
											match: [/^\s*(?=\S)/, /[^:]+/, /:\s*/, /$/],
											className: {
													2: "attribute",
													3: "punctuation"
											}
									}, {
											match: [/^\s*(?=\S)/, /[^:]*[^: ]/, /[ ]*:/, /[ ]/, /.*$/],
											className: {
													2: "attribute",
													3: "punctuation",
													5: "string"
											}
									}]
							}
					}
			}
			,
			7959: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = {
									className: "variable",
									variants: [{
											begin: /\$\d+/
									}, {
											begin: /\$\{\w+\}/
									}, {
											begin: t.concat(/[$@]/, e.UNDERSCORE_IDENT_RE)
									}]
							}
								, i = {
									endsWithParent: !0,
									keywords: {
											$pattern: /[a-z_]{2,}|\/dev\/poll/,
											literal: ["on", "off", "yes", "no", "true", "false", "none", "blocked", "debug", "info", "notice", "warn", "error", "crit", "select", "break", "last", "permanent", "redirect", "kqueue", "rtsig", "epoll", "poll", "/dev/poll"]
									},
									relevance: 0,
									illegal: "=>",
									contains: [e.HASH_COMMENT_MODE, {
											className: "string",
											contains: [e.BACKSLASH_ESCAPE, n],
											variants: [{
													begin: /"/,
													end: /"/
											}, {
													begin: /'/,
													end: /'/
											}]
									}, {
											begin: "([a-z]+):/",
											end: "\\s",
											endsWithParent: !0,
											excludeEnd: !0,
											contains: [n]
									}, {
											className: "regexp",
											contains: [e.BACKSLASH_ESCAPE, n],
											variants: [{
													begin: "\\s\\^",
													end: "\\s|\\{|;",
													returnEnd: !0
											}, {
													begin: "~\\*?\\s+",
													end: "\\s|\\{|;",
													returnEnd: !0
											}, {
													begin: "\\*(\\.[a-z\\-]+)+"
											}, {
													begin: "([a-z\\-]+\\.)+\\*"
											}]
									}, {
											className: "number",
											begin: "\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b"
									}, {
											className: "number",
											begin: "\\b\\d+[kKmMgGdshdwy]?\\b",
											relevance: 0
									}, n]
							};
							return {
									name: "Nginx config",
									aliases: ["nginxconf"],
									contains: [e.HASH_COMMENT_MODE, {
											beginKeywords: "upstream location",
											end: /;|\{/,
											contains: i.contains,
											keywords: {
													section: "upstream location"
											}
									}, {
											className: "section",
											begin: t.concat(e.UNDERSCORE_IDENT_RE + t.lookahead(/\s+\{/)),
											relevance: 0
									}, {
											begin: t.lookahead(e.UNDERSCORE_IDENT_RE + "\\s"),
											end: ";|\\{",
											contains: [{
													className: "attribute",
													begin: e.UNDERSCORE_IDENT_RE,
													starts: i
											}],
											relevance: 0
									}],
									illegal: "[^\\s\\}\\{]"
							}
					}
			}
			,
			7390: e=>{
					e.exports = function(e) {
							return {
									name: "Nim",
									keywords: {
											keyword: ["addr", "and", "as", "asm", "bind", "block", "break", "case", "cast", "const", "continue", "converter", "discard", "distinct", "div", "do", "elif", "else", "end", "enum", "except", "export", "finally", "for", "from", "func", "generic", "guarded", "if", "import", "in", "include", "interface", "is", "isnot", "iterator", "let", "macro", "method", "mixin", "mod", "nil", "not", "notin", "object", "of", "or", "out", "proc", "ptr", "raise", "ref", "return", "shared", "shl", "shr", "static", "template", "try", "tuple", "type", "using", "var", "when", "while", "with", "without", "xor", "yield"],
											literal: ["true", "false"],
											type: ["int", "int8", "int16", "int32", "int64", "uint", "uint8", "uint16", "uint32", "uint64", "float", "float32", "float64", "bool", "char", "string", "cstring", "pointer", "expr", "stmt", "void", "auto", "any", "range", "array", "openarray", "varargs", "seq", "set", "clong", "culong", "cchar", "cschar", "cshort", "cint", "csize", "clonglong", "cfloat", "cdouble", "clongdouble", "cuchar", "cushort", "cuint", "culonglong", "cstringarray", "semistatic"],
											built_in: ["stdin", "stdout", "stderr", "result"]
									},
									contains: [{
											className: "meta",
											begin: /\{\./,
											end: /\.\}/,
											relevance: 10
									}, {
											className: "string",
											begin: /[a-zA-Z]\w*"/,
											end: /"/,
											contains: [{
													begin: /""/
											}]
									}, {
											className: "string",
											begin: /([a-zA-Z]\w*)?"""/,
											end: /"""/
									}, e.QUOTE_STRING_MODE, {
											className: "type",
											begin: /\b[A-Z]\w+\b/,
											relevance: 0
									}, {
											className: "number",
											relevance: 0,
											variants: [{
													begin: /\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/
											}, {
													begin: /\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/
											}, {
													begin: /\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/
											}, {
													begin: /\b(\d[_\d]*)('?[iIuUfF](8|16|32|64))?/
											}]
									}, e.HASH_COMMENT_MODE]
							}
					}
			}
			,
			1466: e=>{
					e.exports = function(e) {
							const t = {
									keyword: ["rec", "with", "let", "in", "inherit", "assert", "if", "else", "then"],
									literal: ["true", "false", "or", "and", "null"],
									built_in: ["import", "abort", "baseNameOf", "dirOf", "isNull", "builtins", "map", "removeAttrs", "throw", "toString", "derivation"]
							}
								, n = {
									className: "subst",
									begin: /\$\{/,
									end: /\}/,
									keywords: t
							}
								, i = {
									className: "string",
									contains: [{
											className: "char.escape",
											begin: /''\$/
									}, n],
									variants: [{
											begin: "''",
											end: "''"
									}, {
											begin: '"',
											end: '"'
									}]
							}
								, r = [e.NUMBER_MODE, e.HASH_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, i, {
									begin: /[a-zA-Z0-9-_]+(\s*=)/,
									returnBegin: !0,
									relevance: 0,
									contains: [{
											className: "attr",
											begin: /\S+/,
											relevance: .2
									}]
							}];
							return n.contains = r,
							{
									name: "Nix",
									aliases: ["nixos"],
									keywords: t,
									contains: r
							}
					}
			}
			,
			6114: e=>{
					e.exports = function(e) {
							return {
									name: "Node REPL",
									contains: [{
											className: "meta.prompt",
											starts: {
													end: / |$/,
													starts: {
															end: "$",
															subLanguage: "javascript"
													}
											},
											variants: [{
													begin: /^>(?=[ ]|$)/
											}, {
													begin: /^\.\.\.(?=[ ]|$)/
											}]
									}]
							}
					}
			}
			,
			4941: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = {
									className: "variable.constant",
									begin: t.concat(/\$/, t.either("ADMINTOOLS", "APPDATA", "CDBURN_AREA", "CMDLINE", "COMMONFILES32", "COMMONFILES64", "COMMONFILES", "COOKIES", "DESKTOP", "DOCUMENTS", "EXEDIR", "EXEFILE", "EXEPATH", "FAVORITES", "FONTS", "HISTORY", "HWNDPARENT", "INSTDIR", "INTERNET_CACHE", "LANGUAGE", "LOCALAPPDATA", "MUSIC", "NETHOOD", "OUTDIR", "PICTURES", "PLUGINSDIR", "PRINTHOOD", "PROFILE", "PROGRAMFILES32", "PROGRAMFILES64", "PROGRAMFILES", "QUICKLAUNCH", "RECENT", "RESOURCES_LOCALIZED", "RESOURCES", "SENDTO", "SMPROGRAMS", "SMSTARTUP", "STARTMENU", "SYSDIR", "TEMP", "TEMPLATES", "VIDEOS", "WINDIR"))
							}
								, i = {
									className: "variable",
									begin: /\$+\{[\!\w.:-]+\}/
							}
								, r = {
									className: "variable",
									begin: /\$+\w[\w\.]*/,
									illegal: /\(\)\{\}/
							}
								, o = {
									className: "variable",
									begin: /\$+\([\w^.:!-]+\)/
							}
								, s = {
									className: "params",
									begin: t.either("ARCHIVE", "FILE_ATTRIBUTE_ARCHIVE", "FILE_ATTRIBUTE_NORMAL", "FILE_ATTRIBUTE_OFFLINE", "FILE_ATTRIBUTE_READONLY", "FILE_ATTRIBUTE_SYSTEM", "FILE_ATTRIBUTE_TEMPORARY", "HKCR", "HKCU", "HKDD", "HKEY_CLASSES_ROOT", "HKEY_CURRENT_CONFIG", "HKEY_CURRENT_USER", "HKEY_DYN_DATA", "HKEY_LOCAL_MACHINE", "HKEY_PERFORMANCE_DATA", "HKEY_USERS", "HKLM", "HKPD", "HKU", "IDABORT", "IDCANCEL", "IDIGNORE", "IDNO", "IDOK", "IDRETRY", "IDYES", "MB_ABORTRETRYIGNORE", "MB_DEFBUTTON1", "MB_DEFBUTTON2", "MB_DEFBUTTON3", "MB_DEFBUTTON4", "MB_ICONEXCLAMATION", "MB_ICONINFORMATION", "MB_ICONQUESTION", "MB_ICONSTOP", "MB_OK", "MB_OKCANCEL", "MB_RETRYCANCEL", "MB_RIGHT", "MB_RTLREADING", "MB_SETFOREGROUND", "MB_TOPMOST", "MB_USERICON", "MB_YESNO", "NORMAL", "OFFLINE", "READONLY", "SHCTX", "SHELL_CONTEXT", "SYSTEM|TEMPORARY")
							}
								, a = {
									className: "keyword",
									begin: t.concat(/!/, t.either("addincludedir", "addplugindir", "appendfile", "cd", "define", "delfile", "echo", "else", "endif", "error", "execute", "finalize", "getdllversion", "gettlbversion", "if", "ifdef", "ifmacrodef", "ifmacrondef", "ifndef", "include", "insertmacro", "macro", "macroend", "makensis", "packhdr", "searchparse", "searchreplace", "system", "tempfile", "undef", "uninstfinalize", "verbose", "warning"))
							}
								, l = {
									className: "string",
									variants: [{
											begin: '"',
											end: '"'
									}, {
											begin: "'",
											end: "'"
									}, {
											begin: "`",
											end: "`"
									}],
									illegal: /\n/,
									contains: [{
											className: "char.escape",
											begin: /\$(\\[nrt]|\$)/
									}, n, i, r, o]
							}
								, c = {
									match: [/Function/, /\s+/, t.concat(/(\.)?/, e.IDENT_RE)],
									scope: {
											1: "keyword",
											3: "title.function"
									}
							}
								, d = {
									match: [/Var/, /\s+/, /(?:\/GLOBAL\s+)?/, /[A-Za-z][\w.]*/],
									scope: {
											1: "keyword",
											3: "params",
											4: "variable"
									}
							};
							return {
									name: "NSIS",
									case_insensitive: !0,
									keywords: {
											keyword: ["Abort", "AddBrandingImage", "AddSize", "AllowRootDirInstall", "AllowSkipFiles", "AutoCloseWindow", "BGFont", "BGGradient", "BrandingText", "BringToFront", "Call", "CallInstDLL", "Caption", "ChangeUI", "CheckBitmap", "ClearErrors", "CompletedText", "ComponentText", "CopyFiles", "CRCCheck", "CreateDirectory", "CreateFont", "CreateShortCut", "Delete", "DeleteINISec", "DeleteINIStr", "DeleteRegKey", "DeleteRegValue", "DetailPrint", "DetailsButtonText", "DirText", "DirVar", "DirVerify", "EnableWindow", "EnumRegKey", "EnumRegValue", "Exch", "Exec", "ExecShell", "ExecShellWait", "ExecWait", "ExpandEnvStrings", "File", "FileBufSize", "FileClose", "FileErrorText", "FileOpen", "FileRead", "FileReadByte", "FileReadUTF16LE", "FileReadWord", "FileWriteUTF16LE", "FileSeek", "FileWrite", "FileWriteByte", "FileWriteWord", "FindClose", "FindFirst", "FindNext", "FindWindow", "FlushINI", "GetCurInstType", "GetCurrentAddress", "GetDlgItem", "GetDLLVersion", "GetDLLVersionLocal", "GetErrorLevel", "GetFileTime", "GetFileTimeLocal", "GetFullPathName", "GetFunctionAddress", "GetInstDirError", "GetKnownFolderPath", "GetLabelAddress", "GetTempFileName", "GetWinVer", "Goto", "HideWindow", "Icon", "IfAbort", "IfErrors", "IfFileExists", "IfRebootFlag", "IfRtlLanguage", "IfShellVarContextAll", "IfSilent", "InitPluginsDir", "InstallButtonText", "InstallColors", "InstallDir", "InstallDirRegKey", "InstProgressFlags", "InstType", "InstTypeGetText", "InstTypeSetText", "Int64Cmp", "Int64CmpU", "Int64Fmt", "IntCmp", "IntCmpU", "IntFmt", "IntOp", "IntPtrCmp", "IntPtrCmpU", "IntPtrOp", "IsWindow", "LangString", "LicenseBkColor", "LicenseData", "LicenseForceSelection", "LicenseLangString", "LicenseText", "LoadAndSetImage", "LoadLanguageFile", "LockWindow", "LogSet", "LogText", "ManifestDPIAware", "ManifestLongPathAware", "ManifestMaxVersionTested", "ManifestSupportedOS", "MessageBox", "MiscButtonText", "Name|0", "Nop", "OutFile", "Page", "PageCallbacks", "PEAddResource", "PEDllCharacteristics", "PERemoveResource", "PESubsysVer", "Pop", "Push", "Quit", "ReadEnvStr", "ReadINIStr", "ReadRegDWORD", "ReadRegStr", "Reboot", "RegDLL", "Rename", "RequestExecutionLevel", "ReserveFile", "Return", "RMDir", "SearchPath", "SectionGetFlags", "SectionGetInstTypes", "SectionGetSize", "SectionGetText", "SectionIn", "SectionSetFlags", "SectionSetInstTypes", "SectionSetSize", "SectionSetText", "SendMessage", "SetAutoClose", "SetBrandingImage", "SetCompress", "SetCompressor", "SetCompressorDictSize", "SetCtlColors", "SetCurInstType", "SetDatablockOptimize", "SetDateSave", "SetDetailsPrint", "SetDetailsView", "SetErrorLevel", "SetErrors", "SetFileAttributes", "SetFont", "SetOutPath", "SetOverwrite", "SetRebootFlag", "SetRegView", "SetShellVarContext", "SetSilent", "ShowInstDetails", "ShowUninstDetails", "ShowWindow", "SilentInstall", "SilentUnInstall", "Sleep", "SpaceTexts", "StrCmp", "StrCmpS", "StrCpy", "StrLen", "SubCaption", "Unicode", "UninstallButtonText", "UninstallCaption", "UninstallIcon", "UninstallSubCaption", "UninstallText", "UninstPage", "UnRegDLL", "Var", "VIAddVersionKey", "VIFileVersion", "VIProductVersion", "WindowIcon", "WriteINIStr", "WriteRegBin", "WriteRegDWORD", "WriteRegExpandStr", "WriteRegMultiStr", "WriteRegNone", "WriteRegStr", "WriteUninstaller", "XPStyle"],
											literal: ["admin", "all", "auto", "both", "bottom", "bzip2", "colored", "components", "current", "custom", "directory", "false", "force", "hide", "highest", "ifdiff", "ifnewer", "instfiles", "lastused", "leave", "left", "license", "listonly", "lzma", "nevershow", "none", "normal", "notset", "off", "on", "open", "print", "right", "show", "silent", "silentlog", "smooth", "textonly", "top", "true", "try", "un.components", "un.custom", "un.directory", "un.instfiles", "un.license", "uninstConfirm", "user", "Win10", "Win7", "Win8", "WinVista", "zlib"]
									},
									contains: [e.HASH_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.COMMENT(";", "$", {
											relevance: 0
									}), d, c, {
											beginKeywords: "Function PageEx Section SectionGroup FunctionEnd SectionEnd"
									}, l, a, i, r, o, s, {
											className: "title.function",
											begin: /\w+::\w+/
									}, e.NUMBER_MODE]
							}
					}
			}
			,
			8547: e=>{
					e.exports = function(e) {
							const t = /[a-zA-Z@][a-zA-Z0-9_]*/
								, n = {
									$pattern: t,
									keyword: ["@interface", "@class", "@protocol", "@implementation"]
							};
							return {
									name: "Objective-C",
									aliases: ["mm", "objc", "obj-c", "obj-c++", "objective-c++"],
									keywords: {
											"variable.language": ["this", "super"],
											$pattern: t,
											keyword: ["while", "export", "sizeof", "typedef", "const", "struct", "for", "union", "volatile", "static", "mutable", "if", "do", "return", "goto", "enum", "else", "break", "extern", "asm", "case", "default", "register", "explicit", "typename", "switch", "continue", "inline", "readonly", "assign", "readwrite", "self", "@synchronized", "id", "typeof", "nonatomic", "IBOutlet", "IBAction", "strong", "weak", "copy", "in", "out", "inout", "bycopy", "byref", "oneway", "__strong", "__weak", "__block", "__autoreleasing", "@private", "@protected", "@public", "@try", "@property", "@end", "@throw", "@catch", "@finally", "@autoreleasepool", "@synthesize", "@dynamic", "@selector", "@optional", "@required", "@encode", "@package", "@import", "@defs", "@compatibility_alias", "__bridge", "__bridge_transfer", "__bridge_retained", "__bridge_retain", "__covariant", "__contravariant", "__kindof", "_Nonnull", "_Nullable", "_Null_unspecified", "__FUNCTION__", "__PRETTY_FUNCTION__", "__attribute__", "getter", "setter", "retain", "unsafe_unretained", "nonnull", "nullable", "null_unspecified", "null_resettable", "class", "instancetype", "NS_DESIGNATED_INITIALIZER", "NS_UNAVAILABLE", "NS_REQUIRES_SUPER", "NS_RETURNS_INNER_POINTER", "NS_INLINE", "NS_AVAILABLE", "NS_DEPRECATED", "NS_ENUM", "NS_OPTIONS", "NS_SWIFT_UNAVAILABLE", "NS_ASSUME_NONNULL_BEGIN", "NS_ASSUME_NONNULL_END", "NS_REFINED_FOR_SWIFT", "NS_SWIFT_NAME", "NS_SWIFT_NOTHROW", "NS_DURING", "NS_HANDLER", "NS_ENDHANDLER", "NS_VALUERETURN", "NS_VOIDRETURN"],
											literal: ["false", "true", "FALSE", "TRUE", "nil", "YES", "NO", "NULL"],
											built_in: ["dispatch_once_t", "dispatch_queue_t", "dispatch_sync", "dispatch_async", "dispatch_once"],
											type: ["int", "float", "char", "unsigned", "signed", "short", "long", "double", "wchar_t", "unichar", "void", "bool", "BOOL", "id|0", "_Bool"]
									},
									illegal: "</",
									contains: [{
											className: "built_in",
											begin: "\\b(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)\\w+"
									}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.C_NUMBER_MODE, e.QUOTE_STRING_MODE, e.APOS_STRING_MODE, {
											className: "string",
											variants: [{
													begin: '@"',
													end: '"',
													illegal: "\\n",
													contains: [e.BACKSLASH_ESCAPE]
											}]
									}, {
											className: "meta",
											begin: /#\s*[a-z]+\b/,
											end: /$/,
											keywords: {
													keyword: "if else elif endif define undef warning error line pragma ifdef ifndef include"
											},
											contains: [{
													begin: /\\\n/,
													relevance: 0
											}, e.inherit(e.QUOTE_STRING_MODE, {
													className: "string"
											}), {
													className: "string",
													begin: /<.*?>/,
													end: /$/,
													illegal: "\\n"
											}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
									}, {
											className: "class",
											begin: "(" + n.keyword.join("|") + ")\\b",
											end: /(\{|$)/,
											excludeEnd: !0,
											keywords: n,
											contains: [e.UNDERSCORE_TITLE_MODE]
									}, {
											begin: "\\." + e.UNDERSCORE_IDENT_RE,
											relevance: 0
									}]
							}
					}
			}
			,
			9379: e=>{
					e.exports = function(e) {
							return {
									name: "OCaml",
									aliases: ["ml"],
									keywords: {
											$pattern: "[a-z_]\\w*!?",
											keyword: "and as assert asr begin class constraint do done downto else end exception external for fun function functor if in include inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method mod module mutable new object of open! open or private rec sig struct then to try type val! val virtual when while with parser value",
											built_in: "array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit in_channel out_channel ref",
											literal: "true false"
									},
									illegal: /\/\/|>>/,
									contains: [{
											className: "literal",
											begin: "\\[(\\|\\|)?\\]|\\(\\)",
											relevance: 0
									}, e.COMMENT("\\(\\*", "\\*\\)", {
											contains: ["self"]
									}), {
											className: "symbol",
											begin: "'[A-Za-z_](?!')[\\w']*"
									}, {
											className: "type",
											begin: "`[A-Z][\\w']*"
									}, {
											className: "type",
											begin: "\\b[A-Z][\\w']*",
											relevance: 0
									}, {
											begin: "[a-z_]\\w*'[\\w']*",
											relevance: 0
									}, e.inherit(e.APOS_STRING_MODE, {
											className: "string",
											relevance: 0
									}), e.inherit(e.QUOTE_STRING_MODE, {
											illegal: null
									}), {
											className: "number",
											begin: "\\b(0[xX][a-fA-F0-9_]+[Lln]?|0[oO][0-7_]+[Lln]?|0[bB][01_]+[Lln]?|[0-9][0-9_]*([Lln]|(\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)",
											relevance: 0
									}, {
											begin: /->/
									}]
							}
					}
			}
			,
			8390: e=>{
					e.exports = function(e) {
							const t = {
									className: "keyword",
									begin: "\\$(f[asn]|t|vp[rtd]|children)"
							}
								, n = {
									className: "number",
									begin: "\\b\\d+(\\.\\d+)?(e-?\\d+)?",
									relevance: 0
							}
								, i = e.inherit(e.QUOTE_STRING_MODE, {
									illegal: null
							})
								, r = {
									className: "function",
									beginKeywords: "module function",
									end: /=|\{/,
									contains: [{
											className: "params",
											begin: "\\(",
											end: "\\)",
											contains: ["self", n, i, t, {
													className: "literal",
													begin: "false|true|PI|undef"
											}]
									}, e.UNDERSCORE_TITLE_MODE]
							};
							return {
									name: "OpenSCAD",
									aliases: ["scad"],
									keywords: {
											keyword: "function module include use for intersection_for if else \\%",
											literal: "false true PI undef",
											built_in: "circle square polygon text sphere cube cylinder polyhedron translate rotate scale resize mirror multmatrix color offset hull minkowski union difference intersection abs sign sin cos tan acos asin atan atan2 floor round ceil ln log pow sqrt exp rands min max concat lookup str chr search version version_num norm cross parent_module echo import import_dxf dxf_linear_extrude linear_extrude rotate_extrude surface projection render children dxf_cross dxf_dim let assign"
									},
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, n, {
											className: "meta",
											keywords: {
													keyword: "include use"
											},
											begin: "include|use <",
											end: ">"
									}, i, t, {
											begin: "[*!#%]",
											relevance: 0
									}, r]
							}
					}
			}
			,
			7493: e=>{
					e.exports = function(e) {
							const t = {
									$pattern: /\.?\w+/,
									keyword: "abstract add and array as asc aspect assembly async begin break block by case class concat const copy constructor continue create default delegate desc distinct div do downto dynamic each else empty end ensure enum equals event except exit extension external false final finalize finalizer finally flags for forward from function future global group has if implementation implements implies in index inherited inline interface into invariants is iterator join locked locking loop matching method mod module namespace nested new nil not notify nullable of old on operator or order out override parallel params partial pinned private procedure property protected public queryable raise read readonly record reintroduce remove repeat require result reverse sealed select self sequence set shl shr skip static step soft take then to true try tuple type union unit unsafe until uses using var virtual raises volatile where while with write xor yield await mapped deprecated stdcall cdecl pascal register safecall overload library platform reference packed strict published autoreleasepool selector strong weak unretained"
							}
								, n = e.COMMENT(/\{/, /\}/, {
									relevance: 0
							})
								, i = e.COMMENT("\\(\\*", "\\*\\)", {
									relevance: 10
							})
								, r = {
									className: "string",
									begin: "'",
									end: "'",
									contains: [{
											begin: "''"
									}]
							}
								, o = {
									className: "string",
									begin: "(#\\d+)+"
							}
								, s = {
									beginKeywords: "function constructor destructor procedure method",
									end: "[:;]",
									keywords: "function constructor|10 destructor|10 procedure|10 method|10",
									contains: [e.inherit(e.TITLE_MODE, {
											scope: "title.function"
									}), {
											className: "params",
											begin: "\\(",
											end: "\\)",
											keywords: t,
											contains: [r, o]
									}, n, i]
							};
							return {
									name: "Oxygene",
									case_insensitive: !0,
									keywords: t,
									illegal: '("|\\$[G-Zg-z]|\\/\\*|</|=>|->)',
									contains: [n, i, e.C_LINE_COMMENT_MODE, r, o, e.NUMBER_MODE, s, {
											scope: "punctuation",
											match: /;/,
											relevance: 0
									}]
							}
					}
			}
			,
			4479: e=>{
					e.exports = function(e) {
							const t = e.COMMENT(/\{/, /\}/, {
									contains: ["self"]
							});
							return {
									name: "Parser3",
									subLanguage: "xml",
									relevance: 0,
									contains: [e.COMMENT("^#", "$"), e.COMMENT(/\^rem\{/, /\}/, {
											relevance: 10,
											contains: [t]
									}), {
											className: "meta",
											begin: "^@(?:BASE|USE|CLASS|OPTIONS)$",
											relevance: 10
									}, {
											className: "title",
											begin: "@[\\w\\-]+\\[[\\w^;\\-]*\\](?:\\[[\\w^;\\-]*\\])?(?:.*)$"
									}, {
											className: "variable",
											begin: /\$\{?[\w\-.:]+\}?/
									}, {
											className: "keyword",
											begin: /\^[\w\-.:]+/
									}, {
											className: "number",
											begin: "\\^#[0-9a-fA-F]+"
									}, e.C_NUMBER_MODE]
							}
					}
			}
			,
			1854: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = /[dualxmsipngr]{0,12}/
								, i = {
									$pattern: /[\w.]+/,
									keyword: ["abs", "accept", "alarm", "and", "atan2", "bind", "binmode", "bless", "break", "caller", "chdir", "chmod", "chomp", "chop", "chown", "chr", "chroot", "close", "closedir", "connect", "continue", "cos", "crypt", "dbmclose", "dbmopen", "defined", "delete", "die", "do", "dump", "each", "else", "elsif", "endgrent", "endhostent", "endnetent", "endprotoent", "endpwent", "endservent", "eof", "eval", "exec", "exists", "exit", "exp", "fcntl", "fileno", "flock", "for", "foreach", "fork", "format", "formline", "getc", "getgrent", "getgrgid", "getgrnam", "gethostbyaddr", "gethostbyname", "gethostent", "getlogin", "getnetbyaddr", "getnetbyname", "getnetent", "getpeername", "getpgrp", "getpriority", "getprotobyname", "getprotobynumber", "getprotoent", "getpwent", "getpwnam", "getpwuid", "getservbyname", "getservbyport", "getservent", "getsockname", "getsockopt", "given", "glob", "gmtime", "goto", "grep", "gt", "hex", "if", "index", "int", "ioctl", "join", "keys", "kill", "last", "lc", "lcfirst", "length", "link", "listen", "local", "localtime", "log", "lstat", "lt", "ma", "map", "mkdir", "msgctl", "msgget", "msgrcv", "msgsnd", "my", "ne", "next", "no", "not", "oct", "open", "opendir", "or", "ord", "our", "pack", "package", "pipe", "pop", "pos", "print", "printf", "prototype", "push", "q|0", "qq", "quotemeta", "qw", "qx", "rand", "read", "readdir", "readline", "readlink", "readpipe", "recv", "redo", "ref", "rename", "require", "reset", "return", "reverse", "rewinddir", "rindex", "rmdir", "say", "scalar", "seek", "seekdir", "select", "semctl", "semget", "semop", "send", "setgrent", "sethostent", "setnetent", "setpgrp", "setpriority", "setprotoent", "setpwent", "setservent", "setsockopt", "shift", "shmctl", "shmget", "shmread", "shmwrite", "shutdown", "sin", "sleep", "socket", "socketpair", "sort", "splice", "split", "sprintf", "sqrt", "srand", "stat", "state", "study", "sub", "substr", "symlink", "syscall", "sysopen", "sysread", "sysseek", "system", "syswrite", "tell", "telldir", "tie", "tied", "time", "times", "tr", "truncate", "uc", "ucfirst", "umask", "undef", "unless", "unlink", "unpack", "unshift", "untie", "until", "use", "utime", "values", "vec", "wait", "waitpid", "wantarray", "warn", "when", "while", "write", "x|0", "xor", "y|0"].join(" ")
							}
								, r = {
									className: "subst",
									begin: "[$@]\\{",
									end: "\\}",
									keywords: i
							}
								, o = {
									begin: /->\{/,
									end: /\}/
							}
								, s = {
									variants: [{
											begin: /\$\d/
									}, {
											begin: t.concat(/[$%@](\^\w\b|#\w+(::\w+)*|\{\w+\}|\w+(::\w*)*)/, "(?![A-Za-z])(?![@$%])")
									}, {
											begin: /[$%@][^\s\w{]/,
											relevance: 0
									}]
							}
								, a = [e.BACKSLASH_ESCAPE, r, s]
								, l = [/!/, /\//, /\|/, /\?/, /'/, /"/, /#/]
								, PAIRED_DOUBLE_RE = (e,i,r="\\1")=>{
									const o = "\\1" === r ? r : t.concat(r, i);
									return t.concat(t.concat("(?:", e, ")"), i, /(?:\\.|[^\\\/])*?/, o, /(?:\\.|[^\\\/])*?/, r, n)
							}
								, PAIRED_RE = (e,i,r)=>t.concat(t.concat("(?:", e, ")"), i, /(?:\\.|[^\\\/])*?/, r, n)
								, c = [s, e.HASH_COMMENT_MODE, e.COMMENT(/^=\w/, /=cut/, {
									endsWithParent: !0
							}), o, {
									className: "string",
									contains: a,
									variants: [{
											begin: "q[qwxr]?\\s*\\(",
											end: "\\)",
											relevance: 5
									}, {
											begin: "q[qwxr]?\\s*\\[",
											end: "\\]",
											relevance: 5
									}, {
											begin: "q[qwxr]?\\s*\\{",
											end: "\\}",
											relevance: 5
									}, {
											begin: "q[qwxr]?\\s*\\|",
											end: "\\|",
											relevance: 5
									}, {
											begin: "q[qwxr]?\\s*<",
											end: ">",
											relevance: 5
									}, {
											begin: "qw\\s+q",
											end: "q",
											relevance: 5
									}, {
											begin: "'",
											end: "'",
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											begin: '"',
											end: '"'
									}, {
											begin: "`",
											end: "`",
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											begin: /\{\w+\}/,
											relevance: 0
									}, {
											begin: "-?\\w+\\s*=>",
											relevance: 0
									}]
							}, {
									className: "number",
									begin: "(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",
									relevance: 0
							}, {
									begin: "(\\/\\/|" + e.RE_STARTERS_RE + "|\\b(split|return|print|reverse|grep)\\b)\\s*",
									keywords: "split return print reverse grep",
									relevance: 0,
									contains: [e.HASH_COMMENT_MODE, {
											className: "regexp",
											variants: [{
													begin: PAIRED_DOUBLE_RE("s|tr|y", t.either(...l, {
															capture: !0
													}))
											}, {
													begin: PAIRED_DOUBLE_RE("s|tr|y", "\\(", "\\)")
											}, {
													begin: PAIRED_DOUBLE_RE("s|tr|y", "\\[", "\\]")
											}, {
													begin: PAIRED_DOUBLE_RE("s|tr|y", "\\{", "\\}")
											}],
											relevance: 2
									}, {
											className: "regexp",
											variants: [{
													begin: /(m|qr)\/\//,
													relevance: 0
											}, {
													begin: PAIRED_RE("(?:m|qr)?", /\//, /\//)
											}, {
													begin: PAIRED_RE("m|qr", t.either(...l, {
															capture: !0
													}), /\1/)
											}, {
													begin: PAIRED_RE("m|qr", /\(/, /\)/)
											}, {
													begin: PAIRED_RE("m|qr", /\[/, /\]/)
											}, {
													begin: PAIRED_RE("m|qr", /\{/, /\}/)
											}]
									}]
							}, {
									className: "function",
									beginKeywords: "sub",
									end: "(\\s*\\(.*?\\))?[;{]",
									excludeEnd: !0,
									relevance: 5,
									contains: [e.TITLE_MODE]
							}, {
									begin: "-\\w\\b",
									relevance: 0
							}, {
									begin: "^__DATA__$",
									end: "^__END__$",
									subLanguage: "mojolicious",
									contains: [{
											begin: "^@@.*",
											end: "$",
											className: "comment"
									}]
							}];
							return r.contains = c,
							o.contains = c,
							{
									name: "Perl",
									aliases: ["pl", "pm"],
									keywords: i,
									contains: c
							}
					}
			}
			,
			567: e=>{
					e.exports = function(e) {
							return {
									name: "Packet Filter config",
									aliases: ["pf.conf"],
									keywords: {
											$pattern: /[a-z0-9_<>-]+/,
											built_in: "block match pass load anchor|5 antispoof|10 set table",
											keyword: "in out log quick on rdomain inet inet6 proto from port os to route allow-opts divert-packet divert-reply divert-to flags group icmp-type icmp6-type label once probability recieved-on rtable prio queue tos tag tagged user keep fragment for os drop af-to|10 binat-to|10 nat-to|10 rdr-to|10 bitmask least-stats random round-robin source-hash static-port dup-to reply-to route-to parent bandwidth default min max qlimit block-policy debug fingerprints hostid limit loginterface optimization reassemble ruleset-optimization basic none profile skip state-defaults state-policy timeout const counters persist no modulate synproxy state|5 floating if-bound no-sync pflow|10 sloppy source-track global rule max-src-nodes max-src-states max-src-conn max-src-conn-rate overload flush scrub|5 max-mss min-ttl no-df|10 random-id",
											literal: "all any no-route self urpf-failed egress|5 unknown"
									},
									contains: [e.HASH_COMMENT_MODE, e.NUMBER_MODE, e.QUOTE_STRING_MODE, {
											className: "variable",
											begin: /\$[\w\d#@][\w\d_]*/,
											relevance: 0
									}, {
											className: "variable",
											begin: /<(?!\/)/,
											end: />/
									}]
							}
					}
			}
			,
			8304: e=>{
					e.exports = function(e) {
							const t = e.COMMENT("--", "$")
								, n = "\\$([a-zA-Z_]?|[a-zA-Z_][a-zA-Z_0-9]*)\\$"
								, i = "BIGINT INT8 BIGSERIAL SERIAL8 BIT VARYING VARBIT BOOLEAN BOOL BOX BYTEA CHARACTER CHAR VARCHAR CIDR CIRCLE DATE DOUBLE PRECISION FLOAT8 FLOAT INET INTEGER INT INT4 INTERVAL JSON JSONB LINE LSEG|10 MACADDR MACADDR8 MONEY NUMERIC DEC DECIMAL PATH POINT POLYGON REAL FLOAT4 SMALLINT INT2 SMALLSERIAL|10 SERIAL2|10 SERIAL|10 SERIAL4|10 TEXT TIME ZONE TIMETZ|10 TIMESTAMP TIMESTAMPTZ|10 TSQUERY|10 TSVECTOR|10 TXID_SNAPSHOT|10 UUID XML NATIONAL NCHAR INT4RANGE|10 INT8RANGE|10 NUMRANGE|10 TSRANGE|10 TSTZRANGE|10 DATERANGE|10 ANYELEMENT ANYARRAY ANYNONARRAY ANYENUM ANYRANGE CSTRING INTERNAL RECORD PG_DDL_COMMAND VOID UNKNOWN OPAQUE REFCURSOR NAME OID REGPROC|10 REGPROCEDURE|10 REGOPER|10 REGOPERATOR|10 REGCLASS|10 REGTYPE|10 REGROLE|10 REGNAMESPACE|10 REGCONFIG|10 REGDICTIONARY|10 "
								, r = i.trim().split(" ").map((function(e) {
									return e.split("|")[0]
							}
							)).join("|")
								, o = "ARRAY_AGG AVG BIT_AND BIT_OR BOOL_AND BOOL_OR COUNT EVERY JSON_AGG JSONB_AGG JSON_OBJECT_AGG JSONB_OBJECT_AGG MAX MIN MODE STRING_AGG SUM XMLAGG CORR COVAR_POP COVAR_SAMP REGR_AVGX REGR_AVGY REGR_COUNT REGR_INTERCEPT REGR_R2 REGR_SLOPE REGR_SXX REGR_SXY REGR_SYY STDDEV STDDEV_POP STDDEV_SAMP VARIANCE VAR_POP VAR_SAMP PERCENTILE_CONT PERCENTILE_DISC ROW_NUMBER RANK DENSE_RANK PERCENT_RANK CUME_DIST NTILE LAG LEAD FIRST_VALUE LAST_VALUE NTH_VALUE NUM_NONNULLS NUM_NULLS ABS CBRT CEIL CEILING DEGREES DIV EXP FLOOR LN LOG MOD PI POWER RADIANS ROUND SCALE SIGN SQRT TRUNC WIDTH_BUCKET RANDOM SETSEED ACOS ACOSD ASIN ASIND ATAN ATAND ATAN2 ATAN2D COS COSD COT COTD SIN SIND TAN TAND BIT_LENGTH CHAR_LENGTH CHARACTER_LENGTH LOWER OCTET_LENGTH OVERLAY POSITION SUBSTRING TREAT TRIM UPPER ASCII BTRIM CHR CONCAT CONCAT_WS CONVERT CONVERT_FROM CONVERT_TO DECODE ENCODE INITCAP LEFT LENGTH LPAD LTRIM MD5 PARSE_IDENT PG_CLIENT_ENCODING QUOTE_IDENT|10 QUOTE_LITERAL|10 QUOTE_NULLABLE|10 REGEXP_MATCH REGEXP_MATCHES REGEXP_REPLACE REGEXP_SPLIT_TO_ARRAY REGEXP_SPLIT_TO_TABLE REPEAT REPLACE REVERSE RIGHT RPAD RTRIM SPLIT_PART STRPOS SUBSTR TO_ASCII TO_HEX TRANSLATE OCTET_LENGTH GET_BIT GET_BYTE SET_BIT SET_BYTE TO_CHAR TO_DATE TO_NUMBER TO_TIMESTAMP AGE CLOCK_TIMESTAMP|10 DATE_PART DATE_TRUNC ISFINITE JUSTIFY_DAYS JUSTIFY_HOURS JUSTIFY_INTERVAL MAKE_DATE MAKE_INTERVAL|10 MAKE_TIME MAKE_TIMESTAMP|10 MAKE_TIMESTAMPTZ|10 NOW STATEMENT_TIMESTAMP|10 TIMEOFDAY TRANSACTION_TIMESTAMP|10 ENUM_FIRST ENUM_LAST ENUM_RANGE AREA CENTER DIAMETER HEIGHT ISCLOSED ISOPEN NPOINTS PCLOSE POPEN RADIUS WIDTH BOX BOUND_BOX CIRCLE LINE LSEG PATH POLYGON ABBREV BROADCAST HOST HOSTMASK MASKLEN NETMASK NETWORK SET_MASKLEN TEXT INET_SAME_FAMILY INET_MERGE MACADDR8_SET7BIT ARRAY_TO_TSVECTOR GET_CURRENT_TS_CONFIG NUMNODE PLAINTO_TSQUERY PHRASETO_TSQUERY WEBSEARCH_TO_TSQUERY QUERYTREE SETWEIGHT STRIP TO_TSQUERY TO_TSVECTOR JSON_TO_TSVECTOR JSONB_TO_TSVECTOR TS_DELETE TS_FILTER TS_HEADLINE TS_RANK TS_RANK_CD TS_REWRITE TSQUERY_PHRASE TSVECTOR_TO_ARRAY TSVECTOR_UPDATE_TRIGGER TSVECTOR_UPDATE_TRIGGER_COLUMN XMLCOMMENT XMLCONCAT XMLELEMENT XMLFOREST XMLPI XMLROOT XMLEXISTS XML_IS_WELL_FORMED XML_IS_WELL_FORMED_DOCUMENT XML_IS_WELL_FORMED_CONTENT XPATH XPATH_EXISTS XMLTABLE XMLNAMESPACES TABLE_TO_XML TABLE_TO_XMLSCHEMA TABLE_TO_XML_AND_XMLSCHEMA QUERY_TO_XML QUERY_TO_XMLSCHEMA QUERY_TO_XML_AND_XMLSCHEMA CURSOR_TO_XML CURSOR_TO_XMLSCHEMA SCHEMA_TO_XML SCHEMA_TO_XMLSCHEMA SCHEMA_TO_XML_AND_XMLSCHEMA DATABASE_TO_XML DATABASE_TO_XMLSCHEMA DATABASE_TO_XML_AND_XMLSCHEMA XMLATTRIBUTES TO_JSON TO_JSONB ARRAY_TO_JSON ROW_TO_JSON JSON_BUILD_ARRAY JSONB_BUILD_ARRAY JSON_BUILD_OBJECT JSONB_BUILD_OBJECT JSON_OBJECT JSONB_OBJECT JSON_ARRAY_LENGTH JSONB_ARRAY_LENGTH JSON_EACH JSONB_EACH JSON_EACH_TEXT JSONB_EACH_TEXT JSON_EXTRACT_PATH JSONB_EXTRACT_PATH JSON_OBJECT_KEYS JSONB_OBJECT_KEYS JSON_POPULATE_RECORD JSONB_POPULATE_RECORD JSON_POPULATE_RECORDSET JSONB_POPULATE_RECORDSET JSON_ARRAY_ELEMENTS JSONB_ARRAY_ELEMENTS JSON_ARRAY_ELEMENTS_TEXT JSONB_ARRAY_ELEMENTS_TEXT JSON_TYPEOF JSONB_TYPEOF JSON_TO_RECORD JSONB_TO_RECORD JSON_TO_RECORDSET JSONB_TO_RECORDSET JSON_STRIP_NULLS JSONB_STRIP_NULLS JSONB_SET JSONB_INSERT JSONB_PRETTY CURRVAL LASTVAL NEXTVAL SETVAL COALESCE NULLIF GREATEST LEAST ARRAY_APPEND ARRAY_CAT ARRAY_NDIMS ARRAY_DIMS ARRAY_FILL ARRAY_LENGTH ARRAY_LOWER ARRAY_POSITION ARRAY_POSITIONS ARRAY_PREPEND ARRAY_REMOVE ARRAY_REPLACE ARRAY_TO_STRING ARRAY_UPPER CARDINALITY STRING_TO_ARRAY UNNEST ISEMPTY LOWER_INC UPPER_INC LOWER_INF UPPER_INF RANGE_MERGE GENERATE_SERIES GENERATE_SUBSCRIPTS CURRENT_DATABASE CURRENT_QUERY CURRENT_SCHEMA|10 CURRENT_SCHEMAS|10 INET_CLIENT_ADDR INET_CLIENT_PORT INET_SERVER_ADDR INET_SERVER_PORT ROW_SECURITY_ACTIVE FORMAT_TYPE TO_REGCLASS TO_REGPROC TO_REGPROCEDURE TO_REGOPER TO_REGOPERATOR TO_REGTYPE TO_REGNAMESPACE TO_REGROLE COL_DESCRIPTION OBJ_DESCRIPTION SHOBJ_DESCRIPTION TXID_CURRENT TXID_CURRENT_IF_ASSIGNED TXID_CURRENT_SNAPSHOT TXID_SNAPSHOT_XIP TXID_SNAPSHOT_XMAX TXID_SNAPSHOT_XMIN TXID_VISIBLE_IN_SNAPSHOT TXID_STATUS CURRENT_SETTING SET_CONFIG BRIN_SUMMARIZE_NEW_VALUES BRIN_SUMMARIZE_RANGE BRIN_DESUMMARIZE_RANGE GIN_CLEAN_PENDING_LIST SUPPRESS_REDUNDANT_UPDATES_TRIGGER LO_FROM_BYTEA LO_PUT LO_GET LO_CREAT LO_CREATE LO_UNLINK LO_IMPORT LO_EXPORT LOREAD LOWRITE GROUPING CAST ".trim().split(" ").map((function(e) {
									return e.split("|")[0]
							}
							)).join("|");
							return {
									name: "PostgreSQL",
									aliases: ["postgres", "postgresql"],
									supersetOf: "sql",
									case_insensitive: !0,
									keywords: {
											keyword: "ABORT ALTER ANALYZE BEGIN CALL CHECKPOINT|10 CLOSE CLUSTER COMMENT COMMIT COPY CREATE DEALLOCATE DECLARE DELETE DISCARD DO DROP END EXECUTE EXPLAIN FETCH GRANT IMPORT INSERT LISTEN LOAD LOCK MOVE NOTIFY PREPARE REASSIGN|10 REFRESH REINDEX RELEASE RESET REVOKE ROLLBACK SAVEPOINT SECURITY SELECT SET SHOW START TRUNCATE UNLISTEN|10 UPDATE VACUUM|10 VALUES AGGREGATE COLLATION CONVERSION|10 DATABASE DEFAULT PRIVILEGES DOMAIN TRIGGER EXTENSION FOREIGN WRAPPER|10 TABLE FUNCTION GROUP LANGUAGE LARGE OBJECT MATERIALIZED VIEW OPERATOR CLASS FAMILY POLICY PUBLICATION|10 ROLE RULE SCHEMA SEQUENCE SERVER STATISTICS SUBSCRIPTION SYSTEM TABLESPACE CONFIGURATION DICTIONARY PARSER TEMPLATE TYPE USER MAPPING PREPARED ACCESS METHOD CAST AS TRANSFORM TRANSACTION OWNED TO INTO SESSION AUTHORIZATION INDEX PROCEDURE ASSERTION ALL ANALYSE AND ANY ARRAY ASC ASYMMETRIC|10 BOTH CASE CHECK COLLATE COLUMN CONCURRENTLY|10 CONSTRAINT CROSS DEFERRABLE RANGE DESC DISTINCT ELSE EXCEPT FOR FREEZE|10 FROM FULL HAVING ILIKE IN INITIALLY INNER INTERSECT IS ISNULL JOIN LATERAL LEADING LIKE LIMIT NATURAL NOT NOTNULL NULL OFFSET ON ONLY OR ORDER OUTER OVERLAPS PLACING PRIMARY REFERENCES RETURNING SIMILAR SOME SYMMETRIC TABLESAMPLE THEN TRAILING UNION UNIQUE USING VARIADIC|10 VERBOSE WHEN WHERE WINDOW WITH BY RETURNS INOUT OUT SETOF|10 IF STRICT CURRENT CONTINUE OWNER LOCATION OVER PARTITION WITHIN BETWEEN ESCAPE EXTERNAL INVOKER DEFINER WORK RENAME VERSION CONNECTION CONNECT TABLES TEMP TEMPORARY FUNCTIONS SEQUENCES TYPES SCHEMAS OPTION CASCADE RESTRICT ADD ADMIN EXISTS VALID VALIDATE ENABLE DISABLE REPLICA|10 ALWAYS PASSING COLUMNS PATH REF VALUE OVERRIDING IMMUTABLE STABLE VOLATILE BEFORE AFTER EACH ROW PROCEDURAL ROUTINE NO HANDLER VALIDATOR OPTIONS STORAGE OIDS|10 WITHOUT INHERIT DEPENDS CALLED INPUT LEAKPROOF|10 COST ROWS NOWAIT SEARCH UNTIL ENCRYPTED|10 PASSWORD CONFLICT|10 INSTEAD INHERITS CHARACTERISTICS WRITE CURSOR ALSO STATEMENT SHARE EXCLUSIVE INLINE ISOLATION REPEATABLE READ COMMITTED SERIALIZABLE UNCOMMITTED LOCAL GLOBAL SQL PROCEDURES RECURSIVE SNAPSHOT ROLLUP CUBE TRUSTED|10 INCLUDE FOLLOWING PRECEDING UNBOUNDED RANGE GROUPS UNENCRYPTED|10 SYSID FORMAT DELIMITER HEADER QUOTE ENCODING FILTER OFF FORCE_QUOTE FORCE_NOT_NULL FORCE_NULL COSTS BUFFERS TIMING SUMMARY DISABLE_PAGE_SKIPPING RESTART CYCLE GENERATED IDENTITY DEFERRED IMMEDIATE LEVEL LOGGED UNLOGGED OF NOTHING NONE EXCLUDE ATTRIBUTE USAGE ROUTINES TRUE FALSE NAN INFINITY ALIAS BEGIN CONSTANT DECLARE END EXCEPTION RETURN PERFORM|10 RAISE GET DIAGNOSTICS STACKED|10 FOREACH LOOP ELSIF EXIT WHILE REVERSE SLICE DEBUG LOG INFO NOTICE WARNING ASSERT OPEN SUPERUSER NOSUPERUSER CREATEDB NOCREATEDB CREATEROLE NOCREATEROLE INHERIT NOINHERIT LOGIN NOLOGIN REPLICATION NOREPLICATION BYPASSRLS NOBYPASSRLS ",
											built_in: "CURRENT_TIME CURRENT_TIMESTAMP CURRENT_USER CURRENT_CATALOG|10 CURRENT_DATE LOCALTIME LOCALTIMESTAMP CURRENT_ROLE|10 CURRENT_SCHEMA|10 SESSION_USER PUBLIC FOUND NEW OLD TG_NAME|10 TG_WHEN|10 TG_LEVEL|10 TG_OP|10 TG_RELID|10 TG_RELNAME|10 TG_TABLE_NAME|10 TG_TABLE_SCHEMA|10 TG_NARGS|10 TG_ARGV|10 TG_EVENT|10 TG_TAG|10 ROW_COUNT RESULT_OID|10 PG_CONTEXT|10 RETURNED_SQLSTATE COLUMN_NAME CONSTRAINT_NAME PG_DATATYPE_NAME|10 MESSAGE_TEXT TABLE_NAME SCHEMA_NAME PG_EXCEPTION_DETAIL|10 PG_EXCEPTION_HINT|10 PG_EXCEPTION_CONTEXT|10 SQLSTATE SQLERRM|10 SUCCESSFUL_COMPLETION WARNING DYNAMIC_RESULT_SETS_RETURNED IMPLICIT_ZERO_BIT_PADDING NULL_VALUE_ELIMINATED_IN_SET_FUNCTION PRIVILEGE_NOT_GRANTED PRIVILEGE_NOT_REVOKED STRING_DATA_RIGHT_TRUNCATION DEPRECATED_FEATURE NO_DATA NO_ADDITIONAL_DYNAMIC_RESULT_SETS_RETURNED SQL_STATEMENT_NOT_YET_COMPLETE CONNECTION_EXCEPTION CONNECTION_DOES_NOT_EXIST CONNECTION_FAILURE SQLCLIENT_UNABLE_TO_ESTABLISH_SQLCONNECTION SQLSERVER_REJECTED_ESTABLISHMENT_OF_SQLCONNECTION TRANSACTION_RESOLUTION_UNKNOWN PROTOCOL_VIOLATION TRIGGERED_ACTION_EXCEPTION FEATURE_NOT_SUPPORTED INVALID_TRANSACTION_INITIATION LOCATOR_EXCEPTION INVALID_LOCATOR_SPECIFICATION INVALID_GRANTOR INVALID_GRANT_OPERATION INVALID_ROLE_SPECIFICATION DIAGNOSTICS_EXCEPTION STACKED_DIAGNOSTICS_ACCESSED_WITHOUT_ACTIVE_HANDLER CASE_NOT_FOUND CARDINALITY_VIOLATION DATA_EXCEPTION ARRAY_SUBSCRIPT_ERROR CHARACTER_NOT_IN_REPERTOIRE DATETIME_FIELD_OVERFLOW DIVISION_BY_ZERO ERROR_IN_ASSIGNMENT ESCAPE_CHARACTER_CONFLICT INDICATOR_OVERFLOW INTERVAL_FIELD_OVERFLOW INVALID_ARGUMENT_FOR_LOGARITHM INVALID_ARGUMENT_FOR_NTILE_FUNCTION INVALID_ARGUMENT_FOR_NTH_VALUE_FUNCTION INVALID_ARGUMENT_FOR_POWER_FUNCTION INVALID_ARGUMENT_FOR_WIDTH_BUCKET_FUNCTION INVALID_CHARACTER_VALUE_FOR_CAST INVALID_DATETIME_FORMAT INVALID_ESCAPE_CHARACTER INVALID_ESCAPE_OCTET INVALID_ESCAPE_SEQUENCE NONSTANDARD_USE_OF_ESCAPE_CHARACTER INVALID_INDICATOR_PARAMETER_VALUE INVALID_PARAMETER_VALUE INVALID_REGULAR_EXPRESSION INVALID_ROW_COUNT_IN_LIMIT_CLAUSE INVALID_ROW_COUNT_IN_RESULT_OFFSET_CLAUSE INVALID_TABLESAMPLE_ARGUMENT INVALID_TABLESAMPLE_REPEAT INVALID_TIME_ZONE_DISPLACEMENT_VALUE INVALID_USE_OF_ESCAPE_CHARACTER MOST_SPECIFIC_TYPE_MISMATCH NULL_VALUE_NOT_ALLOWED NULL_VALUE_NO_INDICATOR_PARAMETER NUMERIC_VALUE_OUT_OF_RANGE SEQUENCE_GENERATOR_LIMIT_EXCEEDED STRING_DATA_LENGTH_MISMATCH STRING_DATA_RIGHT_TRUNCATION SUBSTRING_ERROR TRIM_ERROR UNTERMINATED_C_STRING ZERO_LENGTH_CHARACTER_STRING FLOATING_POINT_EXCEPTION INVALID_TEXT_REPRESENTATION INVALID_BINARY_REPRESENTATION BAD_COPY_FILE_FORMAT UNTRANSLATABLE_CHARACTER NOT_AN_XML_DOCUMENT INVALID_XML_DOCUMENT INVALID_XML_CONTENT INVALID_XML_COMMENT INVALID_XML_PROCESSING_INSTRUCTION INTEGRITY_CONSTRAINT_VIOLATION RESTRICT_VIOLATION NOT_NULL_VIOLATION FOREIGN_KEY_VIOLATION UNIQUE_VIOLATION CHECK_VIOLATION EXCLUSION_VIOLATION INVALID_CURSOR_STATE INVALID_TRANSACTION_STATE ACTIVE_SQL_TRANSACTION BRANCH_TRANSACTION_ALREADY_ACTIVE HELD_CURSOR_REQUIRES_SAME_ISOLATION_LEVEL INAPPROPRIATE_ACCESS_MODE_FOR_BRANCH_TRANSACTION INAPPROPRIATE_ISOLATION_LEVEL_FOR_BRANCH_TRANSACTION NO_ACTIVE_SQL_TRANSACTION_FOR_BRANCH_TRANSACTION READ_ONLY_SQL_TRANSACTION SCHEMA_AND_DATA_STATEMENT_MIXING_NOT_SUPPORTED NO_ACTIVE_SQL_TRANSACTION IN_FAILED_SQL_TRANSACTION IDLE_IN_TRANSACTION_SESSION_TIMEOUT INVALID_SQL_STATEMENT_NAME TRIGGERED_DATA_CHANGE_VIOLATION INVALID_AUTHORIZATION_SPECIFICATION INVALID_PASSWORD DEPENDENT_PRIVILEGE_DESCRIPTORS_STILL_EXIST DEPENDENT_OBJECTS_STILL_EXIST INVALID_TRANSACTION_TERMINATION SQL_ROUTINE_EXCEPTION FUNCTION_EXECUTED_NO_RETURN_STATEMENT MODIFYING_SQL_DATA_NOT_PERMITTED PROHIBITED_SQL_STATEMENT_ATTEMPTED READING_SQL_DATA_NOT_PERMITTED INVALID_CURSOR_NAME EXTERNAL_ROUTINE_EXCEPTION CONTAINING_SQL_NOT_PERMITTED MODIFYING_SQL_DATA_NOT_PERMITTED PROHIBITED_SQL_STATEMENT_ATTEMPTED READING_SQL_DATA_NOT_PERMITTED EXTERNAL_ROUTINE_INVOCATION_EXCEPTION INVALID_SQLSTATE_RETURNED NULL_VALUE_NOT_ALLOWED TRIGGER_PROTOCOL_VIOLATED SRF_PROTOCOL_VIOLATED EVENT_TRIGGER_PROTOCOL_VIOLATED SAVEPOINT_EXCEPTION INVALID_SAVEPOINT_SPECIFICATION INVALID_CATALOG_NAME INVALID_SCHEMA_NAME TRANSACTION_ROLLBACK TRANSACTION_INTEGRITY_CONSTRAINT_VIOLATION SERIALIZATION_FAILURE STATEMENT_COMPLETION_UNKNOWN DEADLOCK_DETECTED SYNTAX_ERROR_OR_ACCESS_RULE_VIOLATION SYNTAX_ERROR INSUFFICIENT_PRIVILEGE CANNOT_COERCE GROUPING_ERROR WINDOWING_ERROR INVALID_RECURSION INVALID_FOREIGN_KEY INVALID_NAME NAME_TOO_LONG RESERVED_NAME DATATYPE_MISMATCH INDETERMINATE_DATATYPE COLLATION_MISMATCH INDETERMINATE_COLLATION WRONG_OBJECT_TYPE GENERATED_ALWAYS UNDEFINED_COLUMN UNDEFINED_FUNCTION UNDEFINED_TABLE UNDEFINED_PARAMETER UNDEFINED_OBJECT DUPLICATE_COLUMN DUPLICATE_CURSOR DUPLICATE_DATABASE DUPLICATE_FUNCTION DUPLICATE_PREPARED_STATEMENT DUPLICATE_SCHEMA DUPLICATE_TABLE DUPLICATE_ALIAS DUPLICATE_OBJECT AMBIGUOUS_COLUMN AMBIGUOUS_FUNCTION AMBIGUOUS_PARAMETER AMBIGUOUS_ALIAS INVALID_COLUMN_REFERENCE INVALID_COLUMN_DEFINITION INVALID_CURSOR_DEFINITION INVALID_DATABASE_DEFINITION INVALID_FUNCTION_DEFINITION INVALID_PREPARED_STATEMENT_DEFINITION INVALID_SCHEMA_DEFINITION INVALID_TABLE_DEFINITION INVALID_OBJECT_DEFINITION WITH_CHECK_OPTION_VIOLATION INSUFFICIENT_RESOURCES DISK_FULL OUT_OF_MEMORY TOO_MANY_CONNECTIONS CONFIGURATION_LIMIT_EXCEEDED PROGRAM_LIMIT_EXCEEDED STATEMENT_TOO_COMPLEX TOO_MANY_COLUMNS TOO_MANY_ARGUMENTS OBJECT_NOT_IN_PREREQUISITE_STATE OBJECT_IN_USE CANT_CHANGE_RUNTIME_PARAM LOCK_NOT_AVAILABLE OPERATOR_INTERVENTION QUERY_CANCELED ADMIN_SHUTDOWN CRASH_SHUTDOWN CANNOT_CONNECT_NOW DATABASE_DROPPED SYSTEM_ERROR IO_ERROR UNDEFINED_FILE DUPLICATE_FILE SNAPSHOT_TOO_OLD CONFIG_FILE_ERROR LOCK_FILE_EXISTS FDW_ERROR FDW_COLUMN_NAME_NOT_FOUND FDW_DYNAMIC_PARAMETER_VALUE_NEEDED FDW_FUNCTION_SEQUENCE_ERROR FDW_INCONSISTENT_DESCRIPTOR_INFORMATION FDW_INVALID_ATTRIBUTE_VALUE FDW_INVALID_COLUMN_NAME FDW_INVALID_COLUMN_NUMBER FDW_INVALID_DATA_TYPE FDW_INVALID_DATA_TYPE_DESCRIPTORS FDW_INVALID_DESCRIPTOR_FIELD_IDENTIFIER FDW_INVALID_HANDLE FDW_INVALID_OPTION_INDEX FDW_INVALID_OPTION_NAME FDW_INVALID_STRING_LENGTH_OR_BUFFER_LENGTH FDW_INVALID_STRING_FORMAT FDW_INVALID_USE_OF_NULL_POINTER FDW_TOO_MANY_HANDLES FDW_OUT_OF_MEMORY FDW_NO_SCHEMAS FDW_OPTION_NAME_NOT_FOUND FDW_REPLY_HANDLE FDW_SCHEMA_NOT_FOUND FDW_TABLE_NOT_FOUND FDW_UNABLE_TO_CREATE_EXECUTION FDW_UNABLE_TO_CREATE_REPLY FDW_UNABLE_TO_ESTABLISH_CONNECTION PLPGSQL_ERROR RAISE_EXCEPTION NO_DATA_FOUND TOO_MANY_ROWS ASSERT_FAILURE INTERNAL_ERROR DATA_CORRUPTED INDEX_CORRUPTED "
									},
									illegal: /:==|\W\s*\(\*|(^|\s)\$[a-z]|\{\{|[a-z]:\s*$|\.\.\.|TO:|DO:/,
									contains: [{
											className: "keyword",
											variants: [{
													begin: /\bTEXT\s*SEARCH\b/
											}, {
													begin: /\b(PRIMARY|FOREIGN|FOR(\s+NO)?)\s+KEY\b/
											}, {
													begin: /\bPARALLEL\s+(UNSAFE|RESTRICTED|SAFE)\b/
											}, {
													begin: /\bSTORAGE\s+(PLAIN|EXTERNAL|EXTENDED|MAIN)\b/
											}, {
													begin: /\bMATCH\s+(FULL|PARTIAL|SIMPLE)\b/
											}, {
													begin: /\bNULLS\s+(FIRST|LAST)\b/
											}, {
													begin: /\bEVENT\s+TRIGGER\b/
											}, {
													begin: /\b(MAPPING|OR)\s+REPLACE\b/
											}, {
													begin: /\b(FROM|TO)\s+(PROGRAM|STDIN|STDOUT)\b/
											}, {
													begin: /\b(SHARE|EXCLUSIVE)\s+MODE\b/
											}, {
													begin: /\b(LEFT|RIGHT)\s+(OUTER\s+)?JOIN\b/
											}, {
													begin: /\b(FETCH|MOVE)\s+(NEXT|PRIOR|FIRST|LAST|ABSOLUTE|RELATIVE|FORWARD|BACKWARD)\b/
											}, {
													begin: /\bPRESERVE\s+ROWS\b/
											}, {
													begin: /\bDISCARD\s+PLANS\b/
											}, {
													begin: /\bREFERENCING\s+(OLD|NEW)\b/
											}, {
													begin: /\bSKIP\s+LOCKED\b/
											}, {
													begin: /\bGROUPING\s+SETS\b/
											}, {
													begin: /\b(BINARY|INSENSITIVE|SCROLL|NO\s+SCROLL)\s+(CURSOR|FOR)\b/
											}, {
													begin: /\b(WITH|WITHOUT)\s+HOLD\b/
											}, {
													begin: /\bWITH\s+(CASCADED|LOCAL)\s+CHECK\s+OPTION\b/
											}, {
													begin: /\bEXCLUDE\s+(TIES|NO\s+OTHERS)\b/
											}, {
													begin: /\bFORMAT\s+(TEXT|XML|JSON|YAML)\b/
											}, {
													begin: /\bSET\s+((SESSION|LOCAL)\s+)?NAMES\b/
											}, {
													begin: /\bIS\s+(NOT\s+)?UNKNOWN\b/
											}, {
													begin: /\bSECURITY\s+LABEL\b/
											}, {
													begin: /\bSTANDALONE\s+(YES|NO|NO\s+VALUE)\b/
											}, {
													begin: /\bWITH\s+(NO\s+)?DATA\b/
											}, {
													begin: /\b(FOREIGN|SET)\s+DATA\b/
											}, {
													begin: /\bSET\s+(CATALOG|CONSTRAINTS)\b/
											}, {
													begin: /\b(WITH|FOR)\s+ORDINALITY\b/
											}, {
													begin: /\bIS\s+(NOT\s+)?DOCUMENT\b/
											}, {
													begin: /\bXML\s+OPTION\s+(DOCUMENT|CONTENT)\b/
											}, {
													begin: /\b(STRIP|PRESERVE)\s+WHITESPACE\b/
											}, {
													begin: /\bNO\s+(ACTION|MAXVALUE|MINVALUE)\b/
											}, {
													begin: /\bPARTITION\s+BY\s+(RANGE|LIST|HASH)\b/
											}, {
													begin: /\bAT\s+TIME\s+ZONE\b/
											}, {
													begin: /\bGRANTED\s+BY\b/
											}, {
													begin: /\bRETURN\s+(QUERY|NEXT)\b/
											}, {
													begin: /\b(ATTACH|DETACH)\s+PARTITION\b/
											}, {
													begin: /\bFORCE\s+ROW\s+LEVEL\s+SECURITY\b/
											}, {
													begin: /\b(INCLUDING|EXCLUDING)\s+(COMMENTS|CONSTRAINTS|DEFAULTS|IDENTITY|INDEXES|STATISTICS|STORAGE|ALL)\b/
											}, {
													begin: /\bAS\s+(ASSIGNMENT|IMPLICIT|PERMISSIVE|RESTRICTIVE|ENUM|RANGE)\b/
											}]
									}, {
											begin: /\b(FORMAT|FAMILY|VERSION)\s*\(/
									}, {
											begin: /\bINCLUDE\s*\(/,
											keywords: "INCLUDE"
									}, {
											begin: /\bRANGE(?!\s*(BETWEEN|UNBOUNDED|CURRENT|[-0-9]+))/
									}, {
											begin: /\b(VERSION|OWNER|TEMPLATE|TABLESPACE|CONNECTION\s+LIMIT|PROCEDURE|RESTRICT|JOIN|PARSER|COPY|START|END|COLLATION|INPUT|ANALYZE|STORAGE|LIKE|DEFAULT|DELIMITER|ENCODING|COLUMN|CONSTRAINT|TABLE|SCHEMA)\s*=/
									}, {
											begin: /\b(PG_\w+?|HAS_[A-Z_]+_PRIVILEGE)\b/,
											relevance: 10
									}, {
											begin: /\bEXTRACT\s*\(/,
											end: /\bFROM\b/,
											returnEnd: !0,
											keywords: {
													type: "CENTURY DAY DECADE DOW DOY EPOCH HOUR ISODOW ISOYEAR MICROSECONDS MILLENNIUM MILLISECONDS MINUTE MONTH QUARTER SECOND TIMEZONE TIMEZONE_HOUR TIMEZONE_MINUTE WEEK YEAR"
											}
									}, {
											begin: /\b(XMLELEMENT|XMLPI)\s*\(\s*NAME/,
											keywords: {
													keyword: "NAME"
											}
									}, {
											begin: /\b(XMLPARSE|XMLSERIALIZE)\s*\(\s*(DOCUMENT|CONTENT)/,
											keywords: {
													keyword: "DOCUMENT CONTENT"
											}
									}, {
											beginKeywords: "CACHE INCREMENT MAXVALUE MINVALUE",
											end: e.C_NUMBER_RE,
											returnEnd: !0,
											keywords: "BY CACHE INCREMENT MAXVALUE MINVALUE"
									}, {
											className: "type",
											begin: /\b(WITH|WITHOUT)\s+TIME\s+ZONE\b/
									}, {
											className: "type",
											begin: /\bINTERVAL\s+(YEAR|MONTH|DAY|HOUR|MINUTE|SECOND)(\s+TO\s+(MONTH|HOUR|MINUTE|SECOND))?\b/
									}, {
											begin: /\bRETURNS\s+(LANGUAGE_HANDLER|TRIGGER|EVENT_TRIGGER|FDW_HANDLER|INDEX_AM_HANDLER|TSM_HANDLER)\b/,
											keywords: {
													keyword: "RETURNS",
													type: "LANGUAGE_HANDLER TRIGGER EVENT_TRIGGER FDW_HANDLER INDEX_AM_HANDLER TSM_HANDLER"
											}
									}, {
											begin: "\\b(" + o + ")\\s*\\("
									}, {
											begin: "\\.(" + r + ")\\b"
									}, {
											begin: "\\b(" + r + ")\\s+PATH\\b",
											keywords: {
													keyword: "PATH",
													type: i.replace("PATH ", "")
											}
									}, {
											className: "type",
											begin: "\\b(" + r + ")\\b"
									}, {
											className: "string",
											begin: "'",
											end: "'",
											contains: [{
													begin: "''"
											}]
									}, {
											className: "string",
											begin: "(e|E|u&|U&)'",
											end: "'",
											contains: [{
													begin: "\\\\."
											}],
											relevance: 10
									}, e.END_SAME_AS_BEGIN({
											begin: n,
											end: n,
											contains: [{
													subLanguage: ["pgsql", "perl", "python", "tcl", "r", "lua", "java", "php", "ruby", "bash", "scheme", "xml", "json"],
													endsWithParent: !0
											}]
									}), {
											begin: '"',
											end: '"',
											contains: [{
													begin: '""'
											}]
									}, e.C_NUMBER_MODE, e.C_BLOCK_COMMENT_MODE, t, {
											className: "meta",
											variants: [{
													begin: "%(ROW)?TYPE",
													relevance: 10
											}, {
													begin: "\\$\\d+"
											}, {
													begin: "^#\\w",
													end: "$"
											}]
									}, {
											className: "symbol",
											begin: "<<\\s*[a-zA-Z_][a-zA-Z_0-9$]*\\s*>>",
											relevance: 10
									}]
							}
					}
			}
			,
			8924: e=>{
					e.exports = function(e) {
							return {
									name: "PHP template",
									subLanguage: "xml",
									contains: [{
											begin: /<\?(php|=)?/,
											end: /\?>/,
											subLanguage: "php",
											contains: [{
													begin: "/\\*",
													end: "\\*/",
													skip: !0
											}, {
													begin: 'b"',
													end: '"',
													skip: !0
											}, {
													begin: "b'",
													end: "'",
													skip: !0
											}, e.inherit(e.APOS_STRING_MODE, {
													illegal: null,
													className: null,
													contains: null,
													skip: !0
											}), e.inherit(e.QUOTE_STRING_MODE, {
													illegal: null,
													className: null,
													contains: null,
													skip: !0
											})]
									}]
							}
					}
			}
			,
			9496: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = /(?![A-Za-z0-9])(?![$])/
								, i = t.concat(/[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/, n)
								, r = t.concat(/(\\?[A-Z][a-z0-9_\x7f-\xff]+|\\?[A-Z]+(?=[A-Z][a-z0-9_\x7f-\xff])){1,}/, n)
								, o = {
									scope: "variable",
									match: "\\$+" + i
							}
								, s = {
									scope: "subst",
									variants: [{
											begin: /\$\w+/
									}, {
											begin: /\{\$/,
											end: /\}/
									}]
							}
								, a = e.inherit(e.APOS_STRING_MODE, {
									illegal: null
							})
								, l = "[ \t\n]"
								, c = {
									scope: "string",
									variants: [e.inherit(e.QUOTE_STRING_MODE, {
											illegal: null,
											contains: e.QUOTE_STRING_MODE.contains.concat(s)
									}), a, e.END_SAME_AS_BEGIN({
											begin: /<<<[ \t]*(\w+)\n/,
											end: /[ \t]*(\w+)\b/,
											contains: e.QUOTE_STRING_MODE.contains.concat(s)
									})]
							}
								, d = {
									scope: "number",
									variants: [{
											begin: "\\b0[bB][01]+(?:_[01]+)*\\b"
									}, {
											begin: "\\b0[oO][0-7]+(?:_[0-7]+)*\\b"
									}, {
											begin: "\\b0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*\\b"
									}, {
											begin: "(?:\\b\\d+(?:_\\d+)*(\\.(?:\\d+(?:_\\d+)*))?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?"
									}],
									relevance: 0
							}
								, p = ["false", "null", "true"]
								, u = ["__CLASS__", "__DIR__", "__FILE__", "__FUNCTION__", "__COMPILER_HALT_OFFSET__", "__LINE__", "__METHOD__", "__NAMESPACE__", "__TRAIT__", "die", "echo", "exit", "include", "include_once", "print", "require", "require_once", "array", "abstract", "and", "as", "binary", "bool", "boolean", "break", "callable", "case", "catch", "class", "clone", "const", "continue", "declare", "default", "do", "double", "else", "elseif", "empty", "enddeclare", "endfor", "endforeach", "endif", "endswitch", "endwhile", "enum", "eval", "extends", "final", "finally", "float", "for", "foreach", "from", "global", "goto", "if", "implements", "instanceof", "insteadof", "int", "integer", "interface", "isset", "iterable", "list", "match|0", "mixed", "new", "never", "object", "or", "private", "protected", "public", "readonly", "real", "return", "string", "switch", "throw", "trait", "try", "unset", "use", "var", "void", "while", "xor", "yield"]
								, h = ["Error|0", "AppendIterator", "ArgumentCountError", "ArithmeticError", "ArrayIterator", "ArrayObject", "AssertionError", "BadFunctionCallException", "BadMethodCallException", "CachingIterator", "CallbackFilterIterator", "CompileError", "Countable", "DirectoryIterator", "DivisionByZeroError", "DomainException", "EmptyIterator", "ErrorException", "Exception", "FilesystemIterator", "FilterIterator", "GlobIterator", "InfiniteIterator", "InvalidArgumentException", "IteratorIterator", "LengthException", "LimitIterator", "LogicException", "MultipleIterator", "NoRewindIterator", "OutOfBoundsException", "OutOfRangeException", "OuterIterator", "OverflowException", "ParentIterator", "ParseError", "RangeException", "RecursiveArrayIterator", "RecursiveCachingIterator", "RecursiveCallbackFilterIterator", "RecursiveDirectoryIterator", "RecursiveFilterIterator", "RecursiveIterator", "RecursiveIteratorIterator", "RecursiveRegexIterator", "RecursiveTreeIterator", "RegexIterator", "RuntimeException", "SeekableIterator", "SplDoublyLinkedList", "SplFileInfo", "SplFileObject", "SplFixedArray", "SplHeap", "SplMaxHeap", "SplMinHeap", "SplObjectStorage", "SplObserver", "SplPriorityQueue", "SplQueue", "SplStack", "SplSubject", "SplTempFileObject", "TypeError", "UnderflowException", "UnexpectedValueException", "UnhandledMatchError", "ArrayAccess", "BackedEnum", "Closure", "Fiber", "Generator", "Iterator", "IteratorAggregate", "Serializable", "Stringable", "Throwable", "Traversable", "UnitEnum", "WeakReference", "WeakMap", "Directory", "__PHP_Incomplete_Class", "parent", "php_user_filter", "self", "static", "stdClass"]
								, m = {
									keyword: u,
									literal: (e=>{
											const t = [];
											return e.forEach((e=>{
													t.push(e),
													e.toLowerCase() === e ? t.push(e.toUpperCase()) : t.push(e.toLowerCase())
											}
											)),
											t
									}
									)(p),
									built_in: h
							}
								, normalizeKeywords = e=>e.map((e=>e.replace(/\|\d+$/, "")))
								, g = {
									variants: [{
											match: [/new/, t.concat(l, "+"), t.concat("(?!", normalizeKeywords(h).join("\\b|"), "\\b)"), r],
											scope: {
													1: "keyword",
													4: "title.class"
											}
									}]
							}
								, _ = t.concat(i, "\\b(?!\\()")
								, f = {
									variants: [{
											match: [t.concat(/::/, t.lookahead(/(?!class\b)/)), _],
											scope: {
													2: "variable.constant"
											}
									}, {
											match: [/::/, /class/],
											scope: {
													2: "variable.language"
											}
									}, {
											match: [r, t.concat(/::/, t.lookahead(/(?!class\b)/)), _],
											scope: {
													1: "title.class",
													3: "variable.constant"
											}
									}, {
											match: [r, t.concat("::", t.lookahead(/(?!class\b)/))],
											scope: {
													1: "title.class"
											}
									}, {
											match: [r, /::/, /class/],
											scope: {
													1: "title.class",
													3: "variable.language"
											}
									}]
							}
								, y = {
									scope: "attr",
									match: t.concat(i, t.lookahead(":"), t.lookahead(/(?!::)/))
							}
								, v = {
									relevance: 0,
									begin: /\(/,
									end: /\)/,
									keywords: m,
									contains: [y, o, f, e.C_BLOCK_COMMENT_MODE, c, d, g]
							}
								, b = {
									relevance: 0,
									match: [/\b/, t.concat("(?!fn\\b|function\\b|", normalizeKeywords(u).join("\\b|"), "|", normalizeKeywords(h).join("\\b|"), "\\b)"), i, t.concat(l, "*"), t.lookahead(/(?=\()/)],
									scope: {
											3: "title.function.invoke"
									},
									contains: [v]
							};
							v.contains.push(b);
							const S = [y, f, e.C_BLOCK_COMMENT_MODE, c, d, g];
							return {
									case_insensitive: !1,
									keywords: m,
									contains: [{
											begin: t.concat(/#\[\s*/, r),
											beginScope: "meta",
											end: /]/,
											endScope: "meta",
											keywords: {
													literal: p,
													keyword: ["new", "array"]
											},
											contains: [{
													begin: /\[/,
													end: /]/,
													keywords: {
															literal: p,
															keyword: ["new", "array"]
													},
													contains: ["self", ...S]
											}, ...S, {
													scope: "meta",
													match: r
											}]
									}, e.HASH_COMMENT_MODE, e.COMMENT("//", "$"), e.COMMENT("/\\*", "\\*/", {
											contains: [{
													scope: "doctag",
													match: "@[A-Za-z]+"
											}]
									}), {
											match: /__halt_compiler\(\);/,
											keywords: "__halt_compiler",
											starts: {
													scope: "comment",
													end: e.MATCH_NOTHING_RE,
													contains: [{
															match: /\?>/,
															scope: "meta",
															endsParent: !0
													}]
											}
									}, {
											scope: "meta",
											variants: [{
													begin: /<\?php/,
													relevance: 10
											}, {
													begin: /<\?=/
											}, {
													begin: /<\?/,
													relevance: .1
											}, {
													begin: /\?>/
											}]
									}, {
											scope: "variable.language",
											match: /\$this\b/
									}, o, b, f, {
											match: [/const/, /\s/, i],
											scope: {
													1: "keyword",
													3: "variable.constant"
											}
									}, g, {
											scope: "function",
											relevance: 0,
											beginKeywords: "fn function",
											end: /[;{]/,
											excludeEnd: !0,
											illegal: "[$%\\[]",
											contains: [{
													beginKeywords: "use"
											}, e.UNDERSCORE_TITLE_MODE, {
													begin: "=>",
													endsParent: !0
											}, {
													scope: "params",
													begin: "\\(",
													end: "\\)",
													excludeBegin: !0,
													excludeEnd: !0,
													keywords: m,
													contains: ["self", o, f, e.C_BLOCK_COMMENT_MODE, c, d]
											}]
									}, {
											scope: "class",
											variants: [{
													beginKeywords: "enum",
													illegal: /[($"]/
											}, {
													beginKeywords: "class interface trait",
													illegal: /[:($"]/
											}],
											relevance: 0,
											end: /\{/,
											excludeEnd: !0,
											contains: [{
													beginKeywords: "extends implements"
											}, e.UNDERSCORE_TITLE_MODE]
									}, {
											beginKeywords: "namespace",
											relevance: 0,
											end: ";",
											illegal: /[.']/,
											contains: [e.inherit(e.UNDERSCORE_TITLE_MODE, {
													scope: "title.class"
											})]
									}, {
											beginKeywords: "use",
											relevance: 0,
											end: ";",
											contains: [{
													match: /\b(as|const|function)\b/,
													scope: "keyword"
											}, e.UNDERSCORE_TITLE_MODE]
									}, c, d]
							}
					}
			}
			,
			2066: e=>{
					e.exports = function(e) {
							return {
									name: "Plain text",
									aliases: ["text", "txt"],
									disableAutodetect: !0
							}
					}
			}
			,
			7190: e=>{
					e.exports = function(e) {
							return {
									name: "Pony",
									keywords: {
											keyword: "actor addressof and as be break class compile_error compile_intrinsic consume continue delegate digestof do else elseif embed end error for fun if ifdef in interface is isnt lambda let match new not object or primitive recover repeat return struct then trait try type until use var where while with xor",
											meta: "iso val tag trn box ref",
											literal: "this false true"
									},
									contains: [{
											className: "type",
											begin: "\\b_?[A-Z][\\w]*",
											relevance: 0
									}, {
											className: "string",
											begin: '"""',
											end: '"""',
											relevance: 10
									}, {
											className: "string",
											begin: '"',
											end: '"',
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											className: "string",
											begin: "'",
											end: "'",
											contains: [e.BACKSLASH_ESCAPE],
											relevance: 0
									}, {
											begin: e.IDENT_RE + "'",
											relevance: 0
									}, {
											className: "number",
											begin: "(-?)(\\b0[xX][a-fA-F0-9]+|\\b0[bB][01]+|(\\b\\d+(_\\d+)?(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",
											relevance: 0
									}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
							}
					}
			}
			,
			3344: e=>{
					e.exports = function(e) {
							const t = {
									$pattern: /-?[A-z\.\-]+\b/,
									keyword: "if else foreach return do while until elseif begin for trap data dynamicparam end break throw param continue finally in switch exit filter try process catch hidden static parameter",
									built_in: "ac asnp cat cd CFS chdir clc clear clhy cli clp cls clv cnsn compare copy cp cpi cpp curl cvpa dbp del diff dir dnsn ebp echo|0 epal epcsv epsn erase etsn exsn fc fhx fl ft fw gal gbp gc gcb gci gcm gcs gdr gerr ghy gi gin gjb gl gm gmo gp gps gpv group gsn gsnp gsv gtz gu gv gwmi h history icm iex ihy ii ipal ipcsv ipmo ipsn irm ise iwmi iwr kill lp ls man md measure mi mount move mp mv nal ndr ni nmo npssc nsn nv ogv oh popd ps pushd pwd r rbp rcjb rcsn rd rdr ren ri rjb rm rmdir rmo rni rnp rp rsn rsnp rujb rv rvpa rwmi sajb sal saps sasv sbp sc scb select set shcm si sl sleep sls sort sp spjb spps spsv start stz sujb sv swmi tee trcm type wget where wjb write"
							}
								, n = {
									begin: "`[\\s\\S]",
									relevance: 0
							}
								, i = {
									className: "variable",
									variants: [{
											begin: /\$\B/
									}, {
											className: "keyword",
											begin: /\$this/
									}, {
											begin: /\$[\w\d][\w\d_:]*/
									}]
							}
								, r = {
									className: "string",
									variants: [{
											begin: /"/,
											end: /"/
									}, {
											begin: /@"/,
											end: /^"@/
									}],
									contains: [n, i, {
											className: "variable",
											begin: /\$[A-z]/,
											end: /[^A-z]/
									}]
							}
								, o = {
									className: "string",
									variants: [{
											begin: /'/,
											end: /'/
									}, {
											begin: /@'/,
											end: /^'@/
									}]
							}
								, s = e.inherit(e.COMMENT(null, null), {
									variants: [{
											begin: /#/,
											end: /$/
									}, {
											begin: /<#/,
											end: /#>/
									}],
									contains: [{
											className: "doctag",
											variants: [{
													begin: /\.(synopsis|description|example|inputs|outputs|notes|link|component|role|functionality)/
											}, {
													begin: /\.(parameter|forwardhelptargetname|forwardhelpcategory|remotehelprunspace|externalhelp)\s+\S+/
											}]
									}]
							})
								, a = {
									className: "built_in",
									variants: [{
											begin: "(".concat("Add|Clear|Close|Copy|Enter|Exit|Find|Format|Get|Hide|Join|Lock|Move|New|Open|Optimize|Pop|Push|Redo|Remove|Rename|Reset|Resize|Search|Select|Set|Show|Skip|Split|Step|Switch|Undo|Unlock|Watch|Backup|Checkpoint|Compare|Compress|Convert|ConvertFrom|ConvertTo|Dismount|Edit|Expand|Export|Group|Import|Initialize|Limit|Merge|Mount|Out|Publish|Restore|Save|Sync|Unpublish|Update|Approve|Assert|Build|Complete|Confirm|Deny|Deploy|Disable|Enable|Install|Invoke|Register|Request|Restart|Resume|Start|Stop|Submit|Suspend|Uninstall|Unregister|Wait|Debug|Measure|Ping|Repair|Resolve|Test|Trace|Connect|Disconnect|Read|Receive|Send|Write|Block|Grant|Protect|Revoke|Unblock|Unprotect|Use|ForEach|Sort|Tee|Where", ")+(-)[\\w\\d]+")
									}]
							}
								, l = {
									className: "class",
									beginKeywords: "class enum",
									end: /\s*[{]/,
									excludeEnd: !0,
									relevance: 0,
									contains: [e.TITLE_MODE]
							}
								, c = {
									className: "function",
									begin: /function\s+/,
									end: /\s*\{|$/,
									excludeEnd: !0,
									returnBegin: !0,
									relevance: 0,
									contains: [{
											begin: "function",
											relevance: 0,
											className: "keyword"
									}, {
											className: "title",
											begin: /\w[\w\d]*((-)[\w\d]+)*/,
											relevance: 0
									}, {
											begin: /\(/,
											end: /\)/,
											className: "params",
											relevance: 0,
											contains: [i]
									}]
							}
								, d = {
									begin: /using\s/,
									end: /$/,
									returnBegin: !0,
									contains: [r, o, {
											className: "keyword",
											begin: /(using|assembly|command|module|namespace|type)/
									}]
							}
								, p = {
									variants: [{
											className: "operator",
											begin: "(".concat("-and|-as|-band|-bnot|-bor|-bxor|-casesensitive|-ccontains|-ceq|-cge|-cgt|-cle|-clike|-clt|-cmatch|-cne|-cnotcontains|-cnotlike|-cnotmatch|-contains|-creplace|-csplit|-eq|-exact|-f|-file|-ge|-gt|-icontains|-ieq|-ige|-igt|-ile|-ilike|-ilt|-imatch|-in|-ine|-inotcontains|-inotlike|-inotmatch|-ireplace|-is|-isnot|-isplit|-join|-le|-like|-lt|-match|-ne|-not|-notcontains|-notin|-notlike|-notmatch|-or|-regex|-replace|-shl|-shr|-split|-wildcard|-xor", ")\\b")
									}, {
											className: "literal",
											begin: /(-){1,2}[\w\d-]+/,
											relevance: 0
									}]
							}
								, u = {
									className: "function",
									begin: /\[.*\]\s*[\w]+[ ]??\(/,
									end: /$/,
									returnBegin: !0,
									relevance: 0,
									contains: [{
											className: "keyword",
											begin: "(".concat(t.keyword.toString().replace(/\s/g, "|"), ")\\b"),
											endsParent: !0,
											relevance: 0
									}, e.inherit(e.TITLE_MODE, {
											endsParent: !0
									})]
							}
								, h = [u, s, n, e.NUMBER_MODE, r, o, a, i, {
									className: "literal",
									begin: /\$(null|true|false)\b/
							}, {
									className: "selector-tag",
									begin: /@\B/,
									relevance: 0
							}]
								, m = {
									begin: /\[/,
									end: /\]/,
									excludeBegin: !0,
									excludeEnd: !0,
									relevance: 0,
									contains: [].concat("self", h, {
											begin: "(" + ["string", "char", "byte", "int", "long", "bool", "decimal", "single", "double", "DateTime", "xml", "array", "hashtable", "void"].join("|") + ")",
											className: "built_in",
											relevance: 0
									}, {
											className: "type",
											begin: /[\.\w\d]+/,
											relevance: 0
									})
							};
							return u.contains.unshift(m),
							{
									name: "PowerShell",
									aliases: ["pwsh", "ps", "ps1"],
									case_insensitive: !0,
									keywords: t,
									contains: h.concat(l, c, d, p, m)
							}
					}
			}
			,
			5148: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = ["displayHeight", "displayWidth", "mouseY", "mouseX", "mousePressed", "pmouseX", "pmouseY", "key", "keyCode", "pixels", "focused", "frameCount", "frameRate", "height", "width", "size", "createGraphics", "beginDraw", "createShape", "loadShape", "PShape", "arc", "ellipse", "line", "point", "quad", "rect", "triangle", "bezier", "bezierDetail", "bezierPoint", "bezierTangent", "curve", "curveDetail", "curvePoint", "curveTangent", "curveTightness", "shape", "shapeMode", "beginContour", "beginShape", "bezierVertex", "curveVertex", "endContour", "endShape", "quadraticVertex", "vertex", "ellipseMode", "noSmooth", "rectMode", "smooth", "strokeCap", "strokeJoin", "strokeWeight", "mouseClicked", "mouseDragged", "mouseMoved", "mousePressed", "mouseReleased", "mouseWheel", "keyPressed", "keyPressedkeyReleased", "keyTyped", "print", "println", "save", "saveFrame", "day", "hour", "millis", "minute", "month", "second", "year", "background", "clear", "colorMode", "fill", "noFill", "noStroke", "stroke", "alpha", "blue", "brightness", "color", "green", "hue", "lerpColor", "red", "saturation", "modelX", "modelY", "modelZ", "screenX", "screenY", "screenZ", "ambient", "emissive", "shininess", "specular", "add", "createImage", "beginCamera", "camera", "endCamera", "frustum", "ortho", "perspective", "printCamera", "printProjection", "cursor", "frameRate", "noCursor", "exit", "loop", "noLoop", "popStyle", "pushStyle", "redraw", "binary", "boolean", "byte", "char", "float", "hex", "int", "str", "unbinary", "unhex", "join", "match", "matchAll", "nf", "nfc", "nfp", "nfs", "split", "splitTokens", "trim", "append", "arrayCopy", "concat", "expand", "reverse", "shorten", "sort", "splice", "subset", "box", "sphere", "sphereDetail", "createInput", "createReader", "loadBytes", "loadJSONArray", "loadJSONObject", "loadStrings", "loadTable", "loadXML", "open", "parseXML", "saveTable", "selectFolder", "selectInput", "beginRaw", "beginRecord", "createOutput", "createWriter", "endRaw", "endRecord", "PrintWritersaveBytes", "saveJSONArray", "saveJSONObject", "saveStream", "saveStrings", "saveXML", "selectOutput", "popMatrix", "printMatrix", "pushMatrix", "resetMatrix", "rotate", "rotateX", "rotateY", "rotateZ", "scale", "shearX", "shearY", "translate", "ambientLight", "directionalLight", "lightFalloff", "lights", "lightSpecular", "noLights", "normal", "pointLight", "spotLight", "image", "imageMode", "loadImage", "noTint", "requestImage", "tint", "texture", "textureMode", "textureWrap", "blend", "copy", "filter", "get", "loadPixels", "set", "updatePixels", "blendMode", "loadShader", "PShaderresetShader", "shader", "createFont", "loadFont", "text", "textFont", "textAlign", "textLeading", "textMode", "textSize", "textWidth", "textAscent", "textDescent", "abs", "ceil", "constrain", "dist", "exp", "floor", "lerp", "log", "mag", "map", "max", "min", "norm", "pow", "round", "sq", "sqrt", "acos", "asin", "atan", "atan2", "cos", "degrees", "radians", "sin", "tan", "noise", "noiseDetail", "noiseSeed", "random", "randomGaussian", "randomSeed"]
								, i = e.IDENT_RE
								, r = {
									variants: [{
											match: t.concat(t.either(...n), t.lookahead(/\s*\(/)),
											className: "built_in"
									}, {
											relevance: 0,
											match: t.concat(/\b(?!for|if|while)/, i, t.lookahead(/\s*\(/)),
											className: "title.function"
									}]
							}
								, o = {
									match: [/new\s+/, i],
									className: {
											1: "keyword",
											2: "class.title"
									}
							}
								, s = {
									relevance: 0,
									match: [/\./, i],
									className: {
											2: "property"
									}
							}
								, a = {
									variants: [{
											match: [/class/, /\s+/, i, /\s+/, /extends/, /\s+/, i]
									}, {
											match: [/class/, /\s+/, i]
									}],
									className: {
											1: "keyword",
											3: "title.class",
											5: "keyword",
											7: "title.class.inherited"
									}
							};
							return {
									name: "Processing",
									aliases: ["pde"],
									keywords: {
											keyword: ["abstract", "assert", "break", "case", "catch", "const", "continue", "default", "else", "enum", "final", "finally", "for", "if", "import", "instanceof", "long", "native", "new", "package", "private", "private", "protected", "protected", "public", "public", "return", "static", "strictfp", "switch", "synchronized", "throw", "throws", "transient", "try", "void", "volatile", "while"],
											literal: "P2D P3D HALF_PI PI QUARTER_PI TAU TWO_PI null true false",
											title: "setup draw",
											variable: "super this",
											built_in: [...n, "BufferedReader", "PVector", "PFont", "PImage", "PGraphics", "HashMap", "String", "Array", "FloatDict", "ArrayList", "FloatList", "IntDict", "IntList", "JSONArray", "JSONObject", "Object", "StringDict", "StringList", "Table", "TableRow", "XML"],
											type: ["boolean", "byte", "char", "color", "double", "float", "int", "long", "short"]
									},
									contains: [a, o, r, s, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, e.C_NUMBER_MODE]
							}
					}
			}
			,
			454: e=>{
					e.exports = function(e) {
							return {
									name: "Python profiler",
									contains: [e.C_NUMBER_MODE, {
											begin: "[a-zA-Z_][\\da-zA-Z_]+\\.[\\da-zA-Z_]{1,3}",
											end: ":",
											excludeEnd: !0
									}, {
											begin: "(ncalls|tottime|cumtime)",
											end: "$",
											keywords: "ncalls tottime|10 cumtime|10 filename",
											relevance: 10
									}, {
											begin: "function calls",
											end: "$",
											contains: [e.C_NUMBER_MODE],
											relevance: 10
									}, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, {
											className: "string",
											begin: "\\(",
											end: "\\)$",
											excludeBegin: !0,
											excludeEnd: !0,
											relevance: 0
									}]
							}
					}
			}
			,
			59: e=>{
					e.exports = function(e) {
							const t = {
									begin: /\(/,
									end: /\)/,
									relevance: 0
							}
								, n = {
									begin: /\[/,
									end: /\]/
							}
								, i = {
									className: "comment",
									begin: /%/,
									end: /$/,
									contains: [e.PHRASAL_WORDS_MODE]
							}
								, r = {
									className: "string",
									begin: /`/,
									end: /`/,
									contains: [e.BACKSLASH_ESCAPE]
							}
								, o = [{
									begin: /[a-z][A-Za-z0-9_]*/,
									relevance: 0
							}, {
									className: "symbol",
									variants: [{
											begin: /[A-Z][a-zA-Z0-9_]*/
									}, {
											begin: /_[A-Za-z0-9_]*/
									}],
									relevance: 0
							}, t, {
									begin: /:-/
							}, n, i, e.C_BLOCK_COMMENT_MODE, e.QUOTE_STRING_MODE, e.APOS_STRING_MODE, r, {
									className: "string",
									begin: /0'(\\'|.)/
							}, {
									className: "string",
									begin: /0'\\s/
							}, e.C_NUMBER_MODE];
							return t.contains = o,
							n.contains = o,
							{
									name: "Prolog",
									contains: o.concat([{
											begin: /\.$/
									}])
							}
					}
			}
			,
			328: e=>{
					e.exports = function(e) {
							const t = "[ \\t\\f]*"
								, n = t + "[:=]" + t
								, i = "[ \\t\\f]+"
								, r = "([^\\\\:= \\t\\f\\n]|\\\\.)+"
								, o = {
									end: "(" + n + "|" + i + ")",
									relevance: 0,
									starts: {
											className: "string",
											end: /$/,
											relevance: 0,
											contains: [{
													begin: "\\\\\\\\"
											}, {
													begin: "\\\\\\n"
											}]
									}
							};
							return {
									name: ".properties",
									disableAutodetect: !0,
									case_insensitive: !0,
									illegal: /\S/,
									contains: [e.COMMENT("^\\s*[!#]", "$"), {
											returnBegin: !0,
											variants: [{
													begin: r + n
											}, {
													begin: r + i
											}],
											contains: [{
													className: "attr",
													begin: r,
													endsParent: !0
											}],
											starts: o
									}, {
											className: "attr",
											begin: r + t + "$"
									}]
							}
					}
			}
			,
			1460: e=>{
					e.exports = function(e) {
							const t = {
									match: [/(message|enum|service)\s+/, e.IDENT_RE],
									scope: {
											1: "keyword",
											2: "title.class"
									}
							};
							return {
									name: "Protocol Buffers",
									keywords: {
											keyword: ["package", "import", "option", "optional", "required", "repeated", "group", "oneof"],
											type: ["double", "float", "int32", "int64", "uint32", "uint64", "sint32", "sint64", "fixed32", "fixed64", "sfixed32", "sfixed64", "bool", "string", "bytes"],
											literal: ["true", "false"]
									},
									contains: [e.QUOTE_STRING_MODE, e.NUMBER_MODE, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, t, {
											className: "function",
											beginKeywords: "rpc",
											end: /[{;]/,
											excludeEnd: !0,
											keywords: "rpc returns"
									}, {
											begin: /^\s*[A-Z_]+(?=\s*=[^\n]+;$)/
									}]
							}
					}
			}
			,
			673: e=>{
					e.exports = function(e) {
							const t = e.COMMENT("#", "$")
								, n = "([A-Za-z_]|::)(\\w|::)*"
								, i = e.inherit(e.TITLE_MODE, {
									begin: n
							})
								, r = {
									className: "variable",
									begin: "\\$" + n
							}
								, o = {
									className: "string",
									contains: [e.BACKSLASH_ESCAPE, r],
									variants: [{
											begin: /'/,
											end: /'/
									}, {
											begin: /"/,
											end: /"/
									}]
							};
							return {
									name: "Puppet",
									aliases: ["pp"],
									contains: [t, r, o, {
											beginKeywords: "class",
											end: "\\{|;",
											illegal: /=/,
											contains: [i, t]
									}, {
											beginKeywords: "define",
											end: /\{/,
											contains: [{
													className: "section",
													begin: e.IDENT_RE,
													endsParent: !0
											}]
									}, {
											begin: e.IDENT_RE + "\\s+\\{",
											returnBegin: !0,
											end: /\S/,
											contains: [{
													className: "keyword",
													begin: e.IDENT_RE,
													relevance: .2
											}, {
													begin: /\{/,
													end: /\}/,
													keywords: {
															keyword: "and case default else elsif false if in import enherits node or true undef unless main settings $string ",
															literal: "alias audit before loglevel noop require subscribe tag owner ensure group mode name|0 changes context force incl lens load_path onlyif provider returns root show_diff type_check en_address ip_address realname command environment hour monute month monthday special target weekday creates cwd ogoutput refresh refreshonly tries try_sleep umask backup checksum content ctime force ignore links mtime purge recurse recurselimit replace selinux_ignore_defaults selrange selrole seltype seluser source souirce_permissions sourceselect validate_cmd validate_replacement allowdupe attribute_membership auth_membership forcelocal gid ia_load_module members system host_aliases ip allowed_trunk_vlans description device_url duplex encapsulation etherchannel native_vlan speed principals allow_root auth_class auth_type authenticate_user k_of_n mechanisms rule session_owner shared options device fstype enable hasrestart directory present absent link atboot blockdevice device dump pass remounts poller_tag use message withpath adminfile allow_virtual allowcdrom category configfiles flavor install_options instance package_settings platform responsefile status uninstall_options vendor unless_system_user unless_uid binary control flags hasstatus manifest pattern restart running start stop allowdupe auths expiry gid groups home iterations key_membership keys managehome membership password password_max_age password_min_age profile_membership profiles project purge_ssh_keys role_membership roles salt shell uid baseurl cost descr enabled enablegroups exclude failovermethod gpgcheck gpgkey http_caching include includepkgs keepalive metadata_expire metalink mirrorlist priority protect proxy proxy_password proxy_username repo_gpgcheck s3_enabled skip_if_unavailable sslcacert sslclientcert sslclientkey sslverify mounted",
															built_in: "architecture augeasversion blockdevices boardmanufacturer boardproductname boardserialnumber cfkey dhcp_servers domain ec2_ ec2_userdata facterversion filesystems ldom fqdn gid hardwareisa hardwaremodel hostname id|0 interfaces ipaddress ipaddress_ ipaddress6 ipaddress6_ iphostnumber is_virtual kernel kernelmajversion kernelrelease kernelversion kernelrelease kernelversion lsbdistcodename lsbdistdescription lsbdistid lsbdistrelease lsbmajdistrelease lsbminordistrelease lsbrelease macaddress macaddress_ macosx_buildversion macosx_productname macosx_productversion macosx_productverson_major macosx_productversion_minor manufacturer memoryfree memorysize netmask metmask_ network_ operatingsystem operatingsystemmajrelease operatingsystemrelease osfamily partitions path physicalprocessorcount processor processorcount productname ps puppetversion rubysitedir rubyversion selinux selinux_config_mode selinux_config_policy selinux_current_mode selinux_current_mode selinux_enforced selinux_policyversion serialnumber sp_ sshdsakey sshecdsakey sshrsakey swapencrypted swapfree swapsize timezone type uniqueid uptime uptime_days uptime_hours uptime_seconds uuid virtual vlans xendomains zfs_version zonenae zones zpool_version"
													},
													relevance: 0,
													contains: [o, t, {
															begin: "[a-zA-Z_]+\\s*=>",
															returnBegin: !0,
															end: "=>",
															contains: [{
																	className: "attr",
																	begin: e.IDENT_RE
															}]
													}, {
															className: "number",
															begin: "(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",
															relevance: 0
													}, r]
											}],
											relevance: 0
									}]
							}
					}
			}
			,
			4321: e=>{
					e.exports = function(e) {
							return {
									name: "PureBASIC",
									aliases: ["pb", "pbi"],
									keywords: "Align And Array As Break CallDebugger Case CompilerCase CompilerDefault CompilerElse CompilerElseIf CompilerEndIf CompilerEndSelect CompilerError CompilerIf CompilerSelect CompilerWarning Continue Data DataSection Debug DebugLevel Declare DeclareC DeclareCDLL DeclareDLL DeclareModule Default Define Dim DisableASM DisableDebugger DisableExplicit Else ElseIf EnableASM EnableDebugger EnableExplicit End EndDataSection EndDeclareModule EndEnumeration EndIf EndImport EndInterface EndMacro EndModule EndProcedure EndSelect EndStructure EndStructureUnion EndWith Enumeration EnumerationBinary Extends FakeReturn For ForEach ForEver Global Gosub Goto If Import ImportC IncludeBinary IncludeFile IncludePath Interface List Macro MacroExpandedCount Map Module NewList NewMap Next Not Or Procedure ProcedureC ProcedureCDLL ProcedureDLL ProcedureReturn Protected Prototype PrototypeC ReDim Read Repeat Restore Return Runtime Select Shared Static Step Structure StructureUnion Swap Threaded To UndefineMacro Until Until  UnuseModule UseModule Wend While With XIncludeFile XOr",
									contains: [e.COMMENT(";", "$", {
											relevance: 0
									}), {
											className: "function",
											begin: "\\b(Procedure|Declare)(C|CDLL|DLL)?\\b",
											end: "\\(",
											excludeEnd: !0,
											returnBegin: !0,
											contains: [{
													className: "keyword",
													begin: "(Procedure|Declare)(C|CDLL|DLL)?",
													excludeEnd: !0
											}, {
													className: "type",
													begin: "\\.\\w*"
											}, e.UNDERSCORE_TITLE_MODE]
									}, {
											className: "string",
											begin: '(~)?"',
											end: '"',
											illegal: "\\n"
									}, {
											className: "symbol",
											begin: "#[a-zA-Z_]\\w*\\$?"
									}]
							}
					}
			}
			,
			8480: e=>{
					e.exports = function(e) {
							return {
									aliases: ["pycon"],
									contains: [{
											className: "meta.prompt",
											starts: {
													end: / |$/,
													starts: {
															end: "$",
															subLanguage: "python"
													}
											},
											variants: [{
													begin: /^>>>(?=[ ]|$)/
											}, {
													begin: /^\.\.\.(?=[ ]|$)/
											}]
									}]
							}
					}
			}
			,
			3359: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = /[\p{XID_Start}_]\p{XID_Continue}*/u
								, i = ["and", "as", "assert", "async", "await", "break", "case", "class", "continue", "def", "del", "elif", "else", "except", "finally", "for", "from", "global", "if", "import", "in", "is", "lambda", "match", "nonlocal|10", "not", "or", "pass", "raise", "return", "try", "while", "with", "yield"]
								, r = {
									$pattern: /[A-Za-z]\w+|__\w+__/,
									keyword: i,
									built_in: ["__import__", "abs", "all", "any", "ascii", "bin", "bool", "breakpoint", "bytearray", "bytes", "callable", "chr", "classmethod", "compile", "complex", "delattr", "dict", "dir", "divmod", "enumerate", "eval", "exec", "filter", "float", "format", "frozenset", "getattr", "globals", "hasattr", "hash", "help", "hex", "id", "input", "int", "isinstance", "issubclass", "iter", "len", "list", "locals", "map", "max", "memoryview", "min", "next", "object", "oct", "open", "ord", "pow", "print", "property", "range", "repr", "reversed", "round", "set", "setattr", "slice", "sorted", "staticmethod", "str", "sum", "super", "tuple", "type", "vars", "zip"],
									literal: ["__debug__", "Ellipsis", "False", "None", "NotImplemented", "True"],
									type: ["Any", "Callable", "Coroutine", "Dict", "List", "Literal", "Generic", "Optional", "Sequence", "Set", "Tuple", "Type", "Union"]
							}
								, o = {
									className: "meta",
									begin: /^(>>>|\.\.\.) /
							}
								, s = {
									className: "subst",
									begin: /\{/,
									end: /\}/,
									keywords: r,
									illegal: /#/
							}
								, a = {
									begin: /\{\{/,
									relevance: 0
							}
								, l = {
									className: "string",
									contains: [e.BACKSLASH_ESCAPE],
									variants: [{
											begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,
											end: /'''/,
											contains: [e.BACKSLASH_ESCAPE, o],
											relevance: 10
									}, {
											begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?"""/,
											end: /"""/,
											contains: [e.BACKSLASH_ESCAPE, o],
											relevance: 10
									}, {
											begin: /([fF][rR]|[rR][fF]|[fF])'''/,
											end: /'''/,
											contains: [e.BACKSLASH_ESCAPE, o, a, s]
									}, {
											begin: /([fF][rR]|[rR][fF]|[fF])"""/,
											end: /"""/,
											contains: [e.BACKSLASH_ESCAPE, o, a, s]
									}, {
											begin: /([uU]|[rR])'/,
											end: /'/,
											relevance: 10
									}, {
											begin: /([uU]|[rR])"/,
											end: /"/,
											relevance: 10
									}, {
											begin: /([bB]|[bB][rR]|[rR][bB])'/,
											end: /'/
									}, {
											begin: /([bB]|[bB][rR]|[rR][bB])"/,
											end: /"/
									}, {
											begin: /([fF][rR]|[rR][fF]|[fF])'/,
											end: /'/,
											contains: [e.BACKSLASH_ESCAPE, a, s]
									}, {
											begin: /([fF][rR]|[rR][fF]|[fF])"/,
											end: /"/,
											contains: [e.BACKSLASH_ESCAPE, a, s]
									}, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE]
							}
								, c = "[0-9](_?[0-9])*"
								, d = `(\\b(${c}))?\\.(${c})|\\b(${c})\\.`
								, p = `\\b|${i.join("|")}`
								, u = {
									className: "number",
									relevance: 0,
									variants: [{
											begin: `(\\b(${c})|(${d}))[eE][+-]?(${c})[jJ]?(?=${p})`
									}, {
											begin: `(${d})[jJ]?`
									}, {
											begin: `\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${p})`
									}, {
											begin: `\\b0[bB](_?[01])+[lL]?(?=${p})`
									}, {
											begin: `\\b0[oO](_?[0-7])+[lL]?(?=${p})`
									}, {
											begin: `\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${p})`
									}, {
											begin: `\\b(${c})[jJ](?=${p})`
									}]
							}
								, h = {
									className: "comment",
									begin: t.lookahead(/# type:/),
									end: /$/,
									keywords: r,
									contains: [{
											begin: /# type:/
									}, {
											begin: /#/,
											end: /\b\B/,
											endsWithParent: !0
									}]
							}
								, m = {
									className: "params",
									variants: [{
											className: "",
											begin: /\(\s*\)/,
											skip: !0
									}, {
											begin: /\(/,
											end: /\)/,
											excludeBegin: !0,
											excludeEnd: !0,
											keywords: r,
											contains: ["self", o, u, l, e.HASH_COMMENT_MODE]
									}]
							};
							return s.contains = [l, u, o],
							{
									name: "Python",
									aliases: ["py", "gyp", "ipython"],
									unicodeRegex: !0,
									keywords: r,
									illegal: /(<\/|->|\?)|=>/,
									contains: [o, u, {
											begin: /\bself\b/
									}, {
											beginKeywords: "if",
											relevance: 0
									}, l, h, e.HASH_COMMENT_MODE, {
											match: [/\bdef/, /\s+/, n],
											scope: {
													1: "keyword",
													3: "title.function"
											},
											contains: [m]
									}, {
											variants: [{
													match: [/\bclass/, /\s+/, n, /\s*/, /\(\s*/, n, /\s*\)/]
											}, {
													match: [/\bclass/, /\s+/, n]
											}],
											scope: {
													1: "keyword",
													3: "title.class",
													6: "title.class.inherited"
											}
									}, {
											className: "meta",
											begin: /^[\t ]*@/,
											end: /(?=#)|$/,
											contains: [u, m, l]
									}]
							}
					}
			}
			,
			2506: e=>{
					e.exports = function(e) {
							return {
									name: "Q",
									aliases: ["k", "kdb"],
									keywords: {
											$pattern: /(`?)[A-Za-z0-9_]+\b/,
											keyword: "do while select delete by update from",
											literal: "0b 1b",
											built_in: "neg not null string reciprocal floor ceiling signum mod xbar xlog and or each scan over prior mmu lsq inv md5 ltime gtime count first var dev med cov cor all any rand sums prds mins maxs fills deltas ratios avgs differ prev next rank reverse iasc idesc asc desc msum mcount mavg mdev xrank mmin mmax xprev rotate distinct group where flip type key til get value attr cut set upsert raze union inter except cross sv vs sublist enlist read0 read1 hopen hclose hdel hsym hcount peach system ltrim rtrim trim lower upper ssr view tables views cols xcols keys xkey xcol xasc xdesc fkeys meta lj aj aj0 ij pj asof uj ww wj wj1 fby xgroup ungroup ej save load rsave rload show csv parse eval min max avg wavg wsum sin cos tan sum",
											type: "`float `double int `timestamp `timespan `datetime `time `boolean `symbol `char `byte `short `long `real `month `date `minute `second `guid"
									},
									contains: [e.C_LINE_COMMENT_MODE, e.QUOTE_STRING_MODE, e.C_NUMBER_MODE]
							}
					}
			}
			,
			7526: e=>{
					e.exports = function(e) {
							const t = "[a-zA-Z_][a-zA-Z0-9\\._]*"
								, n = {
									className: "attribute",
									begin: "\\bid\\s*:",
									starts: {
											className: "string",
											end: t,
											returnEnd: !1
									}
							}
								, i = {
									begin: t + "\\s*:",
									returnBegin: !0,
									contains: [{
											className: "attribute",
											begin: t,
											end: "\\s*:",
											excludeEnd: !0,
											relevance: 0
									}],
									relevance: 0
							}
								, r = {
									begin: e.regex.concat(t, /\s*\{/),
									end: /\{/,
									returnBegin: !0,
									relevance: 0,
									contains: [e.inherit(e.TITLE_MODE, {
											begin: t
									})]
							};
							return {
									name: "QML",
									aliases: ["qt"],
									case_insensitive: !1,
									keywords: {
											keyword: "in of on if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const export super debugger as async await import",
											literal: "true false null undefined NaN Infinity",
											built_in: "eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect Behavior bool color coordinate date double enumeration font geocircle georectangle geoshape int list matrix4x4 parent point quaternion real rect size string url variant vector2d vector3d vector4d Promise"
									},
									contains: [{
											className: "meta",
											begin: /^\s*['"]use (strict|asm)['"]/
									}, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, {
											className: "string",
											begin: "`",
											end: "`",
											contains: [e.BACKSLASH_ESCAPE, {
													className: "subst",
													begin: "\\$\\{",
													end: "\\}"
											}]
									}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, {
											className: "number",
											variants: [{
													begin: "\\b(0[bB][01]+)"
											}, {
													begin: "\\b(0[oO][0-7]+)"
											}, {
													begin: e.C_NUMBER_RE
											}],
											relevance: 0
									}, {
											begin: "(" + e.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
											keywords: "return throw case",
											contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.REGEXP_MODE, {
													begin: /</,
													end: />\s*[);\]]/,
													relevance: 0,
													subLanguage: "xml"
											}],
											relevance: 0
									}, {
											className: "keyword",
											begin: "\\bsignal\\b",
											starts: {
													className: "string",
													end: "(\\(|:|=|;|,|//|/\\*|$)",
													returnEnd: !0
											}
									}, {
											className: "keyword",
											begin: "\\bproperty\\b",
											starts: {
													className: "string",
													end: "(:|=|;|,|//|/\\*|$)",
													returnEnd: !0
											}
									}, {
											className: "function",
											beginKeywords: "function",
											end: /\{/,
											excludeEnd: !0,
											contains: [e.inherit(e.TITLE_MODE, {
													begin: /[A-Za-z$_][0-9A-Za-z$_]*/
											}), {
													className: "params",
													begin: /\(/,
													end: /\)/,
													excludeBegin: !0,
													excludeEnd: !0,
													contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
											}],
											illegal: /\[|%/
									}, {
											begin: "\\." + e.IDENT_RE,
											relevance: 0
									}, n, i, r],
									illegal: /#/
							}
					}
			}
			,
			3191: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = /(?:(?:[a-zA-Z]|\.[._a-zA-Z])[._a-zA-Z0-9]*)|\.(?!\d)/
								, i = t.either(/0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*[pP][+-]?\d+i?/, /0[xX][0-9a-fA-F]+(?:[pP][+-]?\d+)?[Li]?/, /(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?[Li]?/)
								, r = /[=!<>:]=|\|\||&&|:::?|<-|<<-|->>|->|\|>|[-+*\/?!$&|:<=>@^~]|\*\*/
								, o = t.either(/[()]/, /[{}]/, /\[\[/, /[[\]]/, /\\/, /,/);
							return {
									name: "R",
									keywords: {
											$pattern: n,
											keyword: "function if in break next repeat else for while",
											literal: "NULL NA TRUE FALSE Inf NaN NA_integer_|10 NA_real_|10 NA_character_|10 NA_complex_|10",
											built_in: "LETTERS letters month.abb month.name pi T F abs acos acosh all any anyNA Arg as.call as.character as.complex as.double as.environment as.integer as.logical as.null.default as.numeric as.raw asin asinh atan atanh attr attributes baseenv browser c call ceiling class Conj cos cosh cospi cummax cummin cumprod cumsum digamma dim dimnames emptyenv exp expression floor forceAndCall gamma gc.time globalenv Im interactive invisible is.array is.atomic is.call is.character is.complex is.double is.environment is.expression is.finite is.function is.infinite is.integer is.language is.list is.logical is.matrix is.na is.name is.nan is.null is.numeric is.object is.pairlist is.raw is.recursive is.single is.symbol lazyLoadDBfetch length lgamma list log max min missing Mod names nargs nzchar oldClass on.exit pos.to.env proc.time prod quote range Re rep retracemem return round seq_along seq_len seq.int sign signif sin sinh sinpi sqrt standardGeneric substitute sum switch tan tanh tanpi tracemem trigamma trunc unclass untracemem UseMethod xtfrm"
									},
									contains: [e.COMMENT(/#'/, /$/, {
											contains: [{
													scope: "doctag",
													match: /@examples/,
													starts: {
															end: t.lookahead(t.either(/\n^#'\s*(?=@[a-zA-Z]+)/, /\n^(?!#')/)),
															endsParent: !0
													}
											}, {
													scope: "doctag",
													begin: "@param",
													end: /$/,
													contains: [{
															scope: "variable",
															variants: [{
																	match: n
															}, {
																	match: /`(?:\\.|[^`\\])+`/
															}],
															endsParent: !0
													}]
											}, {
													scope: "doctag",
													match: /@[a-zA-Z]+/
											}, {
													scope: "keyword",
													match: /\\[a-zA-Z]+/
											}]
									}), e.HASH_COMMENT_MODE, {
											scope: "string",
											contains: [e.BACKSLASH_ESCAPE],
											variants: [e.END_SAME_AS_BEGIN({
													begin: /[rR]"(-*)\(/,
													end: /\)(-*)"/
											}), e.END_SAME_AS_BEGIN({
													begin: /[rR]"(-*)\{/,
													end: /\}(-*)"/
											}), e.END_SAME_AS_BEGIN({
													begin: /[rR]"(-*)\[/,
													end: /\](-*)"/
											}), e.END_SAME_AS_BEGIN({
													begin: /[rR]'(-*)\(/,
													end: /\)(-*)'/
											}), e.END_SAME_AS_BEGIN({
													begin: /[rR]'(-*)\{/,
													end: /\}(-*)'/
											}), e.END_SAME_AS_BEGIN({
													begin: /[rR]'(-*)\[/,
													end: /\](-*)'/
											}), {
													begin: '"',
													end: '"',
													relevance: 0
											}, {
													begin: "'",
													end: "'",
													relevance: 0
											}]
									}, {
											relevance: 0,
											variants: [{
													scope: {
															1: "operator",
															2: "number"
													},
													match: [r, i]
											}, {
													scope: {
															1: "operator",
															2: "number"
													},
													match: [/%[^%]*%/, i]
											}, {
													scope: {
															1: "punctuation",
															2: "number"
													},
													match: [o, i]
											}, {
													scope: {
															2: "number"
													},
													match: [/[^a-zA-Z0-9._]|^/, i]
											}]
									}, {
											scope: {
													3: "operator"
											},
											match: [n, /\s+/, /<-/, /\s+/]
									}, {
											scope: "operator",
											relevance: 0,
											variants: [{
													match: r
											}, {
													match: /%[^%]*%/
											}]
									}, {
											scope: "punctuation",
											relevance: 0,
											match: o
									}, {
											begin: "`",
											end: "`",
											contains: [{
													begin: /\\./
											}]
									}]
							}
					}
			}
			,
			492: e=>{
					e.exports = function(e) {
							const t = "~?[a-z$_][0-9a-zA-Z$_]*"
								, n = "`?[A-Z$_][0-9a-zA-Z$_]*"
								, i = "'?[a-z$_][0-9a-z$_]*"
								, r = t + "(" + ("\\s*:\\s*[a-z$_][0-9a-z$_]*(\\(\\s*(" + i + "\\s*(," + i + "\\s*)*)?\\))?") + "){0,2}"
								, o = "(" + (["||", "++", "**", "+.", "*", "/", "*.", "/.", "..."].map((function(e) {
									return e.split("").map((function(e) {
											return "\\" + e
									}
									)).join("")
							}
							)).join("|") + "|\\|>|&&|==|===)")
								, s = "\\s+" + o + "\\s+"
								, a = {
									keyword: "and as asr assert begin class constraint do done downto else end exception external for fun function functor if in include inherit initializer land lazy let lor lsl lsr lxor match method mod module mutable new nonrec object of open or private rec sig struct then to try type val virtual when while with",
									built_in: "array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 ref string unit ",
									literal: "true false"
							}
								, l = "\\b(0[xX][a-fA-F0-9_]+[Lln]?|0[oO][0-7_]+[Lln]?|0[bB][01_]+[Lln]?|[0-9][0-9_]*([Lln]|(\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)"
								, c = {
									className: "number",
									relevance: 0,
									variants: [{
											begin: l
									}, {
											begin: "\\(-" + l + "\\)"
									}]
							}
								, d = {
									className: "operator",
									relevance: 0,
									begin: o
							}
								, p = [{
									className: "identifier",
									relevance: 0,
									begin: t
							}, d, c]
								, u = [e.QUOTE_STRING_MODE, d, {
									className: "module",
									begin: "\\b" + n,
									returnBegin: !0,
									relevance: 0,
									end: ".",
									contains: [{
											className: "identifier",
											begin: n,
											relevance: 0
									}]
							}]
								, h = [{
									className: "module",
									begin: "\\b" + n,
									returnBegin: !0,
									end: ".",
									relevance: 0,
									contains: [{
											className: "identifier",
											begin: n,
											relevance: 0
									}]
							}]
								, m = {
									className: "function",
									relevance: 0,
									keywords: a,
									variants: [{
											begin: "\\s(\\(\\.?.*?\\)|" + t + ")\\s*=>",
											end: "\\s*=>",
											returnBegin: !0,
											relevance: 0,
											contains: [{
													className: "params",
													variants: [{
															begin: t
													}, {
															begin: r
													}, {
															begin: /\(\s*\)/
													}]
											}]
									}, {
											begin: "\\s\\(\\.?[^;\\|]*\\)\\s*=>",
											end: "\\s=>",
											returnBegin: !0,
											relevance: 0,
											contains: [{
													className: "params",
													relevance: 0,
													variants: [{
															begin: t,
															end: "(,|\\n|\\))",
															relevance: 0,
															contains: [d, {
																	className: "typing",
																	begin: ":",
																	end: "(,|\\n)",
																	returnBegin: !0,
																	relevance: 0,
																	contains: h
															}]
													}]
											}]
									}, {
											begin: "\\(\\.\\s" + t + "\\)\\s*=>"
									}]
							};
							u.push(m);
							const g = {
									className: "constructor",
									begin: n + "\\(",
									end: "\\)",
									illegal: "\\n",
									keywords: a,
									contains: [e.QUOTE_STRING_MODE, d, {
											className: "params",
											begin: "\\b" + t
									}]
							}
								, _ = {
									className: "pattern-match",
									begin: "\\|",
									returnBegin: !0,
									keywords: a,
									end: "=>",
									relevance: 0,
									contains: [g, d, {
											relevance: 0,
											className: "constructor",
											begin: n
									}]
							}
								, f = {
									className: "module-access",
									keywords: a,
									returnBegin: !0,
									variants: [{
											begin: "\\b(" + n + "\\.)+" + t
									}, {
											begin: "\\b(" + n + "\\.)+\\(",
											end: "\\)",
											returnBegin: !0,
											contains: [m, {
													begin: "\\(",
													end: "\\)",
													relevance: 0,
													skip: !0
											}].concat(u)
									}, {
											begin: "\\b(" + n + "\\.)+\\{",
											end: /\}/
									}],
									contains: u
							};
							return h.push(f),
							{
									name: "ReasonML",
									aliases: ["re"],
									keywords: a,
									illegal: "(:-|:=|\\$\\{|\\+=)",
									contains: [e.COMMENT("/\\*", "\\*/", {
											illegal: "^(#,\\/\\/)"
									}), {
											className: "character",
											begin: "'(\\\\[^']+|[^'])'",
											illegal: "\\n",
											relevance: 0
									}, e.QUOTE_STRING_MODE, {
											className: "literal",
											begin: "\\(\\)",
											relevance: 0
									}, {
											className: "literal",
											begin: "\\[\\|",
											end: "\\|\\]",
											relevance: 0,
											contains: p
									}, {
											className: "literal",
											begin: "\\[",
											end: "\\]",
											relevance: 0,
											contains: p
									}, g, {
											className: "operator",
											begin: s,
											illegal: "--\x3e",
											relevance: 0
									}, c, e.C_LINE_COMMENT_MODE, _, m, {
											className: "module-def",
											begin: "\\bmodule\\s+" + t + "\\s+" + n + "\\s+=\\s+\\{",
											end: /\}/,
											returnBegin: !0,
											keywords: a,
											relevance: 0,
											contains: [{
													className: "module",
													relevance: 0,
													begin: n
											}, {
													begin: /\{/,
													end: /\}/,
													relevance: 0,
													skip: !0
											}].concat(u)
									}, f]
							}
					}
			}
			,
			8716: e=>{
					e.exports = function(e) {
							return {
									name: "RenderMan RIB",
									keywords: "ArchiveRecord AreaLightSource Atmosphere Attribute AttributeBegin AttributeEnd Basis Begin Blobby Bound Clipping ClippingPlane Color ColorSamples ConcatTransform Cone CoordinateSystem CoordSysTransform CropWindow Curves Cylinder DepthOfField Detail DetailRange Disk Displacement Display End ErrorHandler Exposure Exterior Format FrameAspectRatio FrameBegin FrameEnd GeneralPolygon GeometricApproximation Geometry Hider Hyperboloid Identity Illuminate Imager Interior LightSource MakeCubeFaceEnvironment MakeLatLongEnvironment MakeShadow MakeTexture Matte MotionBegin MotionEnd NuPatch ObjectBegin ObjectEnd ObjectInstance Opacity Option Orientation Paraboloid Patch PatchMesh Perspective PixelFilter PixelSamples PixelVariance Points PointsGeneralPolygons PointsPolygons Polygon Procedural Projection Quantize ReadArchive RelativeDetail ReverseOrientation Rotate Scale ScreenWindow ShadingInterpolation ShadingRate Shutter Sides Skew SolidBegin SolidEnd Sphere SubdivisionMesh Surface TextureCoordinates Torus Transform TransformBegin TransformEnd TransformPoints Translate TrimCurve WorldBegin WorldEnd",
									illegal: "</",
									contains: [e.HASH_COMMENT_MODE, e.C_NUMBER_MODE, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE]
							}
					}
			}
			,
			1467: e=>{
					e.exports = function(e) {
							const t = "[a-zA-Z-_][^\\n{]+\\{"
								, n = {
									className: "attribute",
									begin: /[a-zA-Z-_]+/,
									end: /\s*:/,
									excludeEnd: !0,
									starts: {
											end: ";",
											relevance: 0,
											contains: [{
													className: "variable",
													begin: /\.[a-zA-Z-_]+/
											}, {
													className: "keyword",
													begin: /\(optional\)/
											}]
									}
							};
							return {
									name: "Roboconf",
									aliases: ["graph", "instances"],
									case_insensitive: !0,
									keywords: "import",
									contains: [{
											begin: "^facet " + t,
											end: /\}/,
											keywords: "facet",
											contains: [n, e.HASH_COMMENT_MODE]
									}, {
											begin: "^\\s*instance of " + t,
											end: /\}/,
											keywords: "name count channels instance-data instance-state instance of",
											illegal: /\S/,
											contains: ["self", n, e.HASH_COMMENT_MODE]
									}, {
											begin: "^" + t,
											end: /\}/,
											contains: [n, e.HASH_COMMENT_MODE]
									}, e.HASH_COMMENT_MODE]
							}
					}
			}
			,
			3749: e=>{
					e.exports = function(e) {
							const t = "foreach do while for if from to step else on-error and or not in"
								, n = "true false yes no nothing nil null"
								, i = {
									className: "variable",
									variants: [{
											begin: /\$[\w\d#@][\w\d_]*/
									}, {
											begin: /\$\{(.*?)\}/
									}]
							}
								, r = {
									className: "string",
									begin: /"/,
									end: /"/,
									contains: [e.BACKSLASH_ESCAPE, i, {
											className: "variable",
											begin: /\$\(/,
											end: /\)/,
											contains: [e.BACKSLASH_ESCAPE]
									}]
							}
								, o = {
									className: "string",
									begin: /'/,
									end: /'/
							};
							return {
									name: "MikroTik RouterOS script",
									aliases: ["mikrotik"],
									case_insensitive: !0,
									keywords: {
											$pattern: /:?[\w-]+/,
											literal: n,
											keyword: t + " :" + t.split(" ").join(" :") + " :" + "global local beep delay put len typeof pick log time set find environment terminal error execute parse resolve toarray tobool toid toip toip6 tonum tostr totime".split(" ").join(" :")
									},
									contains: [{
											variants: [{
													begin: /\/\*/,
													end: /\*\//
											}, {
													begin: /\/\//,
													end: /$/
											}, {
													begin: /<\//,
													end: />/
											}],
											illegal: /./
									}, e.COMMENT("^#", "$"), r, o, i, {
											begin: /[\w-]+=([^\s{}[\]()>]+)/,
											relevance: 0,
											returnBegin: !0,
											contains: [{
													className: "attribute",
													begin: /[^=]+/
											}, {
													begin: /=/,
													endsWithParent: !0,
													relevance: 0,
													contains: [r, o, i, {
															className: "literal",
															begin: "\\b(" + n.split(" ").join("|") + ")\\b"
													}, {
															begin: /("[^"]*"|[^\s{}[\]]+)/
													}]
											}]
									}, {
											className: "number",
											begin: /\*[0-9a-fA-F]+/
									}, {
											begin: "\\b(" + "add remove enable disable set get print export edit find run debug error info warning".split(" ").join("|") + ")([\\s[(\\]|])",
											returnBegin: !0,
											contains: [{
													className: "built_in",
													begin: /\w+/
											}]
									}, {
											className: "built_in",
											variants: [{
													begin: "(\\.\\./|/|\\s)((" + "traffic-flow traffic-generator firewall scheduler aaa accounting address-list address align area bandwidth-server bfd bgp bridge client clock community config connection console customer default dhcp-client dhcp-server discovery dns e-mail ethernet filter firmware gps graphing group hardware health hotspot identity igmp-proxy incoming instance interface ip ipsec ipv6 irq l2tp-server lcd ldp logging mac-server mac-winbox mangle manual mirror mme mpls nat nd neighbor network note ntp ospf ospf-v3 ovpn-server page peer pim ping policy pool port ppp pppoe-client pptp-server prefix profile proposal proxy queue radius resource rip ripng route routing screen script security-profiles server service service-port settings shares smb sms sniffer snmp snooper socks sstp-server system tool tracking type upgrade upnp user-manager users user vlan secret vrrp watchdog web-access wireless pptp pppoe lan wan layer7-protocol lease simple raw".split(" ").join("|") + ");?\\s)+"
											}, {
													begin: /\.\./,
													relevance: 0
											}]
									}]
							}
					}
			}
			,
			1429: e=>{
					e.exports = function(e) {
							const t = {
									match: [/(surface|displacement|light|volume|imager)/, /\s+/, e.IDENT_RE],
									scope: {
											1: "keyword",
											3: "title.class"
									}
							};
							return {
									name: "RenderMan RSL",
									keywords: {
											keyword: ["while", "for", "if", "do", "return", "else", "break", "extern", "continue"],
											built_in: ["abs", "acos", "ambient", "area", "asin", "atan", "atmosphere", "attribute", "calculatenormal", "ceil", "cellnoise", "clamp", "comp", "concat", "cos", "degrees", "depth", "Deriv", "diffuse", "distance", "Du", "Dv", "environment", "exp", "faceforward", "filterstep", "floor", "format", "fresnel", "incident", "length", "lightsource", "log", "match", "max", "min", "mod", "noise", "normalize", "ntransform", "opposite", "option", "phong", "pnoise", "pow", "printf", "ptlined", "radians", "random", "reflect", "refract", "renderinfo", "round", "setcomp", "setxcomp", "setycomp", "setzcomp", "shadow", "sign", "sin", "smoothstep", "specular", "specularbrdf", "spline", "sqrt", "step", "tan", "texture", "textureinfo", "trace", "transform", "vtransform", "xcomp", "ycomp", "zcomp"],
											type: ["matrix", "float", "color", "point", "normal", "vector"]
									},
									illegal: "</",
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.QUOTE_STRING_MODE, e.APOS_STRING_MODE, e.C_NUMBER_MODE, {
											className: "meta",
											begin: "#",
											end: "$"
									}, t, {
											beginKeywords: "illuminate illuminance gather",
											end: "\\("
									}]
							}
					}
			}
			,
			1809: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = "([a-zA-Z_]\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?)"
								, i = t.either(/\b([A-Z]+[a-z0-9]+)+/, /\b([A-Z]+[a-z0-9]+)+[A-Z]+/)
								, r = t.concat(i, /(::\w+)*/)
								, o = {
									"variable.constant": ["__FILE__", "__LINE__", "__ENCODING__"],
									"variable.language": ["self", "super"],
									keyword: ["alias", "and", "begin", "BEGIN", "break", "case", "class", "defined", "do", "else", "elsif", "end", "END", "ensure", "for", "if", "in", "module", "next", "not", "or", "redo", "require", "rescue", "retry", "return", "then", "undef", "unless", "until", "when", "while", "yield", "include", "extend", "prepend", "public", "private", "protected", "raise", "throw"],
									built_in: ["proc", "lambda", "attr_accessor", "attr_reader", "attr_writer", "define_method", "private_constant", "module_function"],
									literal: ["true", "false", "nil"]
							}
								, s = {
									className: "doctag",
									begin: "@[A-Za-z]+"
							}
								, a = {
									begin: "#<",
									end: ">"
							}
								, l = [e.COMMENT("#", "$", {
									contains: [s]
							}), e.COMMENT("^=begin", "^=end", {
									contains: [s],
									relevance: 10
							}), e.COMMENT("^__END__", e.MATCH_NOTHING_RE)]
								, c = {
									className: "subst",
									begin: /#\{/,
									end: /\}/,
									keywords: o
							}
								, d = {
									className: "string",
									contains: [e.BACKSLASH_ESCAPE, c],
									variants: [{
											begin: /'/,
											end: /'/
									}, {
											begin: /"/,
											end: /"/
									}, {
											begin: /`/,
											end: /`/
									}, {
											begin: /%[qQwWx]?\(/,
											end: /\)/
									}, {
											begin: /%[qQwWx]?\[/,
											end: /\]/
									}, {
											begin: /%[qQwWx]?\{/,
											end: /\}/
									}, {
											begin: /%[qQwWx]?</,
											end: />/
									}, {
											begin: /%[qQwWx]?\//,
											end: /\//
									}, {
											begin: /%[qQwWx]?%/,
											end: /%/
									}, {
											begin: /%[qQwWx]?-/,
											end: /-/
									}, {
											begin: /%[qQwWx]?\|/,
											end: /\|/
									}, {
											begin: /\B\?(\\\d{1,3})/
									}, {
											begin: /\B\?(\\x[A-Fa-f0-9]{1,2})/
									}, {
											begin: /\B\?(\\u\{?[A-Fa-f0-9]{1,6}\}?)/
									}, {
											begin: /\B\?(\\M-\\C-|\\M-\\c|\\c\\M-|\\M-|\\C-\\M-)[\x20-\x7e]/
									}, {
											begin: /\B\?\\(c|C-)[\x20-\x7e]/
									}, {
											begin: /\B\?\\?\S/
									}, {
											begin: t.concat(/<<[-~]?'?/, t.lookahead(/(\w+)(?=\W)[^\n]*\n(?:[^\n]*\n)*?\s*\1\b/)),
											contains: [e.END_SAME_AS_BEGIN({
													begin: /(\w+)/,
													end: /(\w+)/,
													contains: [e.BACKSLASH_ESCAPE, c]
											})]
									}]
							}
								, p = "[0-9](_?[0-9])*"
								, u = {
									className: "number",
									relevance: 0,
									variants: [{
											begin: `\\b([1-9](_?[0-9])*|0)(\\.(${p}))?([eE][+-]?(${p})|r)?i?\\b`
									}, {
											begin: "\\b0[dD][0-9](_?[0-9])*r?i?\\b"
									}, {
											begin: "\\b0[bB][0-1](_?[0-1])*r?i?\\b"
									}, {
											begin: "\\b0[oO][0-7](_?[0-7])*r?i?\\b"
									}, {
											begin: "\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\b"
									}, {
											begin: "\\b0(_?[0-7])+r?i?\\b"
									}]
							}
								, h = {
									variants: [{
											match: /\(\)/
									}, {
											className: "params",
											begin: /\(/,
											end: /(?=\))/,
											excludeBegin: !0,
											endsParent: !0,
											keywords: o
									}]
							}
								, m = [d, {
									variants: [{
											match: [/class\s+/, r, /\s+<\s+/, r]
									}, {
											match: [/\b(class|module)\s+/, r]
									}],
									scope: {
											2: "title.class",
											4: "title.class.inherited"
									},
									keywords: o
							}, {
									match: [/(include|extend)\s+/, r],
									scope: {
											2: "title.class"
									},
									keywords: o
							}, {
									relevance: 0,
									match: [r, /\.new[. (]/],
									scope: {
											1: "title.class"
									}
							}, {
									relevance: 0,
									match: /\b[A-Z][A-Z_0-9]+\b/,
									className: "variable.constant"
							}, {
									relevance: 0,
									match: i,
									scope: "title.class"
							}, {
									match: [/def/, /\s+/, n],
									scope: {
											1: "keyword",
											3: "title.function"
									},
									contains: [h]
							}, {
									begin: e.IDENT_RE + "::"
							}, {
									className: "symbol",
									begin: e.UNDERSCORE_IDENT_RE + "(!|\\?)?:",
									relevance: 0
							}, {
									className: "symbol",
									begin: ":(?!\\s)",
									contains: [d, {
											begin: n
									}],
									relevance: 0
							}, u, {
									className: "variable",
									begin: "(\\$\\W)|((\\$|@@?)(\\w+))(?=[^@$?])(?![A-Za-z])(?![@$?'])"
							}, {
									className: "params",
									begin: /\|/,
									end: /\|/,
									excludeBegin: !0,
									excludeEnd: !0,
									relevance: 0,
									keywords: o
							}, {
									begin: "(" + e.RE_STARTERS_RE + "|unless)\\s*",
									keywords: "unless",
									contains: [{
											className: "regexp",
											contains: [e.BACKSLASH_ESCAPE, c],
											illegal: /\n/,
											variants: [{
													begin: "/",
													end: "/[a-z]*"
											}, {
													begin: /%r\{/,
													end: /\}[a-z]*/
											}, {
													begin: "%r\\(",
													end: "\\)[a-z]*"
											}, {
													begin: "%r!",
													end: "![a-z]*"
											}, {
													begin: "%r\\[",
													end: "\\][a-z]*"
											}]
									}].concat(a, l),
									relevance: 0
							}].concat(a, l);
							c.contains = m,
							h.contains = m;
							const g = [{
									begin: /^\s*=>/,
									starts: {
											end: "$",
											contains: m
									}
							}, {
									className: "meta.prompt",
									begin: "^([>?]>|[\\w#]+\\(\\w+\\):\\d+:\\d+[>*]|(\\w+-)?\\d+\\.\\d+\\.\\d+(p\\d+)?[^\\d][^>]+>)(?=[ ])",
									starts: {
											end: "$",
											keywords: o,
											contains: m
									}
							}];
							return l.unshift(a),
							{
									name: "Ruby",
									aliases: ["rb", "gemspec", "podspec", "thor", "irb"],
									keywords: o,
									illegal: /\/\*/,
									contains: [e.SHEBANG({
											binary: "ruby"
									})].concat(g).concat(l).concat(m)
							}
					}
			}
			,
			9039: e=>{
					e.exports = function(e) {
							return {
									name: "Oracle Rules Language",
									keywords: {
											keyword: "BILL_PERIOD BILL_START BILL_STOP RS_EFFECTIVE_START RS_EFFECTIVE_STOP RS_JURIS_CODE RS_OPCO_CODE INTDADDATTRIBUTE|5 INTDADDVMSG|5 INTDBLOCKOP|5 INTDBLOCKOPNA|5 INTDCLOSE|5 INTDCOUNT|5 INTDCOUNTSTATUSCODE|5 INTDCREATEMASK|5 INTDCREATEDAYMASK|5 INTDCREATEFACTORMASK|5 INTDCREATEHANDLE|5 INTDCREATEOVERRIDEDAYMASK|5 INTDCREATEOVERRIDEMASK|5 INTDCREATESTATUSCODEMASK|5 INTDCREATETOUPERIOD|5 INTDDELETE|5 INTDDIPTEST|5 INTDEXPORT|5 INTDGETERRORCODE|5 INTDGETERRORMESSAGE|5 INTDISEQUAL|5 INTDJOIN|5 INTDLOAD|5 INTDLOADACTUALCUT|5 INTDLOADDATES|5 INTDLOADHIST|5 INTDLOADLIST|5 INTDLOADLISTDATES|5 INTDLOADLISTENERGY|5 INTDLOADLISTHIST|5 INTDLOADRELATEDCHANNEL|5 INTDLOADSP|5 INTDLOADSTAGING|5 INTDLOADUOM|5 INTDLOADUOMDATES|5 INTDLOADUOMHIST|5 INTDLOADVERSION|5 INTDOPEN|5 INTDREADFIRST|5 INTDREADNEXT|5 INTDRECCOUNT|5 INTDRELEASE|5 INTDREPLACE|5 INTDROLLAVG|5 INTDROLLPEAK|5 INTDSCALAROP|5 INTDSCALE|5 INTDSETATTRIBUTE|5 INTDSETDSTPARTICIPANT|5 INTDSETSTRING|5 INTDSETVALUE|5 INTDSETVALUESTATUS|5 INTDSHIFTSTARTTIME|5 INTDSMOOTH|5 INTDSORT|5 INTDSPIKETEST|5 INTDSUBSET|5 INTDTOU|5 INTDTOURELEASE|5 INTDTOUVALUE|5 INTDUPDATESTATS|5 INTDVALUE|5 STDEV INTDDELETEEX|5 INTDLOADEXACTUAL|5 INTDLOADEXCUT|5 INTDLOADEXDATES|5 INTDLOADEX|5 INTDLOADEXRELATEDCHANNEL|5 INTDSAVEEX|5 MVLOAD|5 MVLOADACCT|5 MVLOADACCTDATES|5 MVLOADACCTHIST|5 MVLOADDATES|5 MVLOADHIST|5 MVLOADLIST|5 MVLOADLISTDATES|5 MVLOADLISTHIST|5 IF FOR NEXT DONE SELECT END CALL ABORT CLEAR CHANNEL FACTOR LIST NUMBER OVERRIDE SET WEEK DISTRIBUTIONNODE ELSE WHEN THEN OTHERWISE IENUM CSV INCLUDE LEAVE RIDER SAVE DELETE NOVALUE SECTION WARN SAVE_UPDATE DETERMINANT LABEL REPORT REVENUE EACH IN FROM TOTAL CHARGE BLOCK AND OR CSV_FILE RATE_CODE AUXILIARY_DEMAND UIDACCOUNT RS BILL_PERIOD_SELECT HOURS_PER_MONTH INTD_ERROR_STOP SEASON_SCHEDULE_NAME ACCOUNTFACTOR ARRAYUPPERBOUND CALLSTOREDPROC GETADOCONNECTION GETCONNECT GETDATASOURCE GETQUALIFIER GETUSERID HASVALUE LISTCOUNT LISTOP LISTUPDATE LISTVALUE PRORATEFACTOR RSPRORATE SETBINPATH SETDBMONITOR WQ_OPEN BILLINGHOURS DATE DATEFROMFLOAT DATETIMEFROMSTRING DATETIMETOSTRING DATETOFLOAT DAY DAYDIFF DAYNAME DBDATETIME HOUR MINUTE MONTH MONTHDIFF MONTHHOURS MONTHNAME ROUNDDATE SAMEWEEKDAYLASTYEAR SECOND WEEKDAY WEEKDIFF YEAR YEARDAY YEARSTR COMPSUM HISTCOUNT HISTMAX HISTMIN HISTMINNZ HISTVALUE MAXNRANGE MAXRANGE MINRANGE COMPIKVA COMPKVA COMPKVARFROMKQKW COMPLF IDATTR FLAG LF2KW LF2KWH MAXKW POWERFACTOR READING2USAGE AVGSEASON MAXSEASON MONTHLYMERGE SEASONVALUE SUMSEASON ACCTREADDATES ACCTTABLELOAD CONFIGADD CONFIGGET CREATEOBJECT CREATEREPORT EMAILCLIENT EXPBLKMDMUSAGE EXPMDMUSAGE EXPORT_USAGE FACTORINEFFECT GETUSERSPECIFIEDSTOP INEFFECT ISHOLIDAY RUNRATE SAVE_PROFILE SETREPORTTITLE USEREXIT WATFORRUNRATE TO TABLE ACOS ASIN ATAN ATAN2 BITAND CEIL COS COSECANT COSH COTANGENT DIVQUOT DIVREM EXP FABS FLOOR FMOD FREPM FREXPN LOG LOG10 MAX MAXN MIN MINNZ MODF POW ROUND ROUND2VALUE ROUNDINT SECANT SIN SINH SQROOT TAN TANH FLOAT2STRING FLOAT2STRINGNC INSTR LEFT LEN LTRIM MID RIGHT RTRIM STRING STRINGNC TOLOWER TOUPPER TRIM NUMDAYS READ_DATE STAGING",
											built_in: "IDENTIFIER OPTIONS XML_ELEMENT XML_OP XML_ELEMENT_OF DOMDOCCREATE DOMDOCLOADFILE DOMDOCLOADXML DOMDOCSAVEFILE DOMDOCGETROOT DOMDOCADDPI DOMNODEGETNAME DOMNODEGETTYPE DOMNODEGETVALUE DOMNODEGETCHILDCT DOMNODEGETFIRSTCHILD DOMNODEGETSIBLING DOMNODECREATECHILDELEMENT DOMNODESETATTRIBUTE DOMNODEGETCHILDELEMENTCT DOMNODEGETFIRSTCHILDELEMENT DOMNODEGETSIBLINGELEMENT DOMNODEGETATTRIBUTECT DOMNODEGETATTRIBUTEI DOMNODEGETATTRIBUTEBYNAME DOMNODEGETBYNAME"
									},
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, e.C_NUMBER_MODE, {
											className: "literal",
											variants: [{
													begin: "#\\s+",
													relevance: 0
											}, {
													begin: "#[a-zA-Z .]+"
											}]
									}]
							}
					}
			}
			,
			37: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = {
									className: "title.function.invoke",
									relevance: 0,
									begin: t.concat(/\b/, /(?!let\b)/, e.IDENT_RE, t.lookahead(/\s*\(/))
							}
								, i = "([ui](8|16|32|64|128|size)|f(32|64))?"
								, r = ["drop ", "Copy", "Send", "Sized", "Sync", "Drop", "Fn", "FnMut", "FnOnce", "ToOwned", "Clone", "Debug", "PartialEq", "PartialOrd", "Eq", "Ord", "AsRef", "AsMut", "Into", "From", "Default", "Iterator", "Extend", "IntoIterator", "DoubleEndedIterator", "ExactSizeIterator", "SliceConcatExt", "ToString", "assert!", "assert_eq!", "bitflags!", "bytes!", "cfg!", "col!", "concat!", "concat_idents!", "debug_assert!", "debug_assert_eq!", "env!", "panic!", "file!", "format!", "format_args!", "include_bytes!", "include_str!", "line!", "local_data_key!", "module_path!", "option_env!", "print!", "println!", "select!", "stringify!", "try!", "unimplemented!", "unreachable!", "vec!", "write!", "writeln!", "macro_rules!", "assert_ne!", "debug_assert_ne!"]
								, o = ["i8", "i16", "i32", "i64", "i128", "isize", "u8", "u16", "u32", "u64", "u128", "usize", "f32", "f64", "str", "char", "bool", "Box", "Option", "Result", "String", "Vec"];
							return {
									name: "Rust",
									aliases: ["rs"],
									keywords: {
											$pattern: e.IDENT_RE + "!?",
											type: o,
											keyword: ["abstract", "as", "async", "await", "become", "box", "break", "const", "continue", "crate", "do", "dyn", "else", "enum", "extern", "false", "final", "fn", "for", "if", "impl", "in", "let", "loop", "macro", "match", "mod", "move", "mut", "override", "priv", "pub", "ref", "return", "self", "Self", "static", "struct", "super", "trait", "true", "try", "type", "typeof", "unsafe", "unsized", "use", "virtual", "where", "while", "yield"],
											literal: ["true", "false", "Some", "None", "Ok", "Err"],
											built_in: r
									},
									illegal: "</",
									contains: [e.C_LINE_COMMENT_MODE, e.COMMENT("/\\*", "\\*/", {
											contains: ["self"]
									}), e.inherit(e.QUOTE_STRING_MODE, {
											begin: /b?"/,
											illegal: null
									}), {
											className: "string",
											variants: [{
													begin: /b?r(#*)"(.|\n)*?"\1(?!#)/
											}, {
													begin: /b?'\\?(x\w{2}|u\w{4}|U\w{8}|.)'/
											}]
									}, {
											className: "symbol",
											begin: /'[a-zA-Z_][a-zA-Z0-9_]*/
									}, {
											className: "number",
											variants: [{
													begin: "\\b0b([01_]+)" + i
											}, {
													begin: "\\b0o([0-7_]+)" + i
											}, {
													begin: "\\b0x([A-Fa-f0-9_]+)" + i
											}, {
													begin: "\\b(\\d[\\d_]*(\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)" + i
											}],
											relevance: 0
									}, {
											begin: [/fn/, /\s+/, e.UNDERSCORE_IDENT_RE],
											className: {
													1: "keyword",
													3: "title.function"
											}
									}, {
											className: "meta",
											begin: "#!?\\[",
											end: "\\]",
											contains: [{
													className: "string",
													begin: /"/,
													end: /"/
											}]
									}, {
											begin: [/let/, /\s+/, /(?:mut\s+)?/, e.UNDERSCORE_IDENT_RE],
											className: {
													1: "keyword",
													3: "keyword",
													4: "variable"
											}
									}, {
											begin: [/for/, /\s+/, e.UNDERSCORE_IDENT_RE, /\s+/, /in/],
											className: {
													1: "keyword",
													3: "variable",
													5: "keyword"
											}
									}, {
											begin: [/type/, /\s+/, e.UNDERSCORE_IDENT_RE],
											className: {
													1: "keyword",
													3: "title.class"
											}
									}, {
											begin: [/(?:trait|enum|struct|union|impl|for)/, /\s+/, e.UNDERSCORE_IDENT_RE],
											className: {
													1: "keyword",
													3: "title.class"
											}
									}, {
											begin: e.IDENT_RE + "::",
											keywords: {
													keyword: "Self",
													built_in: r,
													type: o
											}
									}, {
											className: "punctuation",
											begin: "->"
									}, n]
							}
					}
			}
			,
			5253: e=>{
					e.exports = function(e) {
							const t = e.regex;
							return {
									name: "SAS",
									case_insensitive: !0,
									keywords: {
											literal: ["null", "missing", "_all_", "_automatic_", "_character_", "_infile_", "_n_", "_name_", "_null_", "_numeric_", "_user_", "_webout_"],
											keyword: ["do", "if", "then", "else", "end", "until", "while", "abort", "array", "attrib", "by", "call", "cards", "cards4", "catname", "continue", "datalines", "datalines4", "delete", "delim", "delimiter", "display", "dm", "drop", "endsas", "error", "file", "filename", "footnote", "format", "goto", "in", "infile", "informat", "input", "keep", "label", "leave", "length", "libname", "link", "list", "lostcard", "merge", "missing", "modify", "options", "output", "out", "page", "put", "redirect", "remove", "rename", "replace", "retain", "return", "select", "set", "skip", "startsas", "stop", "title", "update", "waitsas", "where", "window", "x|0", "systask", "add", "and", "alter", "as", "cascade", "check", "create", "delete", "describe", "distinct", "drop", "foreign", "from", "group", "having", "index", "insert", "into", "in", "key", "like", "message", "modify", "msgtype", "not", "null", "on", "or", "order", "primary", "references", "reset", "restrict", "select", "set", "table", "unique", "update", "validate", "view", "where"]
									},
									contains: [{
											className: "keyword",
											begin: /^\s*(proc [\w\d_]+|data|run|quit)[\s;]/
									}, {
											className: "variable",
											begin: /&[a-zA-Z_&][a-zA-Z0-9_]*\.?/
									}, {
											begin: [/^\s*/, /datalines;|cards;/, /(?:.*\n)+/, /^\s*;\s*$/],
											className: {
													2: "keyword",
													3: "string"
											}
									}, {
											begin: [/%mend|%macro/, /\s+/, /[a-zA-Z_&][a-zA-Z0-9_]*/],
											className: {
													1: "built_in",
													3: "title.function"
											}
									}, {
											className: "built_in",
											begin: "%" + t.either("bquote", "nrbquote", "cmpres", "qcmpres", "compstor", "datatyp", "display", "do", "else", "end", "eval", "global", "goto", "if", "index", "input", "keydef", "label", "left", "length", "let", "local", "lowcase", "macro", "mend", "nrbquote", "nrquote", "nrstr", "put", "qcmpres", "qleft", "qlowcase", "qscan", "qsubstr", "qsysfunc", "qtrim", "quote", "qupcase", "scan", "str", "substr", "superq", "syscall", "sysevalf", "sysexec", "sysfunc", "sysget", "syslput", "sysprod", "sysrc", "sysrput", "then", "to", "trim", "unquote", "until", "upcase", "verify", "while", "window")
									}, {
											className: "title.function",
											begin: /%[a-zA-Z_][a-zA-Z_0-9]*/
									}, {
											className: "meta",
											begin: t.either("abs", "addr", "airy", "arcos", "arsin", "atan", "attrc", "attrn", "band", "betainv", "blshift", "bnot", "bor", "brshift", "bxor", "byte", "cdf", "ceil", "cexist", "cinv", "close", "cnonct", "collate", "compbl", "compound", "compress", "cos", "cosh", "css", "curobs", "cv", "daccdb", "daccdbsl", "daccsl", "daccsyd", "dacctab", "dairy", "date", "datejul", "datepart", "datetime", "day", "dclose", "depdb", "depdbsl", "depdbsl", "depsl", "depsl", "depsyd", "depsyd", "deptab", "deptab", "dequote", "dhms", "dif", "digamma", "dim", "dinfo", "dnum", "dopen", "doptname", "doptnum", "dread", "dropnote", "dsname", "erf", "erfc", "exist", "exp", "fappend", "fclose", "fcol", "fdelete", "fetch", "fetchobs", "fexist", "fget", "fileexist", "filename", "fileref", "finfo", "finv", "fipname", "fipnamel", "fipstate", "floor", "fnonct", "fnote", "fopen", "foptname", "foptnum", "fpoint", "fpos", "fput", "fread", "frewind", "frlen", "fsep", "fuzz", "fwrite", "gaminv", "gamma", "getoption", "getvarc", "getvarn", "hbound", "hms", "hosthelp", "hour", "ibessel", "index", "indexc", "indexw", "input", "inputc", "inputn", "int", "intck", "intnx", "intrr", "irr", "jbessel", "juldate", "kurtosis", "lag", "lbound", "left", "length", "lgamma", "libname", "libref", "log", "log10", "log2", "logpdf", "logpmf", "logsdf", "lowcase", "max", "mdy", "mean", "min", "minute", "mod", "month", "mopen", "mort", "n", "netpv", "nmiss", "normal", "note", "npv", "open", "ordinal", "pathname", "pdf", "peek", "peekc", "pmf", "point", "poisson", "poke", "probbeta", "probbnml", "probchi", "probf", "probgam", "probhypr", "probit", "probnegb", "probnorm", "probt", "put", "putc", "putn", "qtr", "quote", "ranbin", "rancau", "ranexp", "rangam", "range", "rank", "rannor", "ranpoi", "rantbl", "rantri", "ranuni", "repeat", "resolve", "reverse", "rewind", "right", "round", "saving", "scan", "sdf", "second", "sign", "sin", "sinh", "skewness", "soundex", "spedis", "sqrt", "std", "stderr", "stfips", "stname", "stnamel", "substr", "sum", "symget", "sysget", "sysmsg", "sysprod", "sysrc", "system", "tan", "tanh", "time", "timepart", "tinv", "tnonct", "today", "translate", "tranwrd", "trigamma", "trim", "trimn", "trunc", "uniform", "upcase", "uss", "var", "varfmt", "varinfmt", "varlabel", "varlen", "varname", "varnum", "varray", "varrayx", "vartype", "verify", "vformat", "vformatd", "vformatdx", "vformatn", "vformatnx", "vformatw", "vformatwx", "vformatx", "vinarray", "vinarrayx", "vinformat", "vinformatd", "vinformatdx", "vinformatn", "vinformatnx", "vinformatw", "vinformatwx", "vinformatx", "vlabel", "vlabelx", "vlength", "vlengthx", "vname", "vnamex", "vtype", "vtypex", "weekday", "year", "yyq", "zipfips", "zipname", "zipnamel", "zipstate") + "(?=\\()"
									}, {
											className: "string",
											variants: [e.APOS_STRING_MODE, e.QUOTE_STRING_MODE]
									}, e.COMMENT("\\*", ";"), e.C_BLOCK_COMMENT_MODE]
							}
					}
			}
			,
			1849: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = {
									className: "subst",
									variants: [{
											begin: "\\$[A-Za-z0-9_]+"
									}, {
											begin: /\$\{/,
											end: /\}/
									}]
							}
								, i = {
									className: "string",
									variants: [{
											begin: '"""',
											end: '"""'
									}, {
											begin: '"',
											end: '"',
											illegal: "\\n",
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											begin: '[a-z]+"',
											end: '"',
											illegal: "\\n",
											contains: [e.BACKSLASH_ESCAPE, n]
									}, {
											className: "string",
											begin: '[a-z]+"""',
											end: '"""',
											contains: [n],
											relevance: 10
									}]
							}
								, r = {
									className: "type",
									begin: "\\b[A-Z][A-Za-z0-9_]*",
									relevance: 0
							}
								, o = {
									className: "title",
									begin: /[^0-9\n\t "'(),.`{}\[\]:;][^\n\t "'(),.`{}\[\]:;]+|[^0-9\n\t "'(),.`{}\[\]:;=]/,
									relevance: 0
							}
								, s = {
									className: "class",
									beginKeywords: "class object trait type",
									end: /[:={\[\n;]/,
									excludeEnd: !0,
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, {
											beginKeywords: "extends with",
											relevance: 10
									}, {
											begin: /\[/,
											end: /\]/,
											excludeBegin: !0,
											excludeEnd: !0,
											relevance: 0,
											contains: [r]
									}, {
											className: "params",
											begin: /\(/,
											end: /\)/,
											excludeBegin: !0,
											excludeEnd: !0,
											relevance: 0,
											contains: [r]
									}, o]
							}
								, a = {
									className: "function",
									beginKeywords: "def",
									end: t.lookahead(/[:={\[(\n;]/),
									contains: [o]
							};
							return {
									name: "Scala",
									keywords: {
											literal: "true false null",
											keyword: "type yield lazy override def with val var sealed abstract private trait object if then forSome for while do throw finally protected extends import final return else break new catch super class case package default try this match continue throws implicit export enum given transparent"
									},
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, i, r, a, s, e.C_NUMBER_MODE, {
											begin: [/^\s*/, "extension", /\s+(?=[[(])/],
											beginScope: {
													2: "keyword"
											}
									}, {
											begin: [/^\s*/, /end/, /\s+/, /(extension\b)?/],
											beginScope: {
													2: "keyword",
													4: "keyword"
											}
									}, {
											match: /\.inline\b/
									}, {
											begin: /\binline(?=\s)/,
											keywords: "inline"
									}, {
											begin: [/\(\s*/, /using/, /\s+(?!\))/],
											beginScope: {
													2: "keyword"
											}
									}, {
											className: "meta",
											begin: "@[A-Za-z]+"
									}]
							}
					}
			}
			,
			2122: e=>{
					e.exports = function(e) {
							const t = "[^\\(\\)\\[\\]\\{\\}\",'`;#|\\\\\\s]+"
								, n = "(-|\\+)?\\d+([./]\\d+)?"
								, i = {
									$pattern: t,
									built_in: "case-lambda call/cc class define-class exit-handler field import inherit init-field interface let*-values let-values let/ec mixin opt-lambda override protect provide public rename require require-for-syntax syntax syntax-case syntax-error unit/sig unless when with-syntax and begin call-with-current-continuation call-with-input-file call-with-output-file case cond define define-syntax delay do dynamic-wind else for-each if lambda let let* let-syntax letrec letrec-syntax map or syntax-rules ' * + , ,@ - ... / ; < <= = => > >= ` abs acos angle append apply asin assoc assq assv atan boolean? caar cadr call-with-input-file call-with-output-file call-with-values car cdddar cddddr cdr ceiling char->integer char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-lower-case? char-numeric? char-ready? char-upcase char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? char? close-input-port close-output-port complex? cons cos current-input-port current-output-port denominator display eof-object? eq? equal? eqv? eval even? exact->inexact exact? exp expt floor force gcd imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment lcm length list list->string list->vector list-ref list-tail list? load log magnitude make-polar make-rectangular make-string make-vector max member memq memv min modulo negative? newline not null-environment null? number->string number? numerator odd? open-input-file open-output-file output-port? pair? peek-char port? positive? procedure? quasiquote quote quotient rational? rationalize read read-char real-part real? remainder reverse round scheme-report-environment set! set-car! set-cdr! sin sqrt string string->list string->number string->symbol string-append string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? string-copy string-fill! string-length string-ref string-set! string<=? string<? string=? string>=? string>? string? substring symbol->string symbol? tan transcript-off transcript-on truncate values vector vector->list vector-fill! vector-length vector-ref vector-set! with-input-from-file with-output-to-file write write-char zero?"
							}
								, r = {
									className: "literal",
									begin: "(#t|#f|#\\\\" + t + "|#\\\\.)"
							}
								, o = {
									className: "number",
									variants: [{
											begin: n,
											relevance: 0
									}, {
											begin: n + "[+\\-]" + n + "i",
											relevance: 0
									}, {
											begin: "#b[0-1]+(/[0-1]+)?"
									}, {
											begin: "#o[0-7]+(/[0-7]+)?"
									}, {
											begin: "#x[0-9a-f]+(/[0-9a-f]+)?"
									}]
							}
								, s = e.QUOTE_STRING_MODE
								, a = [e.COMMENT(";", "$", {
									relevance: 0
							}), e.COMMENT("#\\|", "\\|#")]
								, l = {
									begin: t,
									relevance: 0
							}
								, c = {
									className: "symbol",
									begin: "'" + t
							}
								, d = {
									endsWithParent: !0,
									relevance: 0
							}
								, p = {
									variants: [{
											begin: /'/
									}, {
											begin: "`"
									}],
									contains: [{
											begin: "\\(",
											end: "\\)",
											contains: ["self", r, s, o, l, c]
									}]
							}
								, u = {
									className: "name",
									relevance: 0,
									begin: t,
									keywords: i
							}
								, h = {
									variants: [{
											begin: "\\(",
											end: "\\)"
									}, {
											begin: "\\[",
											end: "\\]"
									}],
									contains: [{
											begin: /lambda/,
											endsWithParent: !0,
											returnBegin: !0,
											contains: [u, {
													endsParent: !0,
													variants: [{
															begin: /\(/,
															end: /\)/
													}, {
															begin: /\[/,
															end: /\]/
													}],
													contains: [l]
											}]
									}, u, d]
							};
							return d.contains = [r, o, s, l, c, p, h].concat(a),
							{
									name: "Scheme",
									aliases: ["scm"],
									illegal: /\S/,
									contains: [e.SHEBANG(), o, s, c, p, h].concat(a)
							}
					}
			}
			,
			4728: e=>{
					e.exports = function(e) {
							const t = [e.C_NUMBER_MODE, {
									className: "string",
									begin: "'|\"",
									end: "'|\"",
									contains: [e.BACKSLASH_ESCAPE, {
											begin: "''"
									}]
							}];
							return {
									name: "Scilab",
									aliases: ["sci"],
									keywords: {
											$pattern: /%?\w+/,
											keyword: "abort break case clear catch continue do elseif else endfunction end for function global if pause return resume select try then while",
											literal: "%f %F %t %T %pi %eps %inf %nan %e %i %z %s",
											built_in: "abs and acos asin atan ceil cd chdir clearglobal cosh cos cumprod deff disp error exec execstr exists exp eye gettext floor fprintf fread fsolve imag isdef isempty isinfisnan isvector lasterror length load linspace list listfiles log10 log2 log max min msprintf mclose mopen ones or pathconvert poly printf prod pwd rand real round sinh sin size gsort sprintf sqrt strcat strcmps tring sum system tanh tan type typename warning zeros matrix"
									},
									illegal: '("|#|/\\*|\\s+/\\w+)',
									contains: [{
											className: "function",
											beginKeywords: "function",
											end: "$",
											contains: [e.UNDERSCORE_TITLE_MODE, {
													className: "params",
													begin: "\\(",
													end: "\\)"
											}]
									}, {
											begin: "[a-zA-Z_][a-zA-Z_0-9]*[\\.']+",
											relevance: 0
									}, {
											begin: "\\[",
											end: "\\][\\.']*",
											relevance: 0,
											contains: t
									}, e.COMMENT("//", "$")].concat(t)
							}
					}
			}
			,
			6482: e=>{
					const t = ["a", "abbr", "address", "article", "aside", "audio", "b", "blockquote", "body", "button", "canvas", "caption", "cite", "code", "dd", "del", "details", "dfn", "div", "dl", "dt", "em", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hgroup", "html", "i", "iframe", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "mark", "menu", "nav", "object", "ol", "p", "q", "quote", "samp", "section", "span", "strong", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "tr", "ul", "var", "video"]
						, n = ["any-hover", "any-pointer", "aspect-ratio", "color", "color-gamut", "color-index", "device-aspect-ratio", "device-height", "device-width", "display-mode", "forced-colors", "grid", "height", "hover", "inverted-colors", "monochrome", "orientation", "overflow-block", "overflow-inline", "pointer", "prefers-color-scheme", "prefers-contrast", "prefers-reduced-motion", "prefers-reduced-transparency", "resolution", "scan", "scripting", "update", "width", "min-width", "max-width", "min-height", "max-height"]
						, i = ["active", "any-link", "blank", "checked", "current", "default", "defined", "dir", "disabled", "drop", "empty", "enabled", "first", "first-child", "first-of-type", "fullscreen", "future", "focus", "focus-visible", "focus-within", "has", "host", "host-context", "hover", "indeterminate", "in-range", "invalid", "is", "lang", "last-child", "last-of-type", "left", "link", "local-link", "not", "nth-child", "nth-col", "nth-last-child", "nth-last-col", "nth-last-of-type", "nth-of-type", "only-child", "only-of-type", "optional", "out-of-range", "past", "placeholder-shown", "read-only", "read-write", "required", "right", "root", "scope", "target", "target-within", "user-invalid", "valid", "visited", "where"]
						, r = ["after", "backdrop", "before", "cue", "cue-region", "first-letter", "first-line", "grammar-error", "marker", "part", "placeholder", "selection", "slotted", "spelling-error"]
						, o = ["align-content", "align-items", "align-self", "all", "animation", "animation-delay", "animation-direction", "animation-duration", "animation-fill-mode", "animation-iteration-count", "animation-name", "animation-play-state", "animation-timing-function", "backface-visibility", "background", "background-attachment", "background-blend-mode", "background-clip", "background-color", "background-image", "background-origin", "background-position", "background-repeat", "background-size", "block-size", "border", "border-block", "border-block-color", "border-block-end", "border-block-end-color", "border-block-end-style", "border-block-end-width", "border-block-start", "border-block-start-color", "border-block-start-style", "border-block-start-width", "border-block-style", "border-block-width", "border-bottom", "border-bottom-color", "border-bottom-left-radius", "border-bottom-right-radius", "border-bottom-style", "border-bottom-width", "border-collapse", "border-color", "border-image", "border-image-outset", "border-image-repeat", "border-image-slice", "border-image-source", "border-image-width", "border-inline", "border-inline-color", "border-inline-end", "border-inline-end-color", "border-inline-end-style", "border-inline-end-width", "border-inline-start", "border-inline-start-color", "border-inline-start-style", "border-inline-start-width", "border-inline-style", "border-inline-width", "border-left", "border-left-color", "border-left-style", "border-left-width", "border-radius", "border-right", "border-right-color", "border-right-style", "border-right-width", "border-spacing", "border-style", "border-top", "border-top-color", "border-top-left-radius", "border-top-right-radius", "border-top-style", "border-top-width", "border-width", "bottom", "box-decoration-break", "box-shadow", "box-sizing", "break-after", "break-before", "break-inside", "caption-side", "caret-color", "clear", "clip", "clip-path", "clip-rule", "color", "column-count", "column-fill", "column-gap", "column-rule", "column-rule-color", "column-rule-style", "column-rule-width", "column-span", "column-width", "columns", "contain", "content", "content-visibility", "counter-increment", "counter-reset", "cue", "cue-after", "cue-before", "cursor", "direction", "display", "empty-cells", "filter", "flex", "flex-basis", "flex-direction", "flex-flow", "flex-grow", "flex-shrink", "flex-wrap", "float", "flow", "font", "font-display", "font-family", "font-feature-settings", "font-kerning", "font-language-override", "font-size", "font-size-adjust", "font-smoothing", "font-stretch", "font-style", "font-synthesis", "font-variant", "font-variant-caps", "font-variant-east-asian", "font-variant-ligatures", "font-variant-numeric", "font-variant-position", "font-variation-settings", "font-weight", "gap", "glyph-orientation-vertical", "grid", "grid-area", "grid-auto-columns", "grid-auto-flow", "grid-auto-rows", "grid-column", "grid-column-end", "grid-column-start", "grid-gap", "grid-row", "grid-row-end", "grid-row-start", "grid-template", "grid-template-areas", "grid-template-columns", "grid-template-rows", "hanging-punctuation", "height", "hyphens", "icon", "image-orientation", "image-rendering", "image-resolution", "ime-mode", "inline-size", "isolation", "justify-content", "left", "letter-spacing", "line-break", "line-height", "list-style", "list-style-image", "list-style-position", "list-style-type", "margin", "margin-block", "margin-block-end", "margin-block-start", "margin-bottom", "margin-inline", "margin-inline-end", "margin-inline-start", "margin-left", "margin-right", "margin-top", "marks", "mask", "mask-border", "mask-border-mode", "mask-border-outset", "mask-border-repeat", "mask-border-slice", "mask-border-source", "mask-border-width", "mask-clip", "mask-composite", "mask-image", "mask-mode", "mask-origin", "mask-position", "mask-repeat", "mask-size", "mask-type", "max-block-size", "max-height", "max-inline-size", "max-width", "min-block-size", "min-height", "min-inline-size", "min-width", "mix-blend-mode", "nav-down", "nav-index", "nav-left", "nav-right", "nav-up", "none", "normal", "object-fit", "object-position", "opacity", "order", "orphans", "outline", "outline-color", "outline-offset", "outline-style", "outline-width", "overflow", "overflow-wrap", "overflow-x", "overflow-y", "padding", "padding-block", "padding-block-end", "padding-block-start", "padding-bottom", "padding-inline", "padding-inline-end", "padding-inline-start", "padding-left", "padding-right", "padding-top", "page-break-after", "page-break-before", "page-break-inside", "pause", "pause-after", "pause-before", "perspective", "perspective-origin", "pointer-events", "position", "quotes", "resize", "rest", "rest-after", "rest-before", "right", "row-gap", "scroll-margin", "scroll-margin-block", "scroll-margin-block-end", "scroll-margin-block-start", "scroll-margin-bottom", "scroll-margin-inline", "scroll-margin-inline-end", "scroll-margin-inline-start", "scroll-margin-left", "scroll-margin-right", "scroll-margin-top", "scroll-padding", "scroll-padding-block", "scroll-padding-block-end", "scroll-padding-block-start", "scroll-padding-bottom", "scroll-padding-inline", "scroll-padding-inline-end", "scroll-padding-inline-start", "scroll-padding-left", "scroll-padding-right", "scroll-padding-top", "scroll-snap-align", "scroll-snap-stop", "scroll-snap-type", "scrollbar-color", "scrollbar-gutter", "scrollbar-width", "shape-image-threshold", "shape-margin", "shape-outside", "speak", "speak-as", "src", "tab-size", "table-layout", "text-align", "text-align-all", "text-align-last", "text-combine-upright", "text-decoration", "text-decoration-color", "text-decoration-line", "text-decoration-style", "text-emphasis", "text-emphasis-color", "text-emphasis-position", "text-emphasis-style", "text-indent", "text-justify", "text-orientation", "text-overflow", "text-rendering", "text-shadow", "text-transform", "text-underline-position", "top", "transform", "transform-box", "transform-origin", "transform-style", "transition", "transition-delay", "transition-duration", "transition-property", "transition-timing-function", "unicode-bidi", "vertical-align", "visibility", "voice-balance", "voice-duration", "voice-family", "voice-pitch", "voice-range", "voice-rate", "voice-stress", "voice-volume", "white-space", "widows", "width", "will-change", "word-break", "word-spacing", "word-wrap", "writing-mode", "z-index"].reverse();
					e.exports = function(e) {
							const s = (e=>({
									IMPORTANT: {
											scope: "meta",
											begin: "!important"
									},
									BLOCK_COMMENT: e.C_BLOCK_COMMENT_MODE,
									HEXCOLOR: {
											scope: "number",
											begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/
									},
									FUNCTION_DISPATCH: {
											className: "built_in",
											begin: /[\w-]+(?=\()/
									},
									ATTRIBUTE_SELECTOR_MODE: {
											scope: "selector-attr",
											begin: /\[/,
											end: /\]/,
											illegal: "$",
											contains: [e.APOS_STRING_MODE, e.QUOTE_STRING_MODE]
									},
									CSS_NUMBER_MODE: {
											scope: "number",
											begin: e.NUMBER_RE + "(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",
											relevance: 0
									},
									CSS_VARIABLE: {
											className: "attr",
											begin: /--[A-Za-z][A-Za-z0-9_-]*/
									}
							}))(e)
								, a = r
								, l = i
								, c = "@[a-z-]+"
								, d = {
									className: "variable",
									begin: "(\\$[a-zA-Z-][a-zA-Z0-9_-]*)\\b",
									relevance: 0
							};
							return {
									name: "SCSS",
									case_insensitive: !0,
									illegal: "[=/|']",
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, s.CSS_NUMBER_MODE, {
											className: "selector-id",
											begin: "#[A-Za-z0-9_-]+",
											relevance: 0
									}, {
											className: "selector-class",
											begin: "\\.[A-Za-z0-9_-]+",
											relevance: 0
									}, s.ATTRIBUTE_SELECTOR_MODE, {
											className: "selector-tag",
											begin: "\\b(" + t.join("|") + ")\\b",
											relevance: 0
									}, {
											className: "selector-pseudo",
											begin: ":(" + l.join("|") + ")"
									}, {
											className: "selector-pseudo",
											begin: ":(:)?(" + a.join("|") + ")"
									}, d, {
											begin: /\(/,
											end: /\)/,
											contains: [s.CSS_NUMBER_MODE]
									}, s.CSS_VARIABLE, {
											className: "attribute",
											begin: "\\b(" + o.join("|") + ")\\b"
									}, {
											begin: "\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\b"
									}, {
											begin: /:/,
											end: /[;}{]/,
											relevance: 0,
											contains: [s.BLOCK_COMMENT, d, s.HEXCOLOR, s.CSS_NUMBER_MODE, e.QUOTE_STRING_MODE, e.APOS_STRING_MODE, s.IMPORTANT, s.FUNCTION_DISPATCH]
									}, {
											begin: "@(page|font-face)",
											keywords: {
													$pattern: c,
													keyword: "@page @font-face"
											}
									}, {
											begin: "@",
											end: "[{;]",
											returnBegin: !0,
											keywords: {
													$pattern: /[a-z-]+/,
													keyword: "and or not only",
													attribute: n.join(" ")
											},
											contains: [{
													begin: c,
													className: "keyword"
											}, {
													begin: /[a-z-]+(?=:)/,
													className: "attribute"
											}, d, e.QUOTE_STRING_MODE, e.APOS_STRING_MODE, s.HEXCOLOR, s.CSS_NUMBER_MODE]
									}, s.FUNCTION_DISPATCH]
							}
					}
			}
			,
			4509: e=>{
					e.exports = function(e) {
							return {
									name: "Shell Session",
									aliases: ["console", "shellsession"],
									contains: [{
											className: "meta.prompt",
											begin: /^\s{0,3}[/~\w\d[\]()@-]*[>%$#][ ]?/,
											starts: {
													end: /[^\\](?=\s*$)/,
													subLanguage: "bash"
											}
									}]
							}
					}
			}
			,
			243: e=>{
					e.exports = function(e) {
							const t = ["add", "and", "cmp", "cmpg", "cmpl", "const", "div", "double", "float", "goto", "if", "int", "long", "move", "mul", "neg", "new", "nop", "not", "or", "rem", "return", "shl", "shr", "sput", "sub", "throw", "ushr", "xor"];
							return {
									name: "Smali",
									contains: [{
											className: "string",
											begin: '"',
											end: '"',
											relevance: 0
									}, e.COMMENT("#", "$", {
											relevance: 0
									}), {
											className: "keyword",
											variants: [{
													begin: "\\s*\\.end\\s[a-zA-Z0-9]*"
											}, {
													begin: "^[ ]*\\.[a-zA-Z]*",
													relevance: 0
											}, {
													begin: "\\s:[a-zA-Z_0-9]*",
													relevance: 0
											}, {
													begin: "\\s(" + ["transient", "constructor", "abstract", "final", "synthetic", "public", "private", "protected", "static", "bridge", "system"].join("|") + ")"
											}]
									}, {
											className: "built_in",
											variants: [{
													begin: "\\s(" + t.join("|") + ")\\s"
											}, {
													begin: "\\s(" + t.join("|") + ")((-|/)[a-zA-Z0-9]+)+\\s",
													relevance: 10
											}, {
													begin: "\\s(" + ["aget", "aput", "array", "check", "execute", "fill", "filled", "goto/16", "goto/32", "iget", "instance", "invoke", "iput", "monitor", "packed", "sget", "sparse"].join("|") + ")((-|/)[a-zA-Z0-9]+)*\\s",
													relevance: 10
											}]
									}, {
											className: "class",
											begin: "L[^(;:\n]*;",
											relevance: 0
									}, {
											begin: "[vp][0-9]+"
									}]
							}
					}
			}
			,
			5657: e=>{
					e.exports = function(e) {
							const t = "[a-z][a-zA-Z0-9_]*"
								, n = {
									className: "string",
									begin: "\\$.{1}"
							}
								, i = {
									className: "symbol",
									begin: "#" + e.UNDERSCORE_IDENT_RE
							};
							return {
									name: "Smalltalk",
									aliases: ["st"],
									keywords: ["self", "super", "nil", "true", "false", "thisContext"],
									contains: [e.COMMENT('"', '"'), e.APOS_STRING_MODE, {
											className: "type",
											begin: "\\b[A-Z][A-Za-z0-9_]*",
											relevance: 0
									}, {
											begin: t + ":",
											relevance: 0
									}, e.C_NUMBER_MODE, i, n, {
											begin: "\\|[ ]*" + t + "([ ]+" + t + ")*[ ]*\\|",
											returnBegin: !0,
											end: /\|/,
											illegal: /\S/,
											contains: [{
													begin: "(\\|[ ]*)?" + t
											}]
									}, {
											begin: "#\\(",
											end: "\\)",
											contains: [e.APOS_STRING_MODE, n, e.C_NUMBER_MODE, i]
									}]
							}
					}
			}
			,
			5244: e=>{
					e.exports = function(e) {
							return {
									name: "SML (Standard ML)",
									aliases: ["ml"],
									keywords: {
											$pattern: "[a-z_]\\w*!?",
											keyword: "abstype and andalso as case datatype do else end eqtype exception fn fun functor handle if in include infix infixr let local nonfix of op open orelse raise rec sharing sig signature struct structure then type val with withtype where while",
											built_in: "array bool char exn int list option order real ref string substring vector unit word",
											literal: "true false NONE SOME LESS EQUAL GREATER nil"
									},
									illegal: /\/\/|>>/,
									contains: [{
											className: "literal",
											begin: /\[(\|\|)?\]|\(\)/,
											relevance: 0
									}, e.COMMENT("\\(\\*", "\\*\\)", {
											contains: ["self"]
									}), {
											className: "symbol",
											begin: "'[A-Za-z_](?!')[\\w']*"
									}, {
											className: "type",
											begin: "`[A-Z][\\w']*"
									}, {
											className: "type",
											begin: "\\b[A-Z][\\w']*",
											relevance: 0
									}, {
											begin: "[a-z_]\\w*'[\\w']*"
									}, e.inherit(e.APOS_STRING_MODE, {
											className: "string",
											relevance: 0
									}), e.inherit(e.QUOTE_STRING_MODE, {
											illegal: null
									}), {
											className: "number",
											begin: "\\b(0[xX][a-fA-F0-9_]+[Lln]?|0[oO][0-7_]+[Lln]?|0[bB][01_]+[Lln]?|[0-9][0-9_]*([Lln]|(\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)",
											relevance: 0
									}, {
											begin: /[-=]>/
									}]
							}
					}
			}
			,
			7055: e=>{
					e.exports = function(e) {
							const t = {
									className: "string",
									variants: [{
											begin: '"',
											end: '"',
											contains: [{
													begin: '""',
													relevance: 0
											}]
									}, {
											begin: "'",
											end: "'",
											contains: [{
													begin: "''",
													relevance: 0
											}]
									}]
							}
								, n = {
									className: "meta",
									begin: /#\s*[a-z]+\b/,
									end: /$/,
									keywords: {
											keyword: "define undef ifdef ifndef else endif include"
									},
									contains: [{
											begin: /\\\n/,
											relevance: 0
									}, e.inherit(t, {
											className: "string"
									}), {
											className: "string",
											begin: /<[^\n>]*>/,
											end: /$/,
											illegal: "\\n"
									}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
							};
							return {
									name: "SQF",
									case_insensitive: !0,
									keywords: {
											keyword: ["case", "catch", "default", "do", "else", "exit", "exitWith", "for", "forEach", "from", "if", "private", "switch", "then", "throw", "to", "try", "waitUntil", "while", "with"],
											built_in: ["abs", "accTime", "acos", "action", "actionIDs", "actionKeys", "actionKeysImages", "actionKeysNames", "actionKeysNamesArray", "actionName", "actionParams", "activateAddons", "activatedAddons", "activateKey", "add3DENConnection", "add3DENEventHandler", "add3DENLayer", "addAction", "addBackpack", "addBackpackCargo", "addBackpackCargoGlobal", "addBackpackGlobal", "addBinocularItem", "addCamShake", "addCuratorAddons", "addCuratorCameraArea", "addCuratorEditableObjects", "addCuratorEditingArea", "addCuratorPoints", "addEditorObject", "addEventHandler", "addForce", "addForceGeneratorRTD", "addGoggles", "addGroupIcon", "addHandgunItem", "addHeadgear", "addItem", "addItemCargo", "addItemCargoGlobal", "addItemPool", "addItemToBackpack", "addItemToUniform", "addItemToVest", "addLiveStats", "addMagazine", "addMagazineAmmoCargo", "addMagazineCargo", "addMagazineCargoGlobal", "addMagazineGlobal", "addMagazinePool", "addMagazines", "addMagazineTurret", "addMenu", "addMenuItem", "addMissionEventHandler", "addMPEventHandler", "addMusicEventHandler", "addonFiles", "addOwnedMine", "addPlayerScores", "addPrimaryWeaponItem", "addPublicVariableEventHandler", "addRating", "addResources", "addScore", "addScoreSide", "addSecondaryWeaponItem", "addSwitchableUnit", "addTeamMember", "addToRemainsCollector", "addTorque", "addUniform", "addVehicle", "addVest", "addWaypoint", "addWeapon", "addWeaponCargo", "addWeaponCargoGlobal", "addWeaponGlobal", "addWeaponItem", "addWeaponPool", "addWeaponTurret", "addWeaponWithAttachmentsCargo", "addWeaponWithAttachmentsCargoGlobal", "admin", "agent", "agents", "AGLToASL", "aimedAtTarget", "aimPos", "airDensityCurveRTD", "airDensityRTD", "airplaneThrottle", "airportSide", "AISFinishHeal", "alive", "all3DENEntities", "allActiveTitleEffects", "allAddonsInfo", "allAirports", "allControls", "allCurators", "allCutLayers", "allDead", "allDeadMen", "allDiarySubjects", "allDisplays", "allGroups", "allMapMarkers", "allMines", "allMissionObjects", "allow3DMode", "allowCrewInImmobile", "allowCuratorLogicIgnoreAreas", "allowDamage", "allowDammage", "allowFileOperations", "allowFleeing", "allowGetIn", "allowSprint", "allPlayers", "allSimpleObjects", "allSites", "allTurrets", "allUnits", "allUnitsUAV", "allVariables", "ammo", "ammoOnPylon", "and", "animate", "animateBay", "animateDoor", "animatePylon", "animateSource", "animationNames", "animationPhase", "animationSourcePhase", "animationState", "apertureParams", "append", "apply", "armoryPoints", "arrayIntersect", "asin", "ASLToAGL", "ASLToATL", "assert", "assignAsCargo", "assignAsCargoIndex", "assignAsCommander", "assignAsDriver", "assignAsGunner", "assignAsTurret", "assignCurator", "assignedCargo", "assignedCommander", "assignedDriver", "assignedGunner", "assignedItems", "assignedTarget", "assignedTeam", "assignedVehicle", "assignedVehicleRole", "assignItem", "assignTeam", "assignToAirport", "atan", "atan2", "atg", "ATLToASL", "attachedObject", "attachedObjects", "attachedTo", "attachObject", "attachTo", "attackEnabled", "backpack", "backpackCargo", "backpackContainer", "backpackItems", "backpackMagazines", "backpackSpaceFor", "batteryChargeRTD", "behaviour", "benchmark", "bezierInterpolation", "binocular", "binocularItems", "binocularMagazine", "boundingBox", "boundingBoxReal", "boundingCenter", "break", "breakOut", "breakTo", "breakWith", "briefingName", "buildingExit", "buildingPos", "buldozer_EnableRoadDiag", "buldozer_IsEnabledRoadDiag", "buldozer_LoadNewRoads", "buldozer_reloadOperMap", "buttonAction", "buttonSetAction", "cadetMode", "calculatePath", "calculatePlayerVisibilityByFriendly", "call", "callExtension", "camCommand", "camCommit", "camCommitPrepared", "camCommitted", "camConstuctionSetParams", "camCreate", "camDestroy", "cameraEffect", "cameraEffectEnableHUD", "cameraInterest", "cameraOn", "cameraView", "campaignConfigFile", "camPreload", "camPreloaded", "camPrepareBank", "camPrepareDir", "camPrepareDive", "camPrepareFocus", "camPrepareFov", "camPrepareFovRange", "camPreparePos", "camPrepareRelPos", "camPrepareTarget", "camSetBank", "camSetDir", "camSetDive", "camSetFocus", "camSetFov", "camSetFovRange", "camSetPos", "camSetRelPos", "camSetTarget", "camTarget", "camUseNVG", "canAdd", "canAddItemToBackpack", "canAddItemToUniform", "canAddItemToVest", "cancelSimpleTaskDestination", "canFire", "canMove", "canSlingLoad", "canStand", "canSuspend", "canTriggerDynamicSimulation", "canUnloadInCombat", "canVehicleCargo", "captive", "captiveNum", "cbChecked", "cbSetChecked", "ceil", "channelEnabled", "cheatsEnabled", "checkAIFeature", "checkVisibility", "className", "clear3DENAttribute", "clear3DENInventory", "clearAllItemsFromBackpack", "clearBackpackCargo", "clearBackpackCargoGlobal", "clearForcesRTD", "clearGroupIcons", "clearItemCargo", "clearItemCargoGlobal", "clearItemPool", "clearMagazineCargo", "clearMagazineCargoGlobal", "clearMagazinePool", "clearOverlay", "clearRadio", "clearVehicleInit", "clearWeaponCargo", "clearWeaponCargoGlobal", "clearWeaponPool", "clientOwner", "closeDialog", "closeDisplay", "closeOverlay", "collapseObjectTree", "collect3DENHistory", "collectiveRTD", "combatBehaviour", "combatMode", "commandArtilleryFire", "commandChat", "commander", "commandFire", "commandFollow", "commandFSM", "commandGetOut", "commandingMenu", "commandMove", "commandRadio", "commandStop", "commandSuppressiveFire", "commandTarget", "commandWatch", "comment", "commitOverlay", "compile", "compileFinal", "compileScript", "completedFSM", "composeText", "configClasses", "configFile", "configHierarchy", "configName", "configOf", "configProperties", "configSourceAddonList", "configSourceMod", "configSourceModList", "confirmSensorTarget", "connectTerminalToUAV", "connectToServer", "continue", "continueWith", "controlsGroupCtrl", "copyFromClipboard", "copyToClipboard", "copyWaypoints", "cos", "count", "countEnemy", "countFriendly", "countSide", "countType", "countUnknown", "create3DENComposition", "create3DENEntity", "createAgent", "createCenter", "createDialog", "createDiaryLink", "createDiaryRecord", "createDiarySubject", "createDisplay", "createGearDialog", "createGroup", "createGuardedPoint", "createHashMap", "createHashMapFromArray", "createLocation", "createMarker", "createMarkerLocal", "createMenu", "createMine", "createMissionDisplay", "createMPCampaignDisplay", "createSimpleObject", "createSimpleTask", "createSite", "createSoundSource", "createTarget", "createTask", "createTeam", "createTrigger", "createUnit", "createVehicle", "createVehicleCrew", "createVehicleLocal", "crew", "ctAddHeader", "ctAddRow", "ctClear", "ctCurSel", "ctData", "ctFindHeaderRows", "ctFindRowHeader", "ctHeaderControls", "ctHeaderCount", "ctRemoveHeaders", "ctRemoveRows", "ctrlActivate", "ctrlAddEventHandler", "ctrlAngle", "ctrlAnimateModel", "ctrlAnimationPhaseModel", "ctrlAutoScrollDelay", "ctrlAutoScrollRewind", "ctrlAutoScrollSpeed", "ctrlChecked", "ctrlClassName", "ctrlCommit", "ctrlCommitted", "ctrlCreate", "ctrlDelete", "ctrlEnable", "ctrlEnabled", "ctrlFade", "ctrlFontHeight", "ctrlHTMLLoaded", "ctrlIDC", "ctrlIDD", "ctrlMapAnimAdd", "ctrlMapAnimClear", "ctrlMapAnimCommit", "ctrlMapAnimDone", "ctrlMapCursor", "ctrlMapMouseOver", "ctrlMapScale", "ctrlMapScreenToWorld", "ctrlMapWorldToScreen", "ctrlModel", "ctrlModelDirAndUp", "ctrlModelScale", "ctrlMousePosition", "ctrlParent", "ctrlParentControlsGroup", "ctrlPosition", "ctrlRemoveAllEventHandlers", "ctrlRemoveEventHandler", "ctrlScale", "ctrlScrollValues", "ctrlSetActiveColor", "ctrlSetAngle", "ctrlSetAutoScrollDelay", "ctrlSetAutoScrollRewind", "ctrlSetAutoScrollSpeed", "ctrlSetBackgroundColor", "ctrlSetChecked", "ctrlSetDisabledColor", "ctrlSetEventHandler", "ctrlSetFade", "ctrlSetFocus", "ctrlSetFont", "ctrlSetFontH1", "ctrlSetFontH1B", "ctrlSetFontH2", "ctrlSetFontH2B", "ctrlSetFontH3", "ctrlSetFontH3B", "ctrlSetFontH4", "ctrlSetFontH4B", "ctrlSetFontH5", "ctrlSetFontH5B", "ctrlSetFontH6", "ctrlSetFontH6B", "ctrlSetFontHeight", "ctrlSetFontHeightH1", "ctrlSetFontHeightH2", "ctrlSetFontHeightH3", "ctrlSetFontHeightH4", "ctrlSetFontHeightH5", "ctrlSetFontHeightH6", "ctrlSetFontHeightSecondary", "ctrlSetFontP", "ctrlSetFontPB", "ctrlSetFontSecondary", "ctrlSetForegroundColor", "ctrlSetModel", "ctrlSetModelDirAndUp", "ctrlSetModelScale", "ctrlSetMousePosition", "ctrlSetPixelPrecision", "ctrlSetPosition", "ctrlSetPositionH", "ctrlSetPositionW", "ctrlSetPositionX", "ctrlSetPositionY", "ctrlSetScale", "ctrlSetScrollValues", "ctrlSetStructuredText", "ctrlSetText", "ctrlSetTextColor", "ctrlSetTextColorSecondary", "ctrlSetTextSecondary", "ctrlSetTextSelection", "ctrlSetTooltip", "ctrlSetTooltipColorBox", "ctrlSetTooltipColorShade", "ctrlSetTooltipColorText", "ctrlSetURL", "ctrlShow", "ctrlShown", "ctrlStyle", "ctrlText", "ctrlTextColor", "ctrlTextHeight", "ctrlTextSecondary", "ctrlTextSelection", "ctrlTextWidth", "ctrlTooltip", "ctrlType", "ctrlURL", "ctrlVisible", "ctRowControls", "ctRowCount", "ctSetCurSel", "ctSetData", "ctSetHeaderTemplate", "ctSetRowTemplate", "ctSetValue", "ctValue", "curatorAddons", "curatorCamera", "curatorCameraArea", "curatorCameraAreaCeiling", "curatorCoef", "curatorEditableObjects", "curatorEditingArea", "curatorEditingAreaType", "curatorMouseOver", "curatorPoints", "curatorRegisteredObjects", "curatorSelected", "curatorWaypointCost", "current3DENOperation", "currentChannel", "currentCommand", "currentMagazine", "currentMagazineDetail", "currentMagazineDetailTurret", "currentMagazineTurret", "currentMuzzle", "currentNamespace", "currentPilot", "currentTask", "currentTasks", "currentThrowable", "currentVisionMode", "currentWaypoint", "currentWeapon", "currentWeaponMode", "currentWeaponTurret", "currentZeroing", "cursorObject", "cursorTarget", "customChat", "customRadio", "customWaypointPosition", "cutFadeOut", "cutObj", "cutRsc", "cutText", "damage", "date", "dateToNumber", "daytime", "deActivateKey", "debriefingText", "debugFSM", "debugLog", "decayGraphValues", "deg", "delete3DENEntities", "deleteAt", "deleteCenter", "deleteCollection", "deleteEditorObject", "deleteGroup", "deleteGroupWhenEmpty", "deleteIdentity", "deleteLocation", "deleteMarker", "deleteMarkerLocal", "deleteRange", "deleteResources", "deleteSite", "deleteStatus", "deleteTarget", "deleteTeam", "deleteVehicle", "deleteVehicleCrew", "deleteWaypoint", "detach", "detectedMines", "diag_activeMissionFSMs", "diag_activeScripts", "diag_activeSQSScripts", "diag_captureFrameToFile", "diag_captureSlowFrame", "diag_deltaTime", "diag_drawMode", "diag_enable", "diag_enabled", "diag_fps", "diag_fpsMin", "diag_frameNo", "diag_list", "diag_mergeConfigFile", "diag_scope", "diag_activeSQFScripts", "diag_allMissionEventHandlers", "diag_captureFrame", "diag_codePerformance", "diag_dumpCalltraceToLog", "diag_dumpTerrainSynth", "diag_dynamicSimulationEnd", "diag_exportConfig", "diag_exportTerrainSVG", "diag_lightNewLoad", "diag_localized", "diag_log", "diag_logSlowFrame", "diag_recordTurretLimits", "diag_resetShapes", "diag_setLightNew", "diag_tickTime", "diag_toggle", "dialog", "diaryRecordNull", "diarySubjectExists", "didJIP", "didJIPOwner", "difficulty", "difficultyEnabled", "difficultyEnabledRTD", "difficultyOption", "direction", "directSay", "disableAI", "disableCollisionWith", "disableConversation", "disableDebriefingStats", "disableMapIndicators", "disableNVGEquipment", "disableRemoteSensors", "disableSerialization", "disableTIEquipment", "disableUAVConnectability", "disableUserInput", "displayAddEventHandler", "displayCtrl", "displayParent", "displayRemoveAllEventHandlers", "displayRemoveEventHandler", "displaySetEventHandler", "dissolveTeam", "distance", "distance2D", "distanceSqr", "distributionRegion", "do3DENAction", "doArtilleryFire", "doFire", "doFollow", "doFSM", "doGetOut", "doMove", "doorPhase", "doStop", "doSuppressiveFire", "doTarget", "doWatch", "drawArrow", "drawEllipse", "drawIcon", "drawIcon3D", "drawLine", "drawLine3D", "drawLink", "drawLocation", "drawPolygon", "drawRectangle", "drawTriangle", "driver", "drop", "dynamicSimulationDistance", "dynamicSimulationDistanceCoef", "dynamicSimulationEnabled", "dynamicSimulationSystemEnabled", "echo", "edit3DENMissionAttributes", "editObject", "editorSetEventHandler", "effectiveCommander", "elevatePeriscope", "emptyPositions", "enableAI", "enableAIFeature", "enableAimPrecision", "enableAttack", "enableAudioFeature", "enableAutoStartUpRTD", "enableAutoTrimRTD", "enableCamShake", "enableCaustics", "enableChannel", "enableCollisionWith", "enableCopilot", "enableDebriefingStats", "enableDiagLegend", "enableDynamicSimulation", "enableDynamicSimulationSystem", "enableEndDialog", "enableEngineArtillery", "enableEnvironment", "enableFatigue", "enableGunLights", "enableInfoPanelComponent", "enableIRLasers", "enableMimics", "enablePersonTurret", "enableRadio", "enableReload", "enableRopeAttach", "enableSatNormalOnDetail", "enableSaving", "enableSentences", "enableSimulation", "enableSimulationGlobal", "enableStamina", "enableStressDamage", "enableTeamSwitch", "enableTraffic", "enableUAVConnectability", "enableUAVWaypoints", "enableVehicleCargo", "enableVehicleSensor", "enableWeaponDisassembly", "endLoadingScreen", "endMission", "enemy", "engineOn", "enginesIsOnRTD", "enginesPowerRTD", "enginesRpmRTD", "enginesTorqueRTD", "entities", "environmentEnabled", "environmentVolume", "estimatedEndServerTime", "estimatedTimeLeft", "evalObjectArgument", "everyBackpack", "everyContainer", "exec", "execEditorScript", "execFSM", "execVM", "exp", "expectedDestination", "exportJIPMessages", "exportLandscapeXYZ", "eyeDirection", "eyePos", "face", "faction", "fadeEnvironment", "fadeMusic", "fadeRadio", "fadeSound", "fadeSpeech", "failMission", "fileExists", "fillWeaponsFromPool", "find", "findCover", "findDisplay", "findEditorObject", "findEmptyPosition", "findEmptyPositionReady", "findIf", "findNearestEnemy", "finishMissionInit", "finite", "fire", "fireAtTarget", "firstBackpack", "flag", "flagAnimationPhase", "flagOwner", "flagSide", "flagTexture", "flatten", "fleeing", "floor", "flyInHeight", "flyInHeightASL", "focusedCtrl", "fog", "fogForecast", "fogParams", "forceAddUniform", "forceAtPositionRTD", "forceCadetDifficulty", "forcedMap", "forceEnd", "forceFlagTexture", "forceFollowRoad", "forceGeneratorRTD", "forceMap", "forceRespawn", "forceSpeed", "forceUnicode", "forceWalk", "forceWeaponFire", "forceWeatherChange", "forEachMember", "forEachMemberAgent", "forEachMemberTeam", "forgetTarget", "format", "formation", "formationDirection", "formationLeader", "formationMembers", "formationPosition", "formationTask", "formatText", "formLeader", "freeLook", "friendly", "fromEditor", "fuel", "fullCrew", "gearIDCAmmoCount", "gearSlotAmmoCount", "gearSlotData", "get", "get3DENActionState", "get3DENAttribute", "get3DENCamera", "get3DENConnections", "get3DENEntity", "get3DENEntityID", "get3DENGrid", "get3DENIconsVisible", "get3DENLayerEntities", "get3DENLinesVisible", "get3DENMissionAttribute", "get3DENMouseOver", "get3DENSelected", "getAimingCoef", "getAllEnvSoundControllers", "getAllHitPointsDamage", "getAllOwnedMines", "getAllPylonsInfo", "getAllSoundControllers", "getAllUnitTraits", "getAmmoCargo", "getAnimAimPrecision", "getAnimSpeedCoef", "getArray", "getArtilleryAmmo", "getArtilleryComputerSettings", "getArtilleryETA", "getAssetDLCInfo", "getAssignedCuratorLogic", "getAssignedCuratorUnit", "getAttackTarget", "getAudioOptionVolumes", "getBackpackCargo", "getBleedingRemaining", "getBurningValue", "getCalculatePlayerVisibilityByFriendly", "getCameraViewDirection", "getCargoIndex", "getCenterOfMass", "getClientState", "getClientStateNumber", "getCompatiblePylonMagazines", "getConnectedUAV", "getContainerMaxLoad", "getCursorObjectParams", "getCustomAimCoef", "getCustomSoundController", "getCustomSoundControllerCount", "getDammage", "getDescription", "getDir", "getDirVisual", "getDiverState", "getDLCAssetsUsage", "getDLCAssetsUsageByName", "getDLCs", "getDLCUsageTime", "getEditorCamera", "getEditorMode", "getEditorObjectScope", "getElevationOffset", "getEnvSoundController", "getFatigue", "getFieldManualStartPage", "getForcedFlagTexture", "getFriend", "getFSMVariable", "getFuelCargo", "getGraphValues", "getGroupIcon", "getGroupIconParams", "getGroupIcons", "getHideFrom", "getHit", "getHitIndex", "getHitPointDamage", "getItemCargo", "getLighting", "getLightingAt", "getLoadedModsInfo", "getMagazineCargo", "getMarkerColor", "getMarkerPos", "getMarkerSize", "getMarkerType", "getMass", "getMissionConfig", "getMissionConfigValue", "getMissionDLCs", "getMissionLayerEntities", "getMissionLayers", "getMissionPath", "getModelInfo", "getMousePosition", "getMusicPlayedTime", "getNumber", "getObjectArgument", "getObjectChildren", "getObjectDLC", "getObjectFOV", "getObjectMaterials", "getObjectProxy", "getObjectScale", "getObjectTextures", "getObjectType", "getObjectViewDistance", "getOrDefault", "getOxygenRemaining", "getPersonUsedDLCs", "getPilotCameraDirection", "getPilotCameraPosition", "getPilotCameraRotation", "getPilotCameraTarget", "getPlateNumber", "getPlayerChannel", "getPlayerID", "getPlayerScores", "getPlayerUID", "getPlayerUIDOld", "getPlayerVoNVolume", "getPos", "getPosASL", "getPosASLVisual", "getPosASLW", "getPosATL", "getPosATLVisual", "getPosVisual", "getPosWorld", "getPosWorldVisual", "getPylonMagazines", "getRelDir", "getRelPos", "getRemoteSensorsDisabled", "getRepairCargo", "getResolution", "getRoadInfo", "getRotorBrakeRTD", "getShadowDistance", "getShotParents", "getSlingLoad", "getSoundController", "getSoundControllerResult", "getSpeed", "getStamina", "getStatValue", "getSteamFriendsServers", "getSubtitleOptions", "getSuppression", "getTerrainGrid", "getTerrainHeightASL", "getText", "getTextRaw", "getTextWidth", "getTotalDLCUsageTime", "getTrimOffsetRTD", "getUnitLoadout", "getUnitTrait", "getUserMFDText", "getUserMFDValue", "getVariable", "getVehicleCargo", "getVehicleTIPars", "getWeaponCargo", "getWeaponSway", "getWingsOrientationRTD", "getWingsPositionRTD", "getWorld", "getWPPos", "glanceAt", "globalChat", "globalRadio", "goggles", "goto", "group", "groupChat", "groupFromNetId", "groupIconSelectable", "groupIconsVisible", "groupId", "groupOwner", "groupRadio", "groupSelectedUnits", "groupSelectUnit", "gunner", "gusts", "halt", "handgunItems", "handgunMagazine", "handgunWeapon", "handsHit", "hasInterface", "hasPilotCamera", "hasWeapon", "hcAllGroups", "hcGroupParams", "hcLeader", "hcRemoveAllGroups", "hcRemoveGroup", "hcSelected", "hcSelectGroup", "hcSetGroup", "hcShowBar", "hcShownBar", "headgear", "hideBehindScripted", "hideBody", "hideObject", "hideObjectGlobal", "hideSelection", "hierarchyObjectsCount", "hint", "hintC", "hintCadet", "hintSilent", "hmd", "hostMission", "htmlLoad", "HUDMovementLevels", "humidity", "image", "importAllGroups", "importance", "in", "inArea", "inAreaArray", "incapacitatedState", "inflame", "inflamed", "infoPanel", "infoPanelComponentEnabled", "infoPanelComponents", "infoPanels", "inGameUISetEventHandler", "inheritsFrom", "initAmbientLife", "inPolygon", "inputAction", "inRangeOfArtillery", "insert", "insertEditorObject", "intersect", "is3DEN", "is3DENMultiplayer", "is3DENPreview", "isAbleToBreathe", "isActionMenuVisible", "isAgent", "isAimPrecisionEnabled", "isArray", "isAutoHoverOn", "isAutonomous", "isAutoStartUpEnabledRTD", "isAutotest", "isAutoTrimOnRTD", "isBleeding", "isBurning", "isClass", "isCollisionLightOn", "isCopilotEnabled", "isDamageAllowed", "isDedicated", "isDLCAvailable", "isEngineOn", "isEqualTo", "isEqualType", "isEqualTypeAll", "isEqualTypeAny", "isEqualTypeArray", "isEqualTypeParams", "isFilePatchingEnabled", "isFinal", "isFlashlightOn", "isFlatEmpty", "isForcedWalk", "isFormationLeader", "isGameFocused", "isGamePaused", "isGroupDeletedWhenEmpty", "isHidden", "isHideBehindScripted", "isInRemainsCollector", "isInstructorFigureEnabled", "isIRLaserOn", "isKeyActive", "isKindOf", "isLaserOn", "isLightOn", "isLocalized", "isManualFire", "isMarkedForCollection", "isMultiplayer", "isMultiplayerSolo", "isNil", "isNotEqualTo", "isNull", "isNumber", "isObjectHidden", "isObjectRTD", "isOnRoad", "isPiPEnabled", "isPlayer", "isRealTime", "isRemoteExecuted", "isRemoteExecutedJIP", "isSensorTargetConfirmed", "isServer", "isShowing3DIcons", "isSimpleObject", "isSprintAllowed", "isStaminaEnabled", "isSteamMission", "isStreamFriendlyUIEnabled", "isStressDamageEnabled", "isText", "isTouchingGround", "isTurnedOut", "isTutHintsEnabled", "isUAVConnectable", "isUAVConnected", "isUIContext", "isUniformAllowed", "isVehicleCargo", "isVehicleRadarOn", "isVehicleSensorEnabled", "isWalking", "isWeaponDeployed", "isWeaponRested", "itemCargo", "items", "itemsWithMagazines", "join", "joinAs", "joinAsSilent", "joinSilent", "joinString", "kbAddDatabase", "kbAddDatabaseTargets", "kbAddTopic", "kbHasTopic", "kbReact", "kbRemoveTopic", "kbTell", "kbWasSaid", "keyImage", "keyName", "keys", "knowsAbout", "land", "landAt", "landResult", "language", "laserTarget", "lbAdd", "lbClear", "lbColor", "lbColorRight", "lbCurSel", "lbData", "lbDelete", "lbIsSelected", "lbPicture", "lbPictureRight", "lbSelection", "lbSetColor", "lbSetColorRight", "lbSetCurSel", "lbSetData", "lbSetPicture", "lbSetPictureColor", "lbSetPictureColorDisabled", "lbSetPictureColorSelected", "lbSetPictureRight", "lbSetPictureRightColor", "lbSetPictureRightColorDisabled", "lbSetPictureRightColorSelected", "lbSetSelectColor", "lbSetSelectColorRight", "lbSetSelected", "lbSetText", "lbSetTextRight", "lbSetTooltip", "lbSetValue", "lbSize", "lbSort", "lbSortByValue", "lbText", "lbTextRight", "lbValue", "leader", "leaderboardDeInit", "leaderboardGetRows", "leaderboardInit", "leaderboardRequestRowsFriends", "leaderboardRequestRowsGlobal", "leaderboardRequestRowsGlobalAroundUser", "leaderboardsRequestUploadScore", "leaderboardsRequestUploadScoreKeepBest", "leaderboardState", "leaveVehicle", "libraryCredits", "libraryDisclaimers", "lifeState", "lightAttachObject", "lightDetachObject", "lightIsOn", "lightnings", "limitSpeed", "linearConversion", "lineIntersects", "lineIntersectsObjs", "lineIntersectsSurfaces", "lineIntersectsWith", "linkItem", "list", "listObjects", "listRemoteTargets", "listVehicleSensors", "ln", "lnbAddArray", "lnbAddColumn", "lnbAddRow", "lnbClear", "lnbColor", "lnbColorRight", "lnbCurSelRow", "lnbData", "lnbDeleteColumn", "lnbDeleteRow", "lnbGetColumnsPosition", "lnbPicture", "lnbPictureRight", "lnbSetColor", "lnbSetColorRight", "lnbSetColumnsPos", "lnbSetCurSelRow", "lnbSetData", "lnbSetPicture", "lnbSetPictureColor", "lnbSetPictureColorRight", "lnbSetPictureColorSelected", "lnbSetPictureColorSelectedRight", "lnbSetPictureRight", "lnbSetText", "lnbSetTextRight", "lnbSetTooltip", "lnbSetValue", "lnbSize", "lnbSort", "lnbSortByValue", "lnbText", "lnbTextRight", "lnbValue", "load", "loadAbs", "loadBackpack", "loadFile", "loadGame", "loadIdentity", "loadMagazine", "loadOverlay", "loadStatus", "loadUniform", "loadVest", "local", "localize", "localNamespace", "locationPosition", "lock", "lockCameraTo", "lockCargo", "lockDriver", "locked", "lockedCargo", "lockedDriver", "lockedInventory", "lockedTurret", "lockIdentity", "lockInventory", "lockTurret", "lockWP", "log", "logEntities", "logNetwork", "logNetworkTerminate", "lookAt", "lookAtPos", "magazineCargo", "magazines", "magazinesAllTurrets", "magazinesAmmo", "magazinesAmmoCargo", "magazinesAmmoFull", "magazinesDetail", "magazinesDetailBackpack", "magazinesDetailUniform", "magazinesDetailVest", "magazinesTurret", "magazineTurretAmmo", "mapAnimAdd", "mapAnimClear", "mapAnimCommit", "mapAnimDone", "mapCenterOnCamera", "mapGridPosition", "markAsFinishedOnSteam", "markerAlpha", "markerBrush", "markerChannel", "markerColor", "markerDir", "markerPolyline", "markerPos", "markerShadow", "markerShape", "markerSize", "markerText", "markerType", "matrixMultiply", "matrixTranspose", "max", "members", "menuAction", "menuAdd", "menuChecked", "menuClear", "menuCollapse", "menuData", "menuDelete", "menuEnable", "menuEnabled", "menuExpand", "menuHover", "menuPicture", "menuSetAction", "menuSetCheck", "menuSetData", "menuSetPicture", "menuSetShortcut", "menuSetText", "menuSetURL", "menuSetValue", "menuShortcut", "menuShortcutText", "menuSize", "menuSort", "menuText", "menuURL", "menuValue", "merge", "min", "mineActive", "mineDetectedBy", "missileTarget", "missileTargetPos", "missionConfigFile", "missionDifficulty", "missionName", "missionNameSource", "missionNamespace", "missionStart", "missionVersion", "mod", "modelToWorld", "modelToWorldVisual", "modelToWorldVisualWorld", "modelToWorldWorld", "modParams", "moonIntensity", "moonPhase", "morale", "move", "move3DENCamera", "moveInAny", "moveInCargo", "moveInCommander", "moveInDriver", "moveInGunner", "moveInTurret", "moveObjectToEnd", "moveOut", "moveTarget", "moveTime", "moveTo", "moveToCompleted", "moveToFailed", "musicVolume", "name", "namedProperties", "nameSound", "nearEntities", "nearestBuilding", "nearestLocation", "nearestLocations", "nearestLocationWithDubbing", "nearestObject", "nearestObjects", "nearestTerrainObjects", "nearObjects", "nearObjectsReady", "nearRoads", "nearSupplies", "nearTargets", "needReload", "netId", "netObjNull", "newOverlay", "nextMenuItemIndex", "nextWeatherChange", "nMenuItems", "not", "numberOfEnginesRTD", "numberToDate", "object", "objectCurators", "objectFromNetId", "objectParent", "objStatus", "onBriefingGear", "onBriefingGroup", "onBriefingNotes", "onBriefingPlan", "onBriefingTeamSwitch", "onCommandModeChanged", "onDoubleClick", "onEachFrame", "onGroupIconClick", "onGroupIconOverEnter", "onGroupIconOverLeave", "onHCGroupSelectionChanged", "onMapSingleClick", "onPlayerConnected", "onPlayerDisconnected", "onPreloadFinished", "onPreloadStarted", "onShowNewObject", "onTeamSwitch", "openCuratorInterface", "openDLCPage", "openDSInterface", "openGPS", "openMap", "openSteamApp", "openYoutubeVideo", "or", "orderGetIn", "overcast", "overcastForecast", "owner", "param", "params", "parseNumber", "parseSimpleArray", "parseText", "parsingNamespace", "particlesQuality", "periscopeElevation", "pickWeaponPool", "pitch", "pixelGrid", "pixelGridBase", "pixelGridNoUIScale", "pixelH", "pixelW", "playableSlotsNumber", "playableUnits", "playAction", "playActionNow", "player", "playerRespawnTime", "playerSide", "playersNumber", "playGesture", "playMission", "playMove", "playMoveNow", "playMusic", "playScriptedMission", "playSound", "playSound3D", "position", "positionCameraToWorld", "posScreenToWorld", "posWorldToScreen", "ppEffectAdjust", "ppEffectCommit", "ppEffectCommitted", "ppEffectCreate", "ppEffectDestroy", "ppEffectEnable", "ppEffectEnabled", "ppEffectForceInNVG", "precision", "preloadCamera", "preloadObject", "preloadSound", "preloadTitleObj", "preloadTitleRsc", "preprocessFile", "preprocessFileLineNumbers", "primaryWeapon", "primaryWeaponItems", "primaryWeaponMagazine", "priority", "processDiaryLink", "processInitCommands", "productVersion", "profileName", "profileNamespace", "profileNameSteam", "progressLoadingScreen", "progressPosition", "progressSetPosition", "publicVariable", "publicVariableClient", "publicVariableServer", "pushBack", "pushBackUnique", "putWeaponPool", "queryItemsPool", "queryMagazinePool", "queryWeaponPool", "rad", "radioChannelAdd", "radioChannelCreate", "radioChannelInfo", "radioChannelRemove", "radioChannelSetCallSign", "radioChannelSetLabel", "radioVolume", "rain", "rainbow", "random", "rank", "rankId", "rating", "rectangular", "registeredTasks", "registerTask", "reload", "reloadEnabled", "remoteControl", "remoteExec", "remoteExecCall", "remoteExecutedOwner", "remove3DENConnection", "remove3DENEventHandler", "remove3DENLayer", "removeAction", "removeAll3DENEventHandlers", "removeAllActions", "removeAllAssignedItems", "removeAllBinocularItems", "removeAllContainers", "removeAllCuratorAddons", "removeAllCuratorCameraAreas", "removeAllCuratorEditingAreas", "removeAllEventHandlers", "removeAllHandgunItems", "removeAllItems", "removeAllItemsWithMagazines", "removeAllMissionEventHandlers", "removeAllMPEventHandlers", "removeAllMusicEventHandlers", "removeAllOwnedMines", "removeAllPrimaryWeaponItems", "removeAllSecondaryWeaponItems", "removeAllWeapons", "removeBackpack", "removeBackpackGlobal", "removeBinocularItem", "removeClothing", "removeCuratorAddons", "removeCuratorCameraArea", "removeCuratorEditableObjects", "removeCuratorEditingArea", "removeDiaryRecord", "removeDiarySubject", "removeDrawIcon", "removeDrawLinks", "removeEventHandler", "removeFromRemainsCollector", "removeGoggles", "removeGroupIcon", "removeHandgunItem", "removeHeadgear", "removeItem", "removeItemFromBackpack", "removeItemFromUniform", "removeItemFromVest", "removeItems", "removeMagazine", "removeMagazineGlobal", "removeMagazines", "removeMagazinesTurret", "removeMagazineTurret", "removeMenuItem", "removeMissionEventHandler", "removeMPEventHandler", "removeMusicEventHandler", "removeOwnedMine", "removePrimaryWeaponItem", "removeSecondaryWeaponItem", "removeSimpleTask", "removeSwitchableUnit", "removeTeamMember", "removeUniform", "removeVest", "removeWeapon", "removeWeaponAttachmentCargo", "removeWeaponCargo", "removeWeaponGlobal", "removeWeaponTurret", "reportRemoteTarget", "requiredVersion", "resetCamShake", "resetSubgroupDirection", "resize", "resources", "respawnVehicle", "restartEditorCamera", "reveal", "revealMine", "reverse", "reversedMouseY", "roadAt", "roadsConnectedTo", "roleDescription", "ropeAttachedObjects", "ropeAttachedTo", "ropeAttachEnabled", "ropeAttachTo", "ropeCreate", "ropeCut", "ropeDestroy", "ropeDetach", "ropeEndPosition", "ropeLength", "ropes", "ropeSegments", "ropeSetCargoMass", "ropeUnwind", "ropeUnwound", "rotorsForcesRTD", "rotorsRpmRTD", "round", "runInitScript", "safeZoneH", "safeZoneW", "safeZoneWAbs", "safeZoneX", "safeZoneXAbs", "safeZoneY", "save3DENInventory", "saveGame", "saveIdentity", "saveJoysticks", "saveOverlay", "saveProfileNamespace", "saveStatus", "saveVar", "savingEnabled", "say", "say2D", "say3D", "scopeName", "score", "scoreSide", "screenshot", "screenToWorld", "scriptDone", "scriptName", "scudState", "secondaryWeapon", "secondaryWeaponItems", "secondaryWeaponMagazine", "select", "selectBestPlaces", "selectDiarySubject", "selectedEditorObjects", "selectEditorObject", "selectionNames", "selectionPosition", "selectLeader", "selectMax", "selectMin", "selectNoPlayer", "selectPlayer", "selectRandom", "selectRandomWeighted", "selectWeapon", "selectWeaponTurret", "sendAUMessage", "sendSimpleCommand", "sendTask", "sendTaskResult", "sendUDPMessage", "serverCommand", "serverCommandAvailable", "serverCommandExecutable", "serverName", "serverTime", "set", "set3DENAttribute", "set3DENAttributes", "set3DENGrid", "set3DENIconsVisible", "set3DENLayer", "set3DENLinesVisible", "set3DENLogicType", "set3DENMissionAttribute", "set3DENMissionAttributes", "set3DENModelsVisible", "set3DENObjectType", "set3DENSelected", "setAccTime", "setActualCollectiveRTD", "setAirplaneThrottle", "setAirportSide", "setAmmo", "setAmmoCargo", "setAmmoOnPylon", "setAnimSpeedCoef", "setAperture", "setApertureNew", "setAPURTD", "setArmoryPoints", "setAttributes", "setAutonomous", "setBatteryChargeRTD", "setBatteryRTD", "setBehaviour", "setBehaviourStrong", "setBleedingRemaining", "setBrakesRTD", "setCameraEffect", "setCameraInterest", "setCamShakeDefParams", "setCamShakeParams", "setCamUseTI", "setCaptive", "setCenterOfMass", "setCollisionLight", "setCombatBehaviour", "setCombatMode", "setCompassOscillation", "setConvoySeparation", "setCuratorCameraAreaCeiling", "setCuratorCoef", "setCuratorEditingAreaType", "setCuratorWaypointCost", "setCurrentChannel", "setCurrentTask", "setCurrentWaypoint", "setCustomAimCoef", "setCustomMissionData", "setCustomSoundController", "setCustomWeightRTD", "setDamage", "setDammage", "setDate", "setDebriefingText", "setDefaultCamera", "setDestination", "setDetailMapBlendPars", "setDiaryRecordText", "setDiarySubjectPicture", "setDir", "setDirection", "setDrawIcon", "setDriveOnPath", "setDropInterval", "setDynamicSimulationDistance", "setDynamicSimulationDistanceCoef", "setEditorMode", "setEditorObjectScope", "setEffectCondition", "setEffectiveCommander", "setEngineRPMRTD", "setEngineRpmRTD", "setFace", "setFaceAnimation", "setFatigue", "setFeatureType", "setFlagAnimationPhase", "setFlagOwner", "setFlagSide", "setFlagTexture", "setFog", "setForceGeneratorRTD", "setFormation", "setFormationTask", "setFormDir", "setFriend", "setFromEditor", "setFSMVariable", "setFuel", "setFuelCargo", "setGroupIcon", "setGroupIconParams", "setGroupIconsSelectable", "setGroupIconsVisible", "setGroupId", "setGroupIdGlobal", "setGroupOwner", "setGusts", "setHideBehind", "setHit", "setHitIndex", "setHitPointDamage", "setHorizonParallaxCoef", "setHUDMovementLevels", "setIdentity", "setImportance", "setInfoPanel", "setLeader", "setLightAmbient", "setLightAttenuation", "setLightBrightness", "setLightColor", "setLightDayLight", "setLightFlareMaxDistance", "setLightFlareSize", "setLightIntensity", "setLightnings", "setLightUseFlare", "setLocalWindParams", "setMagazineTurretAmmo", "setMarkerAlpha", "setMarkerAlphaLocal", "setMarkerBrush", "setMarkerBrushLocal", "setMarkerColor", "setMarkerColorLocal", "setMarkerDir", "setMarkerDirLocal", "setMarkerPolyline", "setMarkerPolylineLocal", "setMarkerPos", "setMarkerPosLocal", "setMarkerShadow", "setMarkerShadowLocal", "setMarkerShape", "setMarkerShapeLocal", "setMarkerSize", "setMarkerSizeLocal", "setMarkerText", "setMarkerTextLocal", "setMarkerType", "setMarkerTypeLocal", "setMass", "setMimic", "setMissileTarget", "setMissileTargetPos", "setMousePosition", "setMusicEffect", "setMusicEventHandler", "setName", "setNameSound", "setObjectArguments", "setObjectMaterial", "setObjectMaterialGlobal", "setObjectProxy", "setObjectScale", "setObjectTexture", "setObjectTextureGlobal", "setObjectViewDistance", "setOvercast", "setOwner", "setOxygenRemaining", "setParticleCircle", "setParticleClass", "setParticleFire", "setParticleParams", "setParticleRandom", "setPilotCameraDirection", "setPilotCameraRotation", "setPilotCameraTarget", "setPilotLight", "setPiPEffect", "setPitch", "setPlateNumber", "setPlayable", "setPlayerRespawnTime", "setPlayerVoNVolume", "setPos", "setPosASL", "setPosASL2", "setPosASLW", "setPosATL", "setPosition", "setPosWorld", "setPylonLoadout", "setPylonsPriority", "setRadioMsg", "setRain", "setRainbow", "setRandomLip", "setRank", "setRectangular", "setRepairCargo", "setRotorBrakeRTD", "setShadowDistance", "setShotParents", "setSide", "setSimpleTaskAlwaysVisible", "setSimpleTaskCustomData", "setSimpleTaskDescription", "setSimpleTaskDestination", "setSimpleTaskTarget", "setSimpleTaskType", "setSimulWeatherLayers", "setSize", "setSkill", "setSlingLoad", "setSoundEffect", "setSpeaker", "setSpeech", "setSpeedMode", "setStamina", "setStaminaScheme", "setStarterRTD", "setStatValue", "setSuppression", "setSystemOfUnits", "setTargetAge", "setTaskMarkerOffset", "setTaskResult", "setTaskState", "setTerrainGrid", "setText", "setThrottleRTD", "setTimeMultiplier", "setTitleEffect", "setToneMapping", "setToneMappingParams", "setTrafficDensity", "setTrafficDistance", "setTrafficGap", "setTrafficSpeed", "setTriggerActivation", "setTriggerArea", "setTriggerInterval", "setTriggerStatements", "setTriggerText", "setTriggerTimeout", "setTriggerType", "setType", "setUnconscious", "setUnitAbility", "setUnitCombatMode", "setUnitLoadout", "setUnitPos", "setUnitPosWeak", "setUnitRank", "setUnitRecoilCoefficient", "setUnitTrait", "setUnloadInCombat", "setUserActionText", "setUserMFDText", "setUserMFDValue", "setVariable", "setVectorDir", "setVectorDirAndUp", "setVectorUp", "setVehicleAmmo", "setVehicleAmmoDef", "setVehicleArmor", "setVehicleCargo", "setVehicleId", "setVehicleInit", "setVehicleLock", "setVehiclePosition", "setVehicleRadar", "setVehicleReceiveRemoteTargets", "setVehicleReportOwnPosition", "setVehicleReportRemoteTargets", "setVehicleTIPars", "setVehicleVarName", "setVelocity", "setVelocityModelSpace", "setVelocityTransformation", "setViewDistance", "setVisibleIfTreeCollapsed", "setWantedRPMRTD", "setWaves", "setWaypointBehaviour", "setWaypointCombatMode", "setWaypointCompletionRadius", "setWaypointDescription", "setWaypointForceBehaviour", "setWaypointFormation", "setWaypointHousePosition", "setWaypointLoiterAltitude", "setWaypointLoiterRadius", "setWaypointLoiterType", "setWaypointName", "setWaypointPosition", "setWaypointScript", "setWaypointSpeed", "setWaypointStatements", "setWaypointTimeout", "setWaypointType", "setWaypointVisible", "setWeaponReloadingTime", "setWeaponZeroing", "setWind", "setWindDir", "setWindForce", "setWindStr", "setWingForceScaleRTD", "setWPPos", "show3DIcons", "showChat", "showCinemaBorder", "showCommandingMenu", "showCompass", "showCuratorCompass", "showGPS", "showHUD", "showLegend", "showMap", "shownArtilleryComputer", "shownChat", "shownCompass", "shownCuratorCompass", "showNewEditorObject", "shownGPS", "shownHUD", "shownMap", "shownPad", "shownRadio", "shownScoretable", "shownUAVFeed", "shownWarrant", "shownWatch", "showPad", "showRadio", "showScoretable", "showSubtitles", "showUAVFeed", "showWarrant", "showWatch", "showWaypoint", "showWaypoints", "side", "sideChat", "sideEmpty", "sideEnemy", "sideFriendly", "sideRadio", "simpleTasks", "simulationEnabled", "simulCloudDensity", "simulCloudOcclusion", "simulInClouds", "simulSetHumidity", "simulWeatherSync", "sin", "size", "sizeOf", "skill", "skillFinal", "skipTime", "sleep", "sliderPosition", "sliderRange", "sliderSetPosition", "sliderSetRange", "sliderSetSpeed", "sliderSpeed", "slingLoadAssistantShown", "soldierMagazines", "someAmmo", "sort", "soundVolume", "spawn", "speaker", "speechVolume", "speed", "speedMode", "splitString", "sqrt", "squadParams", "stance", "startLoadingScreen", "step", "stop", "stopEngineRTD", "stopped", "str", "sunOrMoon", "supportInfo", "suppressFor", "surfaceIsWater", "surfaceNormal", "surfaceTexture", "surfaceType", "swimInDepth", "switchableUnits", "switchAction", "switchCamera", "switchGesture", "switchLight", "switchMove", "synchronizedObjects", "synchronizedTriggers", "synchronizedWaypoints", "synchronizeObjectsAdd", "synchronizeObjectsRemove", "synchronizeTrigger", "synchronizeWaypoint", "systemChat", "systemOfUnits", "systemTime", "systemTimeUTC", "tan", "targetKnowledge", "targets", "targetsAggregate", "targetsQuery", "taskAlwaysVisible", "taskChildren", "taskCompleted", "taskCustomData", "taskDescription", "taskDestination", "taskHint", "taskMarkerOffset", "taskName", "taskParent", "taskResult", "taskState", "taskType", "teamMember", "teamName", "teams", "teamSwitch", "teamSwitchEnabled", "teamType", "terminate", "terrainIntersect", "terrainIntersectASL", "terrainIntersectAtASL", "text", "textLog", "textLogFormat", "tg", "throttleRTD", "time", "timeMultiplier", "titleCut", "titleFadeOut", "titleObj", "titleRsc", "titleText", "toArray", "toFixed", "toLower", "toLowerANSI", "toString", "toUpper", "toUpperANSI", "triggerActivated", "triggerActivation", "triggerAmmo", "triggerArea", "triggerAttachedVehicle", "triggerAttachObject", "triggerAttachVehicle", "triggerDynamicSimulation", "triggerInterval", "triggerStatements", "triggerText", "triggerTimeout", "triggerTimeoutCurrent", "triggerType", "trim", "turretLocal", "turretOwner", "turretUnit", "tvAdd", "tvClear", "tvCollapse", "tvCollapseAll", "tvCount", "tvCurSel", "tvData", "tvDelete", "tvExpand", "tvExpandAll", "tvIsSelected", "tvPicture", "tvPictureRight", "tvSelection", "tvSetColor", "tvSetCurSel", "tvSetData", "tvSetPicture", "tvSetPictureColor", "tvSetPictureColorDisabled", "tvSetPictureColorSelected", "tvSetPictureRight", "tvSetPictureRightColor", "tvSetPictureRightColorDisabled", "tvSetPictureRightColorSelected", "tvSetSelectColor", "tvSetSelected", "tvSetText", "tvSetTooltip", "tvSetValue", "tvSort", "tvSortAll", "tvSortByValue", "tvSortByValueAll", "tvText", "tvTooltip", "tvValue", "type", "typeName", "typeOf", "UAVControl", "uiNamespace", "uiSleep", "unassignCurator", "unassignItem", "unassignTeam", "unassignVehicle", "underwater", "uniform", "uniformContainer", "uniformItems", "uniformMagazines", "unitAddons", "unitAimPosition", "unitAimPositionVisual", "unitBackpack", "unitCombatMode", "unitIsUAV", "unitPos", "unitReady", "unitRecoilCoefficient", "units", "unitsBelowHeight", "unitTurret", "unlinkItem", "unlockAchievement", "unregisterTask", "updateDrawIcon", "updateMenuItem", "updateObjectTree", "useAIOperMapObstructionTest", "useAISteeringComponent", "useAudioTimeForMoves", "userInputDisabled", "vectorAdd", "vectorCos", "vectorCrossProduct", "vectorDiff", "vectorDir", "vectorDirVisual", "vectorDistance", "vectorDistanceSqr", "vectorDotProduct", "vectorFromTo", "vectorLinearConversion", "vectorMagnitude", "vectorMagnitudeSqr", "vectorModelToWorld", "vectorModelToWorldVisual", "vectorMultiply", "vectorNormalized", "vectorUp", "vectorUpVisual", "vectorWorldToModel", "vectorWorldToModelVisual", "vehicle", "vehicleCargoEnabled", "vehicleChat", "vehicleMoveInfo", "vehicleRadio", "vehicleReceiveRemoteTargets", "vehicleReportOwnPosition", "vehicleReportRemoteTargets", "vehicles", "vehicleVarName", "velocity", "velocityModelSpace", "verifySignature", "vest", "vestContainer", "vestItems", "vestMagazines", "viewDistance", "visibleCompass", "visibleGPS", "visibleMap", "visiblePosition", "visiblePositionASL", "visibleScoretable", "visibleWatch", "waves", "waypointAttachedObject", "waypointAttachedVehicle", "waypointAttachObject", "waypointAttachVehicle", "waypointBehaviour", "waypointCombatMode", "waypointCompletionRadius", "waypointDescription", "waypointForceBehaviour", "waypointFormation", "waypointHousePosition", "waypointLoiterAltitude", "waypointLoiterRadius", "waypointLoiterType", "waypointName", "waypointPosition", "waypoints", "waypointScript", "waypointsEnabledUAV", "waypointShow", "waypointSpeed", "waypointStatements", "waypointTimeout", "waypointTimeoutCurrent", "waypointType", "waypointVisible", "weaponAccessories", "weaponAccessoriesCargo", "weaponCargo", "weaponDirection", "weaponInertia", "weaponLowered", "weapons", "weaponsItems", "weaponsItemsCargo", "weaponState", "weaponsTurret", "weightRTD", "WFSideText", "wind", "windDir", "windRTD", "windStr", "wingsForcesRTD", "worldName", "worldSize", "worldToModel", "worldToModelVisual", "worldToScreen"],
											literal: ["blufor", "civilian", "configNull", "controlNull", "displayNull", "east", "endl", "false", "grpNull", "independent", "lineBreak", "locationNull", "nil", "objNull", "opfor", "pi", "resistance", "scriptNull", "sideAmbientLife", "sideEmpty", "sideLogic", "sideUnknown", "taskNull", "teamMemberNull", "true", "west"]
									},
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.NUMBER_MODE, {
											className: "variable",
											begin: /\b_+[a-zA-Z]\w*/
									}, {
											className: "title",
											begin: /[a-zA-Z]\w+_fnc_\w+/
									}, t, n],
									illegal: /#|^\$ /
							}
					}
			}
			,
			5069: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = e.COMMENT("--", "$")
								, i = ["true", "false", "unknown"]
								, r = ["bigint", "binary", "blob", "boolean", "char", "character", "clob", "date", "dec", "decfloat", "decimal", "float", "int", "integer", "interval", "nchar", "nclob", "national", "numeric", "real", "row", "smallint", "time", "timestamp", "varchar", "varying", "varbinary"]
								, o = ["abs", "acos", "array_agg", "asin", "atan", "avg", "cast", "ceil", "ceiling", "coalesce", "corr", "cos", "cosh", "count", "covar_pop", "covar_samp", "cume_dist", "dense_rank", "deref", "element", "exp", "extract", "first_value", "floor", "json_array", "json_arrayagg", "json_exists", "json_object", "json_objectagg", "json_query", "json_table", "json_table_primitive", "json_value", "lag", "last_value", "lead", "listagg", "ln", "log", "log10", "lower", "max", "min", "mod", "nth_value", "ntile", "nullif", "percent_rank", "percentile_cont", "percentile_disc", "position", "position_regex", "power", "rank", "regr_avgx", "regr_avgy", "regr_count", "regr_intercept", "regr_r2", "regr_slope", "regr_sxx", "regr_sxy", "regr_syy", "row_number", "sin", "sinh", "sqrt", "stddev_pop", "stddev_samp", "substring", "substring_regex", "sum", "tan", "tanh", "translate", "translate_regex", "treat", "trim", "trim_array", "unnest", "upper", "value_of", "var_pop", "var_samp", "width_bucket"]
								, s = ["create table", "insert into", "primary key", "foreign key", "not null", "alter table", "add constraint", "grouping sets", "on overflow", "character set", "respect nulls", "ignore nulls", "nulls first", "nulls last", "depth first", "breadth first"]
								, a = o
								, l = ["abs", "acos", "all", "allocate", "alter", "and", "any", "are", "array", "array_agg", "array_max_cardinality", "as", "asensitive", "asin", "asymmetric", "at", "atan", "atomic", "authorization", "avg", "begin", "begin_frame", "begin_partition", "between", "bigint", "binary", "blob", "boolean", "both", "by", "call", "called", "cardinality", "cascaded", "case", "cast", "ceil", "ceiling", "char", "char_length", "character", "character_length", "check", "classifier", "clob", "close", "coalesce", "collate", "collect", "column", "commit", "condition", "connect", "constraint", "contains", "convert", "copy", "corr", "corresponding", "cos", "cosh", "count", "covar_pop", "covar_samp", "create", "cross", "cube", "cume_dist", "current", "current_catalog", "current_date", "current_default_transform_group", "current_path", "current_role", "current_row", "current_schema", "current_time", "current_timestamp", "current_path", "current_role", "current_transform_group_for_type", "current_user", "cursor", "cycle", "date", "day", "deallocate", "dec", "decimal", "decfloat", "declare", "default", "define", "delete", "dense_rank", "deref", "describe", "deterministic", "disconnect", "distinct", "double", "drop", "dynamic", "each", "element", "else", "empty", "end", "end_frame", "end_partition", "end-exec", "equals", "escape", "every", "except", "exec", "execute", "exists", "exp", "external", "extract", "false", "fetch", "filter", "first_value", "float", "floor", "for", "foreign", "frame_row", "free", "from", "full", "function", "fusion", "get", "global", "grant", "group", "grouping", "groups", "having", "hold", "hour", "identity", "in", "indicator", "initial", "inner", "inout", "insensitive", "insert", "int", "integer", "intersect", "intersection", "interval", "into", "is", "join", "json_array", "json_arrayagg", "json_exists", "json_object", "json_objectagg", "json_query", "json_table", "json_table_primitive", "json_value", "lag", "language", "large", "last_value", "lateral", "lead", "leading", "left", "like", "like_regex", "listagg", "ln", "local", "localtime", "localtimestamp", "log", "log10", "lower", "match", "match_number", "match_recognize", "matches", "max", "member", "merge", "method", "min", "minute", "mod", "modifies", "module", "month", "multiset", "national", "natural", "nchar", "nclob", "new", "no", "none", "normalize", "not", "nth_value", "ntile", "null", "nullif", "numeric", "octet_length", "occurrences_regex", "of", "offset", "old", "omit", "on", "one", "only", "open", "or", "order", "out", "outer", "over", "overlaps", "overlay", "parameter", "partition", "pattern", "per", "percent", "percent_rank", "percentile_cont", "percentile_disc", "period", "portion", "position", "position_regex", "power", "precedes", "precision", "prepare", "primary", "procedure", "ptf", "range", "rank", "reads", "real", "recursive", "ref", "references", "referencing", "regr_avgx", "regr_avgy", "regr_count", "regr_intercept", "regr_r2", "regr_slope", "regr_sxx", "regr_sxy", "regr_syy", "release", "result", "return", "returns", "revoke", "right", "rollback", "rollup", "row", "row_number", "rows", "running", "savepoint", "scope", "scroll", "search", "second", "seek", "select", "sensitive", "session_user", "set", "show", "similar", "sin", "sinh", "skip", "smallint", "some", "specific", "specifictype", "sql", "sqlexception", "sqlstate", "sqlwarning", "sqrt", "start", "static", "stddev_pop", "stddev_samp", "submultiset", "subset", "substring", "substring_regex", "succeeds", "sum", "symmetric", "system", "system_time", "system_user", "table", "tablesample", "tan", "tanh", "then", "time", "timestamp", "timezone_hour", "timezone_minute", "to", "trailing", "translate", "translate_regex", "translation", "treat", "trigger", "trim", "trim_array", "true", "truncate", "uescape", "union", "unique", "unknown", "unnest", "update", "upper", "user", "using", "value", "values", "value_of", "var_pop", "var_samp", "varbinary", "varchar", "varying", "versioning", "when", "whenever", "where", "width_bucket", "window", "with", "within", "without", "year", "add", "asc", "collation", "desc", "final", "first", "last", "view"].filter((e=>!o.includes(e)))
								, c = {
									begin: t.concat(/\b/, t.either(...a), /\s*\(/),
									relevance: 0,
									keywords: {
											built_in: a
									}
							};
							return {
									name: "SQL",
									case_insensitive: !0,
									illegal: /[{}]|<\//,
									keywords: {
											$pattern: /\b[\w\.]+/,
											keyword: function(e, {exceptions: t, when: n}={}) {
													const i = n;
													return t = t || [],
													e.map((e=>e.match(/\|\d+$/) || t.includes(e) ? e : i(e) ? `${e}|0` : e))
											}(l, {
													when: e=>e.length < 3
											}),
											literal: i,
											type: r,
											built_in: ["current_catalog", "current_date", "current_default_transform_group", "current_path", "current_role", "current_schema", "current_transform_group_for_type", "current_user", "session_user", "system_time", "system_user", "current_time", "localtime", "current_timestamp", "localtimestamp"]
									},
									contains: [{
											begin: t.either(...s),
											relevance: 0,
											keywords: {
													$pattern: /[\w\.]+/,
													keyword: l.concat(s),
													literal: i,
													type: r
											}
									}, {
											className: "type",
											begin: t.either("double precision", "large object", "with timezone", "without timezone")
									}, c, {
											className: "variable",
											begin: /@[a-z0-9]+/
									}, {
											className: "string",
											variants: [{
													begin: /'/,
													end: /'/,
													contains: [{
															begin: /''/
													}]
											}]
									}, {
											begin: /"/,
											end: /"/,
											contains: [{
													begin: /""/
											}]
									}, e.C_NUMBER_MODE, e.C_BLOCK_COMMENT_MODE, n, {
											className: "operator",
											begin: /[-+*/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,
											relevance: 0
									}]
							}
					}
			}
			,
			1940: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = ["bernoulli", "bernoulli_logit", "bernoulli_logit_glm", "beta", "beta_binomial", "beta_proportion", "binomial", "binomial_logit", "categorical", "categorical_logit", "categorical_logit_glm", "cauchy", "chi_square", "dirichlet", "discrete_range", "double_exponential", "exp_mod_normal", "exponential", "frechet", "gamma", "gaussian_dlm_obs", "gumbel", "hmm_latent", "hypergeometric", "inv_chi_square", "inv_gamma", "inv_wishart", "lkj_corr", "lkj_corr_cholesky", "logistic", "lognormal", "multi_gp", "multi_gp_cholesky", "multi_normal", "multi_normal_cholesky", "multi_normal_prec", "multi_student_t", "multinomial", "multinomial_logit", "neg_binomial", "neg_binomial_2", "neg_binomial_2_log", "neg_binomial_2_log_glm", "normal", "normal_id_glm", "ordered_logistic", "ordered_logistic_glm", "ordered_probit", "pareto", "pareto_type_2", "poisson", "poisson_log", "poisson_log_glm", "rayleigh", "scaled_inv_chi_square", "skew_double_exponential", "skew_normal", "std_normal", "student_t", "uniform", "von_mises", "weibull", "wiener", "wishart"]
								, i = e.COMMENT(/\/\*/, /\*\//, {
									relevance: 0,
									contains: [{
											scope: "doctag",
											match: /@(return|param)/
									}]
							})
								, r = {
									scope: "meta",
									begin: /#include\b/,
									end: /$/,
									contains: [{
											match: /[a-z][a-z-._]+/,
											scope: "string"
									}, e.C_LINE_COMMENT_MODE]
							}
								, o = ["lower", "upper", "offset", "multiplier"];
							return {
									name: "Stan",
									aliases: ["stanfuncs"],
									keywords: {
											$pattern: e.IDENT_RE,
											title: ["functions", "model", "data", "parameters", "quantities", "transformed", "generated"],
											type: ["array", "complex", "int", "real", "vector", "ordered", "positive_ordered", "simplex", "unit_vector", "row_vector", "matrix", "cholesky_factor_corr|10", "cholesky_factor_cov|10", "corr_matrix|10", "cov_matrix|10", "void"],
											keyword: ["for", "in", "if", "else", "while", "break", "continue", "return"],
											built_in: ["Phi", "Phi_approx", "abs", "acos", "acosh", "add_diag", "algebra_solver", "algebra_solver_newton", "append_array", "append_col", "append_row", "asin", "asinh", "atan", "atan2", "atanh", "bessel_first_kind", "bessel_second_kind", "binary_log_loss", "binomial_coefficient_log", "block", "cbrt", "ceil", "chol2inv", "cholesky_decompose", "choose", "col", "cols", "columns_dot_product", "columns_dot_self", "conj", "cos", "cosh", "cov_exp_quad", "crossprod", "csr_extract_u", "csr_extract_v", "csr_extract_w", "csr_matrix_times_vector", "csr_to_dense_matrix", "cumulative_sum", "determinant", "diag_matrix", "diag_post_multiply", "diag_pre_multiply", "diagonal", "digamma", "dims", "distance", "dot_product", "dot_self", "eigenvalues_sym", "eigenvectors_sym", "erf", "erfc", "exp", "exp2", "expm1", "fabs", "falling_factorial", "fdim", "floor", "fma", "fmax", "fmin", "fmod", "gamma_p", "gamma_q", "generalized_inverse", "get_imag", "get_lp", "get_real", "head", "hmm_hidden_state_prob", "hmm_marginal", "hypot", "identity_matrix", "inc_beta", "int_step", "integrate_1d", "integrate_ode", "integrate_ode_adams", "integrate_ode_bdf", "integrate_ode_rk45", "inv", "inv_Phi", "inv_cloglog", "inv_logit", "inv_sqrt", "inv_square", "inverse", "inverse_spd", "is_inf", "is_nan", "lambert_w0", "lambert_wm1", "lbeta", "lchoose", "ldexp", "lgamma", "linspaced_array", "linspaced_int_array", "linspaced_row_vector", "linspaced_vector", "lmgamma", "lmultiply", "log", "log1m", "log1m_exp", "log1m_inv_logit", "log1p", "log1p_exp", "log_determinant", "log_diff_exp", "log_falling_factorial", "log_inv_logit", "log_inv_logit_diff", "log_mix", "log_modified_bessel_first_kind", "log_rising_factorial", "log_softmax", "log_sum_exp", "logit", "machine_precision", "map_rect", "matrix_exp", "matrix_exp_multiply", "matrix_power", "max", "mdivide_left_spd", "mdivide_left_tri_low", "mdivide_right_spd", "mdivide_right_tri_low", "mean", "min", "modified_bessel_first_kind", "modified_bessel_second_kind", "multiply_log", "multiply_lower_tri_self_transpose", "negative_infinity", "norm", "not_a_number", "num_elements", "ode_adams", "ode_adams_tol", "ode_adjoint_tol_ctl", "ode_bdf", "ode_bdf_tol", "ode_ckrk", "ode_ckrk_tol", "ode_rk45", "ode_rk45_tol", "one_hot_array", "one_hot_int_array", "one_hot_row_vector", "one_hot_vector", "ones_array", "ones_int_array", "ones_row_vector", "ones_vector", "owens_t", "polar", "positive_infinity", "pow", "print", "prod", "proj", "qr_Q", "qr_R", "qr_thin_Q", "qr_thin_R", "quad_form", "quad_form_diag", "quad_form_sym", "quantile", "rank", "reduce_sum", "reject", "rep_array", "rep_matrix", "rep_row_vector", "rep_vector", "reverse", "rising_factorial", "round", "row", "rows", "rows_dot_product", "rows_dot_self", "scale_matrix_exp_multiply", "sd", "segment", "sin", "singular_values", "sinh", "size", "softmax", "sort_asc", "sort_desc", "sort_indices_asc", "sort_indices_desc", "sqrt", "square", "squared_distance", "step", "sub_col", "sub_row", "sum", "svd_U", "svd_V", "symmetrize_from_lower_tri", "tail", "tan", "tanh", "target", "tcrossprod", "tgamma", "to_array_1d", "to_array_2d", "to_complex", "to_matrix", "to_row_vector", "to_vector", "trace", "trace_gen_quad_form", "trace_quad_form", "trigamma", "trunc", "uniform_simplex", "variance", "zeros_array", "zeros_int_array", "zeros_row_vector"]
									},
									contains: [e.C_LINE_COMMENT_MODE, r, e.HASH_COMMENT_MODE, i, {
											scope: "built_in",
											match: /\s(pi|e|sqrt2|log2|log10)(?=\()/,
											relevance: 0
									}, {
											match: t.concat(/[<,]\s*/, t.either(...o), /\s*=/),
											keywords: o
									}, {
											scope: "keyword",
											match: /\btarget(?=\s*\+=)/
									}, {
											match: [/~\s*/, t.either(...n), /(?:\(\))/, /\s*T(?=\s*\[)/],
											scope: {
													2: "built_in",
													4: "keyword"
											}
									}, {
											scope: "built_in",
											keywords: n,
											begin: t.concat(/\w*/, t.either(...n), /(_lpdf|_lupdf|_lpmf|_cdf|_lcdf|_lccdf|_qf)(?=\s*[\(.*\)])/)
									}, {
											begin: [/~/, /\s*/, t.concat(t.either(...n), /(?=\s*[\(.*\)])/)],
											scope: {
													3: "built_in"
											}
									}, {
											begin: [/~/, /\s*\w+(?=\s*[\(.*\)])/, "(?!.*/\b(" + t.either(...n) + ")\b)"],
											scope: {
													2: "title.function"
											}
									}, {
											scope: "title.function",
											begin: /\w*(_lpdf|_lupdf|_lpmf|_cdf|_lcdf|_lccdf|_qf)(?=\s*[\(.*\)])/
									}, {
											scope: "number",
											match: t.concat(/(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)/, /(?:[eE][+-]?\d+(?:_\d+)*)?i?(?!\w)/),
											relevance: 0
									}, {
											scope: "string",
											begin: /"/,
											end: /"/
									}]
							}
					}
			}
			,
			1964: e=>{
					e.exports = function(e) {
							return {
									name: "Stata",
									aliases: ["do", "ado"],
									case_insensitive: !0,
									keywords: "if else in foreach for forv forva forval forvalu forvalue forvalues by bys bysort xi quietly qui capture about ac ac_7 acprplot acprplot_7 adjust ado adopath adoupdate alpha ameans an ano anov anova anova_estat anova_terms anovadef aorder ap app appe appen append arch arch_dr arch_estat arch_p archlm areg areg_p args arima arima_dr arima_estat arima_p as asmprobit asmprobit_estat asmprobit_lf asmprobit_mfx__dlg asmprobit_p ass asse asser assert avplot avplot_7 avplots avplots_7 bcskew0 bgodfrey bias binreg bip0_lf biplot bipp_lf bipr_lf bipr_p biprobit bitest bitesti bitowt blogit bmemsize boot bootsamp bootstrap bootstrap_8 boxco_l boxco_p boxcox boxcox_6 boxcox_p bprobit br break brier bro brow brows browse brr brrstat bs bs_7 bsampl_w bsample bsample_7 bsqreg bstat bstat_7 bstat_8 bstrap bstrap_7 bubble bubbleplot ca ca_estat ca_p cabiplot camat canon canon_8 canon_8_p canon_estat canon_p cap caprojection capt captu captur capture cat cc cchart cchart_7 cci cd censobs_table centile cf char chdir checkdlgfiles checkestimationsample checkhlpfiles checksum chelp ci cii cl class classutil clear cli clis clist clo clog clog_lf clog_p clogi clogi_sw clogit clogit_lf clogit_p clogitp clogl_sw cloglog clonevar clslistarray cluster cluster_measures cluster_stop cluster_tree cluster_tree_8 clustermat cmdlog cnr cnre cnreg cnreg_p cnreg_sw cnsreg codebook collaps4 collapse colormult_nb colormult_nw compare compress conf confi confir confirm conren cons const constr constra constrai constrain constraint continue contract copy copyright copysource cor corc corr corr2data corr_anti corr_kmo corr_smc corre correl correla correlat correlate corrgram cou coun count cox cox_p cox_sw coxbase coxhaz coxvar cprplot cprplot_7 crc cret cretu cretur creturn cross cs cscript cscript_log csi ct ct_is ctset ctst_5 ctst_st cttost cumsp cumsp_7 cumul cusum cusum_7 cutil d|0 datasig datasign datasigna datasignat datasignatu datasignatur datasignature datetof db dbeta de dec deco decod decode deff des desc descr descri describ describe destring dfbeta dfgls dfuller di di_g dir dirstats dis discard disp disp_res disp_s displ displa display distinct do doe doed doedi doedit dotplot dotplot_7 dprobit drawnorm drop ds ds_util dstdize duplicates durbina dwstat dydx e|0 ed edi edit egen eivreg emdef en enc enco encod encode eq erase ereg ereg_lf ereg_p ereg_sw ereghet ereghet_glf ereghet_glf_sh ereghet_gp ereghet_ilf ereghet_ilf_sh ereghet_ip eret eretu eretur ereturn err erro error esize est est_cfexist est_cfname est_clickable est_expand est_hold est_table est_unhold est_unholdok estat estat_default estat_summ estat_vce_only esti estimates etodow etof etomdy ex exi exit expand expandcl fac fact facto factor factor_estat factor_p factor_pca_rotated factor_rotate factormat fcast fcast_compute fcast_graph fdades fdadesc fdadescr fdadescri fdadescrib fdadescribe fdasav fdasave fdause fh_st file open file read file close file filefilter fillin find_hlp_file findfile findit findit_7 fit fl fli flis flist for5_0 forest forestplot form forma format fpredict frac_154 frac_adj frac_chk frac_cox frac_ddp frac_dis frac_dv frac_in frac_mun frac_pp frac_pq frac_pv frac_wgt frac_xo fracgen fracplot fracplot_7 fracpoly fracpred fron_ex fron_hn fron_p fron_tn fron_tn2 frontier ftodate ftoe ftomdy ftowdate funnel funnelplot g|0 gamhet_glf gamhet_gp gamhet_ilf gamhet_ip gamma gamma_d2 gamma_p gamma_sw gammahet gdi_hexagon gdi_spokes ge gen gene gener genera generat generate genrank genstd genvmean gettoken gl gladder gladder_7 glim_l01 glim_l02 glim_l03 glim_l04 glim_l05 glim_l06 glim_l07 glim_l08 glim_l09 glim_l10 glim_l11 glim_l12 glim_lf glim_mu glim_nw1 glim_nw2 glim_nw3 glim_p glim_v1 glim_v2 glim_v3 glim_v4 glim_v5 glim_v6 glim_v7 glm glm_6 glm_p glm_sw glmpred glo glob globa global glogit glogit_8 glogit_p gmeans gnbre_lf gnbreg gnbreg_5 gnbreg_p gomp_lf gompe_sw gomper_p gompertz gompertzhet gomphet_glf gomphet_glf_sh gomphet_gp gomphet_ilf gomphet_ilf_sh gomphet_ip gphdot gphpen gphprint gprefs gprobi_p gprobit gprobit_8 gr gr7 gr_copy gr_current gr_db gr_describe gr_dir gr_draw gr_draw_replay gr_drop gr_edit gr_editviewopts gr_example gr_example2 gr_export gr_print gr_qscheme gr_query gr_read gr_rename gr_replay gr_save gr_set gr_setscheme gr_table gr_undo gr_use graph graph7 grebar greigen greigen_7 greigen_8 grmeanby grmeanby_7 gs_fileinfo gs_filetype gs_graphinfo gs_stat gsort gwood h|0 hadimvo hareg hausman haver he heck_d2 heckma_p heckman heckp_lf heckpr_p heckprob hel help hereg hetpr_lf hetpr_p hetprob hettest hexdump hilite hist hist_7 histogram hlogit hlu hmeans hotel hotelling hprobit hreg hsearch icd9 icd9_ff icd9p iis impute imtest inbase include inf infi infil infile infix inp inpu input ins insheet insp inspe inspec inspect integ inten intreg intreg_7 intreg_p intrg2_ll intrg_ll intrg_ll2 ipolate iqreg ir irf irf_create irfm iri is_svy is_svysum isid istdize ivprob_1_lf ivprob_lf ivprobit ivprobit_p ivreg ivreg_footnote ivtob_1_lf ivtob_lf ivtobit ivtobit_p jackknife jacknife jknife jknife_6 jknife_8 jkstat joinby kalarma1 kap kap_3 kapmeier kappa kapwgt kdensity kdensity_7 keep ksm ksmirnov ktau kwallis l|0 la lab labbe labbeplot labe label labelbook ladder levels levelsof leverage lfit lfit_p li lincom line linktest lis list lloghet_glf lloghet_glf_sh lloghet_gp lloghet_ilf lloghet_ilf_sh lloghet_ip llogi_sw llogis_p llogist llogistic llogistichet lnorm_lf lnorm_sw lnorma_p lnormal lnormalhet lnormhet_glf lnormhet_glf_sh lnormhet_gp lnormhet_ilf lnormhet_ilf_sh lnormhet_ip lnskew0 loadingplot loc loca local log logi logis_lf logistic logistic_p logit logit_estat logit_p loglogs logrank loneway lookfor lookup lowess lowess_7 lpredict lrecomp lroc lroc_7 lrtest ls lsens lsens_7 lsens_x lstat ltable ltable_7 ltriang lv lvr2plot lvr2plot_7 m|0 ma mac macr macro makecns man manova manova_estat manova_p manovatest mantel mark markin markout marksample mat mat_capp mat_order mat_put_rr mat_rapp mata mata_clear mata_describe mata_drop mata_matdescribe mata_matsave mata_matuse mata_memory mata_mlib mata_mosave mata_rename mata_which matalabel matcproc matlist matname matr matri matrix matrix_input__dlg matstrik mcc mcci md0_ md1_ md1debug_ md2_ md2debug_ mds mds_estat mds_p mdsconfig mdslong mdsmat mdsshepard mdytoe mdytof me_derd mean means median memory memsize menl meqparse mer merg merge meta mfp mfx mhelp mhodds minbound mixed_ll mixed_ll_reparm mkassert mkdir mkmat mkspline ml ml_5 ml_adjs ml_bhhhs ml_c_d ml_check ml_clear ml_cnt ml_debug ml_defd ml_e0 ml_e0_bfgs ml_e0_cycle ml_e0_dfp ml_e0i ml_e1 ml_e1_bfgs ml_e1_bhhh ml_e1_cycle ml_e1_dfp ml_e2 ml_e2_cycle ml_ebfg0 ml_ebfr0 ml_ebfr1 ml_ebh0q ml_ebhh0 ml_ebhr0 ml_ebr0i ml_ecr0i ml_edfp0 ml_edfr0 ml_edfr1 ml_edr0i ml_eds ml_eer0i ml_egr0i ml_elf ml_elf_bfgs ml_elf_bhhh ml_elf_cycle ml_elf_dfp ml_elfi ml_elfs ml_enr0i ml_enrr0 ml_erdu0 ml_erdu0_bfgs ml_erdu0_bhhh ml_erdu0_bhhhq ml_erdu0_cycle ml_erdu0_dfp ml_erdu0_nrbfgs ml_exde ml_footnote ml_geqnr ml_grad0 ml_graph ml_hbhhh ml_hd0 ml_hold ml_init ml_inv ml_log ml_max ml_mlout ml_mlout_8 ml_model ml_nb0 ml_opt ml_p ml_plot ml_query ml_rdgrd ml_repor ml_s_e ml_score ml_searc ml_technique ml_unhold mleval mlf_ mlmatbysum mlmatsum mlog mlogi mlogit mlogit_footnote mlogit_p mlopts mlsum mlvecsum mnl0_ mor more mov move mprobit mprobit_lf mprobit_p mrdu0_ mrdu1_ mvdecode mvencode mvreg mvreg_estat n|0 nbreg nbreg_al nbreg_lf nbreg_p nbreg_sw nestreg net newey newey_7 newey_p news nl nl_7 nl_9 nl_9_p nl_p nl_p_7 nlcom nlcom_p nlexp2 nlexp2_7 nlexp2a nlexp2a_7 nlexp3 nlexp3_7 nlgom3 nlgom3_7 nlgom4 nlgom4_7 nlinit nllog3 nllog3_7 nllog4 nllog4_7 nlog_rd nlogit nlogit_p nlogitgen nlogittree nlpred no nobreak noi nois noisi noisil noisily note notes notes_dlg nptrend numlabel numlist odbc old_ver olo olog ologi ologi_sw ologit ologit_p ologitp on one onew onewa oneway op_colnm op_comp op_diff op_inv op_str opr opro oprob oprob_sw oprobi oprobi_p oprobit oprobitp opts_exclusive order orthog orthpoly ou out outf outfi outfil outfile outs outsh outshe outshee outsheet ovtest pac pac_7 palette parse parse_dissim pause pca pca_8 pca_display pca_estat pca_p pca_rotate pcamat pchart pchart_7 pchi pchi_7 pcorr pctile pentium pergram pergram_7 permute permute_8 personal peto_st pkcollapse pkcross pkequiv pkexamine pkexamine_7 pkshape pksumm pksumm_7 pl plo plot plugin pnorm pnorm_7 poisgof poiss_lf poiss_sw poisso_p poisson poisson_estat post postclose postfile postutil pperron pr prais prais_e prais_e2 prais_p predict predictnl preserve print pro prob probi probit probit_estat probit_p proc_time procoverlay procrustes procrustes_estat procrustes_p profiler prog progr progra program prop proportion prtest prtesti pwcorr pwd q\\s qby qbys qchi qchi_7 qladder qladder_7 qnorm qnorm_7 qqplot qqplot_7 qreg qreg_c qreg_p qreg_sw qu quadchk quantile quantile_7 que quer query range ranksum ratio rchart rchart_7 rcof recast reclink recode reg reg3 reg3_p regdw regr regre regre_p2 regres regres_p regress regress_estat regriv_p remap ren rena renam rename renpfix repeat replace report reshape restore ret retu retur return rm rmdir robvar roccomp roccomp_7 roccomp_8 rocf_lf rocfit rocfit_8 rocgold rocplot rocplot_7 roctab roctab_7 rolling rologit rologit_p rot rota rotat rotate rotatemat rreg rreg_p ru run runtest rvfplot rvfplot_7 rvpplot rvpplot_7 sa safesum sample sampsi sav save savedresults saveold sc sca scal scala scalar scatter scm_mine sco scob_lf scob_p scobi_sw scobit scor score scoreplot scoreplot_help scree screeplot screeplot_help sdtest sdtesti se search separate seperate serrbar serrbar_7 serset set set_defaults sfrancia sh she shel shell shewhart shewhart_7 signestimationsample signrank signtest simul simul_7 simulate simulate_8 sktest sleep slogit slogit_d2 slogit_p smooth snapspan so sor sort spearman spikeplot spikeplot_7 spikeplt spline_x split sqreg sqreg_p sret sretu sretur sreturn ssc st st_ct st_hc st_hcd st_hcd_sh st_is st_issys st_note st_promo st_set st_show st_smpl st_subid stack statsby statsby_8 stbase stci stci_7 stcox stcox_estat stcox_fr stcox_fr_ll stcox_p stcox_sw stcoxkm stcoxkm_7 stcstat stcurv stcurve stcurve_7 stdes stem stepwise stereg stfill stgen stir stjoin stmc stmh stphplot stphplot_7 stphtest stphtest_7 stptime strate strate_7 streg streg_sw streset sts sts_7 stset stsplit stsum sttocc sttoct stvary stweib su suest suest_8 sum summ summa summar summari summariz summarize sunflower sureg survcurv survsum svar svar_p svmat svy svy_disp svy_dreg svy_est svy_est_7 svy_estat svy_get svy_gnbreg_p svy_head svy_header svy_heckman_p svy_heckprob_p svy_intreg_p svy_ivreg_p svy_logistic_p svy_logit_p svy_mlogit_p svy_nbreg_p svy_ologit_p svy_oprobit_p svy_poisson_p svy_probit_p svy_regress_p svy_sub svy_sub_7 svy_x svy_x_7 svy_x_p svydes svydes_8 svygen svygnbreg svyheckman svyheckprob svyintreg svyintreg_7 svyintrg svyivreg svylc svylog_p svylogit svymarkout svymarkout_8 svymean svymlog svymlogit svynbreg svyolog svyologit svyoprob svyoprobit svyopts svypois svypois_7 svypoisson svyprobit svyprobt svyprop svyprop_7 svyratio svyreg svyreg_p svyregress svyset svyset_7 svyset_8 svytab svytab_7 svytest svytotal sw sw_8 swcnreg swcox swereg swilk swlogis swlogit swologit swoprbt swpois swprobit swqreg swtobit swweib symmetry symmi symplot symplot_7 syntax sysdescribe sysdir sysuse szroeter ta tab tab1 tab2 tab_or tabd tabdi tabdis tabdisp tabi table tabodds tabodds_7 tabstat tabu tabul tabula tabulat tabulate te tempfile tempname tempvar tes test testnl testparm teststd tetrachoric time_it timer tis tob tobi tobit tobit_p tobit_sw token tokeni tokeniz tokenize tostring total translate translator transmap treat_ll treatr_p treatreg trim trimfill trnb_cons trnb_mean trpoiss_d2 trunc_ll truncr_p truncreg tsappend tset tsfill tsline tsline_ex tsreport tsrevar tsrline tsset tssmooth tsunab ttest ttesti tut_chk tut_wait tutorial tw tware_st two twoway twoway__fpfit_serset twoway__function_gen twoway__histogram_gen twoway__ipoint_serset twoway__ipoints_serset twoway__kdensity_gen twoway__lfit_serset twoway__normgen_gen twoway__pci_serset twoway__qfit_serset twoway__scatteri_serset twoway__sunflower_gen twoway_ksm_serset ty typ type typeof u|0 unab unabbrev unabcmd update us use uselabel var var_mkcompanion var_p varbasic varfcast vargranger varirf varirf_add varirf_cgraph varirf_create varirf_ctable varirf_describe varirf_dir varirf_drop varirf_erase varirf_graph varirf_ograph varirf_rename varirf_set varirf_table varlist varlmar varnorm varsoc varstable varstable_w varstable_w2 varwle vce vec vec_fevd vec_mkphi vec_p vec_p_w vecirf_create veclmar veclmar_w vecnorm vecnorm_w vecrank vecstable verinst vers versi versio version view viewsource vif vwls wdatetof webdescribe webseek webuse weib1_lf weib2_lf weib_lf weib_lf0 weibhet_glf weibhet_glf_sh weibhet_glfa weibhet_glfa_sh weibhet_gp weibhet_ilf weibhet_ilf_sh weibhet_ilfa weibhet_ilfa_sh weibhet_ip weibu_sw weibul_p weibull weibull_c weibull_s weibullhet wh whelp whi which whil while wilc_st wilcoxon win wind windo window winexec wntestb wntestb_7 wntestq xchart xchart_7 xcorr xcorr_7 xi xi_6 xmlsav xmlsave xmluse xpose xsh xshe xshel xshell xt_iis xt_tis xtab_p xtabond xtbin_p xtclog xtcloglog xtcloglog_8 xtcloglog_d2 xtcloglog_pa_p xtcloglog_re_p xtcnt_p xtcorr xtdata xtdes xtfront_p xtfrontier xtgee xtgee_elink xtgee_estat xtgee_makeivar xtgee_p xtgee_plink xtgls xtgls_p xthaus xthausman xtht_p xthtaylor xtile xtint_p xtintreg xtintreg_8 xtintreg_d2 xtintreg_p xtivp_1 xtivp_2 xtivreg xtline xtline_ex xtlogit xtlogit_8 xtlogit_d2 xtlogit_fe_p xtlogit_pa_p xtlogit_re_p xtmixed xtmixed_estat xtmixed_p xtnb_fe xtnb_lf xtnbreg xtnbreg_pa_p xtnbreg_refe_p xtpcse xtpcse_p xtpois xtpoisson xtpoisson_d2 xtpoisson_pa_p xtpoisson_refe_p xtpred xtprobit xtprobit_8 xtprobit_d2 xtprobit_re_p xtps_fe xtps_lf xtps_ren xtps_ren_8 xtrar_p xtrc xtrc_p xtrchh xtrefe_p xtreg xtreg_be xtreg_fe xtreg_ml xtreg_pa_p xtreg_re xtregar xtrere_p xtset xtsf_ll xtsf_llti xtsum xttab xttest0 xttobit xttobit_8 xttobit_p xttrans yx yxview__barlike_draw yxview_area_draw yxview_bar_draw yxview_dot_draw yxview_dropline_draw yxview_function_draw yxview_iarrow_draw yxview_ilabels_draw yxview_normal_draw yxview_pcarrow_draw yxview_pcbarrow_draw yxview_pccapsym_draw yxview_pcscatter_draw yxview_pcspike_draw yxview_rarea_draw yxview_rbar_draw yxview_rbarm_draw yxview_rcap_draw yxview_rcapsym_draw yxview_rconnected_draw yxview_rline_draw yxview_rscatter_draw yxview_rspike_draw yxview_spike_draw yxview_sunflower_draw zap_s zinb zinb_llf zinb_plf zip zip_llf zip_p zip_plf zt_ct_5 zt_hc_5 zt_hcd_5 zt_is_5 zt_iss_5 zt_sho_5 zt_smp_5 ztbase_5 ztcox_5 ztdes_5 ztereg_5 ztfill_5 ztgen_5 ztir_5 ztjoin_5 ztnb ztnb_p ztp ztp_p zts_5 ztset_5 ztspli_5 ztsum_5 zttoct_5 ztvary_5 ztweib_5",
									contains: [{
											className: "symbol",
											begin: /`[a-zA-Z0-9_]+'/
									}, {
											className: "variable",
											begin: /\$\{?[a-zA-Z0-9_]+\}?/,
											relevance: 0
									}, {
											className: "string",
											variants: [{
													begin: '`"[^\r\n]*?"\''
											}, {
													begin: '"[^\r\n"]*"'
											}]
									}, {
											className: "built_in",
											variants: [{
													begin: "\\b(abs|acos|asin|atan|atan2|atanh|ceil|cloglog|comb|cos|digamma|exp|floor|invcloglog|invlogit|ln|lnfact|lnfactorial|lngamma|log|log10|max|min|mod|reldif|round|sign|sin|sqrt|sum|tan|tanh|trigamma|trunc|betaden|Binomial|binorm|binormal|chi2|chi2tail|dgammapda|dgammapdada|dgammapdadx|dgammapdx|dgammapdxdx|F|Fden|Ftail|gammaden|gammap|ibeta|invbinomial|invchi2|invchi2tail|invF|invFtail|invgammap|invibeta|invnchi2|invnFtail|invnibeta|invnorm|invnormal|invttail|nbetaden|nchi2|nFden|nFtail|nibeta|norm|normal|normalden|normd|npnchi2|tden|ttail|uniform|abbrev|char|index|indexnot|length|lower|ltrim|match|plural|proper|real|regexm|regexr|regexs|reverse|rtrim|string|strlen|strlower|strltrim|strmatch|strofreal|strpos|strproper|strreverse|strrtrim|strtrim|strupper|subinstr|subinword|substr|trim|upper|word|wordcount|_caller|autocode|byteorder|chop|clip|cond|e|epsdouble|epsfloat|group|inlist|inrange|irecode|matrix|maxbyte|maxdouble|maxfloat|maxint|maxlong|mi|minbyte|mindouble|minfloat|minint|minlong|missing|r|recode|replay|return|s|scalar|d|date|day|dow|doy|halfyear|mdy|month|quarter|week|year|d|daily|dofd|dofh|dofm|dofq|dofw|dofy|h|halfyearly|hofd|m|mofd|monthly|q|qofd|quarterly|tin|twithin|w|weekly|wofd|y|yearly|yh|ym|yofd|yq|yw|cholesky|colnumb|colsof|corr|det|diag|diag0cnt|el|get|hadamard|I|inv|invsym|issym|issymmetric|J|matmissing|matuniform|mreldif|nullmat|rownumb|rowsof|sweep|syminv|trace|vec|vecdiag)(?=\\()"
											}]
									}, e.COMMENT("^[ \t]*\\*.*$", !1), e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE]
							}
					}
			}
			,
			2793: e=>{
					e.exports = function(e) {
							return {
									name: "STEP Part 21",
									aliases: ["p21", "step", "stp"],
									case_insensitive: !0,
									keywords: {
											$pattern: "[A-Z_][A-Z0-9_.]*",
											keyword: ["HEADER", "ENDSEC", "DATA"]
									},
									contains: [{
											className: "meta",
											begin: "ISO-10303-21;",
											relevance: 10
									}, {
											className: "meta",
											begin: "END-ISO-10303-21;",
											relevance: 10
									}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, e.COMMENT("/\\*\\*!", "\\*/"), e.C_NUMBER_MODE, e.inherit(e.APOS_STRING_MODE, {
											illegal: null
									}), e.inherit(e.QUOTE_STRING_MODE, {
											illegal: null
									}), {
											className: "string",
											begin: "'",
											end: "'"
									}, {
											className: "symbol",
											variants: [{
													begin: "#",
													end: "\\d+",
													illegal: "\\W"
											}]
									}]
							}
					}
			}
			,
			415: e=>{
					const t = ["a", "abbr", "address", "article", "aside", "audio", "b", "blockquote", "body", "button", "canvas", "caption", "cite", "code", "dd", "del", "details", "dfn", "div", "dl", "dt", "em", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hgroup", "html", "i", "iframe", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "mark", "menu", "nav", "object", "ol", "p", "q", "quote", "samp", "section", "span", "strong", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "tr", "ul", "var", "video"]
						, n = ["any-hover", "any-pointer", "aspect-ratio", "color", "color-gamut", "color-index", "device-aspect-ratio", "device-height", "device-width", "display-mode", "forced-colors", "grid", "height", "hover", "inverted-colors", "monochrome", "orientation", "overflow-block", "overflow-inline", "pointer", "prefers-color-scheme", "prefers-contrast", "prefers-reduced-motion", "prefers-reduced-transparency", "resolution", "scan", "scripting", "update", "width", "min-width", "max-width", "min-height", "max-height"]
						, i = ["active", "any-link", "blank", "checked", "current", "default", "defined", "dir", "disabled", "drop", "empty", "enabled", "first", "first-child", "first-of-type", "fullscreen", "future", "focus", "focus-visible", "focus-within", "has", "host", "host-context", "hover", "indeterminate", "in-range", "invalid", "is", "lang", "last-child", "last-of-type", "left", "link", "local-link", "not", "nth-child", "nth-col", "nth-last-child", "nth-last-col", "nth-last-of-type", "nth-of-type", "only-child", "only-of-type", "optional", "out-of-range", "past", "placeholder-shown", "read-only", "read-write", "required", "right", "root", "scope", "target", "target-within", "user-invalid", "valid", "visited", "where"]
						, r = ["after", "backdrop", "before", "cue", "cue-region", "first-letter", "first-line", "grammar-error", "marker", "part", "placeholder", "selection", "slotted", "spelling-error"]
						, o = ["align-content", "align-items", "align-self", "all", "animation", "animation-delay", "animation-direction", "animation-duration", "animation-fill-mode", "animation-iteration-count", "animation-name", "animation-play-state", "animation-timing-function", "backface-visibility", "background", "background-attachment", "background-blend-mode", "background-clip", "background-color", "background-image", "background-origin", "background-position", "background-repeat", "background-size", "block-size", "border", "border-block", "border-block-color", "border-block-end", "border-block-end-color", "border-block-end-style", "border-block-end-width", "border-block-start", "border-block-start-color", "border-block-start-style", "border-block-start-width", "border-block-style", "border-block-width", "border-bottom", "border-bottom-color", "border-bottom-left-radius", "border-bottom-right-radius", "border-bottom-style", "border-bottom-width", "border-collapse", "border-color", "border-image", "border-image-outset", "border-image-repeat", "border-image-slice", "border-image-source", "border-image-width", "border-inline", "border-inline-color", "border-inline-end", "border-inline-end-color", "border-inline-end-style", "border-inline-end-width", "border-inline-start", "border-inline-start-color", "border-inline-start-style", "border-inline-start-width", "border-inline-style", "border-inline-width", "border-left", "border-left-color", "border-left-style", "border-left-width", "border-radius", "border-right", "border-right-color", "border-right-style", "border-right-width", "border-spacing", "border-style", "border-top", "border-top-color", "border-top-left-radius", "border-top-right-radius", "border-top-style", "border-top-width", "border-width", "bottom", "box-decoration-break", "box-shadow", "box-sizing", "break-after", "break-before", "break-inside", "caption-side", "caret-color", "clear", "clip", "clip-path", "clip-rule", "color", "column-count", "column-fill", "column-gap", "column-rule", "column-rule-color", "column-rule-style", "column-rule-width", "column-span", "column-width", "columns", "contain", "content", "content-visibility", "counter-increment", "counter-reset", "cue", "cue-after", "cue-before", "cursor", "direction", "display", "empty-cells", "filter", "flex", "flex-basis", "flex-direction", "flex-flow", "flex-grow", "flex-shrink", "flex-wrap", "float", "flow", "font", "font-display", "font-family", "font-feature-settings", "font-kerning", "font-language-override", "font-size", "font-size-adjust", "font-smoothing", "font-stretch", "font-style", "font-synthesis", "font-variant", "font-variant-caps", "font-variant-east-asian", "font-variant-ligatures", "font-variant-numeric", "font-variant-position", "font-variation-settings", "font-weight", "gap", "glyph-orientation-vertical", "grid", "grid-area", "grid-auto-columns", "grid-auto-flow", "grid-auto-rows", "grid-column", "grid-column-end", "grid-column-start", "grid-gap", "grid-row", "grid-row-end", "grid-row-start", "grid-template", "grid-template-areas", "grid-template-columns", "grid-template-rows", "hanging-punctuation", "height", "hyphens", "icon", "image-orientation", "image-rendering", "image-resolution", "ime-mode", "inline-size", "isolation", "justify-content", "left", "letter-spacing", "line-break", "line-height", "list-style", "list-style-image", "list-style-position", "list-style-type", "margin", "margin-block", "margin-block-end", "margin-block-start", "margin-bottom", "margin-inline", "margin-inline-end", "margin-inline-start", "margin-left", "margin-right", "margin-top", "marks", "mask", "mask-border", "mask-border-mode", "mask-border-outset", "mask-border-repeat", "mask-border-slice", "mask-border-source", "mask-border-width", "mask-clip", "mask-composite", "mask-image", "mask-mode", "mask-origin", "mask-position", "mask-repeat", "mask-size", "mask-type", "max-block-size", "max-height", "max-inline-size", "max-width", "min-block-size", "min-height", "min-inline-size", "min-width", "mix-blend-mode", "nav-down", "nav-index", "nav-left", "nav-right", "nav-up", "none", "normal", "object-fit", "object-position", "opacity", "order", "orphans", "outline", "outline-color", "outline-offset", "outline-style", "outline-width", "overflow", "overflow-wrap", "overflow-x", "overflow-y", "padding", "padding-block", "padding-block-end", "padding-block-start", "padding-bottom", "padding-inline", "padding-inline-end", "padding-inline-start", "padding-left", "padding-right", "padding-top", "page-break-after", "page-break-before", "page-break-inside", "pause", "pause-after", "pause-before", "perspective", "perspective-origin", "pointer-events", "position", "quotes", "resize", "rest", "rest-after", "rest-before", "right", "row-gap", "scroll-margin", "scroll-margin-block", "scroll-margin-block-end", "scroll-margin-block-start", "scroll-margin-bottom", "scroll-margin-inline", "scroll-margin-inline-end", "scroll-margin-inline-start", "scroll-margin-left", "scroll-margin-right", "scroll-margin-top", "scroll-padding", "scroll-padding-block", "scroll-padding-block-end", "scroll-padding-block-start", "scroll-padding-bottom", "scroll-padding-inline", "scroll-padding-inline-end", "scroll-padding-inline-start", "scroll-padding-left", "scroll-padding-right", "scroll-padding-top", "scroll-snap-align", "scroll-snap-stop", "scroll-snap-type", "scrollbar-color", "scrollbar-gutter", "scrollbar-width", "shape-image-threshold", "shape-margin", "shape-outside", "speak", "speak-as", "src", "tab-size", "table-layout", "text-align", "text-align-all", "text-align-last", "text-combine-upright", "text-decoration", "text-decoration-color", "text-decoration-line", "text-decoration-style", "text-emphasis", "text-emphasis-color", "text-emphasis-position", "text-emphasis-style", "text-indent", "text-justify", "text-orientation", "text-overflow", "text-rendering", "text-shadow", "text-transform", "text-underline-position", "top", "transform", "transform-box", "transform-origin", "transform-style", "transition", "transition-delay", "transition-duration", "transition-property", "transition-timing-function", "unicode-bidi", "vertical-align", "visibility", "voice-balance", "voice-duration", "voice-family", "voice-pitch", "voice-range", "voice-rate", "voice-stress", "voice-volume", "white-space", "widows", "width", "will-change", "word-break", "word-spacing", "word-wrap", "writing-mode", "z-index"].reverse();
					e.exports = function(e) {
							const s = (e=>({
									IMPORTANT: {
											scope: "meta",
											begin: "!important"
									},
									BLOCK_COMMENT: e.C_BLOCK_COMMENT_MODE,
									HEXCOLOR: {
											scope: "number",
											begin: /#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/
									},
									FUNCTION_DISPATCH: {
											className: "built_in",
											begin: /[\w-]+(?=\()/
									},
									ATTRIBUTE_SELECTOR_MODE: {
											scope: "selector-attr",
											begin: /\[/,
											end: /\]/,
											illegal: "$",
											contains: [e.APOS_STRING_MODE, e.QUOTE_STRING_MODE]
									},
									CSS_NUMBER_MODE: {
											scope: "number",
											begin: e.NUMBER_RE + "(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",
											relevance: 0
									},
									CSS_VARIABLE: {
											className: "attr",
											begin: /--[A-Za-z][A-Za-z0-9_-]*/
									}
							}))(e)
								, a = {
									className: "variable",
									begin: "\\$" + e.IDENT_RE
							}
								, l = "(?=[.\\s\\n[:,(])";
							return {
									name: "Stylus",
									aliases: ["styl"],
									case_insensitive: !1,
									keywords: "if else for in",
									illegal: "(" + ["\\?", "(\\bReturn\\b)", "(\\bEnd\\b)", "(\\bend\\b)", "(\\bdef\\b)", ";", "#\\s", "\\*\\s", "===\\s", "\\|", "%"].join("|") + ")",
									contains: [e.QUOTE_STRING_MODE, e.APOS_STRING_MODE, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, s.HEXCOLOR, {
											begin: "\\.[a-zA-Z][a-zA-Z0-9_-]*" + l,
											className: "selector-class"
									}, {
											begin: "#[a-zA-Z][a-zA-Z0-9_-]*" + l,
											className: "selector-id"
									}, {
											begin: "\\b(" + t.join("|") + ")" + l,
											className: "selector-tag"
									}, {
											className: "selector-pseudo",
											begin: "&?:(" + i.join("|") + ")" + l
									}, {
											className: "selector-pseudo",
											begin: "&?:(:)?(" + r.join("|") + ")" + l
									}, s.ATTRIBUTE_SELECTOR_MODE, {
											className: "keyword",
											begin: /@media/,
											starts: {
													end: /[{;}]/,
													keywords: {
															$pattern: /[a-z-]+/,
															keyword: "and or not only",
															attribute: n.join(" ")
													},
													contains: [s.CSS_NUMBER_MODE]
											}
									}, {
											className: "keyword",
											begin: "@((-(o|moz|ms|webkit)-)?(" + ["charset", "css", "debug", "extend", "font-face", "for", "import", "include", "keyframes", "media", "mixin", "page", "warn", "while"].join("|") + "))\\b"
									}, a, s.CSS_NUMBER_MODE, {
											className: "function",
											begin: "^[a-zA-Z][a-zA-Z0-9_-]*\\(.*\\)",
											illegal: "[\\n]",
											returnBegin: !0,
											contains: [{
													className: "title",
													begin: "\\b[a-zA-Z][a-zA-Z0-9_-]*"
											}, {
													className: "params",
													begin: /\(/,
													end: /\)/,
													contains: [s.HEXCOLOR, a, e.APOS_STRING_MODE, s.CSS_NUMBER_MODE, e.QUOTE_STRING_MODE]
											}]
									}, s.CSS_VARIABLE, {
											className: "attribute",
											begin: "\\b(" + o.join("|") + ")\\b",
											starts: {
													end: /;|$/,
													contains: [s.HEXCOLOR, a, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, s.CSS_NUMBER_MODE, e.C_BLOCK_COMMENT_MODE, s.IMPORTANT, s.FUNCTION_DISPATCH],
													illegal: /\./,
													relevance: 0
											}
									}, s.FUNCTION_DISPATCH]
							}
					}
			}
			,
			9503: e=>{
					e.exports = function(e) {
							return {
									name: "SubUnit",
									case_insensitive: !0,
									contains: [{
											className: "string",
											begin: "\\[\n(multipart)?",
											end: "\\]\n"
									}, {
											className: "string",
											begin: "\\d{4}-\\d{2}-\\d{2}(\\s+)\\d{2}:\\d{2}:\\d{2}.\\d+Z"
									}, {
											className: "string",
											begin: "(\\+|-)\\d+"
									}, {
											className: "keyword",
											relevance: 10,
											variants: [{
													begin: "^(test|testing|success|successful|failure|error|skip|xfail|uxsuccess)(:?)\\s+(test)?"
											}, {
													begin: "^progress(:?)(\\s+)?(pop|push)?"
											}, {
													begin: "^tags:"
											}, {
													begin: "^time:"
											}]
									}]
							}
					}
			}
			,
			6437: e=>{
					function source(e) {
							return e ? "string" == typeof e ? e : e.source : null
					}
					function lookahead(e) {
							return concat("(?=", e, ")")
					}
					function concat(...e) {
							return e.map((e=>source(e))).join("")
					}
					function either(...e) {
							const t = function(e) {
									const t = e[e.length - 1];
									return "object" == typeof t && t.constructor === Object ? (e.splice(e.length - 1, 1),
									t) : {}
							}(e);
							return "(" + (t.capture ? "" : "?:") + e.map((e=>source(e))).join("|") + ")"
					}
					const keywordWrapper = e=>concat(/\b/, e, /\w$/.test(e) ? /\b/ : /\B/)
						, t = ["Protocol", "Type"].map(keywordWrapper)
						, n = ["init", "self"].map(keywordWrapper)
						, i = ["Any", "Self"]
						, r = ["actor", "any", "associatedtype", "async", "await", /as\?/, /as!/, "as", "break", "case", "catch", "class", "continue", "convenience", "default", "defer", "deinit", "didSet", "distributed", "do", "dynamic", "else", "enum", "extension", "fallthrough", /fileprivate\(set\)/, "fileprivate", "final", "for", "func", "get", "guard", "if", "import", "indirect", "infix", /init\?/, /init!/, "inout", /internal\(set\)/, "internal", "in", "is", "isolated", "nonisolated", "lazy", "let", "mutating", "nonmutating", /open\(set\)/, "open", "operator", "optional", "override", "postfix", "precedencegroup", "prefix", /private\(set\)/, "private", "protocol", /public\(set\)/, "public", "repeat", "required", "rethrows", "return", "set", "some", "static", "struct", "subscript", "super", "switch", "throws", "throw", /try\?/, /try!/, "try", "typealias", /unowned\(safe\)/, /unowned\(unsafe\)/, "unowned", "var", "weak", "where", "while", "willSet"]
						, o = ["false", "nil", "true"]
						, s = ["assignment", "associativity", "higherThan", "left", "lowerThan", "none", "right"]
						, a = ["#colorLiteral", "#column", "#dsohandle", "#else", "#elseif", "#endif", "#error", "#file", "#fileID", "#fileLiteral", "#filePath", "#function", "#if", "#imageLiteral", "#keyPath", "#line", "#selector", "#sourceLocation", "#warn_unqualified_access", "#warning"]
						, l = ["abs", "all", "any", "assert", "assertionFailure", "debugPrint", "dump", "fatalError", "getVaList", "isKnownUniquelyReferenced", "max", "min", "numericCast", "pointwiseMax", "pointwiseMin", "precondition", "preconditionFailure", "print", "readLine", "repeatElement", "sequence", "stride", "swap", "swift_unboxFromSwiftValueWithType", "transcode", "type", "unsafeBitCast", "unsafeDowncast", "withExtendedLifetime", "withUnsafeMutablePointer", "withUnsafePointer", "withVaList", "withoutActuallyEscaping", "zip"]
						, c = either(/[/=\-+!*%<>&|^~?]/, /[\u00A1-\u00A7]/, /[\u00A9\u00AB]/, /[\u00AC\u00AE]/, /[\u00B0\u00B1]/, /[\u00B6\u00BB\u00BF\u00D7\u00F7]/, /[\u2016-\u2017]/, /[\u2020-\u2027]/, /[\u2030-\u203E]/, /[\u2041-\u2053]/, /[\u2055-\u205E]/, /[\u2190-\u23FF]/, /[\u2500-\u2775]/, /[\u2794-\u2BFF]/, /[\u2E00-\u2E7F]/, /[\u3001-\u3003]/, /[\u3008-\u3020]/, /[\u3030]/)
						, d = either(c, /[\u0300-\u036F]/, /[\u1DC0-\u1DFF]/, /[\u20D0-\u20FF]/, /[\uFE00-\uFE0F]/, /[\uFE20-\uFE2F]/)
						, p = concat(c, d, "*")
						, u = either(/[a-zA-Z_]/, /[\u00A8\u00AA\u00AD\u00AF\u00B2-\u00B5\u00B7-\u00BA]/, /[\u00BC-\u00BE\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF]/, /[\u0100-\u02FF\u0370-\u167F\u1681-\u180D\u180F-\u1DBF]/, /[\u1E00-\u1FFF]/, /[\u200B-\u200D\u202A-\u202E\u203F-\u2040\u2054\u2060-\u206F]/, /[\u2070-\u20CF\u2100-\u218F\u2460-\u24FF\u2776-\u2793]/, /[\u2C00-\u2DFF\u2E80-\u2FFF]/, /[\u3004-\u3007\u3021-\u302F\u3031-\u303F\u3040-\uD7FF]/, /[\uF900-\uFD3D\uFD40-\uFDCF\uFDF0-\uFE1F\uFE30-\uFE44]/, /[\uFE47-\uFEFE\uFF00-\uFFFD]/)
						, h = either(u, /\d/, /[\u0300-\u036F\u1DC0-\u1DFF\u20D0-\u20FF\uFE20-\uFE2F]/)
						, m = concat(u, h, "*")
						, g = concat(/[A-Z]/, h, "*")
						, _ = ["autoclosure", concat(/convention\(/, either("swift", "block", "c"), /\)/), "discardableResult", "dynamicCallable", "dynamicMemberLookup", "escaping", "frozen", "GKInspectable", "IBAction", "IBDesignable", "IBInspectable", "IBOutlet", "IBSegueAction", "inlinable", "main", "nonobjc", "NSApplicationMain", "NSCopying", "NSManaged", concat(/objc\(/, m, /\)/), "objc", "objcMembers", "propertyWrapper", "requires_stored_property_inits", "resultBuilder", "testable", "UIApplicationMain", "unknown", "usableFromInline"]
						, f = ["iOS", "iOSApplicationExtension", "macOS", "macOSApplicationExtension", "macCatalyst", "macCatalystApplicationExtension", "watchOS", "watchOSApplicationExtension", "tvOS", "tvOSApplicationExtension", "swift"];
					e.exports = function(e) {
							const c = {
									match: /\s+/,
									relevance: 0
							}
								, u = e.COMMENT("/\\*", "\\*/", {
									contains: ["self"]
							})
								, y = [e.C_LINE_COMMENT_MODE, u]
								, v = {
									match: [/\./, either(...t, ...n)],
									className: {
											2: "keyword"
									}
							}
								, b = {
									match: concat(/\./, either(...r)),
									relevance: 0
							}
								, S = r.filter((e=>"string" == typeof e)).concat(["_|0"])
								, C = {
									variants: [{
											className: "keyword",
											match: either(...r.filter((e=>"string" != typeof e)).concat(i).map(keywordWrapper), ...n)
									}]
							}
								, E = {
									$pattern: either(/\b\w+/, /#\w+/),
									keyword: S.concat(a),
									literal: o
							}
								, T = [v, b, C]
								, I = [{
									match: concat(/\./, either(...l)),
									relevance: 0
							}, {
									className: "built_in",
									match: concat(/\b/, either(...l), /(?=\()/)
							}]
								, w = {
									match: /->/,
									relevance: 0
							}
								, A = [w, {
									className: "operator",
									relevance: 0,
									variants: [{
											match: p
									}, {
											match: `\\.(\\.|${d})+`
									}]
							}]
								, R = "([0-9]_*)+"
								, x = "([0-9a-fA-F]_*)+"
								, O = {
									className: "number",
									relevance: 0,
									variants: [{
											match: `\\b(${R})(\\.(${R}))?([eE][+-]?(${R}))?\\b`
									}, {
											match: `\\b0x(${x})(\\.(${x}))?([pP][+-]?(${R}))?\\b`
									}, {
											match: /\b0o([0-7]_*)+\b/
									}, {
											match: /\b0b([01]_*)+\b/
									}]
							}
								, ESCAPED_CHARACTER = (e="")=>({
									className: "subst",
									variants: [{
											match: concat(/\\/, e, /[0\\tnr"']/)
									}, {
											match: concat(/\\/, e, /u\{[0-9a-fA-F]{1,8}\}/)
									}]
							})
								, ESCAPED_NEWLINE = (e="")=>({
									className: "subst",
									match: concat(/\\/, e, /[\t ]*(?:[\r\n]|\r\n)/)
							})
								, INTERPOLATION = (e="")=>({
									className: "subst",
									label: "interpol",
									begin: concat(/\\/, e, /\(/),
									end: /\)/
							})
								, MULTILINE_STRING = (e="")=>({
									begin: concat(e, /"""/),
									end: concat(/"""/, e),
									contains: [ESCAPED_CHARACTER(e), ESCAPED_NEWLINE(e), INTERPOLATION(e)]
							})
								, SINGLE_LINE_STRING = (e="")=>({
									begin: concat(e, /"/),
									end: concat(/"/, e),
									contains: [ESCAPED_CHARACTER(e), INTERPOLATION(e)]
							})
								, N = {
									className: "string",
									variants: [MULTILINE_STRING(), MULTILINE_STRING("#"), MULTILINE_STRING("##"), MULTILINE_STRING("###"), SINGLE_LINE_STRING(), SINGLE_LINE_STRING("#"), SINGLE_LINE_STRING("##"), SINGLE_LINE_STRING("###")]
							}
								, P = {
									match: concat(/`/, m, /`/)
							}
								, D = [P, {
									className: "variable",
									match: /\$\d+/
							}, {
									className: "variable",
									match: `\\$${h}+`
							}]
								, M = [{
									match: /(@|#(un)?)available/,
									className: "keyword",
									starts: {
											contains: [{
													begin: /\(/,
													end: /\)/,
													keywords: f,
													contains: [...A, O, N]
											}]
									}
							}, {
									className: "keyword",
									match: concat(/@/, either(..._))
							}, {
									className: "meta",
									match: concat(/@/, m)
							}]
								, L = {
									match: lookahead(/\b[A-Z]/),
									relevance: 0,
									contains: [{
											className: "type",
											match: concat(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/, h, "+")
									}, {
											className: "type",
											match: g,
											relevance: 0
									}, {
											match: /[?!]+/,
											relevance: 0
									}, {
											match: /\.\.\./,
											relevance: 0
									}, {
											match: concat(/\s+&\s+/, lookahead(g)),
											relevance: 0
									}]
							}
								, k = {
									begin: /</,
									end: />/,
									keywords: E,
									contains: [...y, ...T, ...M, w, L]
							};
							L.contains.push(k);
							const F = {
									begin: /\(/,
									end: /\)/,
									relevance: 0,
									keywords: E,
									contains: ["self", {
											match: concat(m, /\s*:/),
											keywords: "_|0",
											relevance: 0
									}, ...y, ...T, ...I, ...A, O, N, ...D, ...M, L]
							}
								, B = {
									begin: /</,
									end: />/,
									contains: [...y, L]
							}
								, G = {
									begin: /\(/,
									end: /\)/,
									keywords: E,
									contains: [{
											begin: either(lookahead(concat(m, /\s*:/)), lookahead(concat(m, /\s+/, m, /\s*:/))),
											end: /:/,
											relevance: 0,
											contains: [{
													className: "keyword",
													match: /\b_\b/
											}, {
													className: "params",
													match: m
											}]
									}, ...y, ...T, ...A, O, N, ...M, L, F],
									endsParent: !0,
									illegal: /["']/
							}
								, U = {
									match: [/func/, /\s+/, either(P.match, m, p)],
									className: {
											1: "keyword",
											3: "title.function"
									},
									contains: [B, G, c],
									illegal: [/\[/, /%/]
							}
								, z = {
									match: [/\b(?:subscript|init[?!]?)/, /\s*(?=[<(])/],
									className: {
											1: "keyword"
									},
									contains: [B, G, c],
									illegal: /\[|%/
							}
								, V = {
									match: [/operator/, /\s+/, p],
									className: {
											1: "keyword",
											3: "title"
									}
							}
								, H = {
									begin: [/precedencegroup/, /\s+/, g],
									className: {
											1: "keyword",
											3: "title"
									},
									contains: [L],
									keywords: [...s, ...o],
									end: /}/
							};
							for (const e of N.variants) {
									const t = e.contains.find((e=>"interpol" === e.label));
									t.keywords = E;
									const n = [...T, ...I, ...A, O, N, ...D];
									t.contains = [...n, {
											begin: /\(/,
											end: /\)/,
											contains: ["self", ...n]
									}]
							}
							return {
									name: "Swift",
									keywords: E,
									contains: [...y, U, z, {
											beginKeywords: "struct protocol class extension enum actor",
											end: "\\{",
											excludeEnd: !0,
											keywords: E,
											contains: [e.inherit(e.TITLE_MODE, {
													className: "title.class",
													begin: /[A-Za-z$_][\u00C0-\u02B80-9A-Za-z$_]*/
											}), ...T]
									}, V, H, {
											beginKeywords: "import",
											end: /$/,
											contains: [...y],
											relevance: 0
									}, ...T, ...I, ...A, O, N, ...D, ...M, L, F]
							}
					}
			}
			,
			8902: e=>{
					e.exports = function(e) {
							return {
									name: "Tagger Script",
									contains: [{
											className: "comment",
											begin: /\$noop\(/,
											end: /\)/,
											contains: [{
													begin: /\\[()]/
											}, {
													begin: /\(/,
													end: /\)/,
													contains: [{
															begin: /\\[()]/
													}, "self"]
											}],
											relevance: 10
									}, {
											className: "keyword",
											begin: /\$[_a-zA-Z0-9]+(?=\()/
									}, {
											className: "variable",
											begin: /%[_a-zA-Z0-9:]+%/
									}, {
											className: "symbol",
											begin: /\\[\\nt$%,()]/
									}, {
											className: "symbol",
											begin: /\\u[a-fA-F0-9]{4}/
									}]
							}
					}
			}
			,
			1441: e=>{
					e.exports = function(e) {
							return {
									name: "Test Anything Protocol",
									case_insensitive: !0,
									contains: [e.HASH_COMMENT_MODE, {
											className: "meta",
											variants: [{
													begin: "^TAP version (\\d+)$"
											}, {
													begin: "^1\\.\\.(\\d+)$"
											}]
									}, {
											begin: /---$/,
											end: "\\.\\.\\.$",
											subLanguage: "yaml",
											relevance: 0
									}, {
											className: "number",
											begin: " (\\d+) "
									}, {
											className: "symbol",
											variants: [{
													begin: "^ok"
											}, {
													begin: "^not ok"
											}]
									}]
							}
					}
			}
			,
			1955: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = /[a-zA-Z_][a-zA-Z0-9_]*/
								, i = {
									className: "number",
									variants: [e.BINARY_NUMBER_MODE, e.C_NUMBER_MODE]
							};
							return {
									name: "Tcl",
									aliases: ["tk"],
									keywords: ["after", "append", "apply", "array", "auto_execok", "auto_import", "auto_load", "auto_mkindex", "auto_mkindex_old", "auto_qualify", "auto_reset", "bgerror", "binary", "break", "catch", "cd", "chan", "clock", "close", "concat", "continue", "dde", "dict", "encoding", "eof", "error", "eval", "exec", "exit", "expr", "fblocked", "fconfigure", "fcopy", "file", "fileevent", "filename", "flush", "for", "foreach", "format", "gets", "glob", "global", "history", "http", "if", "incr", "info", "interp", "join", "lappend|10", "lassign|10", "lindex|10", "linsert|10", "list", "llength|10", "load", "lrange|10", "lrepeat|10", "lreplace|10", "lreverse|10", "lsearch|10", "lset|10", "lsort|10", "mathfunc", "mathop", "memory", "msgcat", "namespace", "open", "package", "parray", "pid", "pkg::create", "pkg_mkIndex", "platform", "platform::shell", "proc", "puts", "pwd", "read", "refchan", "regexp", "registry", "regsub|10", "rename", "return", "safe", "scan", "seek", "set", "socket", "source", "split", "string", "subst", "switch", "tcl_endOfWord", "tcl_findLibrary", "tcl_startOfNextWord", "tcl_startOfPreviousWord", "tcl_wordBreakAfter", "tcl_wordBreakBefore", "tcltest", "tclvars", "tell", "time", "tm", "trace", "unknown", "unload", "unset", "update", "uplevel", "upvar", "variable", "vwait", "while"],
									contains: [e.COMMENT(";[ \\t]*#", "$"), e.COMMENT("^[ \\t]*#", "$"), {
											beginKeywords: "proc",
											end: "[\\{]",
											excludeEnd: !0,
											contains: [{
													className: "title",
													begin: "[ \\t\\n\\r]+(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*",
													end: "[ \\t\\n\\r]",
													endsWithParent: !0,
													excludeEnd: !0
											}]
									}, {
											className: "variable",
											variants: [{
													begin: t.concat(/\$/, t.optional(/::/), n, "(::", n, ")*")
											}, {
													begin: "\\$\\{(::)?[a-zA-Z_]((::)?[a-zA-Z0-9_])*",
													end: "\\}",
													contains: [i]
											}]
									}, {
											className: "string",
											contains: [e.BACKSLASH_ESCAPE],
											variants: [e.inherit(e.QUOTE_STRING_MODE, {
													illegal: null
											})]
									}, i]
							}
					}
			}
			,
			3058: e=>{
					e.exports = function(e) {
							const t = ["bool", "byte", "i16", "i32", "i64", "double", "string", "binary"];
							return {
									name: "Thrift",
									keywords: {
											keyword: ["namespace", "const", "typedef", "struct", "enum", "service", "exception", "void", "oneway", "set", "list", "map", "required", "optional"],
											type: t,
											literal: "true false"
									},
									contains: [e.QUOTE_STRING_MODE, e.NUMBER_MODE, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, {
											className: "class",
											beginKeywords: "struct enum service exception",
											end: /\{/,
											illegal: /\n/,
											contains: [e.inherit(e.TITLE_MODE, {
													starts: {
															endsWithParent: !0,
															excludeEnd: !0
													}
											})]
									}, {
											begin: "\\b(set|list|map)\\s*<",
											keywords: {
													type: [...t, "set", "list", "map"]
											},
											end: ">",
											contains: ["self"]
									}]
							}
					}
			}
			,
			2183: e=>{
					e.exports = function(e) {
							const t = {
									className: "number",
									begin: "[1-9][0-9]*",
									relevance: 0
							}
								, n = {
									className: "symbol",
									begin: ":[^\\]]+"
							};
							return {
									name: "TP",
									keywords: {
											keyword: ["ABORT", "ACC", "ADJUST", "AND", "AP_LD", "BREAK", "CALL", "CNT", "COL", "CONDITION", "CONFIG", "DA", "DB", "DIV", "DETECT", "ELSE", "END", "ENDFOR", "ERR_NUM", "ERROR_PROG", "FINE", "FOR", "GP", "GUARD", "INC", "IF", "JMP", "LINEAR_MAX_SPEED", "LOCK", "MOD", "MONITOR", "OFFSET", "Offset", "OR", "OVERRIDE", "PAUSE", "PREG", "PTH", "RT_LD", "RUN", "SELECT", "SKIP", "Skip", "TA", "TB", "TO", "TOOL_OFFSET", "Tool_Offset", "UF", "UT", "UFRAME_NUM", "UTOOL_NUM", "UNLOCK", "WAIT", "X", "Y", "Z", "W", "P", "R", "STRLEN", "SUBSTR", "FINDSTR", "VOFFSET", "PROG", "ATTR", "MN", "POS"],
											literal: ["ON", "OFF", "max_speed", "LPOS", "JPOS", "ENABLE", "DISABLE", "START", "STOP", "RESET"]
									},
									contains: [{
											className: "built_in",
											begin: "(AR|P|PAYLOAD|PR|R|SR|RSR|LBL|VR|UALM|MESSAGE|UTOOL|UFRAME|TIMER|TIMER_OVERFLOW|JOINT_MAX_SPEED|RESUME_PROG|DIAG_REC)\\[",
											end: "\\]",
											contains: ["self", t, n]
									}, {
											className: "built_in",
											begin: "(AI|AO|DI|DO|F|RI|RO|UI|UO|GI|GO|SI|SO)\\[",
											end: "\\]",
											contains: ["self", t, e.QUOTE_STRING_MODE, n]
									}, {
											className: "keyword",
											begin: "/(PROG|ATTR|MN|POS|END)\\b"
									}, {
											className: "keyword",
											begin: "(CALL|RUN|POINT_LOGIC|LBL)\\b"
									}, {
											className: "keyword",
											begin: "\\b(ACC|CNT|Skip|Offset|PSPD|RT_LD|AP_LD|Tool_Offset)"
									}, {
											className: "number",
											begin: "\\d+(sec|msec|mm/sec|cm/min|inch/min|deg/sec|mm|in|cm)?\\b",
											relevance: 0
									}, e.COMMENT("//", "[;$]"), e.COMMENT("!", "[;$]"), e.COMMENT("--eg:", "$"), e.QUOTE_STRING_MODE, {
											className: "string",
											begin: "'",
											end: "'"
									}, e.C_NUMBER_MODE, {
											className: "variable",
											begin: "\\$[A-Za-z0-9_]+"
									}]
							}
					}
			}
			,
			1498: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = ["absolute_url", "asset|0", "asset_version", "attribute", "block", "constant", "controller|0", "country_timezones", "csrf_token", "cycle", "date", "dump", "expression", "form|0", "form_end", "form_errors", "form_help", "form_label", "form_rest", "form_row", "form_start", "form_widget", "html_classes", "include", "is_granted", "logout_path", "logout_url", "max", "min", "parent", "path|0", "random", "range", "relative_path", "render", "render_esi", "source", "template_from_string", "url|0"];
							let i = ["apply", "autoescape", "block", "cache", "deprecated", "do", "embed", "extends", "filter", "flush", "for", "form_theme", "from", "if", "import", "include", "macro", "sandbox", "set", "stopwatch", "trans", "trans_default_domain", "transchoice", "use", "verbatim", "with"];
							i = i.concat(i.map((e=>`end${e}`)));
							const r = {
									scope: "string",
									variants: [{
											begin: /'/,
											end: /'/
									}, {
											begin: /"/,
											end: /"/
									}]
							}
								, o = {
									scope: "number",
									match: /\d+/
							}
								, s = {
									begin: /\(/,
									end: /\)/,
									excludeBegin: !0,
									excludeEnd: !0,
									contains: [r, o]
							}
								, a = {
									beginKeywords: n.join(" "),
									keywords: {
											name: n
									},
									relevance: 0,
									contains: [s]
							}
								, l = {
									match: /\|(?=[A-Za-z_]+:?)/,
									beginScope: "punctuation",
									relevance: 0,
									contains: [{
											match: /[A-Za-z_]+:?/,
											keywords: ["abs", "abbr_class", "abbr_method", "batch", "capitalize", "column", "convert_encoding", "country_name", "currency_name", "currency_symbol", "data_uri", "date", "date_modify", "default", "escape", "file_excerpt", "file_link", "file_relative", "filter", "first", "format", "format_args", "format_args_as_text", "format_currency", "format_date", "format_datetime", "format_file", "format_file_from_text", "format_number", "format_time", "html_to_markdown", "humanize", "inky_to_html", "inline_css", "join", "json_encode", "keys", "language_name", "last", "length", "locale_name", "lower", "map", "markdown", "markdown_to_html", "merge", "nl2br", "number_format", "raw", "reduce", "replace", "reverse", "round", "slice", "slug", "sort", "spaceless", "split", "striptags", "timezone_name", "title", "trans", "transchoice", "trim", "u|0", "upper", "url_encode", "yaml_dump", "yaml_encode"]
									}]
							}
								, tagNamed = (e,{relevance: n})=>({
									beginScope: {
											1: "template-tag",
											3: "name"
									},
									relevance: n || 2,
									endScope: "template-tag",
									begin: [/\{%/, /\s*/, t.either(...e)],
									end: /%\}/,
									keywords: "in",
									contains: [l, a, r, o]
							})
								, c = tagNamed(i, {
									relevance: 2
							})
								, d = tagNamed([/[a-z_]+/], {
									relevance: 1
							});
							return {
									name: "Twig",
									aliases: ["craftcms"],
									case_insensitive: !0,
									subLanguage: "xml",
									contains: [e.COMMENT(/\{#/, /#\}/), c, d, {
											className: "template-variable",
											begin: /\{\{/,
											end: /\}\}/,
											contains: ["self", l, a, r, o]
									}]
							}
					}
			}
			,
			1381: e=>{
					const t = "[A-Za-z$_][0-9A-Za-z$_]*"
						, n = ["as", "in", "of", "if", "for", "while", "finally", "var", "new", "function", "do", "return", "void", "else", "break", "catch", "instanceof", "with", "throw", "case", "default", "try", "switch", "continue", "typeof", "delete", "let", "yield", "const", "class", "debugger", "async", "await", "static", "import", "from", "export", "extends"]
						, i = ["true", "false", "null", "undefined", "NaN", "Infinity"]
						, r = ["Object", "Function", "Boolean", "Symbol", "Math", "Date", "Number", "BigInt", "String", "RegExp", "Array", "Float32Array", "Float64Array", "Int8Array", "Uint8Array", "Uint8ClampedArray", "Int16Array", "Int32Array", "Uint16Array", "Uint32Array", "BigInt64Array", "BigUint64Array", "Set", "Map", "WeakSet", "WeakMap", "ArrayBuffer", "SharedArrayBuffer", "Atomics", "DataView", "JSON", "Promise", "Generator", "GeneratorFunction", "AsyncFunction", "Reflect", "Proxy", "Intl", "WebAssembly"]
						, o = ["Error", "EvalError", "InternalError", "RangeError", "ReferenceError", "SyntaxError", "TypeError", "URIError"]
						, s = ["setInterval", "setTimeout", "clearInterval", "clearTimeout", "require", "exports", "eval", "isFinite", "isNaN", "parseFloat", "parseInt", "decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "escape", "unescape"]
						, a = ["arguments", "this", "super", "console", "window", "document", "localStorage", "module", "global"]
						, l = [].concat(s, r, o);
					function javascript(e) {
							const c = e.regex
								, d = t
								, p = "<>"
								, u = "</>"
								, h = {
									begin: /<[A-Za-z0-9\\._:-]+/,
									end: /\/[A-Za-z0-9\\._:-]+>|\/>/,
									isTrulyOpeningTag: (e,t)=>{
											const n = e[0].length + e.index
												, i = e.input[n];
											if ("<" === i || "," === i)
													return void t.ignoreMatch();
											let r;
											">" === i && (((e,{after: t})=>{
													const n = "</" + e[0].slice(1);
													return -1 !== e.input.indexOf(n, t)
											}
											)(e, {
													after: n
											}) || t.ignoreMatch());
											const o = e.input.substring(n);
											((r = o.match(/^\s*=/)) || (r = o.match(/^\s+extends\s+/)) && 0 === r.index) && t.ignoreMatch()
									}
							}
								, m = {
									$pattern: t,
									keyword: n,
									literal: i,
									built_in: l,
									"variable.language": a
							}
								, g = "[0-9](_?[0-9])*"
								, _ = `\\.(${g})`
								, f = "0|[1-9](_?[0-9])*|0[0-7]*[89][0-9]*"
								, y = {
									className: "number",
									variants: [{
											begin: `(\\b(${f})((${_})|\\.)?|(${_}))[eE][+-]?(${g})\\b`
									}, {
											begin: `\\b(${f})\\b((${_})\\b|\\.)?|(${_})\\b`
									}, {
											begin: "\\b(0|[1-9](_?[0-9])*)n\\b"
									}, {
											begin: "\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*n?\\b"
									}, {
											begin: "\\b0[bB][0-1](_?[0-1])*n?\\b"
									}, {
											begin: "\\b0[oO][0-7](_?[0-7])*n?\\b"
									}, {
											begin: "\\b0[0-7]+n?\\b"
									}],
									relevance: 0
							}
								, v = {
									className: "subst",
									begin: "\\$\\{",
									end: "\\}",
									keywords: m,
									contains: []
							}
								, b = {
									begin: "html`",
									end: "",
									starts: {
											end: "`",
											returnEnd: !1,
											contains: [e.BACKSLASH_ESCAPE, v],
											subLanguage: "xml"
									}
							}
								, S = {
									begin: "css`",
									end: "",
									starts: {
											end: "`",
											returnEnd: !1,
											contains: [e.BACKSLASH_ESCAPE, v],
											subLanguage: "css"
									}
							}
								, C = {
									className: "string",
									begin: "`",
									end: "`",
									contains: [e.BACKSLASH_ESCAPE, v]
							}
								, E = {
									className: "comment",
									variants: [e.COMMENT(/\/\*\*(?!\/)/, "\\*/", {
											relevance: 0,
											contains: [{
													begin: "(?=@[A-Za-z]+)",
													relevance: 0,
													contains: [{
															className: "doctag",
															begin: "@[A-Za-z]+"
													}, {
															className: "type",
															begin: "\\{",
															end: "\\}",
															excludeEnd: !0,
															excludeBegin: !0,
															relevance: 0
													}, {
															className: "variable",
															begin: d + "(?=\\s*(-)|$)",
															endsParent: !0,
															relevance: 0
													}, {
															begin: /(?=[^\n])\s/,
															relevance: 0
													}]
											}]
									}), e.C_BLOCK_COMMENT_MODE, e.C_LINE_COMMENT_MODE]
							}
								, T = [e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, b, S, C, {
									match: /\$\d+/
							}, y];
							v.contains = T.concat({
									begin: /\{/,
									end: /\}/,
									keywords: m,
									contains: ["self"].concat(T)
							});
							const I = [].concat(E, v.contains)
								, w = I.concat([{
									begin: /\(/,
									end: /\)/,
									keywords: m,
									contains: ["self"].concat(I)
							}])
								, A = {
									className: "params",
									begin: /\(/,
									end: /\)/,
									excludeBegin: !0,
									excludeEnd: !0,
									keywords: m,
									contains: w
							}
								, R = {
									variants: [{
											match: [/class/, /\s+/, d, /\s+/, /extends/, /\s+/, c.concat(d, "(", c.concat(/\./, d), ")*")],
											scope: {
													1: "keyword",
													3: "title.class",
													5: "keyword",
													7: "title.class.inherited"
											}
									}, {
											match: [/class/, /\s+/, d],
											scope: {
													1: "keyword",
													3: "title.class"
											}
									}]
							}
								, x = {
									relevance: 0,
									match: c.either(/\bJSON/, /\b[A-Z][a-z]+([A-Z][a-z]*|\d)*/, /\b[A-Z]{2,}([A-Z][a-z]+|\d)+([A-Z][a-z]*)*/, /\b[A-Z]{2,}[a-z]+([A-Z][a-z]+|\d)*([A-Z][a-z]*)*/),
									className: "title.class",
									keywords: {
											_: [...r, ...o]
									}
							}
								, O = {
									variants: [{
											match: [/function/, /\s+/, d, /(?=\s*\()/]
									}, {
											match: [/function/, /\s*(?=\()/]
									}],
									className: {
											1: "keyword",
											3: "title.function"
									},
									label: "func.def",
									contains: [A],
									illegal: /%/
							};
							const N = {
									match: c.concat(/\b/, (P = [...s, "super", "import"],
									c.concat("(?!", P.join("|"), ")")), d, c.lookahead(/\(/)),
									className: "title.function",
									relevance: 0
							};
							var P;
							const D = {
									begin: c.concat(/\./, c.lookahead(c.concat(d, /(?![0-9A-Za-z$_(])/))),
									end: d,
									excludeBegin: !0,
									keywords: "prototype",
									className: "property",
									relevance: 0
							}
								, M = {
									match: [/get|set/, /\s+/, d, /(?=\()/],
									className: {
											1: "keyword",
											3: "title.function"
									},
									contains: [{
											begin: /\(\)/
									}, A]
							}
								, L = "(\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)|" + e.UNDERSCORE_IDENT_RE + ")\\s*=>"
								, k = {
									match: [/const|var|let/, /\s+/, d, /\s*/, /=\s*/, /(async\s*)?/, c.lookahead(L)],
									keywords: "async",
									className: {
											1: "keyword",
											3: "title.function"
									},
									contains: [A]
							};
							return {
									name: "Javascript",
									aliases: ["js", "jsx", "mjs", "cjs"],
									keywords: m,
									exports: {
											PARAMS_CONTAINS: w,
											CLASS_REFERENCE: x
									},
									illegal: /#(?![$_A-z])/,
									contains: [e.SHEBANG({
											label: "shebang",
											binary: "node",
											relevance: 5
									}), {
											label: "use_strict",
											className: "meta",
											relevance: 10,
											begin: /^\s*['"]use (strict|asm)['"]/
									}, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, b, S, C, E, {
											match: /\$\d+/
									}, y, x, {
											className: "attr",
											begin: d + c.lookahead(":"),
											relevance: 0
									}, k, {
											begin: "(" + e.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
											keywords: "return throw case",
											relevance: 0,
											contains: [E, e.REGEXP_MODE, {
													className: "function",
													begin: L,
													returnBegin: !0,
													end: "\\s*=>",
													contains: [{
															className: "params",
															variants: [{
																	begin: e.UNDERSCORE_IDENT_RE,
																	relevance: 0
															}, {
																	className: null,
																	begin: /\(\s*\)/,
																	skip: !0
															}, {
																	begin: /\(/,
																	end: /\)/,
																	excludeBegin: !0,
																	excludeEnd: !0,
																	keywords: m,
																	contains: w
															}]
													}]
											}, {
													begin: /,/,
													relevance: 0
											}, {
													match: /\s+/,
													relevance: 0
											}, {
													variants: [{
															begin: p,
															end: u
													}, {
															match: /<[A-Za-z0-9\\._:-]+\s*\/>/
													}, {
															begin: h.begin,
															"on:begin": h.isTrulyOpeningTag,
															end: h.end
													}],
													subLanguage: "xml",
													contains: [{
															begin: h.begin,
															end: h.end,
															skip: !0,
															contains: ["self"]
													}]
											}]
									}, O, {
											beginKeywords: "while if switch catch for"
									}, {
											begin: "\\b(?!function)" + e.UNDERSCORE_IDENT_RE + "\\([^()]*(\\([^()]*(\\([^()]*\\)[^()]*)*\\)[^()]*)*\\)\\s*\\{",
											returnBegin: !0,
											label: "func.def",
											contains: [A, e.inherit(e.TITLE_MODE, {
													begin: d,
													className: "title.function"
											})]
									}, {
											match: /\.\.\./,
											relevance: 0
									}, D, {
											match: "\\$" + d,
											relevance: 0
									}, {
											match: [/\bconstructor(?=\s*\()/],
											className: {
													1: "title.function"
											},
											contains: [A]
									}, N, {
											relevance: 0,
											match: /\b[A-Z][A-Z_0-9]+\b/,
											className: "variable.constant"
									}, R, M, {
											match: /\$[(.]/
									}]
							}
					}
					e.exports = function(e) {
							const r = javascript(e)
								, o = t
								, s = ["any", "void", "number", "boolean", "string", "object", "never", "symbol", "bigint", "unknown"]
								, c = {
									beginKeywords: "namespace",
									end: /\{/,
									excludeEnd: !0,
									contains: [r.exports.CLASS_REFERENCE]
							}
								, d = {
									beginKeywords: "interface",
									end: /\{/,
									excludeEnd: !0,
									keywords: {
											keyword: "interface extends",
											built_in: s
									},
									contains: [r.exports.CLASS_REFERENCE]
							}
								, p = {
									$pattern: t,
									keyword: n.concat(["type", "namespace", "interface", "public", "private", "protected", "implements", "declare", "abstract", "readonly", "enum", "override"]),
									literal: i,
									built_in: l.concat(s),
									"variable.language": a
							}
								, u = {
									className: "meta",
									begin: "@" + o
							}
								, swapMode = (e,t,n)=>{
									const i = e.contains.findIndex((e=>e.label === t));
									if (-1 === i)
											throw new Error("can not find mode to replace");
									e.contains.splice(i, 1, n)
							}
							;
							return Object.assign(r.keywords, p),
							r.exports.PARAMS_CONTAINS.push(u),
							r.contains = r.contains.concat([u, c, d]),
							swapMode(r, "shebang", e.SHEBANG()),
							swapMode(r, "use_strict", {
									className: "meta",
									relevance: 10,
									begin: /^\s*['"]use strict['"]/
							}),
							r.contains.find((e=>"func.def" === e.label)).relevance = 0,
							Object.assign(r, {
									name: "TypeScript",
									aliases: ["ts", "tsx"]
							}),
							r
					}
			}
			,
			5615: e=>{
					e.exports = function(e) {
							return {
									name: "Vala",
									keywords: {
											keyword: "char uchar unichar int uint long ulong short ushort int8 int16 int32 int64 uint8 uint16 uint32 uint64 float double bool struct enum string void weak unowned owned async signal static abstract interface override virtual delegate if while do for foreach else switch case break default return try catch public private protected internal using new this get set const stdout stdin stderr var",
											built_in: "DBus GLib CCode Gee Object Gtk Posix",
											literal: "false true null"
									},
									contains: [{
											className: "class",
											beginKeywords: "class interface namespace",
											end: /\{/,
											excludeEnd: !0,
											illegal: "[^,:\\n\\s\\.]",
											contains: [e.UNDERSCORE_TITLE_MODE]
									}, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, {
											className: "string",
											begin: '"""',
											end: '"""',
											relevance: 5
									}, e.APOS_STRING_MODE, e.QUOTE_STRING_MODE, e.C_NUMBER_MODE, {
											className: "meta",
											begin: "^#",
											end: "$"
									}]
							}
					}
			}
			,
			3514: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = /\d{1,2}\/\d{1,2}\/\d{4}/
								, i = /\d{4}-\d{1,2}-\d{1,2}/
								, r = /(\d|1[012])(:\d+){0,2} *(AM|PM)/
								, o = /\d{1,2}(:\d{1,2}){1,2}/
								, s = {
									className: "literal",
									variants: [{
											begin: t.concat(/# */, t.either(i, n), / *#/)
									}, {
											begin: t.concat(/# */, o, / *#/)
									}, {
											begin: t.concat(/# */, r, / *#/)
									}, {
											begin: t.concat(/# */, t.either(i, n), / +/, t.either(r, o), / *#/)
									}]
							}
								, a = e.COMMENT(/'''/, /$/, {
									contains: [{
											className: "doctag",
											begin: /<\/?/,
											end: />/
									}]
							})
								, l = e.COMMENT(null, /$/, {
									variants: [{
											begin: /'/
									}, {
											begin: /([\t ]|^)REM(?=\s)/
									}]
							});
							return {
									name: "Visual Basic .NET",
									aliases: ["vb"],
									case_insensitive: !0,
									classNameAliases: {
											label: "symbol"
									},
									keywords: {
											keyword: "addhandler alias aggregate ansi as async assembly auto binary by byref byval call case catch class compare const continue custom declare default delegate dim distinct do each equals else elseif end enum erase error event exit explicit finally for friend from function get global goto group handles if implements imports in inherits interface into iterator join key let lib loop me mid module mustinherit mustoverride mybase myclass namespace narrowing new next notinheritable notoverridable of off on operator option optional order overloads overridable overrides paramarray partial preserve private property protected public raiseevent readonly redim removehandler resume return select set shadows shared skip static step stop structure strict sub synclock take text then throw to try unicode until using when where while widening with withevents writeonly yield",
											built_in: "addressof and andalso await directcast gettype getxmlnamespace is isfalse isnot istrue like mod nameof new not or orelse trycast typeof xor cbool cbyte cchar cdate cdbl cdec cint clng cobj csbyte cshort csng cstr cuint culng cushort",
											type: "boolean byte char date decimal double integer long object sbyte short single string uinteger ulong ushort",
											literal: "true false nothing"
									},
									illegal: "//|\\{|\\}|endif|gosub|variant|wend|^\\$ ",
									contains: [{
											className: "string",
											begin: /"(""|[^/n])"C\b/
									}, {
											className: "string",
											begin: /"/,
											end: /"/,
											illegal: /\n/,
											contains: [{
													begin: /""/
											}]
									}, s, {
											className: "number",
											relevance: 0,
											variants: [{
													begin: /\b\d[\d_]*((\.[\d_]+(E[+-]?[\d_]+)?)|(E[+-]?[\d_]+))[RFD@!#]?/
											}, {
													begin: /\b\d[\d_]*((U?[SIL])|[%&])?/
											}, {
													begin: /&H[\dA-F_]+((U?[SIL])|[%&])?/
											}, {
													begin: /&O[0-7_]+((U?[SIL])|[%&])?/
											}, {
													begin: /&B[01_]+((U?[SIL])|[%&])?/
											}]
									}, {
											className: "label",
											begin: /^\w+:/
									}, a, l, {
											className: "meta",
											begin: /[\t ]*#(const|disable|else|elseif|enable|end|externalsource|if|region)\b/,
											end: /$/,
											keywords: {
													keyword: "const disable else elseif enable end externalsource if region then"
											},
											contains: [l]
									}]
							}
					}
			}
			,
			9969: e=>{
					e.exports = function(e) {
							return {
									name: "VBScript in HTML",
									subLanguage: "xml",
									contains: [{
											begin: "<%",
											end: "%>",
											subLanguage: "vbscript"
									}]
							}
					}
			}
			,
			3732: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = ["lcase", "month", "vartype", "instrrev", "ubound", "setlocale", "getobject", "rgb", "getref", "string", "weekdayname", "rnd", "dateadd", "monthname", "now", "day", "minute", "isarray", "cbool", "round", "formatcurrency", "conversions", "csng", "timevalue", "second", "year", "space", "abs", "clng", "timeserial", "fixs", "len", "asc", "isempty", "maths", "dateserial", "atn", "timer", "isobject", "filter", "weekday", "datevalue", "ccur", "isdate", "instr", "datediff", "formatdatetime", "replace", "isnull", "right", "sgn", "array", "snumeric", "log", "cdbl", "hex", "chr", "lbound", "msgbox", "ucase", "getlocale", "cos", "cdate", "cbyte", "rtrim", "join", "hour", "oct", "typename", "trim", "strcomp", "int", "createobject", "loadpicture", "tan", "formatnumber", "mid", "split", "cint", "sin", "datepart", "ltrim", "sqr", "time", "derived", "eval", "date", "formatpercent", "exp", "inputbox", "left", "ascw", "chrw", "regexp", "cstr", "err"];
							return {
									name: "VBScript",
									aliases: ["vbs"],
									case_insensitive: !0,
									keywords: {
											keyword: ["call", "class", "const", "dim", "do", "loop", "erase", "execute", "executeglobal", "exit", "for", "each", "next", "function", "if", "then", "else", "on", "error", "option", "explicit", "new", "private", "property", "let", "get", "public", "randomize", "redim", "rem", "select", "case", "set", "stop", "sub", "while", "wend", "with", "end", "to", "elseif", "is", "or", "xor", "and", "not", "class_initialize", "class_terminate", "default", "preserve", "in", "me", "byval", "byref", "step", "resume", "goto"],
											built_in: ["server", "response", "request", "scriptengine", "scriptenginebuildversion", "scriptengineminorversion", "scriptenginemajorversion"],
											literal: ["true", "false", "null", "nothing", "empty"]
									},
									illegal: "//",
									contains: [{
											begin: t.concat(t.either(...n), "\\s*\\("),
											relevance: 0,
											keywords: {
													built_in: n
											}
									}, e.inherit(e.QUOTE_STRING_MODE, {
											contains: [{
													begin: '""'
											}]
									}), e.COMMENT(/'/, /$/, {
											relevance: 0
									}), e.C_NUMBER_MODE]
							}
					}
			}
			,
			1838: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = ["begin_keywords", "celldefine", "default_nettype", "default_decay_time", "default_trireg_strength", "define", "delay_mode_distributed", "delay_mode_path", "delay_mode_unit", "delay_mode_zero", "else", "elsif", "end_keywords", "endcelldefine", "endif", "ifdef", "ifndef", "include", "line", "nounconnected_drive", "pragma", "resetall", "timescale", "unconnected_drive", "undef", "undefineall"];
							return {
									name: "Verilog",
									aliases: ["v", "sv", "svh"],
									case_insensitive: !1,
									keywords: {
											$pattern: /\$?[\w]+(\$[\w]+)*/,
											keyword: ["accept_on", "alias", "always", "always_comb", "always_ff", "always_latch", "and", "assert", "assign", "assume", "automatic", "before", "begin", "bind", "bins", "binsof", "bit", "break", "buf|0", "bufif0", "bufif1", "byte", "case", "casex", "casez", "cell", "chandle", "checker", "class", "clocking", "cmos", "config", "const", "constraint", "context", "continue", "cover", "covergroup", "coverpoint", "cross", "deassign", "default", "defparam", "design", "disable", "dist", "do", "edge", "else", "end", "endcase", "endchecker", "endclass", "endclocking", "endconfig", "endfunction", "endgenerate", "endgroup", "endinterface", "endmodule", "endpackage", "endprimitive", "endprogram", "endproperty", "endspecify", "endsequence", "endtable", "endtask", "enum", "event", "eventually", "expect", "export", "extends", "extern", "final", "first_match", "for", "force", "foreach", "forever", "fork", "forkjoin", "function", "generate|5", "genvar", "global", "highz0", "highz1", "if", "iff", "ifnone", "ignore_bins", "illegal_bins", "implements", "implies", "import", "incdir", "include", "initial", "inout", "input", "inside", "instance", "int", "integer", "interconnect", "interface", "intersect", "join", "join_any", "join_none", "large", "let", "liblist", "library", "local", "localparam", "logic", "longint", "macromodule", "matches", "medium", "modport", "module", "nand", "negedge", "nettype", "new", "nexttime", "nmos", "nor", "noshowcancelled", "not", "notif0", "notif1", "or", "output", "package", "packed", "parameter", "pmos", "posedge", "primitive", "priority", "program", "property", "protected", "pull0", "pull1", "pulldown", "pullup", "pulsestyle_ondetect", "pulsestyle_onevent", "pure", "rand", "randc", "randcase", "randsequence", "rcmos", "real", "realtime", "ref", "reg", "reject_on", "release", "repeat", "restrict", "return", "rnmos", "rpmos", "rtran", "rtranif0", "rtranif1", "s_always", "s_eventually", "s_nexttime", "s_until", "s_until_with", "scalared", "sequence", "shortint", "shortreal", "showcancelled", "signed", "small", "soft", "solve", "specify", "specparam", "static", "string", "strong", "strong0", "strong1", "struct", "super", "supply0", "supply1", "sync_accept_on", "sync_reject_on", "table", "tagged", "task", "this", "throughout", "time", "timeprecision", "timeunit", "tran", "tranif0", "tranif1", "tri", "tri0", "tri1", "triand", "trior", "trireg", "type", "typedef", "union", "unique", "unique0", "unsigned", "until", "until_with", "untyped", "use", "uwire", "var", "vectored", "virtual", "void", "wait", "wait_order", "wand", "weak", "weak0", "weak1", "while", "wildcard", "wire", "with", "within", "wor", "xnor", "xor"],
											literal: ["null"],
											built_in: ["$finish", "$stop", "$exit", "$fatal", "$error", "$warning", "$info", "$realtime", "$time", "$printtimescale", "$bitstoreal", "$bitstoshortreal", "$itor", "$signed", "$cast", "$bits", "$stime", "$timeformat", "$realtobits", "$shortrealtobits", "$rtoi", "$unsigned", "$asserton", "$assertkill", "$assertpasson", "$assertfailon", "$assertnonvacuouson", "$assertoff", "$assertcontrol", "$assertpassoff", "$assertfailoff", "$assertvacuousoff", "$isunbounded", "$sampled", "$fell", "$changed", "$past_gclk", "$fell_gclk", "$changed_gclk", "$rising_gclk", "$steady_gclk", "$coverage_control", "$coverage_get", "$coverage_save", "$set_coverage_db_name", "$rose", "$stable", "$past", "$rose_gclk", "$stable_gclk", "$future_gclk", "$falling_gclk", "$changing_gclk", "$display", "$coverage_get_max", "$coverage_merge", "$get_coverage", "$load_coverage_db", "$typename", "$unpacked_dimensions", "$left", "$low", "$increment", "$clog2", "$ln", "$log10", "$exp", "$sqrt", "$pow", "$floor", "$ceil", "$sin", "$cos", "$tan", "$countbits", "$onehot", "$isunknown", "$fatal", "$warning", "$dimensions", "$right", "$high", "$size", "$asin", "$acos", "$atan", "$atan2", "$hypot", "$sinh", "$cosh", "$tanh", "$asinh", "$acosh", "$atanh", "$countones", "$onehot0", "$error", "$info", "$random", "$dist_chi_square", "$dist_erlang", "$dist_exponential", "$dist_normal", "$dist_poisson", "$dist_t", "$dist_uniform", "$q_initialize", "$q_remove", "$q_exam", "$async$and$array", "$async$nand$array", "$async$or$array", "$async$nor$array", "$sync$and$array", "$sync$nand$array", "$sync$or$array", "$sync$nor$array", "$q_add", "$q_full", "$psprintf", "$async$and$plane", "$async$nand$plane", "$async$or$plane", "$async$nor$plane", "$sync$and$plane", "$sync$nand$plane", "$sync$or$plane", "$sync$nor$plane", "$system", "$display", "$displayb", "$displayh", "$displayo", "$strobe", "$strobeb", "$strobeh", "$strobeo", "$write", "$readmemb", "$readmemh", "$writememh", "$value$plusargs", "$dumpvars", "$dumpon", "$dumplimit", "$dumpports", "$dumpportson", "$dumpportslimit", "$writeb", "$writeh", "$writeo", "$monitor", "$monitorb", "$monitorh", "$monitoro", "$writememb", "$dumpfile", "$dumpoff", "$dumpall", "$dumpflush", "$dumpportsoff", "$dumpportsall", "$dumpportsflush", "$fclose", "$fdisplay", "$fdisplayb", "$fdisplayh", "$fdisplayo", "$fstrobe", "$fstrobeb", "$fstrobeh", "$fstrobeo", "$swrite", "$swriteb", "$swriteh", "$swriteo", "$fscanf", "$fread", "$fseek", "$fflush", "$feof", "$fopen", "$fwrite", "$fwriteb", "$fwriteh", "$fwriteo", "$fmonitor", "$fmonitorb", "$fmonitorh", "$fmonitoro", "$sformat", "$sformatf", "$fgetc", "$ungetc", "$fgets", "$sscanf", "$rewind", "$ftell", "$ferror"]
									},
									contains: [e.C_BLOCK_COMMENT_MODE, e.C_LINE_COMMENT_MODE, e.QUOTE_STRING_MODE, {
											scope: "number",
											contains: [e.BACKSLASH_ESCAPE],
											variants: [{
													begin: /\b((\d+'([bhodBHOD]))[0-9xzXZa-fA-F_]+)/
											}, {
													begin: /\B(('([bhodBHOD]))[0-9xzXZa-fA-F_]+)/
											}, {
													begin: /\b[0-9][0-9_]*/,
													relevance: 0
											}]
									}, {
											scope: "variable",
											variants: [{
													begin: "#\\((?!parameter).+\\)"
											}, {
													begin: "\\.\\w+",
													relevance: 0
											}]
									}, {
											scope: "variable.constant",
											match: t.concat(/`/, t.either("__FILE__", "__LINE__"))
									}, {
											scope: "meta",
											begin: t.concat(/`/, t.either(...n)),
											end: /$|\/\/|\/\*/,
											returnEnd: !0,
											keywords: n
									}]
							}
					}
			}
			,
			7708: e=>{
					e.exports = function(e) {
							const t = "\\d(_|\\d)*"
								, n = "[eE][-+]?" + t
								, i = "\\b(" + (t + "#\\w+(\\.\\w+)?#(" + n + ")?") + "|" + (t + "(\\." + t + ")?(" + n + ")?") + ")";
							return {
									name: "VHDL",
									case_insensitive: !0,
									keywords: {
											keyword: ["abs", "access", "after", "alias", "all", "and", "architecture", "array", "assert", "assume", "assume_guarantee", "attribute", "begin", "block", "body", "buffer", "bus", "case", "component", "configuration", "constant", "context", "cover", "disconnect", "downto", "default", "else", "elsif", "end", "entity", "exit", "fairness", "file", "for", "force", "function", "generate", "generic", "group", "guarded", "if", "impure", "in", "inertial", "inout", "is", "label", "library", "linkage", "literal", "loop", "map", "mod", "nand", "new", "next", "nor", "not", "null", "of", "on", "open", "or", "others", "out", "package", "parameter", "port", "postponed", "procedure", "process", "property", "protected", "pure", "range", "record", "register", "reject", "release", "rem", "report", "restrict", "restrict_guarantee", "return", "rol", "ror", "select", "sequence", "severity", "shared", "signal", "sla", "sll", "sra", "srl", "strong", "subtype", "then", "to", "transport", "type", "unaffected", "units", "until", "use", "variable", "view", "vmode", "vprop", "vunit", "wait", "when", "while", "with", "xnor", "xor"],
											built_in: ["boolean", "bit", "character", "integer", "time", "delay_length", "natural", "positive", "string", "bit_vector", "file_open_kind", "file_open_status", "std_logic", "std_logic_vector", "unsigned", "signed", "boolean_vector", "integer_vector", "std_ulogic", "std_ulogic_vector", "unresolved_unsigned", "u_unsigned", "unresolved_signed", "u_signed", "real_vector", "time_vector"],
											literal: ["false", "true", "note", "warning", "error", "failure", "line", "text", "side", "width"]
									},
									illegal: /\{/,
									contains: [e.C_BLOCK_COMMENT_MODE, e.COMMENT("--", "$"), e.QUOTE_STRING_MODE, {
											className: "number",
											begin: i,
											relevance: 0
									}, {
											className: "string",
											begin: "'(U|X|0|1|Z|W|L|H|-)'",
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											className: "symbol",
											begin: "'[A-Za-z](_?[A-Za-z0-9])*",
											contains: [e.BACKSLASH_ESCAPE]
									}]
							}
					}
			}
			,
			5277: e=>{
					e.exports = function(e) {
							return {
									name: "Vim Script",
									keywords: {
											$pattern: /[!#@\w]+/,
											keyword: "N|0 P|0 X|0 a|0 ab abc abo al am an|0 ar arga argd arge argdo argg argl argu as au aug aun b|0 bN ba bad bd be bel bf bl bm bn bo bp br brea breaka breakd breakl bro bufdo buffers bun bw c|0 cN cNf ca cabc caddb cad caddf cal cat cb cc ccl cd ce cex cf cfir cgetb cgete cg changes chd che checkt cl cla clo cm cmapc cme cn cnew cnf cno cnorea cnoreme co col colo com comc comp con conf cope cp cpf cq cr cs cst cu cuna cunme cw delm deb debugg delc delf dif diffg diffo diffp diffpu diffs diffthis dig di dl dell dj dli do doautoa dp dr ds dsp e|0 ea ec echoe echoh echom echon el elsei em en endfo endf endt endw ene ex exe exi exu f|0 files filet fin fina fini fir fix fo foldc foldd folddoc foldo for fu go gr grepa gu gv ha helpf helpg helpt hi hid his ia iabc if ij il im imapc ime ino inorea inoreme int is isp iu iuna iunme j|0 ju k|0 keepa kee keepj lN lNf l|0 lad laddb laddf la lan lat lb lc lch lcl lcs le lefta let lex lf lfir lgetb lgete lg lgr lgrepa lh ll lla lli lmak lm lmapc lne lnew lnf ln loadk lo loc lockv lol lope lp lpf lr ls lt lu lua luad luaf lv lvimgrepa lw m|0 ma mak map mapc marks mat me menut mes mk mks mksp mkv mkvie mod mz mzf nbc nb nbs new nm nmapc nme nn nnoreme noa no noh norea noreme norm nu nun nunme ol o|0 om omapc ome on ono onoreme opt ou ounme ow p|0 profd prof pro promptr pc ped pe perld po popu pp pre prev ps pt ptN ptf ptj ptl ptn ptp ptr pts pu pw py3 python3 py3d py3f py pyd pyf quita qa rec red redi redr redraws reg res ret retu rew ri rightb rub rubyd rubyf rund ru rv sN san sa sal sav sb sbN sba sbf sbl sbm sbn sbp sbr scrip scripte scs se setf setg setl sf sfir sh sim sig sil sl sla sm smap smapc sme sn sni sno snor snoreme sor so spelld spe spelli spellr spellu spellw sp spr sre st sta startg startr star stopi stj sts sun sunm sunme sus sv sw sy synti sync tN tabN tabc tabdo tabe tabf tabfir tabl tabm tabnew tabn tabo tabp tabr tabs tab ta tags tc tcld tclf te tf th tj tl tm tn to tp tr try ts tu u|0 undoj undol una unh unl unlo unm unme uns up ve verb vert vim vimgrepa vi viu vie vm vmapc vme vne vn vnoreme vs vu vunme windo w|0 wN wa wh wi winc winp wn wp wq wqa ws wu wv x|0 xa xmapc xm xme xn xnoreme xu xunme y|0 z|0 ~ Next Print append abbreviate abclear aboveleft all amenu anoremenu args argadd argdelete argedit argglobal arglocal argument ascii autocmd augroup aunmenu buffer bNext ball badd bdelete behave belowright bfirst blast bmodified bnext botright bprevious brewind break breakadd breakdel breaklist browse bunload bwipeout change cNext cNfile cabbrev cabclear caddbuffer caddexpr caddfile call catch cbuffer cclose center cexpr cfile cfirst cgetbuffer cgetexpr cgetfile chdir checkpath checktime clist clast close cmap cmapclear cmenu cnext cnewer cnfile cnoremap cnoreabbrev cnoremenu copy colder colorscheme command comclear compiler continue confirm copen cprevious cpfile cquit crewind cscope cstag cunmap cunabbrev cunmenu cwindow delete delmarks debug debuggreedy delcommand delfunction diffupdate diffget diffoff diffpatch diffput diffsplit digraphs display deletel djump dlist doautocmd doautoall deletep drop dsearch dsplit edit earlier echo echoerr echohl echomsg else elseif emenu endif endfor endfunction endtry endwhile enew execute exit exusage file filetype find finally finish first fixdel fold foldclose folddoopen folddoclosed foldopen function global goto grep grepadd gui gvim hardcopy help helpfind helpgrep helptags highlight hide history insert iabbrev iabclear ijump ilist imap imapclear imenu inoremap inoreabbrev inoremenu intro isearch isplit iunmap iunabbrev iunmenu join jumps keepalt keepmarks keepjumps lNext lNfile list laddexpr laddbuffer laddfile last language later lbuffer lcd lchdir lclose lcscope left leftabove lexpr lfile lfirst lgetbuffer lgetexpr lgetfile lgrep lgrepadd lhelpgrep llast llist lmake lmap lmapclear lnext lnewer lnfile lnoremap loadkeymap loadview lockmarks lockvar lolder lopen lprevious lpfile lrewind ltag lunmap luado luafile lvimgrep lvimgrepadd lwindow move mark make mapclear match menu menutranslate messages mkexrc mksession mkspell mkvimrc mkview mode mzscheme mzfile nbclose nbkey nbsart next nmap nmapclear nmenu nnoremap nnoremenu noautocmd noremap nohlsearch noreabbrev noremenu normal number nunmap nunmenu oldfiles open omap omapclear omenu only onoremap onoremenu options ounmap ounmenu ownsyntax print profdel profile promptfind promptrepl pclose pedit perl perldo pop popup ppop preserve previous psearch ptag ptNext ptfirst ptjump ptlast ptnext ptprevious ptrewind ptselect put pwd py3do py3file python pydo pyfile quit quitall qall read recover redo redir redraw redrawstatus registers resize retab return rewind right rightbelow ruby rubydo rubyfile rundo runtime rviminfo substitute sNext sandbox sargument sall saveas sbuffer sbNext sball sbfirst sblast sbmodified sbnext sbprevious sbrewind scriptnames scriptencoding scscope set setfiletype setglobal setlocal sfind sfirst shell simalt sign silent sleep slast smagic smapclear smenu snext sniff snomagic snoremap snoremenu sort source spelldump spellgood spellinfo spellrepall spellundo spellwrong split sprevious srewind stop stag startgreplace startreplace startinsert stopinsert stjump stselect sunhide sunmap sunmenu suspend sview swapname syntax syntime syncbind tNext tabNext tabclose tabedit tabfind tabfirst tablast tabmove tabnext tabonly tabprevious tabrewind tag tcl tcldo tclfile tearoff tfirst throw tjump tlast tmenu tnext topleft tprevious trewind tselect tunmenu undo undojoin undolist unabbreviate unhide unlet unlockvar unmap unmenu unsilent update vglobal version verbose vertical vimgrep vimgrepadd visual viusage view vmap vmapclear vmenu vnew vnoremap vnoremenu vsplit vunmap vunmenu write wNext wall while winsize wincmd winpos wnext wprevious wqall wsverb wundo wviminfo xit xall xmapclear xmap xmenu xnoremap xnoremenu xunmap xunmenu yank",
											built_in: "synIDtrans atan2 range matcharg did_filetype asin feedkeys xor argv complete_check add getwinposx getqflist getwinposy screencol clearmatches empty extend getcmdpos mzeval garbagecollect setreg ceil sqrt diff_hlID inputsecret get getfperm getpid filewritable shiftwidth max sinh isdirectory synID system inputrestore winline atan visualmode inputlist tabpagewinnr round getregtype mapcheck hasmapto histdel argidx findfile sha256 exists toupper getcmdline taglist string getmatches bufnr strftime winwidth bufexists strtrans tabpagebuflist setcmdpos remote_read printf setloclist getpos getline bufwinnr float2nr len getcmdtype diff_filler luaeval resolve libcallnr foldclosedend reverse filter has_key bufname str2float strlen setline getcharmod setbufvar index searchpos shellescape undofile foldclosed setqflist buflisted strchars str2nr virtcol floor remove undotree remote_expr winheight gettabwinvar reltime cursor tabpagenr finddir localtime acos getloclist search tanh matchend rename gettabvar strdisplaywidth type abs py3eval setwinvar tolower wildmenumode log10 spellsuggest bufloaded synconcealed nextnonblank server2client complete settabwinvar executable input wincol setmatches getftype hlID inputsave searchpair or screenrow line settabvar histadd deepcopy strpart remote_peek and eval getftime submatch screenchar winsaveview matchadd mkdir screenattr getfontname libcall reltimestr getfsize winnr invert pow getbufline byte2line soundfold repeat fnameescape tagfiles sin strwidth spellbadword trunc maparg log lispindent hostname setpos globpath remote_foreground getchar synIDattr fnamemodify cscope_connection stridx winbufnr indent min complete_add nr2char searchpairpos inputdialog values matchlist items hlexists strridx browsedir expand fmod pathshorten line2byte argc count getwinvar glob foldtextresult getreg foreground cosh matchdelete has char2nr simplify histget searchdecl iconv winrestcmd pumvisible writefile foldlevel haslocaldir keys cos matchstr foldtext histnr tan tempname getcwd byteidx getbufvar islocked escape eventhandler remote_send serverlist winrestview synstack pyeval prevnonblank readfile cindent filereadable changenr exp"
									},
									illegal: /;/,
									contains: [e.NUMBER_MODE, {
											className: "string",
											begin: "'",
											end: "'",
											illegal: "\\n"
									}, {
											className: "string",
											begin: /"(\\"|\n\\|[^"\n])*"/
									}, e.COMMENT('"', "$"), {
											className: "variable",
											begin: /[bwtglsav]:[\w\d_]+/
									}, {
											begin: [/\b(?:function|function!)/, /\s+/, e.IDENT_RE],
											className: {
													1: "keyword",
													3: "title"
											},
											end: "$",
											relevance: 0,
											contains: [{
													className: "params",
													begin: "\\(",
													end: "\\)"
											}]
									}, {
											className: "symbol",
											begin: /<[\w-]+>/
									}]
							}
					}
			}
			,
			2116: e=>{
					e.exports = function(e) {
							e.regex;
							const t = e.COMMENT(/\(;/, /;\)/);
							return t.contains.push("self"),
							{
									name: "WebAssembly",
									keywords: {
											$pattern: /[\w.]+/,
											keyword: ["anyfunc", "block", "br", "br_if", "br_table", "call", "call_indirect", "data", "drop", "elem", "else", "end", "export", "func", "global.get", "global.set", "local.get", "local.set", "local.tee", "get_global", "get_local", "global", "if", "import", "local", "loop", "memory", "memory.grow", "memory.size", "module", "mut", "nop", "offset", "param", "result", "return", "select", "set_global", "set_local", "start", "table", "tee_local", "then", "type", "unreachable"]
									},
									contains: [e.COMMENT(/;;/, /$/), t, {
											match: [/(?:offset|align)/, /\s*/, /=/],
											className: {
													1: "keyword",
													3: "operator"
											}
									}, {
											className: "variable",
											begin: /\$[\w_]+/
									}, {
											match: /(\((?!;)|\))+/,
											className: "punctuation",
											relevance: 0
									}, {
											begin: [/(?:func|call|call_indirect)/, /\s+/, /\$[^\s)]+/],
											className: {
													1: "keyword",
													3: "title.function"
											}
									}, e.QUOTE_STRING_MODE, {
											match: /(i32|i64|f32|f64)(?!\.)/,
											className: "type"
									}, {
											className: "keyword",
											match: /\b(f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))\b/
									}, {
											className: "number",
											relevance: 0,
											match: /[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/
									}]
							}
					}
			}
			,
			614: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = /[a-zA-Z]\w*/
								, i = ["as", "break", "class", "construct", "continue", "else", "for", "foreign", "if", "import", "in", "is", "return", "static", "var", "while"]
								, r = ["true", "false", "null"]
								, o = ["this", "super"]
								, s = ["-", "~", /\*/, "%", /\.\.\./, /\.\./, /\+/, "<<", ">>", ">=", "<=", "<", ">", /\^/, /!=/, /!/, /\bis\b/, "==", "&&", "&", /\|\|/, /\|/, /\?:/, "="]
								, a = {
									relevance: 0,
									match: t.concat(/\b(?!(if|while|for|else|super)\b)/, n, /(?=\s*[({])/),
									className: "title.function"
							}
								, l = {
									match: t.concat(t.either(t.concat(/\b(?!(if|while|for|else|super)\b)/, n), t.either(...s)), /(?=\s*\([^)]+\)\s*\{)/),
									className: "title.function",
									starts: {
											contains: [{
													begin: /\(/,
													end: /\)/,
													contains: [{
															relevance: 0,
															scope: "params",
															match: n
													}]
											}]
									}
							}
								, c = {
									variants: [{
											match: [/class\s+/, n, /\s+is\s+/, n]
									}, {
											match: [/class\s+/, n]
									}],
									scope: {
											2: "title.class",
											4: "title.class.inherited"
									},
									keywords: i
							}
								, d = {
									relevance: 0,
									match: t.either(...s),
									className: "operator"
							}
								, p = {
									className: "property",
									begin: t.concat(/\./, t.lookahead(n)),
									end: n,
									excludeBegin: !0,
									relevance: 0
							}
								, u = {
									relevance: 0,
									match: t.concat(/\b_/, n),
									scope: "variable"
							}
								, h = {
									relevance: 0,
									match: /\b[A-Z]+[a-z]+([A-Z]+[a-z]+)*/,
									scope: "title.class",
									keywords: {
											_: ["Bool", "Class", "Fiber", "Fn", "List", "Map", "Null", "Num", "Object", "Range", "Sequence", "String", "System"]
									}
							}
								, m = e.C_NUMBER_MODE
								, g = {
									match: [n, /\s*/, /=/, /\s*/, /\(/, n, /\)\s*\{/],
									scope: {
											1: "title.function",
											3: "operator",
											6: "params"
									}
							}
								, _ = e.COMMENT(/\/\*\*/, /\*\//, {
									contains: [{
											match: /@[a-z]+/,
											scope: "doctag"
									}, "self"]
							})
								, f = {
									scope: "subst",
									begin: /%\(/,
									end: /\)/,
									contains: [m, h, a, u, d]
							}
								, y = {
									scope: "string",
									begin: /"/,
									end: /"/,
									contains: [f, {
											scope: "char.escape",
											variants: [{
													match: /\\\\|\\["0%abefnrtv]/
											}, {
													match: /\\x[0-9A-F]{2}/
											}, {
													match: /\\u[0-9A-F]{4}/
											}, {
													match: /\\U[0-9A-F]{8}/
											}]
									}]
							};
							f.contains.push(y);
							const v = [...i, ...o, ...r]
								, b = {
									relevance: 0,
									match: t.concat("\\b(?!", v.join("|"), "\\b)", /[a-zA-Z_]\w*(?:[?!]|\b)/),
									className: "variable"
							};
							return {
									name: "Wren",
									keywords: {
											keyword: i,
											"variable.language": o,
											literal: r
									},
									contains: [{
											scope: "comment",
											variants: [{
													begin: [/#!?/, /[A-Za-z_]+(?=\()/],
													beginScope: {},
													keywords: {
															literal: r
													},
													contains: [],
													end: /\)/
											}, {
													begin: [/#!?/, /[A-Za-z_]+/],
													beginScope: {},
													end: /$/
											}]
									}, m, y, {
											className: "string",
											begin: /"""/,
											end: /"""/
									}, _, e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, h, c, g, l, a, d, u, p, b]
							}
					}
			}
			,
			537: e=>{
					e.exports = function(e) {
							return {
									name: "Intel x86 Assembly",
									case_insensitive: !0,
									keywords: {
											$pattern: "[.%]?" + e.IDENT_RE,
											keyword: "lock rep repe repz repne repnz xaquire xrelease bnd nobnd aaa aad aam aas adc add and arpl bb0_reset bb1_reset bound bsf bsr bswap bt btc btr bts call cbw cdq cdqe clc cld cli clts cmc cmp cmpsb cmpsd cmpsq cmpsw cmpxchg cmpxchg486 cmpxchg8b cmpxchg16b cpuid cpu_read cpu_write cqo cwd cwde daa das dec div dmint emms enter equ f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcmovb fcmovbe fcmove fcmovnb fcmovnbe fcmovne fcmovnu fcmovu fcom fcomi fcomip fcomp fcompp fcos fdecstp fdisi fdiv fdivp fdivr fdivrp femms feni ffree ffreep fiadd ficom ficomp fidiv fidivr fild fimul fincstp finit fist fistp fisttp fisub fisubr fld fld1 fldcw fldenv fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul fmulp fnclex fndisi fneni fninit fnop fnsave fnstcw fnstenv fnstsw fpatan fprem fprem1 fptan frndint frstor fsave fscale fsetpm fsin fsincos fsqrt fst fstcw fstenv fstp fstsw fsub fsubp fsubr fsubrp ftst fucom fucomi fucomip fucomp fucompp fxam fxch fxtract fyl2x fyl2xp1 hlt ibts icebp idiv imul in inc incbin insb insd insw int int01 int1 int03 int3 into invd invpcid invlpg invlpga iret iretd iretq iretw jcxz jecxz jrcxz jmp jmpe lahf lar lds lea leave les lfence lfs lgdt lgs lidt lldt lmsw loadall loadall286 lodsb lodsd lodsq lodsw loop loope loopne loopnz loopz lsl lss ltr mfence monitor mov movd movq movsb movsd movsq movsw movsx movsxd movzx mul mwait neg nop not or out outsb outsd outsw packssdw packsswb packuswb paddb paddd paddsb paddsiw paddsw paddusb paddusw paddw pand pandn pause paveb pavgusb pcmpeqb pcmpeqd pcmpeqw pcmpgtb pcmpgtd pcmpgtw pdistib pf2id pfacc pfadd pfcmpeq pfcmpge pfcmpgt pfmax pfmin pfmul pfrcp pfrcpit1 pfrcpit2 pfrsqit1 pfrsqrt pfsub pfsubr pi2fd pmachriw pmaddwd pmagw pmulhriw pmulhrwa pmulhrwc pmulhw pmullw pmvgezb pmvlzb pmvnzb pmvzb pop popa popad popaw popf popfd popfq popfw por prefetch prefetchw pslld psllq psllw psrad psraw psrld psrlq psrlw psubb psubd psubsb psubsiw psubsw psubusb psubusw psubw punpckhbw punpckhdq punpckhwd punpcklbw punpckldq punpcklwd push pusha pushad pushaw pushf pushfd pushfq pushfw pxor rcl rcr rdshr rdmsr rdpmc rdtsc rdtscp ret retf retn rol ror rdm rsdc rsldt rsm rsts sahf sal salc sar sbb scasb scasd scasq scasw sfence sgdt shl shld shr shrd sidt sldt skinit smi smint smintold smsw stc std sti stosb stosd stosq stosw str sub svdc svldt svts swapgs syscall sysenter sysexit sysret test ud0 ud1 ud2b ud2 ud2a umov verr verw fwait wbinvd wrshr wrmsr xadd xbts xchg xlatb xlat xor cmove cmovz cmovne cmovnz cmova cmovnbe cmovae cmovnb cmovb cmovnae cmovbe cmovna cmovg cmovnle cmovge cmovnl cmovl cmovnge cmovle cmovng cmovc cmovnc cmovo cmovno cmovs cmovns cmovp cmovpe cmovnp cmovpo je jz jne jnz ja jnbe jae jnb jb jnae jbe jna jg jnle jge jnl jl jnge jle jng jc jnc jo jno js jns jpo jnp jpe jp sete setz setne setnz seta setnbe setae setnb setnc setb setnae setcset setbe setna setg setnle setge setnl setl setnge setle setng sets setns seto setno setpe setp setpo setnp addps addss andnps andps cmpeqps cmpeqss cmpleps cmpless cmpltps cmpltss cmpneqps cmpneqss cmpnleps cmpnless cmpnltps cmpnltss cmpordps cmpordss cmpunordps cmpunordss cmpps cmpss comiss cvtpi2ps cvtps2pi cvtsi2ss cvtss2si cvttps2pi cvttss2si divps divss ldmxcsr maxps maxss minps minss movaps movhps movlhps movlps movhlps movmskps movntps movss movups mulps mulss orps rcpps rcpss rsqrtps rsqrtss shufps sqrtps sqrtss stmxcsr subps subss ucomiss unpckhps unpcklps xorps fxrstor fxrstor64 fxsave fxsave64 xgetbv xsetbv xsave xsave64 xsaveopt xsaveopt64 xrstor xrstor64 prefetchnta prefetcht0 prefetcht1 prefetcht2 maskmovq movntq pavgb pavgw pextrw pinsrw pmaxsw pmaxub pminsw pminub pmovmskb pmulhuw psadbw pshufw pf2iw pfnacc pfpnacc pi2fw pswapd maskmovdqu clflush movntdq movnti movntpd movdqa movdqu movdq2q movq2dq paddq pmuludq pshufd pshufhw pshuflw pslldq psrldq psubq punpckhqdq punpcklqdq addpd addsd andnpd andpd cmpeqpd cmpeqsd cmplepd cmplesd cmpltpd cmpltsd cmpneqpd cmpneqsd cmpnlepd cmpnlesd cmpnltpd cmpnltsd cmpordpd cmpordsd cmpunordpd cmpunordsd cmppd comisd cvtdq2pd cvtdq2ps cvtpd2dq cvtpd2pi cvtpd2ps cvtpi2pd cvtps2dq cvtps2pd cvtsd2si cvtsd2ss cvtsi2sd cvtss2sd cvttpd2pi cvttpd2dq cvttps2dq cvttsd2si divpd divsd maxpd maxsd minpd minsd movapd movhpd movlpd movmskpd movupd mulpd mulsd orpd shufpd sqrtpd sqrtsd subpd subsd ucomisd unpckhpd unpcklpd xorpd addsubpd addsubps haddpd haddps hsubpd hsubps lddqu movddup movshdup movsldup clgi stgi vmcall vmclear vmfunc vmlaunch vmload vmmcall vmptrld vmptrst vmread vmresume vmrun vmsave vmwrite vmxoff vmxon invept invvpid pabsb pabsw pabsd palignr phaddw phaddd phaddsw phsubw phsubd phsubsw pmaddubsw pmulhrsw pshufb psignb psignw psignd extrq insertq movntsd movntss lzcnt blendpd blendps blendvpd blendvps dppd dpps extractps insertps movntdqa mpsadbw packusdw pblendvb pblendw pcmpeqq pextrb pextrd pextrq phminposuw pinsrb pinsrd pinsrq pmaxsb pmaxsd pmaxud pmaxuw pminsb pminsd pminud pminuw pmovsxbw pmovsxbd pmovsxbq pmovsxwd pmovsxwq pmovsxdq pmovzxbw pmovzxbd pmovzxbq pmovzxwd pmovzxwq pmovzxdq pmuldq pmulld ptest roundpd roundps roundsd roundss crc32 pcmpestri pcmpestrm pcmpistri pcmpistrm pcmpgtq popcnt getsec pfrcpv pfrsqrtv movbe aesenc aesenclast aesdec aesdeclast aesimc aeskeygenassist vaesenc vaesenclast vaesdec vaesdeclast vaesimc vaeskeygenassist vaddpd vaddps vaddsd vaddss vaddsubpd vaddsubps vandpd vandps vandnpd vandnps vblendpd vblendps vblendvpd vblendvps vbroadcastss vbroadcastsd vbroadcastf128 vcmpeq_ospd vcmpeqpd vcmplt_ospd vcmpltpd vcmple_ospd vcmplepd vcmpunord_qpd vcmpunordpd vcmpneq_uqpd vcmpneqpd vcmpnlt_uspd vcmpnltpd vcmpnle_uspd vcmpnlepd vcmpord_qpd vcmpordpd vcmpeq_uqpd vcmpnge_uspd vcmpngepd vcmpngt_uspd vcmpngtpd vcmpfalse_oqpd vcmpfalsepd vcmpneq_oqpd vcmpge_ospd vcmpgepd vcmpgt_ospd vcmpgtpd vcmptrue_uqpd vcmptruepd vcmplt_oqpd vcmple_oqpd vcmpunord_spd vcmpneq_uspd vcmpnlt_uqpd vcmpnle_uqpd vcmpord_spd vcmpeq_uspd vcmpnge_uqpd vcmpngt_uqpd vcmpfalse_ospd vcmpneq_ospd vcmpge_oqpd vcmpgt_oqpd vcmptrue_uspd vcmppd vcmpeq_osps vcmpeqps vcmplt_osps vcmpltps vcmple_osps vcmpleps vcmpunord_qps vcmpunordps vcmpneq_uqps vcmpneqps vcmpnlt_usps vcmpnltps vcmpnle_usps vcmpnleps vcmpord_qps vcmpordps vcmpeq_uqps vcmpnge_usps vcmpngeps vcmpngt_usps vcmpngtps vcmpfalse_oqps vcmpfalseps vcmpneq_oqps vcmpge_osps vcmpgeps vcmpgt_osps vcmpgtps vcmptrue_uqps vcmptrueps vcmplt_oqps vcmple_oqps vcmpunord_sps vcmpneq_usps vcmpnlt_uqps vcmpnle_uqps vcmpord_sps vcmpeq_usps vcmpnge_uqps vcmpngt_uqps vcmpfalse_osps vcmpneq_osps vcmpge_oqps vcmpgt_oqps vcmptrue_usps vcmpps vcmpeq_ossd vcmpeqsd vcmplt_ossd vcmpltsd vcmple_ossd vcmplesd vcmpunord_qsd vcmpunordsd vcmpneq_uqsd vcmpneqsd vcmpnlt_ussd vcmpnltsd vcmpnle_ussd vcmpnlesd vcmpord_qsd vcmpordsd vcmpeq_uqsd vcmpnge_ussd vcmpngesd vcmpngt_ussd vcmpngtsd vcmpfalse_oqsd vcmpfalsesd vcmpneq_oqsd vcmpge_ossd vcmpgesd vcmpgt_ossd vcmpgtsd vcmptrue_uqsd vcmptruesd vcmplt_oqsd vcmple_oqsd vcmpunord_ssd vcmpneq_ussd vcmpnlt_uqsd vcmpnle_uqsd vcmpord_ssd vcmpeq_ussd vcmpnge_uqsd vcmpngt_uqsd vcmpfalse_ossd vcmpneq_ossd vcmpge_oqsd vcmpgt_oqsd vcmptrue_ussd vcmpsd vcmpeq_osss vcmpeqss vcmplt_osss vcmpltss vcmple_osss vcmpless vcmpunord_qss vcmpunordss vcmpneq_uqss vcmpneqss vcmpnlt_usss vcmpnltss vcmpnle_usss vcmpnless vcmpord_qss vcmpordss vcmpeq_uqss vcmpnge_usss vcmpngess vcmpngt_usss vcmpngtss vcmpfalse_oqss vcmpfalsess vcmpneq_oqss vcmpge_osss vcmpgess vcmpgt_osss vcmpgtss vcmptrue_uqss vcmptruess vcmplt_oqss vcmple_oqss vcmpunord_sss vcmpneq_usss vcmpnlt_uqss vcmpnle_uqss vcmpord_sss vcmpeq_usss vcmpnge_uqss vcmpngt_uqss vcmpfalse_osss vcmpneq_osss vcmpge_oqss vcmpgt_oqss vcmptrue_usss vcmpss vcomisd vcomiss vcvtdq2pd vcvtdq2ps vcvtpd2dq vcvtpd2ps vcvtps2dq vcvtps2pd vcvtsd2si vcvtsd2ss vcvtsi2sd vcvtsi2ss vcvtss2sd vcvtss2si vcvttpd2dq vcvttps2dq vcvttsd2si vcvttss2si vdivpd vdivps vdivsd vdivss vdppd vdpps vextractf128 vextractps vhaddpd vhaddps vhsubpd vhsubps vinsertf128 vinsertps vlddqu vldqqu vldmxcsr vmaskmovdqu vmaskmovps vmaskmovpd vmaxpd vmaxps vmaxsd vmaxss vminpd vminps vminsd vminss vmovapd vmovaps vmovd vmovq vmovddup vmovdqa vmovqqa vmovdqu vmovqqu vmovhlps vmovhpd vmovhps vmovlhps vmovlpd vmovlps vmovmskpd vmovmskps vmovntdq vmovntqq vmovntdqa vmovntpd vmovntps vmovsd vmovshdup vmovsldup vmovss vmovupd vmovups vmpsadbw vmulpd vmulps vmulsd vmulss vorpd vorps vpabsb vpabsw vpabsd vpacksswb vpackssdw vpackuswb vpackusdw vpaddb vpaddw vpaddd vpaddq vpaddsb vpaddsw vpaddusb vpaddusw vpalignr vpand vpandn vpavgb vpavgw vpblendvb vpblendw vpcmpestri vpcmpestrm vpcmpistri vpcmpistrm vpcmpeqb vpcmpeqw vpcmpeqd vpcmpeqq vpcmpgtb vpcmpgtw vpcmpgtd vpcmpgtq vpermilpd vpermilps vperm2f128 vpextrb vpextrw vpextrd vpextrq vphaddw vphaddd vphaddsw vphminposuw vphsubw vphsubd vphsubsw vpinsrb vpinsrw vpinsrd vpinsrq vpmaddwd vpmaddubsw vpmaxsb vpmaxsw vpmaxsd vpmaxub vpmaxuw vpmaxud vpminsb vpminsw vpminsd vpminub vpminuw vpminud vpmovmskb vpmovsxbw vpmovsxbd vpmovsxbq vpmovsxwd vpmovsxwq vpmovsxdq vpmovzxbw vpmovzxbd vpmovzxbq vpmovzxwd vpmovzxwq vpmovzxdq vpmulhuw vpmulhrsw vpmulhw vpmullw vpmulld vpmuludq vpmuldq vpor vpsadbw vpshufb vpshufd vpshufhw vpshuflw vpsignb vpsignw vpsignd vpslldq vpsrldq vpsllw vpslld vpsllq vpsraw vpsrad vpsrlw vpsrld vpsrlq vptest vpsubb vpsubw vpsubd vpsubq vpsubsb vpsubsw vpsubusb vpsubusw vpunpckhbw vpunpckhwd vpunpckhdq vpunpckhqdq vpunpcklbw vpunpcklwd vpunpckldq vpunpcklqdq vpxor vrcpps vrcpss vrsqrtps vrsqrtss vroundpd vroundps vroundsd vroundss vshufpd vshufps vsqrtpd vsqrtps vsqrtsd vsqrtss vstmxcsr vsubpd vsubps vsubsd vsubss vtestps vtestpd vucomisd vucomiss vunpckhpd vunpckhps vunpcklpd vunpcklps vxorpd vxorps vzeroall vzeroupper pclmullqlqdq pclmulhqlqdq pclmullqhqdq pclmulhqhqdq pclmulqdq vpclmullqlqdq vpclmulhqlqdq vpclmullqhqdq vpclmulhqhqdq vpclmulqdq vfmadd132ps vfmadd132pd vfmadd312ps vfmadd312pd vfmadd213ps vfmadd213pd vfmadd123ps vfmadd123pd vfmadd231ps vfmadd231pd vfmadd321ps vfmadd321pd vfmaddsub132ps vfmaddsub132pd vfmaddsub312ps vfmaddsub312pd vfmaddsub213ps vfmaddsub213pd vfmaddsub123ps vfmaddsub123pd vfmaddsub231ps vfmaddsub231pd vfmaddsub321ps vfmaddsub321pd vfmsub132ps vfmsub132pd vfmsub312ps vfmsub312pd vfmsub213ps vfmsub213pd vfmsub123ps vfmsub123pd vfmsub231ps vfmsub231pd vfmsub321ps vfmsub321pd vfmsubadd132ps vfmsubadd132pd vfmsubadd312ps vfmsubadd312pd vfmsubadd213ps vfmsubadd213pd vfmsubadd123ps vfmsubadd123pd vfmsubadd231ps vfmsubadd231pd vfmsubadd321ps vfmsubadd321pd vfnmadd132ps vfnmadd132pd vfnmadd312ps vfnmadd312pd vfnmadd213ps vfnmadd213pd vfnmadd123ps vfnmadd123pd vfnmadd231ps vfnmadd231pd vfnmadd321ps vfnmadd321pd vfnmsub132ps vfnmsub132pd vfnmsub312ps vfnmsub312pd vfnmsub213ps vfnmsub213pd vfnmsub123ps vfnmsub123pd vfnmsub231ps vfnmsub231pd vfnmsub321ps vfnmsub321pd vfmadd132ss vfmadd132sd vfmadd312ss vfmadd312sd vfmadd213ss vfmadd213sd vfmadd123ss vfmadd123sd vfmadd231ss vfmadd231sd vfmadd321ss vfmadd321sd vfmsub132ss vfmsub132sd vfmsub312ss vfmsub312sd vfmsub213ss vfmsub213sd vfmsub123ss vfmsub123sd vfmsub231ss vfmsub231sd vfmsub321ss vfmsub321sd vfnmadd132ss vfnmadd132sd vfnmadd312ss vfnmadd312sd vfnmadd213ss vfnmadd213sd vfnmadd123ss vfnmadd123sd vfnmadd231ss vfnmadd231sd vfnmadd321ss vfnmadd321sd vfnmsub132ss vfnmsub132sd vfnmsub312ss vfnmsub312sd vfnmsub213ss vfnmsub213sd vfnmsub123ss vfnmsub123sd vfnmsub231ss vfnmsub231sd vfnmsub321ss vfnmsub321sd rdfsbase rdgsbase rdrand wrfsbase wrgsbase vcvtph2ps vcvtps2ph adcx adox rdseed clac stac xstore xcryptecb xcryptcbc xcryptctr xcryptcfb xcryptofb montmul xsha1 xsha256 llwpcb slwpcb lwpval lwpins vfmaddpd vfmaddps vfmaddsd vfmaddss vfmaddsubpd vfmaddsubps vfmsubaddpd vfmsubaddps vfmsubpd vfmsubps vfmsubsd vfmsubss vfnmaddpd vfnmaddps vfnmaddsd vfnmaddss vfnmsubpd vfnmsubps vfnmsubsd vfnmsubss vfrczpd vfrczps vfrczsd vfrczss vpcmov vpcomb vpcomd vpcomq vpcomub vpcomud vpcomuq vpcomuw vpcomw vphaddbd vphaddbq vphaddbw vphadddq vphaddubd vphaddubq vphaddubw vphaddudq vphadduwd vphadduwq vphaddwd vphaddwq vphsubbw vphsubdq vphsubwd vpmacsdd vpmacsdqh vpmacsdql vpmacssdd vpmacssdqh vpmacssdql vpmacsswd vpmacssww vpmacswd vpmacsww vpmadcsswd vpmadcswd vpperm vprotb vprotd vprotq vprotw vpshab vpshad vpshaq vpshaw vpshlb vpshld vpshlq vpshlw vbroadcasti128 vpblendd vpbroadcastb vpbroadcastw vpbroadcastd vpbroadcastq vpermd vpermpd vpermps vpermq vperm2i128 vextracti128 vinserti128 vpmaskmovd vpmaskmovq vpsllvd vpsllvq vpsravd vpsrlvd vpsrlvq vgatherdpd vgatherqpd vgatherdps vgatherqps vpgatherdd vpgatherqd vpgatherdq vpgatherqq xabort xbegin xend xtest andn bextr blci blcic blsi blsic blcfill blsfill blcmsk blsmsk blsr blcs bzhi mulx pdep pext rorx sarx shlx shrx tzcnt tzmsk t1mskc valignd valignq vblendmpd vblendmps vbroadcastf32x4 vbroadcastf64x4 vbroadcasti32x4 vbroadcasti64x4 vcompresspd vcompressps vcvtpd2udq vcvtps2udq vcvtsd2usi vcvtss2usi vcvttpd2udq vcvttps2udq vcvttsd2usi vcvttss2usi vcvtudq2pd vcvtudq2ps vcvtusi2sd vcvtusi2ss vexpandpd vexpandps vextractf32x4 vextractf64x4 vextracti32x4 vextracti64x4 vfixupimmpd vfixupimmps vfixupimmsd vfixupimmss vgetexppd vgetexpps vgetexpsd vgetexpss vgetmantpd vgetmantps vgetmantsd vgetmantss vinsertf32x4 vinsertf64x4 vinserti32x4 vinserti64x4 vmovdqa32 vmovdqa64 vmovdqu32 vmovdqu64 vpabsq vpandd vpandnd vpandnq vpandq vpblendmd vpblendmq vpcmpltd vpcmpled vpcmpneqd vpcmpnltd vpcmpnled vpcmpd vpcmpltq vpcmpleq vpcmpneqq vpcmpnltq vpcmpnleq vpcmpq vpcmpequd vpcmpltud vpcmpleud vpcmpnequd vpcmpnltud vpcmpnleud vpcmpud vpcmpequq vpcmpltuq vpcmpleuq vpcmpnequq vpcmpnltuq vpcmpnleuq vpcmpuq vpcompressd vpcompressq vpermi2d vpermi2pd vpermi2ps vpermi2q vpermt2d vpermt2pd vpermt2ps vpermt2q vpexpandd vpexpandq vpmaxsq vpmaxuq vpminsq vpminuq vpmovdb vpmovdw vpmovqb vpmovqd vpmovqw vpmovsdb vpmovsdw vpmovsqb vpmovsqd vpmovsqw vpmovusdb vpmovusdw vpmovusqb vpmovusqd vpmovusqw vpord vporq vprold vprolq vprolvd vprolvq vprord vprorq vprorvd vprorvq vpscatterdd vpscatterdq vpscatterqd vpscatterqq vpsraq vpsravq vpternlogd vpternlogq vptestmd vptestmq vptestnmd vptestnmq vpxord vpxorq vrcp14pd vrcp14ps vrcp14sd vrcp14ss vrndscalepd vrndscaleps vrndscalesd vrndscaless vrsqrt14pd vrsqrt14ps vrsqrt14sd vrsqrt14ss vscalefpd vscalefps vscalefsd vscalefss vscatterdpd vscatterdps vscatterqpd vscatterqps vshuff32x4 vshuff64x2 vshufi32x4 vshufi64x2 kandnw kandw kmovw knotw kortestw korw kshiftlw kshiftrw kunpckbw kxnorw kxorw vpbroadcastmb2q vpbroadcastmw2d vpconflictd vpconflictq vplzcntd vplzcntq vexp2pd vexp2ps vrcp28pd vrcp28ps vrcp28sd vrcp28ss vrsqrt28pd vrsqrt28ps vrsqrt28sd vrsqrt28ss vgatherpf0dpd vgatherpf0dps vgatherpf0qpd vgatherpf0qps vgatherpf1dpd vgatherpf1dps vgatherpf1qpd vgatherpf1qps vscatterpf0dpd vscatterpf0dps vscatterpf0qpd vscatterpf0qps vscatterpf1dpd vscatterpf1dps vscatterpf1qpd vscatterpf1qps prefetchwt1 bndmk bndcl bndcu bndcn bndmov bndldx bndstx sha1rnds4 sha1nexte sha1msg1 sha1msg2 sha256rnds2 sha256msg1 sha256msg2 hint_nop0 hint_nop1 hint_nop2 hint_nop3 hint_nop4 hint_nop5 hint_nop6 hint_nop7 hint_nop8 hint_nop9 hint_nop10 hint_nop11 hint_nop12 hint_nop13 hint_nop14 hint_nop15 hint_nop16 hint_nop17 hint_nop18 hint_nop19 hint_nop20 hint_nop21 hint_nop22 hint_nop23 hint_nop24 hint_nop25 hint_nop26 hint_nop27 hint_nop28 hint_nop29 hint_nop30 hint_nop31 hint_nop32 hint_nop33 hint_nop34 hint_nop35 hint_nop36 hint_nop37 hint_nop38 hint_nop39 hint_nop40 hint_nop41 hint_nop42 hint_nop43 hint_nop44 hint_nop45 hint_nop46 hint_nop47 hint_nop48 hint_nop49 hint_nop50 hint_nop51 hint_nop52 hint_nop53 hint_nop54 hint_nop55 hint_nop56 hint_nop57 hint_nop58 hint_nop59 hint_nop60 hint_nop61 hint_nop62 hint_nop63",
											built_in: "ip eip rip al ah bl bh cl ch dl dh sil dil bpl spl r8b r9b r10b r11b r12b r13b r14b r15b ax bx cx dx si di bp sp r8w r9w r10w r11w r12w r13w r14w r15w eax ebx ecx edx esi edi ebp esp eip r8d r9d r10d r11d r12d r13d r14d r15d rax rbx rcx rdx rsi rdi rbp rsp r8 r9 r10 r11 r12 r13 r14 r15 cs ds es fs gs ss st st0 st1 st2 st3 st4 st5 st6 st7 mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 xmm0  xmm1  xmm2  xmm3  xmm4  xmm5  xmm6  xmm7  xmm8  xmm9 xmm10  xmm11 xmm12 xmm13 xmm14 xmm15 xmm16 xmm17 xmm18 xmm19 xmm20 xmm21 xmm22 xmm23 xmm24 xmm25 xmm26 xmm27 xmm28 xmm29 xmm30 xmm31 ymm0  ymm1  ymm2  ymm3  ymm4  ymm5  ymm6  ymm7  ymm8  ymm9 ymm10  ymm11 ymm12 ymm13 ymm14 ymm15 ymm16 ymm17 ymm18 ymm19 ymm20 ymm21 ymm22 ymm23 ymm24 ymm25 ymm26 ymm27 ymm28 ymm29 ymm30 ymm31 zmm0  zmm1  zmm2  zmm3  zmm4  zmm5  zmm6  zmm7  zmm8  zmm9 zmm10  zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm30 zmm31 k0 k1 k2 k3 k4 k5 k6 k7 bnd0 bnd1 bnd2 bnd3 cr0 cr1 cr2 cr3 cr4 cr8 dr0 dr1 dr2 dr3 dr8 tr3 tr4 tr5 tr6 tr7 r0 r1 r2 r3 r4 r5 r6 r7 r0b r1b r2b r3b r4b r5b r6b r7b r0w r1w r2w r3w r4w r5w r6w r7w r0d r1d r2d r3d r4d r5d r6d r7d r0h r1h r2h r3h r0l r1l r2l r3l r4l r5l r6l r7l r8l r9l r10l r11l r12l r13l r14l r15l db dw dd dq dt ddq do dy dz resb resw resd resq rest resdq reso resy resz incbin equ times byte word dword qword nosplit rel abs seg wrt strict near far a32 ptr",
											meta: "%define %xdefine %+ %undef %defstr %deftok %assign %strcat %strlen %substr %rotate %elif %else %endif %if %ifmacro %ifctx %ifidn %ifidni %ifid %ifnum %ifstr %iftoken %ifempty %ifenv %error %warning %fatal %rep %endrep %include %push %pop %repl %pathsearch %depend %use %arg %stacksize %local %line %comment %endcomment .nolist __FILE__ __LINE__ __SECT__  __BITS__ __OUTPUT_FORMAT__ __DATE__ __TIME__ __DATE_NUM__ __TIME_NUM__ __UTC_DATE__ __UTC_TIME__ __UTC_DATE_NUM__ __UTC_TIME_NUM__  __PASS__ struc endstruc istruc at iend align alignb sectalign daz nodaz up down zero default option assume public bits use16 use32 use64 default section segment absolute extern global common cpu float __utf16__ __utf16le__ __utf16be__ __utf32__ __utf32le__ __utf32be__ __float8__ __float16__ __float32__ __float64__ __float80m__ __float80e__ __float128l__ __float128h__ __Infinity__ __QNaN__ __SNaN__ Inf NaN QNaN SNaN float8 float16 float32 float64 float80m float80e float128l float128h __FLOAT_DAZ__ __FLOAT_ROUND__ __FLOAT__"
									},
									contains: [e.COMMENT(";", "$", {
											relevance: 0
									}), {
											className: "number",
											variants: [{
													begin: "\\b(?:([0-9][0-9_]*)?\\.[0-9_]*(?:[eE][+-]?[0-9_]+)?|(0[Xx])?[0-9][0-9_]*(\\.[0-9_]*)?(?:[pP](?:[+-]?[0-9_]+)?)?)\\b",
													relevance: 0
											}, {
													begin: "\\$[0-9][0-9A-Fa-f]*",
													relevance: 0
											}, {
													begin: "\\b(?:[0-9A-Fa-f][0-9A-Fa-f_]*[Hh]|[0-9][0-9_]*[DdTt]?|[0-7][0-7_]*[QqOo]|[0-1][0-1_]*[BbYy])\\b"
											}, {
													begin: "\\b(?:0[Xx][0-9A-Fa-f_]+|0[DdTt][0-9_]+|0[QqOo][0-7_]+|0[BbYy][0-1_]+)\\b"
											}]
									}, e.QUOTE_STRING_MODE, {
											className: "string",
											variants: [{
													begin: "'",
													end: "[^\\\\]'"
											}, {
													begin: "`",
													end: "[^\\\\]`"
											}],
											relevance: 0
									}, {
											className: "symbol",
											variants: [{
													begin: "^\\s*[A-Za-z._?][A-Za-z0-9_$#@~.?]*(:|\\s+label)"
											}, {
													begin: "^\\s*%%[A-Za-z0-9_$#@~.?]*:"
											}],
											relevance: 0
									}, {
											className: "subst",
											begin: "%[0-9]+",
											relevance: 0
									}, {
											className: "subst",
											begin: "%!S+",
											relevance: 0
									}, {
											className: "meta",
											begin: /^\s*\.[\w_-]+/
									}]
							}
					}
			}
			,
			1136: e=>{
					e.exports = function(e) {
							const t = {
									$pattern: /[a-zA-Z][a-zA-Z0-9_?]*/,
									keyword: ["if", "then", "else", "do", "while", "until", "for", "loop", "import", "with", "is", "as", "where", "when", "by", "data", "constant", "integer", "real", "text", "name", "boolean", "symbol", "infix", "prefix", "postfix", "block", "tree"],
									literal: ["true", "false", "nil"],
									built_in: ["in", "mod", "rem", "and", "or", "xor", "not", "abs", "sign", "floor", "ceil", "sqrt", "sin", "cos", "tan", "asin", "acos", "atan", "exp", "expm1", "log", "log2", "log10", "log1p", "pi", "at", "text_length", "text_range", "text_find", "text_replace", "contains", "page", "slide", "basic_slide", "title_slide", "title", "subtitle", "fade_in", "fade_out", "fade_at", "clear_color", "color", "line_color", "line_width", "texture_wrap", "texture_transform", "texture", "scale_?x", "scale_?y", "scale_?z?", "translate_?x", "translate_?y", "translate_?z?", "rotate_?x", "rotate_?y", "rotate_?z?", "rectangle", "circle", "ellipse", "sphere", "path", "line_to", "move_to", "quad_to", "curve_to", "theme", "background", "contents", "locally", "time", "mouse_?x", "mouse_?y", "mouse_buttons"].concat(["ObjectLoader", "Animate", "MovieCredits", "Slides", "Filters", "Shading", "Materials", "LensFlare", "Mapping", "VLCAudioVideo", "StereoDecoder", "PointCloud", "NetworkAccess", "RemoteControl", "RegExp", "ChromaKey", "Snowfall", "NodeJS", "Speech", "Charts"])
							}
								, n = {
									className: "string",
									begin: '"',
									end: '"',
									illegal: "\\n"
							}
								, i = {
									beginKeywords: "import",
									end: "$",
									keywords: t,
									contains: [n]
							}
								, r = {
									className: "function",
									begin: /[a-z][^\n]*->/,
									returnBegin: !0,
									end: /->/,
									contains: [e.inherit(e.TITLE_MODE, {
											starts: {
													endsWithParent: !0,
													keywords: t
											}
									})]
							};
							return {
									name: "XL",
									aliases: ["tao"],
									keywords: t,
									contains: [e.C_LINE_COMMENT_MODE, e.C_BLOCK_COMMENT_MODE, n, {
											className: "string",
											begin: "'",
											end: "'",
											illegal: "\\n"
									}, {
											className: "string",
											begin: "<<",
											end: ">>"
									}, r, i, {
											className: "number",
											begin: "[0-9]+#[0-9A-Z_]+(\\.[0-9-A-Z_]+)?#?([Ee][+-]?[0-9]+)?"
									}, e.NUMBER_MODE]
							}
					}
			}
			,
			4980: e=>{
					e.exports = function(e) {
							const t = e.regex
								, n = t.concat(/[\p{L}_]/u, t.optional(/[\p{L}0-9_.-]*:/u), /[\p{L}0-9_.-]*/u)
								, i = {
									className: "symbol",
									begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/
							}
								, r = {
									begin: /\s/,
									contains: [{
											className: "keyword",
											begin: /#?[a-z_][a-z1-9_-]+/,
											illegal: /\n/
									}]
							}
								, o = e.inherit(r, {
									begin: /\(/,
									end: /\)/
							})
								, s = e.inherit(e.APOS_STRING_MODE, {
									className: "string"
							})
								, a = e.inherit(e.QUOTE_STRING_MODE, {
									className: "string"
							})
								, l = {
									endsWithParent: !0,
									illegal: /</,
									relevance: 0,
									contains: [{
											className: "attr",
											begin: /[\p{L}0-9._:-]+/u,
											relevance: 0
									}, {
											begin: /=\s*/,
											relevance: 0,
											contains: [{
													className: "string",
													endsParent: !0,
													variants: [{
															begin: /"/,
															end: /"/,
															contains: [i]
													}, {
															begin: /'/,
															end: /'/,
															contains: [i]
													}, {
															begin: /[^\s"'=<>`]+/
													}]
											}]
									}]
							};
							return {
									name: "HTML, XML",
									aliases: ["html", "xhtml", "rss", "atom", "xjb", "xsd", "xsl", "plist", "wsf", "svg"],
									case_insensitive: !0,
									unicodeRegex: !0,
									contains: [{
											className: "meta",
											begin: /<![a-z]/,
											end: />/,
											relevance: 10,
											contains: [r, a, s, o, {
													begin: /\[/,
													end: /\]/,
													contains: [{
															className: "meta",
															begin: /<![a-z]/,
															end: />/,
															contains: [r, o, a, s]
													}]
											}]
									}, e.COMMENT(/<!--/, /-->/, {
											relevance: 10
									}), {
											begin: /<!\[CDATA\[/,
											end: /\]\]>/,
											relevance: 10
									}, i, {
											className: "meta",
											end: /\?>/,
											variants: [{
													begin: /<\?xml/,
													relevance: 10,
													contains: [a]
											}, {
													begin: /<\?[a-z][a-z0-9]+/
											}]
									}, {
											className: "tag",
											begin: /<style(?=\s|>)/,
											end: />/,
											keywords: {
													name: "style"
											},
											contains: [l],
											starts: {
													end: /<\/style>/,
													returnEnd: !0,
													subLanguage: ["css", "xml"]
											}
									}, {
											className: "tag",
											begin: /<script(?=\s|>)/,
											end: />/,
											keywords: {
													name: "script"
											},
											contains: [l],
											starts: {
													end: /<\/script>/,
													returnEnd: !0,
													subLanguage: ["javascript", "handlebars", "xml"]
											}
									}, {
											className: "tag",
											begin: /<>|<\/>/
									}, {
											className: "tag",
											begin: t.concat(/</, t.lookahead(t.concat(n, t.either(/\/>/, />/, /\s/)))),
											end: /\/?>/,
											contains: [{
													className: "name",
													begin: n,
													relevance: 0,
													starts: l
											}]
									}, {
											className: "tag",
											begin: t.concat(/<\//, t.lookahead(t.concat(n, />/))),
											contains: [{
													className: "name",
													begin: n,
													relevance: 0
											}, {
													begin: />/,
													relevance: 0,
													endsParent: !0
											}]
									}]
							}
					}
			}
			,
			7942: e=>{
					e.exports = function(e) {
							return {
									name: "XQuery",
									aliases: ["xpath", "xq"],
									case_insensitive: !1,
									illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,
									keywords: {
											$pattern: /[a-zA-Z$][a-zA-Z0-9_:-]*/,
											keyword: ["module", "schema", "namespace", "boundary-space", "preserve", "no-preserve", "strip", "default", "collation", "base-uri", "ordering", "context", "decimal-format", "decimal-separator", "copy-namespaces", "empty-sequence", "except", "exponent-separator", "external", "grouping-separator", "inherit", "no-inherit", "lax", "minus-sign", "per-mille", "percent", "schema-attribute", "schema-element", "strict", "unordered", "zero-digit", "declare", "import", "option", "function", "validate", "variable", "for", "at", "in", "let", "where", "order", "group", "by", "return", "if", "then", "else", "tumbling", "sliding", "window", "start", "when", "only", "end", "previous", "next", "stable", "ascending", "descending", "allowing", "empty", "greatest", "least", "some", "every", "satisfies", "switch", "case", "typeswitch", "try", "catch", "and", "or", "to", "union", "intersect", "instance", "of", "treat", "as", "castable", "cast", "map", "array", "delete", "insert", "into", "replace", "value", "rename", "copy", "modify", "update"],
											type: ["item", "document-node", "node", "attribute", "document", "element", "comment", "namespace", "namespace-node", "processing-instruction", "text", "construction", "xs:anyAtomicType", "xs:untypedAtomic", "xs:duration", "xs:time", "xs:decimal", "xs:float", "xs:double", "xs:gYearMonth", "xs:gYear", "xs:gMonthDay", "xs:gMonth", "xs:gDay", "xs:boolean", "xs:base64Binary", "xs:hexBinary", "xs:anyURI", "xs:QName", "xs:NOTATION", "xs:dateTime", "xs:dateTimeStamp", "xs:date", "xs:string", "xs:normalizedString", "xs:token", "xs:language", "xs:NMTOKEN", "xs:Name", "xs:NCName", "xs:ID", "xs:IDREF", "xs:ENTITY", "xs:integer", "xs:nonPositiveInteger", "xs:negativeInteger", "xs:long", "xs:int", "xs:short", "xs:byte", "xs:nonNegativeInteger", "xs:unisignedLong", "xs:unsignedInt", "xs:unsignedShort", "xs:unsignedByte", "xs:positiveInteger", "xs:yearMonthDuration", "xs:dayTimeDuration"],
											literal: ["eq", "ne", "lt", "le", "gt", "ge", "is", "self::", "child::", "descendant::", "descendant-or-self::", "attribute::", "following::", "following-sibling::", "parent::", "ancestor::", "ancestor-or-self::", "preceding::", "preceding-sibling::", "NaN"]
									},
									contains: [{
											className: "variable",
											begin: /[$][\w\-:]+/
									}, {
											className: "built_in",
											variants: [{
													begin: /\barray:/,
													end: /(?:append|filter|flatten|fold-(?:left|right)|for-each(?:-pair)?|get|head|insert-before|join|put|remove|reverse|size|sort|subarray|tail)\b/
											}, {
													begin: /\bmap:/,
													end: /(?:contains|entry|find|for-each|get|keys|merge|put|remove|size)\b/
											}, {
													begin: /\bmath:/,
													end: /(?:a(?:cos|sin|tan[2]?)|cos|exp(?:10)?|log(?:10)?|pi|pow|sin|sqrt|tan)\b/
											}, {
													begin: /\bop:/,
													end: /\(/,
													excludeEnd: !0
											}, {
													begin: /\bfn:/,
													end: /\(/,
													excludeEnd: !0
											}, {
													begin: /[^</$:'"-]\b(?:abs|accumulator-(?:after|before)|adjust-(?:date(?:Time)?|time)-to-timezone|analyze-string|apply|available-(?:environment-variables|system-properties)|avg|base-uri|boolean|ceiling|codepoints?-(?:equal|to-string)|collation-key|collection|compare|concat|contains(?:-token)?|copy-of|count|current(?:-)?(?:date(?:Time)?|time|group(?:ing-key)?|output-uri|merge-(?:group|key))?data|dateTime|days?-from-(?:date(?:Time)?|duration)|deep-equal|default-(?:collation|language)|distinct-values|document(?:-uri)?|doc(?:-available)?|element-(?:available|with-id)|empty|encode-for-uri|ends-with|environment-variable|error|escape-html-uri|exactly-one|exists|false|filter|floor|fold-(?:left|right)|for-each(?:-pair)?|format-(?:date(?:Time)?|time|integer|number)|function-(?:arity|available|lookup|name)|generate-id|has-children|head|hours-from-(?:dateTime|duration|time)|id(?:ref)?|implicit-timezone|in-scope-prefixes|index-of|innermost|insert-before|iri-to-uri|json-(?:doc|to-xml)|key|lang|last|load-xquery-module|local-name(?:-from-QName)?|(?:lower|upper)-case|matches|max|minutes-from-(?:dateTime|duration|time)|min|months?-from-(?:date(?:Time)?|duration)|name(?:space-uri-?(?:for-prefix|from-QName)?)?|nilled|node-name|normalize-(?:space|unicode)|not|number|one-or-more|outermost|parse-(?:ietf-date|json)|path|position|(?:prefix-from-)?QName|random-number-generator|regex-group|remove|replace|resolve-(?:QName|uri)|reverse|root|round(?:-half-to-even)?|seconds-from-(?:dateTime|duration|time)|snapshot|sort|starts-with|static-base-uri|stream-available|string-?(?:join|length|to-codepoints)?|subsequence|substring-?(?:after|before)?|sum|system-property|tail|timezone-from-(?:date(?:Time)?|time)|tokenize|trace|trans(?:form|late)|true|type-available|unordered|unparsed-(?:entity|text)?-?(?:public-id|uri|available|lines)?|uri-collection|xml-to-json|years?-from-(?:date(?:Time)?|duration)|zero-or-one)\b/
											}, {
													begin: /\blocal:/,
													end: /\(/,
													excludeEnd: !0
											}, {
													begin: /\bzip:/,
													end: /(?:zip-file|(?:xml|html|text|binary)-entry| (?:update-)?entries)\b/
											}, {
													begin: /\b(?:util|db|functx|app|xdmp|xmldb):/,
													end: /\(/,
													excludeEnd: !0
											}]
									}, {
											className: "string",
											variants: [{
													begin: /"/,
													end: /"/,
													contains: [{
															begin: /""/,
															relevance: 0
													}]
											}, {
													begin: /'/,
													end: /'/,
													contains: [{
															begin: /''/,
															relevance: 0
													}]
											}]
									}, {
											className: "number",
											begin: /(\b0[0-7_]+)|(\b0x[0-9a-fA-F_]+)|(\b[1-9][0-9_]*(\.[0-9_]+)?)|[0_]\b/,
											relevance: 0
									}, {
											className: "comment",
											begin: /\(:/,
											end: /:\)/,
											relevance: 10,
											contains: [{
													className: "doctag",
													begin: /@\w+/
											}]
									}, {
											className: "meta",
											begin: /%[\w\-:]+/
									}, {
											className: "title",
											begin: /\bxquery version "[13]\.[01]"\s?(?:encoding ".+")?/,
											end: /;/
									}, {
											beginKeywords: "element attribute comment document processing-instruction",
											end: /\{/,
											excludeEnd: !0
									}, {
											begin: /<([\w._:-]+)(\s+\S*=('|").*('|"))?>/,
											end: /(\/[\w._:-]+>)/,
											subLanguage: "xml",
											contains: [{
													begin: /\{/,
													end: /\}/,
													subLanguage: "xquery"
											}, "self"]
									}]
							}
					}
			}
			,
			8425: e=>{
					e.exports = function(e) {
							const t = "true false yes no null"
								, n = "[\\w#;/?:@&=+$,.~*'()[\\]]+"
								, i = {
									className: "string",
									relevance: 0,
									variants: [{
											begin: /'/,
											end: /'/
									}, {
											begin: /"/,
											end: /"/
									}, {
											begin: /\S+/
									}],
									contains: [e.BACKSLASH_ESCAPE, {
											className: "template-variable",
											variants: [{
													begin: /\{\{/,
													end: /\}\}/
											}, {
													begin: /%\{/,
													end: /\}/
											}]
									}]
							}
								, r = e.inherit(i, {
									variants: [{
											begin: /'/,
											end: /'/
									}, {
											begin: /"/,
											end: /"/
									}, {
											begin: /[^\s,{}[\]]+/
									}]
							})
								, o = {
									className: "number",
									begin: "\\b[0-9]{4}(-[0-9][0-9]){0,2}([Tt \\t][0-9][0-9]?(:[0-9][0-9]){2})?(\\.[0-9]*)?([ \\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?\\b"
							}
								, s = {
									end: ",",
									endsWithParent: !0,
									excludeEnd: !0,
									keywords: t,
									relevance: 0
							}
								, a = {
									begin: /\{/,
									end: /\}/,
									contains: [s],
									illegal: "\\n",
									relevance: 0
							}
								, l = {
									begin: "\\[",
									end: "\\]",
									contains: [s],
									illegal: "\\n",
									relevance: 0
							}
								, c = [{
									className: "attr",
									variants: [{
											begin: "\\w[\\w :\\/.-]*:(?=[ \t]|$)"
									}, {
											begin: '"\\w[\\w :\\/.-]*":(?=[ \t]|$)'
									}, {
											begin: "'\\w[\\w :\\/.-]*':(?=[ \t]|$)"
									}]
							}, {
									className: "meta",
									begin: "^---\\s*$",
									relevance: 10
							}, {
									className: "string",
									begin: "[\\|>]([1-9]?[+-])?[ ]*\\n( +)[^ ][^\\n]*\\n(\\2[^\\n]+\\n?)*"
							}, {
									begin: "<%[%=-]?",
									end: "[%-]?%>",
									subLanguage: "ruby",
									excludeBegin: !0,
									excludeEnd: !0,
									relevance: 0
							}, {
									className: "type",
									begin: "!\\w+!" + n
							}, {
									className: "type",
									begin: "!<" + n + ">"
							}, {
									className: "type",
									begin: "!" + n
							}, {
									className: "type",
									begin: "!!" + n
							}, {
									className: "meta",
									begin: "&" + e.UNDERSCORE_IDENT_RE + "$"
							}, {
									className: "meta",
									begin: "\\*" + e.UNDERSCORE_IDENT_RE + "$"
							}, {
									className: "bullet",
									begin: "-(?=[ ]|$)",
									relevance: 0
							}, e.HASH_COMMENT_MODE, {
									beginKeywords: t,
									keywords: {
											literal: t
									}
							}, o, {
									className: "number",
									begin: e.C_NUMBER_RE + "\\b",
									relevance: 0
							}, a, l, i]
								, d = [...c];
							return d.pop(),
							d.push(r),
							s.contains = d,
							{
									name: "YAML",
									case_insensitive: !0,
									aliases: ["yml"],
									contains: c
							}
					}
			}
			,
			2391: e=>{
					e.exports = function(e) {
							const t = {
									className: "string",
									contains: [e.BACKSLASH_ESCAPE],
									variants: [e.inherit(e.APOS_STRING_MODE, {
											illegal: null
									}), e.inherit(e.QUOTE_STRING_MODE, {
											illegal: null
									})]
							}
								, n = e.UNDERSCORE_TITLE_MODE
								, i = {
									variants: [e.BINARY_NUMBER_MODE, e.C_NUMBER_MODE]
							}
								, r = "namespace class interface use extends function return abstract final public protected private static deprecated throw try catch Exception echo empty isset instanceof unset let var new const self require if else elseif switch case default do while loop for continue break likely unlikely __LINE__ __FILE__ __DIR__ __FUNCTION__ __CLASS__ __TRAIT__ __METHOD__ __NAMESPACE__ array boolean float double integer object resource string char long unsigned bool int uint ulong uchar true false null undefined";
							return {
									name: "Zephir",
									aliases: ["zep"],
									keywords: r,
									contains: [e.C_LINE_COMMENT_MODE, e.COMMENT(/\/\*/, /\*\//, {
											contains: [{
													className: "doctag",
													begin: /@[A-Za-z]+/
											}]
									}), {
											className: "string",
											begin: /<<<['"]?\w+['"]?$/,
											end: /^\w+;/,
											contains: [e.BACKSLASH_ESCAPE]
									}, {
											begin: /(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/
									}, {
											className: "function",
											beginKeywords: "function fn",
											end: /[;{]/,
											excludeEnd: !0,
											illegal: /\$|\[|%/,
											contains: [n, {
													className: "params",
													begin: /\(/,
													end: /\)/,
													keywords: r,
													contains: ["self", e.C_BLOCK_COMMENT_MODE, t, i]
											}]
									}, {
											className: "class",
											beginKeywords: "class interface",
											end: /\{/,
											excludeEnd: !0,
											illegal: /[:($"]/,
											contains: [{
													beginKeywords: "extends implements"
											}, n]
									}, {
											beginKeywords: "namespace",
											end: /;/,
											illegal: /[.']/,
											contains: [n]
									}, {
											beginKeywords: "use",
											end: /;/,
											contains: [n]
									}, {
											begin: /=>/
									}, t, i]
							}
					}
			}
			,
			5679: (e,t,n)=>{
					"use strict";
					function isObject(e) {
							return null !== e && "object" == typeof e && "constructor"in e && e.constructor === Object
					}
					function extend(e={}, t={}) {
							Object.keys(t).forEach((n=>{
									void 0 === e[n] ? e[n] = t[n] : isObject(t[n]) && isObject(e[n]) && Object.keys(t[n]).length > 0 && extend(e[n], t[n])
							}
							))
					}
					n.r(t),
					n.d(t, {
							A11y: ()=>A11y,
							Autoplay: ()=>Autoplay,
							Controller: ()=>Controller,
							EffectCards: ()=>EffectCards,
							EffectCoverflow: ()=>EffectCoverflow,
							EffectCreative: ()=>EffectCreative,
							EffectCube: ()=>EffectCube,
							EffectFade: ()=>EffectFade,
							EffectFlip: ()=>EffectFlip,
							FreeMode: ()=>freeMode,
							Grid: ()=>Grid,
							HashNavigation: ()=>HashNavigation,
							History: ()=>History,
							Keyboard: ()=>Keyboard,
							Lazy: ()=>Lazy,
							Manipulation: ()=>Manipulation,
							Mousewheel: ()=>Mousewheel,
							Navigation: ()=>Navigation,
							Pagination: ()=>Pagination,
							Parallax: ()=>Parallax,
							Scrollbar: ()=>Scrollbar,
							Swiper: ()=>E,
							Thumbs: ()=>Thumb,
							Virtual: ()=>Virtual,
							Zoom: ()=>Zoom,
							default: ()=>E
					});
					const i = {
							body: {},
							addEventListener() {},
							removeEventListener() {},
							activeElement: {
									blur() {},
									nodeName: ""
							},
							querySelector: ()=>null,
							querySelectorAll: ()=>[],
							getElementById: ()=>null,
							createEvent: ()=>({
									initEvent() {}
							}),
							createElement: ()=>({
									children: [],
									childNodes: [],
									style: {},
									setAttribute() {},
									getElementsByTagName: ()=>[]
							}),
							createElementNS: ()=>({}),
							importNode: ()=>null,
							location: {
									hash: "",
									host: "",
									hostname: "",
									href: "",
									origin: "",
									pathname: "",
									protocol: "",
									search: ""
							}
					};
					function getDocument() {
							const e = "undefined" != typeof document ? document : {};
							return extend(e, i),
							e
					}
					const r = {
							document: i,
							navigator: {
									userAgent: ""
							},
							location: {
									hash: "",
									host: "",
									hostname: "",
									href: "",
									origin: "",
									pathname: "",
									protocol: "",
									search: ""
							},
							history: {
									replaceState() {},
									pushState() {},
									go() {},
									back() {}
							},
							CustomEvent: function() {
									return this
							},
							addEventListener() {},
							removeEventListener() {},
							getComputedStyle: ()=>({
									getPropertyValue: ()=>""
							}),
							Image() {},
							Date() {},
							screen: {},
							setTimeout() {},
							clearTimeout() {},
							matchMedia: ()=>({}),
							requestAnimationFrame: e=>"undefined" == typeof setTimeout ? (e(),
							null) : setTimeout(e, 0),
							cancelAnimationFrame(e) {
									"undefined" != typeof setTimeout && clearTimeout(e)
							}
					};
					function ssr_window_esm_getWindow() {
							const e = "undefined" != typeof window ? window : {};
							return extend(e, r),
							e
					}
					class Dom7 extends Array {
							constructor(e) {
									"number" == typeof e ? super(e) : (super(...e || []),
									function(e) {
											const t = e.__proto__;
											Object.defineProperty(e, "__proto__", {
													get: ()=>t,
													set(e) {
															t.__proto__ = e
													}
											})
									}(this))
							}
					}
					function arrayFlat(e=[]) {
							const t = [];
							return e.forEach((e=>{
									Array.isArray(e) ? t.push(...arrayFlat(e)) : t.push(e)
							}
							)),
							t
					}
					function arrayFilter(e, t) {
							return Array.prototype.filter.call(e, t)
					}
					function $(e, t) {
							const n = ssr_window_esm_getWindow()
								, i = getDocument();
							let r = [];
							if (!t && e instanceof Dom7)
									return e;
							if (!e)
									return new Dom7(r);
							if ("string" == typeof e) {
									const n = e.trim();
									if (n.indexOf("<") >= 0 && n.indexOf(">") >= 0) {
											let e = "div";
											0 === n.indexOf("<li") && (e = "ul"),
											0 === n.indexOf("<tr") && (e = "tbody"),
											0 !== n.indexOf("<td") && 0 !== n.indexOf("<th") || (e = "tr"),
											0 === n.indexOf("<tbody") && (e = "table"),
											0 === n.indexOf("<option") && (e = "select");
											const t = i.createElement(e);
											t.innerHTML = n;
											for (let e = 0; e < t.childNodes.length; e += 1)
													r.push(t.childNodes[e])
									} else
											r = function(e, t) {
													if ("string" != typeof e)
															return [e];
													const n = []
														, i = t.querySelectorAll(e);
													for (let e = 0; e < i.length; e += 1)
															n.push(i[e]);
													return n
											}(e.trim(), t || i)
							} else if (e.nodeType || e === n || e === i)
									r.push(e);
							else if (Array.isArray(e)) {
									if (e instanceof Dom7)
											return e;
									r = e
							}
							return new Dom7(function(e) {
									const t = [];
									for (let n = 0; n < e.length; n += 1)
											-1 === t.indexOf(e[n]) && t.push(e[n]);
									return t
							}(r))
					}
					$.fn = Dom7.prototype;
					const o = "resize scroll".split(" ");
					function shortcut(e) {
							return function(...t) {
									if (void 0 === t[0]) {
											for (let t = 0; t < this.length; t += 1)
													o.indexOf(e) < 0 && (e in this[t] ? this[t][e]() : $(this[t]).trigger(e));
											return this
									}
									return this.on(e, ...t)
							}
					}
					shortcut("click"),
					shortcut("blur"),
					shortcut("focus"),
					shortcut("focusin"),
					shortcut("focusout"),
					shortcut("keyup"),
					shortcut("keydown"),
					shortcut("keypress"),
					shortcut("submit"),
					shortcut("change"),
					shortcut("mousedown"),
					shortcut("mousemove"),
					shortcut("mouseup"),
					shortcut("mouseenter"),
					shortcut("mouseleave"),
					shortcut("mouseout"),
					shortcut("mouseover"),
					shortcut("touchstart"),
					shortcut("touchend"),
					shortcut("touchmove"),
					shortcut("resize"),
					shortcut("scroll");
					const s = {
							addClass: function(...e) {
									const t = arrayFlat(e.map((e=>e.split(" "))));
									return this.forEach((e=>{
											e.classList.add(...t)
									}
									)),
									this
							},
							removeClass: function(...e) {
									const t = arrayFlat(e.map((e=>e.split(" "))));
									return this.forEach((e=>{
											e.classList.remove(...t)
									}
									)),
									this
							},
							hasClass: function(...e) {
									const t = arrayFlat(e.map((e=>e.split(" "))));
									return arrayFilter(this, (e=>t.filter((t=>e.classList.contains(t))).length > 0)).length > 0
							},
							toggleClass: function(...e) {
									const t = arrayFlat(e.map((e=>e.split(" "))));
									this.forEach((e=>{
											t.forEach((t=>{
													e.classList.toggle(t)
											}
											))
									}
									))
							},
							attr: function(e, t) {
									if (1 === arguments.length && "string" == typeof e)
											return this[0] ? this[0].getAttribute(e) : void 0;
									for (let n = 0; n < this.length; n += 1)
											if (2 === arguments.length)
													this[n].setAttribute(e, t);
											else
													for (const t in e)
															this[n][t] = e[t],
															this[n].setAttribute(t, e[t]);
									return this
							},
							removeAttr: function(e) {
									for (let t = 0; t < this.length; t += 1)
											this[t].removeAttribute(e);
									return this
							},
							transform: function(e) {
									for (let t = 0; t < this.length; t += 1)
											this[t].style.transform = e;
									return this
							},
							transition: function(e) {
									for (let t = 0; t < this.length; t += 1)
											this[t].style.transitionDuration = "string" != typeof e ? `${e}ms` : e;
									return this
							},
							on: function(...e) {
									let[t,n,i,r] = e;
									function handleLiveEvent(e) {
											const t = e.target;
											if (!t)
													return;
											const r = e.target.dom7EventData || [];
											if (r.indexOf(e) < 0 && r.unshift(e),
											$(t).is(n))
													i.apply(t, r);
											else {
													const e = $(t).parents();
													for (let t = 0; t < e.length; t += 1)
															$(e[t]).is(n) && i.apply(e[t], r)
											}
									}
									function handleEvent(e) {
											const t = e && e.target && e.target.dom7EventData || [];
											t.indexOf(e) < 0 && t.unshift(e),
											i.apply(this, t)
									}
									"function" == typeof e[1] && ([t,i,r] = e,
									n = void 0),
									r || (r = !1);
									const o = t.split(" ");
									let s;
									for (let e = 0; e < this.length; e += 1) {
											const t = this[e];
											if (n)
													for (s = 0; s < o.length; s += 1) {
															const e = o[s];
															t.dom7LiveListeners || (t.dom7LiveListeners = {}),
															t.dom7LiveListeners[e] || (t.dom7LiveListeners[e] = []),
															t.dom7LiveListeners[e].push({
																	listener: i,
																	proxyListener: handleLiveEvent
															}),
															t.addEventListener(e, handleLiveEvent, r)
													}
											else
													for (s = 0; s < o.length; s += 1) {
															const e = o[s];
															t.dom7Listeners || (t.dom7Listeners = {}),
															t.dom7Listeners[e] || (t.dom7Listeners[e] = []),
															t.dom7Listeners[e].push({
																	listener: i,
																	proxyListener: handleEvent
															}),
															t.addEventListener(e, handleEvent, r)
													}
									}
									return this
							},
							off: function(...e) {
									let[t,n,i,r] = e;
									"function" == typeof e[1] && ([t,i,r] = e,
									n = void 0),
									r || (r = !1);
									const o = t.split(" ");
									for (let e = 0; e < o.length; e += 1) {
											const t = o[e];
											for (let e = 0; e < this.length; e += 1) {
													const o = this[e];
													let s;
													if (!n && o.dom7Listeners ? s = o.dom7Listeners[t] : n && o.dom7LiveListeners && (s = o.dom7LiveListeners[t]),
													s && s.length)
															for (let e = s.length - 1; e >= 0; e -= 1) {
																	const n = s[e];
																	i && n.listener === i || i && n.listener && n.listener.dom7proxy && n.listener.dom7proxy === i ? (o.removeEventListener(t, n.proxyListener, r),
																	s.splice(e, 1)) : i || (o.removeEventListener(t, n.proxyListener, r),
																	s.splice(e, 1))
															}
											}
									}
									return this
							},
							trigger: function(...e) {
									const t = ssr_window_esm_getWindow()
										, n = e[0].split(" ")
										, i = e[1];
									for (let r = 0; r < n.length; r += 1) {
											const o = n[r];
											for (let n = 0; n < this.length; n += 1) {
													const r = this[n];
													if (t.CustomEvent) {
															const n = new t.CustomEvent(o,{
																	detail: i,
																	bubbles: !0,
																	cancelable: !0
															});
															r.dom7EventData = e.filter(((e,t)=>t > 0)),
															r.dispatchEvent(n),
															r.dom7EventData = [],
															delete r.dom7EventData
													}
											}
									}
									return this
							},
							transitionEnd: function(e) {
									const t = this;
									return e && t.on("transitionend", (function fireCallBack(n) {
											n.target === this && (e.call(this, n),
											t.off("transitionend", fireCallBack))
									}
									)),
									this
							},
							outerWidth: function(e) {
									if (this.length > 0) {
											if (e) {
													const e = this.styles();
													return this[0].offsetWidth + parseFloat(e.getPropertyValue("margin-right")) + parseFloat(e.getPropertyValue("margin-left"))
											}
											return this[0].offsetWidth
									}
									return null
							},
							outerHeight: function(e) {
									if (this.length > 0) {
											if (e) {
													const e = this.styles();
													return this[0].offsetHeight + parseFloat(e.getPropertyValue("margin-top")) + parseFloat(e.getPropertyValue("margin-bottom"))
											}
											return this[0].offsetHeight
									}
									return null
							},
							styles: function() {
									const e = ssr_window_esm_getWindow();
									return this[0] ? e.getComputedStyle(this[0], null) : {}
							},
							offset: function() {
									if (this.length > 0) {
											const e = ssr_window_esm_getWindow()
												, t = getDocument()
												, n = this[0]
												, i = n.getBoundingClientRect()
												, r = t.body
												, o = n.clientTop || r.clientTop || 0
												, s = n.clientLeft || r.clientLeft || 0
												, a = n === e ? e.scrollY : n.scrollTop
												, l = n === e ? e.scrollX : n.scrollLeft;
											return {
													top: i.top + a - o,
													left: i.left + l - s
											}
									}
									return null
							},
							css: function(e, t) {
									const n = ssr_window_esm_getWindow();
									let i;
									if (1 === arguments.length) {
											if ("string" != typeof e) {
													for (i = 0; i < this.length; i += 1)
															for (const t in e)
																	this[i].style[t] = e[t];
													return this
											}
											if (this[0])
													return n.getComputedStyle(this[0], null).getPropertyValue(e)
									}
									if (2 === arguments.length && "string" == typeof e) {
											for (i = 0; i < this.length; i += 1)
													this[i].style[e] = t;
											return this
									}
									return this
							},
							each: function(e) {
									return e ? (this.forEach(((t,n)=>{
											e.apply(t, [t, n])
									}
									)),
									this) : this
							},
							html: function(e) {
									if (void 0 === e)
											return this[0] ? this[0].innerHTML : null;
									for (let t = 0; t < this.length; t += 1)
											this[t].innerHTML = e;
									return this
							},
							text: function(e) {
									if (void 0 === e)
											return this[0] ? this[0].textContent.trim() : null;
									for (let t = 0; t < this.length; t += 1)
											this[t].textContent = e;
									return this
							},
							is: function(e) {
									const t = ssr_window_esm_getWindow()
										, n = getDocument()
										, i = this[0];
									let r, o;
									if (!i || void 0 === e)
											return !1;
									if ("string" == typeof e) {
											if (i.matches)
													return i.matches(e);
											if (i.webkitMatchesSelector)
													return i.webkitMatchesSelector(e);
											if (i.msMatchesSelector)
													return i.msMatchesSelector(e);
											for (r = $(e),
											o = 0; o < r.length; o += 1)
													if (r[o] === i)
															return !0;
											return !1
									}
									if (e === n)
											return i === n;
									if (e === t)
											return i === t;
									if (e.nodeType || e instanceof Dom7) {
											for (r = e.nodeType ? [e] : e,
											o = 0; o < r.length; o += 1)
													if (r[o] === i)
															return !0;
											return !1
									}
									return !1
							},
							index: function() {
									let e, t = this[0];
									if (t) {
											for (e = 0; null !== (t = t.previousSibling); )
													1 === t.nodeType && (e += 1);
											return e
									}
							},
							eq: function(e) {
									if (void 0 === e)
											return this;
									const t = this.length;
									if (e > t - 1)
											return $([]);
									if (e < 0) {
											const n = t + e;
											return $(n < 0 ? [] : [this[n]])
									}
									return $([this[e]])
							},
							append: function(...e) {
									let t;
									const n = getDocument();
									for (let i = 0; i < e.length; i += 1) {
											t = e[i];
											for (let e = 0; e < this.length; e += 1)
													if ("string" == typeof t) {
															const i = n.createElement("div");
															for (i.innerHTML = t; i.firstChild; )
																	this[e].appendChild(i.firstChild)
													} else if (t instanceof Dom7)
															for (let n = 0; n < t.length; n += 1)
																	this[e].appendChild(t[n]);
													else
															this[e].appendChild(t)
									}
									return this
							},
							prepend: function(e) {
									const t = getDocument();
									let n, i;
									for (n = 0; n < this.length; n += 1)
											if ("string" == typeof e) {
													const r = t.createElement("div");
													for (r.innerHTML = e,
													i = r.childNodes.length - 1; i >= 0; i -= 1)
															this[n].insertBefore(r.childNodes[i], this[n].childNodes[0])
											} else if (e instanceof Dom7)
													for (i = 0; i < e.length; i += 1)
															this[n].insertBefore(e[i], this[n].childNodes[0]);
											else
													this[n].insertBefore(e, this[n].childNodes[0]);
									return this
							},
							next: function(e) {
									return this.length > 0 ? e ? this[0].nextElementSibling && $(this[0].nextElementSibling).is(e) ? $([this[0].nextElementSibling]) : $([]) : this[0].nextElementSibling ? $([this[0].nextElementSibling]) : $([]) : $([])
							},
							nextAll: function(e) {
									const t = [];
									let n = this[0];
									if (!n)
											return $([]);
									for (; n.nextElementSibling; ) {
											const i = n.nextElementSibling;
											e ? $(i).is(e) && t.push(i) : t.push(i),
											n = i
									}
									return $(t)
							},
							prev: function(e) {
									if (this.length > 0) {
											const t = this[0];
											return e ? t.previousElementSibling && $(t.previousElementSibling).is(e) ? $([t.previousElementSibling]) : $([]) : t.previousElementSibling ? $([t.previousElementSibling]) : $([])
									}
									return $([])
							},
							prevAll: function(e) {
									const t = [];
									let n = this[0];
									if (!n)
											return $([]);
									for (; n.previousElementSibling; ) {
											const i = n.previousElementSibling;
											e ? $(i).is(e) && t.push(i) : t.push(i),
											n = i
									}
									return $(t)
							},
							parent: function(e) {
									const t = [];
									for (let n = 0; n < this.length; n += 1)
											null !== this[n].parentNode && (e ? $(this[n].parentNode).is(e) && t.push(this[n].parentNode) : t.push(this[n].parentNode));
									return $(t)
							},
							parents: function(e) {
									const t = [];
									for (let n = 0; n < this.length; n += 1) {
											let i = this[n].parentNode;
											for (; i; )
													e ? $(i).is(e) && t.push(i) : t.push(i),
													i = i.parentNode
									}
									return $(t)
							},
							closest: function(e) {
									let t = this;
									return void 0 === e ? $([]) : (t.is(e) || (t = t.parents(e).eq(0)),
									t)
							},
							find: function(e) {
									const t = [];
									for (let n = 0; n < this.length; n += 1) {
											const i = this[n].querySelectorAll(e);
											for (let e = 0; e < i.length; e += 1)
													t.push(i[e])
									}
									return $(t)
							},
							children: function(e) {
									const t = [];
									for (let n = 0; n < this.length; n += 1) {
											const i = this[n].children;
											for (let n = 0; n < i.length; n += 1)
													e && !$(i[n]).is(e) || t.push(i[n])
									}
									return $(t)
							},
							filter: function(e) {
									return $(arrayFilter(this, e))
							},
							remove: function() {
									for (let e = 0; e < this.length; e += 1)
											this[e].parentNode && this[e].parentNode.removeChild(this[e]);
									return this
							}
					};
					Object.keys(s).forEach((e=>{
							Object.defineProperty($.fn, e, {
									value: s[e],
									writable: !0
							})
					}
					));
					const a = $;
					function nextTick(e, t=0) {
							return setTimeout(e, t)
					}
					function now() {
							return Date.now()
					}
					function getTranslate(e, t="x") {
							const n = ssr_window_esm_getWindow();
							let i, r, o;
							const s = function(e) {
									const t = ssr_window_esm_getWindow();
									let n;
									return t.getComputedStyle && (n = t.getComputedStyle(e, null)),
									!n && e.currentStyle && (n = e.currentStyle),
									n || (n = e.style),
									n
							}(e);
							return n.WebKitCSSMatrix ? (r = s.transform || s.webkitTransform,
							r.split(",").length > 6 && (r = r.split(", ").map((e=>e.replace(",", "."))).join(", ")),
							o = new n.WebKitCSSMatrix("none" === r ? "" : r)) : (o = s.MozTransform || s.OTransform || s.MsTransform || s.msTransform || s.transform || s.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,"),
							i = o.toString().split(",")),
							"x" === t && (r = n.WebKitCSSMatrix ? o.m41 : 16 === i.length ? parseFloat(i[12]) : parseFloat(i[4])),
							"y" === t && (r = n.WebKitCSSMatrix ? o.m42 : 16 === i.length ? parseFloat(i[13]) : parseFloat(i[5])),
							r || 0
					}
					function utils_isObject(e) {
							return "object" == typeof e && null !== e && e.constructor && "Object" === Object.prototype.toString.call(e).slice(8, -1)
					}
					function utils_extend(...e) {
							const t = Object(e[0])
								, n = ["__proto__", "constructor", "prototype"];
							for (let r = 1; r < e.length; r += 1) {
									const o = e[r];
									if (null != o && (i = o,
									!("undefined" != typeof window && void 0 !== window.HTMLElement ? i instanceof HTMLElement : i && (1 === i.nodeType || 11 === i.nodeType)))) {
											const e = Object.keys(Object(o)).filter((e=>n.indexOf(e) < 0));
											for (let n = 0, i = e.length; n < i; n += 1) {
													const i = e[n]
														, r = Object.getOwnPropertyDescriptor(o, i);
													void 0 !== r && r.enumerable && (utils_isObject(t[i]) && utils_isObject(o[i]) ? o[i].__swiper__ ? t[i] = o[i] : utils_extend(t[i], o[i]) : !utils_isObject(t[i]) && utils_isObject(o[i]) ? (t[i] = {},
													o[i].__swiper__ ? t[i] = o[i] : utils_extend(t[i], o[i])) : t[i] = o[i])
											}
									}
							}
							var i;
							return t
					}
					function setCSSProperty(e, t, n) {
							e.style.setProperty(t, n)
					}
					function animateCSSModeScroll({swiper: e, targetPosition: t, side: n}) {
							const i = ssr_window_esm_getWindow()
								, r = -e.translate;
							let o, s = null;
							const a = e.params.speed;
							e.wrapperEl.style.scrollSnapType = "none",
							i.cancelAnimationFrame(e.cssModeFrameID);
							const l = t > r ? "next" : "prev"
								, isOutOfBound = (e,t)=>"next" === l && e >= t || "prev" === l && e <= t
								, animate = ()=>{
									o = (new Date).getTime(),
									null === s && (s = o);
									const l = Math.max(Math.min((o - s) / a, 1), 0)
										, c = .5 - Math.cos(l * Math.PI) / 2;
									let d = r + c * (t - r);
									if (isOutOfBound(d, t) && (d = t),
									e.wrapperEl.scrollTo({
											[n]: d
									}),
									isOutOfBound(d, t))
											return e.wrapperEl.style.overflow = "hidden",
											e.wrapperEl.style.scrollSnapType = "",
											setTimeout((()=>{
													e.wrapperEl.style.overflow = "",
													e.wrapperEl.scrollTo({
															[n]: d
													})
											}
											)),
											void i.cancelAnimationFrame(e.cssModeFrameID);
									e.cssModeFrameID = i.requestAnimationFrame(animate)
							}
							;
							animate()
					}
					let l, c, d;
					function getSupport() {
							return l || (l = function() {
									const e = ssr_window_esm_getWindow()
										, t = getDocument();
									return {
											smoothScroll: t.documentElement && "scrollBehavior"in t.documentElement.style,
											touch: !!("ontouchstart"in e || e.DocumentTouch && t instanceof e.DocumentTouch),
											passiveListener: function() {
													let t = !1;
													try {
															const n = Object.defineProperty({}, "passive", {
																	get() {
																			t = !0
																	}
															});
															e.addEventListener("testPassiveListener", null, n)
													} catch (e) {}
													return t
											}(),
											gestures: "ongesturestart"in e
									}
							}()),
							l
					}
					function getDevice(e={}) {
							return c || (c = function({userAgent: e}={}) {
									const t = getSupport()
										, n = ssr_window_esm_getWindow()
										, i = n.navigator.platform
										, r = e || n.navigator.userAgent
										, o = {
											ios: !1,
											android: !1
									}
										, s = n.screen.width
										, a = n.screen.height
										, l = r.match(/(Android);?[\s\/]+([\d.]+)?/);
									let c = r.match(/(iPad).*OS\s([\d_]+)/);
									const d = r.match(/(iPod)(.*OS\s([\d_]+))?/)
										, p = !c && r.match(/(iPhone\sOS|iOS)\s([\d_]+)/)
										, u = "Win32" === i;
									let h = "MacIntel" === i;
									return !c && h && t.touch && ["1024x1366", "1366x1024", "834x1194", "1194x834", "834x1112", "1112x834", "768x1024", "1024x768", "820x1180", "1180x820", "810x1080", "1080x810"].indexOf(`${s}x${a}`) >= 0 && (c = r.match(/(Version)\/([\d.]+)/),
									c || (c = [0, 1, "13_0_0"]),
									h = !1),
									l && !u && (o.os = "android",
									o.android = !0),
									(c || p || d) && (o.os = "ios",
									o.ios = !0),
									o
							}(e)),
							c
					}
					function getBrowser() {
							return d || (d = function() {
									const e = ssr_window_esm_getWindow();
									return {
											isSafari: function() {
													const t = e.navigator.userAgent.toLowerCase();
													return t.indexOf("safari") >= 0 && t.indexOf("chrome") < 0 && t.indexOf("android") < 0
											}(),
											isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(e.navigator.userAgent)
									}
							}()),
							d
					}
					const p = {
							on(e, t, n) {
									const i = this;
									if (!i.eventsListeners || i.destroyed)
											return i;
									if ("function" != typeof t)
											return i;
									const r = n ? "unshift" : "push";
									return e.split(" ").forEach((e=>{
											i.eventsListeners[e] || (i.eventsListeners[e] = []),
											i.eventsListeners[e][r](t)
									}
									)),
									i
							},
							once(e, t, n) {
									const i = this;
									if (!i.eventsListeners || i.destroyed)
											return i;
									if ("function" != typeof t)
											return i;
									function onceHandler(...n) {
											i.off(e, onceHandler),
											onceHandler.__emitterProxy && delete onceHandler.__emitterProxy,
											t.apply(i, n)
									}
									return onceHandler.__emitterProxy = t,
									i.on(e, onceHandler, n)
							},
							onAny(e, t) {
									const n = this;
									if (!n.eventsListeners || n.destroyed)
											return n;
									if ("function" != typeof e)
											return n;
									const i = t ? "unshift" : "push";
									return n.eventsAnyListeners.indexOf(e) < 0 && n.eventsAnyListeners[i](e),
									n
							},
							offAny(e) {
									const t = this;
									if (!t.eventsListeners || t.destroyed)
											return t;
									if (!t.eventsAnyListeners)
											return t;
									const n = t.eventsAnyListeners.indexOf(e);
									return n >= 0 && t.eventsAnyListeners.splice(n, 1),
									t
							},
							off(e, t) {
									const n = this;
									return !n.eventsListeners || n.destroyed ? n : n.eventsListeners ? (e.split(" ").forEach((e=>{
											void 0 === t ? n.eventsListeners[e] = [] : n.eventsListeners[e] && n.eventsListeners[e].forEach(((i,r)=>{
													(i === t || i.__emitterProxy && i.__emitterProxy === t) && n.eventsListeners[e].splice(r, 1)
											}
											))
									}
									)),
									n) : n
							},
							emit(...e) {
									const t = this;
									if (!t.eventsListeners || t.destroyed)
											return t;
									if (!t.eventsListeners)
											return t;
									let n, i, r;
									"string" == typeof e[0] || Array.isArray(e[0]) ? (n = e[0],
									i = e.slice(1, e.length),
									r = t) : (n = e[0].events,
									i = e[0].data,
									r = e[0].context || t),
									i.unshift(r);
									return (Array.isArray(n) ? n : n.split(" ")).forEach((e=>{
											t.eventsAnyListeners && t.eventsAnyListeners.length && t.eventsAnyListeners.forEach((t=>{
													t.apply(r, [e, ...i])
											}
											)),
											t.eventsListeners && t.eventsListeners[e] && t.eventsListeners[e].forEach((e=>{
													e.apply(r, i)
											}
											))
									}
									)),
									t
							}
					};
					const u = {
							updateSize: function() {
									const e = this;
									let t, n;
									const i = e.$el;
									t = void 0 !== e.params.width && null !== e.params.width ? e.params.width : i[0].clientWidth,
									n = void 0 !== e.params.height && null !== e.params.height ? e.params.height : i[0].clientHeight,
									0 === t && e.isHorizontal() || 0 === n && e.isVertical() || (t = t - parseInt(i.css("padding-left") || 0, 10) - parseInt(i.css("padding-right") || 0, 10),
									n = n - parseInt(i.css("padding-top") || 0, 10) - parseInt(i.css("padding-bottom") || 0, 10),
									Number.isNaN(t) && (t = 0),
									Number.isNaN(n) && (n = 0),
									Object.assign(e, {
											width: t,
											height: n,
											size: e.isHorizontal() ? t : n
									}))
							},
							updateSlides: function() {
									const e = this;
									function getDirectionLabel(t) {
											return e.isHorizontal() ? t : {
													width: "height",
													"margin-top": "margin-left",
													"margin-bottom ": "margin-right",
													"margin-left": "margin-top",
													"margin-right": "margin-bottom",
													"padding-left": "padding-top",
													"padding-right": "padding-bottom",
													marginRight: "marginBottom"
											}[t]
									}
									function getDirectionPropertyValue(e, t) {
											return parseFloat(e.getPropertyValue(getDirectionLabel(t)) || 0)
									}
									const t = e.params
										, {$wrapperEl: n, size: i, rtlTranslate: r, wrongRTL: o} = e
										, s = e.virtual && t.virtual.enabled
										, a = s ? e.virtual.slides.length : e.slides.length
										, l = n.children(`.${e.params.slideClass}`)
										, c = s ? e.virtual.slides.length : l.length;
									let d = [];
									const p = []
										, u = [];
									let h = t.slidesOffsetBefore;
									"function" == typeof h && (h = t.slidesOffsetBefore.call(e));
									let m = t.slidesOffsetAfter;
									"function" == typeof m && (m = t.slidesOffsetAfter.call(e));
									const g = e.snapGrid.length
										, _ = e.slidesGrid.length;
									let f = t.spaceBetween
										, y = -h
										, v = 0
										, b = 0;
									if (void 0 === i)
											return;
									"string" == typeof f && f.indexOf("%") >= 0 && (f = parseFloat(f.replace("%", "")) / 100 * i),
									e.virtualSize = -f,
									r ? l.css({
											marginLeft: "",
											marginBottom: "",
											marginTop: ""
									}) : l.css({
											marginRight: "",
											marginBottom: "",
											marginTop: ""
									}),
									t.centeredSlides && t.cssMode && (setCSSProperty(e.wrapperEl, "--swiper-centered-offset-before", ""),
									setCSSProperty(e.wrapperEl, "--swiper-centered-offset-after", ""));
									const S = t.grid && t.grid.rows > 1 && e.grid;
									let C;
									S && e.grid.initSlides(c);
									const E = "auto" === t.slidesPerView && t.breakpoints && Object.keys(t.breakpoints).filter((e=>void 0 !== t.breakpoints[e].slidesPerView)).length > 0;
									for (let n = 0; n < c; n += 1) {
											C = 0;
											const r = l.eq(n);
											if (S && e.grid.updateSlide(n, r, c, getDirectionLabel),
											"none" !== r.css("display")) {
													if ("auto" === t.slidesPerView) {
															E && (l[n].style[getDirectionLabel("width")] = "");
															const i = getComputedStyle(r[0])
																, o = r[0].style.transform
																, s = r[0].style.webkitTransform;
															if (o && (r[0].style.transform = "none"),
															s && (r[0].style.webkitTransform = "none"),
															t.roundLengths)
																	C = e.isHorizontal() ? r.outerWidth(!0) : r.outerHeight(!0);
															else {
																	const e = getDirectionPropertyValue(i, "width")
																		, t = getDirectionPropertyValue(i, "padding-left")
																		, n = getDirectionPropertyValue(i, "padding-right")
																		, o = getDirectionPropertyValue(i, "margin-left")
																		, s = getDirectionPropertyValue(i, "margin-right")
																		, a = i.getPropertyValue("box-sizing");
																	if (a && "border-box" === a)
																			C = e + o + s;
																	else {
																			const {clientWidth: i, offsetWidth: a} = r[0];
																			C = e + t + n + o + s + (a - i)
																	}
															}
															o && (r[0].style.transform = o),
															s && (r[0].style.webkitTransform = s),
															t.roundLengths && (C = Math.floor(C))
													} else
															C = (i - (t.slidesPerView - 1) * f) / t.slidesPerView,
															t.roundLengths && (C = Math.floor(C)),
															l[n] && (l[n].style[getDirectionLabel("width")] = `${C}px`);
													l[n] && (l[n].swiperSlideSize = C),
													u.push(C),
													t.centeredSlides ? (y = y + C / 2 + v / 2 + f,
													0 === v && 0 !== n && (y = y - i / 2 - f),
													0 === n && (y = y - i / 2 - f),
													Math.abs(y) < .001 && (y = 0),
													t.roundLengths && (y = Math.floor(y)),
													b % t.slidesPerGroup == 0 && d.push(y),
													p.push(y)) : (t.roundLengths && (y = Math.floor(y)),
													(b - Math.min(e.params.slidesPerGroupSkip, b)) % e.params.slidesPerGroup == 0 && d.push(y),
													p.push(y),
													y = y + C + f),
													e.virtualSize += C + f,
													v = C,
													b += 1
											}
									}
									if (e.virtualSize = Math.max(e.virtualSize, i) + m,
									r && o && ("slide" === t.effect || "coverflow" === t.effect) && n.css({
											width: `${e.virtualSize + t.spaceBetween}px`
									}),
									t.setWrapperSize && n.css({
											[getDirectionLabel("width")]: `${e.virtualSize + t.spaceBetween}px`
									}),
									S && e.grid.updateWrapperSize(C, d, getDirectionLabel),
									!t.centeredSlides) {
											const n = [];
											for (let r = 0; r < d.length; r += 1) {
													let o = d[r];
													t.roundLengths && (o = Math.floor(o)),
													d[r] <= e.virtualSize - i && n.push(o)
											}
											d = n,
											Math.floor(e.virtualSize - i) - Math.floor(d[d.length - 1]) > 1 && d.push(e.virtualSize - i)
									}
									if (0 === d.length && (d = [0]),
									0 !== t.spaceBetween) {
											const n = e.isHorizontal() && r ? "marginLeft" : getDirectionLabel("marginRight");
											l.filter(((e,n)=>!t.cssMode || n !== l.length - 1)).css({
													[n]: `${f}px`
											})
									}
									if (t.centeredSlides && t.centeredSlidesBounds) {
											let e = 0;
											u.forEach((n=>{
													e += n + (t.spaceBetween ? t.spaceBetween : 0)
											}
											)),
											e -= t.spaceBetween;
											const n = e - i;
											d = d.map((e=>e < 0 ? -h : e > n ? n + m : e))
									}
									if (t.centerInsufficientSlides) {
											let e = 0;
											if (u.forEach((n=>{
													e += n + (t.spaceBetween ? t.spaceBetween : 0)
											}
											)),
											e -= t.spaceBetween,
											e < i) {
													const t = (i - e) / 2;
													d.forEach(((e,n)=>{
															d[n] = e - t
													}
													)),
													p.forEach(((e,n)=>{
															p[n] = e + t
													}
													))
											}
									}
									if (Object.assign(e, {
											slides: l,
											snapGrid: d,
											slidesGrid: p,
											slidesSizesGrid: u
									}),
									t.centeredSlides && t.cssMode && !t.centeredSlidesBounds) {
											setCSSProperty(e.wrapperEl, "--swiper-centered-offset-before", -d[0] + "px"),
											setCSSProperty(e.wrapperEl, "--swiper-centered-offset-after", e.size / 2 - u[u.length - 1] / 2 + "px");
											const t = -e.snapGrid[0]
												, n = -e.slidesGrid[0];
											e.snapGrid = e.snapGrid.map((e=>e + t)),
											e.slidesGrid = e.slidesGrid.map((e=>e + n))
									}
									if (c !== a && e.emit("slidesLengthChange"),
									d.length !== g && (e.params.watchOverflow && e.checkOverflow(),
									e.emit("snapGridLengthChange")),
									p.length !== _ && e.emit("slidesGridLengthChange"),
									t.watchSlidesProgress && e.updateSlidesOffset(),
									!(s || t.cssMode || "slide" !== t.effect && "fade" !== t.effect)) {
											const n = `${t.containerModifierClass}backface-hidden`
												, i = e.$el.hasClass(n);
											c <= t.maxBackfaceHiddenSlides ? i || e.$el.addClass(n) : i && e.$el.removeClass(n)
									}
							},
							updateAutoHeight: function(e) {
									const t = this
										, n = []
										, i = t.virtual && t.params.virtual.enabled;
									let r, o = 0;
									"number" == typeof e ? t.setTransition(e) : !0 === e && t.setTransition(t.params.speed);
									const getSlideByIndex = e=>i ? t.slides.filter((t=>parseInt(t.getAttribute("data-swiper-slide-index"), 10) === e))[0] : t.slides.eq(e)[0];
									if ("auto" !== t.params.slidesPerView && t.params.slidesPerView > 1)
											if (t.params.centeredSlides)
													(t.visibleSlides || a([])).each((e=>{
															n.push(e)
													}
													));
											else
													for (r = 0; r < Math.ceil(t.params.slidesPerView); r += 1) {
															const e = t.activeIndex + r;
															if (e > t.slides.length && !i)
																	break;
															n.push(getSlideByIndex(e))
													}
									else
											n.push(getSlideByIndex(t.activeIndex));
									for (r = 0; r < n.length; r += 1)
											if (void 0 !== n[r]) {
													const e = n[r].offsetHeight;
													o = e > o ? e : o
											}
									(o || 0 === o) && t.$wrapperEl.css("height", `${o}px`)
							},
							updateSlidesOffset: function() {
									const e = this
										, t = e.slides;
									for (let n = 0; n < t.length; n += 1)
											t[n].swiperSlideOffset = e.isHorizontal() ? t[n].offsetLeft : t[n].offsetTop
							},
							updateSlidesProgress: function(e=this && this.translate || 0) {
									const t = this
										, n = t.params
										, {slides: i, rtlTranslate: r, snapGrid: o} = t;
									if (0 === i.length)
											return;
									void 0 === i[0].swiperSlideOffset && t.updateSlidesOffset();
									let s = -e;
									r && (s = e),
									i.removeClass(n.slideVisibleClass),
									t.visibleSlidesIndexes = [],
									t.visibleSlides = [];
									for (let e = 0; e < i.length; e += 1) {
											const a = i[e];
											let l = a.swiperSlideOffset;
											n.cssMode && n.centeredSlides && (l -= i[0].swiperSlideOffset);
											const c = (s + (n.centeredSlides ? t.minTranslate() : 0) - l) / (a.swiperSlideSize + n.spaceBetween)
												, d = (s - o[0] + (n.centeredSlides ? t.minTranslate() : 0) - l) / (a.swiperSlideSize + n.spaceBetween)
												, p = -(s - l)
												, u = p + t.slidesSizesGrid[e];
											(p >= 0 && p < t.size - 1 || u > 1 && u <= t.size || p <= 0 && u >= t.size) && (t.visibleSlides.push(a),
											t.visibleSlidesIndexes.push(e),
											i.eq(e).addClass(n.slideVisibleClass)),
											a.progress = r ? -c : c,
											a.originalProgress = r ? -d : d
									}
									t.visibleSlides = a(t.visibleSlides)
							},
							updateProgress: function(e) {
									const t = this;
									if (void 0 === e) {
											const n = t.rtlTranslate ? -1 : 1;
											e = t && t.translate && t.translate * n || 0
									}
									const n = t.params
										, i = t.maxTranslate() - t.minTranslate();
									let {progress: r, isBeginning: o, isEnd: s} = t;
									const a = o
										, l = s;
									0 === i ? (r = 0,
									o = !0,
									s = !0) : (r = (e - t.minTranslate()) / i,
									o = r <= 0,
									s = r >= 1),
									Object.assign(t, {
											progress: r,
											isBeginning: o,
											isEnd: s
									}),
									(n.watchSlidesProgress || n.centeredSlides && n.autoHeight) && t.updateSlidesProgress(e),
									o && !a && t.emit("reachBeginning toEdge"),
									s && !l && t.emit("reachEnd toEdge"),
									(a && !o || l && !s) && t.emit("fromEdge"),
									t.emit("progress", r)
							},
							updateSlidesClasses: function() {
									const e = this
										, {slides: t, params: n, $wrapperEl: i, activeIndex: r, realIndex: o} = e
										, s = e.virtual && n.virtual.enabled;
									let a;
									t.removeClass(`${n.slideActiveClass} ${n.slideNextClass} ${n.slidePrevClass} ${n.slideDuplicateActiveClass} ${n.slideDuplicateNextClass} ${n.slideDuplicatePrevClass}`),
									a = s ? e.$wrapperEl.find(`.${n.slideClass}[data-swiper-slide-index="${r}"]`) : t.eq(r),
									a.addClass(n.slideActiveClass),
									n.loop && (a.hasClass(n.slideDuplicateClass) ? i.children(`.${n.slideClass}:not(.${n.slideDuplicateClass})[data-swiper-slide-index="${o}"]`).addClass(n.slideDuplicateActiveClass) : i.children(`.${n.slideClass}.${n.slideDuplicateClass}[data-swiper-slide-index="${o}"]`).addClass(n.slideDuplicateActiveClass));
									let l = a.nextAll(`.${n.slideClass}`).eq(0).addClass(n.slideNextClass);
									n.loop && 0 === l.length && (l = t.eq(0),
									l.addClass(n.slideNextClass));
									let c = a.prevAll(`.${n.slideClass}`).eq(0).addClass(n.slidePrevClass);
									n.loop && 0 === c.length && (c = t.eq(-1),
									c.addClass(n.slidePrevClass)),
									n.loop && (l.hasClass(n.slideDuplicateClass) ? i.children(`.${n.slideClass}:not(.${n.slideDuplicateClass})[data-swiper-slide-index="${l.attr("data-swiper-slide-index")}"]`).addClass(n.slideDuplicateNextClass) : i.children(`.${n.slideClass}.${n.slideDuplicateClass}[data-swiper-slide-index="${l.attr("data-swiper-slide-index")}"]`).addClass(n.slideDuplicateNextClass),
									c.hasClass(n.slideDuplicateClass) ? i.children(`.${n.slideClass}:not(.${n.slideDuplicateClass})[data-swiper-slide-index="${c.attr("data-swiper-slide-index")}"]`).addClass(n.slideDuplicatePrevClass) : i.children(`.${n.slideClass}.${n.slideDuplicateClass}[data-swiper-slide-index="${c.attr("data-swiper-slide-index")}"]`).addClass(n.slideDuplicatePrevClass)),
									e.emitSlidesClasses()
							},
							updateActiveIndex: function(e) {
									const t = this
										, n = t.rtlTranslate ? t.translate : -t.translate
										, {slidesGrid: i, snapGrid: r, params: o, activeIndex: s, realIndex: a, snapIndex: l} = t;
									let c, d = e;
									if (void 0 === d) {
											for (let e = 0; e < i.length; e += 1)
													void 0 !== i[e + 1] ? n >= i[e] && n < i[e + 1] - (i[e + 1] - i[e]) / 2 ? d = e : n >= i[e] && n < i[e + 1] && (d = e + 1) : n >= i[e] && (d = e);
											o.normalizeSlideIndex && (d < 0 || void 0 === d) && (d = 0)
									}
									if (r.indexOf(n) >= 0)
											c = r.indexOf(n);
									else {
											const e = Math.min(o.slidesPerGroupSkip, d);
											c = e + Math.floor((d - e) / o.slidesPerGroup)
									}
									if (c >= r.length && (c = r.length - 1),
									d === s)
											return void (c !== l && (t.snapIndex = c,
											t.emit("snapIndexChange")));
									const p = parseInt(t.slides.eq(d).attr("data-swiper-slide-index") || d, 10);
									Object.assign(t, {
											snapIndex: c,
											realIndex: p,
											previousIndex: s,
											activeIndex: d
									}),
									t.emit("activeIndexChange"),
									t.emit("snapIndexChange"),
									a !== p && t.emit("realIndexChange"),
									(t.initialized || t.params.runCallbacksOnInit) && t.emit("slideChange")
							},
							updateClickedSlide: function(e) {
									const t = this
										, n = t.params
										, i = a(e).closest(`.${n.slideClass}`)[0];
									let r, o = !1;
									if (i)
											for (let e = 0; e < t.slides.length; e += 1)
													if (t.slides[e] === i) {
															o = !0,
															r = e;
															break
													}
									if (!i || !o)
											return t.clickedSlide = void 0,
											void (t.clickedIndex = void 0);
									t.clickedSlide = i,
									t.virtual && t.params.virtual.enabled ? t.clickedIndex = parseInt(a(i).attr("data-swiper-slide-index"), 10) : t.clickedIndex = r,
									n.slideToClickedSlide && void 0 !== t.clickedIndex && t.clickedIndex !== t.activeIndex && t.slideToClickedSlide()
							}
					};
					const h = {
							getTranslate: function(e=(this.isHorizontal() ? "x" : "y")) {
									const {params: t, rtlTranslate: n, translate: i, $wrapperEl: r} = this;
									if (t.virtualTranslate)
											return n ? -i : i;
									if (t.cssMode)
											return i;
									let o = getTranslate(r[0], e);
									return n && (o = -o),
									o || 0
							},
							setTranslate: function(e, t) {
									const n = this
										, {rtlTranslate: i, params: r, $wrapperEl: o, wrapperEl: s, progress: a} = n;
									let l, c = 0, d = 0;
									n.isHorizontal() ? c = i ? -e : e : d = e,
									r.roundLengths && (c = Math.floor(c),
									d = Math.floor(d)),
									r.cssMode ? s[n.isHorizontal() ? "scrollLeft" : "scrollTop"] = n.isHorizontal() ? -c : -d : r.virtualTranslate || o.transform(`translate3d(${c}px, ${d}px, 0px)`),
									n.previousTranslate = n.translate,
									n.translate = n.isHorizontal() ? c : d;
									const p = n.maxTranslate() - n.minTranslate();
									l = 0 === p ? 0 : (e - n.minTranslate()) / p,
									l !== a && n.updateProgress(e),
									n.emit("setTranslate", n.translate, t)
							},
							minTranslate: function() {
									return -this.snapGrid[0]
							},
							maxTranslate: function() {
									return -this.snapGrid[this.snapGrid.length - 1]
							},
							translateTo: function(e=0, t=this.params.speed, n=!0, i=!0, r) {
									const o = this
										, {params: s, wrapperEl: a} = o;
									if (o.animating && s.preventInteractionOnTransition)
											return !1;
									const l = o.minTranslate()
										, c = o.maxTranslate();
									let d;
									if (d = i && e > l ? l : i && e < c ? c : e,
									o.updateProgress(d),
									s.cssMode) {
											const e = o.isHorizontal();
											if (0 === t)
													a[e ? "scrollLeft" : "scrollTop"] = -d;
											else {
													if (!o.support.smoothScroll)
															return animateCSSModeScroll({
																	swiper: o,
																	targetPosition: -d,
																	side: e ? "left" : "top"
															}),
															!0;
													a.scrollTo({
															[e ? "left" : "top"]: -d,
															behavior: "smooth"
													})
											}
											return !0
									}
									return 0 === t ? (o.setTransition(0),
									o.setTranslate(d),
									n && (o.emit("beforeTransitionStart", t, r),
									o.emit("transitionEnd"))) : (o.setTransition(t),
									o.setTranslate(d),
									n && (o.emit("beforeTransitionStart", t, r),
									o.emit("transitionStart")),
									o.animating || (o.animating = !0,
									o.onTranslateToWrapperTransitionEnd || (o.onTranslateToWrapperTransitionEnd = function(e) {
											o && !o.destroyed && e.target === this && (o.$wrapperEl[0].removeEventListener("transitionend", o.onTranslateToWrapperTransitionEnd),
											o.$wrapperEl[0].removeEventListener("webkitTransitionEnd", o.onTranslateToWrapperTransitionEnd),
											o.onTranslateToWrapperTransitionEnd = null,
											delete o.onTranslateToWrapperTransitionEnd,
											n && o.emit("transitionEnd"))
									}
									),
									o.$wrapperEl[0].addEventListener("transitionend", o.onTranslateToWrapperTransitionEnd),
									o.$wrapperEl[0].addEventListener("webkitTransitionEnd", o.onTranslateToWrapperTransitionEnd))),
									!0
							}
					};
					function transitionEmit({swiper: e, runCallbacks: t, direction: n, step: i}) {
							const {activeIndex: r, previousIndex: o} = e;
							let s = n;
							if (s || (s = r > o ? "next" : r < o ? "prev" : "reset"),
							e.emit(`transition${i}`),
							t && r !== o) {
									if ("reset" === s)
											return void e.emit(`slideResetTransition${i}`);
									e.emit(`slideChangeTransition${i}`),
									"next" === s ? e.emit(`slideNextTransition${i}`) : e.emit(`slidePrevTransition${i}`)
							}
					}
					const m = {
							slideTo: function(e=0, t=this.params.speed, n=!0, i, r) {
									if ("number" != typeof e && "string" != typeof e)
											throw new Error(`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof e}] given.`);
									if ("string" == typeof e) {
											const t = parseInt(e, 10);
											if (!isFinite(t))
													throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${e}] given.`);
											e = t
									}
									const o = this;
									let s = e;
									s < 0 && (s = 0);
									const {params: a, snapGrid: l, slidesGrid: c, previousIndex: d, activeIndex: p, rtlTranslate: u, wrapperEl: h, enabled: m} = o;
									if (o.animating && a.preventInteractionOnTransition || !m && !i && !r)
											return !1;
									const g = Math.min(o.params.slidesPerGroupSkip, s);
									let _ = g + Math.floor((s - g) / o.params.slidesPerGroup);
									_ >= l.length && (_ = l.length - 1);
									const f = -l[_];
									if (a.normalizeSlideIndex)
											for (let e = 0; e < c.length; e += 1) {
													const t = -Math.floor(100 * f)
														, n = Math.floor(100 * c[e])
														, i = Math.floor(100 * c[e + 1]);
													void 0 !== c[e + 1] ? t >= n && t < i - (i - n) / 2 ? s = e : t >= n && t < i && (s = e + 1) : t >= n && (s = e)
											}
									if (o.initialized && s !== p) {
											if (!o.allowSlideNext && f < o.translate && f < o.minTranslate())
													return !1;
											if (!o.allowSlidePrev && f > o.translate && f > o.maxTranslate() && (p || 0) !== s)
													return !1
									}
									let y;
									if (s !== (d || 0) && n && o.emit("beforeSlideChangeStart"),
									o.updateProgress(f),
									y = s > p ? "next" : s < p ? "prev" : "reset",
									u && -f === o.translate || !u && f === o.translate)
											return o.updateActiveIndex(s),
											a.autoHeight && o.updateAutoHeight(),
											o.updateSlidesClasses(),
											"slide" !== a.effect && o.setTranslate(f),
											"reset" !== y && (o.transitionStart(n, y),
											o.transitionEnd(n, y)),
											!1;
									if (a.cssMode) {
											const e = o.isHorizontal()
												, n = u ? f : -f;
											if (0 === t) {
													const t = o.virtual && o.params.virtual.enabled;
													t && (o.wrapperEl.style.scrollSnapType = "none",
													o._immediateVirtual = !0),
													h[e ? "scrollLeft" : "scrollTop"] = n,
													t && requestAnimationFrame((()=>{
															o.wrapperEl.style.scrollSnapType = "",
															o._swiperImmediateVirtual = !1
													}
													))
											} else {
													if (!o.support.smoothScroll)
															return animateCSSModeScroll({
																	swiper: o,
																	targetPosition: n,
																	side: e ? "left" : "top"
															}),
															!0;
													h.scrollTo({
															[e ? "left" : "top"]: n,
															behavior: "smooth"
													})
											}
											return !0
									}
									return o.setTransition(t),
									o.setTranslate(f),
									o.updateActiveIndex(s),
									o.updateSlidesClasses(),
									o.emit("beforeTransitionStart", t, i),
									o.transitionStart(n, y),
									0 === t ? o.transitionEnd(n, y) : o.animating || (o.animating = !0,
									o.onSlideToWrapperTransitionEnd || (o.onSlideToWrapperTransitionEnd = function(e) {
											o && !o.destroyed && e.target === this && (o.$wrapperEl[0].removeEventListener("transitionend", o.onSlideToWrapperTransitionEnd),
											o.$wrapperEl[0].removeEventListener("webkitTransitionEnd", o.onSlideToWrapperTransitionEnd),
											o.onSlideToWrapperTransitionEnd = null,
											delete o.onSlideToWrapperTransitionEnd,
											o.transitionEnd(n, y))
									}
									),
									o.$wrapperEl[0].addEventListener("transitionend", o.onSlideToWrapperTransitionEnd),
									o.$wrapperEl[0].addEventListener("webkitTransitionEnd", o.onSlideToWrapperTransitionEnd)),
									!0
							},
							slideToLoop: function(e=0, t=this.params.speed, n=!0, i) {
									if ("string" == typeof e) {
											const t = parseInt(e, 10);
											if (!isFinite(t))
													throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${e}] given.`);
											e = t
									}
									const r = this;
									let o = e;
									return r.params.loop && (o += r.loopedSlides),
									r.slideTo(o, t, n, i)
							},
							slideNext: function(e=this.params.speed, t=!0, n) {
									const i = this
										, {animating: r, enabled: o, params: s} = i;
									if (!o)
											return i;
									let a = s.slidesPerGroup;
									"auto" === s.slidesPerView && 1 === s.slidesPerGroup && s.slidesPerGroupAuto && (a = Math.max(i.slidesPerViewDynamic("current", !0), 1));
									const l = i.activeIndex < s.slidesPerGroupSkip ? 1 : a;
									if (s.loop) {
											if (r && s.loopPreventsSlide)
													return !1;
											i.loopFix(),
											i._clientLeft = i.$wrapperEl[0].clientLeft
									}
									return s.rewind && i.isEnd ? i.slideTo(0, e, t, n) : i.slideTo(i.activeIndex + l, e, t, n)
							},
							slidePrev: function(e=this.params.speed, t=!0, n) {
									const i = this
										, {params: r, animating: o, snapGrid: s, slidesGrid: a, rtlTranslate: l, enabled: c} = i;
									if (!c)
											return i;
									if (r.loop) {
											if (o && r.loopPreventsSlide)
													return !1;
											i.loopFix(),
											i._clientLeft = i.$wrapperEl[0].clientLeft
									}
									function normalize(e) {
											return e < 0 ? -Math.floor(Math.abs(e)) : Math.floor(e)
									}
									const d = normalize(l ? i.translate : -i.translate)
										, p = s.map((e=>normalize(e)));
									let u = s[p.indexOf(d) - 1];
									if (void 0 === u && r.cssMode) {
											let e;
											s.forEach(((t,n)=>{
													d >= t && (e = n)
											}
											)),
											void 0 !== e && (u = s[e > 0 ? e - 1 : e])
									}
									let h = 0;
									if (void 0 !== u && (h = a.indexOf(u),
									h < 0 && (h = i.activeIndex - 1),
									"auto" === r.slidesPerView && 1 === r.slidesPerGroup && r.slidesPerGroupAuto && (h = h - i.slidesPerViewDynamic("previous", !0) + 1,
									h = Math.max(h, 0))),
									r.rewind && i.isBeginning) {
											const r = i.params.virtual && i.params.virtual.enabled && i.virtual ? i.virtual.slides.length - 1 : i.slides.length - 1;
											return i.slideTo(r, e, t, n)
									}
									return i.slideTo(h, e, t, n)
							},
							slideReset: function(e=this.params.speed, t=!0, n) {
									return this.slideTo(this.activeIndex, e, t, n)
							},
							slideToClosest: function(e=this.params.speed, t=!0, n, i=.5) {
									const r = this;
									let o = r.activeIndex;
									const s = Math.min(r.params.slidesPerGroupSkip, o)
										, a = s + Math.floor((o - s) / r.params.slidesPerGroup)
										, l = r.rtlTranslate ? r.translate : -r.translate;
									if (l >= r.snapGrid[a]) {
											const e = r.snapGrid[a];
											l - e > (r.snapGrid[a + 1] - e) * i && (o += r.params.slidesPerGroup)
									} else {
											const e = r.snapGrid[a - 1];
											l - e <= (r.snapGrid[a] - e) * i && (o -= r.params.slidesPerGroup)
									}
									return o = Math.max(o, 0),
									o = Math.min(o, r.slidesGrid.length - 1),
									r.slideTo(o, e, t, n)
							},
							slideToClickedSlide: function() {
									const e = this
										, {params: t, $wrapperEl: n} = e
										, i = "auto" === t.slidesPerView ? e.slidesPerViewDynamic() : t.slidesPerView;
									let r, o = e.clickedIndex;
									if (t.loop) {
											if (e.animating)
													return;
											r = parseInt(a(e.clickedSlide).attr("data-swiper-slide-index"), 10),
											t.centeredSlides ? o < e.loopedSlides - i / 2 || o > e.slides.length - e.loopedSlides + i / 2 ? (e.loopFix(),
											o = n.children(`.${t.slideClass}[data-swiper-slide-index="${r}"]:not(.${t.slideDuplicateClass})`).eq(0).index(),
											nextTick((()=>{
													e.slideTo(o)
											}
											))) : e.slideTo(o) : o > e.slides.length - i ? (e.loopFix(),
											o = n.children(`.${t.slideClass}[data-swiper-slide-index="${r}"]:not(.${t.slideDuplicateClass})`).eq(0).index(),
											nextTick((()=>{
													e.slideTo(o)
											}
											))) : e.slideTo(o)
									} else
											e.slideTo(o)
							}
					};
					const g = {
							loopCreate: function() {
									const e = this
										, t = getDocument()
										, {params: n, $wrapperEl: i} = e
										, r = i.children().length > 0 ? a(i.children()[0].parentNode) : i;
									r.children(`.${n.slideClass}.${n.slideDuplicateClass}`).remove();
									let o = r.children(`.${n.slideClass}`);
									if (n.loopFillGroupWithBlank) {
											const e = n.slidesPerGroup - o.length % n.slidesPerGroup;
											if (e !== n.slidesPerGroup) {
													for (let i = 0; i < e; i += 1) {
															const e = a(t.createElement("div")).addClass(`${n.slideClass} ${n.slideBlankClass}`);
															r.append(e)
													}
													o = r.children(`.${n.slideClass}`)
											}
									}
									"auto" !== n.slidesPerView || n.loopedSlides || (n.loopedSlides = o.length),
									e.loopedSlides = Math.ceil(parseFloat(n.loopedSlides || n.slidesPerView, 10)),
									e.loopedSlides += n.loopAdditionalSlides,
									e.loopedSlides > o.length && e.params.loopedSlidesLimit && (e.loopedSlides = o.length);
									const s = []
										, l = [];
									o.each(((e,t)=>{
											a(e).attr("data-swiper-slide-index", t)
									}
									));
									for (let t = 0; t < e.loopedSlides; t += 1) {
											const e = t - Math.floor(t / o.length) * o.length;
											l.push(o.eq(e)[0]),
											s.unshift(o.eq(o.length - e - 1)[0])
									}
									for (let e = 0; e < l.length; e += 1)
											r.append(a(l[e].cloneNode(!0)).addClass(n.slideDuplicateClass));
									for (let e = s.length - 1; e >= 0; e -= 1)
											r.prepend(a(s[e].cloneNode(!0)).addClass(n.slideDuplicateClass))
							},
							loopFix: function() {
									const e = this;
									e.emit("beforeLoopFix");
									const {activeIndex: t, slides: n, loopedSlides: i, allowSlidePrev: r, allowSlideNext: o, snapGrid: s, rtlTranslate: a} = e;
									let l;
									e.allowSlidePrev = !0,
									e.allowSlideNext = !0;
									const c = -s[t] - e.getTranslate();
									if (t < i) {
											l = n.length - 3 * i + t,
											l += i;
											e.slideTo(l, 0, !1, !0) && 0 !== c && e.setTranslate((a ? -e.translate : e.translate) - c)
									} else if (t >= n.length - i) {
											l = -n.length + t + i,
											l += i;
											e.slideTo(l, 0, !1, !0) && 0 !== c && e.setTranslate((a ? -e.translate : e.translate) - c)
									}
									e.allowSlidePrev = r,
									e.allowSlideNext = o,
									e.emit("loopFix")
							},
							loopDestroy: function() {
									const {$wrapperEl: e, params: t, slides: n} = this;
									e.children(`.${t.slideClass}.${t.slideDuplicateClass},.${t.slideClass}.${t.slideBlankClass}`).remove(),
									n.removeAttr("data-swiper-slide-index")
							}
					};
					function onTouchStart(e) {
							const t = this
								, n = getDocument()
								, i = ssr_window_esm_getWindow()
								, r = t.touchEventsData
								, {params: o, touches: s, enabled: l} = t;
							if (!l)
									return;
							if (t.animating && o.preventInteractionOnTransition)
									return;
							!t.animating && o.cssMode && o.loop && t.loopFix();
							let c = e;
							c.originalEvent && (c = c.originalEvent);
							let d = a(c.target);
							if ("wrapper" === o.touchEventsTarget && !d.closest(t.wrapperEl).length)
									return;
							if (r.isTouchEvent = "touchstart" === c.type,
							!r.isTouchEvent && "which"in c && 3 === c.which)
									return;
							if (!r.isTouchEvent && "button"in c && c.button > 0)
									return;
							if (r.isTouched && r.isMoved)
									return;
							const p = !!o.noSwipingClass && "" !== o.noSwipingClass
								, u = e.composedPath ? e.composedPath() : e.path;
							p && c.target && c.target.shadowRoot && u && (d = a(u[0]));
							const h = o.noSwipingSelector ? o.noSwipingSelector : `.${o.noSwipingClass}`
								, m = !(!c.target || !c.target.shadowRoot);
							if (o.noSwiping && (m ? function(e, t=this) {
									return function __closestFrom(t) {
											if (!t || t === getDocument() || t === ssr_window_esm_getWindow())
													return null;
											t.assignedSlot && (t = t.assignedSlot);
											const n = t.closest(e);
											return n || t.getRootNode ? n || __closestFrom(t.getRootNode().host) : null
									}(t)
							}(h, d[0]) : d.closest(h)[0]))
									return void (t.allowClick = !0);
							if (o.swipeHandler && !d.closest(o.swipeHandler)[0])
									return;
							s.currentX = "touchstart" === c.type ? c.targetTouches[0].pageX : c.pageX,
							s.currentY = "touchstart" === c.type ? c.targetTouches[0].pageY : c.pageY;
							const g = s.currentX
								, _ = s.currentY
								, f = o.edgeSwipeDetection || o.iOSEdgeSwipeDetection
								, y = o.edgeSwipeThreshold || o.iOSEdgeSwipeThreshold;
							if (f && (g <= y || g >= i.innerWidth - y)) {
									if ("prevent" !== f)
											return;
									e.preventDefault()
							}
							if (Object.assign(r, {
									isTouched: !0,
									isMoved: !1,
									allowTouchCallbacks: !0,
									isScrolling: void 0,
									startMoving: void 0
							}),
							s.startX = g,
							s.startY = _,
							r.touchStartTime = now(),
							t.allowClick = !0,
							t.updateSize(),
							t.swipeDirection = void 0,
							o.threshold > 0 && (r.allowThresholdMove = !1),
							"touchstart" !== c.type) {
									let e = !0;
									d.is(r.focusableElements) && (e = !1,
									"SELECT" === d[0].nodeName && (r.isTouched = !1)),
									n.activeElement && a(n.activeElement).is(r.focusableElements) && n.activeElement !== d[0] && n.activeElement.blur();
									const i = e && t.allowTouchMove && o.touchStartPreventDefault;
									!o.touchStartForcePreventDefault && !i || d[0].isContentEditable || c.preventDefault()
							}
							t.params.freeMode && t.params.freeMode.enabled && t.freeMode && t.animating && !o.cssMode && t.freeMode.onTouchStart(),
							t.emit("touchStart", c)
					}
					function onTouchMove(e) {
							const t = getDocument()
								, n = this
								, i = n.touchEventsData
								, {params: r, touches: o, rtlTranslate: s, enabled: l} = n;
							if (!l)
									return;
							let c = e;
							if (c.originalEvent && (c = c.originalEvent),
							!i.isTouched)
									return void (i.startMoving && i.isScrolling && n.emit("touchMoveOpposite", c));
							if (i.isTouchEvent && "touchmove" !== c.type)
									return;
							const d = "touchmove" === c.type && c.targetTouches && (c.targetTouches[0] || c.changedTouches[0])
								, p = "touchmove" === c.type ? d.pageX : c.pageX
								, u = "touchmove" === c.type ? d.pageY : c.pageY;
							if (c.preventedByNestedSwiper)
									return o.startX = p,
									void (o.startY = u);
							if (!n.allowTouchMove)
									return a(c.target).is(i.focusableElements) || (n.allowClick = !1),
									void (i.isTouched && (Object.assign(o, {
											startX: p,
											startY: u,
											currentX: p,
											currentY: u
									}),
									i.touchStartTime = now()));
							if (i.isTouchEvent && r.touchReleaseOnEdges && !r.loop)
									if (n.isVertical()) {
											if (u < o.startY && n.translate <= n.maxTranslate() || u > o.startY && n.translate >= n.minTranslate())
													return i.isTouched = !1,
													void (i.isMoved = !1)
									} else if (p < o.startX && n.translate <= n.maxTranslate() || p > o.startX && n.translate >= n.minTranslate())
											return;
							if (i.isTouchEvent && t.activeElement && c.target === t.activeElement && a(c.target).is(i.focusableElements))
									return i.isMoved = !0,
									void (n.allowClick = !1);
							if (i.allowTouchCallbacks && n.emit("touchMove", c),
							c.targetTouches && c.targetTouches.length > 1)
									return;
							o.currentX = p,
							o.currentY = u;
							const h = o.currentX - o.startX
								, m = o.currentY - o.startY;
							if (n.params.threshold && Math.sqrt(h ** 2 + m ** 2) < n.params.threshold)
									return;
							if (void 0 === i.isScrolling) {
									let e;
									n.isHorizontal() && o.currentY === o.startY || n.isVertical() && o.currentX === o.startX ? i.isScrolling = !1 : h * h + m * m >= 25 && (e = 180 * Math.atan2(Math.abs(m), Math.abs(h)) / Math.PI,
									i.isScrolling = n.isHorizontal() ? e > r.touchAngle : 90 - e > r.touchAngle)
							}
							if (i.isScrolling && n.emit("touchMoveOpposite", c),
							void 0 === i.startMoving && (o.currentX === o.startX && o.currentY === o.startY || (i.startMoving = !0)),
							i.isScrolling)
									return void (i.isTouched = !1);
							if (!i.startMoving)
									return;
							n.allowClick = !1,
							!r.cssMode && c.cancelable && c.preventDefault(),
							r.touchMoveStopPropagation && !r.nested && c.stopPropagation(),
							i.isMoved || (r.loop && !r.cssMode && n.loopFix(),
							i.startTranslate = n.getTranslate(),
							n.setTransition(0),
							n.animating && n.$wrapperEl.trigger("webkitTransitionEnd transitionend"),
							i.allowMomentumBounce = !1,
							!r.grabCursor || !0 !== n.allowSlideNext && !0 !== n.allowSlidePrev || n.setGrabCursor(!0),
							n.emit("sliderFirstMove", c)),
							n.emit("sliderMove", c),
							i.isMoved = !0;
							let g = n.isHorizontal() ? h : m;
							o.diff = g,
							g *= r.touchRatio,
							s && (g = -g),
							n.swipeDirection = g > 0 ? "prev" : "next",
							i.currentTranslate = g + i.startTranslate;
							let _ = !0
								, f = r.resistanceRatio;
							if (r.touchReleaseOnEdges && (f = 0),
							g > 0 && i.currentTranslate > n.minTranslate() ? (_ = !1,
							r.resistance && (i.currentTranslate = n.minTranslate() - 1 + (-n.minTranslate() + i.startTranslate + g) ** f)) : g < 0 && i.currentTranslate < n.maxTranslate() && (_ = !1,
							r.resistance && (i.currentTranslate = n.maxTranslate() + 1 - (n.maxTranslate() - i.startTranslate - g) ** f)),
							_ && (c.preventedByNestedSwiper = !0),
							!n.allowSlideNext && "next" === n.swipeDirection && i.currentTranslate < i.startTranslate && (i.currentTranslate = i.startTranslate),
							!n.allowSlidePrev && "prev" === n.swipeDirection && i.currentTranslate > i.startTranslate && (i.currentTranslate = i.startTranslate),
							n.allowSlidePrev || n.allowSlideNext || (i.currentTranslate = i.startTranslate),
							r.threshold > 0) {
									if (!(Math.abs(g) > r.threshold || i.allowThresholdMove))
											return void (i.currentTranslate = i.startTranslate);
									if (!i.allowThresholdMove)
											return i.allowThresholdMove = !0,
											o.startX = o.currentX,
											o.startY = o.currentY,
											i.currentTranslate = i.startTranslate,
											void (o.diff = n.isHorizontal() ? o.currentX - o.startX : o.currentY - o.startY)
							}
							r.followFinger && !r.cssMode && ((r.freeMode && r.freeMode.enabled && n.freeMode || r.watchSlidesProgress) && (n.updateActiveIndex(),
							n.updateSlidesClasses()),
							n.params.freeMode && r.freeMode.enabled && n.freeMode && n.freeMode.onTouchMove(),
							n.updateProgress(i.currentTranslate),
							n.setTranslate(i.currentTranslate))
					}
					function onTouchEnd(e) {
							const t = this
								, n = t.touchEventsData
								, {params: i, touches: r, rtlTranslate: o, slidesGrid: s, enabled: a} = t;
							if (!a)
									return;
							let l = e;
							if (l.originalEvent && (l = l.originalEvent),
							n.allowTouchCallbacks && t.emit("touchEnd", l),
							n.allowTouchCallbacks = !1,
							!n.isTouched)
									return n.isMoved && i.grabCursor && t.setGrabCursor(!1),
									n.isMoved = !1,
									void (n.startMoving = !1);
							i.grabCursor && n.isMoved && n.isTouched && (!0 === t.allowSlideNext || !0 === t.allowSlidePrev) && t.setGrabCursor(!1);
							const c = now()
								, d = c - n.touchStartTime;
							if (t.allowClick) {
									const e = l.path || l.composedPath && l.composedPath();
									t.updateClickedSlide(e && e[0] || l.target),
									t.emit("tap click", l),
									d < 300 && c - n.lastClickTime < 300 && t.emit("doubleTap doubleClick", l)
							}
							if (n.lastClickTime = now(),
							nextTick((()=>{
									t.destroyed || (t.allowClick = !0)
							}
							)),
							!n.isTouched || !n.isMoved || !t.swipeDirection || 0 === r.diff || n.currentTranslate === n.startTranslate)
									return n.isTouched = !1,
									n.isMoved = !1,
									void (n.startMoving = !1);
							let p;
							if (n.isTouched = !1,
							n.isMoved = !1,
							n.startMoving = !1,
							p = i.followFinger ? o ? t.translate : -t.translate : -n.currentTranslate,
							i.cssMode)
									return;
							if (t.params.freeMode && i.freeMode.enabled)
									return void t.freeMode.onTouchEnd({
											currentPos: p
									});
							let u = 0
								, h = t.slidesSizesGrid[0];
							for (let e = 0; e < s.length; e += e < i.slidesPerGroupSkip ? 1 : i.slidesPerGroup) {
									const t = e < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;
									void 0 !== s[e + t] ? p >= s[e] && p < s[e + t] && (u = e,
									h = s[e + t] - s[e]) : p >= s[e] && (u = e,
									h = s[s.length - 1] - s[s.length - 2])
							}
							let m = null
								, g = null;
							i.rewind && (t.isBeginning ? g = t.params.virtual && t.params.virtual.enabled && t.virtual ? t.virtual.slides.length - 1 : t.slides.length - 1 : t.isEnd && (m = 0));
							const _ = (p - s[u]) / h
								, f = u < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;
							if (d > i.longSwipesMs) {
									if (!i.longSwipes)
											return void t.slideTo(t.activeIndex);
									"next" === t.swipeDirection && (_ >= i.longSwipesRatio ? t.slideTo(i.rewind && t.isEnd ? m : u + f) : t.slideTo(u)),
									"prev" === t.swipeDirection && (_ > 1 - i.longSwipesRatio ? t.slideTo(u + f) : null !== g && _ < 0 && Math.abs(_) > i.longSwipesRatio ? t.slideTo(g) : t.slideTo(u))
							} else {
									if (!i.shortSwipes)
											return void t.slideTo(t.activeIndex);
									t.navigation && (l.target === t.navigation.nextEl || l.target === t.navigation.prevEl) ? l.target === t.navigation.nextEl ? t.slideTo(u + f) : t.slideTo(u) : ("next" === t.swipeDirection && t.slideTo(null !== m ? m : u + f),
									"prev" === t.swipeDirection && t.slideTo(null !== g ? g : u))
							}
					}
					function onResize() {
							const e = this
								, {params: t, el: n} = e;
							if (n && 0 === n.offsetWidth)
									return;
							t.breakpoints && e.setBreakpoint();
							const {allowSlideNext: i, allowSlidePrev: r, snapGrid: o} = e;
							e.allowSlideNext = !0,
							e.allowSlidePrev = !0,
							e.updateSize(),
							e.updateSlides(),
							e.updateSlidesClasses(),
							("auto" === t.slidesPerView || t.slidesPerView > 1) && e.isEnd && !e.isBeginning && !e.params.centeredSlides ? e.slideTo(e.slides.length - 1, 0, !1, !0) : e.slideTo(e.activeIndex, 0, !1, !0),
							e.autoplay && e.autoplay.running && e.autoplay.paused && e.autoplay.run(),
							e.allowSlidePrev = r,
							e.allowSlideNext = i,
							e.params.watchOverflow && o !== e.snapGrid && e.checkOverflow()
					}
					function onClick(e) {
							const t = this;
							t.enabled && (t.allowClick || (t.params.preventClicks && e.preventDefault(),
							t.params.preventClicksPropagation && t.animating && (e.stopPropagation(),
							e.stopImmediatePropagation())))
					}
					function onScroll() {
							const e = this
								, {wrapperEl: t, rtlTranslate: n, enabled: i} = e;
							if (!i)
									return;
							let r;
							e.previousTranslate = e.translate,
							e.isHorizontal() ? e.translate = -t.scrollLeft : e.translate = -t.scrollTop,
							0 === e.translate && (e.translate = 0),
							e.updateActiveIndex(),
							e.updateSlidesClasses();
							const o = e.maxTranslate() - e.minTranslate();
							r = 0 === o ? 0 : (e.translate - e.minTranslate()) / o,
							r !== e.progress && e.updateProgress(n ? -e.translate : e.translate),
							e.emit("setTranslate", e.translate, !1)
					}
					let _ = !1;
					function dummyEventListener() {}
					const events = (e,t)=>{
							const n = getDocument()
								, {params: i, touchEvents: r, el: o, wrapperEl: s, device: a, support: l} = e
								, c = !!i.nested
								, d = "on" === t ? "addEventListener" : "removeEventListener"
								, p = t;
							if (l.touch) {
									const t = !("touchstart" !== r.start || !l.passiveListener || !i.passiveListeners) && {
											passive: !0,
											capture: !1
									};
									o[d](r.start, e.onTouchStart, t),
									o[d](r.move, e.onTouchMove, l.passiveListener ? {
											passive: !1,
											capture: c
									} : c),
									o[d](r.end, e.onTouchEnd, t),
									r.cancel && o[d](r.cancel, e.onTouchEnd, t)
							} else
									o[d](r.start, e.onTouchStart, !1),
									n[d](r.move, e.onTouchMove, c),
									n[d](r.end, e.onTouchEnd, !1);
							(i.preventClicks || i.preventClicksPropagation) && o[d]("click", e.onClick, !0),
							i.cssMode && s[d]("scroll", e.onScroll),
							i.updateOnWindowResize ? e[p](a.ios || a.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", onResize, !0) : e[p]("observerUpdate", onResize, !0)
					}
					;
					const f = {
							attachEvents: function() {
									const e = this
										, t = getDocument()
										, {params: n, support: i} = e;
									e.onTouchStart = onTouchStart.bind(e),
									e.onTouchMove = onTouchMove.bind(e),
									e.onTouchEnd = onTouchEnd.bind(e),
									n.cssMode && (e.onScroll = onScroll.bind(e)),
									e.onClick = onClick.bind(e),
									i.touch && !_ && (t.addEventListener("touchstart", dummyEventListener),
									_ = !0),
									events(e, "on")
							},
							detachEvents: function() {
									events(this, "off")
							}
					}
						, isGridEnabled = (e,t)=>e.grid && t.grid && t.grid.rows > 1;
					const y = {
							setBreakpoint: function() {
									const e = this
										, {activeIndex: t, initialized: n, loopedSlides: i=0, params: r, $el: o} = e
										, s = r.breakpoints;
									if (!s || s && 0 === Object.keys(s).length)
											return;
									const a = e.getBreakpoint(s, e.params.breakpointsBase, e.el);
									if (!a || e.currentBreakpoint === a)
											return;
									const l = (a in s ? s[a] : void 0) || e.originalParams
										, c = isGridEnabled(e, r)
										, d = isGridEnabled(e, l)
										, p = r.enabled;
									c && !d ? (o.removeClass(`${r.containerModifierClass}grid ${r.containerModifierClass}grid-column`),
									e.emitContainerClasses()) : !c && d && (o.addClass(`${r.containerModifierClass}grid`),
									(l.grid.fill && "column" === l.grid.fill || !l.grid.fill && "column" === r.grid.fill) && o.addClass(`${r.containerModifierClass}grid-column`),
									e.emitContainerClasses()),
									["navigation", "pagination", "scrollbar"].forEach((t=>{
											const n = r[t] && r[t].enabled
												, i = l[t] && l[t].enabled;
											n && !i && e[t].disable(),
											!n && i && e[t].enable()
									}
									));
									const u = l.direction && l.direction !== r.direction
										, h = r.loop && (l.slidesPerView !== r.slidesPerView || u);
									u && n && e.changeDirection(),
									utils_extend(e.params, l);
									const m = e.params.enabled;
									Object.assign(e, {
											allowTouchMove: e.params.allowTouchMove,
											allowSlideNext: e.params.allowSlideNext,
											allowSlidePrev: e.params.allowSlidePrev
									}),
									p && !m ? e.disable() : !p && m && e.enable(),
									e.currentBreakpoint = a,
									e.emit("_beforeBreakpoint", l),
									h && n && (e.loopDestroy(),
									e.loopCreate(),
									e.updateSlides(),
									e.slideTo(t - i + e.loopedSlides, 0, !1)),
									e.emit("breakpoint", l)
							},
							getBreakpoint: function(e, t="window", n) {
									if (!e || "container" === t && !n)
											return;
									let i = !1;
									const r = ssr_window_esm_getWindow()
										, o = "window" === t ? r.innerHeight : n.clientHeight
										, s = Object.keys(e).map((e=>{
											if ("string" == typeof e && 0 === e.indexOf("@")) {
													const t = parseFloat(e.substr(1));
													return {
															value: o * t,
															point: e
													}
											}
											return {
													value: e,
													point: e
											}
									}
									));
									s.sort(((e,t)=>parseInt(e.value, 10) - parseInt(t.value, 10)));
									for (let e = 0; e < s.length; e += 1) {
											const {point: o, value: a} = s[e];
											"window" === t ? r.matchMedia(`(min-width: ${a}px)`).matches && (i = o) : a <= n.clientWidth && (i = o)
									}
									return i || "max"
							}
					};
					const v = {
							addClasses: function() {
									const e = this
										, {classNames: t, params: n, rtl: i, $el: r, device: o, support: s} = e
										, a = function(e, t) {
											const n = [];
											return e.forEach((e=>{
													"object" == typeof e ? Object.keys(e).forEach((i=>{
															e[i] && n.push(t + i)
													}
													)) : "string" == typeof e && n.push(t + e)
											}
											)),
											n
									}(["initialized", n.direction, {
											"pointer-events": !s.touch
									}, {
											"free-mode": e.params.freeMode && n.freeMode.enabled
									}, {
											autoheight: n.autoHeight
									}, {
											rtl: i
									}, {
											grid: n.grid && n.grid.rows > 1
									}, {
											"grid-column": n.grid && n.grid.rows > 1 && "column" === n.grid.fill
									}, {
											android: o.android
									}, {
											ios: o.ios
									}, {
											"css-mode": n.cssMode
									}, {
											centered: n.cssMode && n.centeredSlides
									}, {
											"watch-progress": n.watchSlidesProgress
									}], n.containerModifierClass);
									t.push(...a),
									r.addClass([...t].join(" ")),
									e.emitContainerClasses()
							},
							removeClasses: function() {
									const {$el: e, classNames: t} = this;
									e.removeClass(t.join(" ")),
									this.emitContainerClasses()
							}
					};
					const b = {
							init: !0,
							direction: "horizontal",
							touchEventsTarget: "wrapper",
							initialSlide: 0,
							speed: 300,
							cssMode: !1,
							updateOnWindowResize: !0,
							resizeObserver: !0,
							nested: !1,
							createElements: !1,
							enabled: !0,
							focusableElements: "input, select, option, textarea, button, video, label",
							width: null,
							height: null,
							preventInteractionOnTransition: !1,
							userAgent: null,
							url: null,
							edgeSwipeDetection: !1,
							edgeSwipeThreshold: 20,
							autoHeight: !1,
							setWrapperSize: !1,
							virtualTranslate: !1,
							effect: "slide",
							breakpoints: void 0,
							breakpointsBase: "window",
							spaceBetween: 0,
							slidesPerView: 1,
							slidesPerGroup: 1,
							slidesPerGroupSkip: 0,
							slidesPerGroupAuto: !1,
							centeredSlides: !1,
							centeredSlidesBounds: !1,
							slidesOffsetBefore: 0,
							slidesOffsetAfter: 0,
							normalizeSlideIndex: !0,
							centerInsufficientSlides: !1,
							watchOverflow: !0,
							roundLengths: !1,
							touchRatio: 1,
							touchAngle: 45,
							simulateTouch: !0,
							shortSwipes: !0,
							longSwipes: !0,
							longSwipesRatio: .5,
							longSwipesMs: 300,
							followFinger: !0,
							allowTouchMove: !0,
							threshold: 0,
							touchMoveStopPropagation: !1,
							touchStartPreventDefault: !0,
							touchStartForcePreventDefault: !1,
							touchReleaseOnEdges: !1,
							uniqueNavElements: !0,
							resistance: !0,
							resistanceRatio: .85,
							watchSlidesProgress: !1,
							grabCursor: !1,
							preventClicks: !0,
							preventClicksPropagation: !0,
							slideToClickedSlide: !1,
							preloadImages: !0,
							updateOnImagesReady: !0,
							loop: !1,
							loopAdditionalSlides: 0,
							loopedSlides: null,
							loopedSlidesLimit: !0,
							loopFillGroupWithBlank: !1,
							loopPreventsSlide: !0,
							rewind: !1,
							allowSlidePrev: !0,
							allowSlideNext: !0,
							swipeHandler: null,
							noSwiping: !0,
							noSwipingClass: "swiper-no-swiping",
							noSwipingSelector: null,
							passiveListeners: !0,
							maxBackfaceHiddenSlides: 10,
							containerModifierClass: "swiper-",
							slideClass: "swiper-slide",
							slideBlankClass: "swiper-slide-invisible-blank",
							slideActiveClass: "swiper-slide-active",
							slideDuplicateActiveClass: "swiper-slide-duplicate-active",
							slideVisibleClass: "swiper-slide-visible",
							slideDuplicateClass: "swiper-slide-duplicate",
							slideNextClass: "swiper-slide-next",
							slideDuplicateNextClass: "swiper-slide-duplicate-next",
							slidePrevClass: "swiper-slide-prev",
							slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
							wrapperClass: "swiper-wrapper",
							runCallbacksOnInit: !0,
							_emitClasses: !1
					};
					function moduleExtendParams(e, t) {
							return function(n={}) {
									const i = Object.keys(n)[0]
										, r = n[i];
									"object" == typeof r && null !== r ? (["navigation", "pagination", "scrollbar"].indexOf(i) >= 0 && !0 === e[i] && (e[i] = {
											auto: !0
									}),
									i in e && "enabled"in r ? (!0 === e[i] && (e[i] = {
											enabled: !0
									}),
									"object" != typeof e[i] || "enabled"in e[i] || (e[i].enabled = !0),
									e[i] || (e[i] = {
											enabled: !1
									}),
									utils_extend(t, n)) : utils_extend(t, n)) : utils_extend(t, n)
							}
					}
					const S = {
							eventsEmitter: p,
							update: u,
							translate: h,
							transition: {
									setTransition: function(e, t) {
											const n = this;
											n.params.cssMode || n.$wrapperEl.transition(e),
											n.emit("setTransition", e, t)
									},
									transitionStart: function(e=!0, t) {
											const n = this
												, {params: i} = n;
											i.cssMode || (i.autoHeight && n.updateAutoHeight(),
											transitionEmit({
													swiper: n,
													runCallbacks: e,
													direction: t,
													step: "Start"
											}))
									},
									transitionEnd: function(e=!0, t) {
											const n = this
												, {params: i} = n;
											n.animating = !1,
											i.cssMode || (n.setTransition(0),
											transitionEmit({
													swiper: n,
													runCallbacks: e,
													direction: t,
													step: "End"
											}))
									}
							},
							slide: m,
							loop: g,
							grabCursor: {
									setGrabCursor: function(e) {
											const t = this;
											if (t.support.touch || !t.params.simulateTouch || t.params.watchOverflow && t.isLocked || t.params.cssMode)
													return;
											const n = "container" === t.params.touchEventsTarget ? t.el : t.wrapperEl;
											n.style.cursor = "move",
											n.style.cursor = e ? "grabbing" : "grab"
									},
									unsetGrabCursor: function() {
											const e = this;
											e.support.touch || e.params.watchOverflow && e.isLocked || e.params.cssMode || (e["container" === e.params.touchEventsTarget ? "el" : "wrapperEl"].style.cursor = "")
									}
							},
							events: f,
							breakpoints: y,
							checkOverflow: {
									checkOverflow: function() {
											const e = this
												, {isLocked: t, params: n} = e
												, {slidesOffsetBefore: i} = n;
											if (i) {
													const t = e.slides.length - 1
														, n = e.slidesGrid[t] + e.slidesSizesGrid[t] + 2 * i;
													e.isLocked = e.size > n
											} else
													e.isLocked = 1 === e.snapGrid.length;
											!0 === n.allowSlideNext && (e.allowSlideNext = !e.isLocked),
											!0 === n.allowSlidePrev && (e.allowSlidePrev = !e.isLocked),
											t && t !== e.isLocked && (e.isEnd = !1),
											t !== e.isLocked && e.emit(e.isLocked ? "lock" : "unlock")
									}
							},
							classes: v,
							images: {
									loadImage: function(e, t, n, i, r, o) {
											const s = ssr_window_esm_getWindow();
											let l;
											function onReady() {
													o && o()
											}
											a(e).parent("picture")[0] || e.complete && r ? onReady() : t ? (l = new s.Image,
											l.onload = onReady,
											l.onerror = onReady,
											i && (l.sizes = i),
											n && (l.srcset = n),
											t && (l.src = t)) : onReady()
									},
									preloadImages: function() {
											const e = this;
											function onReady() {
													null != e && e && !e.destroyed && (void 0 !== e.imagesLoaded && (e.imagesLoaded += 1),
													e.imagesLoaded === e.imagesToLoad.length && (e.params.updateOnImagesReady && e.update(),
													e.emit("imagesReady")))
											}
											e.imagesToLoad = e.$el.find("img");
											for (let t = 0; t < e.imagesToLoad.length; t += 1) {
													const n = e.imagesToLoad[t];
													e.loadImage(n, n.currentSrc || n.getAttribute("src"), n.srcset || n.getAttribute("srcset"), n.sizes || n.getAttribute("sizes"), !0, onReady)
											}
									}
							}
					}
						, C = {};
					class Swiper {
							constructor(...e) {
									let t, n;
									if (1 === e.length && e[0].constructor && "Object" === Object.prototype.toString.call(e[0]).slice(8, -1) ? n = e[0] : [t,n] = e,
									n || (n = {}),
									n = utils_extend({}, n),
									t && !n.el && (n.el = t),
									n.el && a(n.el).length > 1) {
											const e = [];
											return a(n.el).each((t=>{
													const i = utils_extend({}, n, {
															el: t
													});
													e.push(new Swiper(i))
											}
											)),
											e
									}
									const i = this;
									i.__swiper__ = !0,
									i.support = getSupport(),
									i.device = getDevice({
											userAgent: n.userAgent
									}),
									i.browser = getBrowser(),
									i.eventsListeners = {},
									i.eventsAnyListeners = [],
									i.modules = [...i.__modules__],
									n.modules && Array.isArray(n.modules) && i.modules.push(...n.modules);
									const r = {};
									i.modules.forEach((e=>{
											e({
													swiper: i,
													extendParams: moduleExtendParams(n, r),
													on: i.on.bind(i),
													once: i.once.bind(i),
													off: i.off.bind(i),
													emit: i.emit.bind(i)
											})
									}
									));
									const o = utils_extend({}, b, r);
									return i.params = utils_extend({}, o, C, n),
									i.originalParams = utils_extend({}, i.params),
									i.passedParams = utils_extend({}, n),
									i.params && i.params.on && Object.keys(i.params.on).forEach((e=>{
											i.on(e, i.params.on[e])
									}
									)),
									i.params && i.params.onAny && i.onAny(i.params.onAny),
									i.$ = a,
									Object.assign(i, {
											enabled: i.params.enabled,
											el: t,
											classNames: [],
											slides: a(),
											slidesGrid: [],
											snapGrid: [],
											slidesSizesGrid: [],
											isHorizontal: ()=>"horizontal" === i.params.direction,
											isVertical: ()=>"vertical" === i.params.direction,
											activeIndex: 0,
											realIndex: 0,
											isBeginning: !0,
											isEnd: !1,
											translate: 0,
											previousTranslate: 0,
											progress: 0,
											velocity: 0,
											animating: !1,
											allowSlideNext: i.params.allowSlideNext,
											allowSlidePrev: i.params.allowSlidePrev,
											touchEvents: function() {
													const e = ["touchstart", "touchmove", "touchend", "touchcancel"]
														, t = ["pointerdown", "pointermove", "pointerup"];
													return i.touchEventsTouch = {
															start: e[0],
															move: e[1],
															end: e[2],
															cancel: e[3]
													},
													i.touchEventsDesktop = {
															start: t[0],
															move: t[1],
															end: t[2]
													},
													i.support.touch || !i.params.simulateTouch ? i.touchEventsTouch : i.touchEventsDesktop
											}(),
											touchEventsData: {
													isTouched: void 0,
													isMoved: void 0,
													allowTouchCallbacks: void 0,
													touchStartTime: void 0,
													isScrolling: void 0,
													currentTranslate: void 0,
													startTranslate: void 0,
													allowThresholdMove: void 0,
													focusableElements: i.params.focusableElements,
													lastClickTime: now(),
													clickTimeout: void 0,
													velocities: [],
													allowMomentumBounce: void 0,
													isTouchEvent: void 0,
													startMoving: void 0
											},
											allowClick: !0,
											allowTouchMove: i.params.allowTouchMove,
											touches: {
													startX: 0,
													startY: 0,
													currentX: 0,
													currentY: 0,
													diff: 0
											},
											imagesToLoad: [],
											imagesLoaded: 0
									}),
									i.emit("_swiper"),
									i.params.init && i.init(),
									i
							}
							enable() {
									const e = this;
									e.enabled || (e.enabled = !0,
									e.params.grabCursor && e.setGrabCursor(),
									e.emit("enable"))
							}
							disable() {
									const e = this;
									e.enabled && (e.enabled = !1,
									e.params.grabCursor && e.unsetGrabCursor(),
									e.emit("disable"))
							}
							setProgress(e, t) {
									const n = this;
									e = Math.min(Math.max(e, 0), 1);
									const i = n.minTranslate()
										, r = (n.maxTranslate() - i) * e + i;
									n.translateTo(r, void 0 === t ? 0 : t),
									n.updateActiveIndex(),
									n.updateSlidesClasses()
							}
							emitContainerClasses() {
									const e = this;
									if (!e.params._emitClasses || !e.el)
											return;
									const t = e.el.className.split(" ").filter((t=>0 === t.indexOf("swiper") || 0 === t.indexOf(e.params.containerModifierClass)));
									e.emit("_containerClasses", t.join(" "))
							}
							getSlideClasses(e) {
									const t = this;
									return t.destroyed ? "" : e.className.split(" ").filter((e=>0 === e.indexOf("swiper-slide") || 0 === e.indexOf(t.params.slideClass))).join(" ")
							}
							emitSlidesClasses() {
									const e = this;
									if (!e.params._emitClasses || !e.el)
											return;
									const t = [];
									e.slides.each((n=>{
											const i = e.getSlideClasses(n);
											t.push({
													slideEl: n,
													classNames: i
											}),
											e.emit("_slideClass", n, i)
									}
									)),
									e.emit("_slideClasses", t)
							}
							slidesPerViewDynamic(e="current", t=!1) {
									const {params: n, slides: i, slidesGrid: r, slidesSizesGrid: o, size: s, activeIndex: a} = this;
									let l = 1;
									if (n.centeredSlides) {
											let e, t = i[a].swiperSlideSize;
											for (let n = a + 1; n < i.length; n += 1)
													i[n] && !e && (t += i[n].swiperSlideSize,
													l += 1,
													t > s && (e = !0));
											for (let n = a - 1; n >= 0; n -= 1)
													i[n] && !e && (t += i[n].swiperSlideSize,
													l += 1,
													t > s && (e = !0))
									} else if ("current" === e)
											for (let e = a + 1; e < i.length; e += 1) {
													(t ? r[e] + o[e] - r[a] < s : r[e] - r[a] < s) && (l += 1)
											}
									else
											for (let e = a - 1; e >= 0; e -= 1) {
													r[a] - r[e] < s && (l += 1)
											}
									return l
							}
							update() {
									const e = this;
									if (!e || e.destroyed)
											return;
									const {snapGrid: t, params: n} = e;
									function setTranslate() {
											const t = e.rtlTranslate ? -1 * e.translate : e.translate
												, n = Math.min(Math.max(t, e.maxTranslate()), e.minTranslate());
											e.setTranslate(n),
											e.updateActiveIndex(),
											e.updateSlidesClasses()
									}
									let i;
									n.breakpoints && e.setBreakpoint(),
									e.updateSize(),
									e.updateSlides(),
									e.updateProgress(),
									e.updateSlidesClasses(),
									e.params.freeMode && e.params.freeMode.enabled ? (setTranslate(),
									e.params.autoHeight && e.updateAutoHeight()) : (i = ("auto" === e.params.slidesPerView || e.params.slidesPerView > 1) && e.isEnd && !e.params.centeredSlides ? e.slideTo(e.slides.length - 1, 0, !1, !0) : e.slideTo(e.activeIndex, 0, !1, !0),
									i || setTranslate()),
									n.watchOverflow && t !== e.snapGrid && e.checkOverflow(),
									e.emit("update")
							}
							changeDirection(e, t=!0) {
									const n = this
										, i = n.params.direction;
									return e || (e = "horizontal" === i ? "vertical" : "horizontal"),
									e === i || "horizontal" !== e && "vertical" !== e || (n.$el.removeClass(`${n.params.containerModifierClass}${i}`).addClass(`${n.params.containerModifierClass}${e}`),
									n.emitContainerClasses(),
									n.params.direction = e,
									n.slides.each((t=>{
											"vertical" === e ? t.style.width = "" : t.style.height = ""
									}
									)),
									n.emit("changeDirection"),
									t && n.update()),
									n
							}
							changeLanguageDirection(e) {
									const t = this;
									t.rtl && "rtl" === e || !t.rtl && "ltr" === e || (t.rtl = "rtl" === e,
									t.rtlTranslate = "horizontal" === t.params.direction && t.rtl,
									t.rtl ? (t.$el.addClass(`${t.params.containerModifierClass}rtl`),
									t.el.dir = "rtl") : (t.$el.removeClass(`${t.params.containerModifierClass}rtl`),
									t.el.dir = "ltr"),
									t.update())
							}
							mount(e) {
									const t = this;
									if (t.mounted)
											return !0;
									const n = a(e || t.params.el);
									if (!(e = n[0]))
											return !1;
									e.swiper = t;
									const getWrapperSelector = ()=>`.${(t.params.wrapperClass || "").trim().split(" ").join(".")}`;
									let i = (()=>{
											if (e && e.shadowRoot && e.shadowRoot.querySelector) {
													const t = a(e.shadowRoot.querySelector(getWrapperSelector()));
													return t.children = e=>n.children(e),
													t
											}
											return n.children ? n.children(getWrapperSelector()) : a(n).children(getWrapperSelector())
									}
									)();
									if (0 === i.length && t.params.createElements) {
											const e = getDocument().createElement("div");
											i = a(e),
											e.className = t.params.wrapperClass,
											n.append(e),
											n.children(`.${t.params.slideClass}`).each((e=>{
													i.append(e)
											}
											))
									}
									return Object.assign(t, {
											$el: n,
											el: e,
											$wrapperEl: i,
											wrapperEl: i[0],
											mounted: !0,
											rtl: "rtl" === e.dir.toLowerCase() || "rtl" === n.css("direction"),
											rtlTranslate: "horizontal" === t.params.direction && ("rtl" === e.dir.toLowerCase() || "rtl" === n.css("direction")),
											wrongRTL: "-webkit-box" === i.css("display")
									}),
									!0
							}
							init(e) {
									const t = this;
									if (t.initialized)
											return t;
									return !1 === t.mount(e) || (t.emit("beforeInit"),
									t.params.breakpoints && t.setBreakpoint(),
									t.addClasses(),
									t.params.loop && t.loopCreate(),
									t.updateSize(),
									t.updateSlides(),
									t.params.watchOverflow && t.checkOverflow(),
									t.params.grabCursor && t.enabled && t.setGrabCursor(),
									t.params.preloadImages && t.preloadImages(),
									t.params.loop ? t.slideTo(t.params.initialSlide + t.loopedSlides, 0, t.params.runCallbacksOnInit, !1, !0) : t.slideTo(t.params.initialSlide, 0, t.params.runCallbacksOnInit, !1, !0),
									t.attachEvents(),
									t.initialized = !0,
									t.emit("init"),
									t.emit("afterInit")),
									t
							}
							destroy(e=!0, t=!0) {
									const n = this
										, {params: i, $el: r, $wrapperEl: o, slides: s} = n;
									return void 0 === n.params || n.destroyed || (n.emit("beforeDestroy"),
									n.initialized = !1,
									n.detachEvents(),
									i.loop && n.loopDestroy(),
									t && (n.removeClasses(),
									r.removeAttr("style"),
									o.removeAttr("style"),
									s && s.length && s.removeClass([i.slideVisibleClass, i.slideActiveClass, i.slideNextClass, i.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")),
									n.emit("destroy"),
									Object.keys(n.eventsListeners).forEach((e=>{
											n.off(e)
									}
									)),
									!1 !== e && (n.$el[0].swiper = null,
									function(e) {
											const t = e;
											Object.keys(t).forEach((e=>{
													try {
															t[e] = null
													} catch (e) {}
													try {
															delete t[e]
													} catch (e) {}
											}
											))
									}(n)),
									n.destroyed = !0),
									null
							}
							static extendDefaults(e) {
									utils_extend(C, e)
							}
							static get extendedDefaults() {
									return C
							}
							static get defaults() {
									return b
							}
							static installModule(e) {
									Swiper.prototype.__modules__ || (Swiper.prototype.__modules__ = []);
									const t = Swiper.prototype.__modules__;
									"function" == typeof e && t.indexOf(e) < 0 && t.push(e)
							}
							static use(e) {
									return Array.isArray(e) ? (e.forEach((e=>Swiper.installModule(e))),
									Swiper) : (Swiper.installModule(e),
									Swiper)
							}
					}
					Object.keys(S).forEach((e=>{
							Object.keys(S[e]).forEach((t=>{
									Swiper.prototype[t] = S[e][t]
							}
							))
					}
					)),
					Swiper.use([function({swiper: e, on: t, emit: n}) {
							const i = ssr_window_esm_getWindow();
							let r = null
								, o = null;
							const resizeHandler = ()=>{
									e && !e.destroyed && e.initialized && (n("beforeResize"),
									n("resize"))
							}
								, orientationChangeHandler = ()=>{
									e && !e.destroyed && e.initialized && n("orientationchange")
							}
							;
							t("init", (()=>{
									e.params.resizeObserver && void 0 !== i.ResizeObserver ? e && !e.destroyed && e.initialized && (r = new ResizeObserver((t=>{
											o = i.requestAnimationFrame((()=>{
													const {width: n, height: i} = e;
													let r = n
														, o = i;
													t.forEach((({contentBoxSize: t, contentRect: n, target: i})=>{
															i && i !== e.el || (r = n ? n.width : (t[0] || t).inlineSize,
															o = n ? n.height : (t[0] || t).blockSize)
													}
													)),
													r === n && o === i || resizeHandler()
											}
											))
									}
									)),
									r.observe(e.el)) : (i.addEventListener("resize", resizeHandler),
									i.addEventListener("orientationchange", orientationChangeHandler))
							}
							)),
							t("destroy", (()=>{
									o && i.cancelAnimationFrame(o),
									r && r.unobserve && e.el && (r.unobserve(e.el),
									r = null),
									i.removeEventListener("resize", resizeHandler),
									i.removeEventListener("orientationchange", orientationChangeHandler)
							}
							))
					}
					, function({swiper: e, extendParams: t, on: n, emit: i}) {
							const r = []
								, o = ssr_window_esm_getWindow()
								, attach = (e,t={})=>{
									const n = new (o.MutationObserver || o.WebkitMutationObserver)((e=>{
											if (1 === e.length)
													return void i("observerUpdate", e[0]);
											const observerUpdate = function() {
													i("observerUpdate", e[0])
											};
											o.requestAnimationFrame ? o.requestAnimationFrame(observerUpdate) : o.setTimeout(observerUpdate, 0)
									}
									));
									n.observe(e, {
											attributes: void 0 === t.attributes || t.attributes,
											childList: void 0 === t.childList || t.childList,
											characterData: void 0 === t.characterData || t.characterData
									}),
									r.push(n)
							}
							;
							t({
									observer: !1,
									observeParents: !1,
									observeSlideChildren: !1
							}),
							n("init", (()=>{
									if (e.params.observer) {
											if (e.params.observeParents) {
													const t = e.$el.parents();
													for (let e = 0; e < t.length; e += 1)
															attach(t[e])
											}
											attach(e.$el[0], {
													childList: e.params.observeSlideChildren
											}),
											attach(e.$wrapperEl[0], {
													attributes: !1
											})
									}
							}
							)),
							n("destroy", (()=>{
									r.forEach((e=>{
											e.disconnect()
									}
									)),
									r.splice(0, r.length)
							}
							))
					}
					]);
					const E = Swiper;
					function Virtual({swiper: e, extendParams: t, on: n, emit: i}) {
							let r;
							function renderSlide(t, n) {
									const i = e.params.virtual;
									if (i.cache && e.virtual.cache[n])
											return e.virtual.cache[n];
									const r = i.renderSlide ? a(i.renderSlide.call(e, t, n)) : a(`<div class="${e.params.slideClass}" data-swiper-slide-index="${n}">${t}</div>`);
									return r.attr("data-swiper-slide-index") || r.attr("data-swiper-slide-index", n),
									i.cache && (e.virtual.cache[n] = r),
									r
							}
							function update(t) {
									const {slidesPerView: n, slidesPerGroup: r, centeredSlides: o} = e.params
										, {addSlidesBefore: s, addSlidesAfter: a} = e.params.virtual
										, {from: l, to: c, slides: d, slidesGrid: p, offset: u} = e.virtual;
									e.params.cssMode || e.updateActiveIndex();
									const h = e.activeIndex || 0;
									let m, g, _;
									m = e.rtlTranslate ? "right" : e.isHorizontal() ? "left" : "top",
									o ? (g = Math.floor(n / 2) + r + a,
									_ = Math.floor(n / 2) + r + s) : (g = n + (r - 1) + a,
									_ = r + s);
									const f = Math.max((h || 0) - _, 0)
										, y = Math.min((h || 0) + g, d.length - 1)
										, v = (e.slidesGrid[f] || 0) - (e.slidesGrid[0] || 0);
									function onRendered() {
											e.updateSlides(),
											e.updateProgress(),
											e.updateSlidesClasses(),
											e.lazy && e.params.lazy.enabled && e.lazy.load(),
											i("virtualUpdate")
									}
									if (Object.assign(e.virtual, {
											from: f,
											to: y,
											offset: v,
											slidesGrid: e.slidesGrid
									}),
									l === f && c === y && !t)
											return e.slidesGrid !== p && v !== u && e.slides.css(m, `${v}px`),
											e.updateProgress(),
											void i("virtualUpdate");
									if (e.params.virtual.renderExternal)
											return e.params.virtual.renderExternal.call(e, {
													offset: v,
													from: f,
													to: y,
													slides: function() {
															const e = [];
															for (let t = f; t <= y; t += 1)
																	e.push(d[t]);
															return e
													}()
											}),
											void (e.params.virtual.renderExternalUpdate ? onRendered() : i("virtualUpdate"));
									const b = []
										, S = [];
									if (t)
											e.$wrapperEl.find(`.${e.params.slideClass}`).remove();
									else
											for (let t = l; t <= c; t += 1)
													(t < f || t > y) && e.$wrapperEl.find(`.${e.params.slideClass}[data-swiper-slide-index="${t}"]`).remove();
									for (let e = 0; e < d.length; e += 1)
											e >= f && e <= y && (void 0 === c || t ? S.push(e) : (e > c && S.push(e),
											e < l && b.push(e)));
									S.forEach((t=>{
											e.$wrapperEl.append(renderSlide(d[t], t))
									}
									)),
									b.sort(((e,t)=>t - e)).forEach((t=>{
											e.$wrapperEl.prepend(renderSlide(d[t], t))
									}
									)),
									e.$wrapperEl.children(".swiper-slide").css(m, `${v}px`),
									onRendered()
							}
							t({
									virtual: {
											enabled: !1,
											slides: [],
											cache: !0,
											renderSlide: null,
											renderExternal: null,
											renderExternalUpdate: !0,
											addSlidesBefore: 0,
											addSlidesAfter: 0
									}
							}),
							e.virtual = {
									cache: {},
									from: void 0,
									to: void 0,
									slides: [],
									offset: 0,
									slidesGrid: []
							},
							n("beforeInit", (()=>{
									e.params.virtual.enabled && (e.virtual.slides = e.params.virtual.slides,
									e.classNames.push(`${e.params.containerModifierClass}virtual`),
									e.params.watchSlidesProgress = !0,
									e.originalParams.watchSlidesProgress = !0,
									e.params.initialSlide || update())
							}
							)),
							n("setTranslate", (()=>{
									e.params.virtual.enabled && (e.params.cssMode && !e._immediateVirtual ? (clearTimeout(r),
									r = setTimeout((()=>{
											update()
									}
									), 100)) : update())
							}
							)),
							n("init update resize", (()=>{
									e.params.virtual.enabled && e.params.cssMode && setCSSProperty(e.wrapperEl, "--swiper-virtual-size", `${e.virtualSize}px`)
							}
							)),
							Object.assign(e.virtual, {
									appendSlide: function(t) {
											if ("object" == typeof t && "length"in t)
													for (let n = 0; n < t.length; n += 1)
															t[n] && e.virtual.slides.push(t[n]);
											else
													e.virtual.slides.push(t);
											update(!0)
									},
									prependSlide: function(t) {
											const n = e.activeIndex;
											let i = n + 1
												, r = 1;
											if (Array.isArray(t)) {
													for (let n = 0; n < t.length; n += 1)
															t[n] && e.virtual.slides.unshift(t[n]);
													i = n + t.length,
													r = t.length
											} else
													e.virtual.slides.unshift(t);
											if (e.params.virtual.cache) {
													const t = e.virtual.cache
														, n = {};
													Object.keys(t).forEach((e=>{
															const i = t[e]
																, o = i.attr("data-swiper-slide-index");
															o && i.attr("data-swiper-slide-index", parseInt(o, 10) + r),
															n[parseInt(e, 10) + r] = i
													}
													)),
													e.virtual.cache = n
											}
											update(!0),
											e.slideTo(i, 0)
									},
									removeSlide: function(t) {
											if (null == t)
													return;
											let n = e.activeIndex;
											if (Array.isArray(t))
													for (let i = t.length - 1; i >= 0; i -= 1)
															e.virtual.slides.splice(t[i], 1),
															e.params.virtual.cache && delete e.virtual.cache[t[i]],
															t[i] < n && (n -= 1),
															n = Math.max(n, 0);
											else
													e.virtual.slides.splice(t, 1),
													e.params.virtual.cache && delete e.virtual.cache[t],
													t < n && (n -= 1),
													n = Math.max(n, 0);
											update(!0),
											e.slideTo(n, 0)
									},
									removeAllSlides: function() {
											e.virtual.slides = [],
											e.params.virtual.cache && (e.virtual.cache = {}),
											update(!0),
											e.slideTo(0, 0)
									},
									update
							})
					}
					function Keyboard({swiper: e, extendParams: t, on: n, emit: i}) {
							const r = getDocument()
								, o = ssr_window_esm_getWindow();
							function handle(t) {
									if (!e.enabled)
											return;
									const {rtlTranslate: n} = e;
									let s = t;
									s.originalEvent && (s = s.originalEvent);
									const a = s.keyCode || s.charCode
										, l = e.params.keyboard.pageUpDown
										, c = l && 33 === a
										, d = l && 34 === a
										, p = 37 === a
										, u = 39 === a
										, h = 38 === a
										, m = 40 === a;
									if (!e.allowSlideNext && (e.isHorizontal() && u || e.isVertical() && m || d))
											return !1;
									if (!e.allowSlidePrev && (e.isHorizontal() && p || e.isVertical() && h || c))
											return !1;
									if (!(s.shiftKey || s.altKey || s.ctrlKey || s.metaKey || r.activeElement && r.activeElement.nodeName && ("input" === r.activeElement.nodeName.toLowerCase() || "textarea" === r.activeElement.nodeName.toLowerCase()))) {
											if (e.params.keyboard.onlyInViewport && (c || d || p || u || h || m)) {
													let t = !1;
													if (e.$el.parents(`.${e.params.slideClass}`).length > 0 && 0 === e.$el.parents(`.${e.params.slideActiveClass}`).length)
															return;
													const i = e.$el
														, r = i[0].clientWidth
														, s = i[0].clientHeight
														, a = o.innerWidth
														, l = o.innerHeight
														, c = e.$el.offset();
													n && (c.left -= e.$el[0].scrollLeft);
													const d = [[c.left, c.top], [c.left + r, c.top], [c.left, c.top + s], [c.left + r, c.top + s]];
													for (let e = 0; e < d.length; e += 1) {
															const n = d[e];
															if (n[0] >= 0 && n[0] <= a && n[1] >= 0 && n[1] <= l) {
																	if (0 === n[0] && 0 === n[1])
																			continue;
																	t = !0
															}
													}
													if (!t)
															return
											}
											e.isHorizontal() ? ((c || d || p || u) && (s.preventDefault ? s.preventDefault() : s.returnValue = !1),
											((d || u) && !n || (c || p) && n) && e.slideNext(),
											((c || p) && !n || (d || u) && n) && e.slidePrev()) : ((c || d || h || m) && (s.preventDefault ? s.preventDefault() : s.returnValue = !1),
											(d || m) && e.slideNext(),
											(c || h) && e.slidePrev()),
											i("keyPress", a)
									}
							}
							function enable() {
									e.keyboard.enabled || (a(r).on("keydown", handle),
									e.keyboard.enabled = !0)
							}
							function disable() {
									e.keyboard.enabled && (a(r).off("keydown", handle),
									e.keyboard.enabled = !1)
							}
							e.keyboard = {
									enabled: !1
							},
							t({
									keyboard: {
											enabled: !1,
											onlyInViewport: !0,
											pageUpDown: !0
									}
							}),
							n("init", (()=>{
									e.params.keyboard.enabled && enable()
							}
							)),
							n("destroy", (()=>{
									e.keyboard.enabled && disable()
							}
							)),
							Object.assign(e.keyboard, {
									enable,
									disable
							})
					}
					function Mousewheel({swiper: e, extendParams: t, on: n, emit: i}) {
							const r = ssr_window_esm_getWindow();
							let o;
							t({
									mousewheel: {
											enabled: !1,
											releaseOnEdges: !1,
											invert: !1,
											forceToAxis: !1,
											sensitivity: 1,
											eventsTarget: "container",
											thresholdDelta: null,
											thresholdTime: null
									}
							}),
							e.mousewheel = {
									enabled: !1
							};
							let s, l = now();
							const c = [];
							function handleMouseEnter() {
									e.enabled && (e.mouseEntered = !0)
							}
							function handleMouseLeave() {
									e.enabled && (e.mouseEntered = !1)
							}
							function animateSlider(t) {
									return !(e.params.mousewheel.thresholdDelta && t.delta < e.params.mousewheel.thresholdDelta) && (!(e.params.mousewheel.thresholdTime && now() - l < e.params.mousewheel.thresholdTime) && (t.delta >= 6 && now() - l < 60 || (t.direction < 0 ? e.isEnd && !e.params.loop || e.animating || (e.slideNext(),
									i("scroll", t.raw)) : e.isBeginning && !e.params.loop || e.animating || (e.slidePrev(),
									i("scroll", t.raw)),
									l = (new r.Date).getTime(),
									!1)))
							}
							function handle(t) {
									let n = t
										, r = !0;
									if (!e.enabled)
											return;
									const l = e.params.mousewheel;
									e.params.cssMode && n.preventDefault();
									let d = e.$el;
									if ("container" !== e.params.mousewheel.eventsTarget && (d = a(e.params.mousewheel.eventsTarget)),
									!e.mouseEntered && !d[0].contains(n.target) && !l.releaseOnEdges)
											return !0;
									n.originalEvent && (n = n.originalEvent);
									let p = 0;
									const u = e.rtlTranslate ? -1 : 1
										, h = function(e) {
											let t = 0
												, n = 0
												, i = 0
												, r = 0;
											return "detail"in e && (n = e.detail),
											"wheelDelta"in e && (n = -e.wheelDelta / 120),
											"wheelDeltaY"in e && (n = -e.wheelDeltaY / 120),
											"wheelDeltaX"in e && (t = -e.wheelDeltaX / 120),
											"axis"in e && e.axis === e.HORIZONTAL_AXIS && (t = n,
											n = 0),
											i = 10 * t,
											r = 10 * n,
											"deltaY"in e && (r = e.deltaY),
											"deltaX"in e && (i = e.deltaX),
											e.shiftKey && !i && (i = r,
											r = 0),
											(i || r) && e.deltaMode && (1 === e.deltaMode ? (i *= 40,
											r *= 40) : (i *= 800,
											r *= 800)),
											i && !t && (t = i < 1 ? -1 : 1),
											r && !n && (n = r < 1 ? -1 : 1),
											{
													spinX: t,
													spinY: n,
													pixelX: i,
													pixelY: r
											}
									}(n);
									if (l.forceToAxis)
											if (e.isHorizontal()) {
													if (!(Math.abs(h.pixelX) > Math.abs(h.pixelY)))
															return !0;
													p = -h.pixelX * u
											} else {
													if (!(Math.abs(h.pixelY) > Math.abs(h.pixelX)))
															return !0;
													p = -h.pixelY
											}
									else
											p = Math.abs(h.pixelX) > Math.abs(h.pixelY) ? -h.pixelX * u : -h.pixelY;
									if (0 === p)
											return !0;
									l.invert && (p = -p);
									let m = e.getTranslate() + p * l.sensitivity;
									if (m >= e.minTranslate() && (m = e.minTranslate()),
									m <= e.maxTranslate() && (m = e.maxTranslate()),
									r = !!e.params.loop || !(m === e.minTranslate() || m === e.maxTranslate()),
									r && e.params.nested && n.stopPropagation(),
									e.params.freeMode && e.params.freeMode.enabled) {
											const t = {
													time: now(),
													delta: Math.abs(p),
													direction: Math.sign(p)
											}
												, r = s && t.time < s.time + 500 && t.delta <= s.delta && t.direction === s.direction;
											if (!r) {
													s = void 0,
													e.params.loop && e.loopFix();
													let a = e.getTranslate() + p * l.sensitivity;
													const d = e.isBeginning
														, u = e.isEnd;
													if (a >= e.minTranslate() && (a = e.minTranslate()),
													a <= e.maxTranslate() && (a = e.maxTranslate()),
													e.setTransition(0),
													e.setTranslate(a),
													e.updateProgress(),
													e.updateActiveIndex(),
													e.updateSlidesClasses(),
													(!d && e.isBeginning || !u && e.isEnd) && e.updateSlidesClasses(),
													e.params.freeMode.sticky) {
															clearTimeout(o),
															o = void 0,
															c.length >= 15 && c.shift();
															const n = c.length ? c[c.length - 1] : void 0
																, i = c[0];
															if (c.push(t),
															n && (t.delta > n.delta || t.direction !== n.direction))
																	c.splice(0);
															else if (c.length >= 15 && t.time - i.time < 500 && i.delta - t.delta >= 1 && t.delta <= 6) {
																	const n = p > 0 ? .8 : .2;
																	s = t,
																	c.splice(0),
																	o = nextTick((()=>{
																			e.slideToClosest(e.params.speed, !0, void 0, n)
																	}
																	), 0)
															}
															o || (o = nextTick((()=>{
																	s = t,
																	c.splice(0),
																	e.slideToClosest(e.params.speed, !0, void 0, .5)
															}
															), 500))
													}
													if (r || i("scroll", n),
													e.params.autoplay && e.params.autoplayDisableOnInteraction && e.autoplay.stop(),
													a === e.minTranslate() || a === e.maxTranslate())
															return !0
											}
									} else {
											const n = {
													time: now(),
													delta: Math.abs(p),
													direction: Math.sign(p),
													raw: t
											};
											c.length >= 2 && c.shift();
											const i = c.length ? c[c.length - 1] : void 0;
											if (c.push(n),
											i ? (n.direction !== i.direction || n.delta > i.delta || n.time > i.time + 150) && animateSlider(n) : animateSlider(n),
											function(t) {
													const n = e.params.mousewheel;
													if (t.direction < 0) {
															if (e.isEnd && !e.params.loop && n.releaseOnEdges)
																	return !0
													} else if (e.isBeginning && !e.params.loop && n.releaseOnEdges)
															return !0;
													return !1
											}(n))
													return !0
									}
									return n.preventDefault ? n.preventDefault() : n.returnValue = !1,
									!1
							}
							function events(t) {
									let n = e.$el;
									"container" !== e.params.mousewheel.eventsTarget && (n = a(e.params.mousewheel.eventsTarget)),
									n[t]("mouseenter", handleMouseEnter),
									n[t]("mouseleave", handleMouseLeave),
									n[t]("wheel", handle)
							}
							function enable() {
									return e.params.cssMode ? (e.wrapperEl.removeEventListener("wheel", handle),
									!0) : !e.mousewheel.enabled && (events("on"),
									e.mousewheel.enabled = !0,
									!0)
							}
							function disable() {
									return e.params.cssMode ? (e.wrapperEl.addEventListener(event, handle),
									!0) : !!e.mousewheel.enabled && (events("off"),
									e.mousewheel.enabled = !1,
									!0)
							}
							n("init", (()=>{
									!e.params.mousewheel.enabled && e.params.cssMode && disable(),
									e.params.mousewheel.enabled && enable()
							}
							)),
							n("destroy", (()=>{
									e.params.cssMode && enable(),
									e.mousewheel.enabled && disable()
							}
							)),
							Object.assign(e.mousewheel, {
									enable,
									disable
							})
					}
					function createElementIfNotDefined(e, t, n, i) {
							const r = getDocument();
							return e.params.createElements && Object.keys(i).forEach((o=>{
									if (!n[o] && !0 === n.auto) {
											let s = e.$el.children(`.${i[o]}`)[0];
											s || (s = r.createElement("div"),
											s.className = i[o],
											e.$el.append(s)),
											n[o] = s,
											t[o] = s
									}
							}
							)),
							n
					}
					function Navigation({swiper: e, extendParams: t, on: n, emit: i}) {
							function getEl(t) {
									let n;
									return t && (n = a(t),
									e.params.uniqueNavElements && "string" == typeof t && n.length > 1 && 1 === e.$el.find(t).length && (n = e.$el.find(t))),
									n
							}
							function toggleEl(t, n) {
									const i = e.params.navigation;
									t && t.length > 0 && (t[n ? "addClass" : "removeClass"](i.disabledClass),
									t[0] && "BUTTON" === t[0].tagName && (t[0].disabled = n),
									e.params.watchOverflow && e.enabled && t[e.isLocked ? "addClass" : "removeClass"](i.lockClass))
							}
							function update() {
									if (e.params.loop)
											return;
									const {$nextEl: t, $prevEl: n} = e.navigation;
									toggleEl(n, e.isBeginning && !e.params.rewind),
									toggleEl(t, e.isEnd && !e.params.rewind)
							}
							function onPrevClick(t) {
									t.preventDefault(),
									(!e.isBeginning || e.params.loop || e.params.rewind) && (e.slidePrev(),
									i("navigationPrev"))
							}
							function onNextClick(t) {
									t.preventDefault(),
									(!e.isEnd || e.params.loop || e.params.rewind) && (e.slideNext(),
									i("navigationNext"))
							}
							function init() {
									const t = e.params.navigation;
									if (e.params.navigation = createElementIfNotDefined(e, e.originalParams.navigation, e.params.navigation, {
											nextEl: "swiper-button-next",
											prevEl: "swiper-button-prev"
									}),
									!t.nextEl && !t.prevEl)
											return;
									const n = getEl(t.nextEl)
										, i = getEl(t.prevEl);
									n && n.length > 0 && n.on("click", onNextClick),
									i && i.length > 0 && i.on("click", onPrevClick),
									Object.assign(e.navigation, {
											$nextEl: n,
											nextEl: n && n[0],
											$prevEl: i,
											prevEl: i && i[0]
									}),
									e.enabled || (n && n.addClass(t.lockClass),
									i && i.addClass(t.lockClass))
							}
							function destroy() {
									const {$nextEl: t, $prevEl: n} = e.navigation;
									t && t.length && (t.off("click", onNextClick),
									t.removeClass(e.params.navigation.disabledClass)),
									n && n.length && (n.off("click", onPrevClick),
									n.removeClass(e.params.navigation.disabledClass))
							}
							t({
									navigation: {
											nextEl: null,
											prevEl: null,
											hideOnClick: !1,
											disabledClass: "swiper-button-disabled",
											hiddenClass: "swiper-button-hidden",
											lockClass: "swiper-button-lock",
											navigationDisabledClass: "swiper-navigation-disabled"
									}
							}),
							e.navigation = {
									nextEl: null,
									$nextEl: null,
									prevEl: null,
									$prevEl: null
							},
							n("init", (()=>{
									!1 === e.params.navigation.enabled ? disable() : (init(),
									update())
							}
							)),
							n("toEdge fromEdge lock unlock", (()=>{
									update()
							}
							)),
							n("destroy", (()=>{
									destroy()
							}
							)),
							n("enable disable", (()=>{
									const {$nextEl: t, $prevEl: n} = e.navigation;
									t && t[e.enabled ? "removeClass" : "addClass"](e.params.navigation.lockClass),
									n && n[e.enabled ? "removeClass" : "addClass"](e.params.navigation.lockClass)
							}
							)),
							n("click", ((t,n)=>{
									const {$nextEl: r, $prevEl: o} = e.navigation
										, s = n.target;
									if (e.params.navigation.hideOnClick && !a(s).is(o) && !a(s).is(r)) {
											if (e.pagination && e.params.pagination && e.params.pagination.clickable && (e.pagination.el === s || e.pagination.el.contains(s)))
													return;
											let t;
											r ? t = r.hasClass(e.params.navigation.hiddenClass) : o && (t = o.hasClass(e.params.navigation.hiddenClass)),
											i(!0 === t ? "navigationShow" : "navigationHide"),
											r && r.toggleClass(e.params.navigation.hiddenClass),
											o && o.toggleClass(e.params.navigation.hiddenClass)
									}
							}
							));
							const disable = ()=>{
									e.$el.addClass(e.params.navigation.navigationDisabledClass),
									destroy()
							}
							;
							Object.assign(e.navigation, {
									enable: ()=>{
											e.$el.removeClass(e.params.navigation.navigationDisabledClass),
											init(),
											update()
									}
									,
									disable,
									update,
									init,
									destroy
							})
					}
					function classesToSelector(e="") {
							return `.${e.trim().replace(/([\.:!\/])/g, "\\$1").replace(/ /g, ".")}`
					}
					function Pagination({swiper: e, extendParams: t, on: n, emit: i}) {
							const r = "swiper-pagination";
							let o;
							t({
									pagination: {
											el: null,
											bulletElement: "span",
											clickable: !1,
											hideOnClick: !1,
											renderBullet: null,
											renderProgressbar: null,
											renderFraction: null,
											renderCustom: null,
											progressbarOpposite: !1,
											type: "bullets",
											dynamicBullets: !1,
											dynamicMainBullets: 1,
											formatFractionCurrent: e=>e,
											formatFractionTotal: e=>e,
											bulletClass: `${r}-bullet`,
											bulletActiveClass: `${r}-bullet-active`,
											modifierClass: `${r}-`,
											currentClass: `${r}-current`,
											totalClass: `${r}-total`,
											hiddenClass: `${r}-hidden`,
											progressbarFillClass: `${r}-progressbar-fill`,
											progressbarOppositeClass: `${r}-progressbar-opposite`,
											clickableClass: `${r}-clickable`,
											lockClass: `${r}-lock`,
											horizontalClass: `${r}-horizontal`,
											verticalClass: `${r}-vertical`,
											paginationDisabledClass: `${r}-disabled`
									}
							}),
							e.pagination = {
									el: null,
									$el: null,
									bullets: []
							};
							let s = 0;
							function isPaginationDisabled() {
									return !e.params.pagination.el || !e.pagination.el || !e.pagination.$el || 0 === e.pagination.$el.length
							}
							function setSideBullets(t, n) {
									const {bulletActiveClass: i} = e.params.pagination;
									t[n]().addClass(`${i}-${n}`)[n]().addClass(`${i}-${n}-${n}`)
							}
							function update() {
									const t = e.rtl
										, n = e.params.pagination;
									if (isPaginationDisabled())
											return;
									const r = e.virtual && e.params.virtual.enabled ? e.virtual.slides.length : e.slides.length
										, l = e.pagination.$el;
									let c;
									const d = e.params.loop ? Math.ceil((r - 2 * e.loopedSlides) / e.params.slidesPerGroup) : e.snapGrid.length;
									if (e.params.loop ? (c = Math.ceil((e.activeIndex - e.loopedSlides) / e.params.slidesPerGroup),
									c > r - 1 - 2 * e.loopedSlides && (c -= r - 2 * e.loopedSlides),
									c > d - 1 && (c -= d),
									c < 0 && "bullets" !== e.params.paginationType && (c = d + c)) : c = void 0 !== e.snapIndex ? e.snapIndex : e.activeIndex || 0,
									"bullets" === n.type && e.pagination.bullets && e.pagination.bullets.length > 0) {
											const i = e.pagination.bullets;
											let r, d, p;
											if (n.dynamicBullets && (o = i.eq(0)[e.isHorizontal() ? "outerWidth" : "outerHeight"](!0),
											l.css(e.isHorizontal() ? "width" : "height", o * (n.dynamicMainBullets + 4) + "px"),
											n.dynamicMainBullets > 1 && void 0 !== e.previousIndex && (s += c - (e.previousIndex - e.loopedSlides || 0),
											s > n.dynamicMainBullets - 1 ? s = n.dynamicMainBullets - 1 : s < 0 && (s = 0)),
											r = Math.max(c - s, 0),
											d = r + (Math.min(i.length, n.dynamicMainBullets) - 1),
											p = (d + r) / 2),
											i.removeClass(["", "-next", "-next-next", "-prev", "-prev-prev", "-main"].map((e=>`${n.bulletActiveClass}${e}`)).join(" ")),
											l.length > 1)
													i.each((e=>{
															const t = a(e)
																, i = t.index();
															i === c && t.addClass(n.bulletActiveClass),
															n.dynamicBullets && (i >= r && i <= d && t.addClass(`${n.bulletActiveClass}-main`),
															i === r && setSideBullets(t, "prev"),
															i === d && setSideBullets(t, "next"))
													}
													));
											else {
													const t = i.eq(c)
														, o = t.index();
													if (t.addClass(n.bulletActiveClass),
													n.dynamicBullets) {
															const t = i.eq(r)
																, s = i.eq(d);
															for (let e = r; e <= d; e += 1)
																	i.eq(e).addClass(`${n.bulletActiveClass}-main`);
															if (e.params.loop)
																	if (o >= i.length) {
																			for (let e = n.dynamicMainBullets; e >= 0; e -= 1)
																					i.eq(i.length - e).addClass(`${n.bulletActiveClass}-main`);
																			i.eq(i.length - n.dynamicMainBullets - 1).addClass(`${n.bulletActiveClass}-prev`)
																	} else
																			setSideBullets(t, "prev"),
																			setSideBullets(s, "next");
															else
																	setSideBullets(t, "prev"),
																	setSideBullets(s, "next")
													}
											}
											if (n.dynamicBullets) {
													const r = Math.min(i.length, n.dynamicMainBullets + 4)
														, s = (o * r - o) / 2 - p * o
														, a = t ? "right" : "left";
													i.css(e.isHorizontal() ? a : "top", `${s}px`)
											}
									}
									if ("fraction" === n.type && (l.find(classesToSelector(n.currentClass)).text(n.formatFractionCurrent(c + 1)),
									l.find(classesToSelector(n.totalClass)).text(n.formatFractionTotal(d))),
									"progressbar" === n.type) {
											let t;
											t = n.progressbarOpposite ? e.isHorizontal() ? "vertical" : "horizontal" : e.isHorizontal() ? "horizontal" : "vertical";
											const i = (c + 1) / d;
											let r = 1
												, o = 1;
											"horizontal" === t ? r = i : o = i,
											l.find(classesToSelector(n.progressbarFillClass)).transform(`translate3d(0,0,0) scaleX(${r}) scaleY(${o})`).transition(e.params.speed)
									}
									"custom" === n.type && n.renderCustom ? (l.html(n.renderCustom(e, c + 1, d)),
									i("paginationRender", l[0])) : i("paginationUpdate", l[0]),
									e.params.watchOverflow && e.enabled && l[e.isLocked ? "addClass" : "removeClass"](n.lockClass)
							}
							function render() {
									const t = e.params.pagination;
									if (isPaginationDisabled())
											return;
									const n = e.virtual && e.params.virtual.enabled ? e.virtual.slides.length : e.slides.length
										, r = e.pagination.$el;
									let o = "";
									if ("bullets" === t.type) {
											let i = e.params.loop ? Math.ceil((n - 2 * e.loopedSlides) / e.params.slidesPerGroup) : e.snapGrid.length;
											e.params.freeMode && e.params.freeMode.enabled && !e.params.loop && i > n && (i = n);
											for (let n = 0; n < i; n += 1)
													t.renderBullet ? o += t.renderBullet.call(e, n, t.bulletClass) : o += `<${t.bulletElement} class="${t.bulletClass}"></${t.bulletElement}>`;
											r.html(o),
											e.pagination.bullets = r.find(classesToSelector(t.bulletClass))
									}
									"fraction" === t.type && (o = t.renderFraction ? t.renderFraction.call(e, t.currentClass, t.totalClass) : `<span class="${t.currentClass}"></span> / <span class="${t.totalClass}"></span>`,
									r.html(o)),
									"progressbar" === t.type && (o = t.renderProgressbar ? t.renderProgressbar.call(e, t.progressbarFillClass) : `<span class="${t.progressbarFillClass}"></span>`,
									r.html(o)),
									"custom" !== t.type && i("paginationRender", e.pagination.$el[0])
							}
							function init() {
									e.params.pagination = createElementIfNotDefined(e, e.originalParams.pagination, e.params.pagination, {
											el: "swiper-pagination"
									});
									const t = e.params.pagination;
									if (!t.el)
											return;
									let n = a(t.el);
									0 !== n.length && (e.params.uniqueNavElements && "string" == typeof t.el && n.length > 1 && (n = e.$el.find(t.el),
									n.length > 1 && (n = n.filter((t=>a(t).parents(".swiper")[0] === e.el)))),
									"bullets" === t.type && t.clickable && n.addClass(t.clickableClass),
									n.addClass(t.modifierClass + t.type),
									n.addClass(e.isHorizontal() ? t.horizontalClass : t.verticalClass),
									"bullets" === t.type && t.dynamicBullets && (n.addClass(`${t.modifierClass}${t.type}-dynamic`),
									s = 0,
									t.dynamicMainBullets < 1 && (t.dynamicMainBullets = 1)),
									"progressbar" === t.type && t.progressbarOpposite && n.addClass(t.progressbarOppositeClass),
									t.clickable && n.on("click", classesToSelector(t.bulletClass), (function(t) {
											t.preventDefault();
											let n = a(this).index() * e.params.slidesPerGroup;
											e.params.loop && (n += e.loopedSlides),
											e.slideTo(n)
									}
									)),
									Object.assign(e.pagination, {
											$el: n,
											el: n[0]
									}),
									e.enabled || n.addClass(t.lockClass))
							}
							function destroy() {
									const t = e.params.pagination;
									if (isPaginationDisabled())
											return;
									const n = e.pagination.$el;
									n.removeClass(t.hiddenClass),
									n.removeClass(t.modifierClass + t.type),
									n.removeClass(e.isHorizontal() ? t.horizontalClass : t.verticalClass),
									e.pagination.bullets && e.pagination.bullets.removeClass && e.pagination.bullets.removeClass(t.bulletActiveClass),
									t.clickable && n.off("click", classesToSelector(t.bulletClass))
							}
							n("init", (()=>{
									!1 === e.params.pagination.enabled ? disable() : (init(),
									render(),
									update())
							}
							)),
							n("activeIndexChange", (()=>{
									(e.params.loop || void 0 === e.snapIndex) && update()
							}
							)),
							n("snapIndexChange", (()=>{
									e.params.loop || update()
							}
							)),
							n("slidesLengthChange", (()=>{
									e.params.loop && (render(),
									update())
							}
							)),
							n("snapGridLengthChange", (()=>{
									e.params.loop || (render(),
									update())
							}
							)),
							n("destroy", (()=>{
									destroy()
							}
							)),
							n("enable disable", (()=>{
									const {$el: t} = e.pagination;
									t && t[e.enabled ? "removeClass" : "addClass"](e.params.pagination.lockClass)
							}
							)),
							n("lock unlock", (()=>{
									update()
							}
							)),
							n("click", ((t,n)=>{
									const r = n.target
										, {$el: o} = e.pagination;
									if (e.params.pagination.el && e.params.pagination.hideOnClick && o && o.length > 0 && !a(r).hasClass(e.params.pagination.bulletClass)) {
											if (e.navigation && (e.navigation.nextEl && r === e.navigation.nextEl || e.navigation.prevEl && r === e.navigation.prevEl))
													return;
											const t = o.hasClass(e.params.pagination.hiddenClass);
											i(!0 === t ? "paginationShow" : "paginationHide"),
											o.toggleClass(e.params.pagination.hiddenClass)
									}
							}
							));
							const disable = ()=>{
									e.$el.addClass(e.params.pagination.paginationDisabledClass),
									e.pagination.$el && e.pagination.$el.addClass(e.params.pagination.paginationDisabledClass),
									destroy()
							}
							;
							Object.assign(e.pagination, {
									enable: ()=>{
											e.$el.removeClass(e.params.pagination.paginationDisabledClass),
											e.pagination.$el && e.pagination.$el.removeClass(e.params.pagination.paginationDisabledClass),
											init(),
											render(),
											update()
									}
									,
									disable,
									render,
									update,
									init,
									destroy
							})
					}
					function Scrollbar({swiper: e, extendParams: t, on: n, emit: i}) {
							const r = getDocument();
							let o, s, l, c, d = !1, p = null, u = null;
							function setTranslate() {
									if (!e.params.scrollbar.el || !e.scrollbar.el)
											return;
									const {scrollbar: t, rtlTranslate: n, progress: i} = e
										, {$dragEl: r, $el: o} = t
										, a = e.params.scrollbar;
									let c = s
										, d = (l - s) * i;
									n ? (d = -d,
									d > 0 ? (c = s - d,
									d = 0) : -d + s > l && (c = l + d)) : d < 0 ? (c = s + d,
									d = 0) : d + s > l && (c = l - d),
									e.isHorizontal() ? (r.transform(`translate3d(${d}px, 0, 0)`),
									r[0].style.width = `${c}px`) : (r.transform(`translate3d(0px, ${d}px, 0)`),
									r[0].style.height = `${c}px`),
									a.hide && (clearTimeout(p),
									o[0].style.opacity = 1,
									p = setTimeout((()=>{
											o[0].style.opacity = 0,
											o.transition(400)
									}
									), 1e3))
							}
							function updateSize() {
									if (!e.params.scrollbar.el || !e.scrollbar.el)
											return;
									const {scrollbar: t} = e
										, {$dragEl: n, $el: i} = t;
									n[0].style.width = "",
									n[0].style.height = "",
									l = e.isHorizontal() ? i[0].offsetWidth : i[0].offsetHeight,
									c = e.size / (e.virtualSize + e.params.slidesOffsetBefore - (e.params.centeredSlides ? e.snapGrid[0] : 0)),
									s = "auto" === e.params.scrollbar.dragSize ? l * c : parseInt(e.params.scrollbar.dragSize, 10),
									e.isHorizontal() ? n[0].style.width = `${s}px` : n[0].style.height = `${s}px`,
									i[0].style.display = c >= 1 ? "none" : "",
									e.params.scrollbar.hide && (i[0].style.opacity = 0),
									e.params.watchOverflow && e.enabled && t.$el[e.isLocked ? "addClass" : "removeClass"](e.params.scrollbar.lockClass)
							}
							function getPointerPosition(t) {
									return e.isHorizontal() ? "touchstart" === t.type || "touchmove" === t.type ? t.targetTouches[0].clientX : t.clientX : "touchstart" === t.type || "touchmove" === t.type ? t.targetTouches[0].clientY : t.clientY
							}
							function setDragPosition(t) {
									const {scrollbar: n, rtlTranslate: i} = e
										, {$el: r} = n;
									let a;
									a = (getPointerPosition(t) - r.offset()[e.isHorizontal() ? "left" : "top"] - (null !== o ? o : s / 2)) / (l - s),
									a = Math.max(Math.min(a, 1), 0),
									i && (a = 1 - a);
									const c = e.minTranslate() + (e.maxTranslate() - e.minTranslate()) * a;
									e.updateProgress(c),
									e.setTranslate(c),
									e.updateActiveIndex(),
									e.updateSlidesClasses()
							}
							function onDragStart(t) {
									const n = e.params.scrollbar
										, {scrollbar: r, $wrapperEl: s} = e
										, {$el: a, $dragEl: l} = r;
									d = !0,
									o = t.target === l[0] || t.target === l ? getPointerPosition(t) - t.target.getBoundingClientRect()[e.isHorizontal() ? "left" : "top"] : null,
									t.preventDefault(),
									t.stopPropagation(),
									s.transition(100),
									l.transition(100),
									setDragPosition(t),
									clearTimeout(u),
									a.transition(0),
									n.hide && a.css("opacity", 1),
									e.params.cssMode && e.$wrapperEl.css("scroll-snap-type", "none"),
									i("scrollbarDragStart", t)
							}
							function onDragMove(t) {
									const {scrollbar: n, $wrapperEl: r} = e
										, {$el: o, $dragEl: s} = n;
									d && (t.preventDefault ? t.preventDefault() : t.returnValue = !1,
									setDragPosition(t),
									r.transition(0),
									o.transition(0),
									s.transition(0),
									i("scrollbarDragMove", t))
							}
							function onDragEnd(t) {
									const n = e.params.scrollbar
										, {scrollbar: r, $wrapperEl: o} = e
										, {$el: s} = r;
									d && (d = !1,
									e.params.cssMode && (e.$wrapperEl.css("scroll-snap-type", ""),
									o.transition("")),
									n.hide && (clearTimeout(u),
									u = nextTick((()=>{
											s.css("opacity", 0),
											s.transition(400)
									}
									), 1e3)),
									i("scrollbarDragEnd", t),
									n.snapOnRelease && e.slideToClosest())
							}
							function events(t) {
									const {scrollbar: n, touchEventsTouch: i, touchEventsDesktop: o, params: s, support: a} = e
										, l = n.$el;
									if (!l)
											return;
									const c = l[0]
										, d = !(!a.passiveListener || !s.passiveListeners) && {
											passive: !1,
											capture: !1
									}
										, p = !(!a.passiveListener || !s.passiveListeners) && {
											passive: !0,
											capture: !1
									};
									if (!c)
											return;
									const u = "on" === t ? "addEventListener" : "removeEventListener";
									a.touch ? (c[u](i.start, onDragStart, d),
									c[u](i.move, onDragMove, d),
									c[u](i.end, onDragEnd, p)) : (c[u](o.start, onDragStart, d),
									r[u](o.move, onDragMove, d),
									r[u](o.end, onDragEnd, p))
							}
							function init() {
									const {scrollbar: t, $el: n} = e;
									e.params.scrollbar = createElementIfNotDefined(e, e.originalParams.scrollbar, e.params.scrollbar, {
											el: "swiper-scrollbar"
									});
									const i = e.params.scrollbar;
									if (!i.el)
											return;
									let r = a(i.el);
									e.params.uniqueNavElements && "string" == typeof i.el && r.length > 1 && 1 === n.find(i.el).length && (r = n.find(i.el)),
									r.addClass(e.isHorizontal() ? i.horizontalClass : i.verticalClass);
									let o = r.find(`.${e.params.scrollbar.dragClass}`);
									0 === o.length && (o = a(`<div class="${e.params.scrollbar.dragClass}"></div>`),
									r.append(o)),
									Object.assign(t, {
											$el: r,
											el: r[0],
											$dragEl: o,
											dragEl: o[0]
									}),
									i.draggable && e.params.scrollbar.el && e.scrollbar.el && events("on"),
									r && r[e.enabled ? "removeClass" : "addClass"](e.params.scrollbar.lockClass)
							}
							function destroy() {
									const t = e.params.scrollbar
										, n = e.scrollbar.$el;
									n && n.removeClass(e.isHorizontal() ? t.horizontalClass : t.verticalClass),
									e.params.scrollbar.el && e.scrollbar.el && events("off")
							}
							t({
									scrollbar: {
											el: null,
											dragSize: "auto",
											hide: !1,
											draggable: !1,
											snapOnRelease: !0,
											lockClass: "swiper-scrollbar-lock",
											dragClass: "swiper-scrollbar-drag",
											scrollbarDisabledClass: "swiper-scrollbar-disabled",
											horizontalClass: "swiper-scrollbar-horizontal",
											verticalClass: "swiper-scrollbar-vertical"
									}
							}),
							e.scrollbar = {
									el: null,
									dragEl: null,
									$el: null,
									$dragEl: null
							},
							n("init", (()=>{
									!1 === e.params.scrollbar.enabled ? disable() : (init(),
									updateSize(),
									setTranslate())
							}
							)),
							n("update resize observerUpdate lock unlock", (()=>{
									updateSize()
							}
							)),
							n("setTranslate", (()=>{
									setTranslate()
							}
							)),
							n("setTransition", ((t,n)=>{
									(function(t) {
											e.params.scrollbar.el && e.scrollbar.el && e.scrollbar.$dragEl.transition(t)
									}
									)(n)
							}
							)),
							n("enable disable", (()=>{
									const {$el: t} = e.scrollbar;
									t && t[e.enabled ? "removeClass" : "addClass"](e.params.scrollbar.lockClass)
							}
							)),
							n("destroy", (()=>{
									destroy()
							}
							));
							const disable = ()=>{
									e.$el.addClass(e.params.scrollbar.scrollbarDisabledClass),
									e.scrollbar.$el && e.scrollbar.$el.addClass(e.params.scrollbar.scrollbarDisabledClass),
									destroy()
							}
							;
							Object.assign(e.scrollbar, {
									enable: ()=>{
											e.$el.removeClass(e.params.scrollbar.scrollbarDisabledClass),
											e.scrollbar.$el && e.scrollbar.$el.removeClass(e.params.scrollbar.scrollbarDisabledClass),
											init(),
											updateSize(),
											setTranslate()
									}
									,
									disable,
									updateSize,
									setTranslate,
									init,
									destroy
							})
					}
					function Parallax({swiper: e, extendParams: t, on: n}) {
							t({
									parallax: {
											enabled: !1
									}
							});
							const setTransform = (t,n)=>{
									const {rtl: i} = e
										, r = a(t)
										, o = i ? -1 : 1
										, s = r.attr("data-swiper-parallax") || "0";
									let l = r.attr("data-swiper-parallax-x")
										, c = r.attr("data-swiper-parallax-y");
									const d = r.attr("data-swiper-parallax-scale")
										, p = r.attr("data-swiper-parallax-opacity");
									if (l || c ? (l = l || "0",
									c = c || "0") : e.isHorizontal() ? (l = s,
									c = "0") : (c = s,
									l = "0"),
									l = l.indexOf("%") >= 0 ? parseInt(l, 10) * n * o + "%" : l * n * o + "px",
									c = c.indexOf("%") >= 0 ? parseInt(c, 10) * n + "%" : c * n + "px",
									null != p) {
											const e = p - (p - 1) * (1 - Math.abs(n));
											r[0].style.opacity = e
									}
									if (null == d)
											r.transform(`translate3d(${l}, ${c}, 0px)`);
									else {
											const e = d - (d - 1) * (1 - Math.abs(n));
											r.transform(`translate3d(${l}, ${c}, 0px) scale(${e})`)
									}
							}
								, setTranslate = ()=>{
									const {$el: t, slides: n, progress: i, snapGrid: r} = e;
									t.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each((e=>{
											setTransform(e, i)
									}
									)),
									n.each(((t,n)=>{
											let o = t.progress;
											e.params.slidesPerGroup > 1 && "auto" !== e.params.slidesPerView && (o += Math.ceil(n / 2) - i * (r.length - 1)),
											o = Math.min(Math.max(o, -1), 1),
											a(t).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each((e=>{
													setTransform(e, o)
											}
											))
									}
									))
							}
							;
							n("beforeInit", (()=>{
									e.params.parallax.enabled && (e.params.watchSlidesProgress = !0,
									e.originalParams.watchSlidesProgress = !0)
							}
							)),
							n("init", (()=>{
									e.params.parallax.enabled && setTranslate()
							}
							)),
							n("setTranslate", (()=>{
									e.params.parallax.enabled && setTranslate()
							}
							)),
							n("setTransition", ((t,n)=>{
									e.params.parallax.enabled && ((t=e.params.speed)=>{
											const {$el: n} = e;
											n.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each((e=>{
													const n = a(e);
													let i = parseInt(n.attr("data-swiper-parallax-duration"), 10) || t;
													0 === t && (i = 0),
													n.transition(i)
											}
											))
									}
									)(n)
							}
							))
					}
					function Zoom({swiper: e, extendParams: t, on: n, emit: i}) {
							const r = ssr_window_esm_getWindow();
							t({
									zoom: {
											enabled: !1,
											maxRatio: 3,
											minRatio: 1,
											toggle: !0,
											containerClass: "swiper-zoom-container",
											zoomedSlideClass: "swiper-slide-zoomed"
									}
							}),
							e.zoom = {
									enabled: !1
							};
							let o, s, l, c = 1, d = !1;
							const p = {
									$slideEl: void 0,
									slideWidth: void 0,
									slideHeight: void 0,
									$imageEl: void 0,
									$imageWrapEl: void 0,
									maxRatio: 3
							}
								, u = {
									isTouched: void 0,
									isMoved: void 0,
									currentX: void 0,
									currentY: void 0,
									minX: void 0,
									minY: void 0,
									maxX: void 0,
									maxY: void 0,
									width: void 0,
									height: void 0,
									startX: void 0,
									startY: void 0,
									touchesStart: {},
									touchesCurrent: {}
							}
								, h = {
									x: void 0,
									y: void 0,
									prevPositionX: void 0,
									prevPositionY: void 0,
									prevTime: void 0
							};
							let m = 1;
							function getDistanceBetweenTouches(e) {
									if (e.targetTouches.length < 2)
											return 1;
									const t = e.targetTouches[0].pageX
										, n = e.targetTouches[0].pageY
										, i = e.targetTouches[1].pageX
										, r = e.targetTouches[1].pageY;
									return Math.sqrt((i - t) ** 2 + (r - n) ** 2)
							}
							function onGestureStart(t) {
									const n = e.support
										, i = e.params.zoom;
									if (s = !1,
									l = !1,
									!n.gestures) {
											if ("touchstart" !== t.type || "touchstart" === t.type && t.targetTouches.length < 2)
													return;
											s = !0,
											p.scaleStart = getDistanceBetweenTouches(t)
									}
									p.$slideEl && p.$slideEl.length || (p.$slideEl = a(t.target).closest(`.${e.params.slideClass}`),
									0 === p.$slideEl.length && (p.$slideEl = e.slides.eq(e.activeIndex)),
									p.$imageEl = p.$slideEl.find(`.${i.containerClass}`).eq(0).find("picture, img, svg, canvas, .swiper-zoom-target").eq(0),
									p.$imageWrapEl = p.$imageEl.parent(`.${i.containerClass}`),
									p.maxRatio = p.$imageWrapEl.attr("data-swiper-zoom") || i.maxRatio,
									0 !== p.$imageWrapEl.length) ? (p.$imageEl && p.$imageEl.transition(0),
									d = !0) : p.$imageEl = void 0
							}
							function onGestureChange(t) {
									const n = e.support
										, i = e.params.zoom
										, r = e.zoom;
									if (!n.gestures) {
											if ("touchmove" !== t.type || "touchmove" === t.type && t.targetTouches.length < 2)
													return;
											l = !0,
											p.scaleMove = getDistanceBetweenTouches(t)
									}
									p.$imageEl && 0 !== p.$imageEl.length ? (n.gestures ? r.scale = t.scale * c : r.scale = p.scaleMove / p.scaleStart * c,
									r.scale > p.maxRatio && (r.scale = p.maxRatio - 1 + (r.scale - p.maxRatio + 1) ** .5),
									r.scale < i.minRatio && (r.scale = i.minRatio + 1 - (i.minRatio - r.scale + 1) ** .5),
									p.$imageEl.transform(`translate3d(0,0,0) scale(${r.scale})`)) : "gesturechange" === t.type && onGestureStart(t)
							}
							function onGestureEnd(t) {
									const n = e.device
										, i = e.support
										, r = e.params.zoom
										, o = e.zoom;
									if (!i.gestures) {
											if (!s || !l)
													return;
											if ("touchend" !== t.type || "touchend" === t.type && t.changedTouches.length < 2 && !n.android)
													return;
											s = !1,
											l = !1
									}
									p.$imageEl && 0 !== p.$imageEl.length && (o.scale = Math.max(Math.min(o.scale, p.maxRatio), r.minRatio),
									p.$imageEl.transition(e.params.speed).transform(`translate3d(0,0,0) scale(${o.scale})`),
									c = o.scale,
									d = !1,
									1 === o.scale && (p.$slideEl = void 0))
							}
							function onTouchMove(t) {
									const n = e.zoom;
									if (!p.$imageEl || 0 === p.$imageEl.length)
											return;
									if (e.allowClick = !1,
									!u.isTouched || !p.$slideEl)
											return;
									u.isMoved || (u.width = p.$imageEl[0].offsetWidth,
									u.height = p.$imageEl[0].offsetHeight,
									u.startX = getTranslate(p.$imageWrapEl[0], "x") || 0,
									u.startY = getTranslate(p.$imageWrapEl[0], "y") || 0,
									p.slideWidth = p.$slideEl[0].offsetWidth,
									p.slideHeight = p.$slideEl[0].offsetHeight,
									p.$imageWrapEl.transition(0));
									const i = u.width * n.scale
										, r = u.height * n.scale;
									if (!(i < p.slideWidth && r < p.slideHeight)) {
											if (u.minX = Math.min(p.slideWidth / 2 - i / 2, 0),
											u.maxX = -u.minX,
											u.minY = Math.min(p.slideHeight / 2 - r / 2, 0),
											u.maxY = -u.minY,
											u.touchesCurrent.x = "touchmove" === t.type ? t.targetTouches[0].pageX : t.pageX,
											u.touchesCurrent.y = "touchmove" === t.type ? t.targetTouches[0].pageY : t.pageY,
											!u.isMoved && !d) {
													if (e.isHorizontal() && (Math.floor(u.minX) === Math.floor(u.startX) && u.touchesCurrent.x < u.touchesStart.x || Math.floor(u.maxX) === Math.floor(u.startX) && u.touchesCurrent.x > u.touchesStart.x))
															return void (u.isTouched = !1);
													if (!e.isHorizontal() && (Math.floor(u.minY) === Math.floor(u.startY) && u.touchesCurrent.y < u.touchesStart.y || Math.floor(u.maxY) === Math.floor(u.startY) && u.touchesCurrent.y > u.touchesStart.y))
															return void (u.isTouched = !1)
											}
											t.cancelable && t.preventDefault(),
											t.stopPropagation(),
											u.isMoved = !0,
											u.currentX = u.touchesCurrent.x - u.touchesStart.x + u.startX,
											u.currentY = u.touchesCurrent.y - u.touchesStart.y + u.startY,
											u.currentX < u.minX && (u.currentX = u.minX + 1 - (u.minX - u.currentX + 1) ** .8),
											u.currentX > u.maxX && (u.currentX = u.maxX - 1 + (u.currentX - u.maxX + 1) ** .8),
											u.currentY < u.minY && (u.currentY = u.minY + 1 - (u.minY - u.currentY + 1) ** .8),
											u.currentY > u.maxY && (u.currentY = u.maxY - 1 + (u.currentY - u.maxY + 1) ** .8),
											h.prevPositionX || (h.prevPositionX = u.touchesCurrent.x),
											h.prevPositionY || (h.prevPositionY = u.touchesCurrent.y),
											h.prevTime || (h.prevTime = Date.now()),
											h.x = (u.touchesCurrent.x - h.prevPositionX) / (Date.now() - h.prevTime) / 2,
											h.y = (u.touchesCurrent.y - h.prevPositionY) / (Date.now() - h.prevTime) / 2,
											Math.abs(u.touchesCurrent.x - h.prevPositionX) < 2 && (h.x = 0),
											Math.abs(u.touchesCurrent.y - h.prevPositionY) < 2 && (h.y = 0),
											h.prevPositionX = u.touchesCurrent.x,
											h.prevPositionY = u.touchesCurrent.y,
											h.prevTime = Date.now(),
											p.$imageWrapEl.transform(`translate3d(${u.currentX}px, ${u.currentY}px,0)`)
									}
							}
							function onTransitionEnd() {
									const t = e.zoom;
									p.$slideEl && e.previousIndex !== e.activeIndex && (p.$imageEl && p.$imageEl.transform("translate3d(0,0,0) scale(1)"),
									p.$imageWrapEl && p.$imageWrapEl.transform("translate3d(0,0,0)"),
									t.scale = 1,
									c = 1,
									p.$slideEl = void 0,
									p.$imageEl = void 0,
									p.$imageWrapEl = void 0)
							}
							function zoomIn(t) {
									const n = e.zoom
										, i = e.params.zoom;
									if (p.$slideEl || (t && t.target && (p.$slideEl = a(t.target).closest(`.${e.params.slideClass}`)),
									p.$slideEl || (e.params.virtual && e.params.virtual.enabled && e.virtual ? p.$slideEl = e.$wrapperEl.children(`.${e.params.slideActiveClass}`) : p.$slideEl = e.slides.eq(e.activeIndex)),
									p.$imageEl = p.$slideEl.find(`.${i.containerClass}`).eq(0).find("picture, img, svg, canvas, .swiper-zoom-target").eq(0),
									p.$imageWrapEl = p.$imageEl.parent(`.${i.containerClass}`)),
									!p.$imageEl || 0 === p.$imageEl.length || !p.$imageWrapEl || 0 === p.$imageWrapEl.length)
											return;
									let o, s, l, d, h, m, g, _, f, y, v, b, S, C, E, T, I, w;
									e.params.cssMode && (e.wrapperEl.style.overflow = "hidden",
									e.wrapperEl.style.touchAction = "none"),
									p.$slideEl.addClass(`${i.zoomedSlideClass}`),
									void 0 === u.touchesStart.x && t ? (o = "touchend" === t.type ? t.changedTouches[0].pageX : t.pageX,
									s = "touchend" === t.type ? t.changedTouches[0].pageY : t.pageY) : (o = u.touchesStart.x,
									s = u.touchesStart.y),
									n.scale = p.$imageWrapEl.attr("data-swiper-zoom") || i.maxRatio,
									c = p.$imageWrapEl.attr("data-swiper-zoom") || i.maxRatio,
									t ? (I = p.$slideEl[0].offsetWidth,
									w = p.$slideEl[0].offsetHeight,
									l = p.$slideEl.offset().left + r.scrollX,
									d = p.$slideEl.offset().top + r.scrollY,
									h = l + I / 2 - o,
									m = d + w / 2 - s,
									f = p.$imageEl[0].offsetWidth,
									y = p.$imageEl[0].offsetHeight,
									v = f * n.scale,
									b = y * n.scale,
									S = Math.min(I / 2 - v / 2, 0),
									C = Math.min(w / 2 - b / 2, 0),
									E = -S,
									T = -C,
									g = h * n.scale,
									_ = m * n.scale,
									g < S && (g = S),
									g > E && (g = E),
									_ < C && (_ = C),
									_ > T && (_ = T)) : (g = 0,
									_ = 0),
									p.$imageWrapEl.transition(300).transform(`translate3d(${g}px, ${_}px,0)`),
									p.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${n.scale})`)
							}
							function zoomOut() {
									const t = e.zoom
										, n = e.params.zoom;
									p.$slideEl || (e.params.virtual && e.params.virtual.enabled && e.virtual ? p.$slideEl = e.$wrapperEl.children(`.${e.params.slideActiveClass}`) : p.$slideEl = e.slides.eq(e.activeIndex),
									p.$imageEl = p.$slideEl.find(`.${n.containerClass}`).eq(0).find("picture, img, svg, canvas, .swiper-zoom-target").eq(0),
									p.$imageWrapEl = p.$imageEl.parent(`.${n.containerClass}`)),
									p.$imageEl && 0 !== p.$imageEl.length && p.$imageWrapEl && 0 !== p.$imageWrapEl.length && (e.params.cssMode && (e.wrapperEl.style.overflow = "",
									e.wrapperEl.style.touchAction = ""),
									t.scale = 1,
									c = 1,
									p.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),
									p.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),
									p.$slideEl.removeClass(`${n.zoomedSlideClass}`),
									p.$slideEl = void 0)
							}
							function zoomToggle(t) {
									const n = e.zoom;
									n.scale && 1 !== n.scale ? zoomOut() : zoomIn(t)
							}
							function getListeners() {
									const t = e.support;
									return {
											passiveListener: !("touchstart" !== e.touchEvents.start || !t.passiveListener || !e.params.passiveListeners) && {
													passive: !0,
													capture: !1
											},
											activeListenerWithCapture: !t.passiveListener || {
													passive: !1,
													capture: !0
											}
									}
							}
							function getSlideSelector() {
									return `.${e.params.slideClass}`
							}
							function toggleGestures(t) {
									const {passiveListener: n} = getListeners()
										, i = getSlideSelector();
									e.$wrapperEl[t]("gesturestart", i, onGestureStart, n),
									e.$wrapperEl[t]("gesturechange", i, onGestureChange, n),
									e.$wrapperEl[t]("gestureend", i, onGestureEnd, n)
							}
							function enableGestures() {
									o || (o = !0,
									toggleGestures("on"))
							}
							function disableGestures() {
									o && (o = !1,
									toggleGestures("off"))
							}
							function enable() {
									const t = e.zoom;
									if (t.enabled)
											return;
									t.enabled = !0;
									const n = e.support
										, {passiveListener: i, activeListenerWithCapture: r} = getListeners()
										, o = getSlideSelector();
									n.gestures ? (e.$wrapperEl.on(e.touchEvents.start, enableGestures, i),
									e.$wrapperEl.on(e.touchEvents.end, disableGestures, i)) : "touchstart" === e.touchEvents.start && (e.$wrapperEl.on(e.touchEvents.start, o, onGestureStart, i),
									e.$wrapperEl.on(e.touchEvents.move, o, onGestureChange, r),
									e.$wrapperEl.on(e.touchEvents.end, o, onGestureEnd, i),
									e.touchEvents.cancel && e.$wrapperEl.on(e.touchEvents.cancel, o, onGestureEnd, i)),
									e.$wrapperEl.on(e.touchEvents.move, `.${e.params.zoom.containerClass}`, onTouchMove, r)
							}
							function disable() {
									const t = e.zoom;
									if (!t.enabled)
											return;
									const n = e.support;
									t.enabled = !1;
									const {passiveListener: i, activeListenerWithCapture: r} = getListeners()
										, o = getSlideSelector();
									n.gestures ? (e.$wrapperEl.off(e.touchEvents.start, enableGestures, i),
									e.$wrapperEl.off(e.touchEvents.end, disableGestures, i)) : "touchstart" === e.touchEvents.start && (e.$wrapperEl.off(e.touchEvents.start, o, onGestureStart, i),
									e.$wrapperEl.off(e.touchEvents.move, o, onGestureChange, r),
									e.$wrapperEl.off(e.touchEvents.end, o, onGestureEnd, i),
									e.touchEvents.cancel && e.$wrapperEl.off(e.touchEvents.cancel, o, onGestureEnd, i)),
									e.$wrapperEl.off(e.touchEvents.move, `.${e.params.zoom.containerClass}`, onTouchMove, r)
							}
							Object.defineProperty(e.zoom, "scale", {
									get: ()=>m,
									set(e) {
											if (m !== e) {
													const t = p.$imageEl ? p.$imageEl[0] : void 0
														, n = p.$slideEl ? p.$slideEl[0] : void 0;
													i("zoomChange", e, t, n)
											}
											m = e
									}
							}),
							n("init", (()=>{
									e.params.zoom.enabled && enable()
							}
							)),
							n("destroy", (()=>{
									disable()
							}
							)),
							n("touchStart", ((t,n)=>{
									e.zoom.enabled && function(t) {
											const n = e.device;
											p.$imageEl && 0 !== p.$imageEl.length && (u.isTouched || (n.android && t.cancelable && t.preventDefault(),
											u.isTouched = !0,
											u.touchesStart.x = "touchstart" === t.type ? t.targetTouches[0].pageX : t.pageX,
											u.touchesStart.y = "touchstart" === t.type ? t.targetTouches[0].pageY : t.pageY))
									}(n)
							}
							)),
							n("touchEnd", ((t,n)=>{
									e.zoom.enabled && function() {
											const t = e.zoom;
											if (!p.$imageEl || 0 === p.$imageEl.length)
													return;
											if (!u.isTouched || !u.isMoved)
													return u.isTouched = !1,
													void (u.isMoved = !1);
											u.isTouched = !1,
											u.isMoved = !1;
											let n = 300
												, i = 300;
											const r = h.x * n
												, o = u.currentX + r
												, s = h.y * i
												, a = u.currentY + s;
											0 !== h.x && (n = Math.abs((o - u.currentX) / h.x)),
											0 !== h.y && (i = Math.abs((a - u.currentY) / h.y));
											const l = Math.max(n, i);
											u.currentX = o,
											u.currentY = a;
											const c = u.width * t.scale
												, d = u.height * t.scale;
											u.minX = Math.min(p.slideWidth / 2 - c / 2, 0),
											u.maxX = -u.minX,
											u.minY = Math.min(p.slideHeight / 2 - d / 2, 0),
											u.maxY = -u.minY,
											u.currentX = Math.max(Math.min(u.currentX, u.maxX), u.minX),
											u.currentY = Math.max(Math.min(u.currentY, u.maxY), u.minY),
											p.$imageWrapEl.transition(l).transform(`translate3d(${u.currentX}px, ${u.currentY}px,0)`)
									}()
							}
							)),
							n("doubleTap", ((t,n)=>{
									!e.animating && e.params.zoom.enabled && e.zoom.enabled && e.params.zoom.toggle && zoomToggle(n)
							}
							)),
							n("transitionEnd", (()=>{
									e.zoom.enabled && e.params.zoom.enabled && onTransitionEnd()
							}
							)),
							n("slideChange", (()=>{
									e.zoom.enabled && e.params.zoom.enabled && e.params.cssMode && onTransitionEnd()
							}
							)),
							Object.assign(e.zoom, {
									enable,
									disable,
									in: zoomIn,
									out: zoomOut,
									toggle: zoomToggle
							})
					}
					function Lazy({swiper: e, extendParams: t, on: n, emit: i}) {
							t({
									lazy: {
											checkInView: !1,
											enabled: !1,
											loadPrevNext: !1,
											loadPrevNextAmount: 1,
											loadOnTransitionStart: !1,
											scrollingElement: "",
											elementClass: "swiper-lazy",
											loadingClass: "swiper-lazy-loading",
											loadedClass: "swiper-lazy-loaded",
											preloaderClass: "swiper-lazy-preloader"
									}
							}),
							e.lazy = {};
							let r = !1
								, o = !1;
							function loadInSlide(t, n=!0) {
									const r = e.params.lazy;
									if (void 0 === t)
											return;
									if (0 === e.slides.length)
											return;
									const o = e.virtual && e.params.virtual.enabled ? e.$wrapperEl.children(`.${e.params.slideClass}[data-swiper-slide-index="${t}"]`) : e.slides.eq(t)
										, s = o.find(`.${r.elementClass}:not(.${r.loadedClass}):not(.${r.loadingClass})`);
									!o.hasClass(r.elementClass) || o.hasClass(r.loadedClass) || o.hasClass(r.loadingClass) || s.push(o[0]),
									0 !== s.length && s.each((t=>{
											const s = a(t);
											s.addClass(r.loadingClass);
											const l = s.attr("data-background")
												, c = s.attr("data-src")
												, d = s.attr("data-srcset")
												, p = s.attr("data-sizes")
												, u = s.parent("picture");
											e.loadImage(s[0], c || l, d, p, !1, (()=>{
													if (null != e && e && (!e || e.params) && !e.destroyed) {
															if (l ? (s.css("background-image", `url("${l}")`),
															s.removeAttr("data-background")) : (d && (s.attr("srcset", d),
															s.removeAttr("data-srcset")),
															p && (s.attr("sizes", p),
															s.removeAttr("data-sizes")),
															u.length && u.children("source").each((e=>{
																	const t = a(e);
																	t.attr("data-srcset") && (t.attr("srcset", t.attr("data-srcset")),
																	t.removeAttr("data-srcset"))
															}
															)),
															c && (s.attr("src", c),
															s.removeAttr("data-src"))),
															s.addClass(r.loadedClass).removeClass(r.loadingClass),
															o.find(`.${r.preloaderClass}`).remove(),
															e.params.loop && n) {
																	const t = o.attr("data-swiper-slide-index");
																	if (o.hasClass(e.params.slideDuplicateClass)) {
																			loadInSlide(e.$wrapperEl.children(`[data-swiper-slide-index="${t}"]:not(.${e.params.slideDuplicateClass})`).index(), !1)
																	} else {
																			loadInSlide(e.$wrapperEl.children(`.${e.params.slideDuplicateClass}[data-swiper-slide-index="${t}"]`).index(), !1)
																	}
															}
															i("lazyImageReady", o[0], s[0]),
															e.params.autoHeight && e.updateAutoHeight()
													}
											}
											)),
											i("lazyImageLoad", o[0], s[0])
									}
									))
							}
							function load() {
									const {$wrapperEl: t, params: n, slides: i, activeIndex: r} = e
										, s = e.virtual && n.virtual.enabled
										, l = n.lazy;
									let c = n.slidesPerView;
									function slideExist(e) {
											if (s) {
													if (t.children(`.${n.slideClass}[data-swiper-slide-index="${e}"]`).length)
															return !0
											} else if (i[e])
													return !0;
											return !1
									}
									function slideIndex(e) {
											return s ? a(e).attr("data-swiper-slide-index") : a(e).index()
									}
									if ("auto" === c && (c = 0),
									o || (o = !0),
									e.params.watchSlidesProgress)
											t.children(`.${n.slideVisibleClass}`).each((e=>{
													loadInSlide(s ? a(e).attr("data-swiper-slide-index") : a(e).index())
											}
											));
									else if (c > 1)
											for (let e = r; e < r + c; e += 1)
													slideExist(e) && loadInSlide(e);
									else
											loadInSlide(r);
									if (l.loadPrevNext)
											if (c > 1 || l.loadPrevNextAmount && l.loadPrevNextAmount > 1) {
													const e = l.loadPrevNextAmount
														, t = Math.ceil(c)
														, n = Math.min(r + t + Math.max(e, t), i.length)
														, o = Math.max(r - Math.max(t, e), 0);
													for (let e = r + t; e < n; e += 1)
															slideExist(e) && loadInSlide(e);
													for (let e = o; e < r; e += 1)
															slideExist(e) && loadInSlide(e)
											} else {
													const e = t.children(`.${n.slideNextClass}`);
													e.length > 0 && loadInSlide(slideIndex(e));
													const i = t.children(`.${n.slidePrevClass}`);
													i.length > 0 && loadInSlide(slideIndex(i))
											}
							}
							function checkInViewOnLoad() {
									const t = ssr_window_esm_getWindow();
									if (!e || e.destroyed)
											return;
									const n = e.params.lazy.scrollingElement ? a(e.params.lazy.scrollingElement) : a(t)
										, i = n[0] === t
										, o = i ? t.innerWidth : n[0].offsetWidth
										, s = i ? t.innerHeight : n[0].offsetHeight
										, l = e.$el.offset()
										, {rtlTranslate: c} = e;
									let d = !1;
									c && (l.left -= e.$el[0].scrollLeft);
									const p = [[l.left, l.top], [l.left + e.width, l.top], [l.left, l.top + e.height], [l.left + e.width, l.top + e.height]];
									for (let e = 0; e < p.length; e += 1) {
											const t = p[e];
											if (t[0] >= 0 && t[0] <= o && t[1] >= 0 && t[1] <= s) {
													if (0 === t[0] && 0 === t[1])
															continue;
													d = !0
											}
									}
									const u = !("touchstart" !== e.touchEvents.start || !e.support.passiveListener || !e.params.passiveListeners) && {
											passive: !0,
											capture: !1
									};
									d ? (load(),
									n.off("scroll", checkInViewOnLoad, u)) : r || (r = !0,
									n.on("scroll", checkInViewOnLoad, u))
							}
							n("beforeInit", (()=>{
									e.params.lazy.enabled && e.params.preloadImages && (e.params.preloadImages = !1)
							}
							)),
							n("init", (()=>{
									e.params.lazy.enabled && (e.params.lazy.checkInView ? checkInViewOnLoad() : load())
							}
							)),
							n("scroll", (()=>{
									e.params.freeMode && e.params.freeMode.enabled && !e.params.freeMode.sticky && load()
							}
							)),
							n("scrollbarDragMove resize _freeModeNoMomentumRelease", (()=>{
									e.params.lazy.enabled && (e.params.lazy.checkInView ? checkInViewOnLoad() : load())
							}
							)),
							n("transitionStart", (()=>{
									e.params.lazy.enabled && (e.params.lazy.loadOnTransitionStart || !e.params.lazy.loadOnTransitionStart && !o) && (e.params.lazy.checkInView ? checkInViewOnLoad() : load())
							}
							)),
							n("transitionEnd", (()=>{
									e.params.lazy.enabled && !e.params.lazy.loadOnTransitionStart && (e.params.lazy.checkInView ? checkInViewOnLoad() : load())
							}
							)),
							n("slideChange", (()=>{
									const {lazy: t, cssMode: n, watchSlidesProgress: i, touchReleaseOnEdges: r, resistanceRatio: o} = e.params;
									t.enabled && (n || i && (r || 0 === o)) && load()
							}
							)),
							n("destroy", (()=>{
									e.$el && e.$el.find(`.${e.params.lazy.loadingClass}`).removeClass(e.params.lazy.loadingClass)
							}
							)),
							Object.assign(e.lazy, {
									load,
									loadInSlide
							})
					}
					function Controller({swiper: e, extendParams: t, on: n}) {
							function LinearSpline(e, t) {
									const n = function() {
											let e, t, n;
											return (i,r)=>{
													for (t = -1,
													e = i.length; e - t > 1; )
															n = e + t >> 1,
															i[n] <= r ? t = n : e = n;
													return e
											}
									}();
									let i, r;
									return this.x = e,
									this.y = t,
									this.lastIndex = e.length - 1,
									this.interpolate = function(e) {
											return e ? (r = n(this.x, e),
											i = r - 1,
											(e - this.x[i]) * (this.y[r] - this.y[i]) / (this.x[r] - this.x[i]) + this.y[i]) : 0
									}
									,
									this
							}
							function removeSpline() {
									e.controller.control && e.controller.spline && (e.controller.spline = void 0,
									delete e.controller.spline)
							}
							t({
									controller: {
											control: void 0,
											inverse: !1,
											by: "slide"
									}
							}),
							e.controller = {
									control: void 0
							},
							n("beforeInit", (()=>{
									e.controller.control = e.params.controller.control
							}
							)),
							n("update", (()=>{
									removeSpline()
							}
							)),
							n("resize", (()=>{
									removeSpline()
							}
							)),
							n("observerUpdate", (()=>{
									removeSpline()
							}
							)),
							n("setTranslate", ((t,n,i)=>{
									e.controller.control && e.controller.setTranslate(n, i)
							}
							)),
							n("setTransition", ((t,n,i)=>{
									e.controller.control && e.controller.setTransition(n, i)
							}
							)),
							Object.assign(e.controller, {
									setTranslate: function(t, n) {
											const i = e.controller.control;
											let r, o;
											const s = e.constructor;
											function setControlledTranslate(t) {
													const n = e.rtlTranslate ? -e.translate : e.translate;
													"slide" === e.params.controller.by && (function(t) {
															e.controller.spline || (e.controller.spline = e.params.loop ? new LinearSpline(e.slidesGrid,t.slidesGrid) : new LinearSpline(e.snapGrid,t.snapGrid))
													}(t),
													o = -e.controller.spline.interpolate(-n)),
													o && "container" !== e.params.controller.by || (r = (t.maxTranslate() - t.minTranslate()) / (e.maxTranslate() - e.minTranslate()),
													o = (n - e.minTranslate()) * r + t.minTranslate()),
													e.params.controller.inverse && (o = t.maxTranslate() - o),
													t.updateProgress(o),
													t.setTranslate(o, e),
													t.updateActiveIndex(),
													t.updateSlidesClasses()
											}
											if (Array.isArray(i))
													for (let e = 0; e < i.length; e += 1)
															i[e] !== n && i[e]instanceof s && setControlledTranslate(i[e]);
											else
													i instanceof s && n !== i && setControlledTranslate(i)
									},
									setTransition: function(t, n) {
											const i = e.constructor
												, r = e.controller.control;
											let o;
											function setControlledTransition(n) {
													n.setTransition(t, e),
													0 !== t && (n.transitionStart(),
													n.params.autoHeight && nextTick((()=>{
															n.updateAutoHeight()
													}
													)),
													n.$wrapperEl.transitionEnd((()=>{
															r && (n.params.loop && "slide" === e.params.controller.by && n.loopFix(),
															n.transitionEnd())
													}
													)))
											}
											if (Array.isArray(r))
													for (o = 0; o < r.length; o += 1)
															r[o] !== n && r[o]instanceof i && setControlledTransition(r[o]);
											else
													r instanceof i && n !== r && setControlledTransition(r)
									}
							})
					}
					function A11y({swiper: e, extendParams: t, on: n}) {
							t({
									a11y: {
											enabled: !0,
											notificationClass: "swiper-notification",
											prevSlideMessage: "Previous slide",
											nextSlideMessage: "Next slide",
											firstSlideMessage: "This is the first slide",
											lastSlideMessage: "This is the last slide",
											paginationBulletMessage: "Go to slide {{index}}",
											slideLabelMessage: "{{index}} / {{slidesLength}}",
											containerMessage: null,
											containerRoleDescriptionMessage: null,
											itemRoleDescriptionMessage: null,
											slideRole: "group",
											id: null
									}
							}),
							e.a11y = {
									clicked: !1
							};
							let i = null;
							function notify(e) {
									const t = i;
									0 !== t.length && (t.html(""),
									t.html(e))
							}
							function makeElFocusable(e) {
									e.attr("tabIndex", "0")
							}
							function makeElNotFocusable(e) {
									e.attr("tabIndex", "-1")
							}
							function addElRole(e, t) {
									e.attr("role", t)
							}
							function addElRoleDescription(e, t) {
									e.attr("aria-roledescription", t)
							}
							function addElLabel(e, t) {
									e.attr("aria-label", t)
							}
							function disableEl(e) {
									e.attr("aria-disabled", !0)
							}
							function enableEl(e) {
									e.attr("aria-disabled", !1)
							}
							function onEnterOrSpaceKey(t) {
									if (13 !== t.keyCode && 32 !== t.keyCode)
											return;
									const n = e.params.a11y
										, i = a(t.target);
									e.navigation && e.navigation.$nextEl && i.is(e.navigation.$nextEl) && (e.isEnd && !e.params.loop || e.slideNext(),
									e.isEnd ? notify(n.lastSlideMessage) : notify(n.nextSlideMessage)),
									e.navigation && e.navigation.$prevEl && i.is(e.navigation.$prevEl) && (e.isBeginning && !e.params.loop || e.slidePrev(),
									e.isBeginning ? notify(n.firstSlideMessage) : notify(n.prevSlideMessage)),
									e.pagination && i.is(classesToSelector(e.params.pagination.bulletClass)) && i[0].click()
							}
							function hasPagination() {
									return e.pagination && e.pagination.bullets && e.pagination.bullets.length
							}
							function hasClickablePagination() {
									return hasPagination() && e.params.pagination.clickable
							}
							const initNavEl = (e,t,n)=>{
									makeElFocusable(e),
									"BUTTON" !== e[0].tagName && (addElRole(e, "button"),
									e.on("keydown", onEnterOrSpaceKey)),
									addElLabel(e, n),
									function(e, t) {
											e.attr("aria-controls", t)
									}(e, t)
							}
								, handlePointerDown = ()=>{
									e.a11y.clicked = !0
							}
								, handlePointerUp = ()=>{
									requestAnimationFrame((()=>{
											requestAnimationFrame((()=>{
													e.destroyed || (e.a11y.clicked = !1)
											}
											))
									}
									))
							}
								, handleFocus = t=>{
									if (e.a11y.clicked)
											return;
									const n = t.target.closest(`.${e.params.slideClass}`);
									if (!n || !e.slides.includes(n))
											return;
									const i = e.slides.indexOf(n) === e.activeIndex
										, r = e.params.watchSlidesProgress && e.visibleSlides && e.visibleSlides.includes(n);
									i || r || t.sourceCapabilities && t.sourceCapabilities.firesTouchEvents || (e.isHorizontal() ? e.el.scrollLeft = 0 : e.el.scrollTop = 0,
									e.slideTo(e.slides.indexOf(n), 0))
							}
								, initSlides = ()=>{
									const t = e.params.a11y;
									t.itemRoleDescriptionMessage && addElRoleDescription(a(e.slides), t.itemRoleDescriptionMessage),
									t.slideRole && addElRole(a(e.slides), t.slideRole);
									const n = e.params.loop ? e.slides.filter((t=>!t.classList.contains(e.params.slideDuplicateClass))).length : e.slides.length;
									t.slideLabelMessage && e.slides.each(((i,r)=>{
											const o = a(i)
												, s = e.params.loop ? parseInt(o.attr("data-swiper-slide-index"), 10) : r;
											addElLabel(o, t.slideLabelMessage.replace(/\{\{index\}\}/, s + 1).replace(/\{\{slidesLength\}\}/, n))
									}
									))
							}
								, init = ()=>{
									const t = e.params.a11y;
									e.$el.append(i);
									const n = e.$el;
									t.containerRoleDescriptionMessage && addElRoleDescription(n, t.containerRoleDescriptionMessage),
									t.containerMessage && addElLabel(n, t.containerMessage);
									const r = e.$wrapperEl
										, o = t.id || r.attr("id") || `swiper-wrapper-${function(e=16) {
											return "x".repeat(e).replace(/x/g, (()=>Math.round(16 * Math.random()).toString(16)))
									}(16)}`
										, s = e.params.autoplay && e.params.autoplay.enabled ? "off" : "polite";
									var a;
									let l, c;
									a = o,
									r.attr("id", a),
									function(e, t) {
											e.attr("aria-live", t)
									}(r, s),
									initSlides(),
									e.navigation && e.navigation.$nextEl && (l = e.navigation.$nextEl),
									e.navigation && e.navigation.$prevEl && (c = e.navigation.$prevEl),
									l && l.length && initNavEl(l, o, t.nextSlideMessage),
									c && c.length && initNavEl(c, o, t.prevSlideMessage),
									hasClickablePagination() && e.pagination.$el.on("keydown", classesToSelector(e.params.pagination.bulletClass), onEnterOrSpaceKey),
									e.$el.on("focus", handleFocus, !0),
									e.$el.on("pointerdown", handlePointerDown, !0),
									e.$el.on("pointerup", handlePointerUp, !0)
							}
							;
							n("beforeInit", (()=>{
									i = a(`<span class="${e.params.a11y.notificationClass}" aria-live="assertive" aria-atomic="true"></span>`)
							}
							)),
							n("afterInit", (()=>{
									e.params.a11y.enabled && init()
							}
							)),
							n("slidesLengthChange snapGridLengthChange slidesGridLengthChange", (()=>{
									e.params.a11y.enabled && initSlides()
							}
							)),
							n("fromEdge toEdge afterInit lock unlock", (()=>{
									e.params.a11y.enabled && function() {
											if (e.params.loop || e.params.rewind || !e.navigation)
													return;
											const {$nextEl: t, $prevEl: n} = e.navigation;
											n && n.length > 0 && (e.isBeginning ? (disableEl(n),
											makeElNotFocusable(n)) : (enableEl(n),
											makeElFocusable(n))),
											t && t.length > 0 && (e.isEnd ? (disableEl(t),
											makeElNotFocusable(t)) : (enableEl(t),
											makeElFocusable(t)))
									}()
							}
							)),
							n("paginationUpdate", (()=>{
									e.params.a11y.enabled && function() {
											const t = e.params.a11y;
											hasPagination() && e.pagination.bullets.each((n=>{
													const i = a(n);
													e.params.pagination.clickable && (makeElFocusable(i),
													e.params.pagination.renderBullet || (addElRole(i, "button"),
													addElLabel(i, t.paginationBulletMessage.replace(/\{\{index\}\}/, i.index() + 1)))),
													i.is(`.${e.params.pagination.bulletActiveClass}`) ? i.attr("aria-current", "true") : i.removeAttr("aria-current")
											}
											))
									}()
							}
							)),
							n("destroy", (()=>{
									e.params.a11y.enabled && function() {
											let t, n;
											i && i.length > 0 && i.remove(),
											e.navigation && e.navigation.$nextEl && (t = e.navigation.$nextEl),
											e.navigation && e.navigation.$prevEl && (n = e.navigation.$prevEl),
											t && t.off("keydown", onEnterOrSpaceKey),
											n && n.off("keydown", onEnterOrSpaceKey),
											hasClickablePagination() && e.pagination.$el.off("keydown", classesToSelector(e.params.pagination.bulletClass), onEnterOrSpaceKey),
											e.$el.off("focus", handleFocus, !0),
											e.$el.off("pointerdown", handlePointerDown, !0),
											e.$el.off("pointerup", handlePointerUp, !0)
									}()
							}
							))
					}
					function History({swiper: e, extendParams: t, on: n}) {
							t({
									history: {
											enabled: !1,
											root: "",
											replaceState: !1,
											key: "slides",
											keepQuery: !1
									}
							});
							let i = !1
								, r = {};
							const slugify = e=>e.toString().replace(/\s+/g, "-").replace(/[^\w-]+/g, "").replace(/--+/g, "-").replace(/^-+/, "").replace(/-+$/, "")
								, getPathValues = e=>{
									const t = ssr_window_esm_getWindow();
									let n;
									n = e ? new URL(e) : t.location;
									const i = n.pathname.slice(1).split("/").filter((e=>"" !== e))
										, r = i.length;
									return {
											key: i[r - 2],
											value: i[r - 1]
									}
							}
								, setHistory = (t,n)=>{
									const r = ssr_window_esm_getWindow();
									if (!i || !e.params.history.enabled)
											return;
									let o;
									o = e.params.url ? new URL(e.params.url) : r.location;
									const s = e.slides.eq(n);
									let a = slugify(s.attr("data-history"));
									if (e.params.history.root.length > 0) {
											let n = e.params.history.root;
											"/" === n[n.length - 1] && (n = n.slice(0, n.length - 1)),
											a = `${n}/${t}/${a}`
									} else
											o.pathname.includes(t) || (a = `${t}/${a}`);
									e.params.history.keepQuery && (a += o.search);
									const l = r.history.state;
									l && l.value === a || (e.params.history.replaceState ? r.history.replaceState({
											value: a
									}, null, a) : r.history.pushState({
											value: a
									}, null, a))
							}
								, scrollToSlide = (t,n,i)=>{
									if (n)
											for (let r = 0, o = e.slides.length; r < o; r += 1) {
													const o = e.slides.eq(r);
													if (slugify(o.attr("data-history")) === n && !o.hasClass(e.params.slideDuplicateClass)) {
															const n = o.index();
															e.slideTo(n, t, i)
													}
											}
									else
											e.slideTo(0, t, i)
							}
								, setHistoryPopState = ()=>{
									r = getPathValues(e.params.url),
									scrollToSlide(e.params.speed, r.value, !1)
							}
							;
							n("init", (()=>{
									e.params.history.enabled && (()=>{
											const t = ssr_window_esm_getWindow();
											if (e.params.history) {
													if (!t.history || !t.history.pushState)
															return e.params.history.enabled = !1,
															void (e.params.hashNavigation.enabled = !0);
													i = !0,
													r = getPathValues(e.params.url),
													(r.key || r.value) && (scrollToSlide(0, r.value, e.params.runCallbacksOnInit),
													e.params.history.replaceState || t.addEventListener("popstate", setHistoryPopState))
											}
									}
									)()
							}
							)),
							n("destroy", (()=>{
									e.params.history.enabled && (()=>{
											const t = ssr_window_esm_getWindow();
											e.params.history.replaceState || t.removeEventListener("popstate", setHistoryPopState)
									}
									)()
							}
							)),
							n("transitionEnd _freeModeNoMomentumRelease", (()=>{
									i && setHistory(e.params.history.key, e.activeIndex)
							}
							)),
							n("slideChange", (()=>{
									i && e.params.cssMode && setHistory(e.params.history.key, e.activeIndex)
							}
							))
					}
					function HashNavigation({swiper: e, extendParams: t, emit: n, on: i}) {
							let r = !1;
							const o = getDocument()
								, s = ssr_window_esm_getWindow();
							t({
									hashNavigation: {
											enabled: !1,
											replaceState: !1,
											watchState: !1
									}
							});
							const onHashChange = ()=>{
									n("hashChange");
									const t = o.location.hash.replace("#", "");
									if (t !== e.slides.eq(e.activeIndex).attr("data-hash")) {
											const n = e.$wrapperEl.children(`.${e.params.slideClass}[data-hash="${t}"]`).index();
											if (void 0 === n)
													return;
											e.slideTo(n)
									}
							}
								, setHash = ()=>{
									if (r && e.params.hashNavigation.enabled)
											if (e.params.hashNavigation.replaceState && s.history && s.history.replaceState)
													s.history.replaceState(null, null, `#${e.slides.eq(e.activeIndex).attr("data-hash")}` || ""),
													n("hashSet");
											else {
													const t = e.slides.eq(e.activeIndex)
														, i = t.attr("data-hash") || t.attr("data-history");
													o.location.hash = i || "",
													n("hashSet")
											}
							}
							;
							i("init", (()=>{
									e.params.hashNavigation.enabled && (()=>{
											if (!e.params.hashNavigation.enabled || e.params.history && e.params.history.enabled)
													return;
											r = !0;
											const t = o.location.hash.replace("#", "");
											if (t) {
													const n = 0;
													for (let i = 0, r = e.slides.length; i < r; i += 1) {
															const r = e.slides.eq(i);
															if ((r.attr("data-hash") || r.attr("data-history")) === t && !r.hasClass(e.params.slideDuplicateClass)) {
																	const t = r.index();
																	e.slideTo(t, n, e.params.runCallbacksOnInit, !0)
															}
													}
											}
											e.params.hashNavigation.watchState && a(s).on("hashchange", onHashChange)
									}
									)()
							}
							)),
							i("destroy", (()=>{
									e.params.hashNavigation.enabled && e.params.hashNavigation.watchState && a(s).off("hashchange", onHashChange)
							}
							)),
							i("transitionEnd _freeModeNoMomentumRelease", (()=>{
									r && setHash()
							}
							)),
							i("slideChange", (()=>{
									r && e.params.cssMode && setHash()
							}
							))
					}
					function Autoplay({swiper: e, extendParams: t, on: n, emit: i}) {
							let r;
							function run() {
									if (!e.size)
											return e.autoplay.running = !1,
											void (e.autoplay.paused = !1);
									const t = e.slides.eq(e.activeIndex);
									let n = e.params.autoplay.delay;
									t.attr("data-swiper-autoplay") && (n = t.attr("data-swiper-autoplay") || e.params.autoplay.delay),
									clearTimeout(r),
									r = nextTick((()=>{
											let t;
											e.params.autoplay.reverseDirection ? e.params.loop ? (e.loopFix(),
											t = e.slidePrev(e.params.speed, !0, !0),
											i("autoplay")) : e.isBeginning ? e.params.autoplay.stopOnLastSlide ? stop() : (t = e.slideTo(e.slides.length - 1, e.params.speed, !0, !0),
											i("autoplay")) : (t = e.slidePrev(e.params.speed, !0, !0),
											i("autoplay")) : e.params.loop ? (e.loopFix(),
											t = e.slideNext(e.params.speed, !0, !0),
											i("autoplay")) : e.isEnd ? e.params.autoplay.stopOnLastSlide ? stop() : (t = e.slideTo(0, e.params.speed, !0, !0),
											i("autoplay")) : (t = e.slideNext(e.params.speed, !0, !0),
											i("autoplay")),
											(e.params.cssMode && e.autoplay.running || !1 === t) && run()
									}
									), n)
							}
							function start() {
									return void 0 === r && (!e.autoplay.running && (e.autoplay.running = !0,
									i("autoplayStart"),
									run(),
									!0))
							}
							function stop() {
									return !!e.autoplay.running && (void 0 !== r && (r && (clearTimeout(r),
									r = void 0),
									e.autoplay.running = !1,
									i("autoplayStop"),
									!0))
							}
							function pause(t) {
									e.autoplay.running && (e.autoplay.paused || (r && clearTimeout(r),
									e.autoplay.paused = !0,
									0 !== t && e.params.autoplay.waitForTransition ? ["transitionend", "webkitTransitionEnd"].forEach((t=>{
											e.$wrapperEl[0].addEventListener(t, onTransitionEnd)
									}
									)) : (e.autoplay.paused = !1,
									run())))
							}
							function onVisibilityChange() {
									const t = getDocument();
									"hidden" === t.visibilityState && e.autoplay.running && pause(),
									"visible" === t.visibilityState && e.autoplay.paused && (run(),
									e.autoplay.paused = !1)
							}
							function onTransitionEnd(t) {
									e && !e.destroyed && e.$wrapperEl && t.target === e.$wrapperEl[0] && (["transitionend", "webkitTransitionEnd"].forEach((t=>{
											e.$wrapperEl[0].removeEventListener(t, onTransitionEnd)
									}
									)),
									e.autoplay.paused = !1,
									e.autoplay.running ? run() : stop())
							}
							function onMouseEnter() {
									e.params.autoplay.disableOnInteraction ? stop() : (i("autoplayPause"),
									pause()),
									["transitionend", "webkitTransitionEnd"].forEach((t=>{
											e.$wrapperEl[0].removeEventListener(t, onTransitionEnd)
									}
									))
							}
							function onMouseLeave() {
									e.params.autoplay.disableOnInteraction || (e.autoplay.paused = !1,
									i("autoplayResume"),
									run())
							}
							e.autoplay = {
									running: !1,
									paused: !1
							},
							t({
									autoplay: {
											enabled: !1,
											delay: 3e3,
											waitForTransition: !0,
											disableOnInteraction: !0,
											stopOnLastSlide: !1,
											reverseDirection: !1,
											pauseOnMouseEnter: !1
									}
							}),
							n("init", (()=>{
									if (e.params.autoplay.enabled) {
											start();
											getDocument().addEventListener("visibilitychange", onVisibilityChange),
											e.params.autoplay.pauseOnMouseEnter && (e.$el.on("mouseenter", onMouseEnter),
											e.$el.on("mouseleave", onMouseLeave))
									}
							}
							)),
							n("beforeTransitionStart", ((t,n,i)=>{
									e.autoplay.running && (i || !e.params.autoplay.disableOnInteraction ? e.autoplay.pause(n) : stop())
							}
							)),
							n("sliderFirstMove", (()=>{
									e.autoplay.running && (e.params.autoplay.disableOnInteraction ? stop() : pause())
							}
							)),
							n("touchEnd", (()=>{
									e.params.cssMode && e.autoplay.paused && !e.params.autoplay.disableOnInteraction && run()
							}
							)),
							n("destroy", (()=>{
									e.$el.off("mouseenter", onMouseEnter),
									e.$el.off("mouseleave", onMouseLeave),
									e.autoplay.running && stop();
									getDocument().removeEventListener("visibilitychange", onVisibilityChange)
							}
							)),
							Object.assign(e.autoplay, {
									pause,
									run,
									start,
									stop
							})
					}
					function Thumb({swiper: e, extendParams: t, on: n}) {
							t({
									thumbs: {
											swiper: null,
											multipleActiveThumbs: !0,
											autoScrollOffset: 0,
											slideThumbActiveClass: "swiper-slide-thumb-active",
											thumbsContainerClass: "swiper-thumbs"
									}
							});
							let i = !1
								, r = !1;
							function onThumbClick() {
									const t = e.thumbs.swiper;
									if (!t || t.destroyed)
											return;
									const n = t.clickedIndex
										, i = t.clickedSlide;
									if (i && a(i).hasClass(e.params.thumbs.slideThumbActiveClass))
											return;
									if (null == n)
											return;
									let r;
									if (r = t.params.loop ? parseInt(a(t.clickedSlide).attr("data-swiper-slide-index"), 10) : n,
									e.params.loop) {
											let t = e.activeIndex;
											e.slides.eq(t).hasClass(e.params.slideDuplicateClass) && (e.loopFix(),
											e._clientLeft = e.$wrapperEl[0].clientLeft,
											t = e.activeIndex);
											const n = e.slides.eq(t).prevAll(`[data-swiper-slide-index="${r}"]`).eq(0).index()
												, i = e.slides.eq(t).nextAll(`[data-swiper-slide-index="${r}"]`).eq(0).index();
											r = void 0 === n ? i : void 0 === i ? n : i - t < t - n ? i : n
									}
									e.slideTo(r)
							}
							function init() {
									const {thumbs: t} = e.params;
									if (i)
											return !1;
									i = !0;
									const n = e.constructor;
									if (t.swiper instanceof n)
											e.thumbs.swiper = t.swiper,
											Object.assign(e.thumbs.swiper.originalParams, {
													watchSlidesProgress: !0,
													slideToClickedSlide: !1
											}),
											Object.assign(e.thumbs.swiper.params, {
													watchSlidesProgress: !0,
													slideToClickedSlide: !1
											});
									else if (utils_isObject(t.swiper)) {
											const i = Object.assign({}, t.swiper);
											Object.assign(i, {
													watchSlidesProgress: !0,
													slideToClickedSlide: !1
											}),
											e.thumbs.swiper = new n(i),
											r = !0
									}
									return e.thumbs.swiper.$el.addClass(e.params.thumbs.thumbsContainerClass),
									e.thumbs.swiper.on("tap", onThumbClick),
									!0
							}
							function update(t) {
									const n = e.thumbs.swiper;
									if (!n || n.destroyed)
											return;
									const i = "auto" === n.params.slidesPerView ? n.slidesPerViewDynamic() : n.params.slidesPerView;
									let r = 1;
									const o = e.params.thumbs.slideThumbActiveClass;
									if (e.params.slidesPerView > 1 && !e.params.centeredSlides && (r = e.params.slidesPerView),
									e.params.thumbs.multipleActiveThumbs || (r = 1),
									r = Math.floor(r),
									n.slides.removeClass(o),
									n.params.loop || n.params.virtual && n.params.virtual.enabled)
											for (let t = 0; t < r; t += 1)
													n.$wrapperEl.children(`[data-swiper-slide-index="${e.realIndex + t}"]`).addClass(o);
									else
											for (let t = 0; t < r; t += 1)
													n.slides.eq(e.realIndex + t).addClass(o);
									const s = e.params.thumbs.autoScrollOffset
										, a = s && !n.params.loop;
									if (e.realIndex !== n.realIndex || a) {
											let r, o, l = n.activeIndex;
											if (n.params.loop) {
													n.slides.eq(l).hasClass(n.params.slideDuplicateClass) && (n.loopFix(),
													n._clientLeft = n.$wrapperEl[0].clientLeft,
													l = n.activeIndex);
													const t = n.slides.eq(l).prevAll(`[data-swiper-slide-index="${e.realIndex}"]`).eq(0).index()
														, i = n.slides.eq(l).nextAll(`[data-swiper-slide-index="${e.realIndex}"]`).eq(0).index();
													r = void 0 === t ? i : void 0 === i ? t : i - l == l - t ? n.params.slidesPerGroup > 1 ? i : l : i - l < l - t ? i : t,
													o = e.activeIndex > e.previousIndex ? "next" : "prev"
											} else
													r = e.realIndex,
													o = r > e.previousIndex ? "next" : "prev";
											a && (r += "next" === o ? s : -1 * s),
											n.visibleSlidesIndexes && n.visibleSlidesIndexes.indexOf(r) < 0 && (n.params.centeredSlides ? r = r > l ? r - Math.floor(i / 2) + 1 : r + Math.floor(i / 2) - 1 : r > l && n.params.slidesPerGroup,
											n.slideTo(r, t ? 0 : void 0))
									}
							}
							e.thumbs = {
									swiper: null
							},
							n("beforeInit", (()=>{
									const {thumbs: t} = e.params;
									t && t.swiper && (init(),
									update(!0))
							}
							)),
							n("slideChange update resize observerUpdate", (()=>{
									update()
							}
							)),
							n("setTransition", ((t,n)=>{
									const i = e.thumbs.swiper;
									i && !i.destroyed && i.setTransition(n)
							}
							)),
							n("beforeDestroy", (()=>{
									const t = e.thumbs.swiper;
									t && !t.destroyed && r && t.destroy()
							}
							)),
							Object.assign(e.thumbs, {
									init,
									update
							})
					}
					function freeMode({swiper: e, extendParams: t, emit: n, once: i}) {
							t({
									freeMode: {
											enabled: !1,
											momentum: !0,
											momentumRatio: 1,
											momentumBounce: !0,
											momentumBounceRatio: 1,
											momentumVelocityRatio: 1,
											sticky: !1,
											minimumVelocity: .02
									}
							}),
							Object.assign(e, {
									freeMode: {
											onTouchStart: function() {
													const t = e.getTranslate();
													e.setTranslate(t),
													e.setTransition(0),
													e.touchEventsData.velocities.length = 0,
													e.freeMode.onTouchEnd({
															currentPos: e.rtl ? e.translate : -e.translate
													})
											},
											onTouchMove: function() {
													const {touchEventsData: t, touches: n} = e;
													0 === t.velocities.length && t.velocities.push({
															position: n[e.isHorizontal() ? "startX" : "startY"],
															time: t.touchStartTime
													}),
													t.velocities.push({
															position: n[e.isHorizontal() ? "currentX" : "currentY"],
															time: now()
													})
											},
											onTouchEnd: function({currentPos: t}) {
													const {params: r, $wrapperEl: o, rtlTranslate: s, snapGrid: a, touchEventsData: l} = e
														, c = now() - l.touchStartTime;
													if (t < -e.minTranslate())
															e.slideTo(e.activeIndex);
													else if (t > -e.maxTranslate())
															e.slides.length < a.length ? e.slideTo(a.length - 1) : e.slideTo(e.slides.length - 1);
													else {
															if (r.freeMode.momentum) {
																	if (l.velocities.length > 1) {
																			const t = l.velocities.pop()
																				, n = l.velocities.pop()
																				, i = t.position - n.position
																				, o = t.time - n.time;
																			e.velocity = i / o,
																			e.velocity /= 2,
																			Math.abs(e.velocity) < r.freeMode.minimumVelocity && (e.velocity = 0),
																			(o > 150 || now() - t.time > 300) && (e.velocity = 0)
																	} else
																			e.velocity = 0;
																	e.velocity *= r.freeMode.momentumVelocityRatio,
																	l.velocities.length = 0;
																	let t = 1e3 * r.freeMode.momentumRatio;
																	const c = e.velocity * t;
																	let d = e.translate + c;
																	s && (d = -d);
																	let p, u = !1;
																	const h = 20 * Math.abs(e.velocity) * r.freeMode.momentumBounceRatio;
																	let m;
																	if (d < e.maxTranslate())
																			r.freeMode.momentumBounce ? (d + e.maxTranslate() < -h && (d = e.maxTranslate() - h),
																			p = e.maxTranslate(),
																			u = !0,
																			l.allowMomentumBounce = !0) : d = e.maxTranslate(),
																			r.loop && r.centeredSlides && (m = !0);
																	else if (d > e.minTranslate())
																			r.freeMode.momentumBounce ? (d - e.minTranslate() > h && (d = e.minTranslate() + h),
																			p = e.minTranslate(),
																			u = !0,
																			l.allowMomentumBounce = !0) : d = e.minTranslate(),
																			r.loop && r.centeredSlides && (m = !0);
																	else if (r.freeMode.sticky) {
																			let t;
																			for (let e = 0; e < a.length; e += 1)
																					if (a[e] > -d) {
																							t = e;
																							break
																					}
																			d = Math.abs(a[t] - d) < Math.abs(a[t - 1] - d) || "next" === e.swipeDirection ? a[t] : a[t - 1],
																			d = -d
																	}
																	if (m && i("transitionEnd", (()=>{
																			e.loopFix()
																	}
																	)),
																	0 !== e.velocity) {
																			if (t = s ? Math.abs((-d - e.translate) / e.velocity) : Math.abs((d - e.translate) / e.velocity),
																			r.freeMode.sticky) {
																					const n = Math.abs((s ? -d : d) - e.translate)
																						, i = e.slidesSizesGrid[e.activeIndex];
																					t = n < i ? r.speed : n < 2 * i ? 1.5 * r.speed : 2.5 * r.speed
																			}
																	} else if (r.freeMode.sticky)
																			return void e.slideToClosest();
																	r.freeMode.momentumBounce && u ? (e.updateProgress(p),
																	e.setTransition(t),
																	e.setTranslate(d),
																	e.transitionStart(!0, e.swipeDirection),
																	e.animating = !0,
																	o.transitionEnd((()=>{
																			e && !e.destroyed && l.allowMomentumBounce && (n("momentumBounce"),
																			e.setTransition(r.speed),
																			setTimeout((()=>{
																					e.setTranslate(p),
																					o.transitionEnd((()=>{
																							e && !e.destroyed && e.transitionEnd()
																					}
																					))
																			}
																			), 0))
																	}
																	))) : e.velocity ? (n("_freeModeNoMomentumRelease"),
																	e.updateProgress(d),
																	e.setTransition(t),
																	e.setTranslate(d),
																	e.transitionStart(!0, e.swipeDirection),
																	e.animating || (e.animating = !0,
																	o.transitionEnd((()=>{
																			e && !e.destroyed && e.transitionEnd()
																	}
																	)))) : e.updateProgress(d),
																	e.updateActiveIndex(),
																	e.updateSlidesClasses()
															} else {
																	if (r.freeMode.sticky)
																			return void e.slideToClosest();
																	r.freeMode && n("_freeModeNoMomentumRelease")
															}
															(!r.freeMode.momentum || c >= r.longSwipesMs) && (e.updateProgress(),
															e.updateActiveIndex(),
															e.updateSlidesClasses())
													}
											}
									}
							})
					}
					function Grid({swiper: e, extendParams: t}) {
							let n, i, r;
							t({
									grid: {
											rows: 1,
											fill: "column"
									}
							});
							e.grid = {
									initSlides: t=>{
											const {slidesPerView: o} = e.params
												, {rows: s, fill: a} = e.params.grid;
											i = n / s,
											r = Math.floor(t / s),
											n = Math.floor(t / s) === t / s ? t : Math.ceil(t / s) * s,
											"auto" !== o && "row" === a && (n = Math.max(n, o * s))
									}
									,
									updateSlide: (t,o,s,a)=>{
											const {slidesPerGroup: l, spaceBetween: c} = e.params
												, {rows: d, fill: p} = e.params.grid;
											let u, h, m;
											if ("row" === p && l > 1) {
													const e = Math.floor(t / (l * d))
														, i = t - d * l * e
														, r = 0 === e ? l : Math.min(Math.ceil((s - e * d * l) / d), l);
													m = Math.floor(i / r),
													h = i - m * r + e * l,
													u = h + m * n / d,
													o.css({
															"-webkit-order": u,
															order: u
													})
											} else
													"column" === p ? (h = Math.floor(t / d),
													m = t - h * d,
													(h > r || h === r && m === d - 1) && (m += 1,
													m >= d && (m = 0,
													h += 1))) : (m = Math.floor(t / i),
													h = t - m * i);
											o.css(a("margin-top"), 0 !== m ? c && `${c}px` : "")
									}
									,
									updateWrapperSize: (t,i,r)=>{
											const {spaceBetween: o, centeredSlides: s, roundLengths: a} = e.params
												, {rows: l} = e.params.grid;
											if (e.virtualSize = (t + o) * n,
											e.virtualSize = Math.ceil(e.virtualSize / l) - o,
											e.$wrapperEl.css({
													[r("width")]: `${e.virtualSize + o}px`
											}),
											s) {
													i.splice(0, i.length);
													const t = [];
													for (let n = 0; n < i.length; n += 1) {
															let r = i[n];
															a && (r = Math.floor(r)),
															i[n] < e.virtualSize + i[0] && t.push(r)
													}
													i.push(...t)
											}
									}
							}
					}
					function appendSlide(e) {
							const t = this
								, {$wrapperEl: n, params: i} = t;
							if (i.loop && t.loopDestroy(),
							"object" == typeof e && "length"in e)
									for (let t = 0; t < e.length; t += 1)
											e[t] && n.append(e[t]);
							else
									n.append(e);
							i.loop && t.loopCreate(),
							i.observer || t.update()
					}
					function prependSlide(e) {
							const t = this
								, {params: n, $wrapperEl: i, activeIndex: r} = t;
							n.loop && t.loopDestroy();
							let o = r + 1;
							if ("object" == typeof e && "length"in e) {
									for (let t = 0; t < e.length; t += 1)
											e[t] && i.prepend(e[t]);
									o = r + e.length
							} else
									i.prepend(e);
							n.loop && t.loopCreate(),
							n.observer || t.update(),
							t.slideTo(o, 0, !1)
					}
					function addSlide(e, t) {
							const n = this
								, {$wrapperEl: i, params: r, activeIndex: o} = n;
							let s = o;
							r.loop && (s -= n.loopedSlides,
							n.loopDestroy(),
							n.slides = i.children(`.${r.slideClass}`));
							const a = n.slides.length;
							if (e <= 0)
									return void n.prependSlide(t);
							if (e >= a)
									return void n.appendSlide(t);
							let l = s > e ? s + 1 : s;
							const c = [];
							for (let t = a - 1; t >= e; t -= 1) {
									const e = n.slides.eq(t);
									e.remove(),
									c.unshift(e)
							}
							if ("object" == typeof t && "length"in t) {
									for (let e = 0; e < t.length; e += 1)
											t[e] && i.append(t[e]);
									l = s > e ? s + t.length : s
							} else
									i.append(t);
							for (let e = 0; e < c.length; e += 1)
									i.append(c[e]);
							r.loop && n.loopCreate(),
							r.observer || n.update(),
							r.loop ? n.slideTo(l + n.loopedSlides, 0, !1) : n.slideTo(l, 0, !1)
					}
					function removeSlide(e) {
							const t = this
								, {params: n, $wrapperEl: i, activeIndex: r} = t;
							let o = r;
							n.loop && (o -= t.loopedSlides,
							t.loopDestroy(),
							t.slides = i.children(`.${n.slideClass}`));
							let s, a = o;
							if ("object" == typeof e && "length"in e) {
									for (let n = 0; n < e.length; n += 1)
											s = e[n],
											t.slides[s] && t.slides.eq(s).remove(),
											s < a && (a -= 1);
									a = Math.max(a, 0)
							} else
									s = e,
									t.slides[s] && t.slides.eq(s).remove(),
									s < a && (a -= 1),
									a = Math.max(a, 0);
							n.loop && t.loopCreate(),
							n.observer || t.update(),
							n.loop ? t.slideTo(a + t.loopedSlides, 0, !1) : t.slideTo(a, 0, !1)
					}
					function removeAllSlides() {
							const e = this
								, t = [];
							for (let n = 0; n < e.slides.length; n += 1)
									t.push(n);
							e.removeSlide(t)
					}
					function Manipulation({swiper: e}) {
							Object.assign(e, {
									appendSlide: appendSlide.bind(e),
									prependSlide: prependSlide.bind(e),
									addSlide: addSlide.bind(e),
									removeSlide: removeSlide.bind(e),
									removeAllSlides: removeAllSlides.bind(e)
							})
					}
					function effectInit(e) {
							const {effect: t, swiper: n, on: i, setTranslate: r, setTransition: o, overwriteParams: s, perspective: a, recreateShadows: l, getEffectParams: c} = e;
							let d;
							i("beforeInit", (()=>{
									if (n.params.effect !== t)
											return;
									n.classNames.push(`${n.params.containerModifierClass}${t}`),
									a && a() && n.classNames.push(`${n.params.containerModifierClass}3d`);
									const e = s ? s() : {};
									Object.assign(n.params, e),
									Object.assign(n.originalParams, e)
							}
							)),
							i("setTranslate", (()=>{
									n.params.effect === t && r()
							}
							)),
							i("setTransition", ((e,i)=>{
									n.params.effect === t && o(i)
							}
							)),
							i("transitionEnd", (()=>{
									if (n.params.effect === t && l) {
											if (!c || !c().slideShadows)
													return;
											n.slides.each((e=>{
													n.$(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").remove()
											}
											)),
											l()
									}
							}
							)),
							i("virtualUpdate", (()=>{
									n.params.effect === t && (n.slides.length || (d = !0),
									requestAnimationFrame((()=>{
											d && n.slides && n.slides.length && (r(),
											d = !1)
									}
									)))
							}
							))
					}
					function effectTarget(e, t) {
							return e.transformEl ? t.find(e.transformEl).css({
									"backface-visibility": "hidden",
									"-webkit-backface-visibility": "hidden"
							}) : t
					}
					function effectVirtualTransitionEnd({swiper: e, duration: t, transformEl: n, allSlides: i}) {
							const {slides: r, activeIndex: o, $wrapperEl: s} = e;
							if (e.params.virtualTranslate && 0 !== t) {
									let t, a = !1;
									t = i ? n ? r.find(n) : r : n ? r.eq(o).find(n) : r.eq(o),
									t.transitionEnd((()=>{
											if (a)
													return;
											if (!e || e.destroyed)
													return;
											a = !0,
											e.animating = !1;
											const t = ["webkitTransitionEnd", "transitionend"];
											for (let e = 0; e < t.length; e += 1)
													s.trigger(t[e])
									}
									))
							}
					}
					function EffectFade({swiper: e, extendParams: t, on: n}) {
							t({
									fadeEffect: {
											crossFade: !1,
											transformEl: null
									}
							});
							effectInit({
									effect: "fade",
									swiper: e,
									on: n,
									setTranslate: ()=>{
											const {slides: t} = e
												, n = e.params.fadeEffect;
											for (let i = 0; i < t.length; i += 1) {
													const t = e.slides.eq(i);
													let r = -t[0].swiperSlideOffset;
													e.params.virtualTranslate || (r -= e.translate);
													let o = 0;
													e.isHorizontal() || (o = r,
													r = 0);
													const s = e.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(t[0].progress), 0) : 1 + Math.min(Math.max(t[0].progress, -1), 0);
													effectTarget(n, t).css({
															opacity: s
													}).transform(`translate3d(${r}px, ${o}px, 0px)`)
											}
									}
									,
									setTransition: t=>{
											const {transformEl: n} = e.params.fadeEffect;
											(n ? e.slides.find(n) : e.slides).transition(t),
											effectVirtualTransitionEnd({
													swiper: e,
													duration: t,
													transformEl: n,
													allSlides: !0
											})
									}
									,
									overwriteParams: ()=>({
											slidesPerView: 1,
											slidesPerGroup: 1,
											watchSlidesProgress: !0,
											spaceBetween: 0,
											virtualTranslate: !e.params.cssMode
									})
							})
					}
					function EffectCube({swiper: e, extendParams: t, on: n}) {
							t({
									cubeEffect: {
											slideShadows: !0,
											shadow: !0,
											shadowOffset: 20,
											shadowScale: .94
									}
							});
							const createSlideShadows = (e,t,n)=>{
									let i = n ? e.find(".swiper-slide-shadow-left") : e.find(".swiper-slide-shadow-top")
										, r = n ? e.find(".swiper-slide-shadow-right") : e.find(".swiper-slide-shadow-bottom");
									0 === i.length && (i = a(`<div class="swiper-slide-shadow-${n ? "left" : "top"}"></div>`),
									e.append(i)),
									0 === r.length && (r = a(`<div class="swiper-slide-shadow-${n ? "right" : "bottom"}"></div>`),
									e.append(r)),
									i.length && (i[0].style.opacity = Math.max(-t, 0)),
									r.length && (r[0].style.opacity = Math.max(t, 0))
							}
							;
							effectInit({
									effect: "cube",
									swiper: e,
									on: n,
									setTranslate: ()=>{
											const {$el: t, $wrapperEl: n, slides: i, width: r, height: o, rtlTranslate: s, size: l, browser: c} = e
												, d = e.params.cubeEffect
												, p = e.isHorizontal()
												, u = e.virtual && e.params.virtual.enabled;
											let h, m = 0;
											d.shadow && (p ? (h = n.find(".swiper-cube-shadow"),
											0 === h.length && (h = a('<div class="swiper-cube-shadow"></div>'),
											n.append(h)),
											h.css({
													height: `${r}px`
											})) : (h = t.find(".swiper-cube-shadow"),
											0 === h.length && (h = a('<div class="swiper-cube-shadow"></div>'),
											t.append(h))));
											for (let e = 0; e < i.length; e += 1) {
													const t = i.eq(e);
													let n = e;
													u && (n = parseInt(t.attr("data-swiper-slide-index"), 10));
													let r = 90 * n
														, o = Math.floor(r / 360);
													s && (r = -r,
													o = Math.floor(-r / 360));
													const a = Math.max(Math.min(t[0].progress, 1), -1);
													let c = 0
														, h = 0
														, g = 0;
													n % 4 == 0 ? (c = 4 * -o * l,
													g = 0) : (n - 1) % 4 == 0 ? (c = 0,
													g = 4 * -o * l) : (n - 2) % 4 == 0 ? (c = l + 4 * o * l,
													g = l) : (n - 3) % 4 == 0 && (c = -l,
													g = 3 * l + 4 * l * o),
													s && (c = -c),
													p || (h = c,
													c = 0);
													const _ = `rotateX(${p ? 0 : -r}deg) rotateY(${p ? r : 0}deg) translate3d(${c}px, ${h}px, ${g}px)`;
													a <= 1 && a > -1 && (m = 90 * n + 90 * a,
													s && (m = 90 * -n - 90 * a)),
													t.transform(_),
													d.slideShadows && createSlideShadows(t, a, p)
											}
											if (n.css({
													"-webkit-transform-origin": `50% 50% -${l / 2}px`,
													"transform-origin": `50% 50% -${l / 2}px`
											}),
											d.shadow)
													if (p)
															h.transform(`translate3d(0px, ${r / 2 + d.shadowOffset}px, ${-r / 2}px) rotateX(90deg) rotateZ(0deg) scale(${d.shadowScale})`);
													else {
															const e = Math.abs(m) - 90 * Math.floor(Math.abs(m) / 90)
																, t = 1.5 - (Math.sin(2 * e * Math.PI / 360) / 2 + Math.cos(2 * e * Math.PI / 360) / 2)
																, n = d.shadowScale
																, i = d.shadowScale / t
																, r = d.shadowOffset;
															h.transform(`scale3d(${n}, 1, ${i}) translate3d(0px, ${o / 2 + r}px, ${-o / 2 / i}px) rotateX(-90deg)`)
													}
											const g = c.isSafari || c.isWebView ? -l / 2 : 0;
											n.transform(`translate3d(0px,0,${g}px) rotateX(${e.isHorizontal() ? 0 : m}deg) rotateY(${e.isHorizontal() ? -m : 0}deg)`),
											n[0].style.setProperty("--swiper-cube-translate-z", `${g}px`)
									}
									,
									setTransition: t=>{
											const {$el: n, slides: i} = e;
											i.transition(t).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(t),
											e.params.cubeEffect.shadow && !e.isHorizontal() && n.find(".swiper-cube-shadow").transition(t)
									}
									,
									recreateShadows: ()=>{
											const t = e.isHorizontal();
											e.slides.each((e=>{
													const n = Math.max(Math.min(e.progress, 1), -1);
													createSlideShadows(a(e), n, t)
											}
											))
									}
									,
									getEffectParams: ()=>e.params.cubeEffect,
									perspective: ()=>!0,
									overwriteParams: ()=>({
											slidesPerView: 1,
											slidesPerGroup: 1,
											watchSlidesProgress: !0,
											resistanceRatio: 0,
											spaceBetween: 0,
											centeredSlides: !1,
											virtualTranslate: !0
									})
							})
					}
					function createShadow(e, t, n) {
							const i = "swiper-slide-shadow" + (n ? `-${n}` : "")
								, r = e.transformEl ? t.find(e.transformEl) : t;
							let o = r.children(`.${i}`);
							return o.length || (o = a(`<div class="swiper-slide-shadow${n ? `-${n}` : ""}"></div>`),
							r.append(o)),
							o
					}
					function EffectFlip({swiper: e, extendParams: t, on: n}) {
							t({
									flipEffect: {
											slideShadows: !0,
											limitRotation: !0,
											transformEl: null
									}
							});
							const createSlideShadows = (t,n,i)=>{
									let r = e.isHorizontal() ? t.find(".swiper-slide-shadow-left") : t.find(".swiper-slide-shadow-top")
										, o = e.isHorizontal() ? t.find(".swiper-slide-shadow-right") : t.find(".swiper-slide-shadow-bottom");
									0 === r.length && (r = createShadow(i, t, e.isHorizontal() ? "left" : "top")),
									0 === o.length && (o = createShadow(i, t, e.isHorizontal() ? "right" : "bottom")),
									r.length && (r[0].style.opacity = Math.max(-n, 0)),
									o.length && (o[0].style.opacity = Math.max(n, 0))
							}
							;
							effectInit({
									effect: "flip",
									swiper: e,
									on: n,
									setTranslate: ()=>{
											const {slides: t, rtlTranslate: n} = e
												, i = e.params.flipEffect;
											for (let r = 0; r < t.length; r += 1) {
													const o = t.eq(r);
													let s = o[0].progress;
													e.params.flipEffect.limitRotation && (s = Math.max(Math.min(o[0].progress, 1), -1));
													const a = o[0].swiperSlideOffset;
													let l = -180 * s
														, c = 0
														, d = e.params.cssMode ? -a - e.translate : -a
														, p = 0;
													e.isHorizontal() ? n && (l = -l) : (p = d,
													d = 0,
													c = -l,
													l = 0),
													o[0].style.zIndex = -Math.abs(Math.round(s)) + t.length,
													i.slideShadows && createSlideShadows(o, s, i);
													const u = `translate3d(${d}px, ${p}px, 0px) rotateX(${c}deg) rotateY(${l}deg)`;
													effectTarget(i, o).transform(u)
											}
									}
									,
									setTransition: t=>{
											const {transformEl: n} = e.params.flipEffect;
											(n ? e.slides.find(n) : e.slides).transition(t).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(t),
											effectVirtualTransitionEnd({
													swiper: e,
													duration: t,
													transformEl: n
											})
									}
									,
									recreateShadows: ()=>{
											const t = e.params.flipEffect;
											e.slides.each((n=>{
													const i = a(n);
													let r = i[0].progress;
													e.params.flipEffect.limitRotation && (r = Math.max(Math.min(n.progress, 1), -1)),
													createSlideShadows(i, r, t)
											}
											))
									}
									,
									getEffectParams: ()=>e.params.flipEffect,
									perspective: ()=>!0,
									overwriteParams: ()=>({
											slidesPerView: 1,
											slidesPerGroup: 1,
											watchSlidesProgress: !0,
											spaceBetween: 0,
											virtualTranslate: !e.params.cssMode
									})
							})
					}
					function EffectCoverflow({swiper: e, extendParams: t, on: n}) {
							t({
									coverflowEffect: {
											rotate: 50,
											stretch: 0,
											depth: 100,
											scale: 1,
											modifier: 1,
											slideShadows: !0,
											transformEl: null
									}
							});
							effectInit({
									effect: "coverflow",
									swiper: e,
									on: n,
									setTranslate: ()=>{
											const {width: t, height: n, slides: i, slidesSizesGrid: r} = e
												, o = e.params.coverflowEffect
												, s = e.isHorizontal()
												, a = e.translate
												, l = s ? t / 2 - a : n / 2 - a
												, c = s ? o.rotate : -o.rotate
												, d = o.depth;
											for (let e = 0, t = i.length; e < t; e += 1) {
													const t = i.eq(e)
														, n = r[e]
														, a = (l - t[0].swiperSlideOffset - n / 2) / n
														, p = "function" == typeof o.modifier ? o.modifier(a) : a * o.modifier;
													let u = s ? c * p : 0
														, h = s ? 0 : c * p
														, m = -d * Math.abs(p)
														, g = o.stretch;
													"string" == typeof g && -1 !== g.indexOf("%") && (g = parseFloat(o.stretch) / 100 * n);
													let _ = s ? 0 : g * p
														, f = s ? g * p : 0
														, y = 1 - (1 - o.scale) * Math.abs(p);
													Math.abs(f) < .001 && (f = 0),
													Math.abs(_) < .001 && (_ = 0),
													Math.abs(m) < .001 && (m = 0),
													Math.abs(u) < .001 && (u = 0),
													Math.abs(h) < .001 && (h = 0),
													Math.abs(y) < .001 && (y = 0);
													const v = `translate3d(${f}px,${_}px,${m}px)  rotateX(${h}deg) rotateY(${u}deg) scale(${y})`;
													if (effectTarget(o, t).transform(v),
													t[0].style.zIndex = 1 - Math.abs(Math.round(p)),
													o.slideShadows) {
															let e = s ? t.find(".swiper-slide-shadow-left") : t.find(".swiper-slide-shadow-top")
																, n = s ? t.find(".swiper-slide-shadow-right") : t.find(".swiper-slide-shadow-bottom");
															0 === e.length && (e = createShadow(o, t, s ? "left" : "top")),
															0 === n.length && (n = createShadow(o, t, s ? "right" : "bottom")),
															e.length && (e[0].style.opacity = p > 0 ? p : 0),
															n.length && (n[0].style.opacity = -p > 0 ? -p : 0)
													}
											}
									}
									,
									setTransition: t=>{
											const {transformEl: n} = e.params.coverflowEffect;
											(n ? e.slides.find(n) : e.slides).transition(t).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(t)
									}
									,
									perspective: ()=>!0,
									overwriteParams: ()=>({
											watchSlidesProgress: !0
									})
							})
					}
					function EffectCreative({swiper: e, extendParams: t, on: n}) {
							t({
									creativeEffect: {
											transformEl: null,
											limitProgress: 1,
											shadowPerProgress: !1,
											progressMultiplier: 1,
											perspective: !0,
											prev: {
													translate: [0, 0, 0],
													rotate: [0, 0, 0],
													opacity: 1,
													scale: 1
											},
											next: {
													translate: [0, 0, 0],
													rotate: [0, 0, 0],
													opacity: 1,
													scale: 1
											}
									}
							});
							const getTranslateValue = e=>"string" == typeof e ? e : `${e}px`;
							effectInit({
									effect: "creative",
									swiper: e,
									on: n,
									setTranslate: ()=>{
											const {slides: t, $wrapperEl: n, slidesSizesGrid: i} = e
												, r = e.params.creativeEffect
												, {progressMultiplier: o} = r
												, s = e.params.centeredSlides;
											if (s) {
													const t = i[0] / 2 - e.params.slidesOffsetBefore || 0;
													n.transform(`translateX(calc(50% - ${t}px))`)
											}
											for (let n = 0; n < t.length; n += 1) {
													const i = t.eq(n)
														, a = i[0].progress
														, l = Math.min(Math.max(i[0].progress, -r.limitProgress), r.limitProgress);
													let c = l;
													s || (c = Math.min(Math.max(i[0].originalProgress, -r.limitProgress), r.limitProgress));
													const d = i[0].swiperSlideOffset
														, p = [e.params.cssMode ? -d - e.translate : -d, 0, 0]
														, u = [0, 0, 0];
													let h = !1;
													e.isHorizontal() || (p[1] = p[0],
													p[0] = 0);
													let m = {
															translate: [0, 0, 0],
															rotate: [0, 0, 0],
															scale: 1,
															opacity: 1
													};
													l < 0 ? (m = r.next,
													h = !0) : l > 0 && (m = r.prev,
													h = !0),
													p.forEach(((e,t)=>{
															p[t] = `calc(${e}px + (${getTranslateValue(m.translate[t])} * ${Math.abs(l * o)}))`
													}
													)),
													u.forEach(((e,t)=>{
															u[t] = m.rotate[t] * Math.abs(l * o)
													}
													)),
													i[0].style.zIndex = -Math.abs(Math.round(a)) + t.length;
													const g = p.join(", ")
														, _ = `rotateX(${u[0]}deg) rotateY(${u[1]}deg) rotateZ(${u[2]}deg)`
														, f = c < 0 ? `scale(${1 + (1 - m.scale) * c * o})` : `scale(${1 - (1 - m.scale) * c * o})`
														, y = c < 0 ? 1 + (1 - m.opacity) * c * o : 1 - (1 - m.opacity) * c * o
														, v = `translate3d(${g}) ${_} ${f}`;
													if (h && m.shadow || !h) {
															let e = i.children(".swiper-slide-shadow");
															if (0 === e.length && m.shadow && (e = createShadow(r, i)),
															e.length) {
																	const t = r.shadowPerProgress ? l * (1 / r.limitProgress) : l;
																	e[0].style.opacity = Math.min(Math.max(Math.abs(t), 0), 1)
															}
													}
													const b = effectTarget(r, i);
													b.transform(v).css({
															opacity: y
													}),
													m.origin && b.css("transform-origin", m.origin)
											}
									}
									,
									setTransition: t=>{
											const {transformEl: n} = e.params.creativeEffect;
											(n ? e.slides.find(n) : e.slides).transition(t).find(".swiper-slide-shadow").transition(t),
											effectVirtualTransitionEnd({
													swiper: e,
													duration: t,
													transformEl: n,
													allSlides: !0
											})
									}
									,
									perspective: ()=>e.params.creativeEffect.perspective,
									overwriteParams: ()=>({
											watchSlidesProgress: !0,
											virtualTranslate: !e.params.cssMode
									})
							})
					}
					function EffectCards({swiper: e, extendParams: t, on: n}) {
							t({
									cardsEffect: {
											slideShadows: !0,
											transformEl: null,
											rotate: !0,
											perSlideRotate: 2,
											perSlideOffset: 8
									}
							});
							effectInit({
									effect: "cards",
									swiper: e,
									on: n,
									setTranslate: ()=>{
											const {slides: t, activeIndex: n} = e
												, i = e.params.cardsEffect
												, {startTranslate: r, isTouched: o} = e.touchEventsData
												, s = e.translate;
											for (let a = 0; a < t.length; a += 1) {
													const l = t.eq(a)
														, c = l[0].progress
														, d = Math.min(Math.max(c, -4), 4);
													let p = l[0].swiperSlideOffset;
													e.params.centeredSlides && !e.params.cssMode && e.$wrapperEl.transform(`translateX(${e.minTranslate()}px)`),
													e.params.centeredSlides && e.params.cssMode && (p -= t[0].swiperSlideOffset);
													let u = e.params.cssMode ? -p - e.translate : -p
														, h = 0;
													const m = -100 * Math.abs(d);
													let g = 1
														, _ = -i.perSlideRotate * d
														, f = i.perSlideOffset - .75 * Math.abs(d);
													const y = e.virtual && e.params.virtual.enabled ? e.virtual.from + a : a
														, v = (y === n || y === n - 1) && d > 0 && d < 1 && (o || e.params.cssMode) && s < r
														, b = (y === n || y === n + 1) && d < 0 && d > -1 && (o || e.params.cssMode) && s > r;
													if (v || b) {
															const e = (1 - Math.abs((Math.abs(d) - .5) / .5)) ** .5;
															_ += -28 * d * e,
															g += -.5 * e,
															f += 96 * e,
															h = -25 * e * Math.abs(d) + "%"
													}
													if (u = d < 0 ? `calc(${u}px + (${f * Math.abs(d)}%))` : d > 0 ? `calc(${u}px + (-${f * Math.abs(d)}%))` : `${u}px`,
													!e.isHorizontal()) {
															const e = h;
															h = u,
															u = e
													}
													const S = d < 0 ? "" + (1 + (1 - g) * d) : "" + (1 - (1 - g) * d)
														, C = `\n        translate3d(${u}, ${h}, ${m}px)\n        rotateZ(${i.rotate ? _ : 0}deg)\n        scale(${S})\n      `;
													if (i.slideShadows) {
															let e = l.find(".swiper-slide-shadow");
															0 === e.length && (e = createShadow(i, l)),
															e.length && (e[0].style.opacity = Math.min(Math.max((Math.abs(d) - .5) / .5, 0), 1))
													}
													l[0].style.zIndex = -Math.abs(Math.round(c)) + t.length;
													effectTarget(i, l).transform(C)
											}
									}
									,
									setTransition: t=>{
											const {transformEl: n} = e.params.cardsEffect;
											(n ? e.slides.find(n) : e.slides).transition(t).find(".swiper-slide-shadow").transition(t),
											effectVirtualTransitionEnd({
													swiper: e,
													duration: t,
													transformEl: n
											})
									}
									,
									perspective: ()=>!0,
									overwriteParams: ()=>({
											watchSlidesProgress: !0,
											virtualTranslate: !e.params.cssMode
									})
							})
					}
			}
			,
			4058: e=>{
					"use strict";
					e.exports = JSON.parse('{"Aacute":"Á","aacute":"á","Abreve":"Ă","abreve":"ă","ac":"∾","acd":"∿","acE":"∾̳","Acirc":"Â","acirc":"â","acute":"´","Acy":"А","acy":"а","AElig":"Æ","aelig":"æ","af":"⁡","Afr":"𝔄","afr":"𝔞","Agrave":"À","agrave":"à","alefsym":"ℵ","aleph":"ℵ","Alpha":"Α","alpha":"α","Amacr":"Ā","amacr":"ā","amalg":"⨿","amp":"&","AMP":"&","andand":"⩕","And":"⩓","and":"∧","andd":"⩜","andslope":"⩘","andv":"⩚","ang":"∠","ange":"⦤","angle":"∠","angmsdaa":"⦨","angmsdab":"⦩","angmsdac":"⦪","angmsdad":"⦫","angmsdae":"⦬","angmsdaf":"⦭","angmsdag":"⦮","angmsdah":"⦯","angmsd":"∡","angrt":"∟","angrtvb":"⊾","angrtvbd":"⦝","angsph":"∢","angst":"Å","angzarr":"⍼","Aogon":"Ą","aogon":"ą","Aopf":"𝔸","aopf":"𝕒","apacir":"⩯","ap":"≈","apE":"⩰","ape":"≊","apid":"≋","apos":"\'","ApplyFunction":"⁡","approx":"≈","approxeq":"≊","Aring":"Å","aring":"å","Ascr":"𝒜","ascr":"𝒶","Assign":"≔","ast":"*","asymp":"≈","asympeq":"≍","Atilde":"Ã","atilde":"ã","Auml":"Ä","auml":"ä","awconint":"∳","awint":"⨑","backcong":"≌","backepsilon":"϶","backprime":"‵","backsim":"∽","backsimeq":"⋍","Backslash":"∖","Barv":"⫧","barvee":"⊽","barwed":"⌅","Barwed":"⌆","barwedge":"⌅","bbrk":"⎵","bbrktbrk":"⎶","bcong":"≌","Bcy":"Б","bcy":"б","bdquo":"„","becaus":"∵","because":"∵","Because":"∵","bemptyv":"⦰","bepsi":"϶","bernou":"ℬ","Bernoullis":"ℬ","Beta":"Β","beta":"β","beth":"ℶ","between":"≬","Bfr":"𝔅","bfr":"𝔟","bigcap":"⋂","bigcirc":"◯","bigcup":"⋃","bigodot":"⨀","bigoplus":"⨁","bigotimes":"⨂","bigsqcup":"⨆","bigstar":"★","bigtriangledown":"▽","bigtriangleup":"△","biguplus":"⨄","bigvee":"⋁","bigwedge":"⋀","bkarow":"⤍","blacklozenge":"⧫","blacksquare":"▪","blacktriangle":"▴","blacktriangledown":"▾","blacktriangleleft":"◂","blacktriangleright":"▸","blank":"␣","blk12":"▒","blk14":"░","blk34":"▓","block":"█","bne":"=⃥","bnequiv":"≡⃥","bNot":"⫭","bnot":"⌐","Bopf":"𝔹","bopf":"𝕓","bot":"⊥","bottom":"⊥","bowtie":"⋈","boxbox":"⧉","boxdl":"┐","boxdL":"╕","boxDl":"╖","boxDL":"╗","boxdr":"┌","boxdR":"╒","boxDr":"╓","boxDR":"╔","boxh":"─","boxH":"═","boxhd":"┬","boxHd":"╤","boxhD":"╥","boxHD":"╦","boxhu":"┴","boxHu":"╧","boxhU":"╨","boxHU":"╩","boxminus":"⊟","boxplus":"⊞","boxtimes":"⊠","boxul":"┘","boxuL":"╛","boxUl":"╜","boxUL":"╝","boxur":"└","boxuR":"╘","boxUr":"╙","boxUR":"╚","boxv":"│","boxV":"║","boxvh":"┼","boxvH":"╪","boxVh":"╫","boxVH":"╬","boxvl":"┤","boxvL":"╡","boxVl":"╢","boxVL":"╣","boxvr":"├","boxvR":"╞","boxVr":"╟","boxVR":"╠","bprime":"‵","breve":"˘","Breve":"˘","brvbar":"¦","bscr":"𝒷","Bscr":"ℬ","bsemi":"⁏","bsim":"∽","bsime":"⋍","bsolb":"⧅","bsol":"\\\\","bsolhsub":"⟈","bull":"•","bullet":"•","bump":"≎","bumpE":"⪮","bumpe":"≏","Bumpeq":"≎","bumpeq":"≏","Cacute":"Ć","cacute":"ć","capand":"⩄","capbrcup":"⩉","capcap":"⩋","cap":"∩","Cap":"⋒","capcup":"⩇","capdot":"⩀","CapitalDifferentialD":"ⅅ","caps":"∩︀","caret":"⁁","caron":"ˇ","Cayleys":"ℭ","ccaps":"⩍","Ccaron":"Č","ccaron":"č","Ccedil":"Ç","ccedil":"ç","Ccirc":"Ĉ","ccirc":"ĉ","Cconint":"∰","ccups":"⩌","ccupssm":"⩐","Cdot":"Ċ","cdot":"ċ","cedil":"¸","Cedilla":"¸","cemptyv":"⦲","cent":"¢","centerdot":"·","CenterDot":"·","cfr":"𝔠","Cfr":"ℭ","CHcy":"Ч","chcy":"ч","check":"✓","checkmark":"✓","Chi":"Χ","chi":"χ","circ":"ˆ","circeq":"≗","circlearrowleft":"↺","circlearrowright":"↻","circledast":"⊛","circledcirc":"⊚","circleddash":"⊝","CircleDot":"⊙","circledR":"®","circledS":"Ⓢ","CircleMinus":"⊖","CirclePlus":"⊕","CircleTimes":"⊗","cir":"○","cirE":"⧃","cire":"≗","cirfnint":"⨐","cirmid":"⫯","cirscir":"⧂","ClockwiseContourIntegral":"∲","CloseCurlyDoubleQuote":"”","CloseCurlyQuote":"’","clubs":"♣","clubsuit":"♣","colon":":","Colon":"∷","Colone":"⩴","colone":"≔","coloneq":"≔","comma":",","commat":"@","comp":"∁","compfn":"∘","complement":"∁","complexes":"ℂ","cong":"≅","congdot":"⩭","Congruent":"≡","conint":"∮","Conint":"∯","ContourIntegral":"∮","copf":"𝕔","Copf":"ℂ","coprod":"∐","Coproduct":"∐","copy":"©","COPY":"©","copysr":"℗","CounterClockwiseContourIntegral":"∳","crarr":"↵","cross":"✗","Cross":"⨯","Cscr":"𝒞","cscr":"𝒸","csub":"⫏","csube":"⫑","csup":"⫐","csupe":"⫒","ctdot":"⋯","cudarrl":"⤸","cudarrr":"⤵","cuepr":"⋞","cuesc":"⋟","cularr":"↶","cularrp":"⤽","cupbrcap":"⩈","cupcap":"⩆","CupCap":"≍","cup":"∪","Cup":"⋓","cupcup":"⩊","cupdot":"⊍","cupor":"⩅","cups":"∪︀","curarr":"↷","curarrm":"⤼","curlyeqprec":"⋞","curlyeqsucc":"⋟","curlyvee":"⋎","curlywedge":"⋏","curren":"¤","curvearrowleft":"↶","curvearrowright":"↷","cuvee":"⋎","cuwed":"⋏","cwconint":"∲","cwint":"∱","cylcty":"⌭","dagger":"†","Dagger":"‡","daleth":"ℸ","darr":"↓","Darr":"↡","dArr":"⇓","dash":"‐","Dashv":"⫤","dashv":"⊣","dbkarow":"⤏","dblac":"˝","Dcaron":"Ď","dcaron":"ď","Dcy":"Д","dcy":"д","ddagger":"‡","ddarr":"⇊","DD":"ⅅ","dd":"ⅆ","DDotrahd":"⤑","ddotseq":"⩷","deg":"°","Del":"∇","Delta":"Δ","delta":"δ","demptyv":"⦱","dfisht":"⥿","Dfr":"𝔇","dfr":"𝔡","dHar":"⥥","dharl":"⇃","dharr":"⇂","DiacriticalAcute":"´","DiacriticalDot":"˙","DiacriticalDoubleAcute":"˝","DiacriticalGrave":"`","DiacriticalTilde":"˜","diam":"⋄","diamond":"⋄","Diamond":"⋄","diamondsuit":"♦","diams":"♦","die":"¨","DifferentialD":"ⅆ","digamma":"ϝ","disin":"⋲","div":"÷","divide":"÷","divideontimes":"⋇","divonx":"⋇","DJcy":"Ђ","djcy":"ђ","dlcorn":"⌞","dlcrop":"⌍","dollar":"$","Dopf":"𝔻","dopf":"𝕕","Dot":"¨","dot":"˙","DotDot":"⃜","doteq":"≐","doteqdot":"≑","DotEqual":"≐","dotminus":"∸","dotplus":"∔","dotsquare":"⊡","doublebarwedge":"⌆","DoubleContourIntegral":"∯","DoubleDot":"¨","DoubleDownArrow":"⇓","DoubleLeftArrow":"⇐","DoubleLeftRightArrow":"⇔","DoubleLeftTee":"⫤","DoubleLongLeftArrow":"⟸","DoubleLongLeftRightArrow":"⟺","DoubleLongRightArrow":"⟹","DoubleRightArrow":"⇒","DoubleRightTee":"⊨","DoubleUpArrow":"⇑","DoubleUpDownArrow":"⇕","DoubleVerticalBar":"∥","DownArrowBar":"⤓","downarrow":"↓","DownArrow":"↓","Downarrow":"⇓","DownArrowUpArrow":"⇵","DownBreve":"̑","downdownarrows":"⇊","downharpoonleft":"⇃","downharpoonright":"⇂","DownLeftRightVector":"⥐","DownLeftTeeVector":"⥞","DownLeftVectorBar":"⥖","DownLeftVector":"↽","DownRightTeeVector":"⥟","DownRightVectorBar":"⥗","DownRightVector":"⇁","DownTeeArrow":"↧","DownTee":"⊤","drbkarow":"⤐","drcorn":"⌟","drcrop":"⌌","Dscr":"𝒟","dscr":"𝒹","DScy":"Ѕ","dscy":"ѕ","dsol":"⧶","Dstrok":"Đ","dstrok":"đ","dtdot":"⋱","dtri":"▿","dtrif":"▾","duarr":"⇵","duhar":"⥯","dwangle":"⦦","DZcy":"Џ","dzcy":"џ","dzigrarr":"⟿","Eacute":"É","eacute":"é","easter":"⩮","Ecaron":"Ě","ecaron":"ě","Ecirc":"Ê","ecirc":"ê","ecir":"≖","ecolon":"≕","Ecy":"Э","ecy":"э","eDDot":"⩷","Edot":"Ė","edot":"ė","eDot":"≑","ee":"ⅇ","efDot":"≒","Efr":"𝔈","efr":"𝔢","eg":"⪚","Egrave":"È","egrave":"è","egs":"⪖","egsdot":"⪘","el":"⪙","Element":"∈","elinters":"⏧","ell":"ℓ","els":"⪕","elsdot":"⪗","Emacr":"Ē","emacr":"ē","empty":"∅","emptyset":"∅","EmptySmallSquare":"◻","emptyv":"∅","EmptyVerySmallSquare":"▫","emsp13":" ","emsp14":" ","emsp":" ","ENG":"Ŋ","eng":"ŋ","ensp":" ","Eogon":"Ę","eogon":"ę","Eopf":"𝔼","eopf":"𝕖","epar":"⋕","eparsl":"⧣","eplus":"⩱","epsi":"ε","Epsilon":"Ε","epsilon":"ε","epsiv":"ϵ","eqcirc":"≖","eqcolon":"≕","eqsim":"≂","eqslantgtr":"⪖","eqslantless":"⪕","Equal":"⩵","equals":"=","EqualTilde":"≂","equest":"≟","Equilibrium":"⇌","equiv":"≡","equivDD":"⩸","eqvparsl":"⧥","erarr":"⥱","erDot":"≓","escr":"ℯ","Escr":"ℰ","esdot":"≐","Esim":"⩳","esim":"≂","Eta":"Η","eta":"η","ETH":"Ð","eth":"ð","Euml":"Ë","euml":"ë","euro":"€","excl":"!","exist":"∃","Exists":"∃","expectation":"ℰ","exponentiale":"ⅇ","ExponentialE":"ⅇ","fallingdotseq":"≒","Fcy":"Ф","fcy":"ф","female":"♀","ffilig":"ﬃ","fflig":"ﬀ","ffllig":"ﬄ","Ffr":"𝔉","ffr":"𝔣","filig":"ﬁ","FilledSmallSquare":"◼","FilledVerySmallSquare":"▪","fjlig":"fj","flat":"♭","fllig":"ﬂ","fltns":"▱","fnof":"ƒ","Fopf":"𝔽","fopf":"𝕗","forall":"∀","ForAll":"∀","fork":"⋔","forkv":"⫙","Fouriertrf":"ℱ","fpartint":"⨍","frac12":"½","frac13":"⅓","frac14":"¼","frac15":"⅕","frac16":"⅙","frac18":"⅛","frac23":"⅔","frac25":"⅖","frac34":"¾","frac35":"⅗","frac38":"⅜","frac45":"⅘","frac56":"⅚","frac58":"⅝","frac78":"⅞","frasl":"⁄","frown":"⌢","fscr":"𝒻","Fscr":"ℱ","gacute":"ǵ","Gamma":"Γ","gamma":"γ","Gammad":"Ϝ","gammad":"ϝ","gap":"⪆","Gbreve":"Ğ","gbreve":"ğ","Gcedil":"Ģ","Gcirc":"Ĝ","gcirc":"ĝ","Gcy":"Г","gcy":"г","Gdot":"Ġ","gdot":"ġ","ge":"≥","gE":"≧","gEl":"⪌","gel":"⋛","geq":"≥","geqq":"≧","geqslant":"⩾","gescc":"⪩","ges":"⩾","gesdot":"⪀","gesdoto":"⪂","gesdotol":"⪄","gesl":"⋛︀","gesles":"⪔","Gfr":"𝔊","gfr":"𝔤","gg":"≫","Gg":"⋙","ggg":"⋙","gimel":"ℷ","GJcy":"Ѓ","gjcy":"ѓ","gla":"⪥","gl":"≷","glE":"⪒","glj":"⪤","gnap":"⪊","gnapprox":"⪊","gne":"⪈","gnE":"≩","gneq":"⪈","gneqq":"≩","gnsim":"⋧","Gopf":"𝔾","gopf":"𝕘","grave":"`","GreaterEqual":"≥","GreaterEqualLess":"⋛","GreaterFullEqual":"≧","GreaterGreater":"⪢","GreaterLess":"≷","GreaterSlantEqual":"⩾","GreaterTilde":"≳","Gscr":"𝒢","gscr":"ℊ","gsim":"≳","gsime":"⪎","gsiml":"⪐","gtcc":"⪧","gtcir":"⩺","gt":">","GT":">","Gt":"≫","gtdot":"⋗","gtlPar":"⦕","gtquest":"⩼","gtrapprox":"⪆","gtrarr":"⥸","gtrdot":"⋗","gtreqless":"⋛","gtreqqless":"⪌","gtrless":"≷","gtrsim":"≳","gvertneqq":"≩︀","gvnE":"≩︀","Hacek":"ˇ","hairsp":" ","half":"½","hamilt":"ℋ","HARDcy":"Ъ","hardcy":"ъ","harrcir":"⥈","harr":"↔","hArr":"⇔","harrw":"↭","Hat":"^","hbar":"ℏ","Hcirc":"Ĥ","hcirc":"ĥ","hearts":"♥","heartsuit":"♥","hellip":"…","hercon":"⊹","hfr":"𝔥","Hfr":"ℌ","HilbertSpace":"ℋ","hksearow":"⤥","hkswarow":"⤦","hoarr":"⇿","homtht":"∻","hookleftarrow":"↩","hookrightarrow":"↪","hopf":"𝕙","Hopf":"ℍ","horbar":"―","HorizontalLine":"─","hscr":"𝒽","Hscr":"ℋ","hslash":"ℏ","Hstrok":"Ħ","hstrok":"ħ","HumpDownHump":"≎","HumpEqual":"≏","hybull":"⁃","hyphen":"‐","Iacute":"Í","iacute":"í","ic":"⁣","Icirc":"Î","icirc":"î","Icy":"И","icy":"и","Idot":"İ","IEcy":"Е","iecy":"е","iexcl":"¡","iff":"⇔","ifr":"𝔦","Ifr":"ℑ","Igrave":"Ì","igrave":"ì","ii":"ⅈ","iiiint":"⨌","iiint":"∭","iinfin":"⧜","iiota":"℩","IJlig":"Ĳ","ijlig":"ĳ","Imacr":"Ī","imacr":"ī","image":"ℑ","ImaginaryI":"ⅈ","imagline":"ℐ","imagpart":"ℑ","imath":"ı","Im":"ℑ","imof":"⊷","imped":"Ƶ","Implies":"⇒","incare":"℅","in":"∈","infin":"∞","infintie":"⧝","inodot":"ı","intcal":"⊺","int":"∫","Int":"∬","integers":"ℤ","Integral":"∫","intercal":"⊺","Intersection":"⋂","intlarhk":"⨗","intprod":"⨼","InvisibleComma":"⁣","InvisibleTimes":"⁢","IOcy":"Ё","iocy":"ё","Iogon":"Į","iogon":"į","Iopf":"𝕀","iopf":"𝕚","Iota":"Ι","iota":"ι","iprod":"⨼","iquest":"¿","iscr":"𝒾","Iscr":"ℐ","isin":"∈","isindot":"⋵","isinE":"⋹","isins":"⋴","isinsv":"⋳","isinv":"∈","it":"⁢","Itilde":"Ĩ","itilde":"ĩ","Iukcy":"І","iukcy":"і","Iuml":"Ï","iuml":"ï","Jcirc":"Ĵ","jcirc":"ĵ","Jcy":"Й","jcy":"й","Jfr":"𝔍","jfr":"𝔧","jmath":"ȷ","Jopf":"𝕁","jopf":"𝕛","Jscr":"𝒥","jscr":"𝒿","Jsercy":"Ј","jsercy":"ј","Jukcy":"Є","jukcy":"є","Kappa":"Κ","kappa":"κ","kappav":"ϰ","Kcedil":"Ķ","kcedil":"ķ","Kcy":"К","kcy":"к","Kfr":"𝔎","kfr":"𝔨","kgreen":"ĸ","KHcy":"Х","khcy":"х","KJcy":"Ќ","kjcy":"ќ","Kopf":"𝕂","kopf":"𝕜","Kscr":"𝒦","kscr":"𝓀","lAarr":"⇚","Lacute":"Ĺ","lacute":"ĺ","laemptyv":"⦴","lagran":"ℒ","Lambda":"Λ","lambda":"λ","lang":"⟨","Lang":"⟪","langd":"⦑","langle":"⟨","lap":"⪅","Laplacetrf":"ℒ","laquo":"«","larrb":"⇤","larrbfs":"⤟","larr":"←","Larr":"↞","lArr":"⇐","larrfs":"⤝","larrhk":"↩","larrlp":"↫","larrpl":"⤹","larrsim":"⥳","larrtl":"↢","latail":"⤙","lAtail":"⤛","lat":"⪫","late":"⪭","lates":"⪭︀","lbarr":"⤌","lBarr":"⤎","lbbrk":"❲","lbrace":"{","lbrack":"[","lbrke":"⦋","lbrksld":"⦏","lbrkslu":"⦍","Lcaron":"Ľ","lcaron":"ľ","Lcedil":"Ļ","lcedil":"ļ","lceil":"⌈","lcub":"{","Lcy":"Л","lcy":"л","ldca":"⤶","ldquo":"“","ldquor":"„","ldrdhar":"⥧","ldrushar":"⥋","ldsh":"↲","le":"≤","lE":"≦","LeftAngleBracket":"⟨","LeftArrowBar":"⇤","leftarrow":"←","LeftArrow":"←","Leftarrow":"⇐","LeftArrowRightArrow":"⇆","leftarrowtail":"↢","LeftCeiling":"⌈","LeftDoubleBracket":"⟦","LeftDownTeeVector":"⥡","LeftDownVectorBar":"⥙","LeftDownVector":"⇃","LeftFloor":"⌊","leftharpoondown":"↽","leftharpoonup":"↼","leftleftarrows":"⇇","leftrightarrow":"↔","LeftRightArrow":"↔","Leftrightarrow":"⇔","leftrightarrows":"⇆","leftrightharpoons":"⇋","leftrightsquigarrow":"↭","LeftRightVector":"⥎","LeftTeeArrow":"↤","LeftTee":"⊣","LeftTeeVector":"⥚","leftthreetimes":"⋋","LeftTriangleBar":"⧏","LeftTriangle":"⊲","LeftTriangleEqual":"⊴","LeftUpDownVector":"⥑","LeftUpTeeVector":"⥠","LeftUpVectorBar":"⥘","LeftUpVector":"↿","LeftVectorBar":"⥒","LeftVector":"↼","lEg":"⪋","leg":"⋚","leq":"≤","leqq":"≦","leqslant":"⩽","lescc":"⪨","les":"⩽","lesdot":"⩿","lesdoto":"⪁","lesdotor":"⪃","lesg":"⋚︀","lesges":"⪓","lessapprox":"⪅","lessdot":"⋖","lesseqgtr":"⋚","lesseqqgtr":"⪋","LessEqualGreater":"⋚","LessFullEqual":"≦","LessGreater":"≶","lessgtr":"≶","LessLess":"⪡","lesssim":"≲","LessSlantEqual":"⩽","LessTilde":"≲","lfisht":"⥼","lfloor":"⌊","Lfr":"𝔏","lfr":"𝔩","lg":"≶","lgE":"⪑","lHar":"⥢","lhard":"↽","lharu":"↼","lharul":"⥪","lhblk":"▄","LJcy":"Љ","ljcy":"љ","llarr":"⇇","ll":"≪","Ll":"⋘","llcorner":"⌞","Lleftarrow":"⇚","llhard":"⥫","lltri":"◺","Lmidot":"Ŀ","lmidot":"ŀ","lmoustache":"⎰","lmoust":"⎰","lnap":"⪉","lnapprox":"⪉","lne":"⪇","lnE":"≨","lneq":"⪇","lneqq":"≨","lnsim":"⋦","loang":"⟬","loarr":"⇽","lobrk":"⟦","longleftarrow":"⟵","LongLeftArrow":"⟵","Longleftarrow":"⟸","longleftrightarrow":"⟷","LongLeftRightArrow":"⟷","Longleftrightarrow":"⟺","longmapsto":"⟼","longrightarrow":"⟶","LongRightArrow":"⟶","Longrightarrow":"⟹","looparrowleft":"↫","looparrowright":"↬","lopar":"⦅","Lopf":"𝕃","lopf":"𝕝","loplus":"⨭","lotimes":"⨴","lowast":"∗","lowbar":"_","LowerLeftArrow":"↙","LowerRightArrow":"↘","loz":"◊","lozenge":"◊","lozf":"⧫","lpar":"(","lparlt":"⦓","lrarr":"⇆","lrcorner":"⌟","lrhar":"⇋","lrhard":"⥭","lrm":"‎","lrtri":"⊿","lsaquo":"‹","lscr":"𝓁","Lscr":"ℒ","lsh":"↰","Lsh":"↰","lsim":"≲","lsime":"⪍","lsimg":"⪏","lsqb":"[","lsquo":"‘","lsquor":"‚","Lstrok":"Ł","lstrok":"ł","ltcc":"⪦","ltcir":"⩹","lt":"<","LT":"<","Lt":"≪","ltdot":"⋖","lthree":"⋋","ltimes":"⋉","ltlarr":"⥶","ltquest":"⩻","ltri":"◃","ltrie":"⊴","ltrif":"◂","ltrPar":"⦖","lurdshar":"⥊","luruhar":"⥦","lvertneqq":"≨︀","lvnE":"≨︀","macr":"¯","male":"♂","malt":"✠","maltese":"✠","Map":"⤅","map":"↦","mapsto":"↦","mapstodown":"↧","mapstoleft":"↤","mapstoup":"↥","marker":"▮","mcomma":"⨩","Mcy":"М","mcy":"м","mdash":"—","mDDot":"∺","measuredangle":"∡","MediumSpace":" ","Mellintrf":"ℳ","Mfr":"𝔐","mfr":"𝔪","mho":"℧","micro":"µ","midast":"*","midcir":"⫰","mid":"∣","middot":"·","minusb":"⊟","minus":"−","minusd":"∸","minusdu":"⨪","MinusPlus":"∓","mlcp":"⫛","mldr":"…","mnplus":"∓","models":"⊧","Mopf":"𝕄","mopf":"𝕞","mp":"∓","mscr":"𝓂","Mscr":"ℳ","mstpos":"∾","Mu":"Μ","mu":"μ","multimap":"⊸","mumap":"⊸","nabla":"∇","Nacute":"Ń","nacute":"ń","nang":"∠⃒","nap":"≉","napE":"⩰̸","napid":"≋̸","napos":"ŉ","napprox":"≉","natural":"♮","naturals":"ℕ","natur":"♮","nbsp":" ","nbump":"≎̸","nbumpe":"≏̸","ncap":"⩃","Ncaron":"Ň","ncaron":"ň","Ncedil":"Ņ","ncedil":"ņ","ncong":"≇","ncongdot":"⩭̸","ncup":"⩂","Ncy":"Н","ncy":"н","ndash":"–","nearhk":"⤤","nearr":"↗","neArr":"⇗","nearrow":"↗","ne":"≠","nedot":"≐̸","NegativeMediumSpace":"​","NegativeThickSpace":"​","NegativeThinSpace":"​","NegativeVeryThinSpace":"​","nequiv":"≢","nesear":"⤨","nesim":"≂̸","NestedGreaterGreater":"≫","NestedLessLess":"≪","NewLine":"\\n","nexist":"∄","nexists":"∄","Nfr":"𝔑","nfr":"𝔫","ngE":"≧̸","nge":"≱","ngeq":"≱","ngeqq":"≧̸","ngeqslant":"⩾̸","nges":"⩾̸","nGg":"⋙̸","ngsim":"≵","nGt":"≫⃒","ngt":"≯","ngtr":"≯","nGtv":"≫̸","nharr":"↮","nhArr":"⇎","nhpar":"⫲","ni":"∋","nis":"⋼","nisd":"⋺","niv":"∋","NJcy":"Њ","njcy":"њ","nlarr":"↚","nlArr":"⇍","nldr":"‥","nlE":"≦̸","nle":"≰","nleftarrow":"↚","nLeftarrow":"⇍","nleftrightarrow":"↮","nLeftrightarrow":"⇎","nleq":"≰","nleqq":"≦̸","nleqslant":"⩽̸","nles":"⩽̸","nless":"≮","nLl":"⋘̸","nlsim":"≴","nLt":"≪⃒","nlt":"≮","nltri":"⋪","nltrie":"⋬","nLtv":"≪̸","nmid":"∤","NoBreak":"⁠","NonBreakingSpace":" ","nopf":"𝕟","Nopf":"ℕ","Not":"⫬","not":"¬","NotCongruent":"≢","NotCupCap":"≭","NotDoubleVerticalBar":"∦","NotElement":"∉","NotEqual":"≠","NotEqualTilde":"≂̸","NotExists":"∄","NotGreater":"≯","NotGreaterEqual":"≱","NotGreaterFullEqual":"≧̸","NotGreaterGreater":"≫̸","NotGreaterLess":"≹","NotGreaterSlantEqual":"⩾̸","NotGreaterTilde":"≵","NotHumpDownHump":"≎̸","NotHumpEqual":"≏̸","notin":"∉","notindot":"⋵̸","notinE":"⋹̸","notinva":"∉","notinvb":"⋷","notinvc":"⋶","NotLeftTriangleBar":"⧏̸","NotLeftTriangle":"⋪","NotLeftTriangleEqual":"⋬","NotLess":"≮","NotLessEqual":"≰","NotLessGreater":"≸","NotLessLess":"≪̸","NotLessSlantEqual":"⩽̸","NotLessTilde":"≴","NotNestedGreaterGreater":"⪢̸","NotNestedLessLess":"⪡̸","notni":"∌","notniva":"∌","notnivb":"⋾","notnivc":"⋽","NotPrecedes":"⊀","NotPrecedesEqual":"⪯̸","NotPrecedesSlantEqual":"⋠","NotReverseElement":"∌","NotRightTriangleBar":"⧐̸","NotRightTriangle":"⋫","NotRightTriangleEqual":"⋭","NotSquareSubset":"⊏̸","NotSquareSubsetEqual":"⋢","NotSquareSuperset":"⊐̸","NotSquareSupersetEqual":"⋣","NotSubset":"⊂⃒","NotSubsetEqual":"⊈","NotSucceeds":"⊁","NotSucceedsEqual":"⪰̸","NotSucceedsSlantEqual":"⋡","NotSucceedsTilde":"≿̸","NotSuperset":"⊃⃒","NotSupersetEqual":"⊉","NotTilde":"≁","NotTildeEqual":"≄","NotTildeFullEqual":"≇","NotTildeTilde":"≉","NotVerticalBar":"∤","nparallel":"∦","npar":"∦","nparsl":"⫽⃥","npart":"∂̸","npolint":"⨔","npr":"⊀","nprcue":"⋠","nprec":"⊀","npreceq":"⪯̸","npre":"⪯̸","nrarrc":"⤳̸","nrarr":"↛","nrArr":"⇏","nrarrw":"↝̸","nrightarrow":"↛","nRightarrow":"⇏","nrtri":"⋫","nrtrie":"⋭","nsc":"⊁","nsccue":"⋡","nsce":"⪰̸","Nscr":"𝒩","nscr":"𝓃","nshortmid":"∤","nshortparallel":"∦","nsim":"≁","nsime":"≄","nsimeq":"≄","nsmid":"∤","nspar":"∦","nsqsube":"⋢","nsqsupe":"⋣","nsub":"⊄","nsubE":"⫅̸","nsube":"⊈","nsubset":"⊂⃒","nsubseteq":"⊈","nsubseteqq":"⫅̸","nsucc":"⊁","nsucceq":"⪰̸","nsup":"⊅","nsupE":"⫆̸","nsupe":"⊉","nsupset":"⊃⃒","nsupseteq":"⊉","nsupseteqq":"⫆̸","ntgl":"≹","Ntilde":"Ñ","ntilde":"ñ","ntlg":"≸","ntriangleleft":"⋪","ntrianglelefteq":"⋬","ntriangleright":"⋫","ntrianglerighteq":"⋭","Nu":"Ν","nu":"ν","num":"#","numero":"№","numsp":" ","nvap":"≍⃒","nvdash":"⊬","nvDash":"⊭","nVdash":"⊮","nVDash":"⊯","nvge":"≥⃒","nvgt":">⃒","nvHarr":"⤄","nvinfin":"⧞","nvlArr":"⤂","nvle":"≤⃒","nvlt":"<⃒","nvltrie":"⊴⃒","nvrArr":"⤃","nvrtrie":"⊵⃒","nvsim":"∼⃒","nwarhk":"⤣","nwarr":"↖","nwArr":"⇖","nwarrow":"↖","nwnear":"⤧","Oacute":"Ó","oacute":"ó","oast":"⊛","Ocirc":"Ô","ocirc":"ô","ocir":"⊚","Ocy":"О","ocy":"о","odash":"⊝","Odblac":"Ő","odblac":"ő","odiv":"⨸","odot":"⊙","odsold":"⦼","OElig":"Œ","oelig":"œ","ofcir":"⦿","Ofr":"𝔒","ofr":"𝔬","ogon":"˛","Ograve":"Ò","ograve":"ò","ogt":"⧁","ohbar":"⦵","ohm":"Ω","oint":"∮","olarr":"↺","olcir":"⦾","olcross":"⦻","oline":"‾","olt":"⧀","Omacr":"Ō","omacr":"ō","Omega":"Ω","omega":"ω","Omicron":"Ο","omicron":"ο","omid":"⦶","ominus":"⊖","Oopf":"𝕆","oopf":"𝕠","opar":"⦷","OpenCurlyDoubleQuote":"“","OpenCurlyQuote":"‘","operp":"⦹","oplus":"⊕","orarr":"↻","Or":"⩔","or":"∨","ord":"⩝","order":"ℴ","orderof":"ℴ","ordf":"ª","ordm":"º","origof":"⊶","oror":"⩖","orslope":"⩗","orv":"⩛","oS":"Ⓢ","Oscr":"𝒪","oscr":"ℴ","Oslash":"Ø","oslash":"ø","osol":"⊘","Otilde":"Õ","otilde":"õ","otimesas":"⨶","Otimes":"⨷","otimes":"⊗","Ouml":"Ö","ouml":"ö","ovbar":"⌽","OverBar":"‾","OverBrace":"⏞","OverBracket":"⎴","OverParenthesis":"⏜","para":"¶","parallel":"∥","par":"∥","parsim":"⫳","parsl":"⫽","part":"∂","PartialD":"∂","Pcy":"П","pcy":"п","percnt":"%","period":".","permil":"‰","perp":"⊥","pertenk":"‱","Pfr":"𝔓","pfr":"𝔭","Phi":"Φ","phi":"φ","phiv":"ϕ","phmmat":"ℳ","phone":"☎","Pi":"Π","pi":"π","pitchfork":"⋔","piv":"ϖ","planck":"ℏ","planckh":"ℎ","plankv":"ℏ","plusacir":"⨣","plusb":"⊞","pluscir":"⨢","plus":"+","plusdo":"∔","plusdu":"⨥","pluse":"⩲","PlusMinus":"±","plusmn":"±","plussim":"⨦","plustwo":"⨧","pm":"±","Poincareplane":"ℌ","pointint":"⨕","popf":"𝕡","Popf":"ℙ","pound":"£","prap":"⪷","Pr":"⪻","pr":"≺","prcue":"≼","precapprox":"⪷","prec":"≺","preccurlyeq":"≼","Precedes":"≺","PrecedesEqual":"⪯","PrecedesSlantEqual":"≼","PrecedesTilde":"≾","preceq":"⪯","precnapprox":"⪹","precneqq":"⪵","precnsim":"⋨","pre":"⪯","prE":"⪳","precsim":"≾","prime":"′","Prime":"″","primes":"ℙ","prnap":"⪹","prnE":"⪵","prnsim":"⋨","prod":"∏","Product":"∏","profalar":"⌮","profline":"⌒","profsurf":"⌓","prop":"∝","Proportional":"∝","Proportion":"∷","propto":"∝","prsim":"≾","prurel":"⊰","Pscr":"𝒫","pscr":"𝓅","Psi":"Ψ","psi":"ψ","puncsp":" ","Qfr":"𝔔","qfr":"𝔮","qint":"⨌","qopf":"𝕢","Qopf":"ℚ","qprime":"⁗","Qscr":"𝒬","qscr":"𝓆","quaternions":"ℍ","quatint":"⨖","quest":"?","questeq":"≟","quot":"\\"","QUOT":"\\"","rAarr":"⇛","race":"∽̱","Racute":"Ŕ","racute":"ŕ","radic":"√","raemptyv":"⦳","rang":"⟩","Rang":"⟫","rangd":"⦒","range":"⦥","rangle":"⟩","raquo":"»","rarrap":"⥵","rarrb":"⇥","rarrbfs":"⤠","rarrc":"⤳","rarr":"→","Rarr":"↠","rArr":"⇒","rarrfs":"⤞","rarrhk":"↪","rarrlp":"↬","rarrpl":"⥅","rarrsim":"⥴","Rarrtl":"⤖","rarrtl":"↣","rarrw":"↝","ratail":"⤚","rAtail":"⤜","ratio":"∶","rationals":"ℚ","rbarr":"⤍","rBarr":"⤏","RBarr":"⤐","rbbrk":"❳","rbrace":"}","rbrack":"]","rbrke":"⦌","rbrksld":"⦎","rbrkslu":"⦐","Rcaron":"Ř","rcaron":"ř","Rcedil":"Ŗ","rcedil":"ŗ","rceil":"⌉","rcub":"}","Rcy":"Р","rcy":"р","rdca":"⤷","rdldhar":"⥩","rdquo":"”","rdquor":"”","rdsh":"↳","real":"ℜ","realine":"ℛ","realpart":"ℜ","reals":"ℝ","Re":"ℜ","rect":"▭","reg":"®","REG":"®","ReverseElement":"∋","ReverseEquilibrium":"⇋","ReverseUpEquilibrium":"⥯","rfisht":"⥽","rfloor":"⌋","rfr":"𝔯","Rfr":"ℜ","rHar":"⥤","rhard":"⇁","rharu":"⇀","rharul":"⥬","Rho":"Ρ","rho":"ρ","rhov":"ϱ","RightAngleBracket":"⟩","RightArrowBar":"⇥","rightarrow":"→","RightArrow":"→","Rightarrow":"⇒","RightArrowLeftArrow":"⇄","rightarrowtail":"↣","RightCeiling":"⌉","RightDoubleBracket":"⟧","RightDownTeeVector":"⥝","RightDownVectorBar":"⥕","RightDownVector":"⇂","RightFloor":"⌋","rightharpoondown":"⇁","rightharpoonup":"⇀","rightleftarrows":"⇄","rightleftharpoons":"⇌","rightrightarrows":"⇉","rightsquigarrow":"↝","RightTeeArrow":"↦","RightTee":"⊢","RightTeeVector":"⥛","rightthreetimes":"⋌","RightTriangleBar":"⧐","RightTriangle":"⊳","RightTriangleEqual":"⊵","RightUpDownVector":"⥏","RightUpTeeVector":"⥜","RightUpVectorBar":"⥔","RightUpVector":"↾","RightVectorBar":"⥓","RightVector":"⇀","ring":"˚","risingdotseq":"≓","rlarr":"⇄","rlhar":"⇌","rlm":"‏","rmoustache":"⎱","rmoust":"⎱","rnmid":"⫮","roang":"⟭","roarr":"⇾","robrk":"⟧","ropar":"⦆","ropf":"𝕣","Ropf":"ℝ","roplus":"⨮","rotimes":"⨵","RoundImplies":"⥰","rpar":")","rpargt":"⦔","rppolint":"⨒","rrarr":"⇉","Rrightarrow":"⇛","rsaquo":"›","rscr":"𝓇","Rscr":"ℛ","rsh":"↱","Rsh":"↱","rsqb":"]","rsquo":"’","rsquor":"’","rthree":"⋌","rtimes":"⋊","rtri":"▹","rtrie":"⊵","rtrif":"▸","rtriltri":"⧎","RuleDelayed":"⧴","ruluhar":"⥨","rx":"℞","Sacute":"Ś","sacute":"ś","sbquo":"‚","scap":"⪸","Scaron":"Š","scaron":"š","Sc":"⪼","sc":"≻","sccue":"≽","sce":"⪰","scE":"⪴","Scedil":"Ş","scedil":"ş","Scirc":"Ŝ","scirc":"ŝ","scnap":"⪺","scnE":"⪶","scnsim":"⋩","scpolint":"⨓","scsim":"≿","Scy":"С","scy":"с","sdotb":"⊡","sdot":"⋅","sdote":"⩦","searhk":"⤥","searr":"↘","seArr":"⇘","searrow":"↘","sect":"§","semi":";","seswar":"⤩","setminus":"∖","setmn":"∖","sext":"✶","Sfr":"𝔖","sfr":"𝔰","sfrown":"⌢","sharp":"♯","SHCHcy":"Щ","shchcy":"щ","SHcy":"Ш","shcy":"ш","ShortDownArrow":"↓","ShortLeftArrow":"←","shortmid":"∣","shortparallel":"∥","ShortRightArrow":"→","ShortUpArrow":"↑","shy":"­","Sigma":"Σ","sigma":"σ","sigmaf":"ς","sigmav":"ς","sim":"∼","simdot":"⩪","sime":"≃","simeq":"≃","simg":"⪞","simgE":"⪠","siml":"⪝","simlE":"⪟","simne":"≆","simplus":"⨤","simrarr":"⥲","slarr":"←","SmallCircle":"∘","smallsetminus":"∖","smashp":"⨳","smeparsl":"⧤","smid":"∣","smile":"⌣","smt":"⪪","smte":"⪬","smtes":"⪬︀","SOFTcy":"Ь","softcy":"ь","solbar":"⌿","solb":"⧄","sol":"/","Sopf":"𝕊","sopf":"𝕤","spades":"♠","spadesuit":"♠","spar":"∥","sqcap":"⊓","sqcaps":"⊓︀","sqcup":"⊔","sqcups":"⊔︀","Sqrt":"√","sqsub":"⊏","sqsube":"⊑","sqsubset":"⊏","sqsubseteq":"⊑","sqsup":"⊐","sqsupe":"⊒","sqsupset":"⊐","sqsupseteq":"⊒","square":"□","Square":"□","SquareIntersection":"⊓","SquareSubset":"⊏","SquareSubsetEqual":"⊑","SquareSuperset":"⊐","SquareSupersetEqual":"⊒","SquareUnion":"⊔","squarf":"▪","squ":"□","squf":"▪","srarr":"→","Sscr":"𝒮","sscr":"𝓈","ssetmn":"∖","ssmile":"⌣","sstarf":"⋆","Star":"⋆","star":"☆","starf":"★","straightepsilon":"ϵ","straightphi":"ϕ","strns":"¯","sub":"⊂","Sub":"⋐","subdot":"⪽","subE":"⫅","sube":"⊆","subedot":"⫃","submult":"⫁","subnE":"⫋","subne":"⊊","subplus":"⪿","subrarr":"⥹","subset":"⊂","Subset":"⋐","subseteq":"⊆","subseteqq":"⫅","SubsetEqual":"⊆","subsetneq":"⊊","subsetneqq":"⫋","subsim":"⫇","subsub":"⫕","subsup":"⫓","succapprox":"⪸","succ":"≻","succcurlyeq":"≽","Succeeds":"≻","SucceedsEqual":"⪰","SucceedsSlantEqual":"≽","SucceedsTilde":"≿","succeq":"⪰","succnapprox":"⪺","succneqq":"⪶","succnsim":"⋩","succsim":"≿","SuchThat":"∋","sum":"∑","Sum":"∑","sung":"♪","sup1":"¹","sup2":"²","sup3":"³","sup":"⊃","Sup":"⋑","supdot":"⪾","supdsub":"⫘","supE":"⫆","supe":"⊇","supedot":"⫄","Superset":"⊃","SupersetEqual":"⊇","suphsol":"⟉","suphsub":"⫗","suplarr":"⥻","supmult":"⫂","supnE":"⫌","supne":"⊋","supplus":"⫀","supset":"⊃","Supset":"⋑","supseteq":"⊇","supseteqq":"⫆","supsetneq":"⊋","supsetneqq":"⫌","supsim":"⫈","supsub":"⫔","supsup":"⫖","swarhk":"⤦","swarr":"↙","swArr":"⇙","swarrow":"↙","swnwar":"⤪","szlig":"ß","Tab":"\\t","target":"⌖","Tau":"Τ","tau":"τ","tbrk":"⎴","Tcaron":"Ť","tcaron":"ť","Tcedil":"Ţ","tcedil":"ţ","Tcy":"Т","tcy":"т","tdot":"⃛","telrec":"⌕","Tfr":"𝔗","tfr":"𝔱","there4":"∴","therefore":"∴","Therefore":"∴","Theta":"Θ","theta":"θ","thetasym":"ϑ","thetav":"ϑ","thickapprox":"≈","thicksim":"∼","ThickSpace":"  ","ThinSpace":" ","thinsp":" ","thkap":"≈","thksim":"∼","THORN":"Þ","thorn":"þ","tilde":"˜","Tilde":"∼","TildeEqual":"≃","TildeFullEqual":"≅","TildeTilde":"≈","timesbar":"⨱","timesb":"⊠","times":"×","timesd":"⨰","tint":"∭","toea":"⤨","topbot":"⌶","topcir":"⫱","top":"⊤","Topf":"𝕋","topf":"𝕥","topfork":"⫚","tosa":"⤩","tprime":"‴","trade":"™","TRADE":"™","triangle":"▵","triangledown":"▿","triangleleft":"◃","trianglelefteq":"⊴","triangleq":"≜","triangleright":"▹","trianglerighteq":"⊵","tridot":"◬","trie":"≜","triminus":"⨺","TripleDot":"⃛","triplus":"⨹","trisb":"⧍","tritime":"⨻","trpezium":"⏢","Tscr":"𝒯","tscr":"𝓉","TScy":"Ц","tscy":"ц","TSHcy":"Ћ","tshcy":"ћ","Tstrok":"Ŧ","tstrok":"ŧ","twixt":"≬","twoheadleftarrow":"↞","twoheadrightarrow":"↠","Uacute":"Ú","uacute":"ú","uarr":"↑","Uarr":"↟","uArr":"⇑","Uarrocir":"⥉","Ubrcy":"Ў","ubrcy":"ў","Ubreve":"Ŭ","ubreve":"ŭ","Ucirc":"Û","ucirc":"û","Ucy":"У","ucy":"у","udarr":"⇅","Udblac":"Ű","udblac":"ű","udhar":"⥮","ufisht":"⥾","Ufr":"𝔘","ufr":"𝔲","Ugrave":"Ù","ugrave":"ù","uHar":"⥣","uharl":"↿","uharr":"↾","uhblk":"▀","ulcorn":"⌜","ulcorner":"⌜","ulcrop":"⌏","ultri":"◸","Umacr":"Ū","umacr":"ū","uml":"¨","UnderBar":"_","UnderBrace":"⏟","UnderBracket":"⎵","UnderParenthesis":"⏝","Union":"⋃","UnionPlus":"⊎","Uogon":"Ų","uogon":"ų","Uopf":"𝕌","uopf":"𝕦","UpArrowBar":"⤒","uparrow":"↑","UpArrow":"↑","Uparrow":"⇑","UpArrowDownArrow":"⇅","updownarrow":"↕","UpDownArrow":"↕","Updownarrow":"⇕","UpEquilibrium":"⥮","upharpoonleft":"↿","upharpoonright":"↾","uplus":"⊎","UpperLeftArrow":"↖","UpperRightArrow":"↗","upsi":"υ","Upsi":"ϒ","upsih":"ϒ","Upsilon":"Υ","upsilon":"υ","UpTeeArrow":"↥","UpTee":"⊥","upuparrows":"⇈","urcorn":"⌝","urcorner":"⌝","urcrop":"⌎","Uring":"Ů","uring":"ů","urtri":"◹","Uscr":"𝒰","uscr":"𝓊","utdot":"⋰","Utilde":"Ũ","utilde":"ũ","utri":"▵","utrif":"▴","uuarr":"⇈","Uuml":"Ü","uuml":"ü","uwangle":"⦧","vangrt":"⦜","varepsilon":"ϵ","varkappa":"ϰ","varnothing":"∅","varphi":"ϕ","varpi":"ϖ","varpropto":"∝","varr":"↕","vArr":"⇕","varrho":"ϱ","varsigma":"ς","varsubsetneq":"⊊︀","varsubsetneqq":"⫋︀","varsupsetneq":"⊋︀","varsupsetneqq":"⫌︀","vartheta":"ϑ","vartriangleleft":"⊲","vartriangleright":"⊳","vBar":"⫨","Vbar":"⫫","vBarv":"⫩","Vcy":"В","vcy":"в","vdash":"⊢","vDash":"⊨","Vdash":"⊩","VDash":"⊫","Vdashl":"⫦","veebar":"⊻","vee":"∨","Vee":"⋁","veeeq":"≚","vellip":"⋮","verbar":"|","Verbar":"‖","vert":"|","Vert":"‖","VerticalBar":"∣","VerticalLine":"|","VerticalSeparator":"❘","VerticalTilde":"≀","VeryThinSpace":" ","Vfr":"𝔙","vfr":"𝔳","vltri":"⊲","vnsub":"⊂⃒","vnsup":"⊃⃒","Vopf":"𝕍","vopf":"𝕧","vprop":"∝","vrtri":"⊳","Vscr":"𝒱","vscr":"𝓋","vsubnE":"⫋︀","vsubne":"⊊︀","vsupnE":"⫌︀","vsupne":"⊋︀","Vvdash":"⊪","vzigzag":"⦚","Wcirc":"Ŵ","wcirc":"ŵ","wedbar":"⩟","wedge":"∧","Wedge":"⋀","wedgeq":"≙","weierp":"℘","Wfr":"𝔚","wfr":"𝔴","Wopf":"𝕎","wopf":"𝕨","wp":"℘","wr":"≀","wreath":"≀","Wscr":"𝒲","wscr":"𝓌","xcap":"⋂","xcirc":"◯","xcup":"⋃","xdtri":"▽","Xfr":"𝔛","xfr":"𝔵","xharr":"⟷","xhArr":"⟺","Xi":"Ξ","xi":"ξ","xlarr":"⟵","xlArr":"⟸","xmap":"⟼","xnis":"⋻","xodot":"⨀","Xopf":"𝕏","xopf":"𝕩","xoplus":"⨁","xotime":"⨂","xrarr":"⟶","xrArr":"⟹","Xscr":"𝒳","xscr":"𝓍","xsqcup":"⨆","xuplus":"⨄","xutri":"△","xvee":"⋁","xwedge":"⋀","Yacute":"Ý","yacute":"ý","YAcy":"Я","yacy":"я","Ycirc":"Ŷ","ycirc":"ŷ","Ycy":"Ы","ycy":"ы","yen":"¥","Yfr":"𝔜","yfr":"𝔶","YIcy":"Ї","yicy":"ї","Yopf":"𝕐","yopf":"𝕪","Yscr":"𝒴","yscr":"𝓎","YUcy":"Ю","yucy":"ю","yuml":"ÿ","Yuml":"Ÿ","Zacute":"Ź","zacute":"ź","Zcaron":"Ž","zcaron":"ž","Zcy":"З","zcy":"з","Zdot":"Ż","zdot":"ż","zeetrf":"ℨ","ZeroWidthSpace":"​","Zeta":"Ζ","zeta":"ζ","zfr":"𝔷","Zfr":"ℨ","ZHcy":"Ж","zhcy":"ж","zigrarr":"⇝","zopf":"𝕫","Zopf":"ℤ","Zscr":"𝒵","zscr":"𝓏","zwj":"‍","zwnj":"‌"}')
			}
	}
		, t = {};
	function __webpack_require__(n) {
			var i = t[n];
			if (void 0 !== i)
					return i.exports;
			var r = t[n] = {
					exports: {}
			};
			return e[n].call(r.exports, r, r.exports, __webpack_require__),
			r.exports
	}
	__webpack_require__.n = e=>{
			var t = e && e.__esModule ? ()=>e.default : ()=>e;
			return __webpack_require__.d(t, {
					a: t
			}),
			t
	}
	,
	__webpack_require__.d = (e,t)=>{
			for (var n in t)
					__webpack_require__.o(t, n) && !__webpack_require__.o(e, n) && Object.defineProperty(e, n, {
							enumerable: !0,
							get: t[n]
					})
	}
	,
	__webpack_require__.g = function() {
			if ("object" == typeof globalThis)
					return globalThis;
			try {
					return this || new Function("return this")()
			} catch (e) {
					if ("object" == typeof window)
							return window
			}
	}(),
	__webpack_require__.o = (e,t)=>Object.prototype.hasOwnProperty.call(e, t),
	__webpack_require__.r = e=>{
			"undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
					value: "Module"
			}),
			Object.defineProperty(e, "__esModule", {
					value: !0
			})
	}
	,
	(()=>{
			"use strict";
			var e = {};
			__webpack_require__.r(e),
			__webpack_require__.d(e, {
					Answer: ()=>dt,
					Article: ()=>gt,
					Computation: ()=>Tt,
					CreativeWork: ()=>st,
					ErrorModel: ()=>Ot,
					ErrorResponse: ()=>Nt,
					Identifiable: ()=>it,
					ImageObject: ()=>lt,
					Images: ()=>mt,
					Intangible: ()=>Pt,
					MediaObject: ()=>at,
					News: ()=>ft,
					NewsArticle: ()=>_t,
					Places: ()=>xt,
					Query: ()=>ht,
					QueryContext: ()=>et,
					RankingRankingGroup: ()=>wt,
					RankingRankingItem: ()=>It,
					RankingRankingResponse: ()=>At,
					RelatedSearchesRelatedSearchAnswer: ()=>yt,
					Response: ()=>rt,
					ResponseBase: ()=>nt,
					SearchResponse: ()=>Rt,
					SearchResultsAnswer: ()=>pt,
					SpellSuggestions: ()=>vt,
					StructuredValue: ()=>Dt,
					Thing: ()=>ot,
					TimeZone: ()=>St,
					TimeZoneTimeZoneInformation: ()=>bt,
					VideoObject: ()=>Ct,
					Videos: ()=>Et,
					WebMetaTag: ()=>tt,
					WebPage: ()=>ct,
					WebWebAnswer: ()=>ut,
					discriminators: ()=>Mt
			});
			var t = {};
			__webpack_require__.r(t),
			__webpack_require__.d(t, {
					CreateCompletionRequest: ()=>ii,
					CreateCompletionRequestStop: ()=>ri,
					CreateCompletionResponse: ()=>oi,
					CreateCompletionResponseChoicesItem: ()=>si,
					CreateCompletionResponseChoicesItemLogprobs: ()=>ai
			});
			var n = {};
			__webpack_require__.r(n),
			__webpack_require__.d(n, {
					AppUser: ()=>Xi,
					ApplicationData: ()=>Di,
					AuthToken: ()=>Ji,
					AuthTokenViewModel: ()=>Ui,
					AutoSuggestResultModel: ()=>pi,
					BitmapDecoratorProfileConfigModel: ()=>wi,
					ContrastRequirement: ()=>Ci,
					CosmosPermission: ()=>zi,
					CosmosUser: ()=>$i,
					DeviceChromeLayer: ()=>gi,
					DeviceConfig: ()=>mi,
					EmulatorConfig: ()=>hi,
					FaceRectangle: ()=>ui,
					HSLFilter: ()=>Si,
					MicrosoftGraphDirectoryObject: ()=>ji,
					MicrosoftGraphEntity: ()=>Ri,
					NetCoreErrorResponse: ()=>Pi,
					NormalizedRGB: ()=>bi,
					Paths1Tn5QkaProxiedApinameEndpointPostRequestbodyContentApplicationOctetStreamSchema: ()=>Hi,
					PathsLllj53ImageservicesDecoratebitmapPostResponses200ContentApplicationJsonSchema: ()=>Ai,
					PathsYv268WProxiedApinameEndpointPostResponses200ContentApplicationOctetStreamSchema: ()=>qi,
					Persona: ()=>Wi,
					PersonaPasswordProfile: ()=>xi,
					PersonaPhoto: ()=>Oi,
					PersonaProfile: ()=>Yi,
					PersonaProfileShortcuts: ()=>Mi,
					PersonaProfileWallpaper: ()=>ki,
					PrevalentColorSelectRequestModel: ()=>fi,
					PrevalentColorSelectorConfig: ()=>vi,
					PrevalentColorSelectorOutput: ()=>Ei,
					ProductGroup: ()=>Ki,
					QuantizedColor: ()=>yi,
					Role: ()=>Vi,
					Scenario: ()=>Qi,
					ScenarioSwitch: ()=>Bi,
					SerializableBitmapDecoratorConfig: ()=>Ii,
					SerializableDecorateBitmapRequestModel: ()=>Ti,
					Shortcut: ()=>Li,
					SuggestedShortcut: ()=>er,
					TimelineSegmentConfig: ()=>_i,
					TwoHundredBooleanResponse: ()=>Fi,
					TwoHundredStringResponse: ()=>Gi,
					TypedResource: ()=>Ni,
					UserTestSession: ()=>Zi
			});
			var i = {};
			__webpack_require__.r(i),
			__webpack_require__.d(i, {
					BaseBotResponse: ()=>wo,
					BaseRequest: ()=>Co,
					BaseResponse: ()=>Eo,
					BingFirstPageContent: ()=>So,
					ChannelAccount: ()=>fo,
					ChatRequest: ()=>Io,
					ChatResponse: ()=>Ao,
					CreateConversationResponse: ()=>Ro,
					FeedbackInfo: ()=>_o,
					GetSharedMessagesResponse: ()=>No,
					Message: ()=>go,
					NamedEntity: ()=>bo,
					NluResponse: ()=>yo,
					Result: ()=>To,
					ScoredClassification: ()=>vo,
					ShareMessagesRequest: ()=>xo,
					ShareMessagesResponse: ()=>Oo
			});
			var r = {};
			__webpack_require__.r(r),
			__webpack_require__.d(r, {
					CreateConversationResponse: ()=>Ho
			});
			const o = function() {
					if ("undefined" != typeof globalThis)
							return globalThis;
					if ("undefined" != typeof global)
							return global;
					if ("undefined" != typeof self)
							return self;
					if ("undefined" != typeof window)
							return window;
					try {
							return new Function("return this")()
					} catch (e) {
							return {}
					}
			}();
			void 0 === o.trustedTypes && (o.trustedTypes = {
					createPolicy: (e,t)=>t
			});
			const s = {
					configurable: !1,
					enumerable: !1,
					writable: !1
			};
			void 0 === o.FAST && Reflect.defineProperty(o, "FAST", Object.assign({
					value: Object.create(null)
			}, s));
			const a = o.FAST;
			if (void 0 === a.getById) {
					const e = Object.create(null);
					Reflect.defineProperty(a, "getById", Object.assign({
							value(t, n) {
									let i = e[t];
									return void 0 === i && (i = n ? e[t] = n() : null),
									i
							}
					}, s))
			}
			const l = Object.freeze([])
				, c = o.FAST.getById(1, (()=>{
					const e = []
						, t = [];
					function throwFirstError() {
							if (t.length)
									throw t.shift()
					}
					function tryRunTask(e) {
							try {
									e.call()
							} catch (e) {
									t.push(e),
									setTimeout(throwFirstError, 0)
							}
					}
					function process() {
							let t = 0;
							for (; t < e.length; )
									if (tryRunTask(e[t]),
									t++,
									t > 1024) {
											for (let n = 0, i = e.length - t; n < i; n++)
													e[n] = e[n + t];
											e.length -= t,
											t = 0
									}
							e.length = 0
					}
					return Object.freeze({
							enqueue: function(t) {
									e.length < 1 && o.requestAnimationFrame(process),
									e.push(t)
							},
							process
					})
			}
			))
				, d = o.trustedTypes.createPolicy("fast-html", {
					createHTML: e=>e
			});
			let p = d;
			const u = `fast-${Math.random().toString(36).substring(2, 8)}`
				, h = `${u}{`
				, m = `}${u}`
				, g = Object.freeze({
					supportsAdoptedStyleSheets: Array.isArray(document.adoptedStyleSheets) && "replace"in CSSStyleSheet.prototype,
					setHTMLPolicy(e) {
							if (p !== d)
									throw new Error("The HTML policy can only be set once.");
							p = e
					},
					createHTML: e=>p.createHTML(e),
					isMarker: e=>e && 8 === e.nodeType && e.data.startsWith(u),
					extractDirectiveIndexFromMarker: e=>parseInt(e.data.replace(`${u}:`, "")),
					createInterpolationPlaceholder: e=>`${h}${e}${m}`,
					createCustomAttributePlaceholder(e, t) {
							return `${e}="${this.createInterpolationPlaceholder(t)}"`
					},
					createBlockPlaceholder: e=>`\x3c!--${u}:${e}--\x3e`,
					queueUpdate: c.enqueue,
					processUpdates: c.process,
					nextUpdate: ()=>new Promise(c.enqueue),
					setAttribute(e, t, n) {
							null == n ? e.removeAttribute(t) : e.setAttribute(t, n)
					},
					setBooleanAttribute(e, t, n) {
							n ? e.setAttribute(t, "") : e.removeAttribute(t)
					},
					removeChildNodes(e) {
							for (let t = e.firstChild; null !== t; t = e.firstChild)
									e.removeChild(t)
					},
					createTemplateWalker: e=>document.createTreeWalker(e, 133, null, !1)
			});
			class SubscriberSet {
					constructor(e, t) {
							this.sub1 = void 0,
							this.sub2 = void 0,
							this.spillover = void 0,
							this.source = e,
							this.sub1 = t
					}
					has(e) {
							return void 0 === this.spillover ? this.sub1 === e || this.sub2 === e : -1 !== this.spillover.indexOf(e)
					}
					subscribe(e) {
							const t = this.spillover;
							if (void 0 === t) {
									if (this.has(e))
											return;
									if (void 0 === this.sub1)
											return void (this.sub1 = e);
									if (void 0 === this.sub2)
											return void (this.sub2 = e);
									this.spillover = [this.sub1, this.sub2, e],
									this.sub1 = void 0,
									this.sub2 = void 0
							} else {
									-1 === t.indexOf(e) && t.push(e)
							}
					}
					unsubscribe(e) {
							const t = this.spillover;
							if (void 0 === t)
									this.sub1 === e ? this.sub1 = void 0 : this.sub2 === e && (this.sub2 = void 0);
							else {
									const n = t.indexOf(e);
									-1 !== n && t.splice(n, 1)
							}
					}
					notify(e) {
							const t = this.spillover
								, n = this.source;
							if (void 0 === t) {
									const t = this.sub1
										, i = this.sub2;
									void 0 !== t && t.handleChange(n, e),
									void 0 !== i && i.handleChange(n, e)
							} else
									for (let i = 0, r = t.length; i < r; ++i)
											t[i].handleChange(n, e)
					}
			}
			class PropertyChangeNotifier {
					constructor(e) {
							this.subscribers = {},
							this.sourceSubscribers = null,
							this.source = e
					}
					notify(e) {
							var t;
							const n = this.subscribers[e];
							void 0 !== n && n.notify(e),
							null === (t = this.sourceSubscribers) || void 0 === t || t.notify(e)
					}
					subscribe(e, t) {
							var n;
							if (t) {
									let n = this.subscribers[t];
									void 0 === n && (this.subscribers[t] = n = new SubscriberSet(this.source)),
									n.subscribe(e)
							} else
									this.sourceSubscribers = null !== (n = this.sourceSubscribers) && void 0 !== n ? n : new SubscriberSet(this.source),
									this.sourceSubscribers.subscribe(e)
					}
					unsubscribe(e, t) {
							var n;
							if (t) {
									const n = this.subscribers[t];
									void 0 !== n && n.unsubscribe(e)
							} else
									null === (n = this.sourceSubscribers) || void 0 === n || n.unsubscribe(e)
					}
			}
			const _ = a.getById(2, (()=>{
					const e = /(:|&&|\|\||if)/
						, t = new WeakMap
						, n = new WeakMap
						, i = g.queueUpdate;
					let r, createArrayObserver = e=>{
							throw new Error("Must call enableArrayObservation before observing arrays.")
					}
					;
					function getNotifier(e) {
							let n = e.$fastController || t.get(e);
							return void 0 === n && (Array.isArray(e) ? n = createArrayObserver(e) : t.set(e, n = new PropertyChangeNotifier(e))),
							n
					}
					function getAccessors(e) {
							let t = n.get(e);
							if (void 0 === t) {
									let i = Reflect.getPrototypeOf(e);
									for (; void 0 === t && null !== i; )
											t = n.get(i),
											i = Reflect.getPrototypeOf(i);
									t = void 0 === t ? [] : t.slice(0),
									n.set(e, t)
							}
							return t
					}
					class DefaultObservableAccessor {
							constructor(e) {
									this.name = e,
									this.field = `_${e}`,
									this.callback = `${e}Changed`
							}
							getValue(e) {
									return void 0 !== r && r.watch(e, this.name),
									e[this.field]
							}
							setValue(e, t) {
									const n = this.field
										, i = e[n];
									if (i !== t) {
											e[n] = t;
											const r = e[this.callback];
											"function" == typeof r && r.call(e, i, t),
											getNotifier(e).notify(this.name)
									}
							}
					}
					class BindingObserverImplementation extends SubscriberSet {
							constructor(e, t, n=!1) {
									super(e, t),
									this.binding = e,
									this.isVolatileBinding = n,
									this.needsRefresh = !0,
									this.needsQueue = !0,
									this.first = this,
									this.last = null,
									this.propertySource = void 0,
									this.propertyName = void 0,
									this.notifier = void 0,
									this.next = void 0
							}
							observe(e, t) {
									this.needsRefresh && null !== this.last && this.disconnect();
									const n = r;
									r = this.needsRefresh ? this : void 0,
									this.needsRefresh = this.isVolatileBinding;
									const i = this.binding(e, t);
									return r = n,
									i
							}
							disconnect() {
									if (null !== this.last) {
											let e = this.first;
											for (; void 0 !== e; )
													e.notifier.unsubscribe(this, e.propertyName),
													e = e.next;
											this.last = null,
											this.needsRefresh = this.needsQueue = !0
									}
							}
							watch(e, t) {
									const n = this.last
										, i = getNotifier(e)
										, o = null === n ? this.first : {};
									if (o.propertySource = e,
									o.propertyName = t,
									o.notifier = i,
									i.subscribe(this, t),
									null !== n) {
											if (!this.needsRefresh) {
													let t;
													r = void 0,
													t = n.propertySource[n.propertyName],
													r = this,
													e === t && (this.needsRefresh = !0)
											}
											n.next = o
									}
									this.last = o
							}
							handleChange() {
									this.needsQueue && (this.needsQueue = !1,
									i(this))
							}
							call() {
									null !== this.last && (this.needsQueue = !0,
									this.notify(this))
							}
							records() {
									let e = this.first;
									return {
											next: ()=>{
													const t = e;
													return void 0 === t ? {
															value: void 0,
															done: !0
													} : (e = e.next,
													{
															value: t,
															done: !1
													})
											}
											,
											[Symbol.iterator]: function() {
													return this
											}
									}
							}
					}
					return Object.freeze({
							setArrayObserverFactory(e) {
									createArrayObserver = e
							},
							getNotifier,
							track(e, t) {
									void 0 !== r && r.watch(e, t)
							},
							trackVolatile() {
									void 0 !== r && (r.needsRefresh = !0)
							},
							notify(e, t) {
									getNotifier(e).notify(t)
							},
							defineProperty(e, t) {
									"string" == typeof t && (t = new DefaultObservableAccessor(t)),
									getAccessors(e).push(t),
									Reflect.defineProperty(e, t.name, {
											enumerable: !0,
											get: function() {
													return t.getValue(this)
											},
											set: function(e) {
													t.setValue(this, e)
											}
									})
							},
							getAccessors,
							binding(e, t, n=this.isVolatileBinding(e)) {
									return new BindingObserverImplementation(e,t,n)
							},
							isVolatileBinding: t=>e.test(t.toString())
					})
			}
			));
			function observable(e, t) {
					_.defineProperty(e, t)
			}
			function observable_volatile(e, t, n) {
					return Object.assign({}, n, {
							get: function() {
									return _.trackVolatile(),
									n.get.apply(this)
							}
					})
			}
			const f = a.getById(3, (()=>{
					let e = null;
					return {
							get: ()=>e,
							set(t) {
									e = t
							}
					}
			}
			));
			class ExecutionContext {
					constructor() {
							this.index = 0,
							this.length = 0,
							this.parent = null,
							this.parentContext = null
					}
					get event() {
							return f.get()
					}
					get isEven() {
							return this.index % 2 == 0
					}
					get isOdd() {
							return this.index % 2 != 0
					}
					get isFirst() {
							return 0 === this.index
					}
					get isInMiddle() {
							return !this.isFirst && !this.isLast
					}
					get isLast() {
							return this.index === this.length - 1
					}
					static setEvent(e) {
							f.set(e)
					}
			}
			_.defineProperty(ExecutionContext.prototype, "index"),
			_.defineProperty(ExecutionContext.prototype, "length");
			const y = Object.seal(new ExecutionContext);
			class element_styles_ElementStyles {
					constructor() {
							this.targets = new WeakSet
					}
					addStylesTo(e) {
							this.targets.add(e)
					}
					removeStylesFrom(e) {
							this.targets.delete(e)
					}
					isAttachedTo(e) {
							return this.targets.has(e)
					}
					withBehaviors(...e) {
							return this.behaviors = null === this.behaviors ? e : this.behaviors.concat(e),
							this
					}
			}
			function reduceStyles(e) {
					return e.map((e=>e instanceof element_styles_ElementStyles ? reduceStyles(e.styles) : [e])).reduce(((e,t)=>e.concat(t)), [])
			}
			function reduceBehaviors(e) {
					return e.map((e=>e instanceof element_styles_ElementStyles ? e.behaviors : null)).reduce(((e,t)=>null === t ? e : (null === e && (e = []),
					e.concat(t))), null)
			}
			element_styles_ElementStyles.create = (()=>{
					if (g.supportsAdoptedStyleSheets) {
							const e = new Map;
							return t=>new AdoptedStyleSheetsStyles(t,e)
					}
					return e=>new StyleElementStyles(e)
			}
			)();
			class AdoptedStyleSheetsStyles extends element_styles_ElementStyles {
					constructor(e, t) {
							super(),
							this.styles = e,
							this.styleSheetCache = t,
							this._styleSheets = void 0,
							this.behaviors = reduceBehaviors(e)
					}
					get styleSheets() {
							if (void 0 === this._styleSheets) {
									const e = this.styles
										, t = this.styleSheetCache;
									this._styleSheets = reduceStyles(e).map((e=>{
											if (e instanceof CSSStyleSheet)
													return e;
											let n = t.get(e);
											return void 0 === n && (n = new CSSStyleSheet,
											n.replaceSync(e),
											t.set(e, n)),
											n
									}
									))
							}
							return this._styleSheets
					}
					addStylesTo(e) {
							e.adoptedStyleSheets = [...e.adoptedStyleSheets, ...this.styleSheets],
							super.addStylesTo(e)
					}
					removeStylesFrom(e) {
							const t = this.styleSheets;
							e.adoptedStyleSheets = e.adoptedStyleSheets.filter((e=>-1 === t.indexOf(e))),
							super.removeStylesFrom(e)
					}
			}
			let v = 0;
			class StyleElementStyles extends element_styles_ElementStyles {
					constructor(e) {
							super(),
							this.styles = e,
							this.behaviors = null,
							this.behaviors = reduceBehaviors(e),
							this.styleSheets = reduceStyles(e),
							this.styleClass = "fast-style-class-" + ++v
					}
					addStylesTo(e) {
							const t = this.styleSheets
								, n = this.styleClass;
							e = this.normalizeTarget(e);
							for (let i = 0; i < t.length; i++) {
									const r = document.createElement("style");
									r.innerHTML = t[i],
									r.className = n,
									e.append(r)
							}
							super.addStylesTo(e)
					}
					removeStylesFrom(e) {
							const t = (e = this.normalizeTarget(e)).querySelectorAll(`.${this.styleClass}`);
							for (let n = 0, i = t.length; n < i; ++n)
									e.removeChild(t[n]);
							super.removeStylesFrom(e)
					}
					isAttachedTo(e) {
							return super.isAttachedTo(this.normalizeTarget(e))
					}
					normalizeTarget(e) {
							return e === document ? document.body : e
					}
			}
			const b = {
					toView: e=>e ? "true" : "false",
					fromView: e=>null != e && "false" !== e && !1 !== e && 0 !== e
			};
			class AttributeDefinition {
					constructor(e, t, n=t.toLowerCase(), i="reflect", r) {
							this.guards = new Set,
							this.Owner = e,
							this.name = t,
							this.attribute = n,
							this.mode = i,
							this.converter = r,
							this.fieldName = `_${t}`,
							this.callbackName = `${t}Changed`,
							this.hasCallback = this.callbackName in e.prototype,
							"boolean" === i && void 0 === r && (this.converter = b)
					}
					setValue(e, t) {
							const n = e[this.fieldName]
								, i = this.converter;
							void 0 !== i && (t = i.fromView(t)),
							n !== t && (e[this.fieldName] = t,
							this.tryReflectToAttribute(e),
							this.hasCallback && e[this.callbackName](n, t),
							e.$fastController.notify(this.name))
					}
					getValue(e) {
							return _.track(e, this.name),
							e[this.fieldName]
					}
					onAttributeChangedCallback(e, t) {
							this.guards.has(e) || (this.guards.add(e),
							this.setValue(e, t),
							this.guards.delete(e))
					}
					tryReflectToAttribute(e) {
							const t = this.mode
								, n = this.guards;
							n.has(e) || "fromView" === t || g.queueUpdate((()=>{
									n.add(e);
									const i = e[this.fieldName];
									switch (t) {
									case "reflect":
											const t = this.converter;
											g.setAttribute(e, this.attribute, void 0 !== t ? t.toView(i) : i);
											break;
									case "boolean":
											g.setBooleanAttribute(e, this.attribute, i)
									}
									n.delete(e)
							}
							))
					}
					static collect(e, ...t) {
							const n = [];
							t.push(e.attributes);
							for (let i = 0, r = t.length; i < r; ++i) {
									const r = t[i];
									if (void 0 !== r)
											for (let t = 0, i = r.length; t < i; ++t) {
													const i = r[t];
													"string" == typeof i ? n.push(new AttributeDefinition(e,i)) : n.push(new AttributeDefinition(e,i.property,i.attribute,i.mode,i.converter))
											}
							}
							return n
					}
			}
			function attr(e, t) {
					let n;
					function decorator(e, t) {
							arguments.length > 1 && (n.property = t);
							const i = e.constructor.attributes || (e.constructor.attributes = []);
							i.push(n)
					}
					return arguments.length > 1 ? (n = {},
					void decorator(e, t)) : (n = void 0 === e ? {} : e,
					decorator)
			}
			const S = {
					mode: "open"
			}
				, C = {}
				, E = a.getById(4, (()=>{
					const e = new Map;
					return Object.freeze({
							register: t=>!e.has(t.type) && (e.set(t.type, t),
							!0),
							getByType: t=>e.get(t)
					})
			}
			));
			class FASTElementDefinition {
					constructor(e, t=e.definition) {
							"string" == typeof t && (t = {
									name: t
							}),
							this.type = e,
							this.name = t.name,
							this.template = t.template;
							const n = AttributeDefinition.collect(e, t.attributes)
								, i = new Array(n.length)
								, r = {}
								, o = {};
							for (let e = 0, t = n.length; e < t; ++e) {
									const t = n[e];
									i[e] = t.attribute,
									r[t.name] = t,
									o[t.attribute] = t
							}
							this.attributes = n,
							this.observedAttributes = i,
							this.propertyLookup = r,
							this.attributeLookup = o,
							this.shadowOptions = void 0 === t.shadowOptions ? S : null === t.shadowOptions ? void 0 : Object.assign(Object.assign({}, S), t.shadowOptions),
							this.elementOptions = void 0 === t.elementOptions ? C : Object.assign(Object.assign({}, C), t.elementOptions),
							this.styles = void 0 === t.styles ? void 0 : Array.isArray(t.styles) ? element_styles_ElementStyles.create(t.styles) : t.styles instanceof element_styles_ElementStyles ? t.styles : element_styles_ElementStyles.create([t.styles])
					}
					get isDefined() {
							return !!E.getByType(this.type)
					}
					define(e=customElements) {
							const t = this.type;
							if (E.register(this)) {
									const e = this.attributes
										, n = t.prototype;
									for (let t = 0, i = e.length; t < i; ++t)
											_.defineProperty(n, e[t]);
									Reflect.defineProperty(t, "observedAttributes", {
											value: this.observedAttributes,
											enumerable: !0
									})
							}
							return e.get(this.name) || e.define(this.name, t, this.elementOptions),
							this
					}
			}
			FASTElementDefinition.forType = E.getByType;
			const T = new WeakMap
				, I = {
					bubbles: !0,
					composed: !0,
					cancelable: !0
			};
			function getShadowRoot(e) {
					return e.shadowRoot || T.get(e) || null
			}
			class Controller extends PropertyChangeNotifier {
					constructor(e, t) {
							super(e),
							this.boundObservables = null,
							this.behaviors = null,
							this.needsInitialization = !0,
							this._template = null,
							this._styles = null,
							this._isConnected = !1,
							this.$fastController = this,
							this.view = null,
							this.element = e,
							this.definition = t;
							const n = t.shadowOptions;
							if (void 0 !== n) {
									const t = e.attachShadow(n);
									"closed" === n.mode && T.set(e, t)
							}
							const i = _.getAccessors(e);
							if (i.length > 0) {
									const t = this.boundObservables = Object.create(null);
									for (let n = 0, r = i.length; n < r; ++n) {
											const r = i[n].name
												, o = e[r];
											void 0 !== o && (delete e[r],
											t[r] = o)
									}
							}
					}
					get isConnected() {
							return _.track(this, "isConnected"),
							this._isConnected
					}
					setIsConnected(e) {
							this._isConnected = e,
							_.notify(this, "isConnected")
					}
					get template() {
							return this._template
					}
					set template(e) {
							this._template !== e && (this._template = e,
							this.needsInitialization || this.renderTemplate(e))
					}
					get styles() {
							return this._styles
					}
					set styles(e) {
							this._styles !== e && (null !== this._styles && this.removeStyles(this._styles),
							this._styles = e,
							this.needsInitialization || null === e || this.addStyles(e))
					}
					addStyles(e) {
							const t = getShadowRoot(this.element) || this.element.getRootNode();
							if (e instanceof HTMLStyleElement)
									t.append(e);
							else if (!e.isAttachedTo(t)) {
									const n = e.behaviors;
									e.addStylesTo(t),
									null !== n && this.addBehaviors(n)
							}
					}
					removeStyles(e) {
							const t = getShadowRoot(this.element) || this.element.getRootNode();
							if (e instanceof HTMLStyleElement)
									t.removeChild(e);
							else if (e.isAttachedTo(t)) {
									const n = e.behaviors;
									e.removeStylesFrom(t),
									null !== n && this.removeBehaviors(n)
							}
					}
					addBehaviors(e) {
							const t = this.behaviors || (this.behaviors = new Map)
								, n = e.length
								, i = [];
							for (let r = 0; r < n; ++r) {
									const n = e[r];
									t.has(n) ? t.set(n, t.get(n) + 1) : (t.set(n, 1),
									i.push(n))
							}
							if (this._isConnected) {
									const e = this.element;
									for (let t = 0; t < i.length; ++t)
											i[t].bind(e, y)
							}
					}
					removeBehaviors(e, t=!1) {
							const n = this.behaviors;
							if (null === n)
									return;
							const i = e.length
								, r = [];
							for (let o = 0; o < i; ++o) {
									const i = e[o];
									if (n.has(i)) {
											const e = n.get(i) - 1;
											0 === e || t ? n.delete(i) && r.push(i) : n.set(i, e)
									}
							}
							if (this._isConnected) {
									const e = this.element;
									for (let t = 0; t < r.length; ++t)
											r[t].unbind(e)
							}
					}
					onConnectedCallback() {
							if (this._isConnected)
									return;
							const e = this.element;
							this.needsInitialization ? this.finishInitialization() : null !== this.view && this.view.bind(e, y);
							const t = this.behaviors;
							if (null !== t)
									for (const [n] of t)
											n.bind(e, y);
							this.setIsConnected(!0)
					}
					onDisconnectedCallback() {
							if (!this._isConnected)
									return;
							this.setIsConnected(!1);
							const e = this.view;
							null !== e && e.unbind();
							const t = this.behaviors;
							if (null !== t) {
									const e = this.element;
									for (const [n] of t)
											n.unbind(e)
							}
					}
					onAttributeChangedCallback(e, t, n) {
							const i = this.definition.attributeLookup[e];
							void 0 !== i && i.onAttributeChangedCallback(this.element, n)
					}
					emit(e, t, n) {
							return !!this._isConnected && this.element.dispatchEvent(new CustomEvent(e,Object.assign(Object.assign({
									detail: t
							}, I), n)))
					}
					finishInitialization() {
							const e = this.element
								, t = this.boundObservables;
							if (null !== t) {
									const n = Object.keys(t);
									for (let i = 0, r = n.length; i < r; ++i) {
											const r = n[i];
											e[r] = t[r]
									}
									this.boundObservables = null
							}
							const n = this.definition;
							null === this._template && (this.element.resolveTemplate ? this._template = this.element.resolveTemplate() : n.template && (this._template = n.template || null)),
							null !== this._template && this.renderTemplate(this._template),
							null === this._styles && (this.element.resolveStyles ? this._styles = this.element.resolveStyles() : n.styles && (this._styles = n.styles || null)),
							null !== this._styles && this.addStyles(this._styles),
							this.needsInitialization = !1
					}
					renderTemplate(e) {
							const t = this.element
								, n = getShadowRoot(t) || t;
							null !== this.view ? (this.view.dispose(),
							this.view = null) : this.needsInitialization || g.removeChildNodes(n),
							e && (this.view = e.render(t, n, t))
					}
					static forCustomElement(e) {
							const t = e.$fastController;
							if (void 0 !== t)
									return t;
							const n = FASTElementDefinition.forType(e.constructor);
							if (void 0 === n)
									throw new Error("Missing FASTElement definition.");
							return e.$fastController = new Controller(e,n)
					}
			}
			function createFASTElement(e) {
					return class extends e {
							constructor() {
									super(),
									Controller.forCustomElement(this)
							}
							$emit(e, t, n) {
									return this.$fastController.emit(e, t, n)
							}
							connectedCallback() {
									this.$fastController.onConnectedCallback()
							}
							disconnectedCallback() {
									this.$fastController.onDisconnectedCallback()
							}
							attributeChangedCallback(e, t, n) {
									this.$fastController.onAttributeChangedCallback(e, t, n)
							}
					}
			}
			const w = Object.assign(createFASTElement(HTMLElement), {
					from: e=>createFASTElement(e),
					define: (e,t)=>new FASTElementDefinition(e,t).define().type
			});
			function customElement(e) {
					return function(t) {
							new FASTElementDefinition(t,e).define()
					}
			}
			const A = new Map;
			"metadata"in Reflect || (Reflect.metadata = function(e, t) {
					return function(n) {
							Reflect.defineMetadata(e, t, n)
					}
			}
			,
			Reflect.defineMetadata = function(e, t, n) {
					let i = A.get(n);
					void 0 === i && A.set(n, i = new Map),
					i.set(e, t)
			}
			,
			Reflect.getOwnMetadata = function(e, t) {
					const n = A.get(t);
					if (void 0 !== n)
							return n.get(e)
			}
			);
			class ResolverBuilder {
					constructor(e, t) {
							this.container = e,
							this.key = t
					}
					instance(e) {
							return this.registerResolver(0, e)
					}
					singleton(e) {
							return this.registerResolver(1, e)
					}
					transient(e) {
							return this.registerResolver(2, e)
					}
					callback(e) {
							return this.registerResolver(3, e)
					}
					cachedCallback(e) {
							return this.registerResolver(3, cacheCallbackResult(e))
					}
					aliasTo(e) {
							return this.registerResolver(5, e)
					}
					registerResolver(e, t) {
							const {container: n, key: i} = this;
							return this.container = this.key = void 0,
							n.registerResolver(i, new ResolverImpl(i,e,t))
					}
			}
			function cloneArrayWithPossibleProps(e) {
					const t = e.slice()
						, n = Object.keys(e)
						, i = n.length;
					let r;
					for (let o = 0; o < i; ++o)
							r = n[o],
							isArrayIndex(r) || (t[r] = e[r]);
					return t
			}
			const R = Object.freeze({
					none(e) {
							throw Error(`${e.toString()} not registered, did you forget to add @singleton()?`)
					},
					singleton: e=>new ResolverImpl(e,1,e),
					transient: e=>new ResolverImpl(e,2,e)
			})
				, x = Object.freeze({
					default: Object.freeze({
							parentLocator: ()=>null,
							responsibleForOwnerRequests: !1,
							defaultResolver: R.singleton
					})
			})
				, O = new Map;
			function getParamTypes(e) {
					return t=>Reflect.getOwnMetadata(e, t)
			}
			let N = null;
			const P = Object.freeze({
					createContainer: e=>new ContainerImpl(null,Object.assign({}, x.default, e)),
					findResponsibleContainer(e) {
							const t = e.$$container$$;
							return t && t.responsibleForOwnerRequests ? t : P.findParentContainer(e)
					},
					findParentContainer(e) {
							const t = new CustomEvent(U,{
									bubbles: !0,
									composed: !0,
									cancelable: !0,
									detail: {
											container: void 0
									}
							});
							return e.dispatchEvent(t),
							t.detail.container || P.getOrCreateDOMContainer()
					},
					getOrCreateDOMContainer: (e,t)=>e ? e.$$container$$ || new ContainerImpl(e,Object.assign({}, x.default, t, {
							parentLocator: P.findParentContainer
					})) : N || (N = new ContainerImpl(null,Object.assign({}, x.default, t, {
							parentLocator: ()=>null
					}))),
					getDesignParamtypes: getParamTypes("design:paramtypes"),
					getAnnotationParamtypes: getParamTypes("di:paramtypes"),
					getOrCreateAnnotationParamTypes(e) {
							let t = this.getAnnotationParamtypes(e);
							return void 0 === t && Reflect.defineMetadata("di:paramtypes", t = [], e),
							t
					},
					getDependencies(e) {
							let t = O.get(e);
							if (void 0 === t) {
									const n = e.inject;
									if (void 0 === n) {
											const n = P.getDesignParamtypes(e)
												, i = P.getAnnotationParamtypes(e);
											if (void 0 === n)
													if (void 0 === i) {
															const n = Object.getPrototypeOf(e);
															t = "function" == typeof n && n !== Function.prototype ? cloneArrayWithPossibleProps(P.getDependencies(n)) : []
													} else
															t = cloneArrayWithPossibleProps(i);
											else if (void 0 === i)
													t = cloneArrayWithPossibleProps(n);
											else {
													t = cloneArrayWithPossibleProps(n);
													let e, r = i.length;
													for (let n = 0; n < r; ++n)
															e = i[n],
															void 0 !== e && (t[n] = e);
													const o = Object.keys(i);
													let s;
													r = o.length;
													for (let e = 0; e < r; ++e)
															s = o[e],
															isArrayIndex(s) || (t[s] = i[s])
											}
									} else
											t = cloneArrayWithPossibleProps(n);
									O.set(e, t)
							}
							return t
					},
					defineProperty(e, t, n, i=!1) {
							const r = `$di_${t}`;
							Reflect.defineProperty(e, t, {
									get: function() {
											let e = this[r];
											if (void 0 === e) {
													const o = this instanceof HTMLElement ? P.findResponsibleContainer(this) : P.getOrCreateDOMContainer();
													if (e = o.get(n),
													this[r] = e,
													i && this instanceof w) {
															const i = this.$fastController
																, handleChange = ()=>{
																	P.findResponsibleContainer(this).get(n) !== this[r] && (this[r] = e,
																	i.notify(t))
															}
															;
															i.subscribe({
																	handleChange
															}, "isConnected")
													}
											}
											return e
									}
							})
					},
					createInterface(e, t) {
							const n = "function" == typeof e ? e : t
								, i = "string" == typeof e ? e : e && "friendlyName"in e && e.friendlyName || q
								, r = "string" != typeof e && (e && "respectConnection"in e && e.respectConnection || !1)
								, Interface = function(e, t, n) {
									if (null == e || void 0 !== new.target)
											throw new Error(`No registration for interface: '${Interface.friendlyName}'`);
									if (t)
											P.defineProperty(e, t, Interface, r);
									else {
											P.getOrCreateAnnotationParamTypes(e)[n] = Interface
									}
							};
							return Interface.$isInterface = !0,
							Interface.friendlyName = null == i ? "(anonymous)" : i,
							null != n && (Interface.register = function(e, t) {
									return n(new ResolverBuilder(e,null != t ? t : Interface))
							}
							),
							Interface.toString = function() {
									return `InterfaceSymbol<${Interface.friendlyName}>`
							}
							,
							Interface
					},
					inject: (...e)=>function(t, n, i) {
							if ("number" == typeof i) {
									const n = P.getOrCreateAnnotationParamTypes(t)
										, r = e[0];
									void 0 !== r && (n[i] = r)
							} else if (n)
									P.defineProperty(t, n, e[0]);
							else {
									const n = i ? P.getOrCreateAnnotationParamTypes(i.value) : P.getOrCreateAnnotationParamTypes(t);
									let r;
									for (let t = 0; t < e.length; ++t)
											r = e[t],
											void 0 !== r && (n[t] = r)
							}
					}
					,
					transient: e=>(e.register = function(t) {
							return H.transient(e, e).register(t)
					}
					,
					e.registerInRequestor = !1,
					e),
					singleton: (e,t=L)=>(e.register = function(t) {
							return H.singleton(e, e).register(t)
					}
					,
					e.registerInRequestor = t.scoped,
					e)
			})
				, D = P.createInterface("Container")
				, M = D;
			function createResolver(e) {
					return function(t) {
							const resolver = function(e, t, n) {
									P.inject(resolver)(e, t, n)
							};
							return resolver.$isResolver = !0,
							resolver.resolve = function(n, i) {
									return e(t, n, i)
							}
							,
							resolver
					}
			}
			P.inject;
			const L = {
					scoped: !1
			};
			k = (e,t,n,i)=>n.getAll(e, i);
			var k;
			createResolver(((e,t,n)=>()=>n.get(e)));
			const F = createResolver(((e,t,n)=>n.has(e, !0) ? n.get(e) : void 0));
			function ignore(e, t, n) {
					P.inject(ignore)(e, t, n)
			}
			ignore.$isResolver = !0,
			ignore.resolve = ()=>{}
			;
			createResolver(((e,t,n)=>{
					const i = createNewInstance(e, t)
						, r = new ResolverImpl(e,0,i);
					return n.registerResolver(e, r),
					i
			}
			)),
			createResolver(((e,t,n)=>createNewInstance(e, t)));
			function createNewInstance(e, t) {
					return t.getFactory(e).construct(t)
			}
			class ResolverImpl {
					constructor(e, t, n) {
							this.key = e,
							this.strategy = t,
							this.state = n,
							this.resolving = !1
					}
					get $isResolver() {
							return !0
					}
					register(e) {
							return e.registerResolver(this.key, this)
					}
					resolve(e, t) {
							switch (this.strategy) {
							case 0:
									return this.state;
							case 1:
									if (this.resolving)
											throw new Error(`Cyclic dependency found: ${this.state.name}`);
									return this.resolving = !0,
									this.state = e.getFactory(this.state).construct(t),
									this.strategy = 0,
									this.resolving = !1,
									this.state;
							case 2:
									{
											const n = e.getFactory(this.state);
											if (null === n)
													throw new Error(`Resolver for ${String(this.key)} returned a null factory`);
											return n.construct(t)
									}
							case 3:
									return this.state(e, t, this);
							case 4:
									return this.state[0].resolve(e, t);
							case 5:
									return t.get(this.state);
							default:
									throw new Error(`Invalid resolver strategy specified: ${this.strategy}.`)
							}
					}
					getFactory(e) {
							var t, n, i;
							switch (this.strategy) {
							case 1:
							case 2:
									return e.getFactory(this.state);
							case 5:
									return null !== (i = null === (n = null === (t = e.getResolver(this.state)) || void 0 === t ? void 0 : t.getFactory) || void 0 === n ? void 0 : n.call(t, e)) && void 0 !== i ? i : null;
							default:
									return null
							}
					}
			}
			function containerGetKey(e) {
					return this.get(e)
			}
			function transformInstance(e, t) {
					return t(e)
			}
			class FactoryImpl {
					constructor(e, t) {
							this.Type = e,
							this.dependencies = t,
							this.transformers = null
					}
					construct(e, t) {
							let n;
							return n = void 0 === t ? new this.Type(...this.dependencies.map(containerGetKey, e)) : new this.Type(...this.dependencies.map(containerGetKey, e),...t),
							null == this.transformers ? n : this.transformers.reduce(transformInstance, n)
					}
					registerTransformer(e) {
							(this.transformers || (this.transformers = [])).push(e)
					}
			}
			const B = {
					$isResolver: !0,
					resolve: (e,t)=>t
			};
			function isRegistry(e) {
					return "function" == typeof e.register
			}
			function isRegisterInRequester(e) {
					return function(e) {
							return isRegistry(e) && "boolean" == typeof e.registerInRequestor
					}(e) && e.registerInRequestor
			}
			const G = new Set(["Array", "ArrayBuffer", "Boolean", "DataView", "Date", "Error", "EvalError", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Number", "Object", "Promise", "RangeError", "ReferenceError", "RegExp", "Set", "SharedArrayBuffer", "String", "SyntaxError", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "URIError", "WeakMap", "WeakSet"])
				, U = "__DI_LOCATE_PARENT__"
				, z = new Map;
			class ContainerImpl {
					constructor(e, t) {
							this.owner = e,
							this.config = t,
							this._parent = void 0,
							this.registerDepth = 0,
							this.context = null,
							null !== e && (e.$$container$$ = this),
							this.resolvers = new Map,
							this.resolvers.set(D, B),
							e instanceof Node && e.addEventListener(U, (e=>{
									e.composedPath()[0] !== this.owner && (e.detail.container = this,
									e.stopImmediatePropagation())
							}
							))
					}
					get parent() {
							return void 0 === this._parent && (this._parent = this.config.parentLocator(this.owner)),
							this._parent
					}
					get depth() {
							return null === this.parent ? 0 : this.parent.depth + 1
					}
					get responsibleForOwnerRequests() {
							return this.config.responsibleForOwnerRequests
					}
					registerWithContext(e, ...t) {
							return this.context = e,
							this.register(...t),
							this.context = null,
							this
					}
					register(...e) {
							if (100 == ++this.registerDepth)
									throw new Error("Unable to autoregister dependency");
							let t, n, i, r, o;
							const s = this.context;
							for (let a = 0, l = e.length; a < l; ++a)
									if (t = e[a],
									isObject(t))
											if (isRegistry(t))
													t.register(this, s);
											else if (void 0 !== t.prototype)
													H.singleton(t, t).register(this);
											else
													for (n = Object.keys(t),
													r = 0,
													o = n.length; r < o; ++r)
															i = t[n[r]],
															isObject(i) && (isRegistry(i) ? i.register(this, s) : this.register(i));
							return --this.registerDepth,
							this
					}
					registerResolver(e, t) {
							validateKey(e);
							const n = this.resolvers
								, i = n.get(e);
							return null == i ? n.set(e, t) : i instanceof ResolverImpl && 4 === i.strategy ? i.state.push(t) : n.set(e, new ResolverImpl(e,4,[i, t])),
							t
					}
					registerTransformer(e, t) {
							const n = this.getResolver(e);
							if (null == n)
									return !1;
							if (n.getFactory) {
									const e = n.getFactory(this);
									return null != e && (e.registerTransformer(t),
									!0)
							}
							return !1
					}
					getResolver(e, t=!0) {
							if (validateKey(e),
							void 0 !== e.resolve)
									return e;
							let n, i = this;
							for (; null != i; ) {
									if (n = i.resolvers.get(e),
									null != n)
											return n;
									if (null == i.parent) {
											const n = isRegisterInRequester(e) ? this : i;
											return t ? this.jitRegister(e, n) : null
									}
									i = i.parent
							}
							return null
					}
					has(e, t=!1) {
							return !!this.resolvers.has(e) || !(!t || null == this.parent) && this.parent.has(e, !0)
					}
					get(e) {
							if (validateKey(e),
							e.$isResolver)
									return e.resolve(this, this);
							let t, n = this;
							for (; null != n; ) {
									if (t = n.resolvers.get(e),
									null != t)
											return t.resolve(n, this);
									if (null == n.parent) {
											const i = isRegisterInRequester(e) ? this : n;
											return t = this.jitRegister(e, i),
											t.resolve(n, this)
									}
									n = n.parent
							}
							throw new Error(`Unable to resolve key: ${e}`)
					}
					getAll(e, t=!1) {
							validateKey(e);
							const n = this;
							let i, r = n;
							if (t) {
									let t = l;
									for (; null != r; )
											i = r.resolvers.get(e),
											null != i && (t = t.concat(buildAllResponse(i, r, n))),
											r = r.parent;
									return t
							}
							for (; null != r; ) {
									if (i = r.resolvers.get(e),
									null != i)
											return buildAllResponse(i, r, n);
									if (r = r.parent,
									null == r)
											return l
							}
							return l
					}
					getFactory(e) {
							let t = z.get(e);
							if (void 0 === t) {
									if (j(e))
											throw new Error(`${e.name} is a native function and therefore cannot be safely constructed by DI. If this is intentional, please use a callback or cachedCallback resolver.`);
									z.set(e, t = new FactoryImpl(e,P.getDependencies(e)))
							}
							return t
					}
					registerFactory(e, t) {
							z.set(e, t)
					}
					createChild(e) {
							return new ContainerImpl(null,Object.assign({}, this.config, e, {
									parentLocator: ()=>this
							}))
					}
					jitRegister(e, t) {
							if ("function" != typeof e)
									throw new Error(`Attempted to jitRegister something that is not a constructor: '${e}'. Did you forget to register this dependency?`);
							if (G.has(e.name))
									throw new Error(`Attempted to jitRegister an intrinsic type: ${e.name}. Did you forget to add @inject(Key)`);
							if (isRegistry(e)) {
									const n = e.register(t);
									if (!(n instanceof Object) || null == n.resolve) {
											const n = t.resolvers.get(e);
											if (null != n)
													return n;
											throw new Error("A valid resolver was not returned from the static register method")
									}
									return n
							}
							if (e.$isInterface)
									throw new Error(`Attempted to jitRegister an interface: ${e.friendlyName}`);
							{
									const n = this.config.defaultResolver(e, t);
									return t.resolvers.set(e, n),
									n
							}
					}
			}
			const V = new WeakMap;
			function cacheCallbackResult(e) {
					return function(t, n, i) {
							if (V.has(i))
									return V.get(i);
							const r = e(t, n, i);
							return V.set(i, r),
							r
					}
			}
			const H = Object.freeze({
					instance: (e,t)=>new ResolverImpl(e,0,t),
					singleton: (e,t)=>new ResolverImpl(e,1,t),
					transient: (e,t)=>new ResolverImpl(e,2,t),
					callback: (e,t)=>new ResolverImpl(e,3,t),
					cachedCallback: (e,t)=>new ResolverImpl(e,3,cacheCallbackResult(t)),
					aliasTo: (e,t)=>new ResolverImpl(t,5,e)
			});
			function validateKey(e) {
					if (null == e)
							throw new Error("key/value cannot be null or undefined. Are you trying to inject/register something that doesn't exist with DI?")
			}
			function buildAllResponse(e, t, n) {
					if (e instanceof ResolverImpl && 4 === e.strategy) {
							const i = e.state;
							let r = i.length;
							const o = new Array(r);
							for (; r--; )
									o[r] = i[r].resolve(t, n);
							return o
					}
					return [e.resolve(t, n)]
			}
			const q = "(anonymous)";
			function isObject(e) {
					return "object" == typeof e && null !== e || "function" == typeof e
			}
			const j = function() {
					const e = new WeakMap;
					let t = !1
						, n = ""
						, i = 0;
					return function(r) {
							return t = e.get(r),
							void 0 === t && (n = r.toString(),
							i = n.length,
							t = i >= 29 && i <= 100 && 125 === n.charCodeAt(i - 1) && n.charCodeAt(i - 2) <= 32 && 93 === n.charCodeAt(i - 3) && 101 === n.charCodeAt(i - 4) && 100 === n.charCodeAt(i - 5) && 111 === n.charCodeAt(i - 6) && 99 === n.charCodeAt(i - 7) && 32 === n.charCodeAt(i - 8) && 101 === n.charCodeAt(i - 9) && 118 === n.charCodeAt(i - 10) && 105 === n.charCodeAt(i - 11) && 116 === n.charCodeAt(i - 12) && 97 === n.charCodeAt(i - 13) && 110 === n.charCodeAt(i - 14) && 88 === n.charCodeAt(i - 15),
							e.set(r, t)),
							t
					}
			}()
				, W = {};
			function isArrayIndex(e) {
					switch (typeof e) {
					case "number":
							return e >= 0 && (0 | e) === e;
					case "string":
							{
									const t = W[e];
									if (void 0 !== t)
											return t;
									const n = e.length;
									if (0 === n)
											return W[e] = !1;
									let i = 0;
									for (let t = 0; t < n; ++t)
											if (i = e.charCodeAt(t),
											0 === t && 48 === i && n > 1 || i < 48 || i > 57)
													return W[e] = !1;
									return W[e] = !0
							}
					default:
							return !1
					}
			}
			const Y = P.createInterface();
			function __decorate(e, t, n, i) {
					var r, o = arguments.length, s = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
					if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
							s = Reflect.decorate(e, t, n, i);
					else
							for (var a = e.length - 1; a >= 0; a--)
									(r = e[a]) && (s = (o < 3 ? r(s) : o > 3 ? r(t, n, s) : r(t, n)) || s);
					return o > 3 && s && Object.defineProperty(t, n, s),
					s
			}
			function __param(e, t) {
					return function(n, i) {
							t(n, i, e)
					}
			}
			function __metadata(e, t) {
					if ("object" == typeof Reflect && "function" == typeof Reflect.metadata)
							return Reflect.metadata(e, t)
			}
			Object.create;
			var K;
			Object.create;
			function __classPrivateFieldGet(e, t, n, i) {
					if ("a" === n && !i)
							throw new TypeError("Private accessor was defined without a getter");
					if ("function" == typeof t ? e !== t || !i : !t.has(e))
							throw new TypeError("Cannot read private member from an object whose class did not declare it");
					return "m" === n ? i : "a" === n ? i.call(e) : i ? i.value : t.get(e)
			}
			function __classPrivateFieldSet(e, t, n, i, r) {
					if ("m" === i)
							throw new TypeError("Private method is not writable");
					if ("a" === i && !r)
							throw new TypeError("Private accessor was defined without a setter");
					if ("function" == typeof t ? e !== t || !r : !t.has(e))
							throw new TypeError("Cannot write private member to an object whose class did not declare it");
					return "a" === i ? r.call(e, n) : r ? r.value = n : t.set(e, n),
					n
			}
			function functional_once(e) {
					const t = this;
					let n, i = !1;
					return function() {
							return i || (i = !0,
							n = e.apply(t, arguments)),
							n
					}
			}
			(function(e) {
					function is(e) {
							return e && "object" == typeof e && "function" == typeof e[Symbol.iterator]
					}
					e.is = is;
					const t = Object.freeze([]);
					function *single(e) {
							yield e
					}
					e.empty = function() {
							return t
					}
					,
					e.single = single,
					e.wrap = function(e) {
							return is(e) ? e : single(e)
					}
					,
					e.from = function(e) {
							return e || t
					}
					,
					e.isEmpty = function(e) {
							return !e || !0 === e[Symbol.iterator]().next().done
					}
					,
					e.first = function(e) {
							return e[Symbol.iterator]().next().value
					}
					,
					e.some = function(e, t) {
							for (const n of e)
									if (t(n))
											return !0;
							return !1
					}
					,
					e.find = function(e, t) {
							for (const n of e)
									if (t(n))
											return n
					}
					,
					e.filter = function*(e, t) {
							for (const n of e)
									t(n) && (yield n)
					}
					,
					e.map = function*(e, t) {
							let n = 0;
							for (const i of e)
									yield t(i, n++)
					}
					,
					e.concat = function*(...e) {
							for (const t of e)
									for (const e of t)
											yield e
					}
					,
					e.reduce = function(e, t, n) {
							let i = n;
							for (const n of e)
									i = t(i, n);
							return i
					}
					,
					e.slice = function*(e, t, n=e.length) {
							for (t < 0 && (t += e.length),
							n < 0 ? n += e.length : n > e.length && (n = e.length); t < n; t++)
									yield e[t]
					}
					,
					e.consume = function(t, n=Number.POSITIVE_INFINITY) {
							const i = [];
							if (0 === n)
									return [i, t];
							const r = t[Symbol.iterator]();
							for (let t = 0; t < n; t++) {
									const t = r.next();
									if (t.done)
											return [i, e.empty()];
									i.push(t.value)
							}
							return [i, {
									[Symbol.iterator]: ()=>r
							}]
					}
			}
			)(K || (K = {}));
			let Q = null;
			var Z, X;
			function trackDisposable(e) {
					return null == Q || Q.trackDisposable(e),
					e
			}
			function markAsDisposed(e) {
					null == Q || Q.markAsDisposed(e)
			}
			function setParentOfDisposable(e, t) {
					null == Q || Q.setParent(e, t)
			}
			function isDisposable(e) {
					return "function" == typeof e.dispose && 0 === e.dispose.length
			}
			function dispose(e) {
					if (K.is(e)) {
							const t = [];
							for (const n of e)
									if (n)
											try {
													n.dispose()
											} catch (e) {
													t.push(e)
											}
							if (1 === t.length)
									throw t[0];
							if (t.length > 1)
									throw new AggregateError(t,"Encountered errors while disposing of store");
							return Array.isArray(e) ? [] : e
					}
					if (e)
							return e.dispose(),
							e
			}
			function combinedDisposable(...e) {
					const t = lifecycle_toDisposable((()=>dispose(e)));
					return function(e, t) {
							if (Q)
									for (const n of e)
											Q.setParent(n, t)
					}(e, t),
					t
			}
			function lifecycle_toDisposable(e) {
					const t = trackDisposable({
							dispose: functional_once((()=>{
									markAsDisposed(t),
									e()
							}
							))
					});
					return t
			}
			class lifecycle_DisposableStore {
					constructor() {
							this._toDispose = new Set,
							this._isDisposed = !1,
							trackDisposable(this)
					}
					dispose() {
							this._isDisposed || (markAsDisposed(this),
							this._isDisposed = !0,
							this.clear())
					}
					get isDisposed() {
							return this._isDisposed
					}
					clear() {
							if (0 !== this._toDispose.size)
									try {
											dispose(this._toDispose)
									} finally {
											this._toDispose.clear()
									}
					}
					add(e) {
							if (!e)
									return e;
							if (e === this)
									throw new Error("Cannot register a disposable on itself!");
							return setParentOfDisposable(e, this),
							this._isDisposed ? lifecycle_DisposableStore.DISABLE_DISPOSED_WARNING || console.warn(new Error("Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!").stack) : this._toDispose.add(e),
							e
					}
			}
			lifecycle_DisposableStore.DISABLE_DISPOSED_WARNING = !1;
			class lifecycle_Disposable {
					constructor() {
							this._store = new lifecycle_DisposableStore,
							trackDisposable(this),
							setParentOfDisposable(this._store, this)
					}
					dispose() {
							markAsDisposed(this),
							this._store.dispose()
					}
					_register(e) {
							if (e === this)
									throw new Error("Cannot register a disposable on itself!");
							const t = isDisposable(e) ? e : lifecycle_toDisposable(e);
							return this._store.add(t),
							e
					}
			}
			lifecycle_Disposable.None = Object.freeze({
					dispose() {}
			});
			class lifecycle_MutableDisposable {
					constructor() {
							this._isDisposed = !1,
							trackDisposable(this)
					}
					get value() {
							return this._isDisposed ? void 0 : this._value
					}
					set value(e) {
							var t;
							this._isDisposed || e === this._value || (null === (t = this._value) || void 0 === t || t.dispose(),
							e && setParentOfDisposable(e, this),
							this._value = e)
					}
					clear() {
							this.value = void 0
					}
					dispose() {
							var e;
							this._isDisposed = !0,
							markAsDisposed(this),
							null === (e = this._value) || void 0 === e || e.dispose(),
							this._value = void 0
					}
					clearAndLeak() {
							const e = this._value;
							return this._value = void 0,
							e && setParentOfDisposable(e, null),
							e
					}
			}
			class SafeDisposable {
					constructor() {
							this.dispose = ()=>{}
							,
							this.unset = ()=>{}
							,
							this.isset = ()=>!1,
							trackDisposable(this)
					}
					set(e) {
							let t = e;
							return this.unset = ()=>t = void 0,
							this.isset = ()=>void 0 !== t,
							this.dispose = ()=>{
									t && (t(),
									t = void 0,
									markAsDisposed(this))
							}
							,
							this
					}
			}
			class DisposableMap {
					constructor() {
							this._store = new Map,
							this._isDisposed = !1,
							trackDisposable(this)
					}
					dispose() {
							markAsDisposed(this),
							this._isDisposed = !0,
							this.clearAndDisposeAll()
					}
					clearAndDisposeAll() {
							if (this._store.size)
									try {
											dispose(this._store.values())
									} finally {
											this._store.clear()
									}
					}
					has(e) {
							return this._store.has(e)
					}
					get(e) {
							return this._store.get(e)
					}
					set(e, t, n=!1) {
							var i;
							this._isDisposed && console.warn(new Error("Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!").stack),
							n || null === this._store.get(e) || void 0 === i || i.dispose(),
							this._store.set(e, t)
					}
					deleteAndDispose(e) {
							var t;
							null === this._store.get(e) || void 0 === t || t.dispose(),
							this._store.delete(e)
					}
					[Symbol.iterator]() {
							return this._store[Symbol.iterator]()
					}
			}
			class Disposer extends lifecycle_Disposable {
					get isDisposed() {
							return this._store.isDisposed
					}
					register(e) {
							return this._register(e)
					}
			}
			const {instance: J, singleton: ee, transient: te, aliasTo: ne} = H;
			class AppService extends lifecycle_Disposable {
					constructor() {
							super(),
							Z.set(this, void 0),
							X.set(this, new WeakMap),
							__classPrivateFieldSet(this, Z, this.buildServicesContainer(), "f")
					}
					getElementContainer(e) {
							let t = __classPrivateFieldGet(this, X, "f").get(e);
							return void 0 === t && (t = __classPrivateFieldGet(this, Z, "f").createChild(),
							__classPrivateFieldGet(this, X, "f").set(e, t)),
							t
					}
					get(e) {
							return __classPrivateFieldGet(this, Z, "f").get(e)
					}
					addSingleton(e, t) {
							__classPrivateFieldGet(this, Z, "f").register(ee(e, t))
					}
					addTransient(e, t) {
							__classPrivateFieldGet(this, Z, "f").register(te(e, t))
					}
					addAlias(e, t) {
							__classPrivateFieldGet(this, Z, "f").register(ne(e, t))
					}
					addInstance(e, t) {
							__classPrivateFieldGet(this, Z, "f").register(J(e, t))
					}
					buildServicesContainer() {
							return P.getOrCreateDOMContainer(document.body)
					}
			}
			Z = new WeakMap,
			X = new WeakMap;
			const ie = P.createInterface();
			var re;
			(function(e) {
					e.AccessTokenHash = "at_hash",
					e.AccessTokenMaxUses = "at_use_nbr",
					e.Actor = "act",
					e.Address = "address",
					e.Audience = "aud",
					e.AuthenticationContextClassReference = "acr",
					e.AuthenticationMethod = "amr",
					e.AuthorizedActor = "may_act",
					e.AuthorizedParty = "azp",
					e.AuthenticationTime = "auth_time",
					e.BirthDate = "birthdate",
					e.ClientId = "client_id",
					e.AuthorizationCodeHash = "c_hash",
					e.Confirmation = "cnf",
					e.DestinationId = "dest",
					e.DivertedTarget = "div",
					e.Email = "email",
					e.EmailVerified = "email_verified",
					e.Expiration = "exp",
					e.FirstName = "given_name",
					e.GivenName = "given_name",
					e.Gender = "gender",
					e.IssuedAt = "iat",
					e.Issuer = "iss",
					e.JCard = "jcard",
					e.JwtId = "jti",
					e.LastName = "family_name",
					e.FamilyName = "family_name",
					e.Locale = "locale",
					e.MediaKeyFingerprint = "mky",
					e.MiddleName = "middle_name",
					e.Name = "name",
					e.NickName = "nickname",
					e.Nonce = "nonce",
					e.NotBefore = "nbf",
					e.OriginalPASSporT = "opt",
					e.OriginatingId = "orig",
					e.PhoneNumber = "phone_number",
					e.PhoneNumberVerified = "phone_number_verified",
					e.PreferredUsername = "preferred_username",
					e.Profile = "profile",
					e.Picture = "picture",
					e.ResourcePriorityHeader = "rph",
					e.Scope = "scope",
					e.SecurityEvents = "events",
					e.SelfIssuedOidProviderPublicKey = "sub_jwk",
					e.SessionId = "sid",
					e.ShakenAttestationLevel = "attest",
					e.ShakenOriginatingId = "origid",
					e.SipCallId = "sip_callid",
					e.SipCSeqNum = "sip_cseq_num",
					e.SipDate = "sip_date",
					e.SipFromTag = "sip_from_tag",
					e.SipViaBranch = "sip_via_branch",
					e.Subject = "sub",
					e.TimeofEvent = "toe",
					e.TimeZone = "zoneinfo",
					e.ZoneInfo = "zoneinfo",
					e.TransactionId = "txn",
					e.UpdatedAt = "updated_at",
					e.VectorOfTrust = "vot",
					e.VectorOfTrustTrustmarkUrl = "vtm",
					e.VerifiableCredential = "vc",
					e.VerifiablePresentation = "vp",
					e.Website = "website",
					e.Id = "id",
					e.Secret = "secret",
					e.IdentityProvider = "idp",
					e.Role = "role",
					e.ObjectId = "oid",
					e.TenantId = "tid"
			}
			)(re || (re = {}));
			const oe = new Map([["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier", re.Subject], ["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress", re.Email], ["http://schemas.microsoft.com/identity/claims/objectidentifier", re.ObjectId], ["http://schemas.microsoft.com/identity/claims/tenantid", re.TenantId]]);
			var se;
			(function(e) {
					e.shortClaimType = function(e) {
							var t;
							return e.startsWith("http://") && null !== (t = oe.get(e)) && void 0 !== t ? t : e
					}
			}
			)(se || (se = {}));
			Object.freeze(["exp", "iat", "nbf"]);
			var ae, le, ce, de, pe, ue, he, me, ge, _e, fe, ye, ve, be, Se, Ce, Ee, Te, Ie, we, Ae, Re;
			(function(e) {
					e.HttpLocalhost7071V0 = "http://localhost:7071/v0",
					e.HttpsProteusAzureApiNetTestV0 = "https://proteus.azure-api.net/test/v0",
					e.HttpsProteusAzureApiNetV0 = "https://proteus.azure-api.net/v0"
			}
			)(ae || (ae = {})),
			function(e) {
					e.Trace = "Trace",
					e.Debug = "Debug",
					e.Info = "Info",
					e.Warning = "Warning",
					e.Error = "Error",
					e.Critical = "Critical",
					e.Off = "Off"
			}(le || (le = {})),
			function(e) {
					e.Include = "Include",
					e.Exclude = "Exclude"
			}(ce || (ce = {})),
			function(e) {
					e.Scroll = "Scroll",
					e.ScaleToFit = "ScaleToFit"
			}(de || (de = {})),
			function(e) {
					e.Upright = "Upright",
					e.Right = "Right",
					e.Flipped = "Flipped",
					e.Left = "Left"
			}(pe || (pe = {})),
			function(e) {
					e.Single = "Single",
					e.DualBoth = "DualBoth",
					e.DualPrimary = "DualPrimary",
					e.DualSecondary = "DualSecondary",
					e.Tiled = "Tiled"
			}(ue || (ue = {})),
			function(e) {
					e.Image = "Image",
					e.Color = "Color",
					e.GenericComponent = "GenericComponent"
			}(he || (he = {})),
			function(e) {
					e.Image = "Image",
					e.Color = "Color",
					e.Timeline = "Timeline"
			}(me || (me = {})),
			function(e) {
					e[e.Zero = 0] = "Zero",
					e[e.One = 1] = "One"
			}(ge || (ge = {})),
			function(e) {
					e.TextBlock = "TextBlock",
					e.RichTextBlock = "RichTextBlock",
					e.TextRun = "TextRun"
			}(_e || (_e = {})),
			function(e) {
					e[e.ChatResponse = 0] = "ChatResponse",
					e[e.GetMessagesResponse = 1] = "GetMessagesResponse",
					e[e.GetConversationResponse = 2] = "GetConversationResponse",
					e[e.GetSharedMessagesResponse = 3] = "GetSharedMessagesResponse",
					e[e.SerpCachedResponse = 4] = "SerpCachedResponse"
			}(fe || (fe = {})),
			function(e) {
					e.Success = "Success",
					e.InternalError = "InternalError",
					e.InvalidRequest = "InvalidRequest",
					e.InvalidSession = "InvalidSession",
					e.ProcessingMessage = "ProcessingMessage",
					e.TooManyRequests = "TooManyRequests",
					e.NoContent = "NoContent",
					e.UnauthorizedRequest = "UnauthorizedRequest",
					e.InternalServerError = "InternalServerError",
					e.Throttled = "Throttled"
			}(ye || (ye = {})),
			function(e) {
					e.Bot = "bot",
					e.User = "user"
			}(ve || (ve = {})),
			function(e) {
					e.AnnRules = "AnnRules",
					e.Apology = "Apology",
					e.BingContent = "Bing Content",
					e.Chitchat = "Chitchat",
					e.NluDirectResponse = "NluDirectResponse",
					e.Qna = "Qna",
					e.TopicChanger = "TopicChanger",
					e.Delighterdluni = "Delighterdluni",
					e.DeepLeo = "DeepLeo"
			}(be || (be = {})),
			function(e) {
					e.None = "None",
					e.Positive = "Positive",
					e.Negative = "Negative",
					e.Laugh = "Laugh",
					e.Surprised = "Surprised",
					e.UnknownBf = "UnknownBf"
			}(Se || (Se = {})),
			function(e) {
					e.Keyboard = "Keyboard",
					e.Speech = "Speech"
			}(Ce || (Ce = {})),
			function(e) {
					e.Ads = "Ads",
					e.AdsQuery = "AdsQuery",
					e.Chat = "Chat",
					e.SearchQuery = "SearchQuery",
					e.Internal = "Internal",
					e.Suggestion = "Suggestion",
					e.InternalSearchQuery = "InternalSearchQuery",
					e.InternalSearchResult = "InternalSearchResult",
					e.InternalActionMarker = "InternalActionMarker",
					e.InternalStateMarker = "InternalStateMarker",
					e.InternalLoaderMessage = "InternalLoaderMessage",
					e.RenderCardRequest = "RenderCardRequest",
					e.SemanticSerp = "SemanticSerp",
					e.Any = "Any"
			}(Ee || (Ee = {})),
			function(e) {
					e.IncomingBotResponse = void 0
			}(Ee || (Ee = {})),
			function(e) {
					e.Blank = "BLANK",
					e.BingFrontPageSkill = "BING_FRONT_PAGE_SKILL",
					e.BingSkill = "BING_SKILL",
					e.Chitchat = "CHITCHAT",
					e.Infoseeking = "INFOSEEKING",
					e.InitialBingFrontPageSkill = "INITIAL_BING_FRONT_PAGE_SKILL",
					e.InitialQNA = "INITIAL_QNA",
					e.InitialVideos = "INITIAL_VIDEOS",
					e.InitialWebpages = "INITIAL_WEBPAGES",
					e.MedicalHealth = "MEDICAL_HEALTH",
					e.MicrosoftBrands = "MICROSOFT_BRANDS",
					e.NeedEmpathy = "NEED_EMPATHY",
					e.Offensive = "OFFENSIVE",
					e.OpinionGiving = "OPINION_GIVING",
					e.OpinionSeeking = "OPINION_SEEKING",
					e.OUTOFDomain = "OUT_OF_DOMAIN",
					e.QNA = "QNA",
					e.SettingsChange = "SETTINGS_CHANGE",
					e.SettingsCheck = "SETTINGS_CHECK",
					e.SuicideHelp = "SUICIDE_HELP",
					e.TuringBOTSafe = "TURING_BOT_SAFE",
					e.Unhandled = "UNHANDLED",
					e.Videos = "VIDEOS",
					e.Webpages = "WEBPAGES"
			}(Te || (Te = {})),
			function(e) {
					e.Amount = "AMOUNT",
					e.Setting = "SETTING",
					e.Type = "TYPE",
					e.Unknown = "UNKNOWN",
					e.Unit = "UNIT",
					e.Value = "VALUE"
			}(Ie || (Ie = {})),
			function(e) {
					e.Unknown = "Unknown",
					e.None = "None",
					e.Offensive = "Offensive",
					e.OffenseTrigger = "OffenseTrigger",
					e.OffenseResponse = "OffenseResponse",
					e.Blocklist = "Blocklist"
			}(we || (we = {})),
			function(e) {
					e.Finished = "FINISHED",
					e.Intermediate = "INTERMEDIATE"
			}(Ae || (Ae = {})),
			function(e) {
					e.General = "General",
					e.Internal = "Internal"
			}(Re || (Re = {}));
			class AdsMessage {
					constructor(e, t, n) {
							this.messageType = Ee.Ads,
							this.author = ve.Bot,
							this.contentOrigin = "search ads",
							this.adsQueryId = e,
							this.description = n,
							this.adsInfo = t
					}
			}
			var xe;
			__webpack_require__(7659);
			(function(e) {
					e[e.Proteus = 0] = "Proteus",
					e[e.OpenAI = 1] = "OpenAI",
					e[e.Sydney = 2] = "Sydney",
					e[e.WebSearch = 3] = "WebSearch",
					e[e.Bing = 4] = "Bing"
			}
			)(xe || (xe = {}));
			var tslib_es6_extendStatics = function(e, t) {
					return tslib_es6_extendStatics = Object.setPrototypeOf || {
							__proto__: []
					}instanceof Array && function(e, t) {
							e.__proto__ = t
					}
					|| function(e, t) {
							for (var n in t)
									t.hasOwnProperty(n) && (e[n] = t[n])
					}
					,
					tslib_es6_extendStatics(e, t)
			};
			function tslib_es6_extends(e, t) {
					function __() {
							this.constructor = e
					}
					tslib_es6_extendStatics(e, t),
					e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
					new __)
			}
			var Oe, tslib_es6_assign = function() {
					return tslib_es6_assign = Object.assign || function(e) {
							for (var t, n = 1, i = arguments.length; n < i; n++)
									for (var r in t = arguments[n])
											Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
							return e
					}
					,
					tslib_es6_assign.apply(this, arguments)
			};
			function tslib_es6_decorate(e, t, n, i) {
					var r, o = arguments.length, s = o < 3 ? t : null === i ? i = Object.getOwnPropertyDescriptor(t, n) : i;
					if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
							s = Reflect.decorate(e, t, n, i);
					else
							for (var a = e.length - 1; a >= 0; a--)
									(r = e[a]) && (s = (o < 3 ? r(s) : o > 3 ? r(t, n, s) : r(t, n)) || s);
					return o > 3 && s && Object.defineProperty(t, n, s),
					s
			}
			function tslib_es6_awaiter(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			}
			function tslib_es6_generator(e, t) {
					var n, i, r, o, s = {
							label: 0,
							sent: function() {
									if (1 & r[0])
											throw r[1];
									return r[1]
							},
							trys: [],
							ops: []
					};
					return o = {
							next: verb(0),
							throw: verb(1),
							return: verb(2)
					},
					"function" == typeof Symbol && (o[Symbol.iterator] = function() {
							return this
					}
					),
					o;
					function verb(o) {
							return function(a) {
									return function(o) {
											if (n)
													throw new TypeError("Generator is already executing.");
											for (; s; )
													try {
															if (n = 1,
															i && (r = 2 & o[0] ? i.return : o[0] ? i.throw || ((r = i.return) && r.call(i),
															0) : i.next) && !(r = r.call(i, o[1])).done)
																	return r;
															switch (i = 0,
															r && (o = [2 & o[0], r.value]),
															o[0]) {
															case 0:
															case 1:
																	r = o;
																	break;
															case 4:
																	return s.label++,
																	{
																			value: o[1],
																			done: !1
																	};
															case 5:
																	s.label++,
																	i = o[1],
																	o = [0];
																	continue;
															case 7:
																	o = s.ops.pop(),
																	s.trys.pop();
																	continue;
															default:
																	if (!(r = s.trys,
																	(r = r.length > 0 && r[r.length - 1]) || 6 !== o[0] && 2 !== o[0])) {
																			s = 0;
																			continue
																	}
																	if (3 === o[0] && (!r || o[1] > r[0] && o[1] < r[3])) {
																			s.label = o[1];
																			break
																	}
																	if (6 === o[0] && s.label < r[1]) {
																			s.label = r[1],
																			r = o;
																			break
																	}
																	if (r && s.label < r[2]) {
																			s.label = r[2],
																			s.ops.push(o);
																			break
																	}
																	r[2] && s.ops.pop(),
																	s.trys.pop();
																	continue
															}
															o = t.call(e, s)
													} catch (e) {
															o = [6, e],
															i = 0
													} finally {
															n = r = 0
													}
											if (5 & o[0])
													throw o[1];
											return {
													value: o[0] ? o[1] : void 0,
													done: !0
											}
									}([o, a])
							}
					}
			}
			function encodeByteArray(e) {
					for (var t = "", n = 0; n < e.length; n++)
							t += String.fromCharCode(e[n]);
					return btoa(t)
			}
			function decodeString(e) {
					for (var t = atob(e), n = new Uint8Array(t.length), i = 0; i < t.length; i++)
							n[i] = t.charCodeAt(i);
					return n
			}
			var Ne = new Uint8Array(16);
			function rng() {
					if (!Oe && !(Oe = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto)))
							throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
					return Oe(Ne)
			}
			const Pe = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
			const esm_browser_validate = function(e) {
					return "string" == typeof e && Pe.test(e)
			};
			for (var De = [], Me = 0; Me < 256; ++Me)
					De.push((Me + 256).toString(16).substr(1));
			const esm_browser_stringify = function(e) {
					var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
						, n = (De[e[t + 0]] + De[e[t + 1]] + De[e[t + 2]] + De[e[t + 3]] + "-" + De[e[t + 4]] + De[e[t + 5]] + "-" + De[e[t + 6]] + De[e[t + 7]] + "-" + De[e[t + 8]] + De[e[t + 9]] + "-" + De[e[t + 10]] + De[e[t + 11]] + De[e[t + 12]] + De[e[t + 13]] + De[e[t + 14]] + De[e[t + 15]]).toLowerCase();
					if (!esm_browser_validate(n))
							throw TypeError("Stringified UUID is invalid");
					return n
			};
			const esm_browser_v4 = function(e, t, n) {
					var i = (e = e || {}).random || (e.rng || rng)();
					if (i[6] = 15 & i[6] | 64,
					i[8] = 63 & i[8] | 128,
					t) {
							n = n || 0;
							for (var r = 0; r < 16; ++r)
									t[n + r] = i[r];
							return t
					}
					return esm_browser_stringify(i)
			};
			"undefined" != typeof process && !!process.version && !!process.versions && process.versions.node;
			function stripResponse(e) {
					var t = {};
					return t.body = e.bodyAsText,
					t.headers = e.headers,
					t.status = e.status,
					t
			}
			function stripRequest(e) {
					var t = e.clone();
					return t.headers && t.headers.remove("authorization"),
					t
			}
			function generateUuid() {
					return esm_browser_v4()
			}
			function delay(e, t) {
					return new Promise((function(n) {
							return setTimeout((function() {
									return n(t)
							}
							), e)
					}
					))
			}
			var Le = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
			function replaceAll(e, t, n) {
					return e && t ? e.split(t).join(n || "") : e
			}
			var ke = function() {
					function Serializer(e, t) {
							void 0 === e && (e = {}),
							this.modelMappers = e,
							this.isXML = t
					}
					return Serializer.prototype.validateConstraints = function(e, t, n) {
							var failValidation = function(e, i) {
									throw new Error('"' + n + '" with value "' + t + '" should satisfy the constraint "' + e + '": ' + i + ".")
							};
							if (e.constraints && null != t) {
									var i = e.constraints
										, r = i.ExclusiveMaximum
										, o = i.ExclusiveMinimum
										, s = i.InclusiveMaximum
										, a = i.InclusiveMinimum
										, l = i.MaxItems
										, c = i.MaxLength
										, d = i.MinItems
										, p = i.MinLength
										, u = i.MultipleOf
										, h = i.Pattern
										, m = i.UniqueItems;
									if (null != r && t >= r && failValidation("ExclusiveMaximum", r),
									null != o && t <= o && failValidation("ExclusiveMinimum", o),
									null != s && t > s && failValidation("InclusiveMaximum", s),
									null != a && t < a && failValidation("InclusiveMinimum", a),
									null != l && t.length > l && failValidation("MaxItems", l),
									null != c && t.length > c && failValidation("MaxLength", c),
									null != d && t.length < d && failValidation("MinItems", d),
									null != p && t.length < p && failValidation("MinLength", p),
									null != u && t % u != 0 && failValidation("MultipleOf", u),
									h) {
											var g = "string" == typeof h ? new RegExp(h) : h;
											"string" == typeof t && null !== t.match(g) || failValidation("Pattern", h)
									}
									m && t.some((function(e, t, n) {
											return n.indexOf(e) !== t
									}
									)) && failValidation("UniqueItems", m)
							}
					}
					,
					Serializer.prototype.serialize = function(e, t, n) {
							var i = {}
								, r = e.type.name;
							n || (n = e.serializedName),
							null !== r.match(/^Sequence$/gi) && (i = []),
							e.isConstant && (t = e.defaultValue);
							var o = e.required
								, s = e.nullable;
							if (o && s && void 0 === t)
									throw new Error(n + " cannot be undefined.");
							if (o && !s && null == t)
									throw new Error(n + " cannot be null or undefined.");
							if (!o && !1 === s && null === t)
									throw new Error(n + " cannot be null.");
							if (null == t)
									i = t;
							else if (this.validateConstraints(e, t, n),
							null !== r.match(/^any$/gi))
									i = t;
							else if (null !== r.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/gi))
									i = function(e, t, n) {
											if (null != n)
													if (null !== e.match(/^Number$/gi)) {
															if ("number" != typeof n)
																	throw new Error(t + " with value " + n + " must be of type number.")
													} else if (null !== e.match(/^String$/gi)) {
															if ("string" != typeof n.valueOf())
																	throw new Error(t + ' with value "' + n + '" must be of type string.')
													} else if (null !== e.match(/^Uuid$/gi)) {
															if ("string" != typeof n.valueOf() || (r = n,
															!new RegExp("^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$","ig").test(r)))
																	throw new Error(t + ' with value "' + n + '" must be of type string and a valid uuid.')
													} else if (null !== e.match(/^Boolean$/gi)) {
															if ("boolean" != typeof n)
																	throw new Error(t + " with value " + n + " must be of type boolean.")
													} else if (null !== e.match(/^Stream$/gi)) {
															var i = typeof n;
															if (!("string" === i || "function" === i || n instanceof ArrayBuffer || ArrayBuffer.isView(n) || "function" == typeof Blob && n instanceof Blob))
																	throw new Error(t + " must be a string, Blob, ArrayBuffer, ArrayBufferView, or a function returning NodeJS.ReadableStream.")
													}
											var r;
											return n
									}(r, n, t);
							else if (null !== r.match(/^Enum$/gi)) {
									i = function(e, t, n) {
											if (!t)
													throw new Error("Please provide a set of allowedValues to validate " + e + " as an Enum Type.");
											if (!t.some((function(e) {
													return "string" == typeof e.valueOf() ? e.toLowerCase() === n.toLowerCase() : e === n
											}
											)))
													throw new Error(n + " is not a valid value for " + e + ". The valid values are: " + JSON.stringify(t) + ".");
											return n
									}(n, e.type.allowedValues, t)
							} else
									null !== r.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/gi) ? i = function(e, t, n) {
											if (null != t)
													if (null !== e.match(/^Date$/gi)) {
															if (!(t instanceof Date || "string" == typeof t.valueOf() && !isNaN(Date.parse(t))))
																	throw new Error(n + " must be an instanceof Date or a string in ISO8601 format.");
															t = t instanceof Date ? t.toISOString().substring(0, 10) : new Date(t).toISOString().substring(0, 10)
													} else if (null !== e.match(/^DateTime$/gi)) {
															if (!(t instanceof Date || "string" == typeof t.valueOf() && !isNaN(Date.parse(t))))
																	throw new Error(n + " must be an instanceof Date or a string in ISO8601 format.");
															t = t instanceof Date ? t.toISOString() : new Date(t).toISOString()
													} else if (null !== e.match(/^DateTimeRfc1123$/gi)) {
															if (!(t instanceof Date || "string" == typeof t.valueOf() && !isNaN(Date.parse(t))))
																	throw new Error(n + " must be an instanceof Date or a string in RFC-1123 format.");
															t = t instanceof Date ? t.toUTCString() : new Date(t).toUTCString()
													} else if (null !== e.match(/^UnixTime$/gi)) {
															if (!(t instanceof Date || "string" == typeof t.valueOf() && !isNaN(Date.parse(t))))
																	throw new Error(n + " must be an instanceof Date or a string in RFC-1123/ISO8601 format for it to be serialized in UnixTime/Epoch format.");
															t = function(e) {
																	if (!e)
																			return;
																	"string" == typeof e.valueOf() && (e = new Date(e));
																	return Math.floor(e.getTime() / 1e3)
															}(t)
													} else if (null !== e.match(/^TimeSpan$/gi) && !function(e) {
															return Le.test(e)
													}(t))
															throw new Error(n + ' must be a string in ISO 8601 format. Instead was "' + t + '".');
											return t
									}(r, t, n) : null !== r.match(/^ByteArray$/gi) ? i = function(e, t) {
											if (null != t) {
													if (!(t instanceof Uint8Array))
															throw new Error(e + " must be of type Uint8Array.");
													t = encodeByteArray(t)
											}
											return t
									}(n, t) : null !== r.match(/^Base64Url$/gi) ? i = function(e, t) {
											if (null != t) {
													if (!(t instanceof Uint8Array))
															throw new Error(e + " must be of type Uint8Array.");
													t = function(e) {
															if (!e)
																	return;
															if (!(e instanceof Uint8Array))
																	throw new Error("Please provide an input of type Uint8Array for converting to Base64Url.");
															return function(e, t) {
																	var n = e.length;
																	for (; n - 1 >= 0 && e[n - 1] === t; )
																			--n;
																	return e.substr(0, n)
															}(encodeByteArray(e), "=").replace(/\+/g, "-").replace(/\//g, "_")
													}(t)
											}
											return t
									}(n, t) : null !== r.match(/^Sequence$/gi) ? i = function(e, t, n, i) {
											if (!Array.isArray(n))
													throw new Error(i + " must be of type Array.");
											var r = t.type.element;
											if (!r || "object" != typeof r)
													throw new Error('element" metadata for an Array must be defined in the mapper and it must of type "object" in ' + i + ".");
											for (var o = [], s = 0; s < n.length; s++)
													o[s] = e.serialize(r, n[s], i);
											return o
									}(this, e, t, n) : null !== r.match(/^Dictionary$/gi) ? i = function(e, t, n, i) {
											if ("object" != typeof n)
													throw new Error(i + " must be of type object.");
											var r = t.type.value;
											if (!r || "object" != typeof r)
													throw new Error('"value" metadata for a Dictionary must be defined in the mapper and it must of type "object" in ' + i + ".");
											for (var o = {}, s = 0, a = Object.keys(n); s < a.length; s++) {
													var l = a[s];
													o[l] = e.serialize(r, n[l], i + "." + l)
											}
											return o
									}(this, e, t, n) : null !== r.match(/^Composite$/gi) && (i = function(e, t, n, i) {
											var r;
											getPolymorphicDiscriminatorRecursively(e, t) && (t = getPolymorphicMapper(e, t, n, "clientName"));
											if (null != n) {
													for (var o = {}, s = resolveModelProperties(e, t, i), a = 0, l = Object.keys(s); a < l.length; a++) {
															var c = l[a]
																, d = s[c];
															if (!d.readOnly) {
																	var p = void 0
																		, u = o;
																	if (e.isXML)
																			p = d.xmlIsWrapped ? d.xmlName : d.xmlElementName || d.xmlName;
																	else {
																			var h = splitSerializeName(d.serializedName);
																			p = h.pop();
																			for (var m = 0, g = h; m < g.length; m++) {
																					var _ = g[m];
																					null == u[_] && null != n[c] && (u[_] = {}),
																					u = u[_]
																			}
																	}
																	if (null != u) {
																			var f = "" !== d.serializedName ? i + "." + d.serializedName : i
																				, y = n[c]
																				, v = getPolymorphicDiscriminatorRecursively(e, t);
																			v && v.clientName === c && null == y && (y = t.serializedName);
																			var b = e.serialize(d, y, f);
																			void 0 !== b && null != p && (d.xmlIsAttribute ? (u.$ = u.$ || {},
																			u.$[p] = b) : d.xmlIsWrapped ? u[p] = ((r = {})[d.xmlElementName] = b,
																			r) : u[p] = b)
																	}
															}
													}
													var S = t.type.additionalProperties;
													if (S) {
															var C = Object.keys(s)
																, _loop_1 = function(t) {
																	C.every((function(e) {
																			return e !== t
																	}
																	)) && (o[t] = e.serialize(S, n[t], i + '["' + t + '"]'))
															};
															for (var E in n)
																	_loop_1(E)
													}
													return o
											}
											return n
									}(this, e, t, n));
							return i
					}
					,
					Serializer.prototype.deserialize = function(e, t, n) {
							if (null == t)
									return this.isXML && "Sequence" === e.type.name && !e.xmlIsWrapped && (t = []),
									void 0 !== e.defaultValue && (t = e.defaultValue),
									t;
							var i, r = e.type.name;
							return n || (n = e.serializedName),
							null !== r.match(/^Composite$/gi) ? i = function(e, t, n, i) {
									getPolymorphicDiscriminatorRecursively(e, t) && (t = getPolymorphicMapper(e, t, n, "serializedName"));
									for (var r = resolveModelProperties(e, t, i), o = {}, s = [], a = 0, l = Object.keys(r); a < l.length; a++) {
											var c = l[a]
												, d = r[c]
												, p = splitSerializeName(r[c].serializedName);
											s.push(p[0]);
											var u = d.serializedName
												, h = d.xmlName
												, m = d.xmlElementName
												, g = i;
											"" !== u && void 0 !== u && (g = i + "." + u);
											var _ = d.headerCollectionPrefix;
											if (_) {
													for (var f = {}, y = 0, v = Object.keys(n); y < v.length; y++) {
															var b = v[y];
															b.startsWith(_) && (f[b.substring(_.length)] = e.deserialize(d.type.value, n[b], g)),
															s.push(b)
													}
													o[c] = f
											} else if (e.isXML)
													if (d.xmlIsAttribute && n.$)
															o[c] = e.deserialize(d, n.$[h], g);
													else {
															var S = n[m || h || u];
															if (d.xmlIsWrapped)
																	void 0 === (S = (S = n[h]) && S[m]) && (S = []);
															o[c] = e.deserialize(d, S, g)
													}
											else {
													for (var C = void 0, E = n, T = 0, I = p; T < I.length; T++) {
															var w = I[T];
															if (!E)
																	break;
															E = E[w]
													}
													C = E;
													var A = t.type.polymorphicDiscriminator;
													A && c === A.clientName && null == C && (C = t.serializedName);
													var R = void 0;
													if (Array.isArray(n[c]) && "" === r[c].serializedName) {
															C = n[c];
															for (var x = e.deserialize(d, C, g), O = 0, N = Object.entries(o); O < N.length; O++) {
																	var P = N[O]
																		, D = P[0]
																		, M = P[1];
																	x.hasOwnProperty(D) || (x[D] = M)
															}
															o = x
													} else
															void 0 === C && void 0 === d.defaultValue || (R = e.deserialize(d, C, g),
															o[c] = R)
											}
									}
									var L = t.type.additionalProperties;
									if (L) {
											var isAdditionalProperty = function(e) {
													for (var t in r) {
															if (splitSerializeName(r[t].serializedName)[0] === e)
																	return !1
													}
													return !0
											};
											for (var k in n)
													isAdditionalProperty(k) && (o[k] = e.deserialize(L, n[k], i + '["' + k + '"]'))
									} else if (n)
											for (var F = 0, B = Object.keys(n); F < B.length; F++) {
													void 0 !== o[c = B[F]] || s.includes(c) || isSpecialXmlProperty(c) || (o[c] = n[c])
											}
									return o
							}(this, e, t, n) : (this.isXML && null != t.$ && null != t._ && (t = t._),
							null !== r.match(/^Number$/gi) ? (i = parseFloat(t),
							isNaN(i) && (i = t)) : null !== r.match(/^Boolean$/gi) ? i = "true" === t || "false" !== t && t : null !== r.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/gi) ? i = t : null !== r.match(/^(Date|DateTime|DateTimeRfc1123)$/gi) ? i = new Date(t) : null !== r.match(/^UnixTime$/gi) ? i = function(e) {
									if (!e)
											return;
									return new Date(1e3 * e)
							}(t) : null !== r.match(/^ByteArray$/gi) ? i = decodeString(t) : null !== r.match(/^Base64Url$/gi) ? i = function(e) {
									if (!e)
											return;
									if (e && "string" != typeof e.valueOf())
											throw new Error("Please provide an input of type string for converting to Uint8Array");
									return decodeString(e = e.replace(/\-/g, "+").replace(/\_/g, "/"))
							}(t) : null !== r.match(/^Sequence$/gi) ? i = function(e, t, n, i) {
									var r = t.type.element;
									if (!r || "object" != typeof r)
											throw new Error('element" metadata for an Array must be defined in the mapper and it must of type "object" in ' + i);
									if (n) {
											Array.isArray(n) || (n = [n]);
											for (var o = [], s = 0; s < n.length; s++)
													o[s] = e.deserialize(r, n[s], i + "[" + s + "]");
											return o
									}
									return n
							}(this, e, t, n) : null !== r.match(/^Dictionary$/gi) && (i = function(e, t, n, i) {
									var r = t.type.value;
									if (!r || "object" != typeof r)
											throw new Error('"value" metadata for a Dictionary must be defined in the mapper and it must of type "object" in ' + i);
									if (n) {
											for (var o = {}, s = 0, a = Object.keys(n); s < a.length; s++) {
													var l = a[s];
													o[l] = e.deserialize(r, n[l], i)
											}
											return o
									}
									return n
							}(this, e, t, n))),
							e.isConstant && (i = e.defaultValue),
							i
					}
					,
					Serializer
			}();
			function splitSerializeName(e) {
					var t = []
						, n = "";
					if (e)
							for (var i = 0, r = e.split("."); i < r.length; i++) {
									var o = r[i];
									"\\" === o.charAt(o.length - 1) ? n += o.substr(0, o.length - 1) + "." : (n += o,
									t.push(n),
									n = "")
							}
					return t
			}
			function resolveModelProperties(e, t, n) {
					var i = t.type.modelProperties;
					if (!i) {
							var r = t.type.className;
							if (!r)
									throw new Error('Class name for model "' + n + '" is not provided in the mapper "' + JSON.stringify(t, void 0, 2) + '".');
							var o = e.modelMappers[r];
							if (!o)
									throw new Error('mapper() cannot be null or undefined for model "' + r + '".');
							if (!(i = o.type.modelProperties))
									throw new Error('modelProperties cannot be null or undefined in the mapper "' + JSON.stringify(o) + '" of type "' + r + '" for object "' + n + '".')
					}
					return i
			}
			function isSpecialXmlProperty(e) {
					return ["$", "_"].includes(e)
			}
			function getPolymorphicMapper(e, t, n, i) {
					var r = getPolymorphicDiscriminatorRecursively(e, t);
					if (r) {
							var o = r[i];
							if (null != o) {
									var s = n[o];
									if (null != s) {
											var a = t.type.uberParent || t.type.className
												, l = s === a ? s : a + "." + s
												, c = e.modelMappers.discriminators[l];
											c && (t = c)
									}
							}
					}
					return t
			}
			function getPolymorphicDiscriminatorRecursively(e, t) {
					return t.type.polymorphicDiscriminator || getPolymorphicDiscriminatorSafely(e, t.type.uberParent) || getPolymorphicDiscriminatorSafely(e, t.type.className)
			}
			function getPolymorphicDiscriminatorSafely(e, t) {
					return t && e.modelMappers[t] && e.modelMappers[t].type.polymorphicDiscriminator
			}
			var Fe = function(e) {
					for (var t = {}, n = 0, i = e; n < i.length; n++) {
							var r = i[n];
							t[r] = r
					}
					return t
			}(["Base64Url", "Boolean", "ByteArray", "Composite", "Date", "DateTime", "DateTimeRfc1123", "Dictionary", "Enum", "Number", "Object", "Sequence", "String", "Stream", "TimeSpan", "UnixTime"]);
			function isStreamOperation(e) {
					var t = !1;
					for (var n in e.responses) {
							var i = e.responses[n];
							if (i.bodyMapper && i.bodyMapper.type.name === Fe.Stream) {
									t = !0;
									break
							}
					}
					return t
			}
			var Be, Ge, Ue, ze = function(e) {
					function RestError(t, n, i, r, o, s) {
							var a = e.call(this, t) || this;
							return a.code = n,
							a.statusCode = i,
							a.request = r,
							a.response = o,
							a.body = s,
							Object.setPrototypeOf(a, RestError.prototype),
							a
					}
					return tslib_es6_extends(RestError, e),
					RestError.REQUEST_SEND_ERROR = "REQUEST_SEND_ERROR",
					RestError.REQUEST_ABORTED_ERROR = "REQUEST_ABORTED_ERROR",
					RestError.PARSE_ERROR = "PARSE_ERROR",
					RestError
			}(Error), $e = new DOMParser;
			try {
					void 0 !== self.trustedTypes && (Ue = self.trustedTypes.createPolicy("@azure/ms-rest-js#xml.browser", {
							createHTML: function(e) {
									return e
							}
					}))
			} catch (e) {
					console.warn('Could not create trusted types policy "@azure/ms-rest-js#xml.browser"')
			}
			function parseXML(e) {
					var t;
					try {
							var n = $e.parseFromString(null !== (t = null == Ue ? void 0 : Ue.createHTML(e)) && void 0 !== t ? t : e, "application/xml");
							(function(e) {
									if (Ve) {
											var t = e.getElementsByTagNameNS(Ve, "parsererror");
											if (t.length)
													throw new Error(t.item(0).innerHTML)
									}
							}
							)(n);
							var i = domToObject(n.childNodes[0]);
							return Promise.resolve(i)
					} catch (e) {
							return Promise.reject(e)
					}
			}
			var Ve = "";
			try {
					var He = null !== (Be = null == Ue ? void 0 : Ue.createHTML("INVALID")) && void 0 !== Be ? Be : "INVALID";
					Ve = null !== (Ge = $e.parseFromString(He, "text/xml").getElementsByTagName("parsererror")[0].namespaceURI) && void 0 !== Ge ? Ge : ""
			} catch (e) {}
			function domToObject(e) {
					var t = {}
						, n = e.childNodes.length
						, i = e.childNodes[0]
						, r = i && 1 === n && i.nodeType === Node.TEXT_NODE && i.nodeValue || void 0
						, o = function(e) {
							return function(e) {
									return !!e.attributes
							}(e) && e.hasAttributes() ? e : void 0
					}(e);
					if (o) {
							t.$ = {};
							for (var s = 0; s < o.attributes.length; s++) {
									var a = o.attributes[s];
									t.$[a.nodeName] = a.nodeValue
							}
							r && (t._ = r)
					} else
							0 === n ? t = "" : r && (t = r);
					if (!r)
							for (s = 0; s < n; s++) {
									var l = e.childNodes[s];
									if (l.nodeType !== Node.TEXT_NODE) {
											var c = domToObject(l);
											t[l.nodeName] ? Array.isArray(t[l.nodeName]) ? t[l.nodeName].push(c) : t[l.nodeName] = [t[l.nodeName], c] : t[l.nodeName] = c
									}
							}
					return t
			}
			var qe, je = document.implementation.createDocument(null, null, null), We = new XMLSerializer;
			function stringifyXML(e, t) {
					var n = buildNode(e, t && t.rootName || "root")[0];
					return '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>' + We.serializeToString(n)
			}
			function buildAttributes(e) {
					for (var t = [], n = 0, i = Object.keys(e); n < i.length; n++) {
							var r = i[n]
								, o = je.createAttribute(r);
							o.value = e[r].toString(),
							t.push(o)
					}
					return t
			}
			function buildNode(e, t) {
					if ("string" == typeof e || "number" == typeof e || "boolean" == typeof e)
							return (l = je.createElement(t)).textContent = e.toString(),
							[l];
					if (Array.isArray(e)) {
							for (var n = [], i = 0, r = e; i < r.length; i++)
									for (var o = 0, s = buildNode(r[i], t); o < s.length; o++) {
											var a = s[o];
											n.push(a)
									}
							return n
					}
					if ("object" == typeof e) {
							for (var l = je.createElement(t), c = 0, d = Object.keys(e); c < d.length; c++) {
									var p = d[c];
									if ("$" === p)
											for (var u = 0, h = buildAttributes(e[p]); u < h.length; u++) {
													var m = h[u];
													l.attributes.setNamedItem(m)
											}
									else
											for (var g = 0, _ = buildNode(e[p], p); g < _.length; g++) {
													a = _[g];
													l.appendChild(a)
											}
							}
							return [l]
					}
					throw new Error("Illegal value passed to buildObject: " + e)
			}
			(function(e) {
					e[e.OFF = 0] = "OFF",
					e[e.ERROR = 1] = "ERROR",
					e[e.WARNING = 2] = "WARNING",
					e[e.INFO = 3] = "INFO"
			}
			)(qe || (qe = {}));
			var Ye = function() {
					function BaseRequestPolicy(e, t) {
							this._nextPolicy = e,
							this._options = t
					}
					return BaseRequestPolicy.prototype.shouldLog = function(e) {
							return this._options.shouldLog(e)
					}
					,
					BaseRequestPolicy.prototype.log = function(e, t) {
							this._options.log(e, t)
					}
					,
					BaseRequestPolicy
			}()
				, Ke = function() {
					function RequestPolicyOptions(e) {
							this._logger = e
					}
					return RequestPolicyOptions.prototype.shouldLog = function(e) {
							return !!this._logger && e !== qe.OFF && e <= this._logger.minimumLogLevel
					}
					,
					RequestPolicyOptions.prototype.log = function(e, t) {
							this._logger && this.shouldLog(e) && this._logger.log(e, t)
					}
					,
					RequestPolicyOptions
			}();
			function deserializationPolicy(e) {
					return {
							create: function(t, n) {
									return new Xe(t,e,n)
							}
					}
			}
			var Qe = ["application/json", "text/json"]
				, Ze = ["application/xml", "application/atom+xml"]
				, Xe = function(e) {
					function DeserializationPolicy(t, n, i) {
							var r = e.call(this, t, i) || this;
							return r.jsonContentTypes = n && n.json || Qe,
							r.xmlContentTypes = n && n.xml || Ze,
							r
					}
					return tslib_es6_extends(DeserializationPolicy, e),
					DeserializationPolicy.prototype.sendRequest = function(e) {
							return tslib_es6_awaiter(this, void 0, void 0, (function() {
									var t = this;
									return tslib_es6_generator(this, (function(n) {
											return [2, this._nextPolicy.sendRequest(e).then((function(e) {
													return function(e, t, n) {
															return function(e, t, n) {
																	var errorHandler = function(e) {
																			var t = 'Error "' + e + '" occurred while parsing the response body - ' + n.bodyAsText + "."
																				, i = e.code || ze.PARSE_ERROR
																				, r = new ze(t,i,n.status,n.request,n,n.bodyAsText);
																			return Promise.reject(r)
																	};
																	if (!n.request.streamResponseBody && n.bodyAsText) {
																			var i = n.bodyAsText
																				, r = n.headers.get("Content-Type") || ""
																				, o = r ? r.split(";").map((function(e) {
																					return e.toLowerCase()
																			}
																			)) : [];
																			if (0 === o.length || o.some((function(t) {
																					return -1 !== e.indexOf(t)
																			}
																			)))
																					return new Promise((function(e) {
																							n.parsedBody = JSON.parse(i),
																							e(n)
																					}
																					)).catch(errorHandler);
																			if (o.some((function(e) {
																					return -1 !== t.indexOf(e)
																			}
																			)))
																					return parseXML(i).then((function(e) {
																							return n.parsedBody = e,
																							n
																					}
																					)).catch(errorHandler)
																	}
																	return Promise.resolve(n)
															}(e, t, n).then((function(e) {
																	var t = function(e) {
																			var t, n = e.request.shouldDeserialize;
																			t = void 0 === n || ("boolean" == typeof n ? n : n(e));
																			return t
																	}(e);
																	if (t) {
																			var i = e.request.operationSpec;
																			if (i && i.responses) {
																					var r = e.status
																						, o = Object.keys(i.responses)
																						, s = 0 === o.length || 1 === o.length && "default" === o[0]
																						, a = function(e) {
																							var t, n = e.request, i = n.operationSpec;
																							if (i) {
																									var r = n.operationResponseGetter;
																									t = r ? r(i, e) : i.responses[e.status]
																							}
																							return t
																					}(e);
																					if (s ? 200 <= r && r < 300 : !!a) {
																							if (a) {
																									if (a.bodyMapper) {
																											g = e.parsedBody;
																											i.isXML && a.bodyMapper.type.name === Fe.Sequence && (g = "object" == typeof g ? g[a.bodyMapper.xmlElementName] : []);
																											try {
																													e.parsedBody = i.serializer.deserialize(a.bodyMapper, g, "operationRes.parsedBody")
																											} catch (p) {
																													var l = new ze("Error " + p + " occurred in deserializing the responseBody - " + e.bodyAsText);
																													return l.request = stripRequest(e.request),
																													l.response = stripResponse(e),
																													Promise.reject(l)
																											}
																									} else
																											"HEAD" === i.httpMethod && (e.parsedBody = n.status >= 200 && n.status < 300);
																									a.headersMapper && (e.parsedHeaders = i.serializer.deserialize(a.headersMapper, e.headers.rawHeaders(), "operationRes.parsedHeaders"))
																							}
																					} else {
																							var c = i.responses.default;
																							if (c) {
																									var d = isStreamOperation(i) ? "Unexpected status code: " + r : e.bodyAsText
																										, p = new ze(d);
																									p.statusCode = r,
																									p.request = stripRequest(e.request),
																									p.response = stripResponse(e);
																									var u = e.parsedBody;
																									try {
																											if (u) {
																													var h = c.bodyMapper;
																													if (h && "CloudError" === h.serializedName)
																															u.error && (u = u.error),
																															u.code && (p.code = u.code),
																															u.message && (p.message = u.message);
																													else {
																															var m = u;
																															u.error && (m = u.error),
																															p.code = m.code,
																															m.message && (p.message = m.message)
																													}
																													if (h) {
																															var g = u;
																															i.isXML && h.type.name === Fe.Sequence && (g = "object" == typeof u ? u[h.xmlElementName] : []),
																															p.body = i.serializer.deserialize(h, g, "error.body")
																													}
																											}
																									} catch (t) {
																											p.message = 'Error "' + t.message + '" occurred in deserializing the responseBody - "' + e.bodyAsText + '" for the default response.'
																									}
																									return Promise.reject(p)
																							}
																					}
																			}
																	}
																	return Promise.resolve(e)
															}
															))
													}(t.jsonContentTypes, t.xmlContentTypes, e)
											}
											))]
									}
									))
							}
							))
					}
					,
					DeserializationPolicy
			}(Ye);
			class EmptyServiceClientCredentials {
					signRequest(e) {
							return Promise.resolve(e)
					}
			}
			class ProteusRuntimeTokenPolicy {
					constructor(e) {
							this.token = e,
							this.name = "proteusRuntimeTokenPolicy"
					}
					async sendRequest(e, t) {
							const n = new URL(e.url);
							return n.searchParams.set("s", this.token),
							e.url = n.href,
							t(e)
					}
			}
			class ProteusRuntimeTokenPolicyMsRestJs_ProteusRuntimeTokenPolicy extends Ye {
					constructor(e, t, n) {
							super(e, t),
							this.token = n
					}
					sendRequest(e) {
							const t = new URL(e.url);
							return t.searchParams.set("s", this.token),
							e.url = t.href,
							this._nextPolicy.sendRequest(e)
					}
			}
			var Je, et = {
					serializedName: "QueryContext",
					type: {
							name: "Composite",
							className: "QueryContext",
							modelProperties: {
									originalQuery: {
											required: !0,
											serializedName: "originalQuery",
											type: {
													name: "String"
											}
									},
									alteredQuery: {
											readOnly: !0,
											serializedName: "alteredQuery",
											type: {
													name: "String"
											}
									},
									alterationOverrideQuery: {
											readOnly: !0,
											serializedName: "alterationOverrideQuery",
											type: {
													name: "String"
											}
									},
									adultIntent: {
											readOnly: !0,
											serializedName: "adultIntent",
											type: {
													name: "Boolean"
											}
									},
									askUserForLocation: {
											readOnly: !0,
											serializedName: "askUserForLocation",
											type: {
													name: "Boolean"
											}
									},
									isTransactional: {
											readOnly: !0,
											serializedName: "isTransactional",
											type: {
													name: "Boolean"
											}
									}
							}
					}
			}, tt = {
					serializedName: "Web/MetaTag",
					type: {
							name: "Composite",
							className: "WebMetaTag",
							modelProperties: {
									name: {
											readOnly: !0,
											serializedName: "name",
											type: {
													name: "String"
											}
									},
									content: {
											readOnly: !0,
											serializedName: "content",
											type: {
													name: "String"
											}
									}
							}
					}
			}, nt = {
					serializedName: "ResponseBase",
					type: {
							name: "Composite",
							polymorphicDiscriminator: {
									serializedName: "_type",
									clientName: "_type"
							},
							uberParent: "ResponseBase",
							className: "ResponseBase",
							modelProperties: {
									_type: {
											required: !0,
											serializedName: "_type",
											type: {
													name: "String"
											}
									}
							}
					}
			}, it = {
					serializedName: "Identifiable",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "Identifiable",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, nt.type.modelProperties), {
									id: {
											readOnly: !0,
											serializedName: "id",
											type: {
													name: "String"
											}
									}
							})
					}
			}, rt = {
					serializedName: "Response",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "Response",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, it.type.modelProperties), {
									webSearchUrl: {
											readOnly: !0,
											serializedName: "webSearchUrl",
											type: {
													name: "String"
											}
									}
							})
					}
			}, ot = {
					serializedName: "Thing",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "Thing",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, rt.type.modelProperties), {
									name: {
											readOnly: !0,
											serializedName: "name",
											type: {
													name: "String"
											}
									},
									url: {
											readOnly: !0,
											serializedName: "url",
											type: {
													name: "String"
											}
									},
									image: {
											readOnly: !0,
											serializedName: "image",
											type: {
													name: "Composite",
													className: "ImageObject"
											}
									},
									description: {
											readOnly: !0,
											serializedName: "description",
											type: {
													name: "String"
											}
									},
									bingId: {
											readOnly: !0,
											serializedName: "bingId",
											type: {
													name: "String"
											}
									}
							})
					}
			}, st = {
					serializedName: "CreativeWork",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "CreativeWork",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, ot.type.modelProperties), {
									thumbnailUrl: {
											readOnly: !0,
											serializedName: "thumbnailUrl",
											type: {
													name: "String"
											}
									},
									provider: {
											readOnly: !0,
											serializedName: "provider",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Thing"
															}
													}
											}
									},
									text: {
											readOnly: !0,
											serializedName: "text",
											type: {
													name: "String"
											}
									}
							})
					}
			}, at = {
					serializedName: "MediaObject",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "MediaObject",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, st.type.modelProperties), {
									contentUrl: {
											readOnly: !0,
											serializedName: "contentUrl",
											type: {
													name: "String"
											}
									},
									hostPageUrl: {
											readOnly: !0,
											serializedName: "hostPageUrl",
											type: {
													name: "String"
											}
									},
									width: {
											readOnly: !0,
											serializedName: "width",
											type: {
													name: "Number"
											}
									},
									height: {
											readOnly: !0,
											serializedName: "height",
											type: {
													name: "Number"
											}
									}
							})
					}
			}, lt = {
					serializedName: "ImageObject",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "ImageObject",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, at.type.modelProperties), {
									thumbnail: {
											readOnly: !0,
											serializedName: "thumbnail",
											type: {
													name: "Composite",
													className: "ImageObject"
											}
									}
							})
					}
			}, ct = {
					serializedName: "WebPage",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "WebPage",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, st.type.modelProperties), {
									displayUrl: {
											readOnly: !0,
											serializedName: "displayUrl",
											type: {
													name: "String"
											}
									},
									snippet: {
											readOnly: !0,
											serializedName: "snippet",
											type: {
													name: "String"
											}
									},
									deepLinks: {
											readOnly: !0,
											serializedName: "deepLinks",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "WebPage"
															}
													}
											}
									},
									dateLastCrawled: {
											readOnly: !0,
											serializedName: "dateLastCrawled",
											type: {
													name: "String"
											}
									},
									searchTags: {
											readOnly: !0,
											serializedName: "searchTags",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "WebMetaTag"
															}
													}
											}
									},
									primaryImageOfPage: {
											readOnly: !0,
											serializedName: "primaryImageOfPage",
											type: {
													name: "Composite",
													className: "ImageObject"
											}
									}
							})
					}
			}, dt = {
					serializedName: "Answer",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "Answer",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, rt.type.modelProperties), {
									followUpQueries: {
											readOnly: !0,
											serializedName: "followUpQueries",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Query"
															}
													}
											}
									}
							})
					}
			}, pt = {
					serializedName: "SearchResultsAnswer",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "SearchResultsAnswer",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, dt.type.modelProperties), {
									queryContext: {
											readOnly: !0,
											serializedName: "queryContext",
											type: {
													name: "Composite",
													className: "QueryContext"
											}
									},
									totalEstimatedMatches: {
											readOnly: !0,
											serializedName: "totalEstimatedMatches",
											type: {
													name: "Number"
											}
									},
									isFamilyFriendly: {
											readOnly: !0,
											serializedName: "isFamilyFriendly",
											type: {
													name: "Boolean"
											}
									}
							})
					}
			}, ut = {
					serializedName: "Web/WebAnswer",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "WebWebAnswer",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, pt.type.modelProperties), {
									value: {
											required: !0,
											serializedName: "value",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "WebPage"
															}
													}
											}
									},
									someResultsRemoved: {
											readOnly: !0,
											serializedName: "someResultsRemoved",
											type: {
													name: "Boolean"
											}
									}
							})
					}
			}, ht = {
					serializedName: "Query",
					type: {
							name: "Composite",
							className: "Query",
							modelProperties: {
									text: {
											required: !0,
											serializedName: "text",
											type: {
													name: "String"
											}
									},
									displayText: {
											readOnly: !0,
											serializedName: "displayText",
											type: {
													name: "String"
											}
									},
									webSearchUrl: {
											readOnly: !0,
											serializedName: "webSearchUrl",
											type: {
													name: "String"
											}
									},
									searchLink: {
											readOnly: !0,
											serializedName: "searchLink",
											type: {
													name: "String"
											}
									},
									thumbnail: {
											readOnly: !0,
											serializedName: "thumbnail",
											type: {
													name: "Composite",
													className: "ImageObject"
											}
									}
							}
					}
			}, mt = {
					serializedName: "Images",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "Images",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, pt.type.modelProperties), {
									nextOffset: {
											readOnly: !0,
											serializedName: "nextOffset",
											type: {
													name: "Number"
											}
									},
									value: {
											required: !0,
											serializedName: "value",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "ImageObject"
															}
													}
											}
									},
									queryExpansions: {
											readOnly: !0,
											serializedName: "queryExpansions",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Query"
															}
													}
											}
									},
									similarTerms: {
											readOnly: !0,
											serializedName: "similarTerms",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Query"
															}
													}
											}
									},
									relatedSearches: {
											readOnly: !0,
											serializedName: "relatedSearches",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Query"
															}
													}
											}
									}
							})
					}
			}, gt = {
					serializedName: "Article",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "Article",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, st.type.modelProperties), {
									wordCount: {
											readOnly: !0,
											serializedName: "wordCount",
											type: {
													name: "Number"
											}
									}
							})
					}
			}, _t = {
					serializedName: "NewsArticle",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "NewsArticle",
							modelProperties: tslib_es6_assign({}, gt.type.modelProperties)
					}
			}, ft = {
					serializedName: "News",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "News",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, pt.type.modelProperties), {
									value: {
											required: !0,
											serializedName: "value",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "NewsArticle"
															}
													}
											}
									},
									location: {
											readOnly: !0,
											serializedName: "location",
											type: {
													name: "String"
											}
									}
							})
					}
			}, yt = {
					serializedName: "RelatedSearches/RelatedSearchAnswer",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "RelatedSearchesRelatedSearchAnswer",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, pt.type.modelProperties), {
									value: {
											required: !0,
											serializedName: "value",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Query"
															}
													}
											}
									}
							})
					}
			}, vt = {
					serializedName: "SpellSuggestions",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "SpellSuggestions",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, pt.type.modelProperties), {
									value: {
											required: !0,
											serializedName: "value",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Query"
															}
													}
											}
									}
							})
					}
			}, bt = {
					serializedName: "TimeZone/TimeZoneInformation",
					type: {
							name: "Composite",
							className: "TimeZoneTimeZoneInformation",
							modelProperties: {
									location: {
											required: !0,
											serializedName: "location",
											type: {
													name: "String"
											}
									},
									time: {
											required: !0,
											serializedName: "time",
											type: {
													name: "String"
											}
									},
									utcOffset: {
											required: !0,
											serializedName: "utcOffset",
											type: {
													name: "String"
											}
									}
							}
					}
			}, St = {
					serializedName: "TimeZone",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "TimeZone",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, pt.type.modelProperties), {
									primaryCityTime: {
											required: !0,
											serializedName: "primaryCityTime",
											type: {
													name: "Composite",
													className: "TimeZoneTimeZoneInformation"
											}
									},
									otherCityTimes: {
											readOnly: !0,
											serializedName: "otherCityTimes",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "TimeZoneTimeZoneInformation"
															}
													}
											}
									}
							})
					}
			}, Ct = {
					serializedName: "VideoObject",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "VideoObject",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, at.type.modelProperties), {
									motionThumbnailUrl: {
											readOnly: !0,
											serializedName: "motionThumbnailUrl",
											type: {
													name: "String"
											}
									},
									motionThumbnailId: {
											readOnly: !0,
											serializedName: "motionThumbnailId",
											type: {
													name: "String"
											}
									},
									embedHtml: {
											readOnly: !0,
											serializedName: "embedHtml",
											type: {
													name: "String"
											}
									},
									allowHttpsEmbed: {
											readOnly: !0,
											serializedName: "allowHttpsEmbed",
											type: {
													name: "Boolean"
											}
									},
									viewCount: {
											readOnly: !0,
											serializedName: "viewCount",
											type: {
													name: "Number"
											}
									},
									thumbnail: {
											readOnly: !0,
											serializedName: "thumbnail",
											type: {
													name: "Composite",
													className: "ImageObject"
											}
									},
									videoId: {
											readOnly: !0,
											serializedName: "videoId",
											type: {
													name: "String"
											}
									},
									allowMobileEmbed: {
											readOnly: !0,
											serializedName: "allowMobileEmbed",
											type: {
													name: "Boolean"
											}
									},
									isSuperfresh: {
											readOnly: !0,
											serializedName: "isSuperfresh",
											type: {
													name: "Boolean"
											}
									}
							})
					}
			}, Et = {
					serializedName: "Videos",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "Videos",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, pt.type.modelProperties), {
									value: {
											required: !0,
											serializedName: "value",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "VideoObject"
															}
													}
											}
									},
									nextOffset: {
											readOnly: !0,
											serializedName: "nextOffset",
											type: {
													name: "Number"
											}
									},
									queryExpansions: {
											readOnly: !0,
											serializedName: "queryExpansions",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Query"
															}
													}
											}
									},
									relatedSearches: {
											readOnly: !0,
											serializedName: "relatedSearches",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Query"
															}
													}
											}
									}
							})
					}
			}, Tt = {
					serializedName: "Computation",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "Computation",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, dt.type.modelProperties), {
									expression: {
											required: !0,
											serializedName: "expression",
											type: {
													name: "String"
											}
									},
									value: {
											required: !0,
											serializedName: "value",
											type: {
													name: "String"
											}
									}
							})
					}
			}, It = {
					serializedName: "Ranking/RankingItem",
					type: {
							name: "Composite",
							className: "RankingRankingItem",
							modelProperties: {
									answerType: {
											required: !0,
											serializedName: "answerType",
											defaultValue: "WebPages",
											type: {
													name: "String"
											}
									},
									resultIndex: {
											readOnly: !0,
											serializedName: "resultIndex",
											type: {
													name: "Number"
											}
									},
									value: {
											readOnly: !0,
											serializedName: "value",
											type: {
													name: "Composite",
													className: "Identifiable"
											}
									},
									htmlIndex: {
											readOnly: !0,
											serializedName: "htmlIndex",
											type: {
													name: "Number"
											}
									},
									textualIndex: {
											readOnly: !0,
											serializedName: "textualIndex",
											type: {
													name: "Number"
											}
									},
									screenshotIndex: {
											readOnly: !0,
											serializedName: "screenshotIndex",
											type: {
													name: "Number"
											}
									}
							}
					}
			}, wt = {
					serializedName: "Ranking/RankingGroup",
					type: {
							name: "Composite",
							className: "RankingRankingGroup",
							modelProperties: {
									items: {
											required: !0,
											serializedName: "items",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "RankingRankingItem"
															}
													}
											}
									}
							}
					}
			}, At = {
					serializedName: "Ranking/RankingResponse",
					type: {
							name: "Composite",
							className: "RankingRankingResponse",
							modelProperties: {
									pole: {
											readOnly: !0,
											serializedName: "pole",
											type: {
													name: "Composite",
													className: "RankingRankingGroup"
											}
									},
									mainline: {
											readOnly: !0,
											serializedName: "mainline",
											type: {
													name: "Composite",
													className: "RankingRankingGroup"
											}
									},
									sidebar: {
											readOnly: !0,
											serializedName: "sidebar",
											type: {
													name: "Composite",
													className: "RankingRankingGroup"
											}
									}
							}
					}
			}, Rt = {
					serializedName: "SearchResponse",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "SearchResponse",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, rt.type.modelProperties), {
									queryContext: {
											readOnly: !0,
											serializedName: "queryContext",
											type: {
													name: "Composite",
													className: "QueryContext"
											}
									},
									webPages: {
											readOnly: !0,
											serializedName: "webPages",
											type: {
													name: "Composite",
													className: "WebWebAnswer"
											}
									},
									images: {
											readOnly: !0,
											serializedName: "images",
											type: {
													name: "Composite",
													className: "Images"
											}
									},
									news: {
											readOnly: !0,
											serializedName: "news",
											type: {
													name: "Composite",
													className: "News"
											}
									},
									relatedSearches: {
											readOnly: !0,
											serializedName: "relatedSearches",
											type: {
													name: "Composite",
													className: "RelatedSearchesRelatedSearchAnswer"
											}
									},
									spellSuggestions: {
											readOnly: !0,
											serializedName: "spellSuggestions",
											type: {
													name: "Composite",
													className: "SpellSuggestions"
											}
									},
									timeZone: {
											readOnly: !0,
											serializedName: "timeZone",
											type: {
													name: "Composite",
													className: "TimeZone"
											}
									},
									videos: {
											readOnly: !0,
											serializedName: "videos",
											type: {
													name: "Composite",
													className: "Videos"
											}
									},
									computation: {
											readOnly: !0,
											serializedName: "computation",
											type: {
													name: "Composite",
													className: "Computation"
											}
									},
									rankingResponse: {
											readOnly: !0,
											serializedName: "rankingResponse",
											type: {
													name: "Composite",
													className: "RankingRankingResponse"
											}
									}
							})
					}
			}, xt = {
					serializedName: "Places",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "Places",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, pt.type.modelProperties), {
									value: {
											required: !0,
											serializedName: "value",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Thing"
															}
													}
											}
									}
							})
					}
			}, Ot = {
					serializedName: "Error",
					type: {
							name: "Composite",
							className: "ErrorModel",
							modelProperties: {
									code: {
											required: !0,
											serializedName: "code",
											defaultValue: "None",
											type: {
													name: "String"
											}
									},
									subCode: {
											readOnly: !0,
											serializedName: "subCode",
											type: {
													name: "String"
											}
									},
									message: {
											required: !0,
											serializedName: "message",
											type: {
													name: "String"
											}
									},
									moreDetails: {
											readOnly: !0,
											serializedName: "moreDetails",
											type: {
													name: "String"
											}
									},
									parameter: {
											readOnly: !0,
											serializedName: "parameter",
											type: {
													name: "String"
											}
									},
									value: {
											readOnly: !0,
											serializedName: "value",
											type: {
													name: "String"
											}
									}
							}
					}
			}, Nt = {
					serializedName: "ErrorResponse",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "ErrorResponse",
							modelProperties: tslib_es6_assign(tslib_es6_assign({}, rt.type.modelProperties), {
									errors: {
											required: !0,
											serializedName: "errors",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "ErrorModel"
															}
													}
											}
									}
							})
					}
			}, Pt = {
					serializedName: "Intangible",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "Intangible",
							modelProperties: tslib_es6_assign({}, ot.type.modelProperties)
					}
			}, Dt = {
					serializedName: "StructuredValue",
					type: {
							name: "Composite",
							polymorphicDiscriminator: nt.type.polymorphicDiscriminator,
							uberParent: "ResponseBase",
							className: "StructuredValue",
							modelProperties: tslib_es6_assign({}, Pt.type.modelProperties)
					}
			}, Mt = {
					"ResponseBase.ImageObject": lt,
					"ResponseBase.WebPage": ct,
					"ResponseBase.Web/WebAnswer": ut,
					"ResponseBase.Images": mt,
					"ResponseBase.NewsArticle": _t,
					"ResponseBase.News": ft,
					"ResponseBase.RelatedSearches/RelatedSearchAnswer": yt,
					"ResponseBase.SpellSuggestions": vt,
					"ResponseBase.TimeZone": St,
					"ResponseBase.VideoObject": Ct,
					"ResponseBase.Videos": Et,
					"ResponseBase.Computation": Tt,
					"ResponseBase.Identifiable": it,
					"ResponseBase.SearchResponse": Rt,
					"ResponseBase.Response": rt,
					"ResponseBase.Thing": ot,
					"ResponseBase.Places": xt,
					"ResponseBase.SearchResultsAnswer": pt,
					"ResponseBase.Answer": dt,
					"ResponseBase.ErrorResponse": Nt,
					"Web/WebGrouping": {
							serializedName: "Web/WebGrouping",
							type: {
									name: "Composite",
									polymorphicDiscriminator: {
											serializedName: "_type",
											clientName: "_type"
									},
									uberParent: "WebWebGrouping",
									className: "WebWebGrouping",
									modelProperties: {
											webPages: {
													required: !0,
													serializedName: "webPages",
													type: {
															name: "Sequence",
															element: {
																	type: {
																			name: "Composite",
																			className: "WebPage"
																	}
															}
													}
											},
											_type: {
													required: !0,
													serializedName: "_type",
													type: {
															name: "String"
													}
											}
									}
							}
					},
					ResponseBase: nt,
					"ResponseBase.CreativeWork": st,
					"ResponseBase.Intangible": Pt,
					"ResponseBase.MediaObject": at,
					"ResponseBase.Article": gt,
					"ResponseBase.StructuredValue": Dt
			};
			(function(e) {
					e.Csv = ",",
					e.Ssv = " ",
					e.Tsv = "\t",
					e.Pipes = "|",
					e.Multi = "Multi"
			}
			)(Je || (Je = {}));
			var Lt = {
					parameterPath: ["options", "promote"],
					mapper: {
							serializedName: "promote",
							type: {
									name: "Sequence",
									element: {
											type: {
													name: "String"
											}
									}
							}
					},
					collectionFormat: Je.Csv
			}
				, kt = {
					parameterPath: ["options", "responseFilter"],
					mapper: {
							serializedName: "responseFilter",
							type: {
									name: "Sequence",
									element: {
											type: {
													name: "String"
											}
									}
							}
					},
					collectionFormat: Je.Csv
			}
				, Ft = function() {
					function Web(e) {
							this.client = e
					}
					return Web.prototype.search = function(e, t, n) {
							return this.client.sendOperationRequest({
									query: e,
									options: t
							}, Gt, n)
					}
					,
					Web
			}()
				, Bt = new ke(e)
				, Gt = {
					httpMethod: "GET",
					path: "search",
					urlParameters: [{
							parameterPath: "endpoint",
							mapper: {
									required: !0,
									serializedName: "Endpoint",
									defaultValue: "https://api.cognitive.microsoft.com",
									type: {
											name: "String"
									}
							},
							skipEncoding: !0
					}],
					queryParameters: [{
							parameterPath: ["options", "answerCount"],
							mapper: {
									serializedName: "answerCount",
									type: {
											name: "Number"
									}
							}
					}, {
							parameterPath: ["options", "countryCode"],
							mapper: {
									serializedName: "cc",
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: ["options", "count"],
							mapper: {
									serializedName: "count",
									type: {
											name: "Number"
									}
							}
					}, {
							parameterPath: ["options", "freshness"],
							mapper: {
									serializedName: "freshness",
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: ["options", "market"],
							mapper: {
									serializedName: "mkt",
									defaultValue: "en-us",
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: ["options", "offset"],
							mapper: {
									serializedName: "offset",
									type: {
											name: "Number"
									}
							}
					}, Lt, {
							parameterPath: "query",
							mapper: {
									required: !0,
									serializedName: "q",
									type: {
											name: "String"
									}
							}
					}, kt, {
							parameterPath: ["options", "safeSearch"],
							mapper: {
									serializedName: "safeSearch",
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: ["options", "setLang"],
							mapper: {
									serializedName: "setLang",
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: ["options", "textDecorations"],
							mapper: {
									serializedName: "textDecorations",
									type: {
											name: "Boolean"
									}
							}
					}, {
							parameterPath: ["options", "textFormat"],
							mapper: {
									serializedName: "textFormat",
									type: {
											name: "String"
									}
							}
					}],
					headerParameters: [{
							parameterPath: "xBingApisSDK",
							mapper: {
									required: !0,
									isConstant: !0,
									serializedName: "X-BingApis-SDK",
									defaultValue: "true",
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: ["options", "acceptLanguage"],
							mapper: {
									serializedName: "Accept-Language",
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: ["options", "pragma"],
							mapper: {
									serializedName: "Pragma",
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: ["options", "userAgent"],
							mapper: {
									serializedName: "User-Agent",
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: ["options", "clientId"],
							mapper: {
									serializedName: "X-MSEdge-ClientID",
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: ["options", "clientIp"],
							mapper: {
									serializedName: "X-MSEdge-ClientIP",
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: ["options", "location"],
							mapper: {
									serializedName: "X-Search-Location",
									type: {
											name: "String"
									}
							}
					}],
					responses: {
							200: {
									bodyMapper: Rt
							},
							default: {
									bodyMapper: Nt
							}
					},
					serializer: Bt
			};
			function getHeaderKey(e) {
					return e.toLowerCase()
			}
			function isHttpHeadersLike(e) {
					return !(!e || "object" != typeof e) && ("function" == typeof e.rawHeaders && "function" == typeof e.clone && "function" == typeof e.get && "function" == typeof e.set && "function" == typeof e.contains && "function" == typeof e.remove && "function" == typeof e.headersArray && "function" == typeof e.headerValues && "function" == typeof e.headerNames && "function" == typeof e.toJson)
			}
			var Ut = function() {
					function HttpHeaders(e) {
							if (this._headersMap = {},
							e)
									for (var t in e)
											this.set(t, e[t])
					}
					return HttpHeaders.prototype.set = function(e, t) {
							this._headersMap[getHeaderKey(e)] = {
									name: e,
									value: t.toString()
							}
					}
					,
					HttpHeaders.prototype.get = function(e) {
							var t = this._headersMap[getHeaderKey(e)];
							return t ? t.value : void 0
					}
					,
					HttpHeaders.prototype.contains = function(e) {
							return !!this._headersMap[getHeaderKey(e)]
					}
					,
					HttpHeaders.prototype.remove = function(e) {
							var t = this.contains(e);
							return delete this._headersMap[getHeaderKey(e)],
							t
					}
					,
					HttpHeaders.prototype.rawHeaders = function() {
							var e = {};
							for (var t in this._headersMap) {
									var n = this._headersMap[t];
									e[n.name.toLowerCase()] = n.value
							}
							return e
					}
					,
					HttpHeaders.prototype.headersArray = function() {
							var e = [];
							for (var t in this._headersMap)
									e.push(this._headersMap[t]);
							return e
					}
					,
					HttpHeaders.prototype.headerNames = function() {
							for (var e = [], t = this.headersArray(), n = 0; n < t.length; ++n)
									e.push(t[n].name);
							return e
					}
					,
					HttpHeaders.prototype.headerValues = function() {
							for (var e = [], t = this.headersArray(), n = 0; n < t.length; ++n)
									e.push(t[n].value);
							return e
					}
					,
					HttpHeaders.prototype.toJson = function() {
							return this.rawHeaders()
					}
					,
					HttpHeaders.prototype.toString = function() {
							return JSON.stringify(this.toJson())
					}
					,
					HttpHeaders.prototype.clone = function() {
							return new HttpHeaders(this.rawHeaders())
					}
					,
					HttpHeaders
			}()
				, zt = "2.6.4"
				, $t = {
					HttpVerbs: {
							PUT: "PUT",
							GET: "GET",
							DELETE: "DELETE",
							POST: "POST",
							MERGE: "MERGE",
							HEAD: "HEAD",
							PATCH: "PATCH"
					},
					StatusCodes: {
							TooManyRequests: 429
					}
			}
				, Vt = {
					AUTHORIZATION: "authorization",
					AUTHORIZATION_SCHEME: "Bearer",
					RETRY_AFTER: "Retry-After",
					USER_AGENT: "User-Agent"
			};
			function getDefaultUserAgentKey() {
					return "x-ms-command-name"
			}
			var Ht = getDefaultUserAgentKey;
			function getDefaultUserAgentValue() {
					var e, t, n, i = [{
							key: "ms-rest-js",
							value: zt
					}], r = function() {
							var e = self.navigator;
							return [{
									key: "OS",
									value: (e.oscpu || e.platform).replace(" ", "")
							}]
					}();
					return e = i.concat(r),
					void 0 === t && (t = " "),
					void 0 === n && (n = "/"),
					e.map((function(e) {
							var t = e.value ? "" + n + e.value : "";
							return "" + e.key + t
					}
					)).join(t)
			}
			var qt = function(e) {
					function UserAgentPolicy(t, n, i, r) {
							var o = e.call(this, t, n) || this;
							return o._nextPolicy = t,
							o._options = n,
							o.headerKey = i,
							o.headerValue = r,
							o
					}
					return tslib_es6_extends(UserAgentPolicy, e),
					UserAgentPolicy.prototype.sendRequest = function(e) {
							return this.addUserAgentHeader(e),
							this._nextPolicy.sendRequest(e)
					}
					,
					UserAgentPolicy.prototype.addUserAgentHeader = function(e) {
							e.headers || (e.headers = new Ut),
							!e.headers.get(this.headerKey) && this.headerValue && e.headers.set(this.headerKey, this.headerValue)
					}
					,
					UserAgentPolicy
			}(Ye);
			var jt = function() {
					function XhrHttpClient() {}
					return XhrHttpClient.prototype.sendRequest = function(e) {
							var t = new XMLHttpRequest;
							if (e.agentSettings)
									throw new Error("HTTP agent settings not supported in browser environment");
							if (e.proxySettings)
									throw new Error("HTTP proxy is not supported in browser environment");
							var n = e.abortSignal;
							if (n) {
									var listener_1 = function() {
											t.abort()
									};
									n.addEventListener("abort", listener_1),
									t.addEventListener("readystatechange", (function() {
											t.readyState === XMLHttpRequest.DONE && n.removeEventListener("abort", listener_1)
									}
									))
							}
							if (addProgressListener(t.upload, e.onUploadProgress),
							addProgressListener(t, e.onDownloadProgress),
							e.formData) {
									for (var i = e.formData, r = new FormData, appendFormValue = function(e, t) {
											t && t.hasOwnProperty("value") && t.hasOwnProperty("options") ? r.append(e, t.value, t.options) : r.append(e, t)
									}, o = 0, s = Object.keys(i); o < s.length; o++) {
											var a = s[o]
												, l = i[a];
											if (Array.isArray(l))
													for (var c = 0; c < l.length; c++)
															appendFormValue(a, l[c]);
											else
													appendFormValue(a, l)
									}
									e.body = r,
									e.formData = void 0;
									var d = e.headers.get("Content-Type");
									d && -1 !== d.indexOf("multipart/form-data") && e.headers.remove("Content-Type")
							}
							t.open(e.method, e.url),
							t.timeout = e.timeout,
							t.withCredentials = e.withCredentials;
							for (var p = 0, u = e.headers.headersArray(); p < u.length; p++) {
									var h = u[p];
									t.setRequestHeader(h.name, h.value)
							}
							return t.responseType = e.streamResponseBody ? "blob" : "text",
							t.send(void 0 === e.body ? null : e.body),
							e.streamResponseBody ? new Promise((function(n, i) {
									t.addEventListener("readystatechange", (function() {
											if (t.readyState === XMLHttpRequest.HEADERS_RECEIVED) {
													var i = new Promise((function(n, i) {
															t.addEventListener("load", (function() {
																	n(t.response)
															}
															)),
															rejectOnTerminalEvent(e, t, i)
													}
													));
													n({
															request: e,
															status: t.status,
															headers: parseHeaders(t),
															blobBody: i
													})
											}
									}
									)),
									rejectOnTerminalEvent(e, t, i)
							}
							)) : new Promise((function(n, i) {
									t.addEventListener("load", (function() {
											return n({
													request: e,
													status: t.status,
													headers: parseHeaders(t),
													bodyAsText: t.responseText
											})
									}
									)),
									rejectOnTerminalEvent(e, t, i)
							}
							))
					}
					,
					XhrHttpClient
			}();
			function addProgressListener(e, t) {
					t && e.addEventListener("progress", (function(e) {
							return t({
									loadedBytes: e.loaded
							})
					}
					))
			}
			function parseHeaders(e) {
					for (var t = new Ut, n = 0, i = e.getAllResponseHeaders().trim().split(/[\r\n]+/); n < i.length; n++) {
							var r = i[n]
								, o = r.indexOf(":")
								, s = r.slice(0, o)
								, a = r.slice(o + 2);
							t.set(s, a)
					}
					return t
			}
			function rejectOnTerminalEvent(e, t, n) {
					t.addEventListener("error", (function() {
							return n(new ze("Failed to send request to " + e.url,ze.REQUEST_SEND_ERROR,void 0,e))
					}
					)),
					t.addEventListener("abort", (function() {
							return n(new ze("The request was aborted",ze.REQUEST_ABORTED_ERROR,void 0,e))
					}
					)),
					t.addEventListener("timeout", (function() {
							return n(new ze("timeout of " + t.timeout + "ms exceeded",ze.REQUEST_SEND_ERROR,void 0,e))
					}
					))
			}
			function getPathStringFromParameter(e) {
					return getPathStringFromParameterPath(e.parameterPath, e.mapper)
			}
			function getPathStringFromParameterPath(e, t) {
					return "string" == typeof e ? e : Array.isArray(e) ? e.join(".") : t.serializedName
			}
			var Wt = function(e) {
					function ExponentialRetryPolicy(t, n, i, r, o, s) {
							var a = e.call(this, t, n) || this;
							function isNumber(e) {
									return "number" == typeof e
							}
							return a.retryCount = isNumber(i) ? i : 3,
							a.retryInterval = isNumber(r) ? r : 3e4,
							a.minRetryInterval = isNumber(o) ? o : 3e3,
							a.maxRetryInterval = isNumber(s) ? s : 9e4,
							a
					}
					return tslib_es6_extends(ExponentialRetryPolicy, e),
					ExponentialRetryPolicy.prototype.sendRequest = function(e) {
							var t = this;
							return this._nextPolicy.sendRequest(e.clone()).then((function(n) {
									return retry(t, e, n)
							}
							)).catch((function(n) {
									return retry(t, e, n.response, void 0, n)
							}
							))
					}
					,
					ExponentialRetryPolicy
			}(Ye);
			function retry(e, t, n, i, r) {
					i = function(e, t, n) {
							t || (t = {
									retryCount: 0,
									retryInterval: 0
							}),
							n && (t.error && (n.innerError = t.error),
							t.error = n),
							t.retryCount++;
							var i = Math.pow(2, t.retryCount) - 1;
							return i *= .8 * e.retryInterval + Math.floor(Math.random() * (1.2 * e.retryInterval - .8 * e.retryInterval)),
							t.retryInterval = Math.min(e.minRetryInterval + i, e.maxRetryInterval),
							t
					}(e, i, r);
					var o = t.abortSignal && t.abortSignal.aborted;
					if (!o && function(e, t, n) {
							if (null == t || t < 500 && 408 !== t || 501 === t || 505 === t)
									return !1;
							if (!n)
									throw new Error("retryData for the ExponentialRetryPolicyFilter cannot be null.");
							return (n && n.retryCount) < e.retryCount
					}(e, n && n.status, i))
							return delay(i.retryInterval).then((function() {
									return e._nextPolicy.sendRequest(t.clone())
							}
							)).then((function(n) {
									return retry(e, t, n, i, void 0)
							}
							)).catch((function(r) {
									return retry(e, t, n, i, r)
							}
							));
					if (o || r || !n) {
							var s = i.error || new ze("Failed to send the request.",ze.REQUEST_SEND_ERROR,n && n.status,n && n.request,n);
							return Promise.reject(s)
					}
					return Promise.resolve(n)
			}
			var Yt = function(e) {
					function GenerateClientRequestIdPolicy(t, n, i) {
							var r = e.call(this, t, n) || this;
							return r._requestIdHeaderName = i,
							r
					}
					return tslib_es6_extends(GenerateClientRequestIdPolicy, e),
					GenerateClientRequestIdPolicy.prototype.sendRequest = function(e) {
							return e.headers.contains(this._requestIdHeaderName) || e.headers.set(this._requestIdHeaderName, generateUuid()),
							this._nextPolicy.sendRequest(e)
					}
					,
					GenerateClientRequestIdPolicy
			}(Ye)
				, Kt = function() {
					function URLQuery() {
							this._rawQuery = {}
					}
					return URLQuery.prototype.any = function() {
							return Object.keys(this._rawQuery).length > 0
					}
					,
					URLQuery.prototype.set = function(e, t) {
							if (e)
									if (null != t) {
											var n = Array.isArray(t) ? t : t.toString();
											this._rawQuery[e] = n
									} else
											delete this._rawQuery[e]
					}
					,
					URLQuery.prototype.get = function(e) {
							return e ? this._rawQuery[e] : void 0
					}
					,
					URLQuery.prototype.toString = function() {
							var e = "";
							for (var t in this._rawQuery) {
									e && (e += "&");
									var n = this._rawQuery[t];
									if (Array.isArray(n)) {
											for (var i = [], r = 0, o = n; r < o.length; r++) {
													var s = o[r];
													i.push(t + "=" + s)
											}
											e += i.join("&")
									} else
											e += t + "=" + n
							}
							return e
					}
					,
					URLQuery.parse = function(e) {
							var t = new URLQuery;
							if (e) {
									e.startsWith("?") && (e = e.substring(1));
									for (var n = "ParameterName", i = "", r = "", o = 0; o < e.length; ++o) {
											var s = e[o];
											switch (n) {
											case "ParameterName":
													switch (s) {
													case "=":
															n = "ParameterValue";
															break;
													case "&":
															i = "",
															r = "";
															break;
													default:
															i += s
													}
													break;
											case "ParameterValue":
													if ("&" === s)
															t.set(i, r),
															i = "",
															r = "",
															n = "ParameterName";
													else
															r += s;
													break;
											default:
													throw new Error("Unrecognized URLQuery parse state: " + n)
											}
									}
									"ParameterValue" === n && t.set(i, r)
							}
							return t
					}
					,
					URLQuery
			}()
				, Qt = function() {
					function URLBuilder() {}
					return URLBuilder.prototype.setScheme = function(e) {
							e ? this.set(e, "SCHEME") : this._scheme = void 0
					}
					,
					URLBuilder.prototype.getScheme = function() {
							return this._scheme
					}
					,
					URLBuilder.prototype.setHost = function(e) {
							e ? this.set(e, "SCHEME_OR_HOST") : this._host = void 0
					}
					,
					URLBuilder.prototype.getHost = function() {
							return this._host
					}
					,
					URLBuilder.prototype.setPort = function(e) {
							null == e || "" === e ? this._port = void 0 : this.set(e.toString(), "PORT")
					}
					,
					URLBuilder.prototype.getPort = function() {
							return this._port
					}
					,
					URLBuilder.prototype.setPath = function(e) {
							if (e) {
									var t = e.indexOf("://");
									if (-1 !== t) {
											var n = e.lastIndexOf("/", t);
											this.set(-1 === n ? e : e.substr(n + 1), "SCHEME")
									} else
											this.set(e, "PATH")
							} else
									this._path = void 0
					}
					,
					URLBuilder.prototype.appendPath = function(e) {
							if (e) {
									var t = this.getPath();
									t && (t.endsWith("/") || (t += "/"),
									e.startsWith("/") && (e = e.substring(1)),
									e = t + e),
									this.set(e, "PATH")
							}
					}
					,
					URLBuilder.prototype.getPath = function() {
							return this._path
					}
					,
					URLBuilder.prototype.setQuery = function(e) {
							this._query = e ? Kt.parse(e) : void 0
					}
					,
					URLBuilder.prototype.setQueryParameter = function(e, t) {
							e && (this._query || (this._query = new Kt),
							this._query.set(e, t))
					}
					,
					URLBuilder.prototype.getQueryParameterValue = function(e) {
							return this._query ? this._query.get(e) : void 0
					}
					,
					URLBuilder.prototype.getQuery = function() {
							return this._query ? this._query.toString() : void 0
					}
					,
					URLBuilder.prototype.set = function(e, t) {
							for (var n = new Xt(e,t); n.next(); ) {
									var i = n.current();
									if (i)
											switch (i.type) {
											case "SCHEME":
													this._scheme = i.text || void 0;
													break;
											case "HOST":
													this._host = i.text || void 0;
													break;
											case "PORT":
													this._port = i.text || void 0;
													break;
											case "PATH":
													var r = i.text || void 0;
													this._path && "/" !== this._path && "/" === r || (this._path = r);
													break;
											case "QUERY":
													this._query = Kt.parse(i.text);
													break;
											default:
													throw new Error("Unrecognized URLTokenType: " + i.type)
											}
							}
					}
					,
					URLBuilder.prototype.toString = function() {
							var e = "";
							return this._scheme && (e += this._scheme + "://"),
							this._host && (e += this._host),
							this._port && (e += ":" + this._port),
							this._path && (this._path.startsWith("/") || (e += "/"),
							e += this._path),
							this._query && this._query.any() && (e += "?" + this._query.toString()),
							e
					}
					,
					URLBuilder.prototype.replaceAll = function(e, t) {
							e && (this.setScheme(replaceAll(this.getScheme(), e, t)),
							this.setHost(replaceAll(this.getHost(), e, t)),
							this.setPort(replaceAll(this.getPort(), e, t)),
							this.setPath(replaceAll(this.getPath(), e, t)),
							this.setQuery(replaceAll(this.getQuery(), e, t)))
					}
					,
					URLBuilder.parse = function(e) {
							var t = new URLBuilder;
							return t.set(e, "SCHEME_OR_HOST"),
							t
					}
					,
					URLBuilder
			}()
				, Zt = function() {
					function URLToken(e, t) {
							this.text = e,
							this.type = t
					}
					return URLToken.scheme = function(e) {
							return new URLToken(e,"SCHEME")
					}
					,
					URLToken.host = function(e) {
							return new URLToken(e,"HOST")
					}
					,
					URLToken.port = function(e) {
							return new URLToken(e,"PORT")
					}
					,
					URLToken.path = function(e) {
							return new URLToken(e,"PATH")
					}
					,
					URLToken.query = function(e) {
							return new URLToken(e,"QUERY")
					}
					,
					URLToken
			}();
			var Xt = function() {
					function URLTokenizer(e, t) {
							this._text = e,
							this._textLength = e ? e.length : 0,
							this._currentState = null != t ? t : "SCHEME_OR_HOST",
							this._currentIndex = 0
					}
					return URLTokenizer.prototype.current = function() {
							return this._currentToken
					}
					,
					URLTokenizer.prototype.next = function() {
							if (hasCurrentCharacter(this))
									switch (this._currentState) {
									case "SCHEME":
											t = function(e) {
													return readWhile(e, (function(e) {
															return function(e) {
																	var t = e.charCodeAt(0);
																	return 48 <= t && t <= 57 || 65 <= t && t <= 90 || 97 <= t && t <= 122
															}(e)
													}
													))
											}(e = this),
											e._currentToken = Zt.scheme(t),
											hasCurrentCharacter(e) ? e._currentState = "HOST" : e._currentState = "DONE";
											break;
									case "SCHEME_OR_HOST":
											(function(e) {
													var t = readUntilCharacter(e, ":", "/", "?");
													hasCurrentCharacter(e) ? ":" === getCurrentCharacter(e) ? "://" === peekCharacters(e, 3) ? (e._currentToken = Zt.scheme(t),
													e._currentState = "HOST") : (e._currentToken = Zt.host(t),
													e._currentState = "PORT") : (e._currentToken = Zt.host(t),
													"/" === getCurrentCharacter(e) ? e._currentState = "PATH" : e._currentState = "QUERY") : (e._currentToken = Zt.host(t),
													e._currentState = "DONE")
											}
											)(this);
											break;
									case "HOST":
											(function(e) {
													"://" === peekCharacters(e, 3) && nextCharacter(e, 3);
													var t = readUntilCharacter(e, ":", "/", "?");
													e._currentToken = Zt.host(t),
													hasCurrentCharacter(e) ? ":" === getCurrentCharacter(e) ? e._currentState = "PORT" : "/" === getCurrentCharacter(e) ? e._currentState = "PATH" : e._currentState = "QUERY" : e._currentState = "DONE"
											}
											)(this);
											break;
									case "PORT":
											(function(e) {
													":" === getCurrentCharacter(e) && nextCharacter(e);
													var t = readUntilCharacter(e, "/", "?");
													e._currentToken = Zt.port(t),
													hasCurrentCharacter(e) ? "/" === getCurrentCharacter(e) ? e._currentState = "PATH" : e._currentState = "QUERY" : e._currentState = "DONE"
											}
											)(this);
											break;
									case "PATH":
											(function(e) {
													var t = readUntilCharacter(e, "?");
													e._currentToken = Zt.path(t),
													hasCurrentCharacter(e) ? e._currentState = "QUERY" : e._currentState = "DONE"
											}
											)(this);
											break;
									case "QUERY":
											(function(e) {
													"?" === getCurrentCharacter(e) && nextCharacter(e);
													var t = function(e) {
															var t = "";
															e._currentIndex < e._textLength && (t = e._text.substring(e._currentIndex),
															e._currentIndex = e._textLength);
															return t
													}(e);
													e._currentToken = Zt.query(t),
													e._currentState = "DONE"
											}
											)(this);
											break;
									default:
											throw new Error("Unrecognized URLTokenizerState: " + this._currentState)
									}
							else
									this._currentToken = void 0;
							var e, t;
							return !!this._currentToken
					}
					,
					URLTokenizer
			}();
			function hasCurrentCharacter(e) {
					return e._currentIndex < e._textLength
			}
			function getCurrentCharacter(e) {
					return e._text[e._currentIndex]
			}
			function nextCharacter(e, t) {
					hasCurrentCharacter(e) && (t || (t = 1),
					e._currentIndex += t)
			}
			function peekCharacters(e, t) {
					var n = e._currentIndex + t;
					return e._textLength < n && (n = e._textLength),
					e._text.substring(e._currentIndex, n)
			}
			function readWhile(e, t) {
					for (var n = ""; hasCurrentCharacter(e); ) {
							var i = getCurrentCharacter(e);
							if (!t(i))
									break;
							n += i,
							nextCharacter(e)
					}
					return n
			}
			function readUntilCharacter(e) {
					for (var t = [], n = 1; n < arguments.length; n++)
							t[n - 1] = arguments[n];
					return readWhile(e, (function(e) {
							return -1 === t.indexOf(e)
					}
					))
			}
			var Jt = {
					handleRedirects: !0,
					maxRetries: 20
			};
			var en = function(e) {
					function RedirectPolicy(t, n, i) {
							void 0 === i && (i = 20);
							var r = e.call(this, t, n) || this;
							return r.maxRetries = i,
							r
					}
					return tslib_es6_extends(RedirectPolicy, e),
					RedirectPolicy.prototype.sendRequest = function(e) {
							var t = this;
							return this._nextPolicy.sendRequest(e).then((function(e) {
									return handleRedirect(t, e, 0)
							}
							))
					}
					,
					RedirectPolicy
			}(Ye);
			function handleRedirect(e, t, n) {
					var i = t.request
						, r = t.status
						, o = t.headers.get("location");
					if (o && (300 === r || 301 === r && ["GET", "HEAD"].includes(i.method) || 302 === r && ["GET", "POST", "HEAD"].includes(i.method) || 303 === r && "POST" === i.method || 307 === r) && (void 0 !== i.redirectLimit && n < i.redirectLimit || void 0 === i.redirectLimit && n < e.maxRetries)) {
							var s = Qt.parse(i.url);
							return s.setPath(o),
							i.url = s.toString(),
							302 !== r && 303 !== r || "POST" !== i.method || (i.method = "GET",
							delete i.body),
							e._nextPolicy.sendRequest(i).then((function(t) {
									return handleRedirect(e, t, n + 1)
							}
							)).then((function(e) {
									return function(e, t) {
											e.redirected || (e.redirected = !0,
											e.url = t);
											return e
									}(e, i.url)
							}
							))
					}
					return Promise.resolve(t)
			}
			var tn = function(e) {
					function RPRegistrationPolicy(t, n, i) {
							void 0 === i && (i = 30);
							var r = e.call(this, t, n) || this;
							return r._retryTimeout = i,
							r
					}
					return tslib_es6_extends(RPRegistrationPolicy, e),
					RPRegistrationPolicy.prototype.sendRequest = function(e) {
							var t = this;
							return this._nextPolicy.sendRequest(e.clone()).then((function(n) {
									return function(e, t, n) {
											if (409 === n.status) {
													var i = function(e) {
															var t, n;
															if (e) {
																	try {
																			n = JSON.parse(e)
																	} catch (e) {}
																	if (n && n.error && n.error.message && n.error.code && "MissingSubscriptionRegistration" === n.error.code) {
																			var i = n.error.message.match(/.*'(.*)'/i);
																			i && (t = i.pop())
																	}
															}
															return t
													}(n.bodyAsText);
													if (i) {
															var r = function(e) {
																	var t, n = e.match(/.*\/subscriptions\/[a-f0-9-]+\//gi);
																	if (!n || !n[0])
																			throw new Error("Unable to extract subscriptionId from the given url - " + e + ".");
																	t = n[0];
																	return t
															}(t.url);
															return function(e, t, n, i) {
																	var r = t + "providers/" + n + "/register?api-version=2016-02-01"
																		, o = t + "providers/" + n + "?api-version=2016-02-01"
																		, s = getRequestEssentials(i);
																	return s.method = "POST",
																	s.url = r,
																	e._nextPolicy.sendRequest(s).then((function(t) {
																			if (200 !== t.status)
																					throw new Error("Autoregistration of " + n + " failed. Please try registering manually.");
																			return getRegistrationStatus(e, o, i)
																	}
																	))
															}(e, r, i, t).catch((function() {
																	return !1
															}
															)).then((function(i) {
																	return i ? (t.headers.set("x-ms-client-request-id", generateUuid()),
																	e._nextPolicy.sendRequest(t.clone())) : n
															}
															))
													}
											}
											return Promise.resolve(n)
									}(t, e, n)
							}
							))
					}
					,
					RPRegistrationPolicy
			}(Ye);
			function getRequestEssentials(e, t) {
					void 0 === t && (t = !1);
					var n = e.clone();
					return t && (n.url = e.url),
					n.headers.set("x-ms-client-request-id", generateUuid()),
					n.headers.set("Content-Type", "application/json; charset=utf-8"),
					n
			}
			function getRegistrationStatus(e, t, n) {
					var i = getRequestEssentials(n);
					return i.url = t,
					i.method = "GET",
					e._nextPolicy.sendRequest(i).then((function(i) {
							var r = i.parsedBody;
							return !(!i.parsedBody || !r.registrationState || "Registered" !== r.registrationState) || delay(1e3 * e._retryTimeout).then((function() {
									return getRegistrationStatus(e, t, n)
							}
							))
					}
					))
			}
			var nn = function(e) {
					function SigningPolicy(t, n, i) {
							var r = e.call(this, t, n) || this;
							return r.authenticationProvider = i,
							r
					}
					return tslib_es6_extends(SigningPolicy, e),
					SigningPolicy.prototype.signRequest = function(e) {
							return this.authenticationProvider.signRequest(e)
					}
					,
					SigningPolicy.prototype.sendRequest = function(e) {
							var t = this;
							return this.signRequest(e).then((function(e) {
									return t._nextPolicy.sendRequest(e)
							}
							))
					}
					,
					SigningPolicy
			}(Ye);
			var rn = function(e) {
					function SystemErrorRetryPolicy(t, n, i, r, o, s) {
							var a = e.call(this, t, n) || this;
							return a.DEFAULT_CLIENT_RETRY_INTERVAL = 3e4,
							a.DEFAULT_CLIENT_RETRY_COUNT = 3,
							a.DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 9e4,
							a.DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 3e3,
							a.retryCount = "number" == typeof i ? i : a.DEFAULT_CLIENT_RETRY_COUNT,
							a.retryInterval = "number" == typeof r ? r : a.DEFAULT_CLIENT_RETRY_INTERVAL,
							a.minRetryInterval = "number" == typeof o ? o : a.DEFAULT_CLIENT_MIN_RETRY_INTERVAL,
							a.maxRetryInterval = "number" == typeof s ? s : a.DEFAULT_CLIENT_MAX_RETRY_INTERVAL,
							a
					}
					return tslib_es6_extends(SystemErrorRetryPolicy, e),
					SystemErrorRetryPolicy.prototype.sendRequest = function(e) {
							var t = this;
							return this._nextPolicy.sendRequest(e.clone()).catch((function(n) {
									return systemErrorRetryPolicy_retry(t, e, n.response, n)
							}
							))
					}
					,
					SystemErrorRetryPolicy
			}(Ye);
			function systemErrorRetryPolicy_retry(e, t, n, i, r) {
					return tslib_es6_awaiter(this, void 0, void 0, (function() {
							var o;
							return tslib_es6_generator(this, (function(s) {
									switch (s.label) {
									case 0:
											if (r = function(e, t, n) {
													t || (t = {
															retryCount: 0,
															retryInterval: 0
													}),
													n && (t.error && (n.innerError = t.error),
													t.error = n),
													t.retryCount++;
													var i = Math.pow(2, t.retryCount) - 1;
													return i *= .8 * e.retryInterval + Math.floor(Math.random() * (.4 * e.retryInterval)),
													t.retryInterval = Math.min(e.minRetryInterval + i, e.maxRetryInterval),
													t
											}(e, r, i),
											!(i && i.code && function(e, t) {
													if (!t)
															throw new Error("retryData for the SystemErrorRetryPolicyFilter cannot be null.");
													return (t && t.retryCount) < e.retryCount
											}(e, r)) || "ETIMEDOUT" !== i.code && "ESOCKETTIMEDOUT" !== i.code && "ECONNREFUSED" !== i.code && "ECONNRESET" !== i.code && "ENOENT" !== i.code)
													return [3, 5];
											s.label = 1;
									case 1:
											return s.trys.push([1, 3, , 4]),
											[4, delay(r.retryInterval)];
									case 2:
											return s.sent(),
											[2, e._nextPolicy.sendRequest(t.clone())];
									case 3:
											return o = s.sent(),
											[2, systemErrorRetryPolicy_retry(e, t, n, o, r)];
									case 4:
											return [3, 6];
									case 5:
											return i ? [2, Promise.reject(r.error)] : [2, n];
									case 6:
											return [2]
									}
							}
							))
					}
					))
			}
			var on = function() {
					function WebResource(e, t, n, i, r, o, s, a, l, c, d, p, u, h, m) {
							this.streamResponseBody = o,
							this.url = e || "",
							this.method = t || "GET",
							this.headers = isHttpHeadersLike(r) ? r : new Ut(r),
							this.body = n,
							this.query = i,
							this.formData = void 0,
							this.withCredentials = s || !1,
							this.abortSignal = a,
							this.timeout = l || 0,
							this.onUploadProgress = c,
							this.onDownloadProgress = d,
							this.proxySettings = p,
							this.keepAlive = u,
							this.agentSettings = h,
							this.redirectLimit = m
					}
					return WebResource.prototype.validateRequestProperties = function() {
							if (!this.method)
									throw new Error("WebResource.method is required.");
							if (!this.url)
									throw new Error("WebResource.url is required.")
					}
					,
					WebResource.prototype.prepare = function(e) {
							if (!e)
									throw new Error("options object is required");
							if (null == e.method || "string" != typeof e.method.valueOf())
									throw new Error("options.method must be a string.");
							if (e.url && e.pathTemplate)
									throw new Error("options.url and options.pathTemplate are mutually exclusive. Please provide exactly one of them.");
							if (!(null != e.pathTemplate && "string" == typeof e.pathTemplate.valueOf() || null != e.url && "string" == typeof e.url.valueOf()))
									throw new Error("Please provide exactly one of options.pathTemplate or options.url.");
							if (e.url) {
									if ("string" != typeof e.url)
											throw new Error('options.url must be of type "string".');
									this.url = e.url
							}
							if (e.method) {
									var t = ["GET", "PUT", "HEAD", "DELETE", "OPTIONS", "POST", "PATCH", "TRACE"];
									if (-1 === t.indexOf(e.method.toUpperCase()))
											throw new Error('The provided method "' + e.method + '" is invalid. Supported HTTP methods are: ' + JSON.stringify(t))
							}
							if (this.method = e.method.toUpperCase(),
							e.pathTemplate) {
									var n = e.pathTemplate
										, i = e.pathParameters;
									if ("string" != typeof n)
											throw new Error('options.pathTemplate must be of type "string".');
									e.baseUrl || (e.baseUrl = "https://management.azure.com");
									var r = e.baseUrl
										, o = r + (r.endsWith("/") ? "" : "/") + (n.startsWith("/") ? n.slice(1) : n)
										, s = o.match(/({\w*\s*\w*})/gi);
									if (s && s.length) {
											if (!i)
													throw new Error("pathTemplate: " + n + " has been provided. Hence, options.pathParameters must also be provided.");
											s.forEach((function(e) {
													var t = e.slice(1, -1)
														, r = i[t];
													if (null == r || "string" != typeof r && "object" != typeof r)
															throw new Error("pathTemplate: " + n + " contains the path parameter " + t + " however, it is not present in " + i + " - " + JSON.stringify(i, void 0, 2) + '.The value of the path parameter can either be a "string" of the form { ' + t + ': "some sample value" } or it can be an "object" of the form { "' + t + '": { value: "some sample value", skipUrlEncoding: true } }.');
													if ("string" == typeof r.valueOf() && (o = o.replace(e, encodeURIComponent(r))),
													"object" == typeof r.valueOf()) {
															if (!r.value)
																	throw new Error("options.pathParameters[" + t + '] is of type "object" but it does not contain a "value" property.');
															o = r.skipUrlEncoding ? o.replace(e, r.value) : o.replace(e, encodeURIComponent(r.value))
													}
											}
											))
									}
									this.url = o
							}
							if (e.queryParameters) {
									var a = e.queryParameters;
									if ("object" != typeof a)
											throw new Error('options.queryParameters must be of type object. It should be a JSON object of "query-parameter-name" as the key and the "query-parameter-value" as the value. The "query-parameter-value" may be fo type "string" or an "object" of the form { value: "query-parameter-value", skipUrlEncoding: true }.');
									this.url && -1 === this.url.indexOf("?") && (this.url += "?");
									var l = [];
									for (var c in this.query = {},
									a) {
											var d = a[c];
											if (d)
													if ("string" == typeof d)
															l.push(c + "=" + encodeURIComponent(d)),
															this.query[c] = encodeURIComponent(d);
													else if ("object" == typeof d) {
															if (!d.value)
																	throw new Error("options.queryParameters[" + c + '] is of type "object" but it does not contain a "value" property.');
															d.skipUrlEncoding ? (l.push(c + "=" + d.value),
															this.query[c] = d.value) : (l.push(c + "=" + encodeURIComponent(d.value)),
															this.query[c] = encodeURIComponent(d.value))
													}
									}
									this.url += l.join("&")
							}
							if (e.headers)
									for (var p = e.headers, u = 0, h = Object.keys(e.headers); u < h.length; u++) {
											var m = h[u];
											this.headers.set(m, p[m])
									}
							return this.headers.get("accept-language") || this.headers.set("accept-language", "en-US"),
							this.headers.get("x-ms-client-request-id") || e.disableClientRequestId || this.headers.set("x-ms-client-request-id", generateUuid()),
							this.headers.get("Content-Type") || this.headers.set("Content-Type", "application/json; charset=utf-8"),
							this.body = e.body,
							null != e.body && (e.bodyIsStream ? (this.headers.get("Transfer-Encoding") || this.headers.set("Transfer-Encoding", "chunked"),
							"application/octet-stream" !== this.headers.get("Content-Type") && this.headers.set("Content-Type", "application/octet-stream")) : (e.serializationMapper && (this.body = new ke(e.mappers).serialize(e.serializationMapper, e.body, "requestBody")),
							e.disableJsonStringifyOnBody || (this.body = JSON.stringify(e.body)))),
							this.abortSignal = e.abortSignal,
							this.onDownloadProgress = e.onDownloadProgress,
							this.onUploadProgress = e.onUploadProgress,
							this.redirectLimit = e.redirectLimit,
							this.streamResponseBody = e.streamResponseBody,
							this
					}
					,
					WebResource.prototype.clone = function() {
							var e = new WebResource(this.url,this.method,this.body,this.query,this.headers && this.headers.clone(),this.streamResponseBody,this.withCredentials,this.abortSignal,this.timeout,this.onUploadProgress,this.onDownloadProgress,this.proxySettings,this.keepAlive,this.agentSettings,this.redirectLimit);
							return this.formData && (e.formData = this.formData),
							this.operationSpec && (e.operationSpec = this.operationSpec),
							this.shouldDeserialize && (e.shouldDeserialize = this.shouldDeserialize),
							this.operationResponseGetter && (e.operationResponseGetter = this.operationResponseGetter),
							e
					}
					,
					WebResource
			}()
				, sn = new Error("AgentPolicy is not supported in browser environment");
			(function(e) {
					function AgentPolicy(t, n) {
							e.call(this, t, n);
							throw sn
					}
					tslib_es6_extends(AgentPolicy, e),
					AgentPolicy.prototype.sendRequest = function(e) {
							throw sn
					}
			}
			)(Ye);
			var an = new Error("ProxyPolicy is not supported in browser environment");
			(function(e) {
					function ProxyPolicy(t, n) {
							e.call(this, t, n);
							throw an
					}
					tslib_es6_extends(ProxyPolicy, e),
					ProxyPolicy.prototype.sendRequest = function(e) {
							throw an
					}
			}
			)(Ye);
			var ln = $t.StatusCodes;
			var cn = function(e) {
					function ThrottlingRetryPolicy(t, n, i) {
							var r = e.call(this, t, n) || this;
							return r.retryLimit = i,
							r
					}
					return tslib_es6_extends(ThrottlingRetryPolicy, e),
					ThrottlingRetryPolicy.prototype.sendRequest = function(e) {
							return tslib_es6_awaiter(this, void 0, void 0, (function() {
									var t = this;
									return tslib_es6_generator(this, (function(n) {
											return [2, this._nextPolicy.sendRequest(e.clone()).then((function(n) {
													return t.retry(e, n, 0)
											}
											))]
									}
									))
							}
							))
					}
					,
					ThrottlingRetryPolicy.prototype.retry = function(e, t, n) {
							return tslib_es6_awaiter(this, void 0, void 0, (function() {
									var i, r, o;
									return tslib_es6_generator(this, (function(s) {
											switch (s.label) {
											case 0:
													return t.status !== ln.TooManyRequests ? [2, t] : (i = t.headers.get(Vt.RETRY_AFTER)) && n < this.retryLimit && (r = ThrottlingRetryPolicy.parseRetryAfterHeader(i)) ? [4, delay(r)] : [3, 3];
											case 1:
													return s.sent(),
													[4, this._nextPolicy.sendRequest(e)];
											case 2:
													return o = s.sent(),
													[2, this.retry(e, o, n + 1)];
											case 3:
													return [2, t]
											}
									}
									))
							}
							))
					}
					,
					ThrottlingRetryPolicy.parseRetryAfterHeader = function(e) {
							var t = Number(e);
							return Number.isNaN(t) ? ThrottlingRetryPolicy.parseDateRetryAfterHeader(e) : 1e3 * t
					}
					,
					ThrottlingRetryPolicy.parseDateRetryAfterHeader = function(e) {
							try {
									var t = Date.now()
										, n = Date.parse(e) - t;
									return Number.isNaN(n) ? void 0 : n
							} catch (e) {
									return
							}
					}
					,
					ThrottlingRetryPolicy
			}(Ye)
				, dn = ["https://management.windows.net", "https://management.chinacloudapi.cn", "https://management.usgovcloudapi.net", "https://management.cloudapi.de"]
				, pn = function() {
					function AzureIdentityCredentialAdapter(e, t) {
							void 0 === t && (t = "https://management.azure.com/.default"),
							this.azureTokenCredential = e,
							this.scopes = t
					}
					return AzureIdentityCredentialAdapter.prototype.getToken = function() {
							return tslib_es6_awaiter(this, void 0, void 0, (function() {
									var e;
									return tslib_es6_generator(this, (function(t) {
											switch (t.label) {
											case 0:
													return [4, this.azureTokenCredential.getToken(this.scopes)];
											case 1:
													if (null !== (e = t.sent()))
															return [2, {
																	accessToken: e.token,
																	tokenType: "Bearer",
																	expiresOn: e.expiresOnTimestamp
															}];
													throw new Error("Could find token for scope")
											}
									}
									))
							}
							))
					}
					,
					AzureIdentityCredentialAdapter.prototype.signRequest = function(e) {
							return tslib_es6_awaiter(this, void 0, void 0, (function() {
									var t;
									return tslib_es6_generator(this, (function(n) {
											switch (n.label) {
											case 0:
													return [4, this.getToken()];
											case 1:
													return t = n.sent(),
													e.headers.set(Vt.AUTHORIZATION, t.tokenType + " " + t.accessToken),
													[2, Promise.resolve(e)]
											}
									}
									))
							}
							))
					}
					,
					AzureIdentityCredentialAdapter
			}()
				, un = function() {
					function ServiceClient(e, t) {
							var n, i;
							if (t || (t = {}),
							t.baseUri && (this.baseUri = t.baseUri),
							function(e) {
									const t = e;
									return t && "function" == typeof t.getToken && (void 0 === t.signRequest || t.getToken.length > 0)
							}(e)) {
									var r = void 0;
									(null == t ? void 0 : t.baseUri) && dn.includes(null == t ? void 0 : t.baseUri) && (r = t.baseUri + "/.default"),
									n = new pn(e,r)
							} else
									n = e;
							if (n && !n.signRequest)
									throw new Error("credentials argument needs to implement signRequest method");
							if (this._withCredentials = t.withCredentials || !1,
							this._httpClient = t.httpClient || new jt,
							this._requestPolicyOptions = new Ke(t.httpPipelineLogger),
							Array.isArray(t.requestPolicyFactories))
									i = t.requestPolicyFactories;
							else if (i = function(e, t) {
									var n = [];
									t.generateClientRequestIdHeader && n.push((void 0 === (i = t.clientRequestIdHeaderName) && (i = "x-ms-client-request-id"),
									{
											create: function(e, t) {
													return new Yt(e,t,i)
											}
									}));
									var i;
									e && (!function(e) {
											return "function" == typeof e.create
									}(e) ? n.push((r = e,
									{
											create: function(e, t) {
													return new nn(e,t,r)
											}
									})) : n.push(e));
									var r;
									var o = getValueOrFunctionResult(t.userAgentHeaderName, Ht)
										, s = getValueOrFunctionResult(t.userAgent, getDefaultUserAgentValue);
									o && s && n.push((l = (a = {
											key: o,
											value: s
									}) && null != a.key ? a.key : "x-ms-command-name",
									c = a && null != a.value ? a.value : getDefaultUserAgentValue(),
									{
											create: function(e, t) {
													return new qt(e,t,l,c)
											}
									}));
									var a, l, c;
									var d = tslib_es6_assign(tslib_es6_assign({}, Jt), t.redirectOptions);
									d.handleRedirects && n.push((void 0 === (p = d.maxRetries) && (p = 20),
									{
											create: function(e, t) {
													return new en(e,t,p)
											}
									}));
									var p;
									n.push(function(e) {
											return void 0 === e && (e = 30),
											{
													create: function(t, n) {
															return new tn(t,n,e)
													}
											}
									}(t.rpRegistrationRetryTimeout)),
									t.noRetryPolicy || (n.push({
											create: function(e, t) {
													return new Wt(e,t,h,m,g,_)
											}
									}),
									n.push(function(e, t, n, i) {
											return {
													create: function(r, o) {
															return new rn(r,o,e,t,n,i)
													}
											}
									}()),
									n.push((void 0 === u && (u = 3),
									{
											create: function(e, t) {
													return new cn(e,t,u)
											}
									})));
									var u;
									var h, m, g, _;
									n.push(deserializationPolicy(t.deserializationContentTypes));
									var f = t.proxySettings || void 0;
									f && n.push({
											create: function(e, t) {
													throw an
											}
									});
									t.agentSettings && n.push((t.agentSettings,
									{
											create: function(e, t) {
													throw sn
											}
									}));
									return n
							}(n, t),
							t.requestPolicyFactories) {
									var o = t.requestPolicyFactories(i);
									o && (i = o)
							}
							this._requestPolicyFactories = i
					}
					return ServiceClient.prototype.sendRequest = function(e) {
							if (null == e || "object" != typeof e)
									throw new Error("options cannot be null or undefined and it must be of type object.");
							var t, n;
							try {
									"object" == typeof (n = e) && "string" == typeof n.url && "string" == typeof n.method && "object" == typeof n.headers && isHttpHeadersLike(n.headers) && "function" == typeof n.validateRequestProperties && "function" == typeof n.prepare && "function" == typeof n.clone ? (e.validateRequestProperties(),
									t = e) : t = (t = new on).prepare(e)
							} catch (e) {
									return Promise.reject(e)
							}
							var i = this._httpClient;
							if (this._requestPolicyFactories && this._requestPolicyFactories.length > 0)
									for (var r = this._requestPolicyFactories.length - 1; r >= 0; --r)
											i = this._requestPolicyFactories[r].create(i, this._requestPolicyOptions);
							return i.sendRequest(t)
					}
					,
					ServiceClient.prototype.sendOperationRequest = function(e, t, n) {
							"function" == typeof e.options && (n = e.options,
							e.options = void 0);
							var i, r = new on;
							try {
									var o = t.baseUrl || this.baseUri;
									if (!o)
											throw new Error("If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.");
									r.method = t.httpMethod,
									r.operationSpec = t;
									var s = Qt.parse(o);
									if (t.path && s.appendPath(t.path),
									t.urlParameters && t.urlParameters.length > 0)
											for (var a = 0, l = t.urlParameters; a < l.length; a++) {
													var c = l[a]
														, d = getOperationArgumentValueFromParameter(this, e, c, t.serializer);
													d = t.serializer.serialize(c.mapper, d, getPathStringFromParameter(c)),
													c.skipEncoding || (d = encodeURIComponent(d)),
													s.replaceAll("{" + (c.mapper.serializedName || getPathStringFromParameter(c)) + "}", d)
											}
									if (t.queryParameters && t.queryParameters.length > 0)
											for (var p = 0, u = t.queryParameters; p < u.length; p++) {
													var h = u[p]
														, m = getOperationArgumentValueFromParameter(this, e, h, t.serializer);
													if (null != m) {
															if (m = t.serializer.serialize(h.mapper, m, getPathStringFromParameter(h)),
															null != h.collectionFormat)
																	if (h.collectionFormat === Je.Multi)
																			if (0 === m.length)
																					m = "";
																			else
																					for (var g in m) {
																							var _ = m[g];
																							m[g] = null == _ ? "" : _.toString()
																					}
																	else
																			h.collectionFormat !== Je.Ssv && h.collectionFormat !== Je.Tsv || (m = m.join(h.collectionFormat));
															if (!h.skipEncoding)
																	if (Array.isArray(m))
																			for (var g in m)
																					void 0 !== m[g] && null !== m[g] && (m[g] = encodeURIComponent(m[g]));
																	else
																			m = encodeURIComponent(m);
															null != h.collectionFormat && h.collectionFormat !== Je.Multi && h.collectionFormat !== Je.Ssv && h.collectionFormat !== Je.Tsv && (m = m.join(h.collectionFormat)),
															s.setQueryParameter(h.mapper.serializedName || getPathStringFromParameter(h), m)
													}
											}
									r.url = s.toString();
									var f = t.contentType || this.requestContentType;
									if (f && r.headers.set("Content-Type", f),
									t.headerParameters)
											for (var y = 0, v = t.headerParameters; y < v.length; y++) {
													var b = v[y]
														, S = getOperationArgumentValueFromParameter(this, e, b, t.serializer);
													if (null != S) {
															S = t.serializer.serialize(b.mapper, S, getPathStringFromParameter(b));
															var C = b.mapper.headerCollectionPrefix;
															if (C)
																	for (var E = 0, T = Object.keys(S); E < T.length; E++) {
																			var I = T[E];
																			r.headers.set(C + I, S[I])
																	}
															else
																	r.headers.set(b.mapper.serializedName || getPathStringFromParameter(b), S)
													}
											}
									var w = e.options;
									if (w) {
											if (w.customHeaders)
													for (var A in w.customHeaders)
															r.headers.set(A, w.customHeaders[A]);
											w.abortSignal && (r.abortSignal = w.abortSignal),
											w.timeout && (r.timeout = w.timeout),
											w.onUploadProgress && (r.onUploadProgress = w.onUploadProgress),
											w.onDownloadProgress && (r.onDownloadProgress = w.onDownloadProgress)
									}
									r.withCredentials = this._withCredentials,
									function(e, t, n, i) {
											if (i.requestBody && i.requestBody.mapper) {
													t.body = getOperationArgumentValueFromParameter(e, n, i.requestBody, i.serializer);
													var r = i.requestBody.mapper
														, o = r.required
														, s = r.xmlName
														, a = r.xmlElementName
														, l = r.serializedName
														, c = r.type.name;
													try {
															if (null != t.body || o) {
																	var d = getPathStringFromParameter(i.requestBody);
																	t.body = i.serializer.serialize(r, t.body, d);
																	var p = c === Fe.Stream;
																	i.isXML ? c === Fe.Sequence ? t.body = stringifyXML(function(e, t) {
																			var n;
																			return Array.isArray(e) || (e = [e]),
																			(n = {})[t] = e,
																			n
																	}(t.body, a || s || l), {
																			rootName: s || l
																	}) : p || (t.body = stringifyXML(t.body, {
																			rootName: s || l
																	})) : p || (t.body = JSON.stringify(t.body))
															}
													} catch (e) {
															throw new Error('Error "' + e.message + '" occurred in serializing the payload - ' + JSON.stringify(l, void 0, "  ") + ".")
													}
											} else if (i.formDataParameters && i.formDataParameters.length > 0) {
													t.formData = {};
													for (var u = 0, h = i.formDataParameters; u < h.length; u++) {
															var m = h[u]
																, g = getOperationArgumentValueFromParameter(e, n, m, i.serializer);
															if (null != g) {
																	var _ = m.mapper.serializedName || getPathStringFromParameter(m);
																	t.formData[_] = i.serializer.serialize(m.mapper, g, getPathStringFromParameter(m))
															}
													}
											}
									}(this, r, e, t),
									null == r.streamResponseBody && (r.streamResponseBody = isStreamOperation(t)),
									i = this.sendRequest(r).then((function(e) {
											return function(e, t) {
													var n = e.parsedHeaders
														, i = t && t.bodyMapper
														, addOperationResponse = function(t) {
															return Object.defineProperty(t, "_response", {
																	value: e
															})
													};
													if (i) {
															var r = i.type.name;
															if ("Stream" === r)
																	return addOperationResponse(tslib_es6_assign(tslib_es6_assign({}, n), {
																			blobBody: e.blobBody,
																			readableStreamBody: e.readableStreamBody
																	}));
															var o = "Composite" === r && i.type.modelProperties || {}
																, s = Object.keys(o).some((function(e) {
																	return "" === o[e].serializedName
															}
															));
															if ("Sequence" === r || s) {
																	for (var a = function() {
																			for (var e = 0, t = 0, n = arguments.length; t < n; t++)
																					e += arguments[t].length;
																			var i = Array(e)
																				, r = 0;
																			for (t = 0; t < n; t++)
																					for (var o = arguments[t], s = 0, a = o.length; s < a; s++,
																					r++)
																							i[r] = o[s];
																			return i
																	}(Array.isArray(e.parsedBody) ? e.parsedBody : []), l = 0, c = Object.keys(o); l < c.length; l++) {
																			var d = c[l];
																			o[d].serializedName && (a[d] = e.parsedBody[d])
																	}
																	if (n)
																			for (var p = 0, u = Object.keys(n); p < u.length; p++) {
																					a[d = u[p]] = n[d]
																			}
																	return addOperationResponse(a),
																	a
															}
															if ("Composite" === r || "Dictionary" === r)
																	return addOperationResponse(tslib_es6_assign(tslib_es6_assign({}, n), e.parsedBody))
													}
													if (i || "HEAD" === e.request.method || (h = e.parsedBody,
													"object" != typeof h && "function" != typeof h || null === h))
															return addOperationResponse(tslib_es6_assign(tslib_es6_assign({}, n), {
																	body: e.parsedBody
															}));
													var h;
													return addOperationResponse(tslib_es6_assign(tslib_es6_assign({}, n), e.parsedBody))
											}(e, t.responses[e.status])
									}
									))
							} catch (e) {
									i = Promise.reject(e)
							}
							var R = n;
							return R && i.then((function(e) {
									return R(null, e._response.parsedBody, e._response.request, e._response)
							}
							)).catch((function(e) {
									return R(e)
							}
							)),
							i
					}
					,
					ServiceClient
			}();
			function getValueOrFunctionResult(e, t) {
					var n;
					return "string" == typeof e ? n = e : (n = t(),
					"function" == typeof e && (n = e(n))),
					n
			}
			function getOperationArgumentValueFromParameter(e, t, n, i) {
					return getOperationArgumentValueFromParameterPath(e, t, n.parameterPath, n.mapper, i)
			}
			function getOperationArgumentValueFromParameterPath(e, t, n, i, r) {
					var o;
					if ("string" == typeof n && (n = [n]),
					Array.isArray(n)) {
							if (n.length > 0) {
									if (i.isConstant)
											o = i.defaultValue;
									else {
											var s = getPropertyFromParameterPath(t, n);
											s.propertyFound || (s = getPropertyFromParameterPath(e, n));
											var a = !1;
											s.propertyFound || (a = i.required || "options" === n[0] && 2 === n.length),
											o = a ? i.defaultValue : s.propertyValue
									}
									var l = getPathStringFromParameterPath(n, i);
									r.serialize(i, o, l)
							}
					} else
							for (var c in i.required && (o = {}),
							n) {
									var d = i.type.modelProperties[c]
										, p = n[c]
										, u = getOperationArgumentValueFromParameterPath(e, t, p, d, r)
										, h = getPathStringFromParameterPath(p, d);
									r.serialize(d, u, h),
									void 0 !== u && (o || (o = {}),
									o[c] = u)
							}
					return o
			}
			function getPropertyFromParameterPath(e, t) {
					for (var n = {
							propertyFound: !1
					}, i = 0; i < t.length; ++i) {
							var r = t[i];
							if (null == e || !(r in e))
									break;
							e = e[r]
					}
					return i === t.length && (n.propertyValue = e,
					n.propertyFound = !0),
					n
			}
			var hn = function(e) {
					function WebSearchClient(t, n) {
							var i = e.call(this, t, n) || this;
							return i.web = new Ft(i),
							i
					}
					return tslib_es6_extends(WebSearchClient, e),
					WebSearchClient
			}(function(e) {
					function WebSearchClientContext(t, n) {
							var i = this;
							if (null == t)
									throw new Error("'credentials' cannot be null.");
							if (n || (n = {}),
							!n.userAgent) {
									var r = getDefaultUserAgentValue();
									n.userAgent = "@azure/cognitiveservices-websearch/3.0.1 " + r
							}
							return (i = e.call(this, t, n) || this).endpoint = "https://api.cognitive.microsoft.com",
							i.baseUri = "{Endpoint}/bing/v7.0",
							i.requestContentType = "application/json; charset=utf-8",
							i.credentials = t,
							null !== n.endpoint && void 0 !== n.endpoint && (i.endpoint = n.endpoint),
							i
					}
					return tslib_es6_extends(WebSearchClientContext, e),
					WebSearchClientContext
			}(un));
			function normalizeName(e) {
					return e.toLowerCase()
			}
			class HttpHeadersImpl {
					constructor(e) {
							if (this._headersMap = new Map,
							e)
									for (const t of Object.keys(e))
											this.set(t, e[t])
					}
					set(e, t) {
							this._headersMap.set(normalizeName(e), {
									name: e,
									value: String(t)
							})
					}
					get(e) {
							var t;
							return null === (t = this._headersMap.get(normalizeName(e))) || void 0 === t ? void 0 : t.value
					}
					has(e) {
							return this._headersMap.has(normalizeName(e))
					}
					delete(e) {
							this._headersMap.delete(normalizeName(e))
					}
					toJSON(e={}) {
							const t = {};
							if (e.preserveCase)
									for (const e of this._headersMap.values())
											t[e.name] = e.value;
							else
									for (const [e,n] of this._headersMap)
											t[e] = n.value;
							return t
					}
					toString() {
							return JSON.stringify(this.toJSON({
									preserveCase: !0
							}))
					}
					[Symbol.iterator]() {
							return function*(e) {
									for (const t of e.values())
											yield[t.name, t.value]
							}(this._headersMap)
					}
			}
			function createHttpHeaders(e) {
					return new HttpHeadersImpl(e)
			}
			class PipelineRequestImpl {
					constructor(e) {
							var t, n, i, r, o, s, a;
							this.url = e.url,
							this.body = e.body,
							this.headers = null !== (t = e.headers) && void 0 !== t ? t : createHttpHeaders(),
							this.method = null !== (n = e.method) && void 0 !== n ? n : "GET",
							this.timeout = null !== (i = e.timeout) && void 0 !== i ? i : 0,
							this.formData = e.formData,
							this.disableKeepAlive = null !== (r = e.disableKeepAlive) && void 0 !== r && r,
							this.proxySettings = e.proxySettings,
							this.streamResponseStatusCodes = e.streamResponseStatusCodes,
							this.withCredentials = null !== (o = e.withCredentials) && void 0 !== o && o,
							this.abortSignal = e.abortSignal,
							this.tracingOptions = e.tracingOptions,
							this.onUploadProgress = e.onUploadProgress,
							this.onDownloadProgress = e.onDownloadProgress,
							this.requestId = e.requestId || esm_browser_v4(),
							this.allowInsecureConnection = null !== (s = e.allowInsecureConnection) && void 0 !== s && s,
							this.enableBrowserStreams = null !== (a = e.enableBrowserStreams) && void 0 !== a && a
					}
			}
			const mn = "$"
				, gn = "_";
			function object_isObject(e) {
					return !("object" != typeof e || null === e || Array.isArray(e) || e instanceof RegExp || e instanceof Date)
			}
			function isError(e) {
					if (object_isObject(e)) {
							const t = "string" == typeof e.name
								, n = "string" == typeof e.message;
							return t && n
					}
					return !1
			}
			function getErrorMessage(e) {
					if (isError(e))
							return e.message;
					{
							let t;
							try {
									t = "object" == typeof e && e ? JSON.stringify(e) : String(e)
							} catch (e) {
									t = "[unable to stringify input]"
							}
							return `Unknown error ${t}`
					}
			}
			const _n = {}
				, yn = "REDACTED"
				, vn = ["x-ms-client-request-id", "x-ms-return-client-request-id", "x-ms-useragent", "x-ms-correlation-request-id", "x-ms-request-id", "client-request-id", "ms-cv", "return-client-request-id", "traceparent", "Access-Control-Allow-Credentials", "Access-Control-Allow-Headers", "Access-Control-Allow-Methods", "Access-Control-Allow-Origin", "Access-Control-Expose-Headers", "Access-Control-Max-Age", "Access-Control-Request-Headers", "Access-Control-Request-Method", "Origin", "Accept", "Accept-Encoding", "Cache-Control", "Connection", "Content-Length", "Content-Type", "Date", "ETag", "Expires", "If-Match", "If-Modified-Since", "If-None-Match", "If-Unmodified-Since", "Last-Modified", "Pragma", "Request-Id", "Retry-After", "Server", "Transfer-Encoding", "User-Agent", "WWW-Authenticate"]
				, bn = ["api-version"];
			class Sanitizer {
					constructor({additionalAllowedHeaderNames: e=[], additionalAllowedQueryParameters: t=[]}={}) {
							e = vn.concat(e),
							t = bn.concat(t),
							this.allowedHeaderNames = new Set(e.map((e=>e.toLowerCase()))),
							this.allowedQueryParameters = new Set(t.map((e=>e.toLowerCase())))
					}
					sanitize(e) {
							const t = new Set;
							return JSON.stringify(e, ((e,n)=>{
									if (n instanceof Error)
											return Object.assign(Object.assign({}, n), {
													name: n.name,
													message: n.message
											});
									if ("headers" === e)
											return this.sanitizeHeaders(n);
									if ("url" === e)
											return this.sanitizeUrl(n);
									if ("query" === e)
											return this.sanitizeQuery(n);
									if ("body" !== e && "response" !== e && "operationSpec" !== e) {
											if (Array.isArray(n) || object_isObject(n)) {
													if (t.has(n))
															return "[Circular]";
													t.add(n)
											}
											return n
									}
							}
							), 2)
					}
					sanitizeHeaders(e) {
							const t = {};
							for (const n of Object.keys(e))
									this.allowedHeaderNames.has(n.toLowerCase()) ? t[n] = e[n] : t[n] = yn;
							return t
					}
					sanitizeQuery(e) {
							if ("object" != typeof e || null === e)
									return e;
							const t = {};
							for (const n of Object.keys(e))
									this.allowedQueryParameters.has(n.toLowerCase()) ? t[n] = e[n] : t[n] = yn;
							return t
					}
					sanitizeUrl(e) {
							if ("string" != typeof e || null === e)
									return e;
							const t = new URL(e);
							if (!t.search)
									return e;
							for (const [e] of t.searchParams)
									this.allowedQueryParameters.has(e.toLowerCase()) || t.searchParams.set(e, yn);
							return t.toString()
					}
			}
			const Sn = new Sanitizer;
			class restError_RestError extends Error {
					constructor(e, t={}) {
							super(e),
							this.name = "RestError",
							this.code = t.code,
							this.statusCode = t.statusCode,
							this.request = t.request,
							this.response = t.response,
							Object.setPrototypeOf(this, restError_RestError.prototype)
					}
					[_n]() {
							return `RestError: ${this.message} \n ${Sn.sanitize(this)}`
					}
			}
			function base64_browser_encodeByteArray(e) {
					let t = "";
					for (let n = 0; n < e.length; n++)
							t += String.fromCharCode(e[n]);
					return btoa(t)
			}
			function base64_browser_decodeString(e) {
					const t = atob(e)
						, n = new Uint8Array(t.length);
					for (let e = 0; e < t.length; e++)
							n[e] = t.charCodeAt(e);
					return n
			}
			restError_RestError.REQUEST_SEND_ERROR = "REQUEST_SEND_ERROR",
			restError_RestError.PARSE_ERROR = "PARSE_ERROR";
			const Cn = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
			const En = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;
			function utils_flattenResponse(e, t) {
					var n, i;
					const r = e.parsedHeaders;
					if ("HEAD" === e.request.method)
							return Object.assign(Object.assign({}, r), {
									body: e.parsedBody
							});
					const o = t && t.bodyMapper
						, s = Boolean(null == o ? void 0 : o.nullable)
						, a = null == o ? void 0 : o.type.name;
					if ("Stream" === a)
							return Object.assign(Object.assign({}, r), {
									blobBody: e.blobBody,
									readableStreamBody: e.readableStreamBody
							});
					const l = "Composite" === a && o.type.modelProperties || {}
						, c = Object.keys(l).some((e=>"" === l[e].serializedName));
					if ("Sequence" === a || c) {
							const t = null !== (n = e.parsedBody) && void 0 !== n ? n : [];
							for (const n of Object.keys(l))
									l[n].serializedName && (t[n] = null === (i = e.parsedBody) || void 0 === i ? void 0 : i[n]);
							if (r)
									for (const e of Object.keys(r))
											t[e] = r[e];
							return !s || e.parsedBody || r || 0 !== Object.getOwnPropertyNames(l).length ? t : null
					}
					return function(e) {
							const t = Object.assign(Object.assign({}, e.headers), e.body);
							return e.hasNullableType && 0 === Object.getOwnPropertyNames(t).length ? e.shouldWrapBody ? {
									body: null
							} : null : e.shouldWrapBody ? Object.assign(Object.assign({}, e.headers), {
									body: e.body
							}) : t
					}({
							body: e.parsedBody,
							headers: r,
							hasNullableType: s,
							shouldWrapBody: (d = e.parsedBody,
							p = a,
							"Composite" !== p && "Dictionary" !== p && ("string" == typeof d || "number" == typeof d || "boolean" == typeof d || null !== (null == p ? void 0 : p.match(/^(Date|DateTime|DateTimeRfc1123|UnixTime|ByteArray|Base64Url)$/i)) || null == d))
					});
					var d, p
			}
			class SerializerImpl {
					constructor(e={}, t=!1) {
							this.modelMappers = e,
							this.isXML = t
					}
					validateConstraints(e, t, n) {
							const failValidation = (e,i)=>{
									throw new Error(`"${n}" with value "${t}" should satisfy the constraint "${e}": ${i}.`)
							}
							;
							if (e.constraints && null != t) {
									const {ExclusiveMaximum: n, ExclusiveMinimum: i, InclusiveMaximum: r, InclusiveMinimum: o, MaxItems: s, MaxLength: a, MinItems: l, MinLength: c, MultipleOf: d, Pattern: p, UniqueItems: u} = e.constraints;
									if (void 0 !== n && t >= n && failValidation("ExclusiveMaximum", n),
									void 0 !== i && t <= i && failValidation("ExclusiveMinimum", i),
									void 0 !== r && t > r && failValidation("InclusiveMaximum", r),
									void 0 !== o && t < o && failValidation("InclusiveMinimum", o),
									void 0 !== s && t.length > s && failValidation("MaxItems", s),
									void 0 !== a && t.length > a && failValidation("MaxLength", a),
									void 0 !== l && t.length < l && failValidation("MinItems", l),
									void 0 !== c && t.length < c && failValidation("MinLength", c),
									void 0 !== d && t % d != 0 && failValidation("MultipleOf", d),
									p) {
											const e = "string" == typeof p ? new RegExp(p) : p;
											"string" == typeof t && null !== t.match(e) || failValidation("Pattern", p)
									}
									u && t.some(((e,t,n)=>n.indexOf(e) !== t)) && failValidation("UniqueItems", u)
							}
					}
					serialize(e, t, n, i={
							xml: {}
					}) {
							var r, o, s;
							const a = {
									xml: {
											rootName: null !== (r = i.xml.rootName) && void 0 !== r ? r : "",
											includeRoot: null !== (o = i.xml.includeRoot) && void 0 !== o && o,
											xmlCharKey: null !== (s = i.xml.xmlCharKey) && void 0 !== s ? s : gn
									}
							};
							let l = {};
							const c = e.type.name;
							n || (n = e.serializedName),
							null !== c.match(/^Sequence$/i) && (l = []),
							e.isConstant && (t = e.defaultValue);
							const {required: d, nullable: p} = e;
							if (d && p && void 0 === t)
									throw new Error(`${n} cannot be undefined.`);
							if (d && !p && null == t)
									throw new Error(`${n} cannot be null or undefined.`);
							if (!d && !1 === p && null === t)
									throw new Error(`${n} cannot be null.`);
							if (null == t)
									l = t;
							else if (null !== c.match(/^any$/i))
									l = t;
							else if (null !== c.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i))
									l = function(e, t, n) {
											if (null != n)
													if (null !== e.match(/^Number$/i)) {
															if ("number" != typeof n)
																	throw new Error(`${t} with value ${n} must be of type number.`)
													} else if (null !== e.match(/^String$/i)) {
															if ("string" != typeof n.valueOf())
																	throw new Error(`${t} with value "${n}" must be of type string.`)
													} else if (null !== e.match(/^Uuid$/i)) {
															if ("string" != typeof n.valueOf() || (i = n,
															!En.test(i)))
																	throw new Error(`${t} with value "${n}" must be of type string and a valid uuid.`)
													} else if (null !== e.match(/^Boolean$/i)) {
															if ("boolean" != typeof n)
																	throw new Error(`${t} with value ${n} must be of type boolean.`)
													} else if (null !== e.match(/^Stream$/i)) {
															if (!("string" === typeof n || "function" == typeof n.pipe || n instanceof ArrayBuffer || ArrayBuffer.isView(n) || ("function" == typeof Blob || "object" == typeof Blob) && n instanceof Blob))
																	throw new Error(`${t} must be a string, Blob, ArrayBuffer, ArrayBufferView, or NodeJS.ReadableStream.`)
													}
											var i;
											return n
									}(c, n, t);
							else if (null !== c.match(/^Enum$/i)) {
									l = function(e, t, n) {
											if (!t)
													throw new Error(`Please provide a set of allowedValues to validate ${e} as an Enum Type.`);
											if (!t.some((e=>"string" == typeof e.valueOf() ? e.toLowerCase() === n.toLowerCase() : e === n)))
													throw new Error(`${n} is not a valid value for ${e}. The valid values are: ${JSON.stringify(t)}.`);
											return n
									}(n, e.type.allowedValues, t)
							} else
									null !== c.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) ? l = function(e, t, n) {
											if (null != t)
													if (null !== e.match(/^Date$/i)) {
															if (!(t instanceof Date || "string" == typeof t.valueOf() && !isNaN(Date.parse(t))))
																	throw new Error(`${n} must be an instanceof Date or a string in ISO8601 format.`);
															t = t instanceof Date ? t.toISOString().substring(0, 10) : new Date(t).toISOString().substring(0, 10)
													} else if (null !== e.match(/^DateTime$/i)) {
															if (!(t instanceof Date || "string" == typeof t.valueOf() && !isNaN(Date.parse(t))))
																	throw new Error(`${n} must be an instanceof Date or a string in ISO8601 format.`);
															t = t instanceof Date ? t.toISOString() : new Date(t).toISOString()
													} else if (null !== e.match(/^DateTimeRfc1123$/i)) {
															if (!(t instanceof Date || "string" == typeof t.valueOf() && !isNaN(Date.parse(t))))
																	throw new Error(`${n} must be an instanceof Date or a string in RFC-1123 format.`);
															t = t instanceof Date ? t.toUTCString() : new Date(t).toUTCString()
													} else if (null !== e.match(/^UnixTime$/i)) {
															if (!(t instanceof Date || "string" == typeof t.valueOf() && !isNaN(Date.parse(t))))
																	throw new Error(`${n} must be an instanceof Date or a string in RFC-1123/ISO8601 format for it to be serialized in UnixTime/Epoch format.`);
															t = function(e) {
																	if (!e)
																			return;
																	"string" == typeof e.valueOf() && (e = new Date(e));
																	return Math.floor(e.getTime() / 1e3)
															}(t)
													} else if (null !== e.match(/^TimeSpan$/i) && !function(e) {
															return Cn.test(e)
													}(t))
															throw new Error(`${n} must be a string in ISO 8601 format. Instead was "${t}".`);
											return t
									}(c, t, n) : null !== c.match(/^ByteArray$/i) ? l = function(e, t) {
											if (null != t) {
													if (!(t instanceof Uint8Array))
															throw new Error(`${e} must be of type Uint8Array.`);
													t = base64_browser_encodeByteArray(t)
											}
											return t
									}(n, t) : null !== c.match(/^Base64Url$/i) ? l = function(e, t) {
											if (null != t) {
													if (!(t instanceof Uint8Array))
															throw new Error(`${e} must be of type Uint8Array.`);
													t = function(e) {
															if (!e)
																	return;
															if (!(e instanceof Uint8Array))
																	throw new Error("Please provide an input of type Uint8Array for converting to Base64Url.");
															return function(e, t) {
																	let n = e.length;
																	for (; n - 1 >= 0 && e[n - 1] === t; )
																			--n;
																	return e.substr(0, n)
															}(base64_browser_encodeByteArray(e), "=").replace(/\+/g, "-").replace(/\//g, "_")
													}(t)
											}
											return t
									}(n, t) : null !== c.match(/^Sequence$/i) ? l = function(e, t, n, i, r, o) {
											var s;
											if (!Array.isArray(n))
													throw new Error(`${i} must be of type Array.`);
											let a = t.type.element;
											if (!a || "object" != typeof a)
													throw new Error(`element" metadata for an Array must be defined in the mapper and it must of type "object" in ${i}.`);
											"Composite" === a.type.name && a.type.className && (a = null !== (s = e.modelMappers[a.type.className]) && void 0 !== s ? s : a);
											const l = [];
											for (let t = 0; t < n.length; t++) {
													const s = e.serialize(a, n[t], i, o);
													if (r && a.xmlNamespace) {
															const e = a.xmlNamespacePrefix ? `xmlns:${a.xmlNamespacePrefix}` : "xmlns";
															"Composite" === a.type.name ? (l[t] = Object.assign({}, s),
															l[t][mn] = {
																	[e]: a.xmlNamespace
															}) : (l[t] = {},
															l[t][o.xml.xmlCharKey] = s,
															l[t][mn] = {
																	[e]: a.xmlNamespace
															})
													} else
															l[t] = s
											}
											return l
									}(this, e, t, n, Boolean(this.isXML), a) : null !== c.match(/^Dictionary$/i) ? l = function(e, t, n, i, r, o) {
											if ("object" != typeof n)
													throw new Error(`${i} must be of type object.`);
											const s = t.type.value;
											if (!s || "object" != typeof s)
													throw new Error(`"value" metadata for a Dictionary must be defined in the mapper and it must of type "object" in ${i}.`);
											const a = {};
											for (const t of Object.keys(n)) {
													const l = e.serialize(s, n[t], i, o);
													a[t] = getXmlObjectValue(s, l, r, o)
											}
											if (r && t.xmlNamespace) {
													const e = t.xmlNamespacePrefix ? `xmlns:${t.xmlNamespacePrefix}` : "xmlns"
														, n = a;
													return n[mn] = {
															[e]: t.xmlNamespace
													},
													n
											}
											return a
									}(this, e, t, n, Boolean(this.isXML), a) : null !== c.match(/^Composite$/i) && (l = function(e, t, n, i, r, o) {
											serializer_getPolymorphicDiscriminatorRecursively(e, t) && (t = serializer_getPolymorphicMapper(e, t, n, "clientName"));
											if (null != n) {
													const s = {}
														, a = serializer_resolveModelProperties(e, t, i);
													for (const l of Object.keys(a)) {
															const c = a[l];
															if (c.readOnly)
																	continue;
															let d, p = s;
															if (e.isXML)
																	d = c.xmlIsWrapped ? c.xmlName : c.xmlElementName || c.xmlName;
															else {
																	const e = serializer_splitSerializeName(c.serializedName);
																	d = e.pop();
																	for (const t of e) {
																			const e = p[t];
																			null == e && (void 0 !== n[l] && null !== n[l] || void 0 !== c.defaultValue) && (p[t] = {}),
																			p = p[t]
																	}
															}
															if (null != p) {
																	if (r && t.xmlNamespace) {
																			const e = t.xmlNamespacePrefix ? `xmlns:${t.xmlNamespacePrefix}` : "xmlns";
																			p[mn] = Object.assign(Object.assign({}, p[mn]), {
																					[e]: t.xmlNamespace
																			})
																	}
																	const s = "" !== c.serializedName ? i + "." + c.serializedName : i;
																	let a = n[l];
																	const u = serializer_getPolymorphicDiscriminatorRecursively(e, t);
																	u && u.clientName === l && null == a && (a = t.serializedName);
																	const h = e.serialize(c, a, s, o);
																	if (void 0 !== h && null != d) {
																			const e = getXmlObjectValue(c, h, r, o);
																			r && c.xmlIsAttribute ? (p[mn] = p[mn] || {},
																			p[mn][d] = h) : r && c.xmlIsWrapped ? p[d] = {
																					[c.xmlElementName]: e
																			} : p[d] = e
																	}
															}
													}
													const l = function(e, t, n) {
															const i = t.type.additionalProperties;
															if (!i && t.type.className) {
																	const i = resolveReferencedMapper(e, t, n);
																	return null == i ? void 0 : i.type.additionalProperties
															}
															return i
													}(e, t, i);
													if (l) {
															const t = Object.keys(a);
															for (const r in n) {
																	t.every((e=>e !== r)) && (s[r] = e.serialize(l, n[r], i + '["' + r + '"]', o))
															}
													}
													return s
											}
											return n
									}(this, e, t, n, Boolean(this.isXML), a));
							return l
					}
					deserialize(e, t, n, i={
							xml: {}
					}) {
							var r, o, s;
							const a = {
									xml: {
											rootName: null !== (r = i.xml.rootName) && void 0 !== r ? r : "",
											includeRoot: null !== (o = i.xml.includeRoot) && void 0 !== o && o,
											xmlCharKey: null !== (s = i.xml.xmlCharKey) && void 0 !== s ? s : gn
									}
							};
							if (null == t)
									return this.isXML && "Sequence" === e.type.name && !e.xmlIsWrapped && (t = []),
									void 0 !== e.defaultValue && (t = e.defaultValue),
									t;
							let l;
							const c = e.type.name;
							if (n || (n = e.serializedName),
							null !== c.match(/^Composite$/i))
									l = function(e, t, n, i, r) {
											var o;
											serializer_getPolymorphicDiscriminatorRecursively(e, t) && (t = serializer_getPolymorphicMapper(e, t, n, "serializedName"));
											const s = serializer_resolveModelProperties(e, t, i);
											let a = {};
											const l = [];
											for (const c of Object.keys(s)) {
													const d = s[c]
														, p = serializer_splitSerializeName(s[c].serializedName);
													l.push(p[0]);
													const {serializedName: u, xmlName: h, xmlElementName: m} = d;
													let g = i;
													"" !== u && void 0 !== u && (g = i + "." + u);
													const _ = d.headerCollectionPrefix;
													if (_) {
															const t = {};
															for (const i of Object.keys(n))
																	i.startsWith(_) && (t[i.substring(_.length)] = e.deserialize(d.type.value, n[i], g, r)),
																	l.push(i);
															a[c] = t
													} else if (e.isXML)
															if (d.xmlIsAttribute && n[mn])
																	a[c] = e.deserialize(d, n[mn][h], g, r);
															else {
																	const t = m || h || u;
																	if (d.xmlIsWrapped) {
																			const t = n[h]
																				, i = null !== (o = null == t ? void 0 : t[m]) && void 0 !== o ? o : [];
																			a[c] = e.deserialize(d, i, g, r)
																	} else {
																			const i = n[t];
																			a[c] = e.deserialize(d, i, g, r)
																	}
															}
													else {
															let i, o = n;
															for (const e of p) {
																	if (!o)
																			break;
																	o = o[e]
															}
															i = o;
															const l = t.type.polymorphicDiscriminator;
															let u;
															if (l && c === l.clientName && null == i && (i = t.serializedName),
															Array.isArray(n[c]) && "" === s[c].serializedName) {
																	i = n[c];
																	const t = e.deserialize(d, i, g, r);
																	for (const [e,n] of Object.entries(a))
																			Object.prototype.hasOwnProperty.call(t, e) || (t[e] = n);
																	a = t
															} else
																	void 0 === i && void 0 === d.defaultValue || (u = e.deserialize(d, i, g, r),
																	a[c] = u)
													}
											}
											const c = t.type.additionalProperties;
											if (c) {
													const isAdditionalProperty = e=>{
															for (const t in s) {
																	if (serializer_splitSerializeName(s[t].serializedName)[0] === e)
																			return !1
															}
															return !0
													}
													;
													for (const t in n)
															isAdditionalProperty(t) && (a[t] = e.deserialize(c, n[t], i + '["' + t + '"]', r))
											} else if (n)
													for (const e of Object.keys(n))
															void 0 !== a[e] || l.includes(e) || serializer_isSpecialXmlProperty(e, r) || (a[e] = n[e]);
											return a
									}(this, e, t, n, a);
							else {
									if (this.isXML) {
											const e = a.xml.xmlCharKey;
											void 0 !== t[mn] && void 0 !== t[e] && (t = t[e])
									}
									null !== c.match(/^Number$/i) ? (l = parseFloat(t),
									isNaN(l) && (l = t)) : null !== c.match(/^Boolean$/i) ? l = "true" === t || "false" !== t && t : null !== c.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) ? l = t : null !== c.match(/^(Date|DateTime|DateTimeRfc1123)$/i) ? l = new Date(t) : null !== c.match(/^UnixTime$/i) ? l = function(e) {
											if (!e)
													return;
											return new Date(1e3 * e)
									}(t) : null !== c.match(/^ByteArray$/i) ? l = base64_browser_decodeString(t) : null !== c.match(/^Base64Url$/i) ? l = function(e) {
											if (!e)
													return;
											if (e && "string" != typeof e.valueOf())
													throw new Error("Please provide an input of type string for converting to Uint8Array");
											return base64_browser_decodeString(e = e.replace(/-/g, "+").replace(/_/g, "/"))
									}(t) : null !== c.match(/^Sequence$/i) ? l = function(e, t, n, i, r) {
											var o;
											let s = t.type.element;
											if (!s || "object" != typeof s)
													throw new Error(`element" metadata for an Array must be defined in the mapper and it must of type "object" in ${i}`);
											if (n) {
													Array.isArray(n) || (n = [n]),
													"Composite" === s.type.name && s.type.className && (s = null !== (o = e.modelMappers[s.type.className]) && void 0 !== o ? o : s);
													const t = [];
													for (let o = 0; o < n.length; o++)
															t[o] = e.deserialize(s, n[o], `${i}[${o}]`, r);
													return t
											}
											return n
									}(this, e, t, n, a) : null !== c.match(/^Dictionary$/i) && (l = function(e, t, n, i, r) {
											const o = t.type.value;
											if (!o || "object" != typeof o)
													throw new Error(`"value" metadata for a Dictionary must be defined in the mapper and it must of type "object" in ${i}`);
											if (n) {
													const t = {};
													for (const s of Object.keys(n))
															t[s] = e.deserialize(o, n[s], i, r);
													return t
											}
											return n
									}(this, e, t, n, a))
							}
							return e.isConstant && (l = e.defaultValue),
							l
					}
			}
			function createSerializer(e={}, t=!1) {
					return new SerializerImpl(e,t)
			}
			function serializer_splitSerializeName(e) {
					const t = [];
					let n = "";
					if (e) {
							const i = e.split(".");
							for (const e of i)
									"\\" === e.charAt(e.length - 1) ? n += e.substr(0, e.length - 1) + "." : (n += e,
									t.push(n),
									n = "")
					}
					return t
			}
			function resolveReferencedMapper(e, t, n) {
					const i = t.type.className;
					if (!i)
							throw new Error(`Class name for model "${n}" is not provided in the mapper "${JSON.stringify(t, void 0, 2)}".`);
					return e.modelMappers[i]
			}
			function serializer_resolveModelProperties(e, t, n) {
					let i = t.type.modelProperties;
					if (!i) {
							const r = resolveReferencedMapper(e, t, n);
							if (!r)
									throw new Error(`mapper() cannot be null or undefined for model "${t.type.className}".`);
							if (i = null == r ? void 0 : r.type.modelProperties,
							!i)
									throw new Error(`modelProperties cannot be null or undefined in the mapper "${JSON.stringify(r)}" of type "${t.type.className}" for object "${n}".`)
					}
					return i
			}
			function getXmlObjectValue(e, t, n, i) {
					if (!n || !e.xmlNamespace)
							return t;
					const r = {
							[e.xmlNamespacePrefix ? `xmlns:${e.xmlNamespacePrefix}` : "xmlns"]: e.xmlNamespace
					};
					if (["Composite"].includes(e.type.name)) {
							if (t[mn])
									return t;
							{
									const e = Object.assign({}, t);
									return e[mn] = r,
									e
							}
					}
					const o = {};
					return o[i.xml.xmlCharKey] = t,
					o[mn] = r,
					o
			}
			function serializer_isSpecialXmlProperty(e, t) {
					return [mn, t.xml.xmlCharKey].includes(e)
			}
			function serializer_getPolymorphicMapper(e, t, n, i) {
					var r;
					const o = serializer_getPolymorphicDiscriminatorRecursively(e, t);
					if (o) {
							let s = o[i];
							if (s) {
									"serializedName" === i && (s = s.replace(/\\/gi, ""));
									const o = n[s]
										, a = null !== (r = t.type.uberParent) && void 0 !== r ? r : t.type.className;
									if ("string" == typeof o && a) {
											const n = function(e, t, n) {
													const i = [n];
													for (; i.length; ) {
															const n = i.shift()
																, r = t === n ? t : n + "." + t;
															if (Object.prototype.hasOwnProperty.call(e, r))
																	return e[r];
															for (const [t,r] of Object.entries(e))
																	t.startsWith(n + ".") && r.type.uberParent === n && r.type.className && i.push(r.type.className)
													}
											}(e.modelMappers.discriminators, o, a);
											n && (t = n)
									}
							}
					}
					return t
			}
			function serializer_getPolymorphicDiscriminatorRecursively(e, t) {
					return t.type.polymorphicDiscriminator || serializer_getPolymorphicDiscriminatorSafely(e, t.type.uberParent) || serializer_getPolymorphicDiscriminatorSafely(e, t.type.className)
			}
			function serializer_getPolymorphicDiscriminatorSafely(e, t) {
					return t && e.modelMappers[t] && e.modelMappers[t].type.polymorphicDiscriminator
			}
			const Tn = "Sequence"
				, In = "String"
				, wn = "Stream";
			function operationHelpers_getOperationArgumentValueFromParameter(e, t, n) {
					let i = t.parameterPath;
					const r = t.mapper;
					let o;
					if ("string" == typeof i && (i = [i]),
					Array.isArray(i)) {
							if (i.length > 0)
									if (r.isConstant)
											o = r.defaultValue;
									else {
											let t = operationHelpers_getPropertyFromParameterPath(e, i);
											!t.propertyFound && n && (t = operationHelpers_getPropertyFromParameterPath(n, i));
											let s = !1;
											t.propertyFound || (s = r.required || "options" === i[0] && 2 === i.length),
											o = s ? r.defaultValue : t.propertyValue
									}
					} else {
							r.required && (o = {});
							for (const t in i) {
									const s = r.type.modelProperties[t]
										, a = operationHelpers_getOperationArgumentValueFromParameter(e, {
											parameterPath: i[t],
											mapper: s
									}, n);
									void 0 !== a && (o || (o = {}),
									o[t] = a)
							}
					}
					return o
			}
			function operationHelpers_getPropertyFromParameterPath(e, t) {
					const n = {
							propertyFound: !1
					};
					let i = 0;
					for (; i < t.length; ++i) {
							const n = t[i];
							if (!e || !(n in e))
									break;
							e = e[n]
					}
					return i === t.length && (n.propertyValue = e,
					n.propertyFound = !0),
					n
			}
			const An = new WeakMap;
			function getOperationRequestInfo(e) {
					let t = An.get(e);
					return t || (t = {},
					An.set(e, t)),
					t
			}
			const Rn = ["application/json", "text/json"]
				, xn = ["application/xml", "application/atom+xml"];
			function deserializationPolicy_deserializationPolicy(e={}) {
					var t, n, i, r, o, s, a;
					const l = null !== (n = null === (t = e.expectedContentTypes) || void 0 === t ? void 0 : t.json) && void 0 !== n ? n : Rn
						, c = null !== (r = null === (i = e.expectedContentTypes) || void 0 === i ? void 0 : i.xml) && void 0 !== r ? r : xn
						, d = e.parseXML
						, p = e.serializerOptions
						, u = {
							xml: {
									rootName: null !== (o = null == p ? void 0 : p.xml.rootName) && void 0 !== o ? o : "",
									includeRoot: null !== (s = null == p ? void 0 : p.xml.includeRoot) && void 0 !== s && s,
									xmlCharKey: null !== (a = null == p ? void 0 : p.xml.xmlCharKey) && void 0 !== a ? a : gn
							}
					};
					return {
							name: "deserializationPolicy",
							async sendRequest(e, t) {
									const n = await t(e);
									return async function(e, t, n, i, r) {
											const o = await async function(e, t, n, i, r) {
													var o;
													if (!(null === (o = n.request.streamResponseStatusCodes) || void 0 === o ? void 0 : o.has(n.status)) && n.bodyAsText) {
															const o = n.bodyAsText
																, s = n.headers.get("Content-Type") || ""
																, a = s ? s.split(";").map((e=>e.toLowerCase())) : [];
															try {
																	if (0 === a.length || a.some((t=>-1 !== e.indexOf(t))))
																			return n.parsedBody = JSON.parse(o),
																			n;
																	if (a.some((e=>-1 !== t.indexOf(e)))) {
																			if (!r)
																					throw new Error("Parsing XML not supported.");
																			const e = await r(o, i.xml);
																			return n.parsedBody = e,
																			n
																	}
															} catch (e) {
																	const t = `Error "${e}" occurred while parsing the response body - ${n.bodyAsText}.`
																		, i = e.code || restError_RestError.PARSE_ERROR;
																	throw new restError_RestError(t,{
																			code: i,
																			statusCode: n.status,
																			request: n.request,
																			response: n
																	})
															}
													}
													return n
											}(e, t, n, i, r);
											if (!function(e) {
													const t = e.request
														, n = getOperationRequestInfo(t)
														, i = null == n ? void 0 : n.shouldDeserialize;
													let r;
													r = void 0 === i || ("boolean" == typeof i ? i : i(e));
													return r
											}(o))
													return o;
											const s = getOperationRequestInfo(o.request)
												, a = null == s ? void 0 : s.operationSpec;
											if (!a || !a.responses)
													return o;
											const l = function(e) {
													let t;
													const n = e.request
														, i = getOperationRequestInfo(n)
														, r = null == i ? void 0 : i.operationSpec;
													r && (t = (null == i ? void 0 : i.operationResponseGetter) ? null == i ? void 0 : i.operationResponseGetter(r, e) : r.responses[e.status]);
													return t
											}(o)
												, {error: c, shouldReturnResponse: d} = function(e, t, n) {
													var i;
													const r = 200 <= e.status && e.status < 300
														, o = function(e) {
															const t = Object.keys(e.responses);
															return 0 === t.length || 1 === t.length && "default" === t[0]
													}(t) ? r : !!n;
													if (o) {
															if (!n)
																	return {
																			error: null,
																			shouldReturnResponse: !1
																	};
															if (!n.isError)
																	return {
																			error: null,
																			shouldReturnResponse: !1
																	}
													}
													const s = null != n ? n : t.responses.default
														, a = (null === (i = e.request.streamResponseStatusCodes) || void 0 === i ? void 0 : i.has(e.status)) ? `Unexpected status code: ${e.status}` : e.bodyAsText
														, l = new restError_RestError(a,{
															statusCode: e.status,
															request: e.request,
															response: e
													});
													if (!s)
															throw l;
													const c = s.bodyMapper
														, d = s.headersMapper;
													try {
															if (e.parsedBody) {
																	const n = e.parsedBody;
																	let i;
																	if (c) {
																			let e = n;
																			if (t.isXML && c.type.name === Tn) {
																					e = [];
																					const t = c.xmlElementName;
																					"object" == typeof n && t && (e = n[t])
																			}
																			i = t.serializer.deserialize(c, e, "error.response.parsedBody")
																	}
																	const r = n.error || i || n;
																	l.code = r.code,
																	r.message && (l.message = r.message),
																	c && (l.response.parsedBody = i)
															}
															e.headers && d && (l.response.parsedHeaders = t.serializer.deserialize(d, e.headers.toJSON(), "operationRes.parsedHeaders"))
													} catch (t) {
															l.message = `Error "${t.message}" occurred in deserializing the responseBody - "${e.bodyAsText}" for the default response.`
													}
													return {
															error: l,
															shouldReturnResponse: !1
													}
											}(o, a, l);
											if (c)
													throw c;
											if (d)
													return o;
											if (l) {
													if (l.bodyMapper) {
															let e = o.parsedBody;
															a.isXML && l.bodyMapper.type.name === Tn && (e = "object" == typeof e ? e[l.bodyMapper.xmlElementName] : []);
															try {
																	o.parsedBody = a.serializer.deserialize(l.bodyMapper, e, "operationRes.parsedBody")
															} catch (e) {
																	throw new restError_RestError(`Error ${e} occurred in deserializing the responseBody - ${o.bodyAsText}`,{
																			statusCode: o.status,
																			request: o.request,
																			response: o
																	})
															}
													} else
															"HEAD" === a.httpMethod && (o.parsedBody = n.status >= 200 && n.status < 300);
													l.headersMapper && (o.parsedHeaders = a.serializer.deserialize(l.headersMapper, o.headers.toJSON(), "operationRes.parsedHeaders"))
											}
											return o
									}(l, c, n, u, d)
							}
					}
			}
			const On = "undefined" != typeof process && process.env && process.env.DEBUG || void 0;
			let Nn, Pn = [], Dn = [];
			const Mn = [];
			On && enable(On);
			const Ln = Object.assign((e=>createDebugger(e)), {
					enable,
					enabled,
					disable: function() {
							const e = Nn || "";
							return enable(""),
							e
					},
					log: function(...e) {
							if (e.length > 0) {
									const t = String(e[0]);
									t.includes(":error") ? console.error(...e) : t.includes(":warning") ? console.warn(...e) : t.includes(":info") ? console.info(...e) : (t.includes(":verbose"),
									console.debug(...e))
							}
					}
			});
			function enable(e) {
					Nn = e,
					Pn = [],
					Dn = [];
					const t = /\*/g
						, n = e.split(",").map((e=>e.trim().replace(t, ".*?")));
					for (const e of n)
							e.startsWith("-") ? Dn.push(new RegExp(`^${e.substr(1)}$`)) : Pn.push(new RegExp(`^${e}$`));
					for (const e of Mn)
							e.enabled = enabled(e.namespace)
			}
			function enabled(e) {
					if (e.endsWith("*"))
							return !0;
					for (const t of Dn)
							if (t.test(e))
									return !1;
					for (const t of Pn)
							if (t.test(e))
									return !0;
					return !1
			}
			function createDebugger(e) {
					const t = Object.assign((function(...n) {
							if (!t.enabled)
									return;
							n.length > 0 && (n[0] = `${e} ${n[0]}`);
							t.log(...n)
					}
					), {
							enabled: enabled(e),
							destroy,
							log: Ln.log,
							namespace: e,
							extend
					});
					return Mn.push(t),
					t
			}
			function destroy() {
					const e = Mn.indexOf(this);
					return e >= 0 && (Mn.splice(e, 1),
					!0)
			}
			function extend(e) {
					const t = createDebugger(`${this.namespace}:${e}`);
					return t.log = this.log,
					t
			}
			const kn = Ln
				, Fn = new Set
				, Bn = "undefined" != typeof process && process.env && process.env.AZURE_LOG_LEVEL || void 0;
			let Gn;
			const Un = kn("azure");
			Un.log = (...e)=>{
					kn.log(...e)
			}
			;
			const zn = ["verbose", "info", "warning", "error"];
			Bn && (isAzureLogLevel(Bn) ? function(e) {
					if (e && !isAzureLogLevel(e))
							throw new Error(`Unknown log level '${e}'. Acceptable values: ${zn.join(",")}`);
					Gn = e;
					const t = [];
					for (const e of Fn)
							shouldEnable(e) && t.push(e.namespace);
					kn.enable(t.join(","))
			}(Bn) : console.error(`AZURE_LOG_LEVEL set to unknown log level '${Bn}'; logging is not enabled. Acceptable values: ${zn.join(", ")}.`));
			const $n = {
					verbose: 400,
					info: 300,
					warning: 200,
					error: 100
			};
			function createClientLogger(e) {
					const t = Un.extend(e);
					return patchLogMethod(Un, t),
					{
							error: createLogger(t, "error"),
							warning: createLogger(t, "warning"),
							info: createLogger(t, "info"),
							verbose: createLogger(t, "verbose")
					}
			}
			function patchLogMethod(e, t) {
					t.log = (...t)=>{
							e.log(...t)
					}
			}
			function createLogger(e, t) {
					const n = Object.assign(e.extend(t), {
							level: t
					});
					if (patchLogMethod(e, n),
					shouldEnable(n)) {
							const e = kn.disable();
							kn.enable(e + "," + n.namespace)
					}
					return Fn.add(n),
					n
			}
			function shouldEnable(e) {
					return !!(Gn && $n[e.level] <= $n[Gn])
			}
			function isAzureLogLevel(e) {
					return zn.includes(e)
			}
			const Vn = createClientLogger("core-rest-pipeline");
			const Hn = new Set(["Deserialize", "Serialize", "Retry", "Sign"]);
			class HttpPipeline {
					constructor(e) {
							var t;
							this._policies = [],
							this._policies = null !== (t = null == e ? void 0 : e.slice(0)) && void 0 !== t ? t : [],
							this._orderedPolicies = void 0
					}
					addPolicy(e, t={}) {
							if (t.phase && t.afterPhase)
									throw new Error("Policies inside a phase cannot specify afterPhase.");
							if (t.phase && !Hn.has(t.phase))
									throw new Error(`Invalid phase name: ${t.phase}`);
							if (t.afterPhase && !Hn.has(t.afterPhase))
									throw new Error(`Invalid afterPhase name: ${t.afterPhase}`);
							this._policies.push({
									policy: e,
									options: t
							}),
							this._orderedPolicies = void 0
					}
					removePolicy(e) {
							const t = [];
							return this._policies = this._policies.filter((n=>!(e.name && n.policy.name === e.name || e.phase && n.options.phase === e.phase) || (t.push(n.policy),
							!1))),
							this._orderedPolicies = void 0,
							t
					}
					sendRequest(e, t) {
							return this.getOrderedPolicies().reduceRight(((e,t)=>n=>t.sendRequest(n, e)), (t=>e.sendRequest(t)))(t)
					}
					getOrderedPolicies() {
							return this._orderedPolicies || (this._orderedPolicies = this.orderPolicies()),
							this._orderedPolicies
					}
					clone() {
							return new HttpPipeline(this._policies)
					}
					static create() {
							return new HttpPipeline
					}
					orderPolicies() {
							const e = []
								, t = new Map;
							function createPhase(e) {
									return {
											name: e,
											policies: new Set,
											hasRun: !1,
											hasAfterPolicies: !1
									}
							}
							const n = createPhase("Serialize")
								, i = createPhase("None")
								, r = createPhase("Deserialize")
								, o = createPhase("Retry")
								, s = createPhase("Sign")
								, a = [n, i, r, o, s];
							function getPhase(e) {
									return "Retry" === e ? o : "Serialize" === e ? n : "Deserialize" === e ? r : "Sign" === e ? s : i
							}
							for (const e of this._policies) {
									const n = e.policy
										, i = e.options
										, r = n.name;
									if (t.has(r))
											throw new Error("Duplicate policy names not allowed in pipeline");
									const o = {
											policy: n,
											dependsOn: new Set,
											dependants: new Set
									};
									i.afterPhase && (o.afterPhase = getPhase(i.afterPhase),
									o.afterPhase.hasAfterPolicies = !0),
									t.set(r, o);
									getPhase(i.phase).policies.add(o)
							}
							for (const e of this._policies) {
									const {policy: n, options: i} = e
										, r = n.name
										, o = t.get(r);
									if (!o)
											throw new Error(`Missing node for policy ${r}`);
									if (i.afterPolicies)
											for (const e of i.afterPolicies) {
													const n = t.get(e);
													n && (o.dependsOn.add(n),
													n.dependants.add(o))
											}
									if (i.beforePolicies)
											for (const e of i.beforePolicies) {
													const n = t.get(e);
													n && (n.dependsOn.add(o),
													o.dependants.add(n))
											}
							}
							function walkPhase(n) {
									n.hasRun = !0;
									for (const i of n.policies)
											if ((!i.afterPhase || i.afterPhase.hasRun && !i.afterPhase.policies.size) && 0 === i.dependsOn.size) {
													e.push(i.policy);
													for (const e of i.dependants)
															e.dependsOn.delete(i);
													t.delete(i.policy.name),
													n.policies.delete(i)
											}
							}
							function walkPhases() {
									for (const e of a) {
											if (walkPhase(e),
											e.policies.size > 0 && e !== i)
													return void (i.hasRun || walkPhase(i));
											e.hasAfterPolicies && walkPhase(i)
									}
							}
							let l = 0;
							for (; t.size > 0; ) {
									l++;
									const t = e.length;
									if (walkPhases(),
									e.length <= t && l > 1)
											throw new Error("Cannot satisfy policy dependencies due to requirements cycle.")
							}
							return e
					}
			}
			const qn = "1.10.0";
			function getUserAgentValue(e) {
					const t = new Map;
					t.set("core-rest-pipeline", qn),
					function(e) {
							const t = self.navigator;
							e.set("OS", (t.oscpu || t.platform).replace(" ", ""))
					}(t);
					const n = function(e) {
							const t = [];
							for (const [n,i] of e) {
									const e = i ? `${n}/${i}` : n;
									t.push(e)
							}
							return t.join(" ")
					}(t);
					return e ? `${e} ${n}` : n
			}
			const jn = "x-ms-useragent";
			new Error("decompressResponsePolicy is not supported in browser environment");
			class AbortError extends Error {
					constructor(e) {
							super(e),
							this.name = "AbortError"
					}
			}
			function helpers_delay(e, t, n) {
					return new Promise(((i,r)=>{
							let o, s;
							const rejectOnAbort = ()=>r(new AbortError((null == n ? void 0 : n.abortErrorMsg) ? null == n ? void 0 : n.abortErrorMsg : "The operation was aborted."))
								, removeListeners = ()=>{
									(null == n ? void 0 : n.abortSignal) && s && n.abortSignal.removeEventListener("abort", s)
							}
							;
							if (s = ()=>(o && clearTimeout(o),
							removeListeners(),
							rejectOnAbort()),
							(null == n ? void 0 : n.abortSignal) && n.abortSignal.aborted)
									return rejectOnAbort();
							o = setTimeout((()=>{
									removeListeners(),
									i(t)
							}
							), e),
							(null == n ? void 0 : n.abortSignal) && n.abortSignal.addEventListener("abort", s)
					}
					))
			}
			function parseHeaderValueAsNumber(e, t) {
					const n = e.headers.get(t);
					if (!n)
							return;
					const i = Number(n);
					return Number.isNaN(i) ? void 0 : i
			}
			const Wn = "Retry-After"
				, Yn = ["retry-after-ms", "x-ms-retry-after-ms", Wn];
			function getRetryAfterInMs(e) {
					if (e && [429, 503].includes(e.status))
							try {
									for (const t of Yn) {
											const n = parseHeaderValueAsNumber(e, t);
											if (0 === n || n) {
													return n * (t === Wn ? 1e3 : 1)
											}
									}
									const t = e.headers.get(Wn);
									if (!t)
											return;
									const n = Date.parse(t) - Date.now();
									return Number.isFinite(n) ? Math.max(0, n) : void 0
							} catch (e) {
									return
							}
			}
			function exponentialRetryStrategy(e={}) {
					var t, n;
					const i = null !== (t = e.retryDelayInMs) && void 0 !== t ? t : 1e3
						, r = null !== (n = e.maxRetryDelayInMs) && void 0 !== n ? n : 64e3;
					let o = i;
					return {
							name: "exponentialRetryStrategy",
							retry({retryCount: t, response: n, responseError: i}) {
									const s = function(e) {
											if (!e)
													return !1;
											return "ETIMEDOUT" === e.code || "ESOCKETTIMEDOUT" === e.code || "ECONNREFUSED" === e.code || "ECONNRESET" === e.code || "ENOENT" === e.code
									}(i)
										, a = s && e.ignoreSystemErrors
										, l = function(e) {
											return Boolean(e && void 0 !== e.status && (e.status >= 500 || 408 === e.status) && 501 !== e.status && 505 !== e.status)
									}(n)
										, c = l && e.ignoreHttpStatusCodes
										, d = n && (function(e) {
											return Number.isFinite(getRetryAfterInMs(e))
									}(n) || !l);
									if (d || c || a)
											return {
													skipStrategy: !0
											};
									if (i && !s && !l)
											return {
													errorToThrow: i
											};
									const p = o * Math.pow(2, t)
										, u = Math.min(r, p);
									var h, m;
									return o = u / 2 + (h = 0,
									m = u / 2,
									h = Math.ceil(h),
									m = Math.floor(m),
									Math.floor(Math.random() * (m - h + 1)) + h),
									{
											retryAfterInMs: o
									}
							}
					}
			}
			const Kn = createClientLogger("core-rest-pipeline retryPolicy");
			function retryPolicy(e, t={
					maxRetries: 3
			}) {
					const n = t.logger || Kn;
					return {
							name: "retryPolicy",
							async sendRequest(i, r) {
									var o, s;
									let a, l, c = -1;
									e: for (; ; ) {
											c += 1,
											a = void 0,
											l = void 0;
											try {
													n.info(`Retry ${c}: Attempting to send request`, i.requestId),
													a = await r(i),
													n.info(`Retry ${c}: Received a response from request`, i.requestId)
											} catch (e) {
													if (n.error(`Retry ${c}: Received an error from request`, i.requestId),
													l = e,
													!e || "RestError" !== l.name)
															throw e;
													a = l.response
											}
											if (null === (o = i.abortSignal) || void 0 === o ? void 0 : o.aborted) {
													n.error(`Retry ${c}: Request aborted.`);
													throw new AbortError
											}
											if (c >= (null !== (s = t.maxRetries) && void 0 !== s ? s : 3)) {
													if (n.info(`Retry ${c}: Maximum retries reached. Returning the last received response, or throwing the last received error.`),
													l)
															throw l;
													if (a)
															return a;
													throw new Error("Maximum retries reached with no response or error to throw")
											}
											n.info(`Retry ${c}: Processing ${e.length} retry strategies.`);
											t: for (const t of e) {
													const e = t.logger || Kn;
													e.info(`Retry ${c}: Processing retry strategy ${t.name}.`);
													const n = t.retry({
															retryCount: c,
															response: a,
															responseError: l
													});
													if (n.skipStrategy) {
															e.info(`Retry ${c}: Skipped.`);
															continue t
													}
													const {errorToThrow: r, retryAfterInMs: o, redirectTo: s} = n;
													if (r)
															throw e.error(`Retry ${c}: Retry strategy ${t.name} throws error:`, r),
															r;
													if (o || 0 === o) {
															e.info(`Retry ${c}: Retry strategy ${t.name} retries after ${o}`),
															await helpers_delay(o, void 0, {
																	abortSignal: i.abortSignal
															});
															continue e
													}
													if (s) {
															e.info(`Retry ${c}: Retry strategy ${t.name} redirects to ${s}`),
															i.url = s;
															continue e
													}
											}
											if (l)
													throw n.info("None of the retry strategies could work with the received error. Throwing it."),
													l;
											if (a)
													return n.info("None of the retry strategies could work with the received response. Returning it."),
													a
									}
							}
					}
			}
			new Error("proxyPolicy is not supported in browser environment");
			const Qn = {
					span: Symbol.for("@azure/core-tracing span"),
					namespace: Symbol.for("@azure/core-tracing namespace")
			};
			function createTracingContext(e={}) {
					let t = new TracingContextImpl(e.parentContext);
					return e.span && (t = t.setValue(Qn.span, e.span)),
					e.namespace && (t = t.setValue(Qn.namespace, e.namespace)),
					t
			}
			class TracingContextImpl {
					constructor(e) {
							this._contextMap = e instanceof TracingContextImpl ? new Map(e._contextMap) : new Map
					}
					setValue(e, t) {
							const n = new TracingContextImpl(this);
							return n._contextMap.set(e, t),
							n
					}
					getValue(e) {
							return this._contextMap.get(e)
					}
					deleteValue(e) {
							const t = new TracingContextImpl(this);
							return t._contextMap.delete(e),
							t
					}
			}
			let Zn;
			function getInstrumenter() {
					return Zn || (Zn = {
							createRequestHeaders: ()=>({}),
							parseTraceparentHeader: ()=>{}
							,
							startSpan: (e,t)=>({
									span: {
											end: ()=>{}
											,
											isRecording: ()=>!1,
											recordException: ()=>{}
											,
											setAttribute: ()=>{}
											,
											setStatus: ()=>{}
									},
									tracingContext: createTracingContext({
											parentContext: t.tracingContext
									})
							}),
							withContext: (e,t,...n)=>t(...n)
					}),
					Zn
			}
			function tracingPolicy(e={}) {
					const t = getUserAgentValue(e.userAgentPrefix)
						, n = function() {
							try {
									return function(e) {
											const {namespace: t, packageName: n, packageVersion: i} = e;
											function startSpan(e, r, o) {
													var s;
													const a = getInstrumenter().startSpan(e, Object.assign(Object.assign({}, o), {
															packageName: n,
															packageVersion: i,
															tracingContext: null === (s = null == r ? void 0 : r.tracingOptions) || void 0 === s ? void 0 : s.tracingContext
													}));
													let l = a.tracingContext;
													const c = a.span;
													return l.getValue(Qn.namespace) || (l = l.setValue(Qn.namespace, t)),
													c.setAttribute("az.namespace", l.getValue(Qn.namespace)),
													{
															span: c,
															updatedOptions: Object.assign({}, r, {
																	tracingOptions: Object.assign(Object.assign({}, null == r ? void 0 : r.tracingOptions), {
																			tracingContext: l
																	})
															})
													}
											}
											function withContext(e, t, ...n) {
													return getInstrumenter().withContext(e, t, ...n)
											}
											return {
													startSpan,
													withSpan: async function(e, t, n, i) {
															const {span: r, updatedOptions: o} = startSpan(e, t, i);
															try {
																	const e = await withContext(o.tracingOptions.tracingContext, (()=>Promise.resolve(n(o, r))));
																	return r.setStatus({
																			status: "success"
																	}),
																	e
															} catch (e) {
																	throw r.setStatus({
																			status: "error",
																			error: e
																	}),
																	e
															} finally {
																	r.end()
															}
													},
													withContext,
													parseTraceparentHeader: function(e) {
															return getInstrumenter().parseTraceparentHeader(e)
													},
													createRequestHeaders: function(e) {
															return getInstrumenter().createRequestHeaders(e)
													}
											}
									}({
											namespace: "",
											packageName: "@azure/core-rest-pipeline",
											packageVersion: qn
									})
							} catch (e) {
									return void Vn.warning(`Error when creating the TracingClient: ${getErrorMessage(e)}`)
							}
					}();
					return {
							name: "tracingPolicy",
							async sendRequest(e, i) {
									var r, o;
									if (!n || !(null === (r = e.tracingOptions) || void 0 === r ? void 0 : r.tracingContext))
											return i(e);
									const {span: s, tracingContext: a} = null !== (o = function(e, t, n) {
											try {
													const {span: i, updatedOptions: r} = e.startSpan(`HTTP ${t.method}`, {
															tracingOptions: t.tracingOptions
													}, {
															spanKind: "client",
															spanAttributes: {
																	"http.method": t.method,
																	"http.url": t.url,
																	requestId: t.requestId
															}
													});
													if (!i.isRecording())
															return void i.end();
													n && i.setAttribute("http.user_agent", n);
													const o = e.createRequestHeaders(r.tracingOptions.tracingContext);
													for (const [e,n] of Object.entries(o))
															t.headers.set(e, n);
													return {
															span: i,
															tracingContext: r.tracingOptions.tracingContext
													}
											} catch (e) {
													return void Vn.warning(`Skipping creating a tracing span due to an error: ${getErrorMessage(e)}`)
											}
									}(n, e, t)) && void 0 !== o ? o : {};
									if (!s || !a)
											return i(e);
									try {
											const t = await n.withContext(a, i, e);
											return function(e, t) {
													try {
															e.setAttribute("http.status_code", t.status);
															const n = t.headers.get("x-ms-request-id");
															n && e.setAttribute("serviceRequestId", n),
															e.setStatus({
																	status: "success"
															}),
															e.end()
													} catch (e) {
															Vn.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(e)}`)
													}
											}(s, t),
											t
									} catch (e) {
											throw function(e, t) {
													try {
															e.setStatus({
																	status: "error",
																	error: isError(t) ? t : void 0
															}),
															((n = t)instanceof restError_RestError || isError(n) && "RestError" === n.name) && t.statusCode && e.setAttribute("http.status_code", t.statusCode),
															e.end()
													} catch (n) {
															Vn.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(n)}`)
													}
													var n
											}(s, e),
											e
									}
							}
					}
			}
			function createPipelineFromOptions(e) {
					const t = HttpPipeline.create();
					return t.addPolicy({
							name: "formDataPolicy",
							async sendRequest(e, t) {
									if (e.formData) {
											const t = e.formData
												, n = new FormData;
											for (const e of Object.keys(t)) {
													const i = t[e];
													if (Array.isArray(i))
															for (const t of i)
																	n.append(e, t);
													else
															n.append(e, i)
											}
											e.body = n,
											e.formData = void 0;
											const i = e.headers.get("Content-Type");
											i && -1 !== i.indexOf("application/x-www-form-urlencoded") ? e.body = new URLSearchParams(n).toString() : i && -1 !== i.indexOf("multipart/form-data") && e.headers.delete("Content-Type")
									}
									return t(e)
							}
					}),
					t.addPolicy(function(e={}) {
							const t = getUserAgentValue(e.userAgentPrefix);
							return {
									name: "userAgentPolicy",
									sendRequest: async(e,n)=>(e.headers.has(jn) || e.headers.set(jn, t),
									n(e))
							}
					}(e.userAgentOptions)),
					t.addPolicy(function(e="x-ms-client-request-id") {
							return {
									name: "setClientRequestIdPolicy",
									sendRequest: async(t,n)=>(t.headers.has(e) || t.headers.set(e, t.requestId),
									n(t))
							}
					}()),
					t.addPolicy(function(e={}) {
							var t;
							return {
									name: "defaultRetryPolicy",
									sendRequest: retryPolicy([{
											name: "throttlingRetryStrategy",
											retry({response: e}) {
													const t = getRetryAfterInMs(e);
													return Number.isFinite(t) ? {
															retryAfterInMs: t
													} : {
															skipStrategy: !0
													}
											}
									}, exponentialRetryStrategy(e)], {
											maxRetries: null !== (t = e.maxRetries) && void 0 !== t ? t : 3
									}).sendRequest
							}
					}(e.retryOptions), {
							phase: "Retry"
					}),
					t.addPolicy(tracingPolicy(e.userAgentOptions), {
							afterPhase: "Retry"
					}),
					t.addPolicy(function(e={}) {
							var t;
							const n = null !== (t = e.logger) && void 0 !== t ? t : Vn.info
								, i = new Sanitizer({
									additionalAllowedHeaderNames: e.additionalAllowedHeaderNames,
									additionalAllowedQueryParameters: e.additionalAllowedQueryParameters
							});
							return {
									name: "logPolicy",
									async sendRequest(e, t) {
											if (!n.enabled)
													return t(e);
											n(`Request: ${i.sanitize(e)}`);
											const r = await t(e);
											return n(`Response status code: ${r.status}`),
											n(`Headers: ${i.sanitize(r.headers)}`),
											r
									}
							}
					}(e.loggingOptions), {
							afterPhase: "Sign"
					}),
					t
			}
			const Xn = {
					forcedRefreshWindowInMs: 1e3,
					retryIntervalInMs: 3e3,
					refreshWindowInMs: 12e4
			};
			function createTokenCycler(e, t) {
					let n, i = null, r = null;
					const o = Object.assign(Object.assign({}, Xn), t)
						, s = {
							get isRefreshing() {
									return null !== i
							},
							get shouldRefresh() {
									var e;
									return !s.isRefreshing && (null !== (e = null == r ? void 0 : r.expiresOnTimestamp) && void 0 !== e ? e : 0) - o.refreshWindowInMs < Date.now()
							},
							get mustRefresh() {
									return null === r || r.expiresOnTimestamp - o.forcedRefreshWindowInMs < Date.now()
							}
					};
					function refresh(t, a) {
							var l;
							if (!s.isRefreshing) {
									i = async function(e, t, n) {
											async function tryGetAccessToken() {
													if (!(Date.now() < n)) {
															const t = await e();
															if (null === t)
																	throw new Error("Failed to refresh access token.");
															return t
													}
													try {
															return await e()
													} catch (e) {
															return null
													}
											}
											let i = await tryGetAccessToken();
											for (; null === i; )
													await helpers_delay(t),
													i = await tryGetAccessToken();
											return i
									}((()=>e.getToken(t, a)), o.retryIntervalInMs, null !== (l = null == r ? void 0 : r.expiresOnTimestamp) && void 0 !== l ? l : Date.now()).then((e=>(i = null,
									r = e,
									n = a.tenantId,
									r))).catch((e=>{
											throw i = null,
											r = null,
											n = void 0,
											e
									}
									))
							}
							return i
					}
					return async(e,t)=>n !== t.tenantId || Boolean(t.claims) || s.mustRefresh ? refresh(e, t) : (s.shouldRefresh && refresh(e, t),
					r)
			}
			const Jn = "bearerTokenAuthenticationPolicy";
			async function defaultAuthorizeRequest(e) {
					const {scopes: t, getAccessToken: n, request: i} = e
						, r = {
							abortSignal: i.abortSignal,
							tracingOptions: i.tracingOptions
					}
						, o = await n(t, r);
					o && e.request.headers.set("Authorization", `Bearer ${o.token}`)
			}
			function bearerTokenAuthenticationPolicy(e) {
					var t;
					const {credential: n, scopes: i, challengeCallbacks: r} = e
						, o = e.logger || Vn
						, s = Object.assign({
							authorizeRequest: null !== (t = null == r ? void 0 : r.authorizeRequest) && void 0 !== t ? t : defaultAuthorizeRequest,
							authorizeRequestOnChallenge: null == r ? void 0 : r.authorizeRequestOnChallenge
					}, r)
						, a = n ? createTokenCycler(n) : ()=>Promise.resolve(null);
					return {
							name: Jn,
							async sendRequest(e, t) {
									if (!e.url.toLowerCase().startsWith("https://"))
											throw new Error("Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.");
									let n, r;
									await s.authorizeRequest({
											scopes: Array.isArray(i) ? i : [i],
											request: e,
											getAccessToken: a,
											logger: o
									});
									try {
											n = await t(e)
									} catch (e) {
											r = e,
											n = e.response
									}
									if (s.authorizeRequestOnChallenge && 401 === (null == n ? void 0 : n.status) && function(e) {
											const t = e.headers.get("WWW-Authenticate");
											if (401 === e.status && t)
													return t
									}(n)) {
											if (await s.authorizeRequestOnChallenge({
													scopes: Array.isArray(i) ? i : [i],
													request: e,
													response: n,
													getAccessToken: a,
													logger: o
											}))
													return t(e)
									}
									if (r)
											throw r;
									return n
							}
					}
			}
			function interfaceHelpers_getPathStringFromParameter(e) {
					const {parameterPath: t, mapper: n} = e;
					let i;
					return i = "string" == typeof t ? t : Array.isArray(t) ? t.join(".") : n.serializedName,
					i
			}
			function serializationPolicy(e={}) {
					const t = e.stringifyXML;
					return {
							name: "serializationPolicy",
							async sendRequest(e, n) {
									const i = getOperationRequestInfo(e)
										, r = null == i ? void 0 : i.operationSpec
										, o = null == i ? void 0 : i.operationArguments;
									return r && o && (function(e, t, n) {
											var i, r;
											if (n.headerParameters)
													for (const i of n.headerParameters) {
															let r = operationHelpers_getOperationArgumentValueFromParameter(t, i);
															if (null != r || i.mapper.required) {
																	r = n.serializer.serialize(i.mapper, r, interfaceHelpers_getPathStringFromParameter(i));
																	const t = i.mapper.headerCollectionPrefix;
																	if (t)
																			for (const n of Object.keys(r))
																					e.headers.set(t + n, r[n]);
																	else
																			e.headers.set(i.mapper.serializedName || interfaceHelpers_getPathStringFromParameter(i), r)
															}
													}
											const o = null === (r = null === (i = t.options) || void 0 === i ? void 0 : i.requestOptions) || void 0 === r ? void 0 : r.customHeaders;
											if (o)
													for (const t of Object.keys(o))
															e.headers.set(t, o[t])
									}(e, o, r),
									function(e, t, n, i=function() {
											throw new Error("XML serialization unsupported!")
									}
									) {
											var r, o, s, a, l;
											const c = null === (r = t.options) || void 0 === r ? void 0 : r.serializerOptions
												, d = {
													xml: {
															rootName: null !== (o = null == c ? void 0 : c.xml.rootName) && void 0 !== o ? o : "",
															includeRoot: null !== (s = null == c ? void 0 : c.xml.includeRoot) && void 0 !== s && s,
															xmlCharKey: null !== (a = null == c ? void 0 : c.xml.xmlCharKey) && void 0 !== a ? a : gn
													}
											}
												, p = d.xml.xmlCharKey;
											if (n.requestBody && n.requestBody.mapper) {
													e.body = operationHelpers_getOperationArgumentValueFromParameter(t, n.requestBody);
													const r = n.requestBody.mapper
														, {required: o, serializedName: s, xmlName: a, xmlElementName: c, xmlNamespace: u, xmlNamespacePrefix: h, nullable: m} = r
														, g = r.type.name;
													try {
															if (void 0 !== e.body && null !== e.body || m && null === e.body || o) {
																	const t = interfaceHelpers_getPathStringFromParameter(n.requestBody);
																	e.body = n.serializer.serialize(r, e.body, t, d);
																	const o = g === wn;
																	if (n.isXML) {
																			const t = h ? `xmlns:${h}` : "xmlns"
																				, n = function(e, t, n, i, r) {
																					if (e && !["Composite", "Sequence", "Dictionary"].includes(n)) {
																							const n = {};
																							return n[r.xml.xmlCharKey] = i,
																							n[mn] = {
																									[t]: e
																							},
																							n
																					}
																					return i
																			}(u, t, g, e.body, d);
																			g === Tn ? e.body = i(function(e, t, n, i) {
																					Array.isArray(e) || (e = [e]);
																					if (!n || !i)
																							return {
																									[t]: e
																							};
																					const r = {
																							[t]: e
																					};
																					return r[mn] = {
																							[n]: i
																					},
																					r
																			}(n, c || a || s, t, u), {
																					rootName: a || s,
																					xmlCharKey: p
																			}) : o || (e.body = i(n, {
																					rootName: a || s,
																					xmlCharKey: p
																			}))
																	} else {
																			if (g === In && ((null === (l = n.contentType) || void 0 === l ? void 0 : l.match("text/plain")) || "text" === n.mediaType))
																					return;
																			o || (e.body = JSON.stringify(e.body))
																	}
															}
													} catch (e) {
															throw new Error(`Error "${e.message}" occurred in serializing the payload - ${JSON.stringify(s, void 0, "  ")}.`)
													}
											} else if (n.formDataParameters && n.formDataParameters.length > 0) {
													e.formData = {};
													for (const i of n.formDataParameters) {
															const r = operationHelpers_getOperationArgumentValueFromParameter(t, i);
															if (null != r) {
																	const t = i.mapper.serializedName || interfaceHelpers_getPathStringFromParameter(i);
																	e.formData[t] = n.serializer.serialize(i.mapper, r, interfaceHelpers_getPathStringFromParameter(i), d)
															}
													}
											}
									}(e, o, r, t)),
									n(e)
							}
					}
			}
			function isReadableStream(e) {
					return Boolean(e && "function" == typeof e.getReader && "function" == typeof e.tee)
			}
			class FetchHttpClient {
					async sendRequest(e) {
							if ("https:" !== new URL(e.url).protocol && !e.allowInsecureConnection)
									throw new Error(`Cannot connect to ${e.url} while allowInsecureConnection is false.`);
							if (e.proxySettings)
									throw new Error("HTTP proxy is not supported in browser environment");
							try {
									return await async function(e) {
											const {abortController: t, abortControllerCleanup: n} = function(e) {
													const t = new AbortController;
													let n, i;
													if (e.abortSignal) {
															if (e.abortSignal.aborted)
																	throw new AbortError("The operation was aborted.");
															i = e=>{
																	"abort" === e.type && t.abort()
															}
															,
															e.abortSignal.addEventListener("abort", i),
															n = ()=>{
																	var t;
																	i && (null === (t = e.abortSignal) || void 0 === t || t.removeEventListener("abort", i))
															}
													}
													e.timeout > 0 && setTimeout((()=>{
															t.abort()
													}
													), e.timeout);
													return {
															abortController: t,
															abortControllerCleanup: n
													}
											}(e);
											try {
													const i = function(e) {
															const t = new Headers;
															for (const [n,i] of e)
																	t.append(n, i);
															return t
													}(e.headers)
														, r = function(e) {
															const t = "function" == typeof e.body ? e.body() : e.body;
															if (function(e) {
																	return e && "function" == typeof e.pipe
															}(t))
																	throw new Error("Node streams are not supported in browser environment.");
															return isReadableStream(t) ? buildBodyStream(t, e.onUploadProgress) : t
													}(e);
													return async function(e, t) {
															var n, i;
															const r = function(e) {
																	const t = createHttpHeaders();
																	for (const [n,i] of e.headers)
																			t.set(n, i);
																	return t
															}(e)
																, o = {
																	request: t,
																	headers: r,
																	status: e.status
															}
																, s = isReadableStream(e.body) ? buildBodyStream(e.body, t.onDownloadProgress) : e.body;
															if ((null === (n = t.streamResponseStatusCodes) || void 0 === n ? void 0 : n.has(Number.POSITIVE_INFINITY)) || (null === (i = t.streamResponseStatusCodes) || void 0 === i ? void 0 : i.has(o.status)))
																	if (t.enableBrowserStreams)
																			o.browserStreamBody = null != s ? s : void 0;
																	else {
																			const e = new Response(s);
																			o.blobBody = e.blob()
																	}
															else {
																	const e = new Response(s);
																	o.bodyAsText = await e.text()
															}
															return o
													}(await fetch(e.url, {
															body: r,
															method: e.method,
															headers: i,
															signal: t.signal,
															credentials: e.withCredentials ? "include" : "same-origin",
															cache: "no-store"
													}), e)
											} finally {
													n && n()
											}
									}(e)
							} catch (t) {
									throw function(e, t) {
											var n;
											return e && "AbortError" === (null == e ? void 0 : e.name) ? e : new restError_RestError(`Error sending request: ${e.message}`,{
													code: null !== (n = null == e ? void 0 : e.code) && void 0 !== n ? n : restError_RestError.REQUEST_SEND_ERROR,
													request: t
											})
									}(t, e)
							}
					}
			}
			function buildBodyStream(e, t) {
					let n = 0;
					if (function(e) {
							return void 0 !== e.pipeThrough && void 0 !== self.TransformStream
					}(e))
							return e.pipeThrough(new TransformStream({
									transform(e, i) {
											null !== e ? (i.enqueue(e),
											n += e.length,
											t && t({
													loadedBytes: n
											})) : i.terminate()
									}
							}));
					{
							const i = e.getReader();
							return new ReadableStream({
									async pull(e) {
											var r;
											const {done: o, value: s} = await i.read();
											if (o || !s)
													return e.close(),
													void i.releaseLock();
											n += null !== (r = null == s ? void 0 : s.length) && void 0 !== r ? r : 0,
											e.enqueue(s),
											t && t({
													loadedBytes: n
											})
									}
							})
					}
			}
			function defaultHttpClient_browser_createDefaultHttpClient() {
					return new FetchHttpClient
			}
			let ei;
			const ti = {
					CSV: ",",
					SSV: " ",
					Multi: "Multi",
					TSV: "\t",
					Pipes: "|"
			};
			function getRequestUrl(e, t, n, i) {
					const r = function(e, t, n) {
							var i;
							const r = new Map;
							if (null === (i = e.urlParameters) || void 0 === i ? void 0 : i.length)
									for (const i of e.urlParameters) {
											let o = operationHelpers_getOperationArgumentValueFromParameter(t, i, n);
											const s = interfaceHelpers_getPathStringFromParameter(i);
											o = e.serializer.serialize(i.mapper, o, s),
											i.skipEncoding || (o = encodeURIComponent(o)),
											r.set(`{${i.mapper.serializedName || s}}`, o)
									}
							return r
					}(t, n, i);
					let o = !1
						, s = urlHelpers_replaceAll(e, r);
					if (t.path) {
							let e = urlHelpers_replaceAll(t.path, r);
							"/{nextLink}" === t.path && e.startsWith("/") && (e = e.substring(1)),
							e.includes("://") ? (s = e,
							o = !0) : s = function(e, t) {
									if (!t)
											return e;
									const n = new URL(e);
									let i = n.pathname;
									i.endsWith("/") || (i = `${i}/`);
									t.startsWith("/") && (t = t.substring(1));
									const r = t.indexOf("?");
									if (-1 !== r) {
											const e = t.substring(0, r)
												, o = t.substring(r + 1);
											i += e,
											o && (n.search = n.search ? `${n.search}&${o}` : o)
									} else
											i += t;
									return n.pathname = i,
									n.toString()
							}(s, e)
					}
					const {queryParams: a, sequenceParams: l} = function(e, t, n) {
							var i;
							const r = new Map
								, o = new Set;
							if (null === (i = e.queryParameters) || void 0 === i ? void 0 : i.length)
									for (const i of e.queryParameters) {
											"Sequence" === i.mapper.type.name && i.mapper.serializedName && o.add(i.mapper.serializedName);
											let s = operationHelpers_getOperationArgumentValueFromParameter(t, i, n);
											if (null != s || i.mapper.required) {
													s = e.serializer.serialize(i.mapper, s, interfaceHelpers_getPathStringFromParameter(i));
													const t = i.collectionFormat ? ti[i.collectionFormat] : "";
													if (Array.isArray(s) && (s = s.map((e=>null == e ? "" : e))),
													"Multi" === i.collectionFormat && 0 === s.length)
															continue;
													!Array.isArray(s) || "SSV" !== i.collectionFormat && "TSV" !== i.collectionFormat || (s = s.join(t)),
													i.skipEncoding || (s = Array.isArray(s) ? s.map((e=>encodeURIComponent(e))) : encodeURIComponent(s)),
													!Array.isArray(s) || "CSV" !== i.collectionFormat && "Pipes" !== i.collectionFormat || (s = s.join(t)),
													r.set(i.mapper.serializedName || interfaceHelpers_getPathStringFromParameter(i), s)
											}
									}
							return {
									queryParams: r,
									sequenceParams: o
							}
					}(t, n, i);
					return s = function(e, t, n, i=!1) {
							if (0 === t.size)
									return e;
							const r = new URL(e)
								, o = function(e) {
									const t = new Map;
									if (!e || "?" !== e[0])
											return t;
									const n = (e = e.slice(1)).split("&");
									for (const e of n) {
											const [n,i] = e.split("=", 2)
												, r = t.get(n);
											r ? Array.isArray(r) ? r.push(i) : t.set(n, [r, i]) : t.set(n, i)
									}
									return t
							}(r.search);
							for (const [e,r] of t) {
									const t = o.get(e);
									if (Array.isArray(t))
											if (Array.isArray(r)) {
													t.push(...r);
													const n = new Set(t);
													o.set(e, Array.from(n))
											} else
													t.push(r);
									else
											t ? (Array.isArray(r) ? r.unshift(t) : n.has(e) && o.set(e, [t, r]),
											i || o.set(e, r)) : o.set(e, r)
							}
							const s = [];
							for (const [e,t] of o)
									if ("string" == typeof t)
											s.push(`${e}=${t}`);
									else if (Array.isArray(t))
											for (const n of t)
													s.push(`${e}=${n}`);
									else
											s.push(`${e}=${t}`);
							return r.search = s.length ? `?${s.join("&")}` : "",
							r.toString()
					}(s, a, l, o),
					s
			}
			function urlHelpers_replaceAll(e, t) {
					let n = e;
					for (const [e,i] of t)
							n = n.split(e).join(i);
					return n
			}
			const ni = createClientLogger("core-client");
			class serviceClient_ServiceClient {
					constructor(e={}) {
							var t, n;
							if (this._requestContentType = e.requestContentType,
							this._endpoint = null !== (t = e.endpoint) && void 0 !== t ? t : e.baseUri,
							e.baseUri && ni.warning("The baseUri option for SDK Clients has been deprecated, please use endpoint instead."),
							this._allowInsecureConnection = e.allowInsecureConnection,
							this._httpClient = e.httpClient || (ei || (ei = defaultHttpClient_browser_createDefaultHttpClient()),
							ei),
							this.pipeline = e.pipeline || function(e) {
									const t = function(e) {
											if (e.credentialScopes) {
													const t = e.credentialScopes;
													return Array.isArray(t) ? t.map((e=>new URL(e).toString())) : new URL(t).toString()
											}
											if (e.endpoint)
													return `${e.endpoint}/.default`;
											if (e.baseUri)
													return `${e.baseUri}/.default`;
											if (e.credential && !e.credentialScopes)
													throw new Error("When using credentials, the ServiceClientOptions must contain either a endpoint or a credentialScopes. Unable to create a bearerTokenAuthenticationPolicy");
											return
									}(e)
										, n = e.credential && t ? {
											credentialScopes: t,
											credential: e.credential
									} : void 0;
									return function(e={}) {
											const t = createPipelineFromOptions(null != e ? e : {});
											return e.credentialOptions && t.addPolicy(bearerTokenAuthenticationPolicy({
													credential: e.credentialOptions.credential,
													scopes: e.credentialOptions.credentialScopes
											})),
											t.addPolicy(serializationPolicy(e.serializationOptions), {
													phase: "Serialize"
											}),
											t.addPolicy(deserializationPolicy_deserializationPolicy(e.deserializationOptions), {
													phase: "Deserialize"
											}),
											t
									}(Object.assign(Object.assign({}, e), {
											credentialOptions: n
									}))
							}(e),
							null === (n = e.additionalPolicies) || void 0 === n ? void 0 : n.length)
									for (const {policy: t, position: n} of e.additionalPolicies) {
											const e = "perRetry" === n ? "Sign" : void 0;
											this.pipeline.addPolicy(t, {
													afterPhase: e
											})
									}
					}
					async sendRequest(e) {
							return this.pipeline.sendRequest(this._httpClient, e)
					}
					async sendOperationRequest(e, t) {
							const n = t.baseUrl || this._endpoint;
							if (!n)
									throw new Error("If operationSpec.baseUrl is not specified, then the ServiceClient must have a endpoint string property that contains the base URL to use.");
							const i = function(e) {
									return new PipelineRequestImpl(e)
							}({
									url: getRequestUrl(n, t, e, this)
							});
							i.method = t.httpMethod;
							const r = getOperationRequestInfo(i);
							r.operationSpec = t,
							r.operationArguments = e;
							const o = t.contentType || this._requestContentType;
							o && t.requestBody && i.headers.set("Content-Type", o);
							const s = e.options;
							if (s) {
									const e = s.requestOptions;
									e && (e.timeout && (i.timeout = e.timeout),
									e.onUploadProgress && (i.onUploadProgress = e.onUploadProgress),
									e.onDownloadProgress && (i.onDownloadProgress = e.onDownloadProgress),
									void 0 !== e.shouldDeserialize && (r.shouldDeserialize = e.shouldDeserialize),
									e.allowInsecureConnection && (i.allowInsecureConnection = !0)),
									s.abortSignal && (i.abortSignal = s.abortSignal),
									s.tracingOptions && (i.tracingOptions = s.tracingOptions)
							}
							this._allowInsecureConnection && (i.allowInsecureConnection = !0),
							void 0 === i.streamResponseStatusCodes && (i.streamResponseStatusCodes = function(e) {
									const t = new Set;
									for (const n in e.responses) {
											const i = e.responses[n];
											i.bodyMapper && i.bodyMapper.type.name === wn && t.add(Number(n))
									}
									return t
							}(t));
							try {
									const e = await this.sendRequest(i)
										, n = utils_flattenResponse(e, t.responses[e.status]);
									return (null == s ? void 0 : s.onResponse) && s.onResponse(e, n),
									n
							} catch (e) {
									if ("object" == typeof e && (null == e ? void 0 : e.response)) {
											const n = e.response
												, i = utils_flattenResponse(n, t.responses[e.statusCode] || t.responses.default);
											e.details = i,
											(null == s ? void 0 : s.onResponse) && s.onResponse(n, i, e)
									}
									throw e
							}
					}
			}
			async function authorizeRequestOnClaimChallenge(e) {
					const {scopes: t, response: n} = e
						, i = e.logger || ni
						, r = n.headers.get("WWW-Authenticate");
					if (!r)
							return i.info("The WWW-Authenticate header was missing. Failed to perform the Continuous Access Evaluation authentication flow."),
							!1;
					const o = function(e) {
							return `, ${e.trim()}`.split(", Bearer ").filter((e=>e)).map((e=>`${e.trim()}, `.split('", ').filter((e=>e)).map((e=>(([e,t])=>({
									[e]: t
							}))(e.trim().split('="')))).reduce(((e,t)=>Object.assign(Object.assign({}, e), t)), {})))
					}(r) || []
						, s = o.find((e=>e.claims));
					if (!s)
							return i.info('The WWW-Authenticate header was missing the necessary "claims" to perform the Continuous Access Evaluation authentication flow.'),
							!1;
					const a = await e.getAccessToken(s.scope ? [s.scope] : t, {
							claims: (l = s.claims,
							atob(l))
					});
					var l;
					return !!a && (e.request.headers.set("Authorization", `Bearer ${a.token}`),
					!0)
			}
			const ii = {
					type: {
							name: "Composite",
							className: "CreateCompletionRequest",
							modelProperties: {
									model: {
											serializedName: "model",
											type: {
													name: "String"
											}
									},
									prompt: {
											defaultValue: "",
											serializedName: "prompt",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									suffix: {
											serializedName: "suffix",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									maxTokens: {
											defaultValue: 16,
											constraints: {
													InclusiveMinimum: 0
											},
											serializedName: "max_tokens",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									temperature: {
											defaultValue: 1,
											constraints: {
													InclusiveMaximum: 2,
													InclusiveMinimum: 0
											},
											serializedName: "temperature",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									topP: {
											defaultValue: 1,
											constraints: {
													InclusiveMaximum: 1,
													InclusiveMinimum: 0
											},
											serializedName: "top_p",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									n: {
											defaultValue: 1,
											constraints: {
													InclusiveMaximum: 128,
													InclusiveMinimum: 1
											},
											serializedName: "n",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									stream: {
											defaultValue: !1,
											serializedName: "stream",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									logprobs: {
											constraints: {
													InclusiveMaximum: 5,
													InclusiveMinimum: 0
											},
											serializedName: "logprobs",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									echo: {
											defaultValue: !1,
											serializedName: "echo",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									stop: {
											serializedName: "stop",
											type: {
													name: "Composite",
													className: "CreateCompletionRequestStop"
											}
									},
									presencePenalty: {
											defaultValue: 0,
											constraints: {
													InclusiveMaximum: 2,
													InclusiveMinimum: -2
											},
											serializedName: "presence_penalty",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									frequencyPenalty: {
											defaultValue: 0,
											constraints: {
													InclusiveMaximum: 2,
													InclusiveMinimum: -2
											},
											serializedName: "frequency_penalty",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									bestOf: {
											defaultValue: 1,
											constraints: {
													InclusiveMaximum: 20,
													InclusiveMinimum: 0
											},
											serializedName: "best_of",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									logitBias: {
											serializedName: "logit_bias",
											nullable: !0,
											type: {
													name: "Dictionary",
													value: {
															type: {
																	name: "any"
															}
													}
											}
									},
									user: {
											serializedName: "user",
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, ri = {
					type: {
							name: "Composite",
							className: "CreateCompletionRequestStop"
					}
			}
				, oi = {
					type: {
							name: "Composite",
							className: "CreateCompletionResponse",
							modelProperties: {
									id: {
											serializedName: "id",
											type: {
													name: "String"
											}
									},
									object: {
											serializedName: "object",
											type: {
													name: "String"
											}
									},
									created: {
											serializedName: "created",
											type: {
													name: "Number"
											}
									},
									model: {
											serializedName: "model",
											type: {
													name: "String"
											}
									},
									choices: {
											serializedName: "choices",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "CreateCompletionResponseChoicesItem"
															}
													}
											}
									}
							}
					}
			}
				, si = {
					type: {
							name: "Composite",
							className: "CreateCompletionResponseChoicesItem",
							modelProperties: {
									text: {
											serializedName: "text",
											type: {
													name: "String"
											}
									},
									index: {
											serializedName: "index",
											type: {
													name: "Number"
											}
									},
									logprobs: {
											serializedName: "logprobs",
											type: {
													name: "Composite",
													className: "CreateCompletionResponseChoicesItemLogprobs"
											}
									},
									finishReason: {
											serializedName: "finish_reason",
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, ai = {
					type: {
							name: "Composite",
							className: "CreateCompletionResponseChoicesItemLogprobs",
							modelProperties: {
									tokens: {
											serializedName: "tokens",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									tokenLogprobs: {
											serializedName: "token_logprobs",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Number"
															}
													}
											}
									},
									topLogprobs: {
											serializedName: "top_logprobs",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Dictionary",
																	value: {
																			type: {
																					name: "any"
																			}
																	}
															}
													}
											}
									},
									textOffset: {
											serializedName: "text_offset",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Number"
															}
													}
											}
									}
							}
					}
			}
				, li = {
					parameterPath: "body",
					mapper: ii
			};
			class CompletionImpl {
					constructor(e) {
							this.client = e
					}
					create(e, t) {
							return this.client.sendOperationRequest({
									body: e,
									options: t
							}, di)
					}
			}
			const ci = createSerializer(t, !1)
				, di = {
					path: "/completions",
					httpMethod: "POST",
					responses: {
							200: {
									bodyMapper: oi
							}
					},
					requestBody: li,
					urlParameters: [{
							parameterPath: "$host",
							mapper: {
									serializedName: "$host",
									required: !0,
									type: {
											name: "String"
									}
							},
							skipEncoding: !0
					}],
					headerParameters: [{
							parameterPath: ["options", "contentType"],
							mapper: {
									defaultValue: "application/json",
									isConstant: !0,
									serializedName: "Content-Type",
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: "accept",
							mapper: {
									defaultValue: "application/json",
									isConstant: !0,
									serializedName: "Accept",
									type: {
											name: "String"
									}
							}
					}],
					mediaType: "json",
					serializer: ci
			};
			class OpenAIAPI extends serviceClient_ServiceClient {
					constructor(e) {
							var t, n;
							e || (e = {});
							const i = "azsdk-js-api-client-factory/1.0.0-beta.1"
								, r = e.userAgentOptions && e.userAgentOptions.userAgentPrefix ? `${e.userAgentOptions.userAgentPrefix} ${i}` : `${i}`
								, o = {
									requestContentType: "application/json; charset=utf-8",
									...e,
									userAgentOptions: {
											userAgentPrefix: r
									},
									baseUri: null !== (n = null !== (t = e.endpoint) && void 0 !== t ? t : e.baseUri) && void 0 !== n ? n : "https://api.openai.com/v1"
							};
							if (super(o),
							(null == e ? void 0 : e.pipeline) && e.pipeline.getOrderedPolicies().length > 0) {
									e.pipeline.getOrderedPolicies().some((e=>e.name === Jn)) || (this.pipeline.removePolicy({
											name: Jn
									}),
									this.pipeline.addPolicy(bearerTokenAuthenticationPolicy({
											scopes: `${o.baseUri}/.default`,
											challengeCallbacks: {
													authorizeRequestOnChallenge: authorizeRequestOnClaimChallenge
											}
									})))
							}
							this.$host = e.$host || "https://api.openai.com/v1",
							this.completion = new CompletionImpl(this)
					}
			}
			const pi = {
					type: {
							name: "Composite",
							className: "AutoSuggestResultModel",
							modelProperties: {
									url: {
											serializedName: "url",
											type: {
													name: "String"
											}
									},
									displayText: {
											serializedName: "displayText",
											type: {
													name: "String"
											}
									},
									query: {
											serializedName: "query",
											type: {
													name: "String"
											}
									},
									searchKind: {
											serializedName: "searchKind",
											type: {
													name: "String"
											}
									},
									order: {
											serializedName: "order",
											type: {
													name: "Number"
											}
									}
							}
					}
			}
				, ui = {
					type: {
							name: "Composite",
							className: "FaceRectangle",
							modelProperties: {
									height: {
											serializedName: "height",
											type: {
													name: "Number"
											}
									},
									width: {
											serializedName: "width",
											type: {
													name: "Number"
											}
									},
									top: {
											serializedName: "top",
											type: {
													name: "Number"
											}
									},
									left: {
											serializedName: "left",
											type: {
													name: "Number"
											}
									}
							}
					}
			}
				, hi = {
					type: {
							name: "Composite",
							className: "EmulatorConfig",
							modelProperties: {
									id: {
											serializedName: "id",
											type: {
													name: "String"
											}
									},
									dataType: {
											serializedName: "dataType",
											type: {
													name: "String"
											}
									},
									logId: {
											serializedName: "logId",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									logLevel: {
											serializedName: "logLevel",
											type: {
													name: "String"
											}
									},
									topicFilter: {
											serializedName: "topicFilter",
											type: {
													name: "String"
											}
									},
									logTopics: {
											serializedName: "logTopics",
											nullable: !0,
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									routerLogId: {
											serializedName: "routerLogId",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									routerLogLevel: {
											serializedName: "routerLogLevel",
											type: {
													name: "String"
											}
									},
									routerTopicFilter: {
											serializedName: "routerTopicFilter",
											type: {
													name: "String"
											}
									},
									routerLogTopics: {
											serializedName: "routerLogTopics",
											nullable: !0,
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									controllerLogId: {
											serializedName: "controllerLogId",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									controllerLogLevel: {
											serializedName: "controllerLogLevel",
											type: {
													name: "String"
											}
									},
									controllerTopicFilter: {
											serializedName: "controllerTopicFilter",
											type: {
													name: "String"
											}
									},
									controllerLogTopics: {
											serializedName: "controllerLogTopics",
											nullable: !0,
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									createController: {
											serializedName: "createController",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									syncHost: {
											serializedName: "syncHost",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									syncPort: {
											serializedName: "syncPort",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									logoUrl: {
											serializedName: "logoUrl",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									resizeMode: {
											serializedName: "resizeMode",
											type: {
													name: "String"
											}
									},
									minGlobalScaleFactor: {
											serializedName: "minGlobalScaleFactor",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									maxGlobalScaleFactor: {
											serializedName: "maxGlobalScaleFactor",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									deviceSpacing: {
											serializedName: "deviceSpacing",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									outerMarginTop: {
											serializedName: "outerMarginTop",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									outerMarginRight: {
											serializedName: "outerMarginRight",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									outerMarginBottom: {
											serializedName: "outerMarginBottom",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									outerMarginLeft: {
											serializedName: "outerMarginLeft",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									allowFullScreenMode: {
											serializedName: "allowFullScreenMode",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									allowFullMenu: {
											serializedName: "allowFullMenu",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									availableDevices: {
											serializedName: "availableDevices",
											nullable: !0,
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "DeviceConfig"
															}
													}
											}
									},
									backdropMode: {
											serializedName: "backdropMode",
											type: {
													name: "String"
											}
									},
									backdropSource: {
											serializedName: "backdropSource",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									timelineCurrent: {
											serializedName: "timelineCurrent",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									timelineStart: {
											serializedName: "timelineStart",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									timelineEnd: {
											serializedName: "timelineEnd",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									timelineSegments: {
											serializedName: "timelineSegments",
											nullable: !0,
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "TimelineSegmentConfig"
															}
													}
											}
									}
							}
					}
			}
				, mi = {
					type: {
							name: "Composite",
							className: "DeviceConfig",
							modelProperties: {
									id: {
											serializedName: "id",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									policyProvider: {
											serializedName: "policyProvider",
											type: {
													name: "Enum",
													allowedValues: ["Windows10", "Windows11", "Windows12", "Other"]
											}
									},
									showDevice: {
											serializedName: "showDevice",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									projectId: {
											serializedName: "projectId",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									deviceScale: {
											serializedName: "deviceScale",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									useCounterRotation: {
											serializedName: "useCounterRotation",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									defaultRotation: {
											serializedName: "defaultRotation",
											type: {
													name: "String"
											}
									},
									allowedRotations: {
											serializedName: "allowedRotations",
											nullable: !0,
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									defaultLayout: {
											serializedName: "defaultLayout",
											type: {
													name: "String"
											}
									},
									allowedLayouts: {
											serializedName: "allowedLayouts",
											nullable: !0,
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									activeScreenTiles: {
											serializedName: "activeScreenTiles",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									allowAddRemoveScreenTiles: {
											serializedName: "allowAddRemoveScreenTiles",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									maxScreenTiles: {
											serializedName: "maxScreenTiles",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									dualScreenGap: {
											serializedName: "dualScreenGap",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									selectionIndicatorYOffset: {
											serializedName: "selectionIndicatorYOffset",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									cornerRadius: {
											serializedName: "cornerRadius",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									defaultScreenWidth: {
											serializedName: "defaultScreenWidth",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									defaultScreenHeight: {
											serializedName: "defaultScreenHeight",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									showOptionsPane: {
											serializedName: "showOptionsPane",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									screenContentUrls: {
											serializedName: "screenContentUrls",
											nullable: !0,
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									isLargeScreen: {
											serializedName: "isLargeScreen",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									autoGenerateScreenQueryString: {
											serializedName: "autoGenerateScreenQueryString",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									allowFullOSMode: {
											serializedName: "allowFullOSMode",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									useGlobalSync: {
											serializedName: "useGlobalSync",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									showShadows: {
											serializedName: "showShadows",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									frameBackgroundColor: {
											serializedName: "frameBackgroundColor",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									allowSleepMode: {
											serializedName: "allowSleepMode",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									allowComposeMode: {
											serializedName: "allowComposeMode",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									allowPenMode: {
											serializedName: "allowPenMode",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									chrome: {
											serializedName: "chrome",
											nullable: !0,
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "DeviceChromeLayer"
															}
													}
											}
									}
							}
					}
			}
				, gi = {
					type: {
							name: "Composite",
							className: "DeviceChromeLayer",
							modelProperties: {
									mode: {
											serializedName: "mode",
											type: {
													name: "String"
											}
									},
									source: {
											serializedName: "source",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									width: {
											serializedName: "width",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									height: {
											serializedName: "height",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									transform: {
											serializedName: "transform",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									cornerRadius: {
											serializedName: "cornerRadius",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									offsetTop: {
											serializedName: "offsetTop",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									offsetBottom: {
											serializedName: "offsetBottom",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									offsetLeft: {
											serializedName: "offsetLeft",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									offsetRight: {
											serializedName: "offsetRight",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									zIndex: {
											serializedName: "zIndex",
											nullable: !0,
											type: {
													name: "Number"
											}
									}
							}
					}
			}
				, _i = {
					type: {
							name: "Composite",
							className: "TimelineSegmentConfig",
							modelProperties: {
									endTime: {
											serializedName: "endTime",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									visibleDevices: {
											serializedName: "visibleDevices",
											nullable: !0,
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									}
							}
					}
			}
				, fi = {
					type: {
							name: "Composite",
							className: "PrevalentColorSelectRequestModel",
							modelProperties: {
									input: {
											serializedName: "input",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "QuantizedColor"
															}
													}
											}
									},
									config: {
											serializedName: "config",
											type: {
													name: "Composite",
													className: "PrevalentColorSelectorConfig"
											}
									}
							}
					}
			}
				, yi = {
					type: {
							name: "Composite",
							className: "QuantizedColor",
							modelProperties: {
									count: {
											serializedName: "count",
											type: {
													name: "Number"
											}
									},
									color: {
											serializedName: "color",
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, vi = {
					type: {
							name: "Composite",
							className: "PrevalentColorSelectorConfig",
							modelProperties: {
									textSelectionMode: {
											serializedName: "textSelectionMode",
											type: {
													name: "Enum",
													allowedValues: ["PreferedOnly", "AlternateOnly", "BestContrast", "PreferedUnlessLightImage", "PreferedUnlessDarkImage", "AlternateUnlessLightImage", "AlternateUnlessDarkImage"]
											}
									},
									preferedTextColor: {
											serializedName: "preferedTextColor",
											type: {
													name: "Composite",
													className: "NormalizedRGB"
											}
									},
									alternateTextColor: {
											serializedName: "alternateTextColor",
											type: {
													name: "Composite",
													className: "NormalizedRGB"
											}
									},
									lightColorThreshold: {
											serializedName: "lightColorThreshold",
											type: {
													name: "Number"
											}
									},
									lightImageThreshold: {
											serializedName: "lightImageThreshold",
											type: {
													name: "Number"
											}
									},
									darkColorThreshold: {
											serializedName: "darkColorThreshold",
											type: {
													name: "Number"
											}
									},
									darkImageThreshold: {
											serializedName: "darkImageThreshold",
											type: {
													name: "Number"
											}
									},
									hslPreFilters: {
											serializedName: "hslPreFilters",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "HSLFilter"
															}
													}
											}
									},
									hslfilters: {
											serializedName: "hslfilters",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "HSLFilter"
															}
													}
											}
									},
									saturatedRedPreFilter: {
											serializedName: "saturatedRedPreFilter",
											type: {
													name: "Composite",
													className: "HSLFilter"
											}
									},
									preferedTextHSLFilter: {
											serializedName: "preferedTextHSLFilter",
											type: {
													name: "Composite",
													className: "HSLFilter"
											}
									},
									alternateTextHSLFilter: {
											serializedName: "alternateTextHSLFilter",
											type: {
													name: "Composite",
													className: "HSLFilter"
											}
									},
									brownFilter: {
											serializedName: "brownFilter",
											type: {
													name: "Composite",
													className: "HSLFilter"
											}
									},
									gradientSearchMode: {
											serializedName: "gradientSearchMode",
											type: {
													name: "Enum",
													allowedValues: ["Lighter", "Darker", "Alternating"]
											}
									},
									gradientSteps: {
											serializedName: "gradientSteps",
											type: {
													name: "Number"
											}
									},
									lighterGradientSearch: {
											serializedName: "lighterGradientSearch",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Number"
															}
													}
											}
									},
									darkerGradientSearch: {
											serializedName: "darkerGradientSearch",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Number"
															}
													}
											}
									},
									alternatingGradientSearch: {
											serializedName: "alternatingGradientSearch",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Number"
															}
													}
											}
									},
									contrastRequirements: {
											serializedName: "contrastRequirements",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "ContrastRequirement"
															}
													}
											}
									},
									checkSemiOpaqueContrast: {
											serializedName: "checkSemiOpaqueContrast",
											type: {
													name: "Boolean"
											}
									},
									semiOpaqueContrast: {
											serializedName: "semiOpaqueContrast",
											type: {
													name: "Number"
											}
									},
									requiredTextContrast: {
											serializedName: "requiredTextContrast",
											type: {
													name: "Number"
											}
									}
							}
					}
			}
				, bi = {
					type: {
							name: "Composite",
							className: "NormalizedRGB",
							modelProperties: {
									r: {
											serializedName: "r",
											type: {
													name: "Number"
											}
									},
									g: {
											serializedName: "g",
											type: {
													name: "Number"
											}
									},
									b: {
											serializedName: "b",
											type: {
													name: "Number"
											}
									}
							}
					}
			}
				, Si = {
					type: {
							name: "Composite",
							className: "HSLFilter",
							modelProperties: {
									id: {
											serializedName: "id",
											type: {
													name: "String"
											}
									},
									invert: {
											serializedName: "invert",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									},
									minH: {
											serializedName: "minH",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									maxH: {
											serializedName: "maxH",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									minS: {
											serializedName: "minS",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									maxS: {
											serializedName: "maxS",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									minL: {
											serializedName: "minL",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									maxL: {
											serializedName: "maxL",
											nullable: !0,
											type: {
													name: "Number"
											}
									}
							}
					}
			}
				, Ci = {
					type: {
							name: "Composite",
							className: "ContrastRequirement",
							modelProperties: {
									id: {
											serializedName: "id",
											type: {
													name: "String"
											}
									},
									ratio: {
											serializedName: "ratio",
											type: {
													name: "Number"
											}
									},
									mode: {
											serializedName: "mode",
											type: {
													name: "Enum",
													allowedValues: ["Both", "PreferedTextOnly", "AlternateTextOnly"]
											}
									},
									color: {
											serializedName: "color",
											type: {
													name: "Composite",
													className: "NormalizedRGB"
											}
									}
							}
					}
			}
				, Ei = {
					type: {
							name: "Composite",
							className: "PrevalentColorSelectorOutput",
							modelProperties: {
									chosenColor: {
											serializedName: "chosenColor",
											type: {
													name: "Composite",
													className: "QuantizedColor"
											}
									},
									preferedTextColorContrast: {
											serializedName: "preferedTextColorContrast",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									alternateTextColorContrast: {
											serializedName: "alternateTextColorContrast",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									isLightImage: {
											serializedName: "isLightImage",
											type: {
													name: "Boolean"
											}
									},
									isDarkImage: {
											serializedName: "isDarkImage",
											type: {
													name: "Boolean"
											}
									},
									useAlternateTextColor: {
											serializedName: "useAlternateTextColor",
											type: {
													name: "Boolean"
											}
									},
									preferedTextColor: {
											serializedName: "preferedTextColor",
											type: {
													name: "Composite",
													className: "NormalizedRGB"
											}
									},
									alternateTextColor: {
											serializedName: "alternateTextColor",
											type: {
													name: "Composite",
													className: "NormalizedRGB"
											}
									}
							}
					}
			}
				, Ti = {
					type: {
							name: "Composite",
							className: "SerializableDecorateBitmapRequestModel",
							modelProperties: {
									decoratorConfig: {
											serializedName: "DecoratorConfig",
											type: {
													name: "Composite",
													className: "SerializableBitmapDecoratorConfig"
											}
									},
									images: {
											serializedName: "Images",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Dictionary",
																	value: {
																			type: {
																					name: "any"
																			}
																	}
															}
													}
											}
									}
							}
					}
			}
				, Ii = {
					type: {
							name: "Composite",
							className: "SerializableBitmapDecoratorConfig",
							modelProperties: {
									backgroundSource: {
											serializedName: "BackgroundSource",
											type: {
													name: "String"
											}
									},
									decoratorProfiles: {
											serializedName: "DecoratorProfiles",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "BitmapDecoratorProfileConfigModel"
															}
													}
											}
									}
							}
					}
			}
				, wi = {
					type: {
							name: "Composite",
							className: "BitmapDecoratorProfileConfigModel",
							modelProperties: {
									decoratorSource: {
											serializedName: "DecoratorSource",
											type: {
													name: "String"
											}
									},
									searchMode: {
											serializedName: "SearchMode",
											type: {
													name: "Number"
											}
									},
									searchSpacing: {
											serializedName: "SearchSpacing",
											type: {
													name: "Number"
											}
									},
									overlapForMatchMin: {
											serializedName: "OverlapForMatchMin",
											type: {
													name: "Number"
											}
									},
									overlapForMatchMax: {
											serializedName: "OverlapForMatchMax",
											type: {
													name: "Number"
											}
									},
									topRatio: {
											serializedName: "TopRatio",
											type: {
													name: "Number"
											}
									},
									angleStep: {
											serializedName: "AngleStep",
											type: {
													name: "Number"
											}
									},
									maxAngleSearch: {
											serializedName: "MaxAngleSearch",
											type: {
													name: "Number"
											}
									}
							}
					}
			}
				, Ai = {
					type: {
							name: "Composite",
							className: "PathsLllj53ImageservicesDecoratebitmapPostResponses200ContentApplicationJsonSchema"
					}
			}
				, Ri = {
					type: {
							name: "Composite",
							className: "MicrosoftGraphEntity",
							modelProperties: {
									id: {
											serializedName: "id",
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, xi = {
					type: {
							name: "Composite",
							className: "PersonaPasswordProfile",
							modelProperties: {
									password: {
											serializedName: "password",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									forceChangePasswordNextSignIn: {
											serializedName: "forceChangePasswordNextSignIn",
											nullable: !0,
											type: {
													name: "Boolean"
											}
									}
							}
					}
			}
				, Oi = {
					type: {
							name: "Composite",
							className: "PersonaPhoto",
							modelProperties: {
									id: {
											serializedName: "id",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									height: {
											constraints: {
													InclusiveMaximum: 2147483647,
													InclusiveMinimum: -2147483648
											},
											serializedName: "height",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									width: {
											constraints: {
													InclusiveMaximum: 2147483647,
													InclusiveMinimum: -2147483648
											},
											serializedName: "width",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									url: {
											serializedName: "url",
											nullable: !0,
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, Ni = {
					type: {
							name: "Composite",
							className: "TypedResource",
							modelProperties: {
									deletedDateTime: {
											serializedName: "deletedDateTime",
											nullable: !0,
											type: {
													name: "DateTime"
											}
									},
									etag: {
											serializedName: "_etag",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									id: {
											serializedName: "id",
											type: {
													name: "String"
											}
									},
									isArchived: {
											serializedName: "isArchived",
											type: {
													name: "Boolean"
											}
									}
							}
					}
			}
				, Pi = {
					type: {
							name: "Composite",
							className: "NetCoreErrorResponse",
							modelProperties: {
									type: {
											serializedName: "type",
											type: {
													name: "String"
											}
									},
									title: {
											serializedName: "title",
											type: {
													name: "String"
											}
									},
									status: {
											serializedName: "status",
											type: {
													name: "Number"
											}
									},
									traceId: {
											serializedName: "traceId",
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, Di = {
					type: {
							name: "Composite",
							className: "ApplicationData",
							modelProperties: {
									appName: {
											serializedName: "appName",
											type: {
													name: "String"
											}
									},
									appData: {
											serializedName: "appData",
											type: {
													name: "Dictionary",
													value: {
															type: {
																	name: "any"
															}
													}
											}
									}
							}
					}
			}
				, Mi = {
					type: {
							name: "Composite",
							className: "PersonaProfileShortcuts",
							modelProperties: {
									desktop: {
											serializedName: "desktop",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Shortcut"
															}
													}
											}
									},
									taskbar: {
											serializedName: "taskbar",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Shortcut"
															}
													}
											}
									},
									startMenu: {
											serializedName: "startMenu",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Shortcut"
															}
													}
											}
									},
									suggested: {
											serializedName: "suggested",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "SuggestedShortcut"
															}
													}
											}
									}
							}
					}
			}
				, Li = {
					type: {
							name: "Composite",
							className: "Shortcut",
							modelProperties: {
									shortcutTargetUrn: {
											serializedName: "shortcutTargetUrn",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									displayIndex: {
											serializedName: "displayIndex",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									timestamp: {
											serializedName: "timestamp",
											nullable: !0,
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, ki = {
					type: {
							name: "Composite",
							className: "PersonaProfileWallpaper",
							modelProperties: {
									imageLight: {
											serializedName: "imageLight",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									imageDark: {
											serializedName: "imageDark",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									thumbnailLight: {
											serializedName: "thumbnailLight",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									thumbnailDark: {
											serializedName: "thumbnailDark",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									type: {
											serializedName: "type",
											type: {
													name: "Enum",
													allowedValues: ["dog", "gmunk", "default"]
											}
									}
							}
					}
			}
				, Fi = {
					type: {
							name: "Composite",
							className: "TwoHundredBooleanResponse",
							modelProperties: {
									result: {
											serializedName: "result",
											required: !0,
											readOnly: !0,
											type: {
													name: "Boolean"
											}
									}
							}
					}
			}
				, Bi = {
					type: {
							name: "Composite",
							className: "ScenarioSwitch",
							modelProperties: {
									id: {
											serializedName: "id",
											type: {
													name: "Number"
											}
									},
									name: {
											serializedName: "name",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									isDefault: {
											serializedName: "isDefault",
											type: {
													name: "Boolean"
											}
									}
							}
					}
			}
				, Gi = {
					type: {
							name: "Composite",
							className: "TwoHundredStringResponse",
							modelProperties: {
									result: {
											serializedName: "result",
											required: !0,
											readOnly: !0,
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, Ui = {
					type: {
							name: "Composite",
							className: "AuthTokenViewModel",
							modelProperties: {
									id: {
											serializedName: "id",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									userId: {
											serializedName: "userId",
											nullable: !0,
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, zi = {
					type: {
							name: "Composite",
							className: "CosmosPermission",
							modelProperties: {
									id: {
											serializedName: "id",
											type: {
													name: "String"
											}
									},
									permissionMode: {
											serializedName: "permissionMode",
											type: {
													name: "String"
											}
									},
									resource: {
											serializedName: "resource",
											type: {
													name: "String"
											}
									},
									token: {
											serializedName: "_token",
											type: {
													name: "String"
											}
									},
									ts: {
											serializedName: "_ts",
											type: {
													name: "Number"
											}
									}
							}
					}
			}
				, $i = {
					type: {
							name: "Composite",
							className: "CosmosUser",
							modelProperties: {
									id: {
											constraints: {
													MaxLength: 255
											},
											serializedName: "id",
											type: {
													name: "String"
											}
									},
									permissions: {
											serializedName: "_permissions",
											type: {
													name: "String"
											}
									},
									ts: {
											serializedName: "_ts",
											type: {
													name: "Number"
											}
									}
							}
					}
			}
				, Vi = {
					type: {
							name: "Composite",
							className: "Role",
							modelProperties: {
									roleId: {
											serializedName: "roleId",
											type: {
													name: "Number"
											}
									},
									roleName: {
											serializedName: "roleName",
											type: {
													name: "String"
											}
									},
									isEnabled: {
											serializedName: "isEnabled",
											type: {
													name: "Boolean"
											}
									}
							}
					}
			}
				, Hi = {
					type: {
							name: "Composite",
							className: "Paths1Tn5QkaProxiedApinameEndpointPostRequestbodyContentApplicationOctetStreamSchema"
					}
			}
				, qi = {
					type: {
							name: "Composite",
							className: "PathsYv268WProxiedApinameEndpointPostResponses200ContentApplicationOctetStreamSchema"
					}
			}
				, ji = {
					type: {
							name: "Composite",
							className: "MicrosoftGraphDirectoryObject",
							modelProperties: {
									...Ri.type.modelProperties,
									deletedDateTime: {
											serializedName: "deletedDateTime",
											nullable: !0,
											type: {
													name: "DateTime"
											}
									}
							}
					}
			}
				, Wi = {
					type: {
							name: "Composite",
							className: "Persona",
							modelProperties: {
									...Ni.type.modelProperties,
									aboutMe: {
											serializedName: "aboutMe",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									accountEnabled: {
											serializedName: "accountEnabled",
											type: {
													name: "Boolean"
											}
									},
									ageGroup: {
											serializedName: "ageGroup",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									birthday: {
											serializedName: "birthday",
											nullable: !0,
											type: {
													name: "DateTime"
											}
									},
									businessPhones: {
											serializedName: "businessPhones",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									city: {
											serializedName: "city",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									companyName: {
											serializedName: "companyName",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									consentProvidedForMinor: {
											serializedName: "consentProvidedForMinor",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									country: {
											serializedName: "country",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									createdDateTime: {
											serializedName: "createdDateTime",
											nullable: !0,
											type: {
													name: "DateTime"
											}
									},
									createdObjects: {
											serializedName: "createdObjects",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "MicrosoftGraphDirectoryObject"
															}
													}
											}
									},
									creationType: {
											serializedName: "creationType",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									department: {
											serializedName: "department",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									deviceEnrollmentLimit: {
											constraints: {
													InclusiveMaximum: 2147483647,
													InclusiveMinimum: -2147483648
											},
											serializedName: "deviceEnrollmentLimit",
											type: {
													name: "Number"
											}
									},
									directReports: {
											serializedName: "directReports",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "MicrosoftGraphDirectoryObject"
															}
													}
											}
									},
									displayName: {
											serializedName: "displayName",
											type: {
													name: "String"
											}
									},
									employeeHireDate: {
											serializedName: "employeeHireDate",
											nullable: !0,
											type: {
													name: "DateTime"
											}
									},
									employeeId: {
											serializedName: "employeeId",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									employeeType: {
											serializedName: "employeeType",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									externalUserState: {
											serializedName: "externalUserState",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									externalUserStateChangeDateTime: {
											serializedName: "externalUserStateChangeDateTime",
											nullable: !0,
											type: {
													name: "DateTime"
											}
									},
									faxNumber: {
											serializedName: "faxNumber",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									givenName: {
											serializedName: "givenName",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									hireDate: {
											serializedName: "hireDate",
											type: {
													name: "DateTime"
											}
									},
									imAddresses: {
											serializedName: "imAddresses",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									interests: {
											serializedName: "interests",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									isResourceAccount: {
											serializedName: "isResourceAccount",
											type: {
													name: "Boolean"
											}
									},
									jobTitle: {
											serializedName: "jobTitle",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									lastPasswordChangeDateTime: {
											serializedName: "lastPasswordChangeDateTime",
											nullable: !0,
											type: {
													name: "DateTime"
											}
									},
									legalAgeGroupClassification: {
											serializedName: "legalAgeGroupClassification",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									mail: {
											serializedName: "mail",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									mailNickname: {
											serializedName: "mailNickname",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									manager: {
											serializedName: "manager",
											type: {
													name: "Composite",
													className: "MicrosoftGraphDirectoryObject"
											}
									},
									memberOf: {
											serializedName: "memberOf",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "MicrosoftGraphDirectoryObject"
															}
													}
											}
									},
									mobilePhone: {
											serializedName: "mobilePhone",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									mySite: {
											serializedName: "mySite",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									officeLocation: {
											serializedName: "officeLocation",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									otherMails: {
											serializedName: "otherMails",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									ownedDevices: {
											serializedName: "ownedDevices",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "MicrosoftGraphDirectoryObject"
															}
													}
											}
									},
									ownedObjects: {
											serializedName: "ownedObjects",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "MicrosoftGraphDirectoryObject"
															}
													}
											}
									},
									ownerId: {
											serializedName: "ownerId",
											type: {
													name: "String"
											}
									},
									passwordPolicies: {
											serializedName: "passwordPolicies",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									passwordProfile: {
											serializedName: "passwordProfile",
											type: {
													name: "Composite",
													className: "PersonaPasswordProfile"
											}
									},
									pastProjects: {
											serializedName: "pastProjects",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									photo: {
											serializedName: "photo",
											type: {
													name: "Composite",
													className: "PersonaPhoto"
											}
									},
									postalCode: {
											serializedName: "postalCode",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									preferredLanguage: {
											serializedName: "preferredLanguage",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									preferredName: {
											serializedName: "preferredName",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									proxyAddresses: {
											serializedName: "proxyAddresses",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									registeredDevices: {
											serializedName: "registeredDevices",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "MicrosoftGraphDirectoryObject"
															}
													}
											}
									},
									responsibilities: {
											serializedName: "responsibilities",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									schools: {
											serializedName: "schools",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									showInAddressList: {
											serializedName: "showInAddressList",
											type: {
													name: "Boolean"
											}
									},
									skills: {
											serializedName: "skills",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									state: {
											serializedName: "state",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									streetAddress: {
											serializedName: "streetAddress",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									surname: {
											serializedName: "surname",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									usageLocation: {
											serializedName: "usageLocation",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									userPrincipalName: {
											serializedName: "userPrincipalName",
											type: {
													name: "String"
											}
									},
									userType: {
											serializedName: "userType",
											nullable: !0,
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, Yi = {
					type: {
							name: "Composite",
							className: "PersonaProfile",
							modelProperties: {
									...Ni.type.modelProperties,
									applicationData: {
											serializedName: "applicationData",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "ApplicationData"
															}
													}
											}
									},
									description: {
											serializedName: "description",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									personaId: {
											serializedName: "personaId",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									shortcuts: {
											serializedName: "shortcuts",
											type: {
													name: "Composite",
													className: "PersonaProfileShortcuts"
											}
									},
									theme: {
											serializedName: "theme",
											type: {
													name: "Enum",
													allowedValues: ["light", "dark"]
											}
									},
									wallpaper: {
											serializedName: "wallpaper",
											type: {
													name: "Composite",
													className: "PersonaProfileWallpaper"
											}
									}
							}
					}
			}
				, Ki = {
					type: {
							name: "Composite",
							className: "ProductGroup",
							modelProperties: {
									...Ni.type.modelProperties,
									name: {
											serializedName: "name",
											type: {
													name: "String"
											}
									},
									description: {
											serializedName: "description",
											type: {
													name: "String"
											}
									},
									path: {
											serializedName: "path",
											type: {
													name: "String"
											}
									},
									imageUrl: {
											serializedName: "imageUrl",
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, Qi = {
					type: {
							name: "Composite",
							className: "Scenario",
							modelProperties: {
									...Ni.type.modelProperties,
									name: {
											serializedName: "name",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									presetId: {
											serializedName: "presetId",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									path: {
											serializedName: "path",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									contact: {
											serializedName: "contact",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									isPublic: {
											serializedName: "isPublic",
											type: {
													name: "Boolean"
											}
									},
									ownerId: {
											serializedName: "ownerId",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									personaIds: {
											serializedName: "personaIds",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									personaProfileIds: {
											serializedName: "personaProfileIds",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									productGroups: {
											serializedName: "productGroups",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									projectId: {
											serializedName: "projectId",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									description: {
											serializedName: "description",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									requiredRole: {
											serializedName: "requiredRole",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									switches: {
											serializedName: "switches",
											nullable: !0,
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "ScenarioSwitch"
															}
													}
											}
									}
							}
					}
			}
				, Zi = {
					type: {
							name: "Composite",
							className: "UserTestSession",
							modelProperties: {
									...Ni.type.modelProperties,
									authTokenId: {
											serializedName: "authTokenId",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									presetId: {
											serializedName: "presetId",
											required: !0,
											type: {
													name: "String"
											}
									},
									personaId: {
											serializedName: "personaId",
											required: !0,
											type: {
													name: "String"
											}
									},
									userId: {
											serializedName: "userId",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									createdTimeStamp: {
											serializedName: "createdTimeStamp",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									isFullscreenOsView: {
											serializedName: "isFullscreenOsView",
											type: {
													name: "Boolean"
											}
									},
									ttl: {
											serializedName: "ttl",
											nullable: !0,
											type: {
													name: "Number"
											}
									}
							}
					}
			}
				, Xi = {
					type: {
							name: "Composite",
							className: "AppUser",
							modelProperties: {
									...Ni.type.modelProperties,
									lastAccessTimestamp: {
											serializedName: "lastAccessTimestamp",
											nullable: !0,
											type: {
													name: "Number"
											}
									},
									productGroupMemberships: {
											serializedName: "productGroupMemberships",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									userAlias: {
											serializedName: "userAlias",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									userName: {
											serializedName: "userName",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									userRoles: {
											serializedName: "userRoles",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Number"
															}
													}
											}
									}
							}
					}
			}
				, Ji = {
					type: {
							name: "Composite",
							className: "AuthToken",
							modelProperties: {
									...Ni.type.modelProperties,
									userId: {
											serializedName: "userId",
											type: {
													name: "String"
											}
									},
									isUserTestToken: {
											serializedName: "isUserTestToken",
											type: {
													name: "Boolean"
											}
									},
									projectIds: {
											serializedName: "projectIds",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Number"
															}
													}
											}
									},
									ttl: {
											serializedName: "ttl",
											nullable: !0,
											type: {
													name: "Number"
											}
									}
							}
					}
			}
				, er = {
					type: {
							name: "Composite",
							className: "SuggestedShortcut",
							modelProperties: {
									...Li.type.modelProperties,
									suggestedReason: {
											serializedName: "suggestedReason",
											nullable: !0,
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, tr = {
					parameterPath: "accept",
					mapper: {
							defaultValue: "application/json",
							isConstant: !0,
							serializedName: "Accept",
							type: {
									name: "String"
							}
					}
			}
				, nr = {
					parameterPath: "$host",
					mapper: {
							serializedName: "$host",
							required: !0,
							type: {
									name: "String"
							}
					},
					skipEncoding: !0
			}
				, ir = {
					parameterPath: "s",
					mapper: {
							serializedName: "s",
							required: !0,
							type: {
									name: "String"
							}
					}
			}
				, rr = {
					parameterPath: "data",
					mapper: {
							serializedName: "data",
							required: !0,
							type: {
									name: "Stream"
							}
					}
			}
				, or = {
					parameterPath: "id",
					mapper: {
							serializedName: "id",
							required: !0,
							type: {
									name: "String"
							}
					}
			}
				, sr = {
					parameterPath: ["options", "contentType"],
					mapper: {
							defaultValue: "application/json",
							isConstant: !0,
							serializedName: "Content-Type",
							type: {
									name: "String"
							}
					}
			}
				, ar = {
					parameterPath: "body",
					mapper: fi
			}
				, lr = {
					parameterPath: "body",
					mapper: Ti
			}
				, cr = {
					parameterPath: ["options", "ownerId"],
					mapper: {
							serializedName: "ownerId",
							type: {
									name: "String"
							}
					}
			}
				, dr = {
					parameterPath: "body",
					mapper: Wi
			}
				, pr = {
					parameterPath: "body",
					mapper: Yi
			}
				, ur = {
					parameterPath: "body",
					mapper: Ki
			}
				, hr = {
					parameterPath: "apiName",
					mapper: {
							serializedName: "apiName",
							required: !0,
							type: {
									name: "String"
							}
					}
			}
				, mr = {
					parameterPath: "endpoint",
					mapper: {
							serializedName: "endpoint",
							required: !0,
							type: {
									name: "String"
							}
					}
			}
				, gr = {
					parameterPath: "body",
					mapper: Qi
			}
				, _r = {
					parameterPath: "id",
					mapper: {
							serializedName: "id",
							required: !0,
							type: {
									name: "Number"
							}
					}
			}
				, fr = {
					parameterPath: "body",
					mapper: Zi
			};
			class CognitiveServicesImpl {
					constructor(e) {
							this.client = e
					}
					autoSuggest(e, t) {
							return this.client.sendOperationRequest({
									term: e,
									options: t
							}, vr)
					}
					detectFace(e, t) {
							return this.client.sendOperationRequest({
									data: e,
									options: t
							}, br)
					}
			}
			const yr = createSerializer(n, !1)
				, vr = {
					path: "/cognitiveservices/autosuggest/{term}",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: {
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "AutoSuggestResultModel"
															}
													}
											}
									}
							}
					},
					queryParameters: [ir],
					urlParameters: [nr, {
							parameterPath: "term",
							mapper: {
									serializedName: "term",
									required: !0,
									type: {
											name: "String"
									}
							}
					}],
					headerParameters: [tr],
					serializer: yr
			}
				, br = {
					path: "/cognitiveservices/detectface",
					httpMethod: "POST",
					responses: {
							200: {
									bodyMapper: {
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "FaceRectangle"
															}
													}
											}
									}
							},
							400: {}
					},
					requestBody: rr,
					queryParameters: [ir],
					urlParameters: [nr],
					headerParameters: [{
							parameterPath: ["options", "contentType"],
							mapper: {
									defaultValue: "image/*",
									isConstant: !0,
									serializedName: "Content-Type",
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: "accept",
							mapper: {
									defaultValue: "application/json",
									isConstant: !0,
									serializedName: "Accept",
									type: {
											name: "String"
									}
							}
					}],
					mediaType: "binary",
					serializer: yr
			};
			class ConfigImpl {
					constructor(e) {
							this.client = e
					}
					getEmulatorConfigById(e, t) {
							return this.client.sendOperationRequest({
									id: e,
									options: t
							}, Cr)
					}
					getDynamicConfigById(e, t) {
							return this.client.sendOperationRequest({
									id: e,
									options: t
							}, Er)
					}
			}
			const Sr = createSerializer(n, !1)
				, Cr = {
					path: "/config/emulator/{id}",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: hi
							},
							400: {},
							404: {}
					},
					queryParameters: [ir],
					urlParameters: [nr, or],
					headerParameters: [tr],
					serializer: Sr
			}
				, Er = {
					path: "/config/dynamic/{id}",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: {
											type: {
													name: "Dictionary",
													value: {
															type: {
																	name: "any"
															}
													}
											}
									}
							},
							400: {},
							404: {}
					},
					queryParameters: [ir],
					urlParameters: [nr, _r],
					headerParameters: [tr],
					serializer: Sr
			};
			class ImageImpl {
					constructor(e) {
							this.client = e
					}
					getPrevalentColor(e, t) {
							return this.client.sendOperationRequest({
									body: e,
									options: t
							}, Ir)
					}
					decorateBitmap(e, t) {
							return this.client.sendOperationRequest({
									body: e,
									options: t
							}, wr)
					}
			}
			const Tr = createSerializer(n, !1)
				, Ir = {
					path: "/imageservices/prevalentcolor",
					httpMethod: "POST",
					responses: {
							200: {
									bodyMapper: Ei
							}
					},
					requestBody: ar,
					queryParameters: [ir],
					urlParameters: [nr],
					headerParameters: [tr, sr],
					mediaType: "json",
					serializer: Tr
			}
				, wr = {
					path: "/imageservices/decoratebitmap",
					httpMethod: "POST",
					responses: {
							200: {
									bodyMapper: Ai
							}
					},
					requestBody: lr,
					queryParameters: [ir],
					urlParameters: [nr],
					headerParameters: [tr, sr],
					mediaType: "json",
					serializer: Tr
			};
			class PersonasImpl {
					constructor(e) {
							this.client = e
					}
					getAll(e) {
							return this.client.sendOperationRequest({
									options: e
							}, Rr)
					}
					create(e, t) {
							return this.client.sendOperationRequest({
									body: e,
									options: t
							}, xr)
					}
					getById(e, t) {
							return this.client.sendOperationRequest({
									id: e,
									options: t
							}, Or)
					}
					update(e, t, n) {
							return this.client.sendOperationRequest({
									id: e,
									body: t,
									options: n
							}, Nr)
					}
					getMyPersonas(e) {
							return this.client.sendOperationRequest({
									options: e
							}, Pr)
					}
			}
			const Ar = createSerializer(n, !1)
				, Rr = {
					path: "/personas",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: {
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Persona"
															}
													}
											}
									}
							},
							404: {}
					},
					queryParameters: [ir, cr],
					urlParameters: [nr],
					headerParameters: [tr],
					serializer: Ar
			}
				, xr = {
					path: "/personas",
					httpMethod: "POST",
					responses: {
							200: {
									bodyMapper: Wi
							},
							400: {},
							404: {},
							415: {
									bodyMapper: Pi
							},
							500: {}
					},
					requestBody: dr,
					queryParameters: [ir],
					urlParameters: [nr],
					headerParameters: [tr, sr],
					mediaType: "json",
					serializer: Ar
			}
				, Or = {
					path: "/personas/{id}",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: Wi
							},
							400: {},
							404: {}
					},
					queryParameters: [ir],
					urlParameters: [nr, or],
					headerParameters: [tr],
					serializer: Ar
			}
				, Nr = {
					path: "/personas/{id}",
					httpMethod: "PUT",
					responses: {
							200: {
									bodyMapper: Wi
							},
							400: {},
							404: {},
							415: {
									bodyMapper: Pi
							},
							500: {}
					},
					requestBody: dr,
					queryParameters: [ir],
					urlParameters: [nr, or],
					headerParameters: [tr, sr],
					mediaType: "json",
					serializer: Ar
			}
				, Pr = {
					path: "/personas/me",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: {
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Persona"
															}
													}
											}
									}
							},
							404: {}
					},
					queryParameters: [ir],
					urlParameters: [nr],
					headerParameters: [tr],
					serializer: Ar
			};
			class PersonaProfilesImpl {
					constructor(e) {
							this.client = e
					}
					getAll(e) {
							return this.client.sendOperationRequest({
									options: e
							}, Mr)
					}
					create(e, t) {
							return this.client.sendOperationRequest({
									body: e,
									options: t
							}, Lr)
					}
					getById(e, t) {
							return this.client.sendOperationRequest({
									id: e,
									options: t
							}, kr)
					}
					update(e, t, n) {
							return this.client.sendOperationRequest({
									id: e,
									body: t,
									options: n
							}, Fr)
					}
					getByPersonaId(e, t) {
							return this.client.sendOperationRequest({
									id: e,
									options: t
							}, Br)
					}
			}
			const Dr = createSerializer(n, !1)
				, Mr = {
					path: "/personaprofiles",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: {
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "PersonaProfile"
															}
													}
											}
									}
							},
							404: {}
					},
					queryParameters: [ir, {
							parameterPath: ["options", "personaId"],
							mapper: {
									serializedName: "personaId",
									type: {
											name: "String"
									}
							}
					}],
					urlParameters: [nr],
					headerParameters: [tr],
					serializer: Dr
			}
				, Lr = {
					path: "/personaprofiles",
					httpMethod: "POST",
					responses: {
							200: {
									bodyMapper: Yi
							},
							400: {},
							404: {},
							415: {
									bodyMapper: Pi
							},
							500: {}
					},
					requestBody: pr,
					queryParameters: [ir],
					urlParameters: [nr],
					headerParameters: [tr, sr],
					mediaType: "json",
					serializer: Dr
			}
				, kr = {
					path: "/personaprofiles/{id}",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: Yi
							},
							400: {},
							404: {}
					},
					queryParameters: [ir],
					urlParameters: [nr, or],
					headerParameters: [tr],
					serializer: Dr
			}
				, Fr = {
					path: "/personaprofiles/{id}",
					httpMethod: "PUT",
					responses: {
							200: {
									bodyMapper: Yi
							},
							400: {},
							404: {},
							415: {
									bodyMapper: Pi
							},
							500: {}
					},
					requestBody: pr,
					queryParameters: [ir],
					urlParameters: [nr, or],
					headerParameters: [tr, sr],
					mediaType: "json",
					serializer: Dr
			}
				, Br = {
					path: "/personas/{id}/personaprofiles",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: {
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "PersonaProfile"
															}
													}
											}
									}
							},
							400: {},
							404: {}
					},
					queryParameters: [ir],
					urlParameters: [nr, or],
					headerParameters: [tr],
					serializer: Dr
			};
			class ProductGroupsImpl {
					constructor(e) {
							this.client = e
					}
					getAll(e) {
							return this.client.sendOperationRequest({
									options: e
							}, Ur)
					}
					create(e, t) {
							return this.client.sendOperationRequest({
									body: e,
									options: t
							}, zr)
					}
					getById(e, t) {
							return this.client.sendOperationRequest({
									id: e,
									options: t
							}, $r)
					}
					update(e, t, n) {
							return this.client.sendOperationRequest({
									id: e,
									body: t,
									options: n
							}, Vr)
					}
					delete(e, t) {
							return this.client.sendOperationRequest({
									id: e,
									options: t
							}, Hr)
					}
			}
			const Gr = createSerializer(n, !1)
				, Ur = {
					path: "/productgroups",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: {
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "ProductGroup"
															}
													}
											}
									}
							}
					},
					queryParameters: [ir, {
							parameterPath: ["options", "f"],
							mapper: {
									serializedName: "f",
									type: {
											name: "String"
									}
							}
					}],
					urlParameters: [nr],
					headerParameters: [tr],
					serializer: Gr
			}
				, zr = {
					path: "/productgroups",
					httpMethod: "POST",
					responses: {
							200: {
									bodyMapper: Ki
							},
							400: {},
							404: {},
							415: {
									bodyMapper: Pi
							},
							500: {}
					},
					requestBody: ur,
					queryParameters: [ir],
					urlParameters: [nr],
					headerParameters: [tr, sr],
					mediaType: "json",
					serializer: Gr
			}
				, $r = {
					path: "/productgroups/{id}",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: Ki
							},
							400: {},
							404: {}
					},
					queryParameters: [ir],
					urlParameters: [nr, or],
					headerParameters: [tr],
					serializer: Gr
			}
				, Vr = {
					path: "/productgroups/{id}",
					httpMethod: "PUT",
					responses: {
							200: {
									bodyMapper: Ki
							},
							400: {},
							404: {},
							415: {
									bodyMapper: Pi
							},
							500: {}
					},
					requestBody: ur,
					queryParameters: [ir],
					urlParameters: [nr, or],
					headerParameters: [tr, sr],
					mediaType: "json",
					serializer: Gr
			}
				, Hr = {
					path: "/productgroups/{id}",
					httpMethod: "DELETE",
					responses: {
							200: {
									bodyMapper: Fi
							},
							400: {},
							404: {},
							500: {}
					},
					queryParameters: [ir],
					urlParameters: [nr, or],
					headerParameters: [tr],
					serializer: Gr
			};
			class ScenariosImpl {
					constructor(e) {
							this.client = e
					}
					getAll(e) {
							return this.client.sendOperationRequest({
									options: e
							}, jr)
					}
					create(e, t) {
							return this.client.sendOperationRequest({
									body: e,
									options: t
							}, Wr)
					}
					getById(e, t) {
							return this.client.sendOperationRequest({
									id: e,
									options: t
							}, Yr)
					}
					update(e, t, n) {
							return this.client.sendOperationRequest({
									id: e,
									body: t,
									options: n
							}, Kr)
					}
					delete(e, t) {
							return this.client.sendOperationRequest({
									id: e,
									options: t
							}, Qr)
					}
					getAuthenticated(e) {
							return this.client.sendOperationRequest({
									options: e
							}, Zr)
					}
					getByPath(e, t) {
							return this.client.sendOperationRequest({
									path: e,
									options: t
							}, Xr)
					}
			}
			const qr = createSerializer(n, !1)
				, jr = {
					path: "/scenarios",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: {
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Scenario"
															}
													}
											}
									}
							},
							404: {}
					},
					queryParameters: [ir, cr, {
							parameterPath: ["options", "pgid"],
							mapper: {
									serializedName: "pgid",
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: ["options", "pgpath"],
							mapper: {
									serializedName: "pgpath",
									type: {
											name: "String"
									}
							}
					}],
					urlParameters: [nr],
					headerParameters: [tr],
					serializer: qr
			}
				, Wr = {
					path: "/scenarios",
					httpMethod: "POST",
					responses: {
							200: {
									bodyMapper: Qi
							},
							400: {},
							404: {},
							415: {
									bodyMapper: Pi
							},
							500: {}
					},
					requestBody: gr,
					queryParameters: [ir],
					urlParameters: [nr],
					headerParameters: [tr, sr],
					mediaType: "json",
					serializer: qr
			}
				, Yr = {
					path: "/scenarios/{id}",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: Qi
							},
							400: {},
							404: {}
					},
					queryParameters: [ir],
					urlParameters: [nr, or],
					headerParameters: [tr],
					serializer: qr
			}
				, Kr = {
					path: "/scenarios/{id}",
					httpMethod: "PUT",
					responses: {
							200: {
									bodyMapper: Qi
							},
							400: {},
							404: {},
							415: {
									bodyMapper: Pi
							},
							500: {}
					},
					requestBody: gr,
					queryParameters: [ir],
					urlParameters: [nr, or],
					headerParameters: [tr, sr],
					mediaType: "json",
					serializer: qr
			}
				, Qr = {
					path: "/scenarios/{id}",
					httpMethod: "DELETE",
					responses: {
							200: {
									bodyMapper: Fi
							},
							400: {},
							404: {},
							500: {}
					},
					queryParameters: [ir],
					urlParameters: [nr, or],
					headerParameters: [tr],
					serializer: qr
			}
				, Zr = {
					path: "/scenarios/authenticated",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: {
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Scenario"
															}
													}
											}
									}
							},
							401: {},
							500: {}
					},
					urlParameters: [nr],
					headerParameters: [tr],
					serializer: qr
			}
				, Xr = {
					path: "/scenarios/authenticated/{path}",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: Qi
							},
							400: {},
							401: {},
							404: {},
							500: {}
					},
					urlParameters: [nr, {
							parameterPath: "path",
							mapper: {
									serializedName: "path",
									required: !0,
									type: {
											name: "String"
									}
							}
					}],
					headerParameters: [tr],
					serializer: qr
			};
			class TokensImpl {
					constructor(e) {
							this.client = e
					}
					create(e, t) {
							return this.client.sendOperationRequest({
									alias: e,
									options: t
							}, eo)
					}
					getById(e, t) {
							return this.client.sendOperationRequest({
									id: e,
									options: t
							}, to)
					}
			}
			const Jr = createSerializer(n, !1)
				, eo = {
					path: "/tokens",
					httpMethod: "POST",
					responses: {
							200: {
									bodyMapper: Gi
							},
							400: {},
							500: {}
					},
					queryParameters: [{
							parameterPath: "alias",
							mapper: {
									serializedName: "alias",
									required: !0,
									type: {
											name: "String"
									}
							}
					}],
					urlParameters: [nr],
					headerParameters: [tr],
					serializer: Jr
			}
				, to = {
					path: "/tokens/{id}",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: Ui
							},
							400: {},
							404: {}
					},
					urlParameters: [nr, or],
					headerParameters: [tr],
					serializer: Jr
			};
			class UserImpl {
					constructor(e) {
							this.client = e
					}
					isInRole(e, t) {
							return this.client.sendOperationRequest({
									id: e,
									options: t
							}, io)
					}
					getPersonas(e) {
							return this.client.sendOperationRequest({
									options: e
							}, ro)
					}
					getUserTestSessions(e) {
							return this.client.sendOperationRequest({
									options: e
							}, oo)
					}
			}
			const no = createSerializer(n, !1)
				, io = {
					path: "/user/isinrole/{id}",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: Fi
							},
							400: {}
					},
					queryParameters: [ir],
					urlParameters: [nr, _r],
					headerParameters: [tr],
					serializer: no
			}
				, ro = {
					path: "/user/personas",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: {
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Persona"
															}
													}
											}
									}
							},
							404: {}
					},
					queryParameters: [ir],
					urlParameters: [nr],
					headerParameters: [tr],
					serializer: no
			}
				, oo = {
					path: "/user/usertestsessions",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: {
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "UserTestSession"
															}
													}
											}
									}
							},
							404: {}
					},
					queryParameters: [ir],
					urlParameters: [nr],
					headerParameters: [tr],
					serializer: no
			};
			class UserTestsImpl {
					constructor(e) {
							this.client = e
					}
					createSession(e, t) {
							return this.client.sendOperationRequest({
									body: e,
									options: t
							}, ao)
					}
					getSessionById(e, t) {
							return this.client.sendOperationRequest({
									id: e,
									options: t
							}, lo)
					}
					deleteSession(e, t) {
							return this.client.sendOperationRequest({
									id: e,
									options: t
							}, co)
					}
					getMySessions(e) {
							return this.client.sendOperationRequest({
									options: e
							}, po)
					}
			}
			const so = createSerializer(n, !1)
				, ao = {
					path: "/usertestsessions",
					httpMethod: "POST",
					responses: {
							200: {
									bodyMapper: Gi
							},
							400: {},
							401: {},
							404: {},
							415: {
									bodyMapper: Pi
							}
					},
					requestBody: fr,
					queryParameters: [ir],
					urlParameters: [nr],
					headerParameters: [tr, sr],
					mediaType: "json",
					serializer: so
			}
				, lo = {
					path: "/usertestsessions/{id}",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: Zi
							},
							400: {},
							404: {}
					},
					urlParameters: [nr, or],
					headerParameters: [tr],
					serializer: so
			}
				, co = {
					path: "/usertestsessions/{id}",
					httpMethod: "DELETE",
					responses: {
							200: {
									bodyMapper: Fi
							},
							404: {}
					},
					queryParameters: [ir],
					urlParameters: [nr, or],
					headerParameters: [tr],
					serializer: so
			}
				, po = {
					path: "/usertestsessions/me",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: {
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "UserTestSession"
															}
													}
											}
									}
							},
							404: {}
					},
					queryParameters: [ir],
					urlParameters: [nr],
					headerParameters: [tr],
					serializer: so
			};
			class ProteusAPI extends serviceClient_ServiceClient {
					constructor(e, t) {
							var n, i;
							if (void 0 === e)
									throw new Error("'s' cannot be null");
							t || (t = {});
							const r = "azsdk-js-api-client-factory/1.0.0-beta.1"
								, o = t.userAgentOptions && t.userAgentOptions.userAgentPrefix ? `${t.userAgentOptions.userAgentPrefix} ${r}` : `${r}`
								, s = {
									requestContentType: "application/json; charset=utf-8",
									...t,
									userAgentOptions: {
											userAgentPrefix: o
									},
									baseUri: null !== (i = null !== (n = t.endpoint) && void 0 !== n ? n : t.baseUri) && void 0 !== i ? i : "http://localhost:7071/v0"
							};
							if (super(s),
							(null == t ? void 0 : t.pipeline) && t.pipeline.getOrderedPolicies().length > 0) {
									t.pipeline.getOrderedPolicies().some((e=>e.name === Jn)) || (this.pipeline.removePolicy({
											name: Jn
									}),
									this.pipeline.addPolicy(bearerTokenAuthenticationPolicy({
											scopes: `${s.baseUri}/.default`,
											challengeCallbacks: {
													authorizeRequestOnChallenge: authorizeRequestOnClaimChallenge
											}
									})))
							}
							this.s = e,
							this.$host = t.$host || "http://localhost:7071/v0",
							this.cognitiveServices = new CognitiveServicesImpl(this),
							this.config = new ConfigImpl(this),
							this.image = new ImageImpl(this),
							this.personas = new PersonasImpl(this),
							this.personaProfiles = new PersonaProfilesImpl(this),
							this.productGroups = new ProductGroupsImpl(this),
							this.scenarios = new ScenariosImpl(this),
							this.tokens = new TokensImpl(this),
							this.user = new UserImpl(this),
							this.userTests = new UserTestsImpl(this)
					}
					proxiedApiGetResult(e, t, n) {
							return this.sendOperationRequest({
									apiName: e,
									endpoint: t,
									options: n
							}, ho)
					}
					proxiedApiPostResult(e, t, n, i) {
							return this.sendOperationRequest({
									apiName: e,
									endpoint: t,
									data: n,
									options: i
							}, mo)
					}
			}
			const uo = createSerializer(n, !1)
				, ho = {
					path: "/proxied/{apiName}/{endpoint}",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: {
											type: {
													name: "Dictionary",
													value: {
															type: {
																	name: "any"
															}
													}
											}
									}
							}
					},
					queryParameters: [ir],
					urlParameters: [nr, hr, mr],
					headerParameters: [tr],
					serializer: uo
			}
				, mo = {
					path: "/proxied/{apiName}/{endpoint}",
					httpMethod: "POST",
					responses: {
							200: {}
					},
					requestBody: rr,
					queryParameters: [ir],
					urlParameters: [nr, hr, mr],
					headerParameters: [{
							parameterPath: ["options", "contentType"],
							mapper: {
									defaultValue: "application/octet-stream",
									isConstant: !0,
									serializedName: "Content-Type",
									type: {
											name: "String"
									}
							}
					}],
					mediaType: "binary",
					serializer: uo
			}
				, go = {
					type: {
							name: "Composite",
							className: "Message",
							modelProperties: {
									author: {
											serializedName: "author",
											required: !0,
											type: {
													name: "String"
											}
									},
									contentOrigin: {
											serializedName: "contentOrigin",
											type: {
													name: "String"
											}
									},
									createdAt: {
											serializedName: "createdAt",
											type: {
													name: "DateTime"
											}
									},
									displayUrl: {
											serializedName: "displayUrl",
											type: {
													name: "String"
											}
									},
									feedback: {
											serializedName: "feedback",
											type: {
													name: "Composite",
													className: "FeedbackInfo"
											}
									},
									from: {
											serializedName: "from",
											type: {
													name: "Composite",
													className: "ChannelAccount"
											}
									},
									hiddenText: {
											serializedName: "hiddenText",
											type: {
													name: "String"
											}
									},
									inputMethod: {
											serializedName: "inputMethod",
											type: {
													name: "String"
											}
									},
									linkUrl: {
											serializedName: "linkUrl",
											type: {
													name: "String"
											}
									},
									locale: {
											serializedName: "locale",
											type: {
													name: "String"
											}
									},
									location: {
											serializedName: "location",
											type: {
													name: "String"
											}
									},
									market: {
											serializedName: "market",
											type: {
													name: "String"
											}
									},
									messageId: {
											serializedName: "messageId",
											type: {
													name: "String"
											}
									},
									messageType: {
											serializedName: "messageType",
											type: {
													name: "String"
											}
									},
									nlu: {
											serializedName: "nlu",
											type: {
													name: "Composite",
													className: "NluResponse"
											}
									},
									offense: {
											serializedName: "offense",
											type: {
													name: "String"
											}
									},
									region: {
											serializedName: "region",
											type: {
													name: "String"
											}
									},
									requestId: {
											serializedName: "requestId",
											type: {
													name: "String"
											}
									},
									rewrittenMessage: {
											serializedName: "rewrittenMessage",
											type: {
													name: "String"
											}
									},
									sourceAttributions: {
											serializedName: "sourceAttributions",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Dictionary",
																	value: {
																			type: {
																					name: "any"
																			}
																	}
															}
													}
											}
									},
									sourceName: {
											serializedName: "sourceName",
											type: {
													name: "String"
											}
									},
									sourceUrl: {
											serializedName: "sourceUrl",
											type: {
													name: "String"
											}
									},
									spokenText: {
											serializedName: "spokenText",
											type: {
													name: "String"
											}
									},
									suggestedResponses: {
											serializedName: "suggestedResponses",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Message"
															}
													}
											}
									},
									text: {
											serializedName: "text",
											required: !0,
											type: {
													name: "String"
											}
									},
									timestamp: {
											serializedName: "timestamp",
											type: {
													name: "String"
											}
									},
									topicChangerText: {
											serializedName: "topicChangerText",
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, _o = {
					type: {
							name: "Composite",
							className: "FeedbackInfo",
							modelProperties: {
									tag: {
											serializedName: "tag",
											type: {
													name: "String"
											}
									},
									updatedOn: {
											serializedName: "updatedOn",
											type: {
													name: "DateTime"
											}
									},
									type: {
											serializedName: "type",
											required: !0,
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, fo = {
					type: {
							name: "Composite",
							className: "ChannelAccount",
							modelProperties: {
									id: {
											serializedName: "id",
											type: {
													name: "String"
											}
									},
									name: {
											serializedName: "name",
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, yo = {
					type: {
							name: "Composite",
							className: "NluResponse",
							modelProperties: {
									scoredClassification: {
											serializedName: "scoredClassification",
											type: {
													name: "Composite",
													className: "ScoredClassification"
											}
									},
									classificationRanking: {
											serializedName: "classificationRanking",
											required: !0,
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "ScoredClassification"
															}
													}
											}
									},
									qualifyingClassifications: {
											serializedName: "qualifyingClassifications",
											type: {
													name: "Dictionary",
													value: {
															type: {
																	name: "Number"
															}
													}
											}
									},
									ood: {
											serializedName: "ood",
											type: {
													name: "Number"
											}
									},
									metaData: {
											serializedName: "metaData",
											type: {
													name: "String"
											}
									},
									entities: {
											serializedName: "entities",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "NamedEntity"
															}
													}
											}
									}
							}
					}
			}
				, vo = {
					type: {
							name: "Composite",
							className: "ScoredClassification",
							modelProperties: {
									classification: {
											serializedName: "classification",
											required: !0,
											type: {
													name: "String"
											}
									},
									score: {
											serializedName: "score",
											required: !0,
											type: {
													name: "Number"
											}
									}
							}
					}
			}
				, bo = {
					type: {
							name: "Composite",
							className: "NamedEntity",
							modelProperties: {
									type: {
											serializedName: "type",
											type: {
													name: "String"
											}
									},
									value: {
											serializedName: "value",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									originalValue: {
											serializedName: "originalValue",
											nullable: !0,
											type: {
													name: "String"
											}
									},
									origin: {
											serializedName: "origin",
											nullable: !0,
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, So = {
					type: {
							name: "Composite",
							className: "BingFirstPageContent",
							modelProperties: {
									answerId: {
											serializedName: "answerId",
											type: {
													name: "String"
											}
									},
									serviceName: {
											serializedName: "serviceName",
											type: {
													name: "String"
											}
									},
									scenarioName: {
											serializedName: "scenarioName",
											type: {
													name: "String"
											}
									},
									feedName: {
											serializedName: "feedName",
											type: {
													name: "String"
											}
									},
									displayText: {
											serializedName: "displayText",
											type: {
													name: "String"
											}
									},
									spokenText: {
											serializedName: "spokenText",
											type: {
													name: "String"
											}
									},
									spokenSsmlText: {
											serializedName: "spokenSSMLText",
											type: {
													name: "String"
											}
									},
									rank: {
											serializedName: "rank",
											type: {
													name: "Number"
											}
									},
									isAdultQuery: {
											serializedName: "isAdultQuery",
											type: {
													name: "Boolean"
											}
									},
									adultQueryScore: {
											serializedName: "adultQueryScore",
											type: {
													name: "Number"
											}
									},
									sourceUrl: {
											serializedName: "sourceUrl",
											type: {
													name: "String"
											}
									},
									sourceName: {
											serializedName: "sourceName",
											type: {
													name: "String"
											}
									},
									title: {
											serializedName: "title",
											type: {
													name: "String"
											}
									},
									rankingScore: {
											serializedName: "rankingScore",
											type: {
													name: "Number"
											}
									}
							}
					}
			}
				, Co = {
					type: {
							name: "Composite",
							className: "BaseRequest",
							modelProperties: {
									traceId: {
											serializedName: "traceId",
											type: {
													name: "String"
											}
									},
									sliceIds: {
											serializedName: "sliceIds",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									source: {
											serializedName: "source",
											required: !0,
											type: {
													name: "String"
											}
									},
									clientInfo: {
											serializedName: "clientInfo",
											type: {
													name: "Dictionary",
													value: {
															type: {
																	name: "any"
															}
													}
											}
									},
									conversationId: {
											serializedName: "conversationId",
											type: {
													name: "String"
											}
									},
									requestId: {
											serializedName: "requestId",
											type: {
													name: "String"
											}
									},
									optionsSets: {
											serializedName: "optionsSets",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									},
									extraExtensionParameters: {
											serializedName: "extraExtensionParameters",
											type: {
													name: "Dictionary",
													value: {
															type: {
																	name: "any"
															}
													}
											}
									},
									privacy: {
											serializedName: "privacy",
											type: {
													name: "String"
											}
									},
									extraExtensions: {
											serializedName: "extraExtensions",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Dictionary",
																	value: {
																			type: {
																					name: "any"
																			}
																	}
															}
													}
											}
									},
									options: {
											serializedName: "options",
											type: {
													name: "Dictionary",
													value: {
															type: {
																	name: "any"
															}
													}
											}
									}
							}
					}
			}
				, Eo = {
					type: {
							name: "Composite",
							className: "BaseResponse",
							modelProperties: {
									result: {
											serializedName: "result",
											type: {
													name: "Composite",
													className: "Result"
											}
									}
							}
					}
			}
				, To = {
					type: {
							name: "Composite",
							className: "Result",
							modelProperties: {
									error: {
											serializedName: "error",
											type: {
													name: "String"
											}
									},
									exception: {
											serializedName: "exception",
											type: {
													name: "String"
											}
									},
									message: {
											serializedName: "message",
											required: !0,
											type: {
													name: "String"
											}
									},
									renewCert: {
											serializedName: "renewCert",
											type: {
													name: "Boolean"
											}
									},
									retry: {
											serializedName: "retry",
											type: {
													name: "Boolean"
											}
									},
									serviceVersion: {
											serializedName: "serviceVersion",
											required: !0,
											type: {
													name: "String"
											}
									},
									value: {
											serializedName: "value",
											required: !0,
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, Io = {
					type: {
							name: "Composite",
							className: "ChatRequest",
							modelProperties: {
									...Co.type.modelProperties,
									isStartOfSession: {
											serializedName: "isStartOfSession",
											type: {
													name: "Boolean"
											}
									},
									message: {
											serializedName: "message",
											type: {
													name: "Composite",
													className: "Message"
											}
									},
									messageProgress: {
											serializedName: "messageProgress",
											type: {
													name: "String"
											}
									},
									messageCorrelationId: {
											serializedName: "messageCorrelationId",
											type: {
													name: "String"
											}
									},
									tenantId: {
											serializedName: "tenantId",
											type: {
													name: "String"
											}
									},
									context: {
											serializedName: "context",
											nullable: !0,
											type: {
													name: "any"
											}
									},
									previousMessages: {
											serializedName: "previousMessages",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Message"
															}
													}
											}
									},
									ignoreCache: {
											serializedName: "ignoreCache",
											type: {
													name: "Boolean"
											}
									},
									topLgContent: {
											serializedName: "topLgContent",
											type: {
													name: "Composite",
													className: "BingFirstPageContent"
											}
									},
									bingFirstPageContent: {
											serializedName: "bingFirstPageContent",
											type: {
													name: "Composite",
													className: "BingFirstPageContent"
											}
									},
									webPageContent: {
											serializedName: "webPageContent",
											type: {
													name: "Composite",
													className: "BingFirstPageContent"
											}
									},
									videoAnswerContent: {
											serializedName: "videoAnswerContent",
											type: {
													name: "Composite",
													className: "BingFirstPageContent"
											}
									},
									qasDomains: {
											serializedName: "qasDomains",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "String"
															}
													}
											}
									}
							}
					}
			}
				, wo = {
					type: {
							name: "Composite",
							className: "BaseBotResponse",
							modelProperties: {
									...Eo.type.modelProperties,
									conversationId: {
											serializedName: "conversationId",
											required: !0,
											type: {
													name: "String"
											}
									},
									requestId: {
											serializedName: "requestId",
											required: !0,
											type: {
													name: "String"
											}
									},
									conversationExpiryTime: {
											serializedName: "conversationExpiryTime",
											required: !0,
											type: {
													name: "DateTime"
											}
									},
									shouldInitiateConversation: {
											serializedName: "shouldInitiateConversation",
											type: {
													name: "Boolean"
											}
									}
							}
					}
			}
				, Ao = {
					type: {
							name: "Composite",
							className: "ChatResponse",
							modelProperties: {
									...wo.type.modelProperties,
									messages: {
											serializedName: "messages",
											required: !0,
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Message"
															}
													}
											}
									},
									firstNewMessageIndex: {
											serializedName: "firstNewMessageIndex",
											required: !0,
											type: {
													name: "Number"
											}
									},
									suggestedResponses: {
											serializedName: "suggestedResponses",
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Message"
															}
													}
											}
									}
							}
					}
			}
				, Ro = {
					type: {
							name: "Composite",
							className: "CreateConversationResponse",
							modelProperties: {
									...wo.type.modelProperties,
									conversationSignature: {
											serializedName: "conversationSignature",
											required: !0,
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, xo = {
					type: {
							name: "Composite",
							className: "ShareMessagesRequest",
							modelProperties: {
									...Co.type.modelProperties,
									messages: {
											serializedName: "messages",
											required: !0,
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Message"
															}
													}
											}
									},
									shareId: {
											serializedName: "shareId",
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, Oo = {
					type: {
							name: "Composite",
							className: "ShareMessagesResponse",
							modelProperties: {
									...Eo.type.modelProperties,
									shareId: {
											serializedName: "shareId",
											required: !0,
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, No = {
					type: {
							name: "Composite",
							className: "GetSharedMessagesResponse",
							modelProperties: {
									...Eo.type.modelProperties,
									messages: {
											serializedName: "messages",
											required: !0,
											type: {
													name: "Sequence",
													element: {
															type: {
																	name: "Composite",
																	className: "Message"
															}
													}
											}
									}
							}
					}
			}
				, Po = {
					parameterPath: ["options", "contentType"],
					mapper: {
							defaultValue: "application/json",
							isConstant: !0,
							serializedName: "Content-Type",
							type: {
									name: "String"
							}
					}
			}
				, Do = {
					parameterPath: "body",
					mapper: xo
			}
				, Mo = {
					parameterPath: "body",
					mapper: Io
			}
				, Lo = {
					parameterPath: "accept",
					mapper: {
							defaultValue: "application/json",
							isConstant: !0,
							serializedName: "Accept",
							type: {
									name: "String"
							}
					}
			}
				, ko = {
					parameterPath: "$host",
					mapper: {
							serializedName: "$host",
							required: !0,
							type: {
									name: "String"
							}
					},
					skipEncoding: !0
			};
			class ChatImpl {
					constructor(e) {
							this.client = e
					}
					post(e, t) {
							return this.client.sendOperationRequest({
									body: e,
									options: t
							}, Bo)
					}
			}
			const Fo = createSerializer(i, !1)
				, Bo = {
					path: "/chat",
					httpMethod: "POST",
					responses: {
							200: {
									bodyMapper: Ao
							}
					},
					requestBody: Mo,
					urlParameters: [ko],
					headerParameters: [Po, Lo],
					mediaType: "json",
					serializer: Fo
			};
			class MessageSharingImpl {
					constructor(e) {
							this.client = e
					}
					shareMessagesAsync(e, t) {
							return this.client.sendOperationRequest({
									body: e,
									options: t
							}, Uo)
					}
					async getSharedMessagesAsync(e, t, n, i, r) {
							const o = {
									shareId: e,
									source: t,
									traceId: n,
									sliceIds: i.join(","),
									options: r
							}
								, s = await this.client.sendOperationRequest(o, zo);
							return s.type,
							fe.GetSharedMessagesResponse,
							s
					}
			}
			const Go = createSerializer(i, !1)
				, Uo = {
					path: "/ShareMessages",
					httpMethod: "POST",
					responses: {
							200: {
									bodyMapper: Oo
							}
					},
					requestBody: Do,
					urlParameters: [ko],
					headerParameters: [Po, Lo],
					mediaType: "json",
					serializer: Go
			}
				, zo = {
					path: "/GetSharedMessages",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: No
							}
					},
					queryParameters: [{
							parameterPath: "shareId",
							mapper: {
									serializedName: "shareId",
									required: !0,
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: "source",
							mapper: {
									serializedName: "source",
									required: !0,
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: "traceId",
							mapper: {
									serializedName: "traceId",
									required: !0,
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: "sliceIds",
							mapper: {
									serializedName: "sliceIds",
									required: !0,
									type: {
											name: "String"
									}
							}
					}],
					urlParameters: [ko],
					headerParameters: [Lo],
					serializer: Go
			}
				, $o = createSerializer(i, !1)
				, Vo = {
					path: "/CreateConversation",
					httpMethod: "POST",
					responses: {
							200: {
									bodyMapper: Ro
							}
					},
					requestBody: Mo,
					urlParameters: [ko],
					headerParameters: [Po, Lo],
					mediaType: "json",
					serializer: $o
			};
			class CreateConversationImpl {
					constructor(e) {
							this.client = e
					}
					post(e, t) {
							return this.client.sendOperationRequest({
									body: e,
									options: t
							}, Vo)
					}
			}
			class SydneyAPI extends serviceClient_ServiceClient {
					constructor(e) {
							var t, n;
							e || (e = {});
							const i = "azsdk-js-api-client-factory/1.0.0-beta.1"
								, r = e.userAgentOptions && e.userAgentOptions.userAgentPrefix ? `${e.userAgentOptions.userAgentPrefix} ${i}` : `${i}`;
							super({
									requestContentType: "application/json; charset=utf-8",
									...e,
									userAgentOptions: {
											userAgentPrefix: r
									},
									baseUri: null !== (n = null !== (t = e.endpoint) && void 0 !== t ? t : e.baseUri) && void 0 !== n ? n : "https://services.bingapis.com/sydney"
							}),
							this.pipeline.removePolicy({
									name: Jn
							}),
							this.$host = e.$host || "https://services.bingapis.com/sydney",
							this.chat = new ChatImpl(this),
							this.createConversation = new CreateConversationImpl(this),
							this.sharing = new MessageSharingImpl(this)
					}
			}
			const Ho = {
					type: {
							name: "Composite",
							className: "CreateConversationResponse",
							modelProperties: {
									conversationId: {
											serializedName: "conversationId",
											required: !0,
											type: {
													name: "String"
											}
									},
									conversationSignature: {
											serializedName: "conversationSignature",
											required: !0,
											type: {
													name: "String"
											}
									},
									clientId: {
											serializedName: "clientId",
											required: !0,
											type: {
													name: "String"
											}
									}
							}
					}
			}
				, qo = createSerializer(r, !1)
				, jo = {
					path: "/turing/conversation/create",
					httpMethod: "GET",
					responses: {
							200: {
									bodyMapper: Ho
							}
					},
					urlParameters: [{
							parameterPath: "$host",
							mapper: {
									serializedName: "$host",
									required: !0,
									type: {
											name: "String"
									}
							},
							skipEncoding: !0
					}],
					headerParameters: [{
							parameterPath: ["options", "contentType"],
							mapper: {
									defaultValue: "application/json",
									isConstant: !0,
									serializedName: "Content-Type",
									type: {
											name: "String"
									}
							}
					}, {
							parameterPath: "accept",
							mapper: {
									defaultValue: "application/json",
									isConstant: !0,
									serializedName: "Accept",
									type: {
											name: "String"
									}
							}
					}],
					mediaType: "json",
					serializer: qo
			};
			class create_conversation_CreateConversationImpl {
					constructor(e) {
							this.client = e
					}
					get(e) {
							return this.client.sendOperationRequest({
									options: e
							}, jo)
					}
			}
			class BingAPI extends serviceClient_ServiceClient {
					constructor(e) {
							var t, n;
							e || (e = {});
							const i = "azsdk-js-api-client-factory/1.0.0-beta.1"
								, r = e.userAgentOptions && e.userAgentOptions.userAgentPrefix ? `${e.userAgentOptions.userAgentPrefix} ${i}` : `${i}`;
							super({
									requestContentType: "application/json; charset=utf-8",
									...e,
									userAgentOptions: {
											userAgentPrefix: r
									},
									baseUri: null !== (n = null !== (t = e.endpoint) && void 0 !== t ? t : e.baseUri) && void 0 !== n ? n : "https://www.bing.com"
							}),
							this.pipeline.removePolicy({
									name: Jn
							}),
							this.$host = e.$host || "https://www.bing.com",
							this.createConversation = new create_conversation_CreateConversationImpl(this)
					}
			}
			class ApiClientFactory {
					constructor() {}
					static create(e, t, n, i) {
							switch (null != n || (n = ""),
							null != t || (t = ""),
							e) {
							case xe.Proteus:
									return this.createProteusApiClient(t, n, i);
							case xe.OpenAI:
									return this.createOpenAiApiClient(t, i);
							case xe.Sydney:
									return this.createSydneyApiClient();
							case xe.WebSearch:
									return this.createWebSearchClient(t, n);
							case xe.Bing:
									return this.createBingApiClient(t);
							default:
									throw new Error("Unsupported client type.")
							}
					}
					static createProteusApiClient(e, t, n) {
							if (void 0 === ApiClientFactory.proteus) {
									const i = {
											allowInsecureConnection: e === ae.HttpLocalhost7071V0,
											$host: e,
											endpoint: e,
											credential: n
									};
									ApiClientFactory.proteus = new ProteusAPI(t,i)
							}
							return ApiClientFactory.proteus
					}
					static createOpenAiApiClient(e, t) {
							if (void 0 === ApiClientFactory.openai) {
									const i = `${e}${proxiedApiRelativeBasePath("openai")}`
										, r = {
											$host: i,
											endpoint: i,
											credential: t
									};
									e.startsWith(ae.HttpsProteusAzureApiNetTestV0) && (r.additionalPolicies = [(n = "debug_token",
									{
											policy: new ProteusRuntimeTokenPolicy(n),
											position: "perCall"
									})]),
									ApiClientFactory.openai = new OpenAIAPI(r)
							}
							var n;
							return ApiClientFactory.openai
					}
					static createSydneyApiClient() {
							return void 0 === ApiClientFactory.sydney && (ApiClientFactory.sydney = new SydneyAPI),
							ApiClientFactory.sydney
					}
					static createWebSearchClient(e, t, n=!1) {
							if (void 0 === ApiClientFactory.webSearch) {
									const {origin: t, pathname: o} = new URL(e)
										, s = `{Endpoint}${function(e, t) {
											return `${e}${proxiedApiRelativeBasePath(t)}`
									}(o || "", n ? "bingsearchservices" : "cognitiveservices")}`
										, a = new EmptyServiceClientCredentials
										, l = [deserializationPolicy({
											json: ["application/json", "text/json", "text/plain"]
									})];
									e.startsWith(ae.HttpsProteusAzureApiNetTestV0) && l.push(function(e) {
											return {
													create: (t,n)=>new ProteusRuntimeTokenPolicyMsRestJs_ProteusRuntimeTokenPolicy(t,n,e)
											}
									}("debug_token"));
									const c = {
											requestPolicyFactories: l,
											endpoint: t,
											baseUri: s
									};
									ApiClientFactory.webSearch = (i = new hn(a,c),
									r = s,
									i[Wo] = r,
									i)
							}
							var i, r;
							return ApiClientFactory.webSearch
					}
					static createBingApiClient(e) {
							void 0 === ApiClientFactory.bing && (ApiClientFactory.bing = new BingAPI);
							const t = {
									$host: e
							};
							return ApiClientFactory.bing = new BingAPI(t)
					}
			}
			const Wo = "baseUri";
			function proxiedApiRelativeBasePath(e) {
					return `/proxied/${e}`
			}
			class ApiService extends lifecycle_Disposable {
					get webSearch() {
							return void 0 === this._webSearch && (this._webSearch = ApiClientFactory.create(xe.WebSearch, ae.HttpsProteusAzureApiNetTestV0)),
							this._webSearch
					}
					get sydney() {
							return void 0 === this._sydney && (this._sydney = ApiClientFactory.create(xe.Sydney)),
							this._sydney
					}
					get bing() {
							return void 0 === this._bing && (this._bing = ApiClientFactory.create(xe.Bing)),
							this._bing
					}
			}
			const Yo = P.createInterface("IConfigService");
			var Ko, Qo, Zo, Xo, Jo, es, ts, ns, rs, os;
			(function(e) {
					e.EndChat = "END_CHAT",
					e.Timeout = "TIMEOUT",
					e.ValidResponse = "VALID_RESPONSE",
					e.Retry = "RETRY",
					e.Restart = "RESTART",
					e.Success = "SUCCESS",
					e.MaxRetriesExceeded = "MAX_RETRIES_EXCEEDED",
					e.StaleMessage = "RESTART",
					e.NetworkOffline = "NETWORK_OFFLINE",
					e.FailedToConnect = "FAILED_TO_CONNECT",
					e.UnRecoverable = "UNRECOVERABLE"
			}
			)(Ko || (Ko = {})),
			function(e) {
					e.fromResult = function(t) {
							let n = e.EndChat;
							switch (t) {
							case ye.Success:
									n = e.Success;
									break;
							case ye.InternalError:
							case ye.ProcessingMessage:
									n = e.Retry;
									break;
							case ye.InvalidSession:
									n = e.Restart
							}
							return n
					}
			}(Ko || (Ko = {})),
			function(e) {
					e.Next = "NEXT",
					e.Update = "UPDATE",
					e.Complete = "COMPLETE",
					e.Error = "ERROR"
			}(Qo || (Qo = {})),
			function(e) {
					e[e.Trace = 0] = "Trace",
					e[e.Debug = 1] = "Debug",
					e[e.Info = 2] = "Info",
					e[e.Warning = 3] = "Warning",
					e[e.Error = 4] = "Error",
					e[e.Off = 5] = "Off"
			}(Zo || (Zo = {})),
			function(e) {
					e[e.NoMatch = 0] = "NoMatch",
					e[e.Canceled = 1] = "Canceled",
					e[e.RecognizingSpeech = 2] = "RecognizingSpeech",
					e[e.RecognizedSpeech = 3] = "RecognizedSpeech",
					e[e.RecognizedKeyword = 4] = "RecognizedKeyword",
					e[e.RecognizingIntent = 5] = "RecognizingIntent",
					e[e.RecognizedIntent = 6] = "RecognizedIntent",
					e[e.TranslatingSpeech = 7] = "TranslatingSpeech",
					e[e.TranslatedSpeech = 8] = "TranslatedSpeech",
					e[e.SynthesizingAudio = 9] = "SynthesizingAudio",
					e[e.SynthesizingAudioCompleted = 10] = "SynthesizingAudioCompleted",
					e[e.SynthesizingAudioStarted = 11] = "SynthesizingAudioStarted",
					e[e.EnrollingVoiceProfile = 12] = "EnrollingVoiceProfile",
					e[e.EnrolledVoiceProfile = 13] = "EnrolledVoiceProfile",
					e[e.RecognizedSpeakers = 14] = "RecognizedSpeakers",
					e[e.RecognizedSpeaker = 15] = "RecognizedSpeaker",
					e[e.ResetVoiceProfile = 16] = "ResetVoiceProfile",
					e[e.DeletedVoiceProfile = 17] = "DeletedVoiceProfile",
					e[e.VoicesListRetrieved = 18] = "VoicesListRetrieved"
			}(Xo || (Xo = {})),
			function(e) {
					e[e.NoError = 0] = "NoError",
					e[e.AuthenticationFailure = 1] = "AuthenticationFailure",
					e[e.BadRequestParameters = 2] = "BadRequestParameters",
					e[e.TooManyRequests = 3] = "TooManyRequests",
					e[e.ConnectionFailure = 4] = "ConnectionFailure",
					e[e.ServiceTimeout = 5] = "ServiceTimeout",
					e[e.ServiceError = 6] = "ServiceError",
					e[e.RuntimeError = 7] = "RuntimeError",
					e[e.Forbidden = 8] = "Forbidden"
			}(Jo || (Jo = {}));
			class RiffPcmEncoder {
					constructor(e, t) {
							this.privActualSampleRate = e,
							this.privDesiredSampleRate = t
					}
					encode(e) {
							const t = this.downSampleAudioFrame(e, this.privActualSampleRate, this.privDesiredSampleRate);
							if (!t)
									return null;
							const n = 2 * t.length
								, i = new ArrayBuffer(n)
								, r = new DataView(i);
							return this.floatTo16BitPCM(r, 0, t),
							i
					}
					setString(e, t, n) {
							for (let i = 0; i < n.length; i++)
									e.setUint8(t + i, n.charCodeAt(i))
					}
					floatTo16BitPCM(e, t, n) {
							for (let i = 0; i < n.length; i++,
							t += 2) {
									const r = Math.max(-1, Math.min(1, n[i]));
									e.setInt16(t, r < 0 ? 32768 * r : 32767 * r, !0)
							}
					}
					downSampleAudioFrame(e, t, n) {
							if (!e)
									return null;
							if (n === t || n > t)
									return e;
							const i = t / n
								, r = Math.round(e.length / i)
								, o = new Float32Array(r);
							let s = 0
								, a = 0;
							for (; a < r; ) {
									const t = Math.round((a + 1) * i);
									let n = 0
										, r = 0;
									for (; s < t && s < e.length; )
											n += e[s++],
											r++;
									o[a++] = n / r
							}
							return o
					}
			}
			class PcmRecorder {
					constructor(e) {
							this.privStopInputOnRelease = e
					}
					record(e, t, n) {
							const i = new RiffPcmEncoder(e.sampleRate,16e3)
								, r = e.createMediaStreamSource(t)
								, attachScriptProcessor = ()=>{
									const o = (()=>{
											let t = 0;
											try {
													return e.createScriptProcessor(t, 1, 1)
											} catch (n) {
													t = 2048;
													let i = e.sampleRate;
													for (; t < 16384 && i >= 32e3; )
															t <<= 1,
															i >>= 1;
													return e.createScriptProcessor(t, 1, 1)
											}
									}
									)();
									o.onaudioprocess = e=>{
											const t = e.inputBuffer.getChannelData(0);
											if (n && !n.isClosed) {
													const e = i.encode(t);
													e && n.writeStreamChunk({
															buffer: e,
															isEnd: !1,
															timeReceived: Date.now()
													})
											}
									}
									,
									r.connect(o),
									o.connect(e.destination),
									this.privMediaResources = {
											scriptProcessorNode: o,
											source: r,
											stream: t
									}
							}
							;
							if (e.audioWorklet) {
									if (!this.privSpeechProcessorScript) {
											const e = new Blob(["class SP extends AudioWorkletProcessor {\n                    constructor(options) {\n                      super(options);\n                    }\n                    process(inputs, outputs) {\n                      const input = inputs[0];\n                      const output = [];\n                      for (let channel = 0; channel < input.length; channel += 1) {\n                        output[channel] = input[channel];\n                      }\n                      this.port.postMessage(output[0]);\n                      return true;\n                    }\n                  }\n                  registerProcessor('speech-processor', SP);"],{
													type: "application/javascript; charset=utf-8"
											});
											this.privSpeechProcessorScript = URL.createObjectURL(e)
									}
									e.audioWorklet.addModule(this.privSpeechProcessorScript).then((()=>{
											const o = new AudioWorkletNode(e,"speech-processor");
											o.port.onmessage = e=>{
													const t = e.data;
													if (n && !n.isClosed) {
															const e = i.encode(t);
															e && n.writeStreamChunk({
																	buffer: e,
																	isEnd: !1,
																	timeReceived: Date.now()
															})
													}
											}
											,
											r.connect(o),
											o.connect(e.destination),
											this.privMediaResources = {
													scriptProcessorNode: o,
													source: r,
													stream: t
											}
									}
									)).catch((()=>{
											attachScriptProcessor()
									}
									))
							} else
									try {
											attachScriptProcessor()
									} catch (e) {
											throw new Error(`Unable to start audio worklet node for PCMRecorder: ${e}`)
									}
					}
					releaseMediaResources(e) {
							this.privMediaResources && (this.privMediaResources.scriptProcessorNode && (this.privMediaResources.scriptProcessorNode.disconnect(e.destination),
							this.privMediaResources.scriptProcessorNode = null),
							this.privMediaResources.source && (this.privMediaResources.source.disconnect(),
							this.privStopInputOnRelease && this.privMediaResources.stream.getTracks().forEach((e=>e.stop())),
							this.privMediaResources.source = null))
					}
					setWorkletUrl(e) {
							this.privSpeechProcessorScript = e
					}
			}
			(function(e) {
					e[e.SpeechServiceConnection_Key = 0] = "SpeechServiceConnection_Key",
					e[e.SpeechServiceConnection_Endpoint = 1] = "SpeechServiceConnection_Endpoint",
					e[e.SpeechServiceConnection_Region = 2] = "SpeechServiceConnection_Region",
					e[e.SpeechServiceAuthorization_Token = 3] = "SpeechServiceAuthorization_Token",
					e[e.SpeechServiceAuthorization_Type = 4] = "SpeechServiceAuthorization_Type",
					e[e.SpeechServiceConnection_EndpointId = 5] = "SpeechServiceConnection_EndpointId",
					e[e.SpeechServiceConnection_TranslationToLanguages = 6] = "SpeechServiceConnection_TranslationToLanguages",
					e[e.SpeechServiceConnection_TranslationVoice = 7] = "SpeechServiceConnection_TranslationVoice",
					e[e.SpeechServiceConnection_TranslationFeatures = 8] = "SpeechServiceConnection_TranslationFeatures",
					e[e.SpeechServiceConnection_IntentRegion = 9] = "SpeechServiceConnection_IntentRegion",
					e[e.SpeechServiceConnection_ProxyHostName = 10] = "SpeechServiceConnection_ProxyHostName",
					e[e.SpeechServiceConnection_ProxyPort = 11] = "SpeechServiceConnection_ProxyPort",
					e[e.SpeechServiceConnection_ProxyUserName = 12] = "SpeechServiceConnection_ProxyUserName",
					e[e.SpeechServiceConnection_ProxyPassword = 13] = "SpeechServiceConnection_ProxyPassword",
					e[e.SpeechServiceConnection_RecoMode = 14] = "SpeechServiceConnection_RecoMode",
					e[e.SpeechServiceConnection_RecoLanguage = 15] = "SpeechServiceConnection_RecoLanguage",
					e[e.Speech_SessionId = 16] = "Speech_SessionId",
					e[e.SpeechServiceConnection_SynthLanguage = 17] = "SpeechServiceConnection_SynthLanguage",
					e[e.SpeechServiceConnection_SynthVoice = 18] = "SpeechServiceConnection_SynthVoice",
					e[e.SpeechServiceConnection_SynthOutputFormat = 19] = "SpeechServiceConnection_SynthOutputFormat",
					e[e.SpeechServiceConnection_AutoDetectSourceLanguages = 20] = "SpeechServiceConnection_AutoDetectSourceLanguages",
					e[e.SpeechServiceResponse_RequestDetailedResultTrueFalse = 21] = "SpeechServiceResponse_RequestDetailedResultTrueFalse",
					e[e.SpeechServiceResponse_RequestProfanityFilterTrueFalse = 22] = "SpeechServiceResponse_RequestProfanityFilterTrueFalse",
					e[e.SpeechServiceResponse_JsonResult = 23] = "SpeechServiceResponse_JsonResult",
					e[e.SpeechServiceResponse_JsonErrorDetails = 24] = "SpeechServiceResponse_JsonErrorDetails",
					e[e.CancellationDetails_Reason = 25] = "CancellationDetails_Reason",
					e[e.CancellationDetails_ReasonText = 26] = "CancellationDetails_ReasonText",
					e[e.CancellationDetails_ReasonDetailedText = 27] = "CancellationDetails_ReasonDetailedText",
					e[e.LanguageUnderstandingServiceResponse_JsonResult = 28] = "LanguageUnderstandingServiceResponse_JsonResult",
					e[e.SpeechServiceConnection_Url = 29] = "SpeechServiceConnection_Url",
					e[e.SpeechServiceConnection_InitialSilenceTimeoutMs = 30] = "SpeechServiceConnection_InitialSilenceTimeoutMs",
					e[e.SpeechServiceConnection_EndSilenceTimeoutMs = 31] = "SpeechServiceConnection_EndSilenceTimeoutMs",
					e[e.Speech_SegmentationSilenceTimeoutMs = 32] = "Speech_SegmentationSilenceTimeoutMs",
					e[e.SpeechServiceConnection_EnableAudioLogging = 33] = "SpeechServiceConnection_EnableAudioLogging",
					e[e.SpeechServiceConnection_LanguageIdMode = 34] = "SpeechServiceConnection_LanguageIdMode",
					e[e.SpeechServiceConnection_RecognitionEndpointVersion = 35] = "SpeechServiceConnection_RecognitionEndpointVersion",
					e[e.SpeechServiceResponse_ProfanityOption = 36] = "SpeechServiceResponse_ProfanityOption",
					e[e.SpeechServiceResponse_PostProcessingOption = 37] = "SpeechServiceResponse_PostProcessingOption",
					e[e.SpeechServiceResponse_RequestWordLevelTimestamps = 38] = "SpeechServiceResponse_RequestWordLevelTimestamps",
					e[e.SpeechServiceResponse_StablePartialResultThreshold = 39] = "SpeechServiceResponse_StablePartialResultThreshold",
					e[e.SpeechServiceResponse_OutputFormatOption = 40] = "SpeechServiceResponse_OutputFormatOption",
					e[e.SpeechServiceResponse_TranslationRequestStablePartialResult = 41] = "SpeechServiceResponse_TranslationRequestStablePartialResult",
					e[e.SpeechServiceResponse_RequestWordBoundary = 42] = "SpeechServiceResponse_RequestWordBoundary",
					e[e.SpeechServiceResponse_RequestPunctuationBoundary = 43] = "SpeechServiceResponse_RequestPunctuationBoundary",
					e[e.SpeechServiceResponse_RequestSentenceBoundary = 44] = "SpeechServiceResponse_RequestSentenceBoundary",
					e[e.Conversation_ApplicationId = 45] = "Conversation_ApplicationId",
					e[e.Conversation_DialogType = 46] = "Conversation_DialogType",
					e[e.Conversation_Initial_Silence_Timeout = 47] = "Conversation_Initial_Silence_Timeout",
					e[e.Conversation_From_Id = 48] = "Conversation_From_Id",
					e[e.Conversation_Conversation_Id = 49] = "Conversation_Conversation_Id",
					e[e.Conversation_Custom_Voice_Deployment_Ids = 50] = "Conversation_Custom_Voice_Deployment_Ids",
					e[e.Conversation_Speech_Activity_Template = 51] = "Conversation_Speech_Activity_Template",
					e[e.Conversation_Request_Bot_Status_Messages = 52] = "Conversation_Request_Bot_Status_Messages",
					e[e.Conversation_Agent_Connection_Id = 53] = "Conversation_Agent_Connection_Id",
					e[e.SpeechServiceConnection_Host = 54] = "SpeechServiceConnection_Host",
					e[e.ConversationTranslator_Host = 55] = "ConversationTranslator_Host",
					e[e.ConversationTranslator_Name = 56] = "ConversationTranslator_Name",
					e[e.ConversationTranslator_CorrelationId = 57] = "ConversationTranslator_CorrelationId",
					e[e.ConversationTranslator_Token = 58] = "ConversationTranslator_Token",
					e[e.PronunciationAssessment_ReferenceText = 59] = "PronunciationAssessment_ReferenceText",
					e[e.PronunciationAssessment_GradingSystem = 60] = "PronunciationAssessment_GradingSystem",
					e[e.PronunciationAssessment_Granularity = 61] = "PronunciationAssessment_Granularity",
					e[e.PronunciationAssessment_EnableMiscue = 62] = "PronunciationAssessment_EnableMiscue",
					e[e.PronunciationAssessment_Json = 63] = "PronunciationAssessment_Json",
					e[e.PronunciationAssessment_Params = 64] = "PronunciationAssessment_Params",
					e[e.SpeakerRecognition_Api_Version = 65] = "SpeakerRecognition_Api_Version"
			}
			)(es || (es = {})),
			function(e) {
					e[e.Interactive = 0] = "Interactive",
					e[e.Conversation = 1] = "Conversation",
					e[e.Dictation = 2] = "Dictation"
			}(ts || (ts = {})),
			function(e) {
					e[e.Simple = 0] = "Simple",
					e[e.Detailed = 1] = "Detailed"
			}(ns || (ns = {}));
			class RecognizerConfig {
					constructor(e, t) {
							this.privSpeechServiceConfig = e || new SpeechServiceConfig(new Context(null)),
							this.privParameters = t,
							this.privMaxRetryCount = parseInt(t.getProperty("SPEECH-Error-MaxRetryCount", "4"), 10),
							this.privLanguageIdMode = t.getProperty(es.SpeechServiceConnection_LanguageIdMode, void 0)
					}
					get parameters() {
							return this.privParameters
					}
					get recognitionMode() {
							return this.privRecognitionMode
					}
					set recognitionMode(e) {
							this.privRecognitionMode = e,
							this.privRecognitionActivityTimeout = e === ts.Interactive ? 8e3 : 25e3,
							this.privSpeechServiceConfig.Recognition = ts[e]
					}
					get SpeechServiceConfig() {
							return this.privSpeechServiceConfig
					}
					get recognitionActivityTimeout() {
							return this.privRecognitionActivityTimeout
					}
					get isContinuousRecognition() {
							return this.privRecognitionMode !== ts.Interactive
					}
					get languageIdMode() {
							return this.privLanguageIdMode
					}
					get autoDetectSourceLanguages() {
							return this.parameters.getProperty(es.SpeechServiceConnection_AutoDetectSourceLanguages, void 0)
					}
					get recognitionEndpointVersion() {
							return this.parameters.getProperty(es.SpeechServiceConnection_RecognitionEndpointVersion, void 0)
					}
					get sourceLanguageModels() {
							const e = [];
							let t = !1;
							if (void 0 !== this.autoDetectSourceLanguages)
									for (const n of this.autoDetectSourceLanguages.split(",")) {
											const i = n + es.SpeechServiceConnection_EndpointId.toString()
												, r = this.parameters.getProperty(i, void 0);
											void 0 !== r ? (e.push({
													language: n,
													endpoint: r
											}),
											t = !0) : e.push({
													language: n,
													endpoint: ""
											})
									}
							return t ? e : void 0
					}
					get maxRetryCount() {
							return this.privMaxRetryCount
					}
			}
			class SpeechServiceConfig {
					constructor(e) {
							this.context = e
					}
					serialize() {
							return JSON.stringify(this, ((e,t)=>{
									if (t && "object" == typeof t) {
											const e = {};
											for (const n in t)
													Object.hasOwnProperty.call(t, n) && (e[n && n.charAt(0).toLowerCase() + n.substring(1)] = t[n]);
											return e
									}
									return t
							}
							))
					}
					get Context() {
							return this.context
					}
					get Recognition() {
							return this.recognition
					}
					set Recognition(e) {
							this.recognition = e.toLowerCase()
					}
			}
			class Context {
					constructor(e) {
							this.system = new System,
							this.os = e
					}
			}
			class System {
					constructor() {
							this.name = "SpeechSDK",
							this.version = "1.15.0-alpha.0.1",
							this.build = "JavaScript",
							this.lang = "JavaScript"
					}
			}
			class OS {
					constructor(e, t, n) {
							this.platform = e,
							this.name = t,
							this.version = n
					}
			}
			(function(e) {
					e.Bluetooth = "Bluetooth",
					e.Wired = "Wired",
					e.WiFi = "WiFi",
					e.Cellular = "Cellular",
					e.InBuilt = "InBuilt",
					e.Unknown = "Unknown"
			}
			)(rs || (rs = {})),
			function(e) {
					e.Phone = "Phone",
					e.Speaker = "Speaker",
					e.Car = "Car",
					e.Headset = "Headset",
					e.Thermostat = "Thermostat",
					e.Microphones = "Microphones",
					e.Deskphone = "Deskphone",
					e.RemoteControl = "RemoteControl",
					e.Unknown = "Unknown",
					e.File = "File",
					e.Stream = "Stream"
			}(os || (os = {}));
			const createNoDashGuid = ()=>esm_browser_v4().replace(new RegExp("-","g"), "").toUpperCase();
			class ArgumentNullError extends Error {
					constructor(e) {
							super(e),
							this.name = "ArgumentNull",
							this.message = e
					}
			}
			class InvalidOperationError extends Error {
					constructor(e) {
							super(e),
							this.name = "InvalidOperation",
							this.message = e
					}
			}
			class ObjectDisposedError extends Error {
					constructor(e, t) {
							super(t),
							this.name = e + "ObjectDisposed",
							this.message = t
					}
			}
			class EventSource_EventSource {
					constructor(e) {
							this.privEventListeners = {},
							this.privIsDisposed = !1,
							this.privConsoleListener = void 0,
							this.privMetadata = e
					}
					onEvent(e) {
							if (this.isDisposed())
									throw new ObjectDisposedError("EventSource");
							if (this.metadata)
									for (const t in this.metadata)
											t && e.metadata && (e.metadata[t] || (e.metadata[t] = this.metadata[t]));
							for (const t in this.privEventListeners)
									t && this.privEventListeners[t] && this.privEventListeners[t](e)
					}
					attach(e) {
							const t = createNoDashGuid();
							return this.privEventListeners[t] = e,
							{
									detach: ()=>(delete this.privEventListeners[t],
									Promise.resolve())
							}
					}
					attachListener(e) {
							return this.attach((t=>e.onEvent(t)))
					}
					attachConsoleListener(e) {
							return this.privConsoleListener && this.privConsoleListener.detach(),
							this.privConsoleListener = this.attach((t=>e.onEvent(t))),
							this.privConsoleListener
					}
					isDisposed() {
							return this.privIsDisposed
					}
					dispose() {
							this.privEventListeners = null,
							this.privIsDisposed = !0
					}
					get metadata() {
							return this.privMetadata
					}
			}
			var ss, as;
			(function(e) {
					e[e.None = 0] = "None",
					e[e.Resolved = 1] = "Resolved",
					e[e.Rejected = 2] = "Rejected"
			}
			)(ss || (ss = {}));
			class Deferred {
					constructor() {
							this.resolve = e=>(this.privResolve(e),
							this),
							this.reject = e=>(this.privReject(e),
							this),
							this.privPromise = new Promise(((e,t)=>{
									this.privResolve = e,
									this.privReject = t
							}
							))
					}
					get promise() {
							return this.privPromise
					}
			}
			function marshalPromiseToCallbacks(e, t, n) {
					e.then((e=>{
							try {
									t && t(e)
							} catch (e) {
									if (n)
											try {
													if (e instanceof Error) {
															const t = e;
															n(t.name + ": " + t.message)
													} else
															n(e)
											} catch (e) {}
							}
					}
					), (e=>{
							if (n)
									try {
											if (e instanceof Error) {
													const t = e;
													n(t.name + ": " + t.message)
											} else
													n(e)
									} catch (e) {}
					}
					))
			}
			(function(e) {
					e[e.Debug = 0] = "Debug",
					e[e.Info = 1] = "Info",
					e[e.Warning = 2] = "Warning",
					e[e.Error = 3] = "Error",
					e[e.None = 4] = "None"
			}
			)(as || (as = {}));
			class PlatformEvent {
					constructor(e, t) {
							this.privName = e,
							this.privEventId = createNoDashGuid(),
							this.privEventTime = (new Date).toISOString(),
							this.privEventType = t,
							this.privMetadata = {}
					}
					get name() {
							return this.privName
					}
					get eventId() {
							return this.privEventId
					}
					get eventTime() {
							return this.privEventTime
					}
					get eventType() {
							return this.privEventType
					}
					get metadata() {
							return this.privMetadata
					}
			}
			class AudioSourceEvent extends PlatformEvent {
					constructor(e, t, n=as.Info) {
							super(e, n),
							this.privAudioSourceId = t
					}
					get audioSourceId() {
							return this.privAudioSourceId
					}
			}
			class AudioSourceInitializingEvent extends AudioSourceEvent {
					constructor(e) {
							super("AudioSourceInitializingEvent", e)
					}
			}
			class AudioSourceReadyEvent extends AudioSourceEvent {
					constructor(e) {
							super("AudioSourceReadyEvent", e)
					}
			}
			class AudioSourceOffEvent extends AudioSourceEvent {
					constructor(e) {
							super("AudioSourceOffEvent", e)
					}
			}
			class AudioSourceErrorEvent extends AudioSourceEvent {
					constructor(e, t) {
							super("AudioSourceErrorEvent", e, as.Error),
							this.privError = t
					}
					get error() {
							return this.privError
					}
			}
			class AudioStreamNodeEvent extends AudioSourceEvent {
					constructor(e, t, n) {
							super(e, t),
							this.privAudioNodeId = n
					}
					get audioNodeId() {
							return this.privAudioNodeId
					}
			}
			class AudioStreamNodeAttachingEvent extends AudioStreamNodeEvent {
					constructor(e, t) {
							super("AudioStreamNodeAttachingEvent", e, t)
					}
			}
			class AudioStreamNodeAttachedEvent extends AudioStreamNodeEvent {
					constructor(e, t) {
							super("AudioStreamNodeAttachedEvent", e, t)
					}
			}
			class AudioStreamNodeDetachedEvent extends AudioStreamNodeEvent {
					constructor(e, t) {
							super("AudioStreamNodeDetachedEvent", e, t)
					}
			}
			class AudioStreamNodeErrorEvent extends AudioStreamNodeEvent {
					constructor(e, t, n) {
							super("AudioStreamNodeErrorEvent", e, t),
							this.privError = n
					}
					get error() {
							return this.privError
					}
			}
			class List {
					constructor(e) {
							if (this.privSubscriptionIdCounter = 0,
							this.privAddSubscriptions = {},
							this.privRemoveSubscriptions = {},
							this.privDisposedSubscriptions = {},
							this.privDisposeReason = null,
							this.privList = [],
							e)
									for (const t of e)
											this.privList.push(t)
					}
					get(e) {
							return this.throwIfDisposed(),
							this.privList[e]
					}
					first() {
							return this.get(0)
					}
					last() {
							return this.get(this.length() - 1)
					}
					add(e) {
							this.throwIfDisposed(),
							this.insertAt(this.privList.length, e)
					}
					insertAt(e, t) {
							this.throwIfDisposed(),
							0 === e ? this.privList.unshift(t) : e === this.privList.length ? this.privList.push(t) : this.privList.splice(e, 0, t),
							this.triggerSubscriptions(this.privAddSubscriptions)
					}
					removeFirst() {
							return this.throwIfDisposed(),
							this.removeAt(0)
					}
					removeLast() {
							return this.throwIfDisposed(),
							this.removeAt(this.length() - 1)
					}
					removeAt(e) {
							return this.throwIfDisposed(),
							this.remove(e, 1)[0]
					}
					remove(e, t) {
							this.throwIfDisposed();
							const n = this.privList.splice(e, t);
							return this.triggerSubscriptions(this.privRemoveSubscriptions),
							n
					}
					clear() {
							this.throwIfDisposed(),
							this.remove(0, this.length())
					}
					length() {
							return this.throwIfDisposed(),
							this.privList.length
					}
					onAdded(e) {
							this.throwIfDisposed();
							const t = this.privSubscriptionIdCounter++;
							return this.privAddSubscriptions[t] = e,
							{
									detach: ()=>(delete this.privAddSubscriptions[t],
									Promise.resolve())
							}
					}
					onRemoved(e) {
							this.throwIfDisposed();
							const t = this.privSubscriptionIdCounter++;
							return this.privRemoveSubscriptions[t] = e,
							{
									detach: ()=>(delete this.privRemoveSubscriptions[t],
									Promise.resolve())
							}
					}
					onDisposed(e) {
							this.throwIfDisposed();
							const t = this.privSubscriptionIdCounter++;
							return this.privDisposedSubscriptions[t] = e,
							{
									detach: ()=>(delete this.privDisposedSubscriptions[t],
									Promise.resolve())
							}
					}
					join(e) {
							return this.throwIfDisposed(),
							this.privList.join(e)
					}
					toArray() {
							const e = Array();
							return this.privList.forEach((t=>{
									e.push(t)
							}
							)),
							e
					}
					any(e) {
							return this.throwIfDisposed(),
							e ? this.where(e).length() > 0 : this.length() > 0
					}
					all(e) {
							return this.throwIfDisposed(),
							this.where(e).length() === this.length()
					}
					forEach(e) {
							this.throwIfDisposed();
							for (let t = 0; t < this.length(); t++)
									e(this.privList[t], t)
					}
					select(e) {
							this.throwIfDisposed();
							const t = [];
							for (let n = 0; n < this.privList.length; n++)
									t.push(e(this.privList[n], n));
							return new List(t)
					}
					where(e) {
							this.throwIfDisposed();
							const t = new List;
							for (let n = 0; n < this.privList.length; n++)
									e(this.privList[n], n) && t.add(this.privList[n]);
							return t
					}
					orderBy(e) {
							this.throwIfDisposed();
							const t = this.toArray().sort(e);
							return new List(t)
					}
					orderByDesc(e) {
							return this.throwIfDisposed(),
							this.orderBy(((t,n)=>e(n, t)))
					}
					clone() {
							return this.throwIfDisposed(),
							new List(this.toArray())
					}
					concat(e) {
							return this.throwIfDisposed(),
							new List(this.privList.concat(e.toArray()))
					}
					concatArray(e) {
							return this.throwIfDisposed(),
							new List(this.privList.concat(e))
					}
					isDisposed() {
							return null == this.privList
					}
					dispose(e) {
							this.isDisposed() || (this.privDisposeReason = e,
							this.privList = null,
							this.privAddSubscriptions = null,
							this.privRemoveSubscriptions = null,
							this.triggerSubscriptions(this.privDisposedSubscriptions))
					}
					throwIfDisposed() {
							if (this.isDisposed())
									throw new ObjectDisposedError("List",this.privDisposeReason)
					}
					triggerSubscriptions(e) {
							if (e)
									for (const t in e)
											t && e[t]()
					}
			}
			var ls, Queue_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			(function(e) {
					e[e.Dequeue = 0] = "Dequeue",
					e[e.Peek = 1] = "Peek"
			}
			)(ls || (ls = {}));
			class Queue {
					constructor(e) {
							this.privPromiseStore = new List,
							this.privIsDrainInProgress = !1,
							this.privIsDisposing = !1,
							this.privDisposeReason = null,
							this.privList = e || new List,
							this.privDetachables = [],
							this.privSubscribers = new List,
							this.privDetachables.push(this.privList.onAdded((()=>this.drain())))
					}
					enqueue(e) {
							this.throwIfDispose(),
							this.enqueueFromPromise(new Promise((t=>t(e))))
					}
					enqueueFromPromise(e) {
							this.throwIfDispose(),
							e.then((e=>{
									this.privList.add(e)
							}
							), (()=>{}
							))
					}
					dequeue() {
							this.throwIfDispose();
							const e = new Deferred;
							return this.privSubscribers && (this.privSubscribers.add({
									deferral: e,
									type: ls.Dequeue
							}),
							this.drain()),
							e.promise
					}
					peek() {
							this.throwIfDispose();
							const e = new Deferred;
							return this.privSubscribers && (this.privSubscribers.add({
									deferral: e,
									type: ls.Peek
							}),
							this.drain()),
							e.promise
					}
					length() {
							return this.throwIfDispose(),
							this.privList.length()
					}
					isDisposed() {
							return null == this.privSubscribers
					}
					drainAndDispose(e, t) {
							return Queue_awaiter(this, void 0, void 0, (function*() {
									if (!this.isDisposed() && !this.privIsDisposing) {
											this.privDisposeReason = t,
											this.privIsDisposing = !0;
											const n = this.privSubscribers;
											if (n) {
													for (; n.length() > 0; ) {
															n.removeFirst().deferral.resolve(void 0)
													}
													this.privSubscribers === n && (this.privSubscribers = n)
											}
											for (const e of this.privDetachables)
													yield e.detach();
											if (this.privPromiseStore.length() > 0 && e) {
													const t = [];
													return this.privPromiseStore.toArray().forEach((e=>{
															t.push(e)
													}
													)),
													Promise.all(t).finally((()=>{
															this.privSubscribers = null,
															this.privList.forEach((t=>{
																	e(t)
															}
															)),
															this.privList = null
													}
													)).then()
											}
											this.privSubscribers = null,
											this.privList = null
									}
							}
							))
					}
					dispose(e) {
							return Queue_awaiter(this, void 0, void 0, (function*() {
									yield this.drainAndDispose(null, e)
							}
							))
					}
					drain() {
							if (!this.privIsDrainInProgress && !this.privIsDisposing) {
									this.privIsDrainInProgress = !0;
									const e = this.privSubscribers
										, t = this.privList;
									if (e && t) {
											for (; t.length() > 0 && e.length() > 0 && !this.privIsDisposing; ) {
													const n = e.removeFirst();
													if (n.type === ls.Peek)
															n.deferral.resolve(t.first());
													else {
															const e = t.removeFirst();
															n.deferral.resolve(e)
													}
											}
											this.privSubscribers === e && (this.privSubscribers = e),
											this.privList === t && (this.privList = t)
									}
									this.privIsDrainInProgress = !1
							}
					}
					throwIfDispose() {
							if (this.isDisposed()) {
									if (this.privDisposeReason)
											throw new InvalidOperationError(this.privDisposeReason);
									throw new ObjectDisposedError("Queue")
							}
							if (this.privIsDisposing)
									throw new InvalidOperationError("Queue disposing")
					}
			}
			var cs, Stream_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			class Stream {
					constructor(e) {
							this.privIsWriteEnded = !1,
							this.privIsReadEnded = !1,
							this.privId = e || createNoDashGuid(),
							this.privReaderQueue = new Queue
					}
					get isClosed() {
							return this.privIsWriteEnded
					}
					get isReadEnded() {
							return this.privIsReadEnded
					}
					get id() {
							return this.privId
					}
					close() {
							this.privIsWriteEnded || (this.writeStreamChunk({
									buffer: null,
									isEnd: !0,
									timeReceived: Date.now()
							}),
							this.privIsWriteEnded = !0)
					}
					writeStreamChunk(e) {
							if (this.throwIfClosed(),
							!this.privReaderQueue.isDisposed())
									try {
											this.privReaderQueue.enqueue(e)
									} catch (e) {}
					}
					read() {
							if (this.privIsReadEnded)
									throw new InvalidOperationError("Stream read has already finished");
							return this.privReaderQueue.dequeue().then((e=>Stream_awaiter(this, void 0, void 0, (function*() {
									return (void 0 === e || e.isEnd) && (yield this.privReaderQueue.dispose("End of stream reached")),
									e
							}
							))))
					}
					readEnded() {
							this.privIsReadEnded || (this.privIsReadEnded = !0,
							this.privReaderQueue = new Queue)
					}
					throwIfClosed() {
							if (this.privIsWriteEnded)
									throw new InvalidOperationError("Stream closed")
					}
			}
			class ChunkedArrayBufferStream extends Stream {
					constructor(e, t) {
							super(t),
							this.privTargetChunkSize = e,
							this.privNextBufferReadyBytes = 0
					}
					writeStreamChunk(e) {
							if (e.isEnd || 0 === this.privNextBufferReadyBytes && e.buffer.byteLength === this.privTargetChunkSize)
									return void super.writeStreamChunk(e);
							let t = 0;
							for (; t < e.buffer.byteLength; ) {
									void 0 === this.privNextBufferToWrite && (this.privNextBufferToWrite = new ArrayBuffer(this.privTargetChunkSize),
									this.privNextBufferStartTime = e.timeReceived);
									const n = Math.min(e.buffer.byteLength - t, this.privTargetChunkSize - this.privNextBufferReadyBytes)
										, i = new Uint8Array(this.privNextBufferToWrite)
										, r = new Uint8Array(e.buffer.slice(t, n + t));
									i.set(r, this.privNextBufferReadyBytes),
									this.privNextBufferReadyBytes += n,
									t += n,
									this.privNextBufferReadyBytes === this.privTargetChunkSize && (super.writeStreamChunk({
											buffer: this.privNextBufferToWrite,
											isEnd: !1,
											timeReceived: this.privNextBufferStartTime
									}),
									this.privNextBufferReadyBytes = 0,
									this.privNextBufferToWrite = void 0)
							}
					}
					close() {
							0 === this.privNextBufferReadyBytes || this.isClosed || super.writeStreamChunk({
									buffer: this.privNextBufferToWrite.slice(0, this.privNextBufferReadyBytes),
									isEnd: !1,
									timeReceived: this.privNextBufferStartTime
							}),
							super.close()
					}
			}
			class Events {
					static setEventSource(e) {
							if (!e)
									throw new ArgumentNullError("eventSource");
							Events.privInstance = e
					}
					static get instance() {
							return Events.privInstance
					}
			}
			Events.privInstance = new EventSource_EventSource,
			function(e) {
					e[e.PCM = 1] = "PCM",
					e[e.MuLaw = 2] = "MuLaw",
					e[e.Siren = 3] = "Siren",
					e[e.MP3 = 4] = "MP3",
					e[e.SILKSkype = 5] = "SILKSkype",
					e[e.OGG_OPUS = 6] = "OGG_OPUS",
					e[e.WEBM_OPUS = 7] = "WEBM_OPUS",
					e[e.ALaw = 8] = "ALaw",
					e[e.FLAC = 9] = "FLAC",
					e[e.OPUS = 10] = "OPUS"
			}(cs || (cs = {}));
			class AudioStreamFormat {
					static getDefaultInputFormat() {
							return AudioStreamFormatImpl.getDefaultInputFormat()
					}
					static getWaveFormat(e, t, n, i) {
							return new AudioStreamFormatImpl(e,t,n,i)
					}
					static getWaveFormatPCM(e, t, n) {
							return new AudioStreamFormatImpl(e,t,n)
					}
			}
			class AudioStreamFormatImpl extends AudioStreamFormat {
					constructor(e=16e3, t=16, n=1, i=cs.PCM) {
							super();
							let r = !0;
							switch (i) {
							case cs.PCM:
									this.formatTag = 1;
									break;
							case cs.ALaw:
									this.formatTag = 6;
									break;
							case cs.MuLaw:
									this.formatTag = 7;
									break;
							default:
									r = !1
							}
							if (this.bitsPerSample = t,
							this.samplesPerSec = e,
							this.channels = n,
							this.avgBytesPerSec = this.samplesPerSec * this.channels * (this.bitsPerSample / 8),
							this.blockAlign = this.channels * Math.max(this.bitsPerSample, 8),
							r) {
									this.privHeader = new ArrayBuffer(44);
									const e = new DataView(this.privHeader);
									this.setString(e, 0, "RIFF"),
									e.setUint32(4, 0, !0),
									this.setString(e, 8, "WAVEfmt "),
									e.setUint32(16, 16, !0),
									e.setUint16(20, this.formatTag, !0),
									e.setUint16(22, this.channels, !0),
									e.setUint32(24, this.samplesPerSec, !0),
									e.setUint32(28, this.avgBytesPerSec, !0),
									e.setUint16(32, this.channels * (this.bitsPerSample / 8), !0),
									e.setUint16(34, this.bitsPerSample, !0),
									this.setString(e, 36, "data"),
									e.setUint32(40, 0, !0)
							}
					}
					static getDefaultInputFormat() {
							return new AudioStreamFormatImpl
					}
					static getAudioContext(e) {
							const t = window.AudioContext || window.webkitAudioContext || !1;
							if (t)
									return void 0 !== e && navigator.mediaDevices.getSupportedConstraints().sampleRate ? new t({
											sampleRate: e
									}) : new t;
							throw new Error("Browser does not support Web Audio API (AudioContext is not available).")
					}
					close() {}
					get header() {
							return this.privHeader
					}
					setString(e, t, n) {
							for (let i = 0; i < n.length; i++)
									e.setUint8(t + i, n.charCodeAt(i))
					}
			}
			var MicAudioSource_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			class MicAudioSource {
					constructor(e, t, n, i) {
							this.privRecorder = e,
							this.deviceId = t,
							this.privStreams = {},
							this.privOutputChunkSize = MicAudioSource.AUDIOFORMAT.avgBytesPerSec / 10,
							this.privId = n || createNoDashGuid(),
							this.privEvents = new EventSource_EventSource,
							this.privMediaStream = i || null,
							this.privIsClosing = !1
					}
					get format() {
							return Promise.resolve(MicAudioSource.AUDIOFORMAT)
					}
					get blob() {
							return Promise.reject("Not implemented for Mic input")
					}
					turnOn() {
							if (this.privInitializeDeferral)
									return this.privInitializeDeferral.promise;
							this.privInitializeDeferral = new Deferred;
							try {
									this.createAudioContext()
							} catch (e) {
									if (e instanceof Error) {
											const t = e;
											this.privInitializeDeferral.reject(t.name + ": " + t.message)
									} else
											this.privInitializeDeferral.reject(e);
									return this.privInitializeDeferral.promise
							}
							const e = window.navigator;
							let t = e.getUserMedia || e.webkitGetUserMedia || e.mozGetUserMedia || e.msGetUserMedia;
							if (e.mediaDevices && (t = (t,n,i)=>{
									e.mediaDevices.getUserMedia(t).then(n).catch(i)
							}
							),
							t) {
									const next = ()=>{
											this.onEvent(new AudioSourceInitializingEvent(this.privId)),
											this.privMediaStream && this.privMediaStream.active ? (this.onEvent(new AudioSourceReadyEvent(this.privId)),
											this.privInitializeDeferral.resolve()) : t({
													audio: !this.deviceId || {
															deviceId: this.deviceId
													},
													video: !1
											}, (e=>{
													this.privMediaStream = e,
													this.onEvent(new AudioSourceReadyEvent(this.privId)),
													this.privInitializeDeferral.resolve()
											}
											), (e=>{
													const t = `Error occurred during microphone initialization: ${e}`;
													this.privInitializeDeferral.reject(t),
													this.onEvent(new AudioSourceErrorEvent(this.privId,t))
											}
											))
									}
									;
									"suspended" === this.privContext.state ? this.privContext.resume().then(next).catch((e=>{
											this.privInitializeDeferral.reject(`Failed to initialize audio context: ${e}`)
									}
									)) : next()
							} else {
									const e = "Browser does not support getUserMedia.";
									this.privInitializeDeferral.reject(e),
									this.onEvent(new AudioSourceErrorEvent(e,""))
							}
							return this.privInitializeDeferral.promise
					}
					id() {
							return this.privId
					}
					attach(e) {
							return this.onEvent(new AudioStreamNodeAttachingEvent(this.privId,e)),
							this.listen(e).then((t=>(this.onEvent(new AudioStreamNodeAttachedEvent(this.privId,e)),
							{
									detach: ()=>MicAudioSource_awaiter(this, void 0, void 0, (function*() {
											return t.readEnded(),
											delete this.privStreams[e],
											this.onEvent(new AudioStreamNodeDetachedEvent(this.privId,e)),
											this.turnOff()
									}
									)),
									id: ()=>e,
									read: ()=>t.read()
							})))
					}
					detach(e) {
							e && this.privStreams[e] && (this.privStreams[e].close(),
							delete this.privStreams[e],
							this.onEvent(new AudioStreamNodeDetachedEvent(this.privId,e)))
					}
					turnOff() {
							return MicAudioSource_awaiter(this, void 0, void 0, (function*() {
									for (const e in this.privStreams)
											if (e) {
													const t = this.privStreams[e];
													t && t.close()
											}
									this.onEvent(new AudioSourceOffEvent(this.privId)),
									this.privInitializeDeferral && (yield this.privInitializeDeferral,
									this.privInitializeDeferral = null),
									yield this.destroyAudioContext()
							}
							))
					}
					get events() {
							return this.privEvents
					}
					get deviceInfo() {
							return this.getMicrophoneLabel().then((e=>({
									bitspersample: MicAudioSource.AUDIOFORMAT.bitsPerSample,
									channelcount: MicAudioSource.AUDIOFORMAT.channels,
									connectivity: rs.Unknown,
									manufacturer: "Speech SDK",
									model: e,
									samplerate: MicAudioSource.AUDIOFORMAT.samplesPerSec,
									type: os.Microphones
							})))
					}
					setProperty(e, t) {
							if ("MICROPHONE-WorkletSourceUrl" !== e)
									throw new Error("Property '" + e + "' is not supported on Microphone.");
							this.privRecorder.setWorkletUrl(t)
					}
					getMicrophoneLabel() {
							const e = "microphone";
							if (void 0 !== this.privMicrophoneLabel)
									return Promise.resolve(this.privMicrophoneLabel);
							if (void 0 === this.privMediaStream || !this.privMediaStream.active)
									return Promise.resolve(e);
							this.privMicrophoneLabel = e;
							const t = this.privMediaStream.getTracks()[0].getSettings().deviceId;
							if (void 0 === t)
									return Promise.resolve(this.privMicrophoneLabel);
							const n = new Deferred;
							return navigator.mediaDevices.enumerateDevices().then((e=>{
									for (const n of e)
											if (n.deviceId === t) {
													this.privMicrophoneLabel = n.label;
													break
											}
									n.resolve(this.privMicrophoneLabel)
							}
							), (()=>n.resolve(this.privMicrophoneLabel))),
							n.promise
					}
					listen(e) {
							return MicAudioSource_awaiter(this, void 0, void 0, (function*() {
									yield this.turnOn();
									const t = new ChunkedArrayBufferStream(this.privOutputChunkSize,e);
									this.privStreams[e] = t;
									try {
											this.privRecorder.record(this.privContext, this.privMediaStream, t)
									} catch (t) {
											throw this.onEvent(new AudioStreamNodeErrorEvent(this.privId,e,t)),
											t
									}
									return t
							}
							))
					}
					onEvent(e) {
							this.privEvents.onEvent(e),
							Events.instance.onEvent(e)
					}
					createAudioContext() {
							this.privContext || (this.privContext = AudioStreamFormatImpl.getAudioContext(MicAudioSource.AUDIOFORMAT.samplesPerSec))
					}
					destroyAudioContext() {
							return MicAudioSource_awaiter(this, void 0, void 0, (function*() {
									if (!this.privContext)
											return;
									this.privRecorder.releaseMediaResources(this.privContext);
									let e = !1;
									"close"in this.privContext && (e = !0),
									e ? this.privIsClosing || (this.privIsClosing = !0,
									yield this.privContext.close(),
									this.privContext = null,
									this.privIsClosing = !1) : null !== this.privContext && "running" === this.privContext.state && (yield this.privContext.suspend())
							}
							))
					}
			}
			MicAudioSource.AUDIOFORMAT = AudioStreamFormat.getDefaultInputFormat();
			var FileAudioSource_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			class FileAudioSource {
					constructor(e, t, n) {
							this.privStreams = {},
							this.privHeaderEnd = 44,
							this.privId = n || createNoDashGuid(),
							this.privEvents = new EventSource_EventSource,
							this.privSource = e,
							"undefined" != typeof window && "undefined" != typeof Blob && this.privSource instanceof Blob ? this.privFilename = e.name : this.privFilename = t || "unknown.wav",
							this.privAudioFormatPromise = this.readHeader()
					}
					get format() {
							return this.privAudioFormatPromise
					}
					get blob() {
							return Promise.resolve(this.privSource)
					}
					turnOn() {
							if (this.privFilename.lastIndexOf(".wav") !== this.privFilename.length - 4) {
									const e = this.privFilename + " is not supported. Only WAVE files are allowed at the moment.";
									return this.onEvent(new AudioSourceErrorEvent(e,"")),
									Promise.reject(e)
							}
							this.onEvent(new AudioSourceInitializingEvent(this.privId)),
							this.onEvent(new AudioSourceReadyEvent(this.privId))
					}
					id() {
							return this.privId
					}
					attach(e) {
							return FileAudioSource_awaiter(this, void 0, void 0, (function*() {
									this.onEvent(new AudioStreamNodeAttachingEvent(this.privId,e));
									const t = yield this.upload(e);
									return this.onEvent(new AudioStreamNodeAttachedEvent(this.privId,e)),
									Promise.resolve({
											detach: ()=>FileAudioSource_awaiter(this, void 0, void 0, (function*() {
													t.readEnded(),
													delete this.privStreams[e],
													this.onEvent(new AudioStreamNodeDetachedEvent(this.privId,e)),
													yield this.turnOff()
											}
											)),
											id: ()=>e,
											read: ()=>t.read()
									})
							}
							))
					}
					detach(e) {
							e && this.privStreams[e] && (this.privStreams[e].close(),
							delete this.privStreams[e],
							this.onEvent(new AudioStreamNodeDetachedEvent(this.privId,e)))
					}
					turnOff() {
							for (const e in this.privStreams)
									if (e) {
											const t = this.privStreams[e];
											t && !t.isClosed && t.close()
									}
							return this.onEvent(new AudioSourceOffEvent(this.privId)),
							Promise.resolve()
					}
					get events() {
							return this.privEvents
					}
					get deviceInfo() {
							return this.privAudioFormatPromise.then((e=>Promise.resolve({
									bitspersample: e.bitsPerSample,
									channelcount: e.channels,
									connectivity: rs.Unknown,
									manufacturer: "Speech SDK",
									model: "File",
									samplerate: e.samplesPerSec,
									type: os.File
							})))
					}
					readHeader() {
							const e = this.privSource.slice(0, 4296)
								, t = new Deferred
								, processHeader = e=>{
									const n = new DataView(e)
										, getWord = e=>String.fromCharCode(n.getUint8(e), n.getUint8(e + 1), n.getUint8(e + 2), n.getUint8(e + 3));
									if ("RIFF" !== getWord(0))
											return void t.reject("Invalid WAV header in file, RIFF was not found");
									if ("WAVE" !== getWord(8) || "fmt " !== getWord(12))
											return void t.reject("Invalid WAV header in file, WAVEfmt was not found");
									const i = n.getInt32(16, !0)
										, r = n.getUint16(22, !0)
										, o = n.getUint32(24, !0)
										, s = n.getUint16(34, !0);
									let a = 36 + Math.max(i - 16, 0);
									for (; "data" !== getWord(a); a += 2)
											if (a > 4288)
													return void t.reject("Invalid WAV header in file, data block was not found");
									this.privHeaderEnd = a + 8,
									t.resolve(AudioStreamFormat.getWaveFormatPCM(o, s, r))
							}
							;
							if ("undefined" != typeof window && "undefined" != typeof Blob && e instanceof Blob) {
									const t = new FileReader;
									t.onload = e=>{
											const t = e.target.result;
											processHeader(t)
									}
									,
									t.readAsArrayBuffer(e)
							} else {
									const t = e;
									processHeader(t.buffer.slice(t.byteOffset, t.byteOffset + t.byteLength))
							}
							return t.promise
					}
					upload(e) {
							return FileAudioSource_awaiter(this, void 0, void 0, (function*() {
									const onerror = t=>{
											const n = `Error occurred while processing '${this.privFilename}'. ${t}`;
											throw this.onEvent(new AudioStreamNodeErrorEvent(this.privId,e,n)),
											new Error(n)
									}
									;
									try {
											yield this.turnOn();
											const t = yield this.privAudioFormatPromise
												, n = new ChunkedArrayBufferStream(t.avgBytesPerSec / 10,e);
											this.privStreams[e] = n;
											const i = this.privSource.slice(this.privHeaderEnd)
												, processFile = e=>{
													n.isClosed || (n.writeStreamChunk({
															buffer: e,
															isEnd: !1,
															timeReceived: Date.now()
													}),
													n.close())
											}
											;
											if ("undefined" != typeof window && "undefined" != typeof Blob && i instanceof Blob) {
													const e = new FileReader;
													e.onerror = e=>onerror(e.toString()),
													e.onload = e=>{
															const t = e.target.result;
															processFile(t)
													}
													,
													e.readAsArrayBuffer(i)
											} else {
													const e = i;
													processFile(e.buffer.slice(e.byteOffset, e.byteOffset + e.byteLength))
											}
											return n
									} catch (e) {
											onerror(e)
									}
							}
							))
					}
					onEvent(e) {
							this.privEvents.onEvent(e),
							Events.instance.onEvent(e)
					}
			}
			class Contracts {
					static throwIfNullOrUndefined(e, t) {
							if (null == e)
									throw new Error("throwIfNullOrUndefined:" + t)
					}
					static throwIfNull(e, t) {
							if (null === e)
									throw new Error("throwIfNull:" + t)
					}
					static throwIfNullOrWhitespace(e, t) {
							if (Contracts.throwIfNullOrUndefined(e, t),
							("" + e).trim().length < 1)
									throw new Error("throwIfNullOrWhitespace:" + t)
					}
					static throwIfDisposed(e) {
							if (e)
									throw new Error("the object is already disposed")
					}
					static throwIfArrayEmptyOrWhitespace(e, t) {
							if (Contracts.throwIfNullOrUndefined(e, t),
							0 === e.length)
									throw new Error("throwIfArrayEmptyOrWhitespace:" + t);
							for (const n of e)
									Contracts.throwIfNullOrWhitespace(n, t)
					}
					static throwIfFileDoesNotExist(e, t) {
							Contracts.throwIfNullOrWhitespace(e, t)
					}
					static throwIfNotUndefined(e, t) {
							if (void 0 !== e)
									throw new Error("throwIfNotUndefined:" + t)
					}
			}
			class PullAudioInputStreamCallback {
			}
			var ds, ps, us, AudioInputStream_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			class AudioInputStream {
					constructor() {}
					static createPushStream(e) {
							return PushAudioInputStream.create(e)
					}
					static createPullStream(e, t) {
							return PullAudioInputStream.create(e, t)
					}
			}
			class PushAudioInputStream extends AudioInputStream {
					static create(e) {
							return new PushAudioInputStreamImpl(e)
					}
			}
			class PushAudioInputStreamImpl extends PushAudioInputStream {
					constructor(e) {
							super(),
							this.privFormat = void 0 === e ? AudioStreamFormatImpl.getDefaultInputFormat() : e,
							this.privEvents = new EventSource_EventSource,
							this.privId = createNoDashGuid(),
							this.privStream = new ChunkedArrayBufferStream(this.privFormat.avgBytesPerSec / 10)
					}
					get format() {
							return Promise.resolve(this.privFormat)
					}
					write(e) {
							this.privStream.writeStreamChunk({
									buffer: e,
									isEnd: !1,
									timeReceived: Date.now()
							})
					}
					close() {
							this.privStream.close()
					}
					id() {
							return this.privId
					}
					get blob() {
							return this.attach("id").then((e=>{
									const t = [];
									let n = Buffer.from("");
									const readCycle = ()=>e.read().then((e=>!e || e.isEnd ? "undefined" != typeof XMLHttpRequest && "undefined" != typeof Blob ? Promise.resolve(new Blob(t)) : Promise.resolve(Buffer.from(n)) : ("undefined" != typeof Blob ? t.push(e.buffer) : n = Buffer.concat([n, this.toBuffer(e.buffer)]),
									readCycle())));
									return readCycle()
							}
							))
					}
					turnOn() {
							this.onEvent(new AudioSourceInitializingEvent(this.privId)),
							this.onEvent(new AudioSourceReadyEvent(this.privId))
					}
					attach(e) {
							return AudioInputStream_awaiter(this, void 0, void 0, (function*() {
									this.onEvent(new AudioStreamNodeAttachingEvent(this.privId,e)),
									yield this.turnOn();
									const t = this.privStream;
									return this.onEvent(new AudioStreamNodeAttachedEvent(this.privId,e)),
									{
											detach: ()=>AudioInputStream_awaiter(this, void 0, void 0, (function*() {
													return this.onEvent(new AudioStreamNodeDetachedEvent(this.privId,e)),
													this.turnOff()
											}
											)),
											id: ()=>e,
											read: ()=>t.read()
									}
							}
							))
					}
					detach(e) {
							this.onEvent(new AudioStreamNodeDetachedEvent(this.privId,e))
					}
					turnOff() {}
					get events() {
							return this.privEvents
					}
					get deviceInfo() {
							return Promise.resolve({
									bitspersample: this.privFormat.bitsPerSample,
									channelcount: this.privFormat.channels,
									connectivity: rs.Unknown,
									manufacturer: "Speech SDK",
									model: "PushStream",
									samplerate: this.privFormat.samplesPerSec,
									type: os.Stream
							})
					}
					onEvent(e) {
							this.privEvents.onEvent(e),
							Events.instance.onEvent(e)
					}
					toBuffer(e) {
							const t = Buffer.alloc(e.byteLength)
								, n = new Uint8Array(e);
							for (let e = 0; e < t.length; ++e)
									t[e] = n[e];
							return t
					}
			}
			class PullAudioInputStream extends AudioInputStream {
					constructor() {
							super()
					}
					static create(e, t) {
							return new PullAudioInputStreamImpl(e,t)
					}
			}
			class PullAudioInputStreamImpl extends PullAudioInputStream {
					constructor(e, t) {
							super(),
							this.privFormat = void 0 === t ? AudioStreamFormat.getDefaultInputFormat() : t,
							this.privEvents = new EventSource_EventSource,
							this.privId = createNoDashGuid(),
							this.privCallback = e,
							this.privIsClosed = !1,
							this.privBufferSize = this.privFormat.avgBytesPerSec / 10
					}
					get format() {
							return Promise.resolve(this.privFormat)
					}
					close() {
							this.privIsClosed = !0,
							this.privCallback.close()
					}
					id() {
							return this.privId
					}
					get blob() {
							return Promise.reject("Not implemented")
					}
					turnOn() {
							this.onEvent(new AudioSourceInitializingEvent(this.privId)),
							this.onEvent(new AudioSourceReadyEvent(this.privId))
					}
					attach(e) {
							return AudioInputStream_awaiter(this, void 0, void 0, (function*() {
									return this.onEvent(new AudioStreamNodeAttachingEvent(this.privId,e)),
									yield this.turnOn(),
									this.onEvent(new AudioStreamNodeAttachedEvent(this.privId,e)),
									{
											detach: ()=>(this.privCallback.close(),
											this.onEvent(new AudioStreamNodeDetachedEvent(this.privId,e)),
											this.turnOff()),
											id: ()=>e,
											read: ()=>{
													let e, t = 0;
													for (; t < this.privBufferSize; ) {
															const n = new ArrayBuffer(this.privBufferSize - t)
																, i = this.privCallback.read(n);
															if (void 0 === e)
																	e = n;
															else {
																	new Int8Array(e).set(new Int8Array(n), t)
															}
															if (0 === i)
																	break;
															t += i
													}
													return Promise.resolve({
															buffer: e.slice(0, t),
															isEnd: this.privIsClosed || 0 === t,
															timeReceived: Date.now()
													})
											}
									}
							}
							))
					}
					detach(e) {
							this.onEvent(new AudioStreamNodeDetachedEvent(this.privId,e))
					}
					turnOff() {}
					get events() {
							return this.privEvents
					}
					get deviceInfo() {
							return Promise.resolve({
									bitspersample: this.privFormat.bitsPerSample,
									channelcount: this.privFormat.channels,
									connectivity: rs.Unknown,
									manufacturer: "Speech SDK",
									model: "PullStream",
									samplerate: this.privFormat.samplesPerSec,
									type: os.Stream
							})
					}
					onEvent(e) {
							this.privEvents.onEvent(e),
							Events.instance.onEvent(e)
					}
			}
			(function(e) {
					e[e.Text = 0] = "Text",
					e[e.Binary = 1] = "Binary"
			}
			)(ds || (ds = {}));
			class ConnectionMessage {
					constructor(e, t, n, i) {
							if (this.privBody = null,
							e === ds.Text && t && "string" != typeof t)
									throw new InvalidOperationError("Payload must be a string");
							if (e === ds.Binary && t && !(t instanceof ArrayBuffer))
									throw new InvalidOperationError("Payload must be ArrayBuffer");
							switch (this.privMessageType = e,
							this.privBody = t,
							this.privHeaders = n || {},
							this.privId = i || createNoDashGuid(),
							this.messageType) {
							case ds.Binary:
									this.privSize = null !== this.binaryBody ? this.binaryBody.byteLength : 0;
									break;
							case ds.Text:
									this.privSize = this.textBody.length
							}
					}
					get messageType() {
							return this.privMessageType
					}
					get headers() {
							return this.privHeaders
					}
					get body() {
							return this.privBody
					}
					get textBody() {
							if (this.privMessageType === ds.Binary)
									throw new InvalidOperationError("Not supported for binary message");
							return this.privBody
					}
					get binaryBody() {
							if (this.privMessageType === ds.Text)
									throw new InvalidOperationError("Not supported for text message");
							return this.privBody
					}
					get id() {
							return this.privId
					}
			}
			class ServiceEvent extends PlatformEvent {
					constructor(e, t, n=as.Info) {
							super(e, n),
							this.privJsonResult = t
					}
					get jsonString() {
							return this.privJsonResult
					}
			}
			class ConnectionEvent extends PlatformEvent {
					constructor(e, t, n=as.Info) {
							super(e, n),
							this.privConnectionId = t
					}
					get connectionId() {
							return this.privConnectionId
					}
			}
			class ConnectionStartEvent extends ConnectionEvent {
					constructor(e, t, n) {
							super("ConnectionStartEvent", e),
							this.privUri = t,
							this.privHeaders = n
					}
					get uri() {
							return this.privUri
					}
					get headers() {
							return this.privHeaders
					}
			}
			class ConnectionEstablishedEvent extends ConnectionEvent {
					constructor(e) {
							super("ConnectionEstablishedEvent", e)
					}
			}
			class ConnectionClosedEvent extends ConnectionEvent {
					constructor(e, t, n) {
							super("ConnectionClosedEvent", e, as.Debug),
							this.privReason = n,
							this.privStatusCode = t
					}
					get reason() {
							return this.privReason
					}
					get statusCode() {
							return this.privStatusCode
					}
			}
			class ConnectionErrorEvent extends ConnectionEvent {
					constructor(e, t, n) {
							super("ConnectionErrorEvent", e, as.Debug),
							this.privMessage = t,
							this.privType = n
					}
					get message() {
							return this.privMessage
					}
					get type() {
							return this.privType
					}
			}
			class ConnectionEstablishErrorEvent extends ConnectionEvent {
					constructor(e, t, n) {
							super("ConnectionEstablishErrorEvent", e, as.Error),
							this.privStatusCode = t,
							this.privReason = n
					}
					get reason() {
							return this.privReason
					}
					get statusCode() {
							return this.privStatusCode
					}
			}
			class ConnectionMessageReceivedEvent extends ConnectionEvent {
					constructor(e, t, n) {
							super("ConnectionMessageReceivedEvent", e),
							this.privNetworkReceivedTime = t,
							this.privMessage = n
					}
					get networkReceivedTime() {
							return this.privNetworkReceivedTime
					}
					get message() {
							return this.privMessage
					}
			}
			class ConnectionMessageSentEvent extends ConnectionEvent {
					constructor(e, t, n) {
							super("ConnectionMessageSentEvent", e),
							this.privNetworkSentTime = t,
							this.privMessage = n
					}
					get networkSentTime() {
							return this.privNetworkSentTime
					}
					get message() {
							return this.privMessage
					}
			}
			(function(e) {
					e[e.None = 0] = "None",
					e[e.Connected = 1] = "Connected",
					e[e.Connecting = 2] = "Connecting",
					e[e.Disconnected = 3] = "Disconnected"
			}
			)(ps || (ps = {})),
			function(e) {
					e[e.Error = 0] = "Error",
					e[e.EndOfStream = 1] = "EndOfStream"
			}(us || (us = {}));
			class SpeechSynthesisEventArgs {
					constructor(e) {
							this.privResult = e
					}
					get result() {
							return this.privResult
					}
			}
			class SynthesisResult {
					constructor(e, t, n, i) {
							this.privResultId = e,
							this.privReason = t,
							this.privErrorDetails = n,
							this.privProperties = i
					}
					get resultId() {
							return this.privResultId
					}
					get reason() {
							return this.privReason
					}
					get errorDetails() {
							return this.privErrorDetails
					}
					get properties() {
							return this.privProperties
					}
			}
			class SpeechSynthesisResult extends SynthesisResult {
					constructor(e, t, n, i, r, o) {
							super(e, t, i, r),
							this.privAudioData = n,
							this.privAudioDuration = o
					}
					get audioData() {
							return this.privAudioData
					}
					get audioDuration() {
							return this.privAudioDuration
					}
			}
			class PropertyCollection {
					constructor() {
							this.privKeys = [],
							this.privValues = []
					}
					getProperty(e, t) {
							let n;
							n = "string" == typeof e ? e : es[e];
							for (let e = 0; e < this.privKeys.length; e++)
									if (this.privKeys[e] === n)
											return this.privValues[e];
							if (void 0 !== t)
									return String(t)
					}
					setProperty(e, t) {
							let n;
							n = "string" == typeof e ? e : es[e];
							for (let e = 0; e < this.privKeys.length; e++)
									if (this.privKeys[e] === n)
											return void (this.privValues[e] = t);
							this.privKeys.push(n),
							this.privValues.push(t)
					}
					clone() {
							const e = new PropertyCollection;
							for (let t = 0; t < this.privKeys.length; t++)
									e.privKeys.push(this.privKeys[t]),
									e.privValues.push(this.privValues[t]);
							return e
					}
					mergeTo(e) {
							this.privKeys.forEach((t=>{
									if (void 0 === e.getProperty(t, void 0)) {
											const n = this.getProperty(t);
											e.setProperty(t, n)
									}
							}
							))
					}
					get keys() {
							return this.privKeys
					}
			}
			class SpeechSynthesisWordBoundaryEventArgs {
					constructor(e, t, n, i, r, o) {
							this.privAudioOffset = e,
							this.privDuration = t,
							this.privText = n,
							this.privWordLength = i,
							this.privTextOffset = r,
							this.privBoundaryType = o
					}
					get audioOffset() {
							return this.privAudioOffset
					}
					get duration() {
							return this.privDuration
					}
					get text() {
							return this.privText
					}
					get wordLength() {
							return this.privWordLength
					}
					get textOffset() {
							return this.privTextOffset
					}
					get boundaryType() {
							return this.privBoundaryType
					}
			}
			class SpeechSynthesisBookmarkEventArgs {
					constructor(e, t) {
							this.privAudioOffset = e,
							this.privText = t
					}
					get audioOffset() {
							return this.privAudioOffset
					}
					get text() {
							return this.privText
					}
			}
			class SpeechSynthesisVisemeEventArgs {
					constructor(e, t, n) {
							this.privAudioOffset = e,
							this.privVisemeId = t,
							this.privAnimation = n
					}
					get audioOffset() {
							return this.privAudioOffset
					}
					get visemeId() {
							return this.privVisemeId
					}
					get animation() {
							return this.privAnimation
					}
			}
			const hs = "OutputFormat"
				, ms = "CancellationErrorCode"
				, gs = "ServiceProperties"
				, _s = "ForceDictation";
			var fs;
			(function(e) {
					e[e.Raw8Khz8BitMonoMULaw = 0] = "Raw8Khz8BitMonoMULaw",
					e[e.Riff16Khz16KbpsMonoSiren = 1] = "Riff16Khz16KbpsMonoSiren",
					e[e.Audio16Khz16KbpsMonoSiren = 2] = "Audio16Khz16KbpsMonoSiren",
					e[e.Audio16Khz32KBitRateMonoMp3 = 3] = "Audio16Khz32KBitRateMonoMp3",
					e[e.Audio16Khz128KBitRateMonoMp3 = 4] = "Audio16Khz128KBitRateMonoMp3",
					e[e.Audio16Khz64KBitRateMonoMp3 = 5] = "Audio16Khz64KBitRateMonoMp3",
					e[e.Audio24Khz48KBitRateMonoMp3 = 6] = "Audio24Khz48KBitRateMonoMp3",
					e[e.Audio24Khz96KBitRateMonoMp3 = 7] = "Audio24Khz96KBitRateMonoMp3",
					e[e.Audio24Khz160KBitRateMonoMp3 = 8] = "Audio24Khz160KBitRateMonoMp3",
					e[e.Raw16Khz16BitMonoTrueSilk = 9] = "Raw16Khz16BitMonoTrueSilk",
					e[e.Riff16Khz16BitMonoPcm = 10] = "Riff16Khz16BitMonoPcm",
					e[e.Riff8Khz16BitMonoPcm = 11] = "Riff8Khz16BitMonoPcm",
					e[e.Riff24Khz16BitMonoPcm = 12] = "Riff24Khz16BitMonoPcm",
					e[e.Riff8Khz8BitMonoMULaw = 13] = "Riff8Khz8BitMonoMULaw",
					e[e.Raw16Khz16BitMonoPcm = 14] = "Raw16Khz16BitMonoPcm",
					e[e.Raw24Khz16BitMonoPcm = 15] = "Raw24Khz16BitMonoPcm",
					e[e.Raw8Khz16BitMonoPcm = 16] = "Raw8Khz16BitMonoPcm",
					e[e.Ogg16Khz16BitMonoOpus = 17] = "Ogg16Khz16BitMonoOpus",
					e[e.Ogg24Khz16BitMonoOpus = 18] = "Ogg24Khz16BitMonoOpus",
					e[e.Raw48Khz16BitMonoPcm = 19] = "Raw48Khz16BitMonoPcm",
					e[e.Riff48Khz16BitMonoPcm = 20] = "Riff48Khz16BitMonoPcm",
					e[e.Audio48Khz96KBitRateMonoMp3 = 21] = "Audio48Khz96KBitRateMonoMp3",
					e[e.Audio48Khz192KBitRateMonoMp3 = 22] = "Audio48Khz192KBitRateMonoMp3",
					e[e.Ogg48Khz16BitMonoOpus = 23] = "Ogg48Khz16BitMonoOpus",
					e[e.Webm16Khz16BitMonoOpus = 24] = "Webm16Khz16BitMonoOpus",
					e[e.Webm24Khz16BitMonoOpus = 25] = "Webm24Khz16BitMonoOpus",
					e[e.Raw24Khz16BitMonoTrueSilk = 26] = "Raw24Khz16BitMonoTrueSilk",
					e[e.Raw8Khz8BitMonoALaw = 27] = "Raw8Khz8BitMonoALaw",
					e[e.Riff8Khz8BitMonoALaw = 28] = "Riff8Khz8BitMonoALaw",
					e[e.Webm24Khz16Bit24KbpsMonoOpus = 29] = "Webm24Khz16Bit24KbpsMonoOpus",
					e[e.Audio16Khz16Bit32KbpsMonoOpus = 30] = "Audio16Khz16Bit32KbpsMonoOpus",
					e[e.Audio24Khz16Bit48KbpsMonoOpus = 31] = "Audio24Khz16Bit48KbpsMonoOpus",
					e[e.Audio24Khz16Bit24KbpsMonoOpus = 32] = "Audio24Khz16Bit24KbpsMonoOpus",
					e[e.Raw22050Hz16BitMonoPcm = 33] = "Raw22050Hz16BitMonoPcm",
					e[e.Riff22050Hz16BitMonoPcm = 34] = "Riff22050Hz16BitMonoPcm",
					e[e.Raw44100Hz16BitMonoPcm = 35] = "Raw44100Hz16BitMonoPcm",
					e[e.Riff44100Hz16BitMonoPcm = 36] = "Riff44100Hz16BitMonoPcm"
			}
			)(fs || (fs = {}));
			class AudioOutputFormatImpl extends AudioStreamFormatImpl {
					constructor(e, t, n, i, r, o, s, a, l) {
							super(n, o, t, e),
							this.formatTag = e,
							this.avgBytesPerSec = i,
							this.blockAlign = r,
							this.priAudioFormatString = s,
							this.priRequestAudioFormatString = a,
							this.priHasHeader = l
					}
					static fromSpeechSynthesisOutputFormat(e) {
							return void 0 === e ? AudioOutputFormatImpl.getDefaultOutputFormat() : AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString(AudioOutputFormatImpl.SpeechSynthesisOutputFormatToString[e])
					}
					static fromSpeechSynthesisOutputFormatString(e) {
							switch (e) {
							case "raw-8khz-8bit-mono-mulaw":
									return new AudioOutputFormatImpl(cs.MuLaw,1,8e3,8e3,1,8,e,e,!1);
							case "riff-16khz-16kbps-mono-siren":
									return new AudioOutputFormatImpl(cs.Siren,1,16e3,2e3,40,0,e,"audio-16khz-16kbps-mono-siren",!0);
							case "audio-16khz-16kbps-mono-siren":
									return new AudioOutputFormatImpl(cs.Siren,1,16e3,2e3,40,0,e,e,!1);
							case "audio-16khz-32kbitrate-mono-mp3":
									return new AudioOutputFormatImpl(cs.MP3,1,16e3,4096,2,16,e,e,!1);
							case "audio-16khz-128kbitrate-mono-mp3":
									return new AudioOutputFormatImpl(cs.MP3,1,16e3,16384,2,16,e,e,!1);
							case "audio-16khz-64kbitrate-mono-mp3":
									return new AudioOutputFormatImpl(cs.MP3,1,16e3,8192,2,16,e,e,!1);
							case "audio-24khz-48kbitrate-mono-mp3":
									return new AudioOutputFormatImpl(cs.MP3,1,24e3,6144,2,16,e,e,!1);
							case "audio-24khz-96kbitrate-mono-mp3":
									return new AudioOutputFormatImpl(cs.MP3,1,24e3,12288,2,16,e,e,!1);
							case "audio-24khz-160kbitrate-mono-mp3":
									return new AudioOutputFormatImpl(cs.MP3,1,24e3,20480,2,16,e,e,!1);
							case "raw-16khz-16bit-mono-truesilk":
									return new AudioOutputFormatImpl(cs.SILKSkype,1,16e3,32e3,2,16,e,e,!1);
							case "riff-8khz-16bit-mono-pcm":
									return new AudioOutputFormatImpl(cs.PCM,1,8e3,16e3,2,16,e,"raw-8khz-16bit-mono-pcm",!0);
							case "riff-24khz-16bit-mono-pcm":
									return new AudioOutputFormatImpl(cs.PCM,1,24e3,48e3,2,16,e,"raw-24khz-16bit-mono-pcm",!0);
							case "riff-8khz-8bit-mono-mulaw":
									return new AudioOutputFormatImpl(cs.MuLaw,1,8e3,8e3,1,8,e,"raw-8khz-8bit-mono-mulaw",!0);
							case "raw-16khz-16bit-mono-pcm":
									return new AudioOutputFormatImpl(cs.PCM,1,16e3,32e3,2,16,e,"raw-16khz-16bit-mono-pcm",!1);
							case "raw-24khz-16bit-mono-pcm":
									return new AudioOutputFormatImpl(cs.PCM,1,24e3,48e3,2,16,e,"raw-24khz-16bit-mono-pcm",!1);
							case "raw-8khz-16bit-mono-pcm":
									return new AudioOutputFormatImpl(cs.PCM,1,8e3,16e3,2,16,e,"raw-8khz-16bit-mono-pcm",!1);
							case "ogg-16khz-16bit-mono-opus":
									return new AudioOutputFormatImpl(cs.OGG_OPUS,1,16e3,8192,2,16,e,e,!1);
							case "ogg-24khz-16bit-mono-opus":
									return new AudioOutputFormatImpl(cs.OGG_OPUS,1,24e3,8192,2,16,e,e,!1);
							case "raw-48khz-16bit-mono-pcm":
									return new AudioOutputFormatImpl(cs.PCM,1,48e3,96e3,2,16,e,"raw-48khz-16bit-mono-pcm",!1);
							case "riff-48khz-16bit-mono-pcm":
									return new AudioOutputFormatImpl(cs.PCM,1,48e3,96e3,2,16,e,"raw-48khz-16bit-mono-pcm",!0);
							case "audio-48khz-96kbitrate-mono-mp3":
									return new AudioOutputFormatImpl(cs.MP3,1,48e3,12288,2,16,e,e,!1);
							case "audio-48khz-192kbitrate-mono-mp3":
									return new AudioOutputFormatImpl(cs.MP3,1,48e3,24576,2,16,e,e,!1);
							case "ogg-48khz-16bit-mono-opus":
									return new AudioOutputFormatImpl(cs.OGG_OPUS,1,48e3,12e3,2,16,e,e,!1);
							case "webm-16khz-16bit-mono-opus":
									return new AudioOutputFormatImpl(cs.WEBM_OPUS,1,16e3,4e3,2,16,e,e,!1);
							case "webm-24khz-16bit-mono-opus":
									return new AudioOutputFormatImpl(cs.WEBM_OPUS,1,24e3,6e3,2,16,e,e,!1);
							case "webm-24khz-16bit-24kbps-mono-opus":
									return new AudioOutputFormatImpl(cs.WEBM_OPUS,1,24e3,3e3,2,16,e,e,!1);
							case "audio-16khz-16bit-32kbps-mono-opus":
									return new AudioOutputFormatImpl(cs.OPUS,1,16e3,4e3,2,16,e,e,!1);
							case "audio-24khz-16bit-48kbps-mono-opus":
									return new AudioOutputFormatImpl(cs.OPUS,1,24e3,6e3,2,16,e,e,!1);
							case "audio-24khz-16bit-24kbps-mono-opus":
									return new AudioOutputFormatImpl(cs.OPUS,1,24e3,3e3,2,16,e,e,!1);
							case "audio-24khz-16bit-mono-flac":
									return new AudioOutputFormatImpl(cs.FLAC,1,24e3,24e3,2,16,e,e,!1);
							case "audio-48khz-16bit-mono-flac":
									return new AudioOutputFormatImpl(cs.FLAC,1,48e3,3e4,2,16,e,e,!1);
							case "raw-24khz-16bit-mono-truesilk":
									return new AudioOutputFormatImpl(cs.SILKSkype,1,24e3,48e3,2,16,e,e,!1);
							case "raw-8khz-8bit-mono-alaw":
									return new AudioOutputFormatImpl(cs.ALaw,1,8e3,8e3,1,8,e,e,!1);
							case "riff-8khz-8bit-mono-alaw":
									return new AudioOutputFormatImpl(cs.ALaw,1,8e3,8e3,1,8,e,"raw-8khz-8bit-mono-alaw",!0);
							case "raw-22050hz-16bit-mono-pcm":
									return new AudioOutputFormatImpl(cs.PCM,1,22050,44100,2,16,e,e,!1);
							case "riff-22050hz-16bit-mono-pcm":
									return new AudioOutputFormatImpl(cs.PCM,1,22050,44100,2,16,e,"raw-22050hz-16bit-mono-pcm",!0);
							case "raw-44100hz-16bit-mono-pcm":
									return new AudioOutputFormatImpl(cs.PCM,1,44100,88200,2,16,e,e,!1);
							case "riff-44100hz-16bit-mono-pcm":
									return new AudioOutputFormatImpl(cs.PCM,1,44100,88200,2,16,e,"raw-44100hz-16bit-mono-pcm",!0);
							default:
									return new AudioOutputFormatImpl(cs.PCM,1,16e3,32e3,2,16,"riff-16khz-16bit-mono-pcm","raw-16khz-16bit-mono-pcm",!0)
							}
					}
					static getDefaultOutputFormat() {
							return AudioOutputFormatImpl.fromSpeechSynthesisOutputFormatString("undefined" != typeof window ? "audio-24khz-48kbitrate-mono-mp3" : "riff-16khz-16bit-mono-pcm")
					}
					get hasHeader() {
							return this.priHasHeader
					}
					get header() {
							if (this.hasHeader)
									return this.privHeader
					}
					updateHeader(e) {
							if (this.priHasHeader) {
									const t = new DataView(this.privHeader);
									t.setUint32(4, e + this.privHeader.byteLength - 8, !0),
									t.setUint32(40, e, !0)
							}
					}
					get requestAudioFormatString() {
							return this.priRequestAudioFormatString
					}
			}
			AudioOutputFormatImpl.SpeechSynthesisOutputFormatToString = {
					[fs.Raw8Khz8BitMonoMULaw]: "raw-8khz-8bit-mono-mulaw",
					[fs.Riff16Khz16KbpsMonoSiren]: "riff-16khz-16kbps-mono-siren",
					[fs.Audio16Khz16KbpsMonoSiren]: "audio-16khz-16kbps-mono-siren",
					[fs.Audio16Khz32KBitRateMonoMp3]: "audio-16khz-32kbitrate-mono-mp3",
					[fs.Audio16Khz128KBitRateMonoMp3]: "audio-16khz-128kbitrate-mono-mp3",
					[fs.Audio16Khz64KBitRateMonoMp3]: "audio-16khz-64kbitrate-mono-mp3",
					[fs.Audio24Khz48KBitRateMonoMp3]: "audio-24khz-48kbitrate-mono-mp3",
					[fs.Audio24Khz96KBitRateMonoMp3]: "audio-24khz-96kbitrate-mono-mp3",
					[fs.Audio24Khz160KBitRateMonoMp3]: "audio-24khz-160kbitrate-mono-mp3",
					[fs.Raw16Khz16BitMonoTrueSilk]: "raw-16khz-16bit-mono-truesilk",
					[fs.Riff16Khz16BitMonoPcm]: "riff-16khz-16bit-mono-pcm",
					[fs.Riff8Khz16BitMonoPcm]: "riff-8khz-16bit-mono-pcm",
					[fs.Riff24Khz16BitMonoPcm]: "riff-24khz-16bit-mono-pcm",
					[fs.Riff8Khz8BitMonoMULaw]: "riff-8khz-8bit-mono-mulaw",
					[fs.Raw16Khz16BitMonoPcm]: "raw-16khz-16bit-mono-pcm",
					[fs.Raw24Khz16BitMonoPcm]: "raw-24khz-16bit-mono-pcm",
					[fs.Raw8Khz16BitMonoPcm]: "raw-8khz-16bit-mono-pcm",
					[fs.Ogg16Khz16BitMonoOpus]: "ogg-16khz-16bit-mono-opus",
					[fs.Ogg24Khz16BitMonoOpus]: "ogg-24khz-16bit-mono-opus",
					[fs.Raw48Khz16BitMonoPcm]: "raw-48khz-16bit-mono-pcm",
					[fs.Riff48Khz16BitMonoPcm]: "riff-48khz-16bit-mono-pcm",
					[fs.Audio48Khz96KBitRateMonoMp3]: "audio-48khz-96kbitrate-mono-mp3",
					[fs.Audio48Khz192KBitRateMonoMp3]: "audio-48khz-192kbitrate-mono-mp3",
					[fs.Ogg48Khz16BitMonoOpus]: "ogg-48khz-16bit-mono-opus",
					[fs.Webm16Khz16BitMonoOpus]: "webm-16khz-16bit-mono-opus",
					[fs.Webm24Khz16BitMonoOpus]: "webm-24khz-16bit-mono-opus",
					[fs.Webm24Khz16Bit24KbpsMonoOpus]: "webm-24khz-16bit-24kbps-mono-opus",
					[fs.Raw24Khz16BitMonoTrueSilk]: "raw-24khz-16bit-mono-truesilk",
					[fs.Raw8Khz8BitMonoALaw]: "raw-8khz-8bit-mono-alaw",
					[fs.Riff8Khz8BitMonoALaw]: "riff-8khz-8bit-mono-alaw",
					[fs.Audio16Khz16Bit32KbpsMonoOpus]: "audio-16khz-16bit-32kbps-mono-opus",
					[fs.Audio24Khz16Bit48KbpsMonoOpus]: "audio-24khz-16bit-48kbps-mono-opus",
					[fs.Audio24Khz16Bit24KbpsMonoOpus]: "audio-24khz-16bit-24kbps-mono-opus",
					[fs.Raw22050Hz16BitMonoPcm]: "raw-22050hz-16bit-mono-pcm",
					[fs.Riff22050Hz16BitMonoPcm]: "riff-22050hz-16bit-mono-pcm",
					[fs.Raw44100Hz16BitMonoPcm]: "raw-44100hz-16bit-mono-pcm",
					[fs.Riff44100Hz16BitMonoPcm]: "riff-44100hz-16bit-mono-pcm"
			};
			var ys, AudioOutputStream_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			class AudioOutputStream {
					constructor() {}
					static createPullStream() {
							return PullAudioOutputStream.create()
					}
			}
			class PullAudioOutputStream extends AudioOutputStream {
					static create() {
							return new PullAudioOutputStreamImpl
					}
			}
			class PullAudioOutputStreamImpl extends PullAudioOutputStream {
					constructor() {
							super(),
							this.privId = createNoDashGuid(),
							this.privStream = new Stream
					}
					set format(e) {
							null == e && (this.privFormat = AudioOutputFormatImpl.getDefaultOutputFormat()),
							this.privFormat = e
					}
					get format() {
							return this.privFormat
					}
					get isClosed() {
							return this.privStream.isClosed
					}
					id() {
							return this.privId
					}
					read(e) {
							return AudioOutputStream_awaiter(this, void 0, void 0, (function*() {
									const t = new Int8Array(e);
									let n = 0;
									if (void 0 !== this.privLastChunkView) {
											if (this.privLastChunkView.length > e.byteLength)
													return t.set(this.privLastChunkView.slice(0, e.byteLength)),
													this.privLastChunkView = this.privLastChunkView.slice(e.byteLength),
													Promise.resolve(e.byteLength);
											t.set(this.privLastChunkView),
											n = this.privLastChunkView.length,
											this.privLastChunkView = void 0
									}
									for (; n < e.byteLength && !this.privStream.isReadEnded; ) {
											const i = yield this.privStream.read();
											if (void 0 === i || i.isEnd)
													this.privStream.readEnded();
											else {
													let r;
													i.buffer.byteLength > e.byteLength - n ? (r = i.buffer.slice(0, e.byteLength - n),
													this.privLastChunkView = new Int8Array(i.buffer.slice(e.byteLength - n))) : r = i.buffer,
													t.set(new Int8Array(r), n),
													n += r.byteLength
											}
									}
									return n
							}
							))
					}
					write(e) {
							Contracts.throwIfNullOrUndefined(this.privStream, "must set format before writing"),
							this.privStream.writeStreamChunk({
									buffer: e,
									isEnd: !1,
									timeReceived: Date.now()
							})
					}
					close() {
							this.privStream.close()
					}
			}
			class PushAudioOutputStream extends AudioOutputStream {
					constructor() {
							super()
					}
					static create(e) {
							return new PushAudioOutputStreamImpl(e)
					}
			}
			class PushAudioOutputStreamImpl extends PushAudioOutputStream {
					constructor(e) {
							super(),
							this.privId = createNoDashGuid(),
							this.privCallback = e
					}
					set format(e) {}
					write(e) {
							this.privCallback.write && this.privCallback.write(e)
					}
					close() {
							this.privCallback.close && this.privCallback.close()
					}
					id() {
							return this.privId
					}
			}
			(function(e) {
					e.WordBoundary = "WordBoundary",
					e.Bookmark = "Bookmark",
					e.Viseme = "Viseme",
					e.SentenceBoundary = "SentenceBoundary",
					e.SessionEnd = "SessionEnd"
			}
			)(ys || (ys = {}));
			class SynthesisAudioMetadata {
					constructor(e) {
							this.privSynthesisAudioMetadata = JSON.parse(e)
					}
					static fromJSON(e) {
							return new SynthesisAudioMetadata(e)
					}
					get Metadata() {
							return this.privSynthesisAudioMetadata.Metadata
					}
			}
			class SpeechSynthesisEvent extends PlatformEvent {
					constructor(e, t, n=as.Info) {
							super(e, n),
							this.privRequestId = t
					}
					get requestId() {
							return this.privRequestId
					}
			}
			class SynthesisTriggeredEvent extends SpeechSynthesisEvent {
					constructor(e, t, n) {
							super("SynthesisTriggeredEvent", e),
							this.privSessionAudioDestinationId = t,
							this.privTurnAudioDestinationId = n
					}
					get audioSessionDestinationId() {
							return this.privSessionAudioDestinationId
					}
					get audioTurnDestinationId() {
							return this.privTurnAudioDestinationId
					}
			}
			class ConnectingToSynthesisServiceEvent extends SpeechSynthesisEvent {
					constructor(e, t) {
							super("ConnectingToSynthesisServiceEvent", e),
							this.privAuthFetchEventId = t
					}
					get authFetchEventId() {
							return this.privAuthFetchEventId
					}
			}
			class SynthesisStartedEvent extends SpeechSynthesisEvent {
					constructor(e, t) {
							super("SynthesisStartedEvent", e),
							this.privAuthFetchEventId = t
					}
					get authFetchEventId() {
							return this.privAuthFetchEventId
					}
			}
			var SynthesisTurn_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			class SynthesisTurn {
					constructor() {
							this.privIsDisposed = !1,
							this.privIsSynthesizing = !1,
							this.privIsSynthesisEnded = !1,
							this.privBytesReceived = 0,
							this.privInTurn = !1,
							this.privTextOffset = 0,
							this.privNextSearchTextIndex = 0,
							this.privSentenceOffset = 0,
							this.privNextSearchSentenceIndex = 0,
							this.privRequestId = createNoDashGuid(),
							this.privTurnDeferral = new Deferred,
							this.privTurnDeferral.resolve()
					}
					get requestId() {
							return this.privRequestId
					}
					get streamId() {
							return this.privStreamId
					}
					set streamId(e) {
							this.privStreamId = e
					}
					get audioOutputFormat() {
							return this.privAudioOutputFormat
					}
					set audioOutputFormat(e) {
							this.privAudioOutputFormat = e
					}
					get turnCompletionPromise() {
							return this.privTurnDeferral.promise
					}
					get isSynthesisEnded() {
							return this.privIsSynthesisEnded
					}
					get isSynthesizing() {
							return this.privIsSynthesizing
					}
					get currentTextOffset() {
							return this.privTextOffset
					}
					get currentSentenceOffset() {
							return this.privSentenceOffset
					}
					get bytesReceived() {
							return this.privBytesReceived
					}
					get audioDuration() {
							return this.privAudioDuration
					}
					getAllReceivedAudio() {
							return SynthesisTurn_awaiter(this, void 0, void 0, (function*() {
									return this.privReceivedAudio ? Promise.resolve(this.privReceivedAudio) : this.privIsSynthesisEnded ? (yield this.readAllAudioFromStream(),
									Promise.resolve(this.privReceivedAudio)) : null
							}
							))
					}
					getAllReceivedAudioWithHeader() {
							return SynthesisTurn_awaiter(this, void 0, void 0, (function*() {
									if (this.privReceivedAudioWithHeader)
											return this.privReceivedAudioWithHeader;
									if (!this.privIsSynthesisEnded)
											return null;
									if (this.audioOutputFormat.hasHeader) {
											const e = yield this.getAllReceivedAudio();
											return this.privReceivedAudioWithHeader = SynthesisAdapterBase.addHeader(e, this.audioOutputFormat),
											this.privReceivedAudioWithHeader
									}
									return this.getAllReceivedAudio()
							}
							))
					}
					startNewSynthesis(e, t, n, i) {
							this.privIsSynthesisEnded = !1,
							this.privIsSynthesizing = !0,
							this.privRequestId = e,
							this.privRawText = t,
							this.privIsSSML = n,
							this.privAudioOutputStream = new PullAudioOutputStreamImpl,
							this.privAudioOutputStream.format = this.privAudioOutputFormat,
							this.privReceivedAudio = null,
							this.privReceivedAudioWithHeader = null,
							this.privBytesReceived = 0,
							this.privTextOffset = 0,
							this.privNextSearchTextIndex = 0,
							this.privSentenceOffset = 0,
							this.privNextSearchSentenceIndex = 0,
							this.privPartialVisemeAnimation = "",
							void 0 !== i && (this.privTurnAudioDestination = i,
							this.privTurnAudioDestination.format = this.privAudioOutputFormat),
							this.onEvent(new SynthesisTriggeredEvent(this.requestId,void 0,void 0 === i ? void 0 : i.id()))
					}
					onPreConnectionStart(e) {
							this.privAuthFetchEventId = e,
							this.onEvent(new ConnectingToSynthesisServiceEvent(this.privRequestId,this.privAuthFetchEventId))
					}
					onAuthCompleted(e) {
							e && this.onComplete()
					}
					onConnectionEstablishCompleted(e) {
							if (200 === e)
									return this.onEvent(new SynthesisStartedEvent(this.requestId,this.privAuthFetchEventId)),
									void (this.privBytesReceived = 0);
							403 === e && this.onComplete()
					}
					onServiceResponseMessage(e) {
							const t = JSON.parse(e);
							this.streamId = t.audio.streamId
					}
					onServiceTurnEndResponse() {
							this.privInTurn = !1,
							this.privTurnDeferral.resolve(),
							this.onComplete()
					}
					onServiceTurnStartResponse() {
							this.privTurnDeferral && this.privInTurn && (this.privTurnDeferral.reject("Another turn started before current completed."),
							this.privTurnDeferral.promise.then().catch((()=>{}
							))),
							this.privInTurn = !0,
							this.privTurnDeferral = new Deferred
					}
					onAudioChunkReceived(e) {
							this.isSynthesizing && (this.privAudioOutputStream.write(e),
							this.privBytesReceived += e.byteLength,
							void 0 !== this.privTurnAudioDestination && this.privTurnAudioDestination.write(e))
					}
					onTextBoundaryEvent(e) {
							this.updateTextOffset(e.Data.text.Text, e.Type)
					}
					onVisemeMetadataReceived(e) {
							void 0 !== e.Data.AnimationChunk && (this.privPartialVisemeAnimation += e.Data.AnimationChunk)
					}
					onSessionEnd(e) {
							this.privAudioDuration = e.Data.Offset
					}
					dispose() {
							this.privIsDisposed || (this.privIsDisposed = !0)
					}
					onStopSynthesizing() {
							this.onComplete()
					}
					getAndClearVisemeAnimation() {
							const e = this.privPartialVisemeAnimation;
							return this.privPartialVisemeAnimation = "",
							e
					}
					onEvent(e) {
							Events.instance.onEvent(e)
					}
					static isXmlTag(e) {
							return e.length >= 2 && "<" === e[0] && ">" === e[e.length - 1]
					}
					updateTextOffset(e, t) {
							t === ys.WordBoundary ? (this.privTextOffset = this.privRawText.indexOf(e, this.privNextSearchTextIndex),
							this.privTextOffset >= 0 && (this.privNextSearchTextIndex = this.privTextOffset + e.length,
							this.privIsSSML && this.withinXmlTag(this.privTextOffset) && !SynthesisTurn.isXmlTag(e) && this.updateTextOffset(e, t))) : (this.privSentenceOffset = this.privRawText.indexOf(e, this.privNextSearchSentenceIndex),
							this.privSentenceOffset >= 0 && (this.privNextSearchSentenceIndex = this.privSentenceOffset + e.length,
							this.privIsSSML && this.withinXmlTag(this.privSentenceOffset) && !SynthesisTurn.isXmlTag(e) && this.updateTextOffset(e, t)))
					}
					onComplete() {
							this.privIsSynthesizing && (this.privIsSynthesizing = !1,
							this.privIsSynthesisEnded = !0,
							this.privAudioOutputStream.close(),
							this.privInTurn = !1,
							void 0 !== this.privTurnAudioDestination && (this.privTurnAudioDestination.close(),
							this.privTurnAudioDestination = void 0))
					}
					readAllAudioFromStream() {
							return SynthesisTurn_awaiter(this, void 0, void 0, (function*() {
									if (this.privIsSynthesisEnded) {
											this.privReceivedAudio = new ArrayBuffer(this.bytesReceived);
											try {
													yield this.privAudioOutputStream.read(this.privReceivedAudio)
											} catch (e) {
													this.privReceivedAudio = new ArrayBuffer(0)
											}
									}
							}
							))
					}
					withinXmlTag(e) {
							return this.privRawText.indexOf("<", e + 1) > this.privRawText.indexOf(">", e + 1)
					}
			}
			class SynthesisContext {
					constructor(e) {
							this.privContext = {},
							this.privSpeechSynthesizer = e
					}
					setSection(e, t) {
							this.privContext[e] = t
					}
					set audioOutputFormat(e) {
							this.privAudioOutputFormat = e
					}
					toJSON() {
							const e = this.buildSynthesisContext();
							return this.setSection("synthesis", e),
							JSON.stringify(this.privContext)
					}
					buildSynthesisContext() {
							return {
									audio: {
											metadataOptions: {
													bookmarkEnabled: !!this.privSpeechSynthesizer.bookmarkReached,
													punctuationBoundaryEnabled: this.privSpeechSynthesizer.properties.getProperty(es.SpeechServiceResponse_RequestPunctuationBoundary, !!this.privSpeechSynthesizer.wordBoundary),
													sentenceBoundaryEnabled: this.privSpeechSynthesizer.properties.getProperty(es.SpeechServiceResponse_RequestSentenceBoundary, !1),
													sessionEndEnabled: !0,
													visemeEnabled: !!this.privSpeechSynthesizer.visemeReceived,
													wordBoundaryEnabled: this.privSpeechSynthesizer.properties.getProperty(es.SpeechServiceResponse_RequestWordBoundary, !!this.privSpeechSynthesizer.wordBoundary)
											},
											outputFormat: this.privAudioOutputFormat.requestAudioFormatString
									},
									language: {
											autoDetection: this.privSpeechSynthesizer.autoDetectSourceLanguage
									}
							}
					}
			}
			class AgentConfig {
					toJsonString() {
							return JSON.stringify(this.iPrivConfig)
					}
					get() {
							return this.iPrivConfig
					}
					set(e) {
							this.iPrivConfig = e
					}
			}
			class HeaderNames {
			}
			HeaderNames.AuthKey = "Ocp-Apim-Subscription-Key",
			HeaderNames.Authorization = "Authorization",
			HeaderNames.ConnectionId = "X-ConnectionId",
			HeaderNames.ContentType = "Content-Type",
			HeaderNames.CustomCommandsAppId = "X-CommandsAppId",
			HeaderNames.Path = "Path",
			HeaderNames.RequestId = "X-RequestId",
			HeaderNames.RequestStreamId = "X-StreamId",
			HeaderNames.RequestTimestamp = "X-Timestamp";
			class SpeechConnectionMessage extends ConnectionMessage {
					constructor(e, t, n, i, r, o, s, a) {
							if (!t)
									throw new ArgumentNullError("path");
							if (!n)
									throw new ArgumentNullError("requestId");
							const l = {};
							if (l[HeaderNames.Path] = t,
							l[HeaderNames.RequestId] = n,
							l[HeaderNames.RequestTimestamp] = (new Date).toISOString(),
							i && (l[HeaderNames.ContentType] = i),
							o && (l[HeaderNames.RequestStreamId] = o),
							s)
									for (const e in s)
											e && (l[e] = s[e]);
							a ? super(e, r, l, a) : super(e, r, l),
							this.privPath = t,
							this.privRequestId = n,
							this.privContentType = i,
							this.privStreamId = o,
							this.privAdditionalHeaders = s
					}
					get path() {
							return this.privPath
					}
					get requestId() {
							return this.privRequestId
					}
					get contentType() {
							return this.privContentType
					}
					get streamId() {
							return this.privStreamId
					}
					get additionalHeaders() {
							return this.privAdditionalHeaders
					}
					static fromConnectionMessage(e) {
							let t = null
								, n = null
								, i = null
								, r = null;
							const o = {};
							if (e.headers)
									for (const s in e.headers)
											s && (s.toLowerCase() === HeaderNames.Path.toLowerCase() ? t = e.headers[s] : s.toLowerCase() === HeaderNames.RequestId.toLowerCase() ? n = e.headers[s] : s.toLowerCase() === HeaderNames.ContentType.toLowerCase() ? i = e.headers[s] : s.toLowerCase() === HeaderNames.RequestStreamId.toLowerCase() ? r = e.headers[s] : o[s] = e.headers[s]);
							return new SpeechConnectionMessage(e.messageType,t,n,i,e.body,r,o,e.id)
					}
			}
			var SynthesisAdapterBase_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			class SynthesisAdapterBase {
					constructor(e, t, n, i, r) {
							if (this.speakOverride = void 0,
							this.receiveMessageOverride = void 0,
							this.connectImplOverride = void 0,
							this.configConnectionOverride = void 0,
							this.privConnectionConfigurationPromise = void 0,
							!e)
									throw new ArgumentNullError("authentication");
							if (!t)
									throw new ArgumentNullError("connectionFactory");
							if (!n)
									throw new ArgumentNullError("synthesizerConfig");
							this.privAuthentication = e,
							this.privConnectionFactory = t,
							this.privSynthesizerConfig = n,
							this.privIsDisposed = !1,
							this.privSpeechSynthesizer = i,
							this.privSessionAudioDestination = r,
							this.privSynthesisTurn = new SynthesisTurn,
							this.privConnectionEvents = new EventSource_EventSource,
							this.privServiceEvents = new EventSource_EventSource,
							this.privSynthesisContext = new SynthesisContext(this.privSpeechSynthesizer),
							this.privAgentConfig = new AgentConfig,
							this.connectionEvents.attach((e=>{
									if ("ConnectionClosedEvent" === e.name) {
											const t = e;
											1e3 !== t.statusCode && this.cancelSynthesisLocal(us.Error, 1007 === t.statusCode ? Jo.BadRequestParameters : Jo.ConnectionFailure, `${t.reason} websocket error code: ${t.statusCode}`)
									}
							}
							))
					}
					get synthesisContext() {
							return this.privSynthesisContext
					}
					get agentConfig() {
							return this.privAgentConfig
					}
					get connectionEvents() {
							return this.privConnectionEvents
					}
					get serviceEvents() {
							return this.privServiceEvents
					}
					set activityTemplate(e) {
							this.privActivityTemplate = e
					}
					get activityTemplate() {
							return this.privActivityTemplate
					}
					set audioOutputFormat(e) {
							this.privAudioOutputFormat = e,
							this.privSynthesisTurn.audioOutputFormat = e,
							void 0 !== this.privSessionAudioDestination && (this.privSessionAudioDestination.format = e),
							void 0 !== this.synthesisContext && (this.synthesisContext.audioOutputFormat = e)
					}
					static addHeader(e, t) {
							if (!t.hasHeader)
									return e;
							t.updateHeader(e.byteLength);
							const n = new Uint8Array(e.byteLength + t.header.byteLength);
							return n.set(new Uint8Array(t.header), 0),
							n.set(new Uint8Array(e), t.header.byteLength),
							n.buffer
					}
					isDisposed() {
							return this.privIsDisposed
					}
					dispose(e) {
							return SynthesisAdapterBase_awaiter(this, void 0, void 0, (function*() {
									if (this.privIsDisposed = !0,
									void 0 !== this.privSessionAudioDestination && this.privSessionAudioDestination.close(),
									void 0 !== this.privConnectionConfigurationPromise) {
											const t = yield this.privConnectionConfigurationPromise;
											yield t.dispose(e)
									}
							}
							))
					}
					connect() {
							return SynthesisAdapterBase_awaiter(this, void 0, void 0, (function*() {
									yield this.connectImpl()
							}
							))
					}
					sendNetworkMessage(e, t) {
							return SynthesisAdapterBase_awaiter(this, void 0, void 0, (function*() {
									const n = "string" == typeof t ? ds.Text : ds.Binary
										, i = "string" == typeof t ? "application/json" : "";
									return (yield this.fetchConnection()).send(new SpeechConnectionMessage(n,e,this.privSynthesisTurn.requestId,i,t))
							}
							))
					}
					Speak(e, t, n, i, r, o) {
							return SynthesisAdapterBase_awaiter(this, void 0, void 0, (function*() {
									let s;
									if (s = t ? e : this.privSpeechSynthesizer.buildSsml(e),
									void 0 !== this.speakOverride)
											return this.speakOverride(s, n, i, r);
									this.privSuccessCallback = i,
									this.privErrorCallback = r,
									this.privSynthesisTurn.startNewSynthesis(n, e, t, o);
									try {
											yield this.connectImpl();
											const e = yield this.fetchConnection();
											yield this.sendSynthesisContext(e),
											yield this.sendSsmlMessage(e, s, n);
											const t = new SpeechSynthesisEventArgs(new SpeechSynthesisResult(n,Xo.SynthesizingAudioStarted));
											this.privSpeechSynthesizer.synthesisStarted && this.privSpeechSynthesizer.synthesisStarted(this.privSpeechSynthesizer, t),
											this.receiveMessage()
									} catch (e) {
											return this.cancelSynthesisLocal(us.Error, Jo.ConnectionFailure, e),
											Promise.reject(e)
									}
							}
							))
					}
					cancelSynthesis(e, t, n, i) {
							const r = new PropertyCollection;
							r.setProperty(ms, Jo[n]);
							const o = new SpeechSynthesisResult(e,Xo.Canceled,void 0,i,r);
							if (this.privSpeechSynthesizer.SynthesisCanceled) {
									const e = new SpeechSynthesisEventArgs(o);
									try {
											this.privSpeechSynthesizer.SynthesisCanceled(this.privSpeechSynthesizer, e)
									} catch (e) {}
							}
							if (this.privSuccessCallback)
									try {
											this.privSuccessCallback(o)
									} catch (e) {}
					}
					cancelSynthesisLocal(e, t, n) {
							this.privSynthesisTurn.isSynthesizing && (this.privSynthesisTurn.onStopSynthesizing(),
							this.cancelSynthesis(this.privSynthesisTurn.requestId, e, t, n))
					}
					processTypeSpecificMessages(e) {
							return !0
					}
					receiveMessage() {
							return SynthesisAdapterBase_awaiter(this, void 0, void 0, (function*() {
									try {
											const e = yield this.fetchConnection()
												, t = yield e.read();
											if (void 0 !== this.receiveMessageOverride)
													return this.receiveMessageOverride();
											if (this.privIsDisposed)
													return;
											if (!t)
													return this.privSynthesisTurn.isSynthesizing ? this.receiveMessage() : void 0;
											const n = SpeechConnectionMessage.fromConnectionMessage(t);
											if (n.requestId.toLowerCase() === this.privSynthesisTurn.requestId.toLowerCase())
													switch (n.path.toLowerCase()) {
													case "turn.start":
															this.privSynthesisTurn.onServiceTurnStartResponse();
															break;
													case "response":
															this.privSynthesisTurn.onServiceResponseMessage(n.textBody);
															break;
													case "audio":
															if (this.privSynthesisTurn.streamId.toLowerCase() === n.streamId.toLowerCase() && n.binaryBody) {
																	if (this.privSynthesisTurn.onAudioChunkReceived(n.binaryBody),
																	this.privSpeechSynthesizer.synthesizing)
																			try {
																					const e = SynthesisAdapterBase.addHeader(n.binaryBody, this.privSynthesisTurn.audioOutputFormat)
																						, t = new SpeechSynthesisEventArgs(new SpeechSynthesisResult(this.privSynthesisTurn.requestId,Xo.SynthesizingAudio,e));
																					this.privSpeechSynthesizer.synthesizing(this.privSpeechSynthesizer, t)
																			} catch (e) {}
																	void 0 !== this.privSessionAudioDestination && this.privSessionAudioDestination.write(n.binaryBody)
															}
															break;
													case "audio.metadata":
															const e = SynthesisAudioMetadata.fromJSON(n.textBody).Metadata;
															for (const t of e)
																	switch (t.Type) {
																	case ys.WordBoundary:
																	case ys.SentenceBoundary:
																			this.privSynthesisTurn.onTextBoundaryEvent(t);
																			const e = new SpeechSynthesisWordBoundaryEventArgs(t.Data.Offset,t.Data.Duration,t.Data.text.Text,t.Data.text.Length,t.Type === ys.WordBoundary ? this.privSynthesisTurn.currentTextOffset : this.privSynthesisTurn.currentSentenceOffset,t.Data.text.BoundaryType);
																			if (this.privSpeechSynthesizer.wordBoundary)
																					try {
																							this.privSpeechSynthesizer.wordBoundary(this.privSpeechSynthesizer, e)
																					} catch (e) {}
																			break;
																	case ys.Bookmark:
																			const n = new SpeechSynthesisBookmarkEventArgs(t.Data.Offset,t.Data.Bookmark);
																			if (this.privSpeechSynthesizer.bookmarkReached)
																					try {
																							this.privSpeechSynthesizer.bookmarkReached(this.privSpeechSynthesizer, n)
																					} catch (e) {}
																			break;
																	case ys.Viseme:
																			if (this.privSynthesisTurn.onVisemeMetadataReceived(t),
																			t.Data.IsLastAnimation) {
																					const e = new SpeechSynthesisVisemeEventArgs(t.Data.Offset,t.Data.VisemeId,this.privSynthesisTurn.getAndClearVisemeAnimation());
																					if (this.privSpeechSynthesizer.visemeReceived)
																							try {
																									this.privSpeechSynthesizer.visemeReceived(this.privSpeechSynthesizer, e)
																							} catch (e) {}
																			}
																			break;
																	case ys.SessionEnd:
																			this.privSynthesisTurn.onSessionEnd(t)
																	}
															break;
													case "turn.end":
															let t;
															this.privSynthesisTurn.onServiceTurnEndResponse();
															try {
																	const e = yield this.privSynthesisTurn.getAllReceivedAudioWithHeader();
																	t = new SpeechSynthesisResult(this.privSynthesisTurn.requestId,Xo.SynthesizingAudioCompleted,e,void 0,void 0,this.privSynthesisTurn.audioDuration),
																	this.privSuccessCallback && this.privSuccessCallback(t)
															} catch (e) {
																	this.privErrorCallback && this.privErrorCallback(e)
															}
															if (this.privSpeechSynthesizer.synthesisCompleted)
																	try {
																			this.privSpeechSynthesizer.synthesisCompleted(this.privSpeechSynthesizer, new SpeechSynthesisEventArgs(t))
																	} catch (e) {}
															break;
													default:
															this.processTypeSpecificMessages(n) || this.privServiceEvents && this.serviceEvents.onEvent(new ServiceEvent(n.path.toLowerCase(),n.textBody))
													}
											return this.receiveMessage()
									} catch (e) {}
							}
							))
					}
					sendSynthesisContext(e) {
							const t = this.synthesisContext.toJSON();
							if (t)
									return e.send(new SpeechConnectionMessage(ds.Text,"synthesis.context",this.privSynthesisTurn.requestId,"application/json",t))
					}
					connectImpl(e=!1) {
							if (null != this.privConnectionPromise)
									return this.privConnectionPromise.then((e=>e.state() === ps.Disconnected ? (this.privConnectionId = null,
									this.privConnectionPromise = null,
									this.connectImpl()) : this.privConnectionPromise), (()=>(this.privConnectionId = null,
									this.privConnectionPromise = null,
									this.connectImpl())));
							this.privAuthFetchEventId = createNoDashGuid(),
							this.privConnectionId = createNoDashGuid(),
							this.privSynthesisTurn.onPreConnectionStart(this.privAuthFetchEventId);
							const t = e ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId);
							return this.privConnectionPromise = t.then((t=>SynthesisAdapterBase_awaiter(this, void 0, void 0, (function*() {
									this.privSynthesisTurn.onAuthCompleted(!1);
									const n = this.privConnectionFactory.create(this.privSynthesizerConfig, t, this.privConnectionId);
									n.events.attach((e=>{
											this.connectionEvents.onEvent(e)
									}
									));
									const i = yield n.open();
									return 200 === i.statusCode ? (this.privSynthesisTurn.onConnectionEstablishCompleted(i.statusCode),
									Promise.resolve(n)) : 403 !== i.statusCode || e ? (this.privSynthesisTurn.onConnectionEstablishCompleted(i.statusCode),
									Promise.reject(`Unable to contact server. StatusCode: ${i.statusCode}, ${this.privSynthesizerConfig.parameters.getProperty(es.SpeechServiceConnection_Endpoint)} Reason: ${i.reason}`)) : this.connectImpl(!0)
							}
							))), (e=>{
									throw this.privSynthesisTurn.onAuthCompleted(!0),
									new Error(e)
							}
							)),
							this.privConnectionPromise.catch((()=>{}
							)),
							this.privConnectionPromise
					}
					sendSpeechServiceConfig(e, t) {
							if (t)
									return e.send(new SpeechConnectionMessage(ds.Text,"speech.config",this.privSynthesisTurn.requestId,"application/json",t))
					}
					sendSsmlMessage(e, t, n) {
							return e.send(new SpeechConnectionMessage(ds.Text,"ssml",n,"application/ssml+xml",t))
					}
					fetchConnection() {
							return SynthesisAdapterBase_awaiter(this, void 0, void 0, (function*() {
									return void 0 !== this.privConnectionConfigurationPromise ? this.privConnectionConfigurationPromise.then((e=>e.state() === ps.Disconnected ? (this.privConnectionId = null,
									this.privConnectionConfigurationPromise = void 0,
									this.fetchConnection()) : this.privConnectionConfigurationPromise), (()=>(this.privConnectionId = null,
									this.privConnectionConfigurationPromise = void 0,
									this.fetchConnection()))) : (this.privConnectionConfigurationPromise = this.configureConnection(),
									yield this.privConnectionConfigurationPromise)
							}
							))
					}
					configureConnection() {
							return SynthesisAdapterBase_awaiter(this, void 0, void 0, (function*() {
									const e = yield this.connectImpl();
									return void 0 !== this.configConnectionOverride ? this.configConnectionOverride(e) : (yield this.sendSpeechServiceConfig(e, this.privSynthesizerConfig.SpeechServiceConfig.serialize()),
									e)
							}
							))
					}
			}
			SynthesisAdapterBase.telemetryDataEnabled = !0;
			class BackgroundEvent extends PlatformEvent {
					constructor(e) {
							super("BackgroundEvent", as.Error),
							this.privError = e
					}
					get error() {
							return this.privError
					}
			}
			var SpeakerAudioDestination_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			const vs = {
					[cs.PCM]: "audio/wav",
					[cs.MuLaw]: "audio/x-wav",
					[cs.MP3]: "audio/mpeg",
					[cs.OGG_OPUS]: "audio/ogg",
					[cs.WEBM_OPUS]: "audio/webm; codecs=opus",
					[cs.ALaw]: "audio/x-wav",
					[cs.FLAC]: "audio/flac"
			};
			class SpeakerAudioDestination {
					constructor(e) {
							this.privPlaybackStarted = !1,
							this.privAppendingToBuffer = !1,
							this.privMediaSourceOpened = !1,
							this.privBytesReceived = 0,
							this.privId = e || createNoDashGuid(),
							this.privIsPaused = !1,
							this.privIsClosed = !1
					}
					id() {
							return this.privId
					}
					write(e, t, n) {
							void 0 !== this.privAudioBuffer ? (this.privAudioBuffer.push(e),
							this.updateSourceBuffer().then((()=>{
									t && t()
							}
							), (e=>{
									n && n(e)
							}
							))) : void 0 !== this.privAudioOutputStream && (this.privAudioOutputStream.write(e),
							this.privBytesReceived += e.byteLength)
					}
					close(e, t) {
							if (this.privIsClosed = !0,
							void 0 !== this.privSourceBuffer)
									this.handleSourceBufferUpdateEnd().then((()=>{
											e && e()
									}
									), (e=>{
											t && t(e)
									}
									));
							else if (void 0 !== this.privAudioOutputStream && "undefined" != typeof window)
									if (this.privFormat.formatTag !== cs.PCM && this.privFormat.formatTag !== cs.MuLaw && this.privFormat.formatTag !== cs.ALaw || !1 !== this.privFormat.hasHeader) {
											let n = new ArrayBuffer(this.privBytesReceived);
											this.privAudioOutputStream.read(n).then((()=>{
													n = SynthesisAdapterBase.addHeader(n, this.privFormat);
													const i = new Blob([n],{
															type: vs[this.privFormat.formatTag]
													});
													this.privAudio.src = window.URL.createObjectURL(i),
													this.notifyPlayback().then((()=>{
															e && e()
													}
													), (e=>{
															t && t(e)
													}
													))
											}
											), (e=>{
													t && t(e)
											}
											))
									} else
											console.warn("Play back is not supported for raw PCM, mulaw or alaw format without header."),
											this.onAudioEnd && this.onAudioEnd(this);
							else
									this.onAudioEnd && this.onAudioEnd(this)
					}
					set format(e) {
							if ("undefined" != typeof AudioContext || "undefined" != typeof window && void 0 !== window.webkitAudioContext) {
									this.privFormat = e;
									const t = vs[this.privFormat.formatTag];
									void 0 === t ? console.warn(`Unknown mimeType for format ${cs[this.privFormat.formatTag]}; playback is not supported.`) : "undefined" != typeof MediaSource && MediaSource.isTypeSupported(t) ? (this.privAudio = new Audio,
									this.privAudioBuffer = [],
									this.privMediaSource = new MediaSource,
									this.privAudio.src = URL.createObjectURL(this.privMediaSource),
									this.privAudio.load(),
									this.privMediaSource.onsourceopen = ()=>{
											this.privMediaSourceOpened = !0,
											this.privMediaSource.duration = 1800,
											this.privSourceBuffer = this.privMediaSource.addSourceBuffer(t),
											this.privSourceBuffer.onupdate = ()=>{
													this.updateSourceBuffer().catch((e=>{
															Events.instance.onEvent(new BackgroundEvent(e))
													}
													))
											}
											,
											this.privSourceBuffer.onupdateend = ()=>{
													this.handleSourceBufferUpdateEnd().catch((e=>{
															Events.instance.onEvent(new BackgroundEvent(e))
													}
													))
											}
											,
											this.privSourceBuffer.onupdatestart = ()=>{
													this.privAppendingToBuffer = !1
											}
									}
									,
									this.updateSourceBuffer().catch((e=>{
											Events.instance.onEvent(new BackgroundEvent(e))
									}
									))) : (console.warn(`Format ${cs[this.privFormat.formatTag]} could not be played by MSE, streaming playback is not enabled.`),
									this.privAudioOutputStream = new PullAudioOutputStreamImpl,
									this.privAudioOutputStream.format = this.privFormat,
									this.privAudio = new Audio)
							}
					}
					get volume() {
							var e, t;
							return null !== (t = null === (e = this.privAudio) || void 0 === e ? void 0 : e.volume) && void 0 !== t ? t : -1
					}
					set volume(e) {
							this.privAudio && (this.privAudio.volume = e)
					}
					mute() {
							this.privAudio && (this.privAudio.muted = !0)
					}
					unmute() {
							this.privAudio && (this.privAudio.muted = !1)
					}
					get isClosed() {
							return this.privIsClosed
					}
					get currentTime() {
							return void 0 !== this.privAudio ? this.privAudio.currentTime : -1
					}
					pause() {
							this.privIsPaused || void 0 === this.privAudio || (this.privAudio.pause(),
							this.privIsPaused = !0)
					}
					resume(e, t) {
							this.privIsPaused && void 0 !== this.privAudio && (this.privAudio.play().then((()=>{
									e && e()
							}
							), (e=>{
									t && t(e)
							}
							)),
							this.privIsPaused = !1)
					}
					get internalAudio() {
							return this.privAudio
					}
					updateSourceBuffer() {
							return SpeakerAudioDestination_awaiter(this, void 0, void 0, (function*() {
									if (void 0 !== this.privAudioBuffer && this.privAudioBuffer.length > 0 && this.sourceBufferAvailable()) {
											this.privAppendingToBuffer = !0;
											const e = this.privAudioBuffer.shift();
											try {
													this.privSourceBuffer.appendBuffer(e)
											} catch (t) {
													return this.privAudioBuffer.unshift(e),
													void console.log("buffer filled, pausing addition of binaries until space is made")
											}
											yield this.notifyPlayback()
									} else
											this.canEndStream() && (yield this.handleSourceBufferUpdateEnd())
							}
							))
					}
					handleSourceBufferUpdateEnd() {
							return SpeakerAudioDestination_awaiter(this, void 0, void 0, (function*() {
									this.canEndStream() && this.sourceBufferAvailable() && (this.privMediaSource.endOfStream(),
									yield this.notifyPlayback())
							}
							))
					}
					notifyPlayback() {
							return SpeakerAudioDestination_awaiter(this, void 0, void 0, (function*() {
									this.privPlaybackStarted || void 0 === this.privAudio || (this.privPlaybackStarted = !0,
									this.onAudioStart && this.onAudioStart(this),
									this.privAudio.onended = ()=>{
											this.onAudioEnd && this.onAudioEnd(this)
									}
									,
									this.privIsPaused || (yield this.privAudio.play()))
							}
							))
					}
					canEndStream() {
							return this.isClosed && void 0 !== this.privSourceBuffer && 0 === this.privAudioBuffer.length && this.privMediaSourceOpened && !this.privAppendingToBuffer && "open" === this.privMediaSource.readyState
					}
					sourceBufferAvailable() {
							return void 0 !== this.privSourceBuffer && !this.privSourceBuffer.updating
					}
			}
			class PushAudioOutputStreamCallback {
			}
			var bs, Ss, Cs = __webpack_require__(2666);
			class AudioFileWriter {
					constructor(e) {
							Contracts.throwIfNullOrUndefined(Cs.openSync, "\nFile System access not available, please use Push or PullAudioOutputStream"),
							this.privFd = Cs.openSync(e, "w")
					}
					set format(e) {
							Contracts.throwIfNotUndefined(this.privAudioFormat, "format is already set"),
							this.privAudioFormat = e;
							let t = 0;
							this.privAudioFormat.hasHeader && (t = this.privAudioFormat.header.byteLength),
							void 0 !== this.privFd && (this.privWriteStream = Cs.createWriteStream("", {
									fd: this.privFd,
									start: t,
									autoClose: !1
							}))
					}
					write(e) {
							Contracts.throwIfNullOrUndefined(this.privAudioFormat, "must set format before writing."),
							void 0 !== this.privWriteStream && this.privWriteStream.write(new Uint8Array(e.slice(0)))
					}
					close() {
							void 0 !== this.privFd && (this.privWriteStream.on("finish", (()=>{
									this.privAudioFormat.hasHeader && (this.privAudioFormat.updateHeader(this.privWriteStream.bytesWritten),
									Cs.writeSync(this.privFd, new Int8Array(this.privAudioFormat.header), 0, this.privAudioFormat.header.byteLength, 0)),
									Cs.closeSync(this.privFd),
									this.privFd = void 0
							}
							)),
							this.privWriteStream.end())
					}
					id() {
							return this.privId
					}
			}
			class AudioConfig {
					static fromDefaultMicrophoneInput() {
							const e = new PcmRecorder(!0);
							return new AudioConfigImpl(new MicAudioSource(e))
					}
					static fromMicrophoneInput(e) {
							const t = new PcmRecorder(!0);
							return new AudioConfigImpl(new MicAudioSource(t,e))
					}
					static fromWavFileInput(e, t="unnamedBuffer.wav") {
							return new AudioConfigImpl(new FileAudioSource(e,t))
					}
					static fromStreamInput(e) {
							if (e instanceof PullAudioInputStreamCallback)
									return new AudioConfigImpl(new PullAudioInputStreamImpl(e));
							if (e instanceof AudioInputStream)
									return new AudioConfigImpl(e);
							if ("undefined" != typeof MediaStream && e instanceof MediaStream) {
									const t = new PcmRecorder(!1);
									return new AudioConfigImpl(new MicAudioSource(t,null,null,e))
							}
							throw new Error("Not Supported Type")
					}
					static fromDefaultSpeakerOutput() {
							return new AudioOutputConfigImpl(new SpeakerAudioDestination)
					}
					static fromSpeakerOutput(e) {
							if (void 0 === e)
									return AudioConfig.fromDefaultSpeakerOutput();
							if (e instanceof SpeakerAudioDestination)
									return new AudioOutputConfigImpl(e);
							throw new Error("Not Supported Type")
					}
					static fromAudioFileOutput(e) {
							return new AudioOutputConfigImpl(new AudioFileWriter(e))
					}
					static fromStreamOutput(e) {
							if (e instanceof PushAudioOutputStreamCallback)
									return new AudioOutputConfigImpl(new PushAudioOutputStreamImpl(e));
							if (e instanceof PushAudioOutputStream)
									return new AudioOutputConfigImpl(e);
							if (e instanceof PullAudioOutputStream)
									return new AudioOutputConfigImpl(e);
							throw new Error("Not Supported Type")
					}
			}
			class AudioConfigImpl extends AudioConfig {
					constructor(e) {
							super(),
							this.privSource = e
					}
					get format() {
							return this.privSource.format
					}
					close(e, t) {
							this.privSource.turnOff().then((()=>{
									e && e()
							}
							), (e=>{
									t && t(e)
							}
							))
					}
					id() {
							return this.privSource.id()
					}
					get blob() {
							return this.privSource.blob
					}
					turnOn() {
							return this.privSource.turnOn()
					}
					attach(e) {
							return this.privSource.attach(e)
					}
					detach(e) {
							return this.privSource.detach(e)
					}
					turnOff() {
							return this.privSource.turnOff()
					}
					get events() {
							return this.privSource.events
					}
					setProperty(e, t) {
							if (Contracts.throwIfNull(t, "value"),
							void 0 === this.privSource.setProperty)
									throw new Error("This AudioConfig instance does not support setting properties.");
							this.privSource.setProperty(e, t)
					}
					getProperty(e, t) {
							if (void 0 !== this.privSource.getProperty)
									return this.privSource.getProperty(e, t);
							throw new Error("This AudioConfig instance does not support getting properties.")
					}
					get deviceInfo() {
							return this.privSource.deviceInfo
					}
			}
			class AudioOutputConfigImpl extends AudioConfig {
					constructor(e) {
							super(),
							this.privDestination = e
					}
					set format(e) {
							this.privDestination.format = e
					}
					write(e) {
							this.privDestination.write(e)
					}
					close() {
							this.privDestination.close()
					}
					id() {
							return this.privDestination.id()
					}
					setProperty() {
							throw new Error("This AudioConfig instance does not support setting properties.")
					}
					getProperty() {
							throw new Error("This AudioConfig instance does not support getting properties.")
					}
			}
			(function(e) {
					e[e.Simple = 0] = "Simple",
					e[e.Detailed = 1] = "Detailed"
			}
			)(bs || (bs = {})),
			function(e) {
					e[e.Masked = 0] = "Masked",
					e[e.Removed = 1] = "Removed",
					e[e.Raw = 2] = "Raw"
			}(Ss || (Ss = {}));
			class SpeechConfig {
					constructor() {}
					static fromSubscription(e, t) {
							Contracts.throwIfNullOrWhitespace(e, "subscriptionKey"),
							Contracts.throwIfNullOrWhitespace(t, "region");
							const n = new SpeechConfigImpl;
							return n.setProperty(es.SpeechServiceConnection_Region, t),
							n.setProperty(es.SpeechServiceConnection_IntentRegion, t),
							n.setProperty(es.SpeechServiceConnection_Key, e),
							n
					}
					static fromEndpoint(e, t) {
							Contracts.throwIfNull(e, "endpoint");
							const n = new SpeechConfigImpl;
							return n.setProperty(es.SpeechServiceConnection_Endpoint, e.href),
							void 0 !== t && n.setProperty(es.SpeechServiceConnection_Key, t),
							n
					}
					static fromHost(e, t) {
							Contracts.throwIfNull(e, "hostName");
							const n = new SpeechConfigImpl;
							return n.setProperty(es.SpeechServiceConnection_Host, e.protocol + "//" + e.hostname + ("" === e.port ? "" : ":" + e.port)),
							void 0 !== t && n.setProperty(es.SpeechServiceConnection_Key, t),
							n
					}
					static fromAuthorizationToken(e, t) {
							Contracts.throwIfNull(e, "authorizationToken"),
							Contracts.throwIfNullOrWhitespace(t, "region");
							const n = new SpeechConfigImpl;
							return n.setProperty(es.SpeechServiceConnection_Region, t),
							n.setProperty(es.SpeechServiceConnection_IntentRegion, t),
							n.authorizationToken = e,
							n
					}
					close() {}
			}
			class SpeechConfigImpl extends SpeechConfig {
					constructor() {
							super(),
							this.privProperties = new PropertyCollection,
							this.speechRecognitionLanguage = "en-US",
							this.outputFormat = bs.Simple
					}
					get properties() {
							return this.privProperties
					}
					get endPoint() {
							return new URL(this.privProperties.getProperty(es.SpeechServiceConnection_Endpoint))
					}
					get subscriptionKey() {
							return this.privProperties.getProperty(es.SpeechServiceConnection_Key)
					}
					get region() {
							return this.privProperties.getProperty(es.SpeechServiceConnection_Region)
					}
					get authorizationToken() {
							return this.privProperties.getProperty(es.SpeechServiceAuthorization_Token)
					}
					set authorizationToken(e) {
							this.privProperties.setProperty(es.SpeechServiceAuthorization_Token, e)
					}
					get speechRecognitionLanguage() {
							return this.privProperties.getProperty(es.SpeechServiceConnection_RecoLanguage)
					}
					set speechRecognitionLanguage(e) {
							this.privProperties.setProperty(es.SpeechServiceConnection_RecoLanguage, e)
					}
					get autoDetectSourceLanguages() {
							return this.privProperties.getProperty(es.SpeechServiceConnection_AutoDetectSourceLanguages)
					}
					set autoDetectSourceLanguages(e) {
							this.privProperties.setProperty(es.SpeechServiceConnection_AutoDetectSourceLanguages, e)
					}
					get outputFormat() {
							return bs[this.privProperties.getProperty(hs, void 0)]
					}
					set outputFormat(e) {
							this.privProperties.setProperty(hs, bs[e])
					}
					get endpointId() {
							return this.privProperties.getProperty(es.SpeechServiceConnection_EndpointId)
					}
					set endpointId(e) {
							this.privProperties.setProperty(es.SpeechServiceConnection_EndpointId, e)
					}
					setProperty(e, t) {
							Contracts.throwIfNull(t, "value"),
							this.privProperties.setProperty(e, t)
					}
					getProperty(e, t) {
							return this.privProperties.getProperty(e, t)
					}
					setProxy(e, t, n, i) {
							this.setProperty(es[es.SpeechServiceConnection_ProxyHostName], e),
							this.setProperty(es[es.SpeechServiceConnection_ProxyPort], t),
							this.setProperty(es[es.SpeechServiceConnection_ProxyUserName], n),
							this.setProperty(es[es.SpeechServiceConnection_ProxyPassword], i)
					}
					setServiceProperty(e, t) {
							const n = JSON.parse(this.privProperties.getProperty(gs, "{}"));
							n[e] = t,
							this.privProperties.setProperty(gs, JSON.stringify(n))
					}
					setProfanity(e) {
							this.privProperties.setProperty(es.SpeechServiceResponse_ProfanityOption, Ss[e])
					}
					enableAudioLogging() {
							this.privProperties.setProperty(es.SpeechServiceConnection_EnableAudioLogging, "true")
					}
					requestWordLevelTimestamps() {
							this.privProperties.setProperty(es.SpeechServiceResponse_RequestWordLevelTimestamps, "true")
					}
					enableDictation() {
							this.privProperties.setProperty(_s, "true")
					}
					clone() {
							const e = new SpeechConfigImpl;
							return e.privProperties = this.privProperties.clone(),
							e
					}
					get speechSynthesisLanguage() {
							return this.privProperties.getProperty(es.SpeechServiceConnection_SynthLanguage)
					}
					set speechSynthesisLanguage(e) {
							this.privProperties.setProperty(es.SpeechServiceConnection_SynthLanguage, e)
					}
					get speechSynthesisVoiceName() {
							return this.privProperties.getProperty(es.SpeechServiceConnection_SynthVoice)
					}
					set speechSynthesisVoiceName(e) {
							this.privProperties.setProperty(es.SpeechServiceConnection_SynthVoice, e)
					}
					get speechSynthesisOutputFormat() {
							return fs[this.privProperties.getProperty(es.SpeechServiceConnection_SynthOutputFormat, void 0)]
					}
					set speechSynthesisOutputFormat(e) {
							this.privProperties.setProperty(es.SpeechServiceConnection_SynthOutputFormat, fs[e])
					}
			}
			var Es = __webpack_require__(5833)
				, Ts = __webpack_require__.n(Es);
			class ConnectionOpenResponse {
					constructor(e, t) {
							this.privStatusCode = e,
							this.privReason = t
					}
					get statusCode() {
							return this.privStatusCode
					}
					get reason() {
							return this.privReason
					}
			}
			class RawWebsocketMessage {
					constructor(e, t, n) {
							if (this.privPayload = null,
							!t)
									throw new ArgumentNullError("payload");
							if (e === ds.Binary && "ArrayBuffer" !== t.__proto__.constructor.name)
									throw new InvalidOperationError("Payload must be ArrayBuffer");
							if (e === ds.Text && "string" != typeof t)
									throw new InvalidOperationError("Payload must be a string");
							this.privMessageType = e,
							this.privPayload = t,
							this.privId = n || createNoDashGuid()
					}
					get messageType() {
							return this.privMessageType
					}
					get payload() {
							return this.privPayload
					}
					get textContent() {
							if (this.privMessageType === ds.Binary)
									throw new InvalidOperationError("Not supported for binary message");
							return this.privPayload
					}
					get binaryContent() {
							if (this.privMessageType === ds.Text)
									throw new InvalidOperationError("Not supported for text message");
							return this.privPayload
					}
					get id() {
							return this.privId
					}
			}
			var Is = __webpack_require__(821)
				, ws = __webpack_require__(2799);
			class OCSPEvent extends PlatformEvent {
					constructor(e, t, n) {
							super(e, t),
							this.privSignature = n
					}
			}
			class OCSPMemoryCacheHitEvent extends OCSPEvent {
					constructor(e) {
							super("OCSPMemoryCacheHitEvent", as.Debug, e)
					}
			}
			class OCSPCacheMissEvent extends OCSPEvent {
					constructor(e) {
							super("OCSPCacheMissEvent", as.Debug, e)
					}
			}
			class OCSPDiskCacheHitEvent extends OCSPEvent {
					constructor(e) {
							super("OCSPDiskCacheHitEvent", as.Debug, e)
					}
			}
			class OCSPCacheUpdateNeededEvent extends OCSPEvent {
					constructor(e) {
							super("OCSPCacheUpdateNeededEvent", as.Debug, e)
					}
			}
			class OCSPMemoryCacheStoreEvent extends OCSPEvent {
					constructor(e) {
							super("OCSPMemoryCacheStoreEvent", as.Debug, e)
					}
			}
			class OCSPDiskCacheStoreEvent extends OCSPEvent {
					constructor(e) {
							super("OCSPDiskCacheStoreEvent", as.Debug, e)
					}
			}
			class OCSPCacheUpdateCompleteEvent extends OCSPEvent {
					constructor(e) {
							super("OCSPCacheUpdateCompleteEvent", as.Debug, e)
					}
			}
			class OCSPStapleReceivedEvent extends OCSPEvent {
					constructor() {
							super("OCSPStapleReceivedEvent", as.Debug, "")
					}
			}
			class OCSPCacheEntryExpiredEvent extends OCSPEvent {
					constructor(e, t) {
							super("OCSPCacheEntryExpiredEvent", as.Debug, e),
							this.privExpireTime = t
					}
			}
			class OCSPCacheEntryNeedsRefreshEvent extends OCSPEvent {
					constructor(e, t, n) {
							super("OCSPCacheEntryNeedsRefreshEvent", as.Debug, e),
							this.privExpireTime = n,
							this.privStartTime = t
					}
			}
			class OCSPCacheHitEvent extends OCSPEvent {
					constructor(e, t, n) {
							super("OCSPCacheHitEvent", as.Debug, e),
							this.privExpireTime = n,
							this.privExpireTimeString = new Date(n).toLocaleDateString(),
							this.privStartTime = t,
							this.privStartTimeString = new Date(t).toLocaleTimeString()
					}
			}
			class OCSPVerificationFailedEvent extends OCSPEvent {
					constructor(e, t) {
							super("OCSPVerificationFailedEvent", as.Debug, e),
							this.privError = t
					}
			}
			class OCSPCacheFetchErrorEvent extends OCSPEvent {
					constructor(e, t) {
							super("OCSPCacheFetchErrorEvent", as.Debug, e),
							this.privError = t
					}
			}
			class OCSPResponseRetrievedEvent extends OCSPEvent {
					constructor(e) {
							super("OCSPResponseRetrievedEvent", as.Debug, e)
					}
			}
			class OCSPCacheUpdateErrorEvent extends OCSPEvent {
					constructor(e, t) {
							super("OCSPCacheUpdateErrorEvent", as.Debug, e),
							this.privError = t
					}
			}
			var As = __webpack_require__(6747)
				, Rs = __webpack_require__.n(As)
				, xs = __webpack_require__(7274)
				, Os = __webpack_require__.n(xs)
				, Ns = __webpack_require__(3092)
				, Ps = __webpack_require__.n(Ns)
				, Ds = __webpack_require__(1338)
				, CertChecks_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			class CertCheckAgent {
					constructor(e) {
							e && (this.privProxyInfo = e),
							CertCheckAgent.privDiskCache || (CertCheckAgent.privDiskCache = new (Os())("microsoft-cognitiveservices-speech-sdk-cache",{
									supportBuffer: !0,
									location: "undefined" != typeof process && process.env.SPEECH_OCSP_CACHE_ROOT ? process.env.SPEECH_OCSP_CACHE_ROOT : void 0
							}))
					}
					static forceReinitDiskCache() {
							CertCheckAgent.privDiskCache = void 0,
							CertCheckAgent.privMemCache = {}
					}
					GetAgent(e) {
							const t = new (Rs().Agent)(this.CreateConnection);
							if (void 0 !== this.privProxyInfo && void 0 !== this.privProxyInfo.HostName && this.privProxyInfo.Port > 0) {
									t["privProxyInfo"] = this.privProxyInfo
							}
							return t
					}
					static GetProxyAgent(e) {
							const t = {
									host: e.HostName,
									port: e.Port
							};
							e.UserName ? t.headers = {
									"Proxy-Authentication": "Basic " + new Buffer(`${e.UserName}:${void 0 === e.Password ? "" : e.Password}`).toString("base64")
							} : t.headers = {},
							t.headers.requestOCSP = "true";
							return new (Ps())(t)
					}
					static OCSPCheck(e, t) {
							return CertChecks_awaiter(this, void 0, void 0, (function*() {
									let n, i, r = !1;
									const o = yield e;
									o.cork();
									const s = o;
									return new Promise(((e,a)=>{
											o.on("OCSPResponse", (e=>{
													e && (this.onEvent(new OCSPStapleReceivedEvent),
													i = e)
											}
											)),
											o.on("error", (e=>{
													r || (r = !0,
													o.destroy(),
													a(e))
											}
											)),
											s.on("secure", (()=>CertChecks_awaiter(this, void 0, void 0, (function*() {
													const l = s.getPeerCertificate(!0);
													try {
															const s = yield this.GetIssuer(l);
															n = ws.request.generate(l.raw, s.raw);
															const a = n.id.toString("hex");
															if (!i) {
																	const e = yield CertCheckAgent.GetResponseFromCache(a, n, t);
																	i = e
															}
															yield this.VerifyOCSPResponse(i, n, t),
															o.uncork(),
															r = !0,
															e(o)
													} catch (e) {
															o.destroy(),
															r = !0,
															a(e)
													}
											}
											))))
									}
									))
							}
							))
					}
					static GetIssuer(e) {
							return e.issuerCertificate ? Promise.resolve(e.issuerCertificate) : new Promise(((t,n)=>{
									new ws.Agent({}).fetchIssuer(e, null, ((e,i)=>{
											e ? n(e) : t(i)
									}
									))
							}
							))
					}
					static GetResponseFromCache(e, t, n) {
							return CertChecks_awaiter(this, void 0, void 0, (function*() {
									let i = CertCheckAgent.privMemCache[e];
									if (i && this.onEvent(new OCSPMemoryCacheHitEvent(e)),
									!i)
											try {
													const t = yield CertCheckAgent.privDiskCache.get(e);
													t.isCached && (CertCheckAgent.onEvent(new OCSPDiskCacheHitEvent(e)),
													CertCheckAgent.StoreMemoryCacheEntry(e, t.value),
													i = t.value)
											} catch (e) {
													i = null
											}
									if (!i)
											return i;
									try {
											const r = ws.utils.parseResponse(i)
												, o = r.value.tbsResponseData;
											if (o.responses.length < 1)
													return void this.onEvent(new OCSPCacheFetchErrorEvent(e,"Not enough data in cached response"));
											const s = o.responses[0].thisUpdate
												, a = o.responses[0].nextUpdate;
											if (a < Date.now() + this.testTimeOffset - 6e4)
													this.onEvent(new OCSPCacheEntryExpiredEvent(e,a)),
													i = null;
											else {
													const i = Math.min(864e5, (a - s) / 2);
													a - (Date.now() + this.testTimeOffset) < i ? (this.onEvent(new OCSPCacheEntryNeedsRefreshEvent(e,s,a)),
													this.UpdateCache(t, n).catch((t=>{
															this.onEvent(new OCSPCacheUpdateErrorEvent(e,t.toString()))
													}
													))) : this.onEvent(new OCSPCacheHitEvent(e,s,a))
											}
									} catch (t) {
											this.onEvent(new OCSPCacheFetchErrorEvent(e,t)),
											i = null
									}
									return i || this.onEvent(new OCSPCacheMissEvent(e)),
									i
							}
							))
					}
					static VerifyOCSPResponse(e, t, n) {
							return CertChecks_awaiter(this, void 0, void 0, (function*() {
									let i = e;
									return i || (i = yield CertCheckAgent.GetOCSPResponse(t, n)),
									new Promise(((r,o)=>{
											ws.verify({
													request: t,
													response: i
											}, (s=>{
													s ? (CertCheckAgent.onEvent(new OCSPVerificationFailedEvent(t.id.toString("hex"),s)),
													e ? this.VerifyOCSPResponse(null, t, n).then((()=>{
															r()
													}
													), (e=>{
															o(e)
													}
													)) : o(s)) : (e || CertCheckAgent.StoreCacheEntry(t.id.toString("hex"), i),
													r())
											}
											))
									}
									))
							}
							))
					}
					static UpdateCache(e, t) {
							return CertChecks_awaiter(this, void 0, void 0, (function*() {
									const n = e.id.toString("hex");
									this.onEvent(new OCSPCacheUpdateNeededEvent(n));
									const i = yield this.GetOCSPResponse(e, t);
									this.StoreCacheEntry(n, i),
									this.onEvent(new OCSPCacheUpdateCompleteEvent(e.id.toString("hex")))
							}
							))
					}
					static StoreCacheEntry(e, t) {
							this.StoreMemoryCacheEntry(e, t),
							this.StoreDiskCacheEntry(e, t)
					}
					static StoreMemoryCacheEntry(e, t) {
							this.privMemCache[e] = t,
							this.onEvent(new OCSPMemoryCacheStoreEvent(e))
					}
					static StoreDiskCacheEntry(e, t) {
							this.privDiskCache.set(e, t).then((()=>{
									this.onEvent(new OCSPDiskCacheStoreEvent(e))
							}
							))
					}
					static GetOCSPResponse(e, t) {
							let n = {};
							if (t) {
									const e = CertCheckAgent.GetProxyAgent(t);
									n.agent = e
							}
							return new Promise(((t,i)=>{
									ws.utils.getAuthorityInfo(e.cert, "1.3.6.1.5.5.7.48.1", ((r,o)=>{
											if (r)
													return void i(r);
											const s = new URL(o);
											n = Object.assign(Object.assign({}, n), {
													host: s.host,
													protocol: s.protocol,
													port: s.port,
													path: s.pathname,
													hostname: s.host
											}),
											ws.utils.getResponse(n, e.data, ((n,r)=>{
													if (n)
															return void i(n);
													const o = e.certID;
													this.onEvent(new OCSPResponseRetrievedEvent(o.toString("hex"))),
													t(r)
											}
											))
									}
									))
							}
							))
					}
					static onEvent(e) {
							Events.instance.onEvent(e)
					}
					CreateConnection(e, t) {
							const n = "undefined" != typeof process && "0" !== process.env.NODE_TLS_REJECT_UNAUTHORIZED && "0" !== process.env.SPEECH_CONDUCT_OCSP_CHECK && t.secureEndpoint;
							let i;
							if (t = Object.assign(Object.assign({}, t), {
									requestOCSP: !CertCheckAgent.forceDisableOCSPStapling,
									servername: t.host
							}),
							this.privProxyInfo) {
									const n = CertCheckAgent.GetProxyAgent(this.privProxyInfo);
									i = new Promise(((i,r)=>{
											n.callback(e, t, ((e,t)=>{
													e ? r(e) : i(t)
											}
											))
									}
									))
							} else
									i = t.secureEndpoint ? Promise.resolve(Is.connect(t)) : Promise.resolve(Ds.connect(t));
							return n ? CertCheckAgent.OCSPCheck(i, this.privProxyInfo) : i
					}
			}
			CertCheckAgent.testTimeOffset = 0,
			CertCheckAgent.forceDisableOCSPStapling = !1,
			CertCheckAgent.privMemCache = {};
			var WebsocketMessageAdapter_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			class WebsocketMessageAdapter {
					constructor(e, t, n, i, r, o) {
							if (!e)
									throw new ArgumentNullError("uri");
							if (!n)
									throw new ArgumentNullError("messageFormatter");
							this.proxyInfo = i,
							this.privConnectionEvents = new EventSource_EventSource,
							this.privConnectionId = t,
							this.privMessageFormatter = n,
							this.privConnectionState = ps.None,
							this.privUri = e,
							this.privHeaders = r,
							this.privEnableCompression = o,
							this.privHeaders[HeaderNames.ConnectionId] = this.privConnectionId,
							this.privLastErrorReceived = ""
					}
					get state() {
							return this.privConnectionState
					}
					open() {
							if (this.privConnectionState === ps.Disconnected)
									return Promise.reject(`Cannot open a connection that is in ${this.privConnectionState} state`);
							if (this.privConnectionEstablishDeferral)
									return this.privConnectionEstablishDeferral.promise;
							this.privConnectionEstablishDeferral = new Deferred,
							this.privCertificateValidatedDeferral = new Deferred,
							this.privConnectionState = ps.Connecting;
							try {
									if ("undefined" == typeof WebSocket || WebsocketMessageAdapter.forceNpmWebSocket) {
											const e = {
													headers: this.privHeaders,
													perMessageDeflate: this.privEnableCompression
											};
											this.privCertificateValidatedDeferral.resolve();
											const t = new CertCheckAgent(this.proxyInfo);
											e.agent = t.GetAgent();
											let n = new URL(this.privUri).protocol;
											"wss:" === (null == n ? void 0 : n.toLocaleLowerCase()) ? n = "https:" : "ws:" === (null == n ? void 0 : n.toLocaleLowerCase()) && (n = "http:"),
											e.agent.protocol = n,
											this.privWebsocketClient = new (Ts())(this.privUri,e)
									} else
											this.privCertificateValidatedDeferral.resolve(),
											this.privWebsocketClient = new WebSocket(this.privUri);
									this.privWebsocketClient.binaryType = "arraybuffer",
									this.privReceivingMessageQueue = new Queue,
									this.privDisconnectDeferral = new Deferred,
									this.privSendMessageQueue = new Queue,
									this.processSendQueue().catch((e=>{
											Events.instance.onEvent(new BackgroundEvent(e))
									}
									))
							} catch (e) {
									return this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(500,e)),
									this.privConnectionEstablishDeferral.promise
							}
							return this.onEvent(new ConnectionStartEvent(this.privConnectionId,this.privUri)),
							this.privWebsocketClient.onopen = ()=>{
									this.privCertificateValidatedDeferral.promise.then((()=>{
											this.privConnectionState = ps.Connected,
											this.onEvent(new ConnectionEstablishedEvent(this.privConnectionId)),
											this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(200,""))
									}
									), (e=>{
											this.privConnectionEstablishDeferral.reject(e)
									}
									))
							}
							,
							this.privWebsocketClient.onerror = e=>{
									this.onEvent(new ConnectionErrorEvent(this.privConnectionId,e.message,e.type)),
									this.privLastErrorReceived = e.message
							}
							,
							this.privWebsocketClient.onclose = e=>{
									this.privConnectionState === ps.Connecting ? (this.privConnectionState = ps.Disconnected,
									this.privConnectionEstablishDeferral.resolve(new ConnectionOpenResponse(e.code,e.reason + " " + this.privLastErrorReceived))) : (this.privConnectionState = ps.Disconnected,
									this.privWebsocketClient = null,
									this.onEvent(new ConnectionClosedEvent(this.privConnectionId,e.code,e.reason))),
									this.onClose(e.code, e.reason).catch((e=>{
											Events.instance.onEvent(new BackgroundEvent(e))
									}
									))
							}
							,
							this.privWebsocketClient.onmessage = e=>{
									const t = (new Date).toISOString();
									if (this.privConnectionState === ps.Connected) {
											const n = new Deferred;
											if (this.privReceivingMessageQueue.enqueueFromPromise(n.promise),
											e.data instanceof ArrayBuffer) {
													const i = new RawWebsocketMessage(ds.Binary,e.data);
													this.privMessageFormatter.toConnectionMessage(i).then((e=>{
															this.onEvent(new ConnectionMessageReceivedEvent(this.privConnectionId,t,e)),
															n.resolve(e)
													}
													), (e=>{
															n.reject(`Invalid binary message format. Error: ${e}`)
													}
													))
											} else {
													const i = new RawWebsocketMessage(ds.Text,e.data);
													this.privMessageFormatter.toConnectionMessage(i).then((e=>{
															this.onEvent(new ConnectionMessageReceivedEvent(this.privConnectionId,t,e)),
															n.resolve(e)
													}
													), (e=>{
															n.reject(`Invalid text message format. Error: ${e}`)
													}
													))
											}
									}
							}
							,
							this.privConnectionEstablishDeferral.promise
					}
					send(e) {
							if (this.privConnectionState !== ps.Connected)
									return Promise.reject(`Cannot send on connection that is in ${ps[this.privConnectionState]} state`);
							const t = new Deferred
								, n = new Deferred;
							return this.privSendMessageQueue.enqueueFromPromise(n.promise),
							this.privMessageFormatter.fromConnectionMessage(e).then((i=>{
									n.resolve({
											Message: e,
											RawWebsocketMessage: i,
											sendStatusDeferral: t
									})
							}
							), (e=>{
									n.reject(`Error formatting the message. ${e}`)
							}
							)),
							t.promise
					}
					read() {
							return this.privConnectionState !== ps.Connected ? Promise.reject(`Cannot read on connection that is in ${this.privConnectionState} state`) : this.privReceivingMessageQueue.dequeue()
					}
					close(e) {
							return this.privWebsocketClient ? (this.privConnectionState !== ps.Disconnected && this.privWebsocketClient.close(1e3, e || "Normal closure by client"),
							this.privDisconnectDeferral.promise) : Promise.resolve()
					}
					get events() {
							return this.privConnectionEvents
					}
					sendRawMessage(e) {
							try {
									return e ? (this.onEvent(new ConnectionMessageSentEvent(this.privConnectionId,(new Date).toISOString(),e.Message)),
									this.isWebsocketOpen ? (this.privWebsocketClient.send(e.RawWebsocketMessage.payload),
									Promise.resolve()) : Promise.reject("websocket send error: Websocket not ready " + this.privConnectionId + " " + e.Message.id + " " + (new Error).stack)) : Promise.resolve()
							} catch (e) {
									return Promise.reject(`websocket send error: ${e}`)
							}
					}
					onClose(e, t) {
							return WebsocketMessageAdapter_awaiter(this, void 0, void 0, (function*() {
									const n = `Connection closed. ${e}: ${t}`;
									this.privConnectionState = ps.Disconnected,
									this.privDisconnectDeferral.resolve(),
									yield this.privReceivingMessageQueue.drainAndDispose((()=>{}
									), n),
									yield this.privSendMessageQueue.drainAndDispose((e=>{
											e.sendStatusDeferral.reject(n)
									}
									), n)
							}
							))
					}
					processSendQueue() {
							return WebsocketMessageAdapter_awaiter(this, void 0, void 0, (function*() {
									for (; ; ) {
											const e = this.privSendMessageQueue.dequeue()
												, t = yield e;
											if (!t)
													return;
											try {
													yield this.sendRawMessage(t),
													t.sendStatusDeferral.resolve()
											} catch (e) {
													t.sendStatusDeferral.reject(e)
											}
									}
							}
							))
					}
					onEvent(e) {
							this.privConnectionEvents.onEvent(e),
							Events.instance.onEvent(e)
					}
					get isWebsocketOpen() {
							return this.privWebsocketClient && this.privWebsocketClient.readyState === this.privWebsocketClient.OPEN
					}
			}
			WebsocketMessageAdapter.forceNpmWebSocket = !1;
			var WebsocketConnection_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			class WebsocketConnection {
					constructor(e, t, n, i, r, o=!1, s) {
							if (this.privIsDisposed = !1,
							!e)
									throw new ArgumentNullError("uri");
							if (!i)
									throw new ArgumentNullError("messageFormatter");
							this.privMessageFormatter = i;
							let a = ""
								, l = 0;
							if (t)
									for (const n in t)
											if (n) {
													a += 0 === l && -1 === e.indexOf("?") ? "?" : "&";
													a += `${n}=${encodeURIComponent(t[n])}`,
													l++
											}
							if (n)
									for (const t in n)
											if (t) {
													a += 0 === l && -1 === e.indexOf("?") ? "?" : "&";
													a += `${t}=${encodeURIComponent(n[t])}`,
													l++
											}
							this.privUri = e + a,
							this.privId = s || createNoDashGuid(),
							this.privConnectionMessageAdapter = new WebsocketMessageAdapter(this.privUri,this.id,this.privMessageFormatter,r,n,o)
					}
					dispose() {
							return WebsocketConnection_awaiter(this, void 0, void 0, (function*() {
									this.privIsDisposed = !0,
									this.privConnectionMessageAdapter && (yield this.privConnectionMessageAdapter.close())
							}
							))
					}
					isDisposed() {
							return this.privIsDisposed
					}
					get id() {
							return this.privId
					}
					get uri() {
							return this.privUri
					}
					state() {
							return this.privConnectionMessageAdapter.state
					}
					open() {
							return this.privConnectionMessageAdapter.open()
					}
					send(e) {
							return this.privConnectionMessageAdapter.send(e)
					}
					read() {
							return this.privConnectionMessageAdapter.read()
					}
					get events() {
							return this.privConnectionMessageAdapter.events
					}
			}
			class ProxyInfo {
					constructor(e, t, n, i) {
							this.privProxyHostName = e,
							this.privProxyPort = t,
							this.privProxyUserName = n,
							this.privProxyPassword = i
					}
					static fromParameters(e) {
							return new ProxyInfo(e.getProperty(es.SpeechServiceConnection_ProxyHostName),parseInt(e.getProperty(es.SpeechServiceConnection_ProxyPort), 10),e.getProperty(es.SpeechServiceConnection_ProxyUserName),e.getProperty(es.SpeechServiceConnection_ProxyPassword))
					}
					static fromRecognizerConfig(e) {
							return this.fromParameters(e.parameters)
					}
					get HostName() {
							return this.privProxyHostName
					}
					get Port() {
							return this.privProxyPort
					}
					get UserName() {
							return this.privProxyUserName
					}
					get Password() {
							return this.privProxyPassword
					}
			}
			class QueryParameterNames {
			}
			QueryParameterNames.BotId = "botid",
			QueryParameterNames.CustomSpeechDeploymentId = "cid",
			QueryParameterNames.CustomVoiceDeploymentId = "deploymentId",
			QueryParameterNames.EnableAudioLogging = "storeAudio",
			QueryParameterNames.EnableLanguageId = "lidEnabled",
			QueryParameterNames.EnableWordLevelTimestamps = "wordLevelTimestamps",
			QueryParameterNames.EndSilenceTimeoutMs = "endSilenceTimeoutMs",
			QueryParameterNames.SegmentationSilenceTimeoutMs = "segmentationSilenceTimeoutMs",
			QueryParameterNames.Format = "format",
			QueryParameterNames.InitialSilenceTimeoutMs = "initialSilenceTimeoutMs",
			QueryParameterNames.Language = "language",
			QueryParameterNames.Profanity = "profanity",
			QueryParameterNames.RequestBotStatusMessages = "enableBotMessageStatus",
			QueryParameterNames.StableIntermediateThreshold = "stableIntermediateThreshold",
			QueryParameterNames.StableTranslation = "stableTranslation",
			QueryParameterNames.TestHooks = "testhooks",
			QueryParameterNames.Postprocessing = "postprocessing";
			class ConnectionFactoryBase {
					static getHostSuffix(e) {
							if (e) {
									if (e.toLowerCase().startsWith("china"))
											return ".azure.cn";
									if (e.toLowerCase().startsWith("usgov"))
											return ".azure.us"
							}
							return ".microsoft.com"
					}
					setCommonUrlParams(e, t, n) {
							new Map([[es.Speech_SegmentationSilenceTimeoutMs, QueryParameterNames.SegmentationSilenceTimeoutMs], [es.SpeechServiceConnection_EnableAudioLogging, QueryParameterNames.EnableAudioLogging], [es.SpeechServiceConnection_EndSilenceTimeoutMs, QueryParameterNames.EndSilenceTimeoutMs], [es.SpeechServiceConnection_InitialSilenceTimeoutMs, QueryParameterNames.InitialSilenceTimeoutMs], [es.SpeechServiceResponse_PostProcessingOption, QueryParameterNames.Postprocessing], [es.SpeechServiceResponse_ProfanityOption, QueryParameterNames.Profanity], [es.SpeechServiceResponse_RequestWordLevelTimestamps, QueryParameterNames.EnableWordLevelTimestamps], [es.SpeechServiceResponse_StablePartialResultThreshold, QueryParameterNames.StableIntermediateThreshold]]).forEach(((i,r)=>{
									this.setUrlParameter(r, i, e, t, n)
							}
							));
							const i = JSON.parse(e.parameters.getProperty(gs, "{}"));
							Object.keys(i).forEach((e=>{
									t[e] = i[e]
							}
							))
					}
					setUrlParameter(e, t, n, i, r) {
							const o = n.parameters.getProperty(e, void 0);
							!o || r && -1 !== r.search(t) || (i[t] = o.toLocaleLowerCase())
					}
			}
			class WebsocketMessageFormatter {
					toConnectionMessage(e) {
							const t = new Deferred;
							try {
									if (e.messageType === ds.Text) {
											const n = e.textContent;
											let i = {}
												, r = null;
											if (n) {
													const e = n.split("\r\n\r\n");
													e && e.length > 0 && (i = this.parseHeaders(e[0]),
													e.length > 1 && (r = e[1]))
											}
											t.resolve(new ConnectionMessage(e.messageType,r,i,e.id))
									} else if (e.messageType === ds.Binary) {
											const n = e.binaryContent;
											let i = {}
												, r = null;
											if (!n || n.byteLength < 2)
													throw new Error("Invalid binary message format. Header length missing.");
											const o = new DataView(n)
												, s = o.getInt16(0);
											if (n.byteLength < s + 2)
													throw new Error("Invalid binary message format. Header content missing.");
											let a = "";
											for (let e = 0; e < s; e++)
													a += String.fromCharCode(o.getInt8(e + 2));
											i = this.parseHeaders(a),
											n.byteLength > s + 2 && (r = n.slice(2 + s)),
											t.resolve(new ConnectionMessage(e.messageType,r,i,e.id))
									}
							} catch (e) {
									t.reject(`Error formatting the message. Error: ${e}`)
							}
							return t.promise
					}
					fromConnectionMessage(e) {
							const t = new Deferred;
							try {
									if (e.messageType === ds.Text) {
											const n = `${this.makeHeaders(e)}\r\n${e.textBody ? e.textBody : ""}`;
											t.resolve(new RawWebsocketMessage(ds.Text,n,e.id))
									} else if (e.messageType === ds.Binary) {
											const n = this.makeHeaders(e)
												, i = e.binaryBody
												, r = this.stringToArrayBuffer(n)
												, o = new Int8Array(r)
												, s = o.byteLength
												, a = new Int8Array(2 + s + (i ? i.byteLength : 0));
											if (a[0] = s >> 8 & 255,
											a[1] = 255 & s,
											a.set(o, 2),
											i) {
													const e = new Int8Array(i);
													a.set(e, 2 + s)
											}
											const l = a.buffer;
											t.resolve(new RawWebsocketMessage(ds.Binary,l,e.id))
									}
							} catch (e) {
									t.reject(`Error formatting the message. ${e}`)
							}
							return t.promise
					}
					makeHeaders(e) {
							let t = "";
							if (e.headers)
									for (const n in e.headers)
											n && (t += `${n}: ${e.headers[n]}\r\n`);
							return t
					}
					parseHeaders(e) {
							const t = {};
							if (e) {
									const n = e.match(/[^\r\n]+/g);
									if (t)
											for (const e of n)
													if (e) {
															const n = e.indexOf(":")
																, i = n > 0 ? e.substr(0, n).trim().toLowerCase() : e
																, r = n > 0 && e.length > n + 1 ? e.substr(n + 1).trim() : "";
															t[i] = r
													}
							}
							return t
					}
					stringToArrayBuffer(e) {
							const t = new ArrayBuffer(e.length)
								, n = new DataView(t);
							for (let t = 0; t < e.length; t++)
									n.setUint8(t, e.charCodeAt(t));
							return t
					}
			}
			class SpeechConnectionFactory extends ConnectionFactoryBase {
					constructor() {
							super(...arguments),
							this.interactiveRelativeUri = "/speech/recognition/interactive/cognitiveservices/v1",
							this.conversationRelativeUri = "/speech/recognition/conversation/cognitiveservices/v1",
							this.dictationRelativeUri = "/speech/recognition/dictation/cognitiveservices/v1",
							this.universalUri = "/speech/universal/v"
					}
					create(e, t, n) {
							let i = e.parameters.getProperty(es.SpeechServiceConnection_Endpoint, void 0);
							const r = e.parameters.getProperty(es.SpeechServiceConnection_Region, void 0)
								, o = ConnectionFactoryBase.getHostSuffix(r)
								, s = e.parameters.getProperty(es.SpeechServiceConnection_Host, "wss://" + r + ".stt.speech" + o)
								, a = {}
								, l = e.parameters.getProperty(es.SpeechServiceConnection_EndpointId, void 0)
								, c = e.parameters.getProperty(es.SpeechServiceConnection_RecoLanguage, void 0);
							if (l ? i && -1 !== i.search(QueryParameterNames.CustomSpeechDeploymentId) || (a[QueryParameterNames.CustomSpeechDeploymentId] = l) : c && (i && -1 !== i.search(QueryParameterNames.Language) || (a[QueryParameterNames.Language] = c)),
							i && -1 !== i.search(QueryParameterNames.Format) || (a[QueryParameterNames.Format] = e.parameters.getProperty(hs, bs[bs.Simple]).toLowerCase()),
							void 0 !== e.autoDetectSourceLanguages && (a[QueryParameterNames.EnableLanguageId] = "true"),
							this.setCommonUrlParams(e, a, i),
							!i)
									switch (e.recognitionMode) {
									case ts.Conversation:
											i = "true" === e.parameters.getProperty(_s, "false") ? s + this.dictationRelativeUri : void 0 !== e.recognitionEndpointVersion && parseInt(e.recognitionEndpointVersion, 10) > 1 ? `${s}${this.universalUri}${e.recognitionEndpointVersion}` : s + this.conversationRelativeUri;
											break;
									case ts.Dictation:
											i = s + this.dictationRelativeUri;
											break;
									default:
											i = void 0 !== e.recognitionEndpointVersion && parseInt(e.recognitionEndpointVersion, 10) > 1 ? `${s}${this.universalUri}${e.recognitionEndpointVersion}` : s + this.interactiveRelativeUri
									}
							const d = {};
							void 0 !== t.token && "" !== t.token && (d[t.headerName] = t.token),
							d[HeaderNames.ConnectionId] = n;
							const p = "true" === e.parameters.getProperty("SPEECH-EnableWebsocketCompression", "false")
								, u = new WebsocketConnection(i,a,d,new WebsocketMessageFormatter,ProxyInfo.fromRecognizerConfig(e),p,n)
								, h = u.uri;
							return e.parameters.setProperty(es.SpeechServiceConnection_Url, h),
							u
					}
			}
			class RecognitionResult {
					constructor(e, t, n, i, r, o, s, a, l, c) {
							this.privResultId = e,
							this.privReason = t,
							this.privText = n,
							this.privDuration = i,
							this.privOffset = r,
							this.privLanguage = o,
							this.privLanguageDetectionConfidence = s,
							this.privErrorDetails = a,
							this.privJson = l,
							this.privProperties = c
					}
					get resultId() {
							return this.privResultId
					}
					get reason() {
							return this.privReason
					}
					get text() {
							return this.privText
					}
					get duration() {
							return this.privDuration
					}
					get offset() {
							return this.privOffset
					}
					get language() {
							return this.privLanguage
					}
					get languageDetectionConfidence() {
							return this.privLanguageDetectionConfidence
					}
					get errorDetails() {
							return this.privErrorDetails
					}
					get json() {
							return this.privJson
					}
					get properties() {
							return this.privProperties
					}
			}
			class SpeechRecognitionResult extends RecognitionResult {
					constructor(e, t, n, i, r, o, s, a, l, c, d) {
							super(e, t, n, i, r, o, s, l, c, d),
							this.privSpeakerId = a
					}
					get speakerId() {
							return this.privSpeakerId
					}
			}
			class SessionEventArgs {
					constructor(e) {
							this.privSessionId = e
					}
					get sessionId() {
							return this.privSessionId
					}
			}
			class RecognitionEventArgs extends SessionEventArgs {
					constructor(e, t) {
							super(t),
							this.privOffset = e
					}
					get offset() {
							return this.privOffset
					}
			}
			class SpeechRecognitionEventArgs extends RecognitionEventArgs {
					constructor(e, t, n) {
							super(t, n),
							this.privResult = e
					}
					get result() {
							return this.privResult
					}
			}
			class CancellationEventArgsBase extends RecognitionEventArgs {
					constructor(e, t, n, i, r) {
							super(i, r),
							this.privReason = e,
							this.privErrorDetails = t,
							this.privErrorCode = n
					}
					get reason() {
							return this.privReason
					}
					get errorCode() {
							return this.privErrorCode
					}
					get errorDetails() {
							return this.privErrorDetails
					}
			}
			class SpeechRecognitionCanceledEventArgs extends CancellationEventArgsBase {
			}
			class ReplayableAudioNode {
					constructor(e, t) {
							this.privBuffers = [],
							this.privReplayOffset = 0,
							this.privLastShrinkOffset = 0,
							this.privBufferStartOffset = 0,
							this.privBufferSerial = 0,
							this.privBufferedBytes = 0,
							this.privReplay = !1,
							this.privLastChunkAcquiredTime = 0,
							this.privAudioNode = e,
							this.privBytesPerSecond = t
					}
					id() {
							return this.privAudioNode.id()
					}
					read() {
							if (this.privReplay && 0 !== this.privBuffers.length) {
									const e = this.privReplayOffset - this.privBufferStartOffset;
									let t = Math.round(e * this.privBytesPerSecond * 1e-7);
									0 != t % 2 && t++;
									let n = 0;
									for (; n < this.privBuffers.length && t >= this.privBuffers[n].chunk.buffer.byteLength; )
											t -= this.privBuffers[n++].chunk.buffer.byteLength;
									if (n < this.privBuffers.length) {
											const e = this.privBuffers[n].chunk.buffer.slice(t);
											return this.privReplayOffset += e.byteLength / this.privBytesPerSecond * 1e7,
											n === this.privBuffers.length - 1 && (this.privReplay = !1),
											Promise.resolve({
													buffer: e,
													isEnd: !1,
													timeReceived: this.privBuffers[n].chunk.timeReceived
											})
									}
							}
							return this.privAudioNode.read().then((e=>(e && e.buffer && (this.privBuffers.push(new BufferEntry(e,this.privBufferSerial++,this.privBufferedBytes)),
							this.privBufferedBytes += e.buffer.byteLength),
							e)))
					}
					detach() {
							return this.privBuffers = void 0,
							this.privAudioNode.detach()
					}
					replay() {
							this.privBuffers && 0 !== this.privBuffers.length && (this.privReplay = !0,
							this.privReplayOffset = this.privLastShrinkOffset)
					}
					shrinkBuffers(e) {
							if (void 0 === this.privBuffers || 0 === this.privBuffers.length)
									return;
							this.privLastShrinkOffset = e;
							const t = e - this.privBufferStartOffset;
							let n = Math.round(t * this.privBytesPerSecond * 1e-7)
								, i = 0;
							for (; i < this.privBuffers.length && n >= this.privBuffers[i].chunk.buffer.byteLength; )
									n -= this.privBuffers[i++].chunk.buffer.byteLength;
							this.privBufferStartOffset = Math.round(e - n / this.privBytesPerSecond * 1e7),
							this.privBuffers = this.privBuffers.slice(i)
					}
					findTimeAtOffset(e) {
							if (e < this.privBufferStartOffset || void 0 === this.privBuffers)
									return 0;
							for (const t of this.privBuffers) {
									const n = t.byteOffset / this.privBytesPerSecond * 1e7
										, i = n + t.chunk.buffer.byteLength / this.privBytesPerSecond * 1e7;
									if (e >= n && e <= i)
											return t.chunk.timeReceived
							}
							return 0
					}
			}
			class BufferEntry {
					constructor(e, t, n) {
							this.chunk = e,
							this.serial = t,
							this.byteOffset = n
					}
			}
			class Timeout {
					static load() {
							const e = new Map([[0, ()=>{}
							]])
								, t = new Map
								, n = "data:text/javascript;base64," + btoa('!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=14)}([function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return u})),n.d(t,"c",(function(){return a})),n.d(t,"d",(function(){return d}));const r=new Map,o=new Map,i=e=>{const t=r.get(e);if(void 0===t)throw new Error(\'There is no interval scheduled with the given id "\'.concat(e,\'".\'));clearTimeout(t),r.delete(e)},u=e=>{const t=o.get(e);if(void 0===t)throw new Error(\'There is no timeout scheduled with the given id "\'.concat(e,\'".\'));clearTimeout(t),o.delete(e)},f=(e,t)=>{let n,r;if("performance"in self){const o=performance.now();n=o,r=e-Math.max(0,o-t)}else n=Date.now(),r=e;return{expected:n+r,remainingDelay:r}},c=(e,t,n,r)=>{const o="performance"in self?performance.now():Date.now();o>n?postMessage({id:null,method:"call",params:{timerId:t}}):e.set(t,setTimeout(c,n-o,e,t,n))},a=(e,t,n)=>{const{expected:o,remainingDelay:i}=f(e,n);r.set(t,setTimeout(c,i,r,t,o))},d=(e,t,n)=>{const{expected:r,remainingDelay:i}=f(e,n);o.set(t,setTimeout(c,i,o,t,r))}},function(e,t,n){"use strict";n.r(t);var r=n(2);for(var o in r)"default"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(3);for(var o in i)"default"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(4);for(var o in u)"default"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o);var f=n(5);for(var o in f)"default"!==o&&function(e){n.d(t,e,(function(){return f[e]}))}(o);var c=n(6);for(var o in c)"default"!==o&&function(e){n.d(t,e,(function(){return c[e]}))}(o);var a=n(7);for(var o in a)"default"!==o&&function(e){n.d(t,e,(function(){return a[e]}))}(o);var d=n(8);for(var o in d)"default"!==o&&function(e){n.d(t,e,(function(){return d[e]}))}(o);var s=n(9);for(var o in s)"default"!==o&&function(e){n.d(t,e,(function(){return s[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){"use strict";n.r(t);var r=n(11);for(var o in r)"default"!==o&&function(e){n.d(t,e,(function(){return r[e]}))}(o);var i=n(12);for(var o in i)"default"!==o&&function(e){n.d(t,e,(function(){return i[e]}))}(o);var u=n(13);for(var o in u)"default"!==o&&function(e){n.d(t,e,(function(){return u[e]}))}(o)},function(e,t){},function(e,t){},function(e,t){},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n(1);for(var i in o)"default"!==i&&function(e){n.d(t,e,(function(){return o[e]}))}(i);var u=n(10);for(var i in u)"default"!==i&&function(e){n.d(t,e,(function(){return u[e]}))}(i);addEventListener("message",({data:e})=>{try{if("clear"===e.method){const{id:t,params:{timerId:n}}=e;Object(r.b)(n),postMessage({error:null,id:t})}else{if("set"!==e.method)throw new Error(\'The given method "\'.concat(e.method,\'" is not supported\'));{const{params:{delay:t,now:n,timerId:o}}=e;Object(r.d)(t,o,n)}}}catch(t){postMessage({error:{message:t.message},id:e.id,result:null})}})}]);')
								, i = new Worker(n);
							i.addEventListener("message", (({data: n})=>{
									if (Timeout.isCallNotification(n)) {
											const {params: {timerId: i}} = n
												, r = e.get(i);
											if ("number" == typeof r) {
													const e = t.get(r);
													if (void 0 === e || e !== i)
															throw new Error("The timer is in an undefined state.")
											} else {
													if (void 0 === r)
															throw new Error("The timer is in an undefined state.");
													r(),
													e.delete(i)
											}
									} else {
											if (!Timeout.isClearResponse(n)) {
													const {error: {message: e}} = n;
													throw new Error(e)
											}
											{
													const {id: i} = n
														, r = t.get(i);
													if (void 0 === r)
															throw new Error("The timer is in an undefined state.");
													t.delete(i),
													e.delete(r)
											}
									}
							}
							));
							return {
									clearTimeout: n=>{
											const r = Math.random();
											t.set(r, n),
											e.set(n, r),
											i.postMessage({
													id: r,
													method: "clear",
													params: {
															timerId: n
													}
											})
									}
									,
									setTimeout: (t,n)=>{
											const r = Math.random();
											return e.set(r, t),
											i.postMessage({
													id: null,
													method: "set",
													params: {
															delay: n,
															now: performance.now(),
															timerId: r
													}
											}),
											r
									}
							}
					}
					static loadWorkerTimers() {
							return ()=>(null !== Timeout.workerTimers || (Timeout.workerTimers = Timeout.load()),
							Timeout.workerTimers)
					}
					static isCallNotification(e) {
							return void 0 !== e.method && "call" === e.method
					}
					static isClearResponse(e) {
							return null === e.error && "number" == typeof e.id
					}
			}
			Timeout.workerTimers = null,
			Timeout.clearTimeout = e=>Timeout.timers().clearTimeout(e),
			Timeout.setTimeout = (e,t)=>Timeout.timers().setTimeout(e, t),
			Timeout.timers = Timeout.loadWorkerTimers();
			class SpeechRecognitionEvent extends PlatformEvent {
					constructor(e, t, n, i=as.Info) {
							super(e, i),
							this.privRequestId = t,
							this.privSessionId = n
					}
					get requestId() {
							return this.privRequestId
					}
					get sessionId() {
							return this.privSessionId
					}
			}
			class RecognitionTriggeredEvent extends SpeechRecognitionEvent {
					constructor(e, t, n, i) {
							super("RecognitionTriggeredEvent", e, t),
							this.privAudioSourceId = n,
							this.privAudioNodeId = i
					}
					get audioSourceId() {
							return this.privAudioSourceId
					}
					get audioNodeId() {
							return this.privAudioNodeId
					}
			}
			class ListeningStartedEvent extends SpeechRecognitionEvent {
					constructor(e, t, n, i) {
							super("ListeningStartedEvent", e, t),
							this.privAudioSourceId = n,
							this.privAudioNodeId = i
					}
					get audioSourceId() {
							return this.privAudioSourceId
					}
					get audioNodeId() {
							return this.privAudioNodeId
					}
			}
			class ConnectingToServiceEvent extends SpeechRecognitionEvent {
					constructor(e, t, n) {
							super("ConnectingToServiceEvent", e, n),
							this.privAuthFetchEventid = t
					}
					get authFetchEventid() {
							return this.privAuthFetchEventid
					}
			}
			class RecognitionStartedEvent extends SpeechRecognitionEvent {
					constructor(e, t, n, i, r) {
							super("RecognitionStartedEvent", e, r),
							this.privAudioSourceId = t,
							this.privAudioNodeId = n,
							this.privAuthFetchEventId = i
					}
					get audioSourceId() {
							return this.privAudioSourceId
					}
					get audioNodeId() {
							return this.privAudioNodeId
					}
					get authFetchEventId() {
							return this.privAuthFetchEventId
					}
			}
			var Ms;
			(function(e) {
					e[e.Success = 0] = "Success",
					e[e.AudioSourceError = 1] = "AudioSourceError",
					e[e.AudioSourceTimeout = 2] = "AudioSourceTimeout",
					e[e.AuthTokenFetchError = 3] = "AuthTokenFetchError",
					e[e.AuthTokenFetchTimeout = 4] = "AuthTokenFetchTimeout",
					e[e.UnAuthorized = 5] = "UnAuthorized",
					e[e.ConnectTimeout = 6] = "ConnectTimeout",
					e[e.ConnectError = 7] = "ConnectError",
					e[e.ClientRecognitionActivityTimeout = 8] = "ClientRecognitionActivityTimeout",
					e[e.UnknownError = 9] = "UnknownError"
			}
			)(Ms || (Ms = {}));
			class ServiceTelemetryListener {
					constructor(e, t, n) {
							this.privIsDisposed = !1,
							this.privListeningTriggerMetric = null,
							this.privMicMetric = null,
							this.privConnectionEstablishMetric = null,
							this.privRequestId = e,
							this.privAudioSourceId = t,
							this.privAudioNodeId = n,
							this.privReceivedMessages = {},
							this.privPhraseLatencies = [],
							this.privHypothesisLatencies = []
					}
					phraseReceived(e) {
							e > 0 && this.privPhraseLatencies.push(Date.now() - e)
					}
					hypothesisReceived(e) {
							e > 0 && this.privHypothesisLatencies.push(Date.now() - e)
					}
					onEvent(e) {
							if (!this.privIsDisposed && (e instanceof RecognitionTriggeredEvent && e.requestId === this.privRequestId && (this.privListeningTriggerMetric = {
									End: e.eventTime,
									Name: "ListeningTrigger",
									Start: e.eventTime
							}),
							e instanceof AudioStreamNodeAttachingEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId && (this.privMicStartTime = e.eventTime),
							e instanceof AudioStreamNodeAttachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId && (this.privMicStartTime = e.eventTime),
							e instanceof AudioSourceErrorEvent && e.audioSourceId === this.privAudioSourceId && (this.privMicMetric || (this.privMicMetric = {
									End: e.eventTime,
									Error: e.error,
									Name: "Microphone",
									Start: this.privMicStartTime
							})),
							e instanceof AudioStreamNodeErrorEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId && (this.privMicMetric || (this.privMicMetric = {
									End: e.eventTime,
									Error: e.error,
									Name: "Microphone",
									Start: this.privMicStartTime
							})),
							e instanceof AudioStreamNodeDetachedEvent && e.audioSourceId === this.privAudioSourceId && e.audioNodeId === this.privAudioNodeId && (this.privMicMetric || (this.privMicMetric = {
									End: e.eventTime,
									Name: "Microphone",
									Start: this.privMicStartTime
							})),
							e instanceof ConnectingToServiceEvent && e.requestId === this.privRequestId && (this.privConnectionId = e.sessionId),
							e instanceof ConnectionStartEvent && e.connectionId === this.privConnectionId && (this.privConnectionStartTime = e.eventTime),
							e instanceof ConnectionEstablishedEvent && e.connectionId === this.privConnectionId && (this.privConnectionEstablishMetric || (this.privConnectionEstablishMetric = {
									End: e.eventTime,
									Id: this.privConnectionId,
									Name: "Connection",
									Start: this.privConnectionStartTime
							})),
							e instanceof ConnectionEstablishErrorEvent && e.connectionId === this.privConnectionId && (this.privConnectionEstablishMetric || (this.privConnectionEstablishMetric = {
									End: e.eventTime,
									Error: this.getConnectionError(e.statusCode),
									Id: this.privConnectionId,
									Name: "Connection",
									Start: this.privConnectionStartTime
							})),
							e instanceof ConnectionMessageReceivedEvent && e.connectionId === this.privConnectionId && e.message && e.message.headers && e.message.headers.path)) {
									this.privReceivedMessages[e.message.headers.path] || (this.privReceivedMessages[e.message.headers.path] = new Array);
									const t = 50;
									this.privReceivedMessages[e.message.headers.path].length < t && this.privReceivedMessages[e.message.headers.path].push(e.networkReceivedTime)
							}
					}
					getTelemetry() {
							const e = new Array;
							this.privListeningTriggerMetric && e.push(this.privListeningTriggerMetric),
							this.privMicMetric && e.push(this.privMicMetric),
							this.privConnectionEstablishMetric && e.push(this.privConnectionEstablishMetric),
							this.privPhraseLatencies.length > 0 && e.push({
									PhraseLatencyMs: this.privPhraseLatencies
							}),
							this.privHypothesisLatencies.length > 0 && e.push({
									FirstHypothesisLatencyMs: this.privHypothesisLatencies
							});
							const t = {
									Metrics: e,
									ReceivedMessages: this.privReceivedMessages
							}
								, n = JSON.stringify(t);
							return this.privReceivedMessages = {},
							this.privListeningTriggerMetric = null,
							this.privMicMetric = null,
							this.privConnectionEstablishMetric = null,
							this.privPhraseLatencies = [],
							this.privHypothesisLatencies = [],
							n
					}
					get hasTelemetry() {
							return 0 !== Object.keys(this.privReceivedMessages).length || null !== this.privListeningTriggerMetric || null !== this.privMicMetric || null !== this.privConnectionEstablishMetric || 0 !== this.privPhraseLatencies.length || 0 !== this.privHypothesisLatencies.length
					}
					dispose() {
							this.privIsDisposed = !0
					}
					getConnectionError(e) {
							switch (e) {
							case 400:
							case 1002:
							case 1003:
							case 1005:
							case 1007:
							case 1008:
							case 1009:
									return "BadRequest";
							case 401:
									return "Unauthorized";
							case 403:
									return "Forbidden";
							case 503:
							case 1001:
									return "ServerUnavailable";
							case 500:
							case 1011:
									return "ServerError";
							case 408:
							case 504:
									return "Timeout";
							default:
									return "statuscode:" + e.toString()
							}
					}
			}
			var RequestSession_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			class RequestSession {
					constructor(e) {
							this.privIsDisposed = !1,
							this.privDetachables = new Array,
							this.privIsAudioNodeDetached = !1,
							this.privIsRecognizing = !1,
							this.privIsSpeechEnded = !1,
							this.privTurnStartAudioOffset = 0,
							this.privLastRecoOffset = 0,
							this.privHypothesisReceived = !1,
							this.privBytesSent = 0,
							this.privRecogNumber = 0,
							this.privInTurn = !1,
							this.privConnectionAttempts = 0,
							this.privAudioSourceId = e,
							this.privRequestId = createNoDashGuid(),
							this.privAudioNodeId = createNoDashGuid(),
							this.privTurnDeferral = new Deferred,
							this.privTurnDeferral.resolve()
					}
					get sessionId() {
							return this.privSessionId
					}
					get requestId() {
							return this.privRequestId
					}
					get audioNodeId() {
							return this.privAudioNodeId
					}
					get turnCompletionPromise() {
							return this.privTurnDeferral.promise
					}
					get isSpeechEnded() {
							return this.privIsSpeechEnded
					}
					get isRecognizing() {
							return this.privIsRecognizing
					}
					get currentTurnAudioOffset() {
							return this.privTurnStartAudioOffset
					}
					get recogNumber() {
							return this.privRecogNumber
					}
					get numConnectionAttempts() {
							return this.privConnectionAttempts
					}
					get bytesSent() {
							return this.privBytesSent
					}
					listenForServiceTelemetry(e) {
							this.privServiceTelemetryListener && this.privDetachables.push(e.attachListener(this.privServiceTelemetryListener))
					}
					startNewRecognition() {
							this.privIsSpeechEnded = !1,
							this.privIsRecognizing = !0,
							this.privTurnStartAudioOffset = 0,
							this.privLastRecoOffset = 0,
							this.privRecogNumber++,
							this.privServiceTelemetryListener = new ServiceTelemetryListener(this.privRequestId,this.privAudioSourceId,this.privAudioNodeId),
							this.onEvent(new RecognitionTriggeredEvent(this.requestId,this.privSessionId,this.privAudioSourceId,this.privAudioNodeId))
					}
					onAudioSourceAttachCompleted(e, t) {
							return RequestSession_awaiter(this, void 0, void 0, (function*() {
									this.privAudioNode = e,
									this.privIsAudioNodeDetached = !1,
									t ? yield this.onComplete() : this.onEvent(new ListeningStartedEvent(this.privRequestId,this.privSessionId,this.privAudioSourceId,this.privAudioNodeId))
							}
							))
					}
					onPreConnectionStart(e, t) {
							this.privAuthFetchEventId = e,
							this.privSessionId = t,
							this.onEvent(new ConnectingToServiceEvent(this.privRequestId,this.privAuthFetchEventId,this.privSessionId))
					}
					onAuthCompleted(e) {
							return RequestSession_awaiter(this, void 0, void 0, (function*() {
									e && (yield this.onComplete())
							}
							))
					}
					onConnectionEstablishCompleted(e, t) {
							return RequestSession_awaiter(this, void 0, void 0, (function*() {
									if (200 === e)
											return this.onEvent(new RecognitionStartedEvent(this.requestId,this.privAudioSourceId,this.privAudioNodeId,this.privAuthFetchEventId,this.privSessionId)),
											this.privAudioNode && this.privAudioNode.replay(),
											this.privTurnStartAudioOffset = this.privLastRecoOffset,
											void (this.privBytesSent = 0);
									403 === e && (yield this.onComplete())
							}
							))
					}
					onServiceTurnEndResponse(e) {
							return RequestSession_awaiter(this, void 0, void 0, (function*() {
									this.privTurnDeferral.resolve(),
									!e || this.isSpeechEnded ? (yield this.onComplete(),
									this.privInTurn = !1) : (this.privTurnStartAudioOffset = this.privLastRecoOffset,
									this.privAudioNode.replay())
							}
							))
					}
					onSpeechContext() {
							this.privRequestId = createNoDashGuid()
					}
					onServiceTurnStartResponse() {
							this.privTurnDeferral && this.privInTurn && (this.privTurnDeferral.reject("Another turn started before current completed."),
							this.privTurnDeferral.promise.then().catch((()=>{}
							))),
							this.privInTurn = !0,
							this.privTurnDeferral = new Deferred
					}
					onHypothesis(e) {
							this.privHypothesisReceived || (this.privHypothesisReceived = !0,
							this.privServiceTelemetryListener.hypothesisReceived(this.privAudioNode.findTimeAtOffset(e)))
					}
					onPhraseRecognized(e) {
							this.privServiceTelemetryListener.phraseReceived(this.privAudioNode.findTimeAtOffset(e)),
							this.onServiceRecognized(e)
					}
					onServiceRecognized(e) {
							this.privLastRecoOffset = e,
							this.privHypothesisReceived = !1,
							this.privAudioNode.shrinkBuffers(e),
							this.privConnectionAttempts = 0
					}
					onAudioSent(e) {
							this.privBytesSent += e
					}
					onRetryConnection() {
							this.privConnectionAttempts++
					}
					dispose() {
							return RequestSession_awaiter(this, void 0, void 0, (function*() {
									if (!this.privIsDisposed) {
											this.privIsDisposed = !0;
											for (const e of this.privDetachables)
													yield e.detach();
											this.privServiceTelemetryListener && this.privServiceTelemetryListener.dispose(),
											this.privIsRecognizing = !1
									}
							}
							))
					}
					getTelemetry() {
							return this.privServiceTelemetryListener.hasTelemetry ? this.privServiceTelemetryListener.getTelemetry() : null
					}
					onStopRecognizing() {
							return RequestSession_awaiter(this, void 0, void 0, (function*() {
									yield this.onComplete()
							}
							))
					}
					onSpeechEnded() {
							this.privIsSpeechEnded = !0
					}
					onEvent(e) {
							this.privServiceTelemetryListener && this.privServiceTelemetryListener.onEvent(e),
							Events.instance.onEvent(e)
					}
					onComplete() {
							return RequestSession_awaiter(this, void 0, void 0, (function*() {
									this.privIsRecognizing && (this.privIsRecognizing = !1,
									yield this.detachAudioNode())
							}
							))
					}
					detachAudioNode() {
							return RequestSession_awaiter(this, void 0, void 0, (function*() {
									this.privIsAudioNodeDetached || (this.privIsAudioNodeDetached = !0,
									this.privAudioNode && (yield this.privAudioNode.detach()))
							}
							))
					}
			}
			class DynamicGrammarBuilder {
					addPhrase(e) {
							this.privPhrases || (this.privPhrases = []),
							e instanceof Array ? this.privPhrases = this.privPhrases.concat(e) : this.privPhrases.push(e)
					}
					clearPhrases() {
							this.privPhrases = void 0
					}
					addReferenceGrammar(e) {
							this.privGrammars || (this.privGrammars = []),
							e instanceof Array ? this.privGrammars = this.privGrammars.concat(e) : this.privGrammars.push(e)
					}
					clearGrammars() {
							this.privGrammars = void 0
					}
					generateGrammarObject() {
							if (void 0 === this.privGrammars && void 0 === this.privPhrases)
									return;
							const e = {};
							if (e.ReferenceGrammars = this.privGrammars,
							void 0 !== this.privPhrases && 0 !== this.privPhrases.length) {
									const t = [];
									this.privPhrases.forEach((e=>{
											t.push({
													Text: e
											})
									}
									)),
									e.Groups = [{
											Type: "Generic",
											Items: t
									}]
							}
							return e
					}
			}
			class SpeechContext {
					constructor(e) {
							this.privContext = {},
							this.privDynamicGrammar = e
					}
					setSection(e, t) {
							this.privContext[e] = t
					}
					setPronunciationAssessmentParams(e) {
							void 0 === this.privContext.phraseDetection && (this.privContext.phraseDetection = {
									enrichment: {
											pronunciationAssessment: {}
									}
							}),
							this.privContext.phraseDetection.enrichment.pronunciationAssessment = JSON.parse(e),
							this.setWordLevelTimings(),
							this.privContext.phraseOutput.detailed.options.push("PronunciationAssessment"),
							-1 === this.privContext.phraseOutput.detailed.options.indexOf("SNR") && this.privContext.phraseOutput.detailed.options.push("SNR")
					}
					setWordLevelTimings() {
							void 0 === this.privContext.phraseOutput && (this.privContext.phraseOutput = {
									detailed: {
											options: []
									},
									format: {}
							}),
							void 0 === this.privContext.phraseOutput.detailed && (this.privContext.phraseOutput.detailed = {
									options: []
							}),
							this.privContext.phraseOutput.format = "Detailed",
							-1 === this.privContext.phraseOutput.detailed.options.indexOf("WordTimings") && this.privContext.phraseOutput.detailed.options.push("WordTimings")
					}
					toJSON() {
							const e = this.privDynamicGrammar.generateGrammarObject();
							this.setSection("dgi", e);
							return JSON.stringify(this.privContext)
					}
			}
			class SpeechDetected {
					constructor(e) {
							this.privSpeechStartDetected = JSON.parse(e)
					}
					static fromJSON(e) {
							return new SpeechDetected(e)
					}
					get Offset() {
							return this.privSpeechStartDetected.Offset
					}
			}
			var Ls, ks, ServiceRecognizerBase_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			class ServiceRecognizerBase {
					constructor(e, t, n, i, r) {
							if (this.privConnectionConfigurationPromise = void 0,
							this.privConnectionPromise = void 0,
							this.privSetTimeout = setTimeout,
							this.privIsLiveAudio = !1,
							this.recognizeOverride = void 0,
							this.disconnectOverride = void 0,
							this.receiveMessageOverride = void 0,
							this.sendPrePayloadJSONOverride = void 0,
							this.postConnectImplOverride = void 0,
							this.configConnectionOverride = void 0,
							this.handleSpeechPhraseMessage = void 0,
							this.handleSpeechHypothesisMessage = void 0,
							!e)
									throw new ArgumentNullError("authentication");
							if (!t)
									throw new ArgumentNullError("connectionFactory");
							if (!n)
									throw new ArgumentNullError("audioSource");
							if (!i)
									throw new ArgumentNullError("recognizerConfig");
							this.privMustReportEndOfStream = !1,
							this.privAuthentication = e,
							this.privConnectionFactory = t,
							this.privAudioSource = n,
							this.privRecognizerConfig = i,
							this.privIsDisposed = !1,
							this.privRecognizer = r,
							this.privRequestSession = new RequestSession(this.privAudioSource.id()),
							this.privConnectionEvents = new EventSource_EventSource,
							this.privServiceEvents = new EventSource_EventSource,
							this.privDynamicGrammar = new DynamicGrammarBuilder,
							this.privSpeechContext = new SpeechContext(this.privDynamicGrammar),
							this.privAgentConfig = new AgentConfig,
							"undefined" != typeof Blob && "undefined" != typeof Worker && (this.privSetTimeout = Timeout.setTimeout),
							this.connectionEvents.attach((e=>{
									if ("ConnectionClosedEvent" === e.name) {
											const t = e;
											(1003 === t.statusCode || 1007 === t.statusCode || 1002 === t.statusCode || 4e3 === t.statusCode || this.privRequestSession.numConnectionAttempts > this.privRecognizerConfig.maxRetryCount) && this.cancelRecognitionLocal(us.Error, 1007 === t.statusCode ? Jo.BadRequestParameters : Jo.ConnectionFailure, `${t.reason} websocket error code: ${t.statusCode}`)
									}
							}
							))
					}
					get audioSource() {
							return this.privAudioSource
					}
					get speechContext() {
							return this.privSpeechContext
					}
					get dynamicGrammar() {
							return this.privDynamicGrammar
					}
					get agentConfig() {
							return this.privAgentConfig
					}
					set conversationTranslatorToken(e) {
							this.privRecognizerConfig.parameters.setProperty(es.ConversationTranslator_Token, e)
					}
					set authentication(e) {
							this.privAuthentication = this.authentication
					}
					isDisposed() {
							return this.privIsDisposed
					}
					dispose(e) {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									if (this.privIsDisposed = !0,
									void 0 !== this.privConnectionConfigurationPromise)
											try {
													const t = yield this.privConnectionConfigurationPromise;
													yield t.dispose(e)
											} catch (e) {
													return
											}
							}
							))
					}
					get connectionEvents() {
							return this.privConnectionEvents
					}
					get serviceEvents() {
							return this.privServiceEvents
					}
					get recognitionMode() {
							return this.privRecognizerConfig.recognitionMode
					}
					recognize(e, t, n) {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									if (void 0 !== this.recognizeOverride)
											return void (yield this.recognizeOverride(e, t, n));
									this.privConnectionConfigurationPromise = void 0,
									this.privRecognizerConfig.recognitionMode = e,
									this.privSuccessCallback = t,
									this.privErrorCallback = n,
									this.privRequestSession.startNewRecognition(),
									this.privRequestSession.listenForServiceTelemetry(this.privAudioSource.events);
									const i = this.connectImpl();
									let r;
									try {
											const e = yield this.audioSource.attach(this.privRequestSession.audioNodeId)
												, t = yield this.audioSource.format
												, n = yield this.audioSource.deviceInfo;
											this.privIsLiveAudio = n.type && n.type === os.Microphones,
											r = new ReplayableAudioNode(e,t.avgBytesPerSec),
											yield this.privRequestSession.onAudioSourceAttachCompleted(r, !1),
											this.privRecognizerConfig.SpeechServiceConfig.Context.audio = {
													source: n
											}
									} catch (e) {
											throw yield this.privRequestSession.onStopRecognizing(),
											e
									}
									try {
											yield i
									} catch (e) {
											return void (yield this.cancelRecognitionLocal(us.Error, Jo.ConnectionFailure, e))
									}
									const o = new SessionEventArgs(this.privRequestSession.sessionId);
									this.privRecognizer.sessionStarted && this.privRecognizer.sessionStarted(this.privRecognizer, o),
									this.receiveMessage();
									this.sendAudio(r).catch((e=>ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
											yield this.cancelRecognitionLocal(us.Error, Jo.RuntimeError, e)
									}
									))))
							}
							))
					}
					stopRecognizing() {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									if (this.privRequestSession.isRecognizing)
											try {
													yield this.audioSource.turnOff(),
													yield this.sendFinalAudio(),
													yield this.privRequestSession.onStopRecognizing(),
													yield this.privRequestSession.turnCompletionPromise
											} finally {
													yield this.privRequestSession.dispose()
											}
							}
							))
					}
					connect() {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									return yield this.connectImpl(),
									Promise.resolve()
							}
							))
					}
					connectAsync(e, t) {
							this.connectImpl().then((()=>{
									try {
											e && e()
									} catch (e) {
											t && t(e)
									}
							}
							), (e=>{
									try {
											t && t(e)
									} catch (e) {}
							}
							))
					}
					disconnect() {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									if (yield this.cancelRecognitionLocal(us.Error, Jo.NoError, "Disconnecting"),
									void 0 !== this.disconnectOverride && (yield this.disconnectOverride()),
									void 0 !== this.privConnectionPromise)
											try {
													yield(yield this.privConnectionPromise).dispose()
											} catch (e) {}
									this.privConnectionPromise = void 0
							}
							))
					}
					sendMessage(e) {}
					sendNetworkMessage(e, t) {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									const n = "string" == typeof t ? ds.Text : ds.Binary
										, i = "string" == typeof t ? "application/json" : "";
									return (yield this.fetchConnection()).send(new SpeechConnectionMessage(n,e,this.privRequestSession.requestId,i,t))
							}
							))
					}
					set activityTemplate(e) {
							this.privActivityTemplate = e
					}
					get activityTemplate() {
							return this.privActivityTemplate
					}
					sendTelemetryData() {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									const e = this.privRequestSession.getTelemetry();
									if (!0 !== ServiceRecognizerBase.telemetryDataEnabled || this.privIsDisposed || null === e)
											return;
									if (ServiceRecognizerBase.telemetryData)
											try {
													ServiceRecognizerBase.telemetryData(e)
											} catch (e) {}
									const t = yield this.fetchConnection();
									yield t.send(new SpeechConnectionMessage(ds.Text,"telemetry",this.privRequestSession.requestId,"application/json",e))
							}
							))
					}
					cancelRecognitionLocal(e, t, n) {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									this.privRequestSession.isRecognizing && (yield this.privRequestSession.onStopRecognizing(),
									this.cancelRecognition(this.privRequestSession.sessionId, this.privRequestSession.requestId, e, t, n))
							}
							))
					}
					receiveMessage() {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									try {
											if (this.privIsDisposed)
													return;
											let e = yield this.fetchConnection();
											const t = yield e.read();
											if (void 0 !== this.receiveMessageOverride)
													return this.receiveMessageOverride();
											if (!t)
													return this.privRequestSession.isRecognizing ? this.receiveMessage() : void 0;
											this.privServiceHasSentMessage = !0;
											const n = SpeechConnectionMessage.fromConnectionMessage(t);
											if (n.requestId.toLowerCase() === this.privRequestSession.requestId.toLowerCase())
													switch (n.path.toLowerCase()) {
													case "turn.start":
															this.privMustReportEndOfStream = !0,
															this.privRequestSession.onServiceTurnStartResponse();
															break;
													case "speech.startdetected":
															const t = SpeechDetected.fromJSON(n.textBody)
																, i = new RecognitionEventArgs(t.Offset,this.privRequestSession.sessionId);
															this.privRecognizer.speechStartDetected && this.privRecognizer.speechStartDetected(this.privRecognizer, i);
															break;
													case "speech.enddetected":
															let r;
															r = n.textBody.length > 0 ? n.textBody : "{ Offset: 0 }";
															const o = SpeechDetected.fromJSON(r);
															this.privRecognizerConfig.isContinuousRecognition && this.privRequestSession.onServiceRecognized(o.Offset + this.privRequestSession.currentTurnAudioOffset);
															const s = new RecognitionEventArgs(o.Offset + this.privRequestSession.currentTurnAudioOffset,this.privRequestSession.sessionId);
															this.privRecognizer.speechEndDetected && this.privRecognizer.speechEndDetected(this.privRecognizer, s);
															break;
													case "turn.end":
															yield this.sendTelemetryData(),
															this.privRequestSession.isSpeechEnded && this.privMustReportEndOfStream && (this.privMustReportEndOfStream = !1,
															yield this.cancelRecognitionLocal(us.EndOfStream, Jo.NoError, void 0));
															const a = new SessionEventArgs(this.privRequestSession.sessionId);
															if (yield this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition),
															!this.privRecognizerConfig.isContinuousRecognition || this.privRequestSession.isSpeechEnded || !this.privRequestSession.isRecognizing)
																	return void (this.privRecognizer.sessionStopped && this.privRecognizer.sessionStopped(this.privRecognizer, a));
															e = yield this.fetchConnection(),
															yield this.sendPrePayloadJSON(e);
															break;
													default:
															(yield this.processTypeSpecificMessages(n)) || this.privServiceEvents && this.serviceEvents.onEvent(new ServiceEvent(n.path.toLowerCase(),n.textBody))
													}
											return this.receiveMessage()
									} catch (e) {
											return null
									}
							}
							))
					}
					sendSpeechContext(e, t) {
							const n = this.speechContext.toJSON();
							if (t && this.privRequestSession.onSpeechContext(),
							n)
									return e.send(new SpeechConnectionMessage(ds.Text,"speech.context",this.privRequestSession.requestId,"application/json",n))
					}
					sendPrePayloadJSON(e, t=!0) {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									if (void 0 !== this.sendPrePayloadJSONOverride)
											return this.sendPrePayloadJSONOverride(e);
									yield this.sendSpeechContext(e, t),
									yield this.sendWaveHeader(e)
							}
							))
					}
					sendWaveHeader(e) {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									const t = yield this.audioSource.format;
									return e.send(new SpeechConnectionMessage(ds.Binary,"audio",this.privRequestSession.requestId,"audio/x-wav",t.header))
							}
							))
					}
					connectImpl() {
							return void 0 !== this.privConnectionPromise ? this.privConnectionPromise.then((e=>e.state() === ps.Disconnected ? (this.privConnectionId = null,
							this.privConnectionPromise = void 0,
							this.privServiceHasSentMessage = !1,
							this.connectImpl()) : this.privConnectionPromise), (()=>(this.privConnectionId = null,
							this.privConnectionPromise = void 0,
							this.privServiceHasSentMessage = !1,
							this.connectImpl()))) : (this.privConnectionPromise = this.retryableConnect(),
							this.privConnectionPromise.catch((()=>{}
							)),
							void 0 !== this.postConnectImplOverride ? this.postConnectImplOverride(this.privConnectionPromise) : this.privConnectionPromise)
					}
					sendSpeechServiceConfig(e, t, n) {
							if (t.onSpeechContext(),
							!0 !== ServiceRecognizerBase.telemetryDataEnabled) {
									const e = {
											context: {
													system: JSON.parse(n).context.system
											}
									};
									n = JSON.stringify(e)
							}
							if ("true" === this.privRecognizerConfig.parameters.getProperty("f0f5debc-f8c9-4892-ac4b-90a7ab359fd2", "false").toLowerCase()) {
									const e = JSON.parse(n);
									e.context.DisableReferenceChannel = "True",
									e.context.MicSpec = "1_0_0",
									n = JSON.stringify(e)
							}
							if (n)
									return e.send(new SpeechConnectionMessage(ds.Text,"speech.config",t.requestId,"application/json",n))
					}
					fetchConnection() {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									return void 0 !== this.privConnectionConfigurationPromise ? this.privConnectionConfigurationPromise.then((e=>e.state() === ps.Disconnected ? (this.privConnectionId = null,
									this.privConnectionConfigurationPromise = void 0,
									this.privServiceHasSentMessage = !1,
									this.fetchConnection()) : this.privConnectionConfigurationPromise), (()=>(this.privConnectionId = null,
									this.privConnectionConfigurationPromise = void 0,
									this.privServiceHasSentMessage = !1,
									this.fetchConnection()))) : (this.privConnectionConfigurationPromise = this.configureConnection(),
									yield this.privConnectionConfigurationPromise)
							}
							))
					}
					sendAudio(e) {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									const t = yield this.audioSource.format;
									let n = Date.now();
									const i = this.privRecognizerConfig.parameters.getProperty("SPEECH-TransmitLengthBeforThrottleMs", "5000")
										, r = t.avgBytesPerSec / 1e3 * parseInt(i, 10)
										, o = this.privRequestSession.recogNumber
										, readAndUploadCycle = ()=>ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
											if (!this.privIsDisposed && !this.privRequestSession.isSpeechEnded && this.privRequestSession.isRecognizing && this.privRequestSession.recogNumber === o) {
													const i = yield this.fetchConnection()
														, s = yield e.read();
													if (this.privRequestSession.isSpeechEnded)
															return;
													let a, l;
													if (!s || s.isEnd ? (a = null,
													l = 0) : (a = s.buffer,
													this.privRequestSession.onAudioSent(a.byteLength),
													l = r >= this.privRequestSession.bytesSent ? 0 : Math.max(0, n - Date.now())),
													0 !== l && (yield this.delay(l)),
													null !== a && (n = Date.now() + 1e3 * a.byteLength / (2 * t.avgBytesPerSec)),
													!this.privIsDisposed && !this.privRequestSession.isSpeechEnded && this.privRequestSession.isRecognizing && this.privRequestSession.recogNumber === o) {
															if (i.send(new SpeechConnectionMessage(ds.Binary,"audio",this.privRequestSession.requestId,null,a)).catch((()=>{
																	this.privRequestSession.onServiceTurnEndResponse(this.privRecognizerConfig.isContinuousRecognition).catch((()=>{}
																	))
															}
															)),
															!(null == s ? void 0 : s.isEnd))
																	return readAndUploadCycle();
															this.privIsLiveAudio || this.privRequestSession.onSpeechEnded()
													}
											}
									}
									));
									return readAndUploadCycle()
							}
							))
					}
					retryableConnect() {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									let e = !1;
									this.privAuthFetchEventId = createNoDashGuid();
									const t = this.privRequestSession.sessionId;
									this.privConnectionId = void 0 !== t ? t : createNoDashGuid(),
									this.privRequestSession.onPreConnectionStart(this.privAuthFetchEventId, this.privConnectionId);
									let n = 0
										, i = "";
									for (; this.privRequestSession.numConnectionAttempts <= this.privRecognizerConfig.maxRetryCount; ) {
											const t = e ? this.privAuthentication.fetchOnExpiry(this.privAuthFetchEventId) : this.privAuthentication.fetch(this.privAuthFetchEventId)
												, r = yield t;
											yield this.privRequestSession.onAuthCompleted(!1);
											const o = this.privConnectionFactory.create(this.privRecognizerConfig, r, this.privConnectionId);
											this.privRequestSession.listenForServiceTelemetry(o.events),
											o.events.attach((e=>{
													this.connectionEvents.onEvent(e)
											}
											));
											const s = yield o.open();
											if (200 === s.statusCode)
													return yield this.privRequestSession.onConnectionEstablishCompleted(s.statusCode),
													Promise.resolve(o);
											1006 === s.statusCode && (e = !0),
											n = s.statusCode,
											i = s.reason,
											this.privRequestSession.onRetryConnection()
									}
									return yield this.privRequestSession.onConnectionEstablishCompleted(n, i),
									Promise.reject(`Unable to contact server. StatusCode: ${n}, ${this.privRecognizerConfig.parameters.getProperty(es.SpeechServiceConnection_Endpoint)} Reason: ${i}`)
							}
							))
					}
					delay(e) {
							return new Promise((t=>this.privSetTimeout(t, e)))
					}
					writeBufferToConsole(e) {
							let t = "Buffer Size: ";
							if (null === e)
									t += "null";
							else {
									const n = new Uint8Array(e);
									t += `${e.byteLength}\r\n`;
									for (let i = 0; i < e.byteLength; i++)
											t += n[i].toString(16).padStart(2, "0") + " ",
											(i + 1) % 16 == 0 && (console.info(t),
											t = "")
							}
							console.info(t)
					}
					sendFinalAudio() {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									const e = yield this.fetchConnection();
									yield e.send(new SpeechConnectionMessage(ds.Binary,"audio",this.privRequestSession.requestId,null,null))
							}
							))
					}
					configureConnection() {
							return ServiceRecognizerBase_awaiter(this, void 0, void 0, (function*() {
									const e = yield this.connectImpl();
									return void 0 !== this.configConnectionOverride ? this.configConnectionOverride(e) : (yield this.sendSpeechServiceConfig(e, this.privRequestSession, this.privRecognizerConfig.SpeechServiceConfig.serialize()),
									yield this.sendPrePayloadJSON(e, !1),
									e)
							}
							))
					}
			}
			ServiceRecognizerBase.telemetryDataEnabled = !0;
			class SpeechHypothesis {
					constructor(e) {
							this.privSpeechHypothesis = JSON.parse(e)
					}
					static fromJSON(e) {
							return new SpeechHypothesis(e)
					}
					get Text() {
							return this.privSpeechHypothesis.Text
					}
					get Offset() {
							return this.privSpeechHypothesis.Offset
					}
					get Duration() {
							return this.privSpeechHypothesis.Duration
					}
					get Language() {
							return void 0 === this.privSpeechHypothesis.PrimaryLanguage ? void 0 : this.privSpeechHypothesis.PrimaryLanguage.Language
					}
					get LanguageDetectionConfidence() {
							return void 0 === this.privSpeechHypothesis.PrimaryLanguage ? void 0 : this.privSpeechHypothesis.PrimaryLanguage.Confidence
					}
					get SpeakerId() {
							return this.privSpeechHypothesis.SpeakerId
					}
			}
			(function(e) {
					e[e.Success = 0] = "Success",
					e[e.SynthesisEnd = 1] = "SynthesisEnd",
					e[e.Error = 2] = "Error"
			}
			)(Ls || (Ls = {})),
			function(e) {
					e[e.Success = 0] = "Success",
					e[e.NoMatch = 1] = "NoMatch",
					e[e.InitialSilenceTimeout = 2] = "InitialSilenceTimeout",
					e[e.BabbleTimeout = 3] = "BabbleTimeout",
					e[e.Error = 4] = "Error",
					e[e.EndOfDictation = 5] = "EndOfDictation",
					e[e.TooManyRequests = 6] = "TooManyRequests",
					e[e.BadRequest = 7] = "BadRequest",
					e[e.Forbidden = 8] = "Forbidden"
			}(ks || (ks = {}));
			class SimpleSpeechPhrase {
					constructor(e) {
							this.privSimpleSpeechPhrase = JSON.parse(e),
							this.privSimpleSpeechPhrase.RecognitionStatus = ks[this.privSimpleSpeechPhrase.RecognitionStatus]
					}
					static fromJSON(e) {
							return new SimpleSpeechPhrase(e)
					}
					get RecognitionStatus() {
							return this.privSimpleSpeechPhrase.RecognitionStatus
					}
					get DisplayText() {
							return this.privSimpleSpeechPhrase.DisplayText
					}
					get Offset() {
							return this.privSimpleSpeechPhrase.Offset
					}
					get Duration() {
							return this.privSimpleSpeechPhrase.Duration
					}
					get Language() {
							return void 0 === this.privSimpleSpeechPhrase.PrimaryLanguage ? void 0 : this.privSimpleSpeechPhrase.PrimaryLanguage.Language
					}
					get LanguageDetectionConfidence() {
							return void 0 === this.privSimpleSpeechPhrase.PrimaryLanguage ? void 0 : this.privSimpleSpeechPhrase.PrimaryLanguage.Confidence
					}
					get SpeakerId() {
							return this.privSimpleSpeechPhrase.SpeakerId
					}
			}
			class EnumTranslation {
					static implTranslateRecognitionResult(e) {
							let t = Xo.Canceled;
							switch (e) {
							case ks.Success:
									t = Xo.RecognizedSpeech;
									break;
							case ks.NoMatch:
							case ks.InitialSilenceTimeout:
							case ks.BabbleTimeout:
							case ks.EndOfDictation:
									t = Xo.NoMatch;
									break;
							case ks.Error:
							case ks.BadRequest:
							case ks.Forbidden:
							default:
									t = Xo.Canceled
							}
							return t
					}
					static implTranslateCancelResult(e) {
							let t = us.EndOfStream;
							switch (e) {
							case ks.Success:
							case ks.EndOfDictation:
							case ks.NoMatch:
									t = us.EndOfStream;
									break;
							case ks.InitialSilenceTimeout:
							case ks.BabbleTimeout:
							case ks.Error:
							case ks.BadRequest:
							case ks.Forbidden:
							default:
									t = us.Error
							}
							return t
					}
					static implTranslateCancelErrorCode(e) {
							let t = Jo.NoError;
							switch (e) {
							case ks.Error:
									t = Jo.ServiceError;
									break;
							case ks.TooManyRequests:
									t = Jo.TooManyRequests;
									break;
							case ks.BadRequest:
									t = Jo.BadRequestParameters;
									break;
							case ks.Forbidden:
									t = Jo.Forbidden;
									break;
							default:
									t = Jo.NoError
							}
							return t
					}
					static implTranslateErrorDetails(e) {
							let t = "The speech service encountered an internal error and could not continue.";
							switch (e) {
							case Jo.Forbidden:
									t = "The recognizer is using a free subscription that ran out of quota.";
									break;
							case Jo.BadRequestParameters:
									t = "Invalid parameter or unsupported audio format in the request.";
									break;
							case Jo.TooManyRequests:
									t = "The number of parallel requests exceeded the number of allowed concurrent transcriptions."
							}
							return t
					}
			}
			class DetailedSpeechPhrase {
					constructor(e) {
							this.privDetailedSpeechPhrase = JSON.parse(e),
							this.privDetailedSpeechPhrase.RecognitionStatus = ks[this.privDetailedSpeechPhrase.RecognitionStatus]
					}
					static fromJSON(e) {
							return new DetailedSpeechPhrase(e)
					}
					getJsonWithCorrectedOffsets(e) {
							if (this.privDetailedSpeechPhrase.NBest) {
									let t;
									for (const e of this.privDetailedSpeechPhrase.NBest)
											if (e.Words && e.Words[0]) {
													t = e.Words[0].Offset;
													break
											}
									if (t && t < e) {
											const n = e - t;
											for (const e of this.privDetailedSpeechPhrase.NBest)
													if (e.Words)
															for (const t of e.Words)
																	t.Offset += n
									}
							}
							return JSON.stringify(this.privDetailedSpeechPhrase)
					}
					get RecognitionStatus() {
							return this.privDetailedSpeechPhrase.RecognitionStatus
					}
					get NBest() {
							return this.privDetailedSpeechPhrase.NBest
					}
					get Duration() {
							return this.privDetailedSpeechPhrase.Duration
					}
					get Offset() {
							return this.privDetailedSpeechPhrase.Offset
					}
					get Language() {
							return void 0 === this.privDetailedSpeechPhrase.PrimaryLanguage ? void 0 : this.privDetailedSpeechPhrase.PrimaryLanguage.Language
					}
					get LanguageDetectionConfidence() {
							return void 0 === this.privDetailedSpeechPhrase.PrimaryLanguage ? void 0 : this.privDetailedSpeechPhrase.PrimaryLanguage.Confidence
					}
					get Text() {
							return this.privDetailedSpeechPhrase.NBest && this.privDetailedSpeechPhrase.NBest[0] ? this.privDetailedSpeechPhrase.NBest[0].Display || this.privDetailedSpeechPhrase.NBest[0].DisplayText : this.privDetailedSpeechPhrase.DisplayText
					}
					get SpeakerId() {
							return this.privDetailedSpeechPhrase.SpeakerId
					}
			}
			var SpeechServiceRecognizer_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			class SpeechServiceRecognizer extends ServiceRecognizerBase {
					constructor(e, t, n, i, r) {
							super(e, t, n, i, r),
							this.privSpeechRecognizer = r;
							const o = {}
								, s = i.parameters.getProperty(es.Speech_SegmentationSilenceTimeoutMs, void 0);
							if (void 0 !== s) {
									const e = parseInt(s, 10);
									o.mode = "INTERACTIVE",
									o.INTERACTIVE = {
											segmentation: {
													mode: "Custom",
													segmentationSilenceTimeoutMs: e
											}
									}
							}
							if (void 0 !== i.autoDetectSourceLanguages) {
									const e = i.autoDetectSourceLanguages.split(",");
									let t;
									t = "Continuous" === i.languageIdMode ? "DetectContinuous" : "DetectAtAudioStart",
									this.privSpeechContext.setSection("languageId", {
											Priority: "PrioritizeLatency",
											languages: e,
											mode: t,
											onSuccess: {
													action: "Recognize"
											},
											onUnknown: {
													action: "None"
											}
									}),
									this.privSpeechContext.setSection("phraseOutput", {
											interimResults: {
													resultType: "Auto"
											},
											phraseResults: {
													resultType: "Always"
											}
									});
									const n = i.sourceLanguageModels;
									void 0 !== n && (o.customModels = n,
									o.onInterim = {
											action: "None"
									},
									o.onSuccess = {
											action: "None"
									})
							}
							(e=>{
									for (const t in e)
											return !1;
									return !0
							}
							)(o) || this.privSpeechContext.setSection("phraseDetection", o)
					}
					processTypeSpecificMessages(e) {
							return SpeechServiceRecognizer_awaiter(this, void 0, void 0, (function*() {
									let t;
									const n = new PropertyCollection;
									n.setProperty(es.SpeechServiceResponse_JsonResult, e.textBody);
									let i = !1;
									switch (e.path.toLowerCase()) {
									case "speech.hypothesis":
									case "speech.fragment":
											const r = SpeechHypothesis.fromJSON(e.textBody)
												, o = r.Offset + this.privRequestSession.currentTurnAudioOffset;
											t = new SpeechRecognitionResult(this.privRequestSession.requestId,Xo.RecognizingSpeech,r.Text,r.Duration,o,r.Language,r.LanguageDetectionConfidence,void 0,void 0,e.textBody,n),
											this.privRequestSession.onHypothesis(o);
											const s = new SpeechRecognitionEventArgs(t,r.Duration,this.privRequestSession.sessionId);
											if (this.privSpeechRecognizer.recognizing)
													try {
															this.privSpeechRecognizer.recognizing(this.privSpeechRecognizer, s)
													} catch (e) {}
											i = !0;
											break;
									case "speech.phrase":
											const a = SimpleSpeechPhrase.fromJSON(e.textBody)
												, l = EnumTranslation.implTranslateRecognitionResult(a.RecognitionStatus);
											if (this.privRequestSession.onPhraseRecognized(this.privRequestSession.currentTurnAudioOffset + a.Offset + a.Duration),
											Xo.Canceled === l) {
													const e = EnumTranslation.implTranslateCancelResult(a.RecognitionStatus)
														, t = EnumTranslation.implTranslateCancelErrorCode(a.RecognitionStatus);
													yield this.cancelRecognitionLocal(e, t, EnumTranslation.implTranslateErrorDetails(t))
											} else {
													if (!this.privRequestSession.isSpeechEnded || l !== Xo.NoMatch || a.RecognitionStatus === ks.InitialSilenceTimeout) {
															if (this.privRecognizerConfig.parameters.getProperty(hs) === bs[bs.Simple])
																	t = new SpeechRecognitionResult(this.privRequestSession.requestId,l,a.DisplayText,a.Duration,a.Offset + this.privRequestSession.currentTurnAudioOffset,a.Language,a.LanguageDetectionConfidence,void 0,void 0,e.textBody,n);
															else {
																	const i = DetailedSpeechPhrase.fromJSON(e.textBody)
																		, r = i.Offset + this.privRequestSession.currentTurnAudioOffset
																		, o = i.getJsonWithCorrectedOffsets(r);
																	t = new SpeechRecognitionResult(this.privRequestSession.requestId,l,i.RecognitionStatus === ks.Success ? i.NBest[0].Display : void 0,i.Duration,r,i.Language,i.LanguageDetectionConfidence,void 0,void 0,o,n)
															}
															const i = new SpeechRecognitionEventArgs(t,t.offset,this.privRequestSession.sessionId);
															if (this.privSpeechRecognizer.recognized)
																	try {
																			this.privSpeechRecognizer.recognized(this.privSpeechRecognizer, i)
																	} catch (e) {}
													}
													if (this.privSuccessCallback) {
															try {
																	this.privSuccessCallback(t)
															} catch (e) {
																	this.privErrorCallback && this.privErrorCallback(e)
															}
															this.privSuccessCallback = void 0,
															this.privErrorCallback = void 0
													}
											}
											i = !0
									}
									return i
							}
							))
					}
					cancelRecognition(e, t, n, i, r) {
							const o = new PropertyCollection;
							if (o.setProperty(ms, Jo[i]),
							this.privSpeechRecognizer.canceled) {
									const t = new SpeechRecognitionCanceledEventArgs(n,r,i,void 0,e);
									try {
											this.privSpeechRecognizer.canceled(this.privSpeechRecognizer, t)
									} catch (e) {}
							}
							if (this.privSuccessCallback) {
									const e = new SpeechRecognitionResult(t,Xo.Canceled,void 0,void 0,void 0,void 0,void 0,void 0,r,void 0,o);
									try {
											this.privSuccessCallback(e),
											this.privSuccessCallback = void 0
									} catch (e) {}
							}
					}
			}
			class AuthInfo {
					constructor(e, t) {
							this.privHeaderName = e,
							this.privToken = t
					}
					get headerName() {
							return this.privHeaderName
					}
					get token() {
							return this.privToken
					}
			}
			class CognitiveSubscriptionKeyAuthentication {
					constructor(e) {
							if (!e)
									throw new ArgumentNullError("subscriptionKey");
							this.privAuthInfo = new AuthInfo(HeaderNames.AuthKey,e)
					}
					fetch(e) {
							return Promise.resolve(this.privAuthInfo)
					}
					fetchOnExpiry(e) {
							return Promise.resolve(this.privAuthInfo)
					}
			}
			class CognitiveTokenAuthentication {
					constructor(e, t) {
							if (!e)
									throw new ArgumentNullError("fetchCallback");
							if (!t)
									throw new ArgumentNullError("fetchOnExpiryCallback");
							this.privFetchCallback = e,
							this.privFetchOnExpiryCallback = t
					}
					fetch(e) {
							return this.privFetchCallback(e).then((e=>new AuthInfo(HeaderNames.Authorization,void 0 === e ? void 0 : CognitiveTokenAuthentication.privTokenPrefix + e)))
					}
					fetchOnExpiry(e) {
							return this.privFetchOnExpiryCallback(e).then((e=>new AuthInfo(HeaderNames.Authorization,void 0 === e ? void 0 : CognitiveTokenAuthentication.privTokenPrefix + e)))
					}
			}
			CognitiveTokenAuthentication.privTokenPrefix = "bearer ";
			var Recognizer_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			class Recognizer {
					constructor(e, t, n) {
							this.audioConfig = void 0 !== e ? e : AudioConfig.fromDefaultMicrophoneInput(),
							this.privDisposed = !1,
							this.privProperties = t.clone(),
							this.privConnectionFactory = n,
							this.implCommonRecognizerSetup()
					}
					close(e, t) {
							Contracts.throwIfDisposed(this.privDisposed),
							marshalPromiseToCallbacks(this.dispose(!0), e, t)
					}
					get internalData() {
							return this.privReco
					}
					dispose(e) {
							return Recognizer_awaiter(this, void 0, void 0, (function*() {
									this.privDisposed || (this.privDisposed = !0,
									e && this.privReco && (yield this.privReco.audioSource.turnOff(),
									yield this.privReco.dispose()))
							}
							))
					}
					static get telemetryEnabled() {
							return ServiceRecognizerBase.telemetryDataEnabled
					}
					static enableTelemetry(e) {
							ServiceRecognizerBase.telemetryDataEnabled = e
					}
					implCommonRecognizerSetup() {
							let e = "undefined" != typeof window ? "Browser" : "Node"
								, t = "unknown"
								, n = "unknown";
							"undefined" != typeof navigator && (e = e + "/" + navigator.platform,
							t = navigator.userAgent,
							n = navigator.appVersion);
							const i = this.createRecognizerConfig(new SpeechServiceConfig(new Context(new OS(e,t,n))));
							this.privReco = this.createServiceRecognizer(Recognizer.getAuthFromProperties(this.privProperties), this.privConnectionFactory, this.audioConfig, i)
					}
					recognizeOnceAsyncImpl(e) {
							return Recognizer_awaiter(this, void 0, void 0, (function*() {
									Contracts.throwIfDisposed(this.privDisposed);
									const t = new Deferred;
									yield this.implRecognizerStop(),
									yield this.privReco.recognize(e, t.resolve, t.reject);
									const n = yield t.promise;
									return yield this.implRecognizerStop(),
									n
							}
							))
					}
					startContinuousRecognitionAsyncImpl(e) {
							return Recognizer_awaiter(this, void 0, void 0, (function*() {
									Contracts.throwIfDisposed(this.privDisposed),
									yield this.implRecognizerStop(),
									yield this.privReco.recognize(e, void 0, void 0)
							}
							))
					}
					stopContinuousRecognitionAsyncImpl() {
							return Recognizer_awaiter(this, void 0, void 0, (function*() {
									Contracts.throwIfDisposed(this.privDisposed),
									yield this.implRecognizerStop()
							}
							))
					}
					implRecognizerStop() {
							return Recognizer_awaiter(this, void 0, void 0, (function*() {
									this.privReco && (yield this.privReco.stopRecognizing())
							}
							))
					}
					static getAuthFromProperties(e) {
							const t = e.getProperty(es.SpeechServiceConnection_Key, void 0);
							return t && "" !== t ? new CognitiveSubscriptionKeyAuthentication(t) : new CognitiveTokenAuthentication((()=>{
									const t = e.getProperty(es.SpeechServiceAuthorization_Token, void 0);
									return Promise.resolve(t)
							}
							),(()=>{
									const t = e.getProperty(es.SpeechServiceAuthorization_Token, void 0);
									return Promise.resolve(t)
							}
							))
					}
			}
			var SpeechRecognizer_awaiter = function(e, t, n, i) {
					return new (n || (n = Promise))((function(r, o) {
							function fulfilled(e) {
									try {
											step(i.next(e))
									} catch (e) {
											o(e)
									}
							}
							function rejected(e) {
									try {
											step(i.throw(e))
									} catch (e) {
											o(e)
									}
							}
							function step(e) {
									var t;
									e.done ? r(e.value) : (t = e.value,
									t instanceof n ? t : new n((function(e) {
											e(t)
									}
									))).then(fulfilled, rejected)
							}
							step((i = i.apply(e, t || [])).next())
					}
					))
			};
			class SpeechRecognizer extends Recognizer {
					constructor(e, t) {
							const n = e;
							Contracts.throwIfNull(n, "speechConfig"),
							Contracts.throwIfNullOrWhitespace(n.properties.getProperty(es.SpeechServiceConnection_RecoLanguage), es[es.SpeechServiceConnection_RecoLanguage]),
							super(t, n.properties, new SpeechConnectionFactory),
							this.privDisposedRecognizer = !1
					}
					static FromConfig(e, t, n) {
							const i = e;
							t.properties.mergeTo(i.properties);
							return new SpeechRecognizer(e,n)
					}
					get endpointId() {
							return Contracts.throwIfDisposed(this.privDisposedRecognizer),
							this.properties.getProperty(es.SpeechServiceConnection_EndpointId, "00000000-0000-0000-0000-000000000000")
					}
					get authorizationToken() {
							return this.properties.getProperty(es.SpeechServiceAuthorization_Token)
					}
					set authorizationToken(e) {
							Contracts.throwIfNullOrWhitespace(e, "token"),
							this.properties.setProperty(es.SpeechServiceAuthorization_Token, e)
					}
					get speechRecognitionLanguage() {
							return Contracts.throwIfDisposed(this.privDisposedRecognizer),
							this.properties.getProperty(es.SpeechServiceConnection_RecoLanguage)
					}
					get outputFormat() {
							return Contracts.throwIfDisposed(this.privDisposedRecognizer),
							this.properties.getProperty(hs, bs[bs.Simple]) === bs[bs.Simple] ? bs.Simple : bs.Detailed
					}
					get properties() {
							return this.privProperties
					}
					recognizeOnceAsync(e, t) {
							marshalPromiseToCallbacks(this.recognizeOnceAsyncImpl(ts.Interactive), e, t)
					}
					startContinuousRecognitionAsync(e, t) {
							marshalPromiseToCallbacks(this.startContinuousRecognitionAsyncImpl(ts.Conversation), e, t)
					}
					stopContinuousRecognitionAsync(e, t) {
							marshalPromiseToCallbacks(this.stopContinuousRecognitionAsyncImpl(), e, t)
					}
					startKeywordRecognitionAsync(e, t, n) {
							Contracts.throwIfNull(e, "model"),
							n && n("Not yet implemented.")
					}
					stopKeywordRecognitionAsync(e) {
							e && e()
					}
					close(e, t) {
							Contracts.throwIfDisposed(this.privDisposedRecognizer),
							marshalPromiseToCallbacks(this.dispose(!0), e, t)
					}
					dispose(e) {
							const t = Object.create(null, {
									dispose: {
											get: ()=>super.dispose
									}
							});
							return SpeechRecognizer_awaiter(this, void 0, void 0, (function*() {
									this.privDisposedRecognizer || (e && (this.privDisposedRecognizer = !0,
									yield this.implRecognizerStop()),
									yield t.dispose.call(this, e))
							}
							))
					}
					createRecognizerConfig(e) {
							return new RecognizerConfig(e,this.properties)
					}
					createServiceRecognizer(e, t, n, i) {
							return new SpeechServiceRecognizer(e,t,n,i,this)
					}
			}
			class ConnectionMessageImpl {
					constructor(e) {
							this.privConnectionMessage = e,
							this.privProperties = new PropertyCollection,
							this.privConnectionMessage.headers[HeaderNames.ConnectionId] && this.privProperties.setProperty(es.Speech_SessionId, this.privConnectionMessage.headers[HeaderNames.ConnectionId]),
							Object.keys(this.privConnectionMessage.headers).forEach((e=>{
									this.privProperties.setProperty(e, this.privConnectionMessage.headers[e])
							}
							))
					}
					get path() {
							return this.privConnectionMessage.headers[Object.keys(this.privConnectionMessage.headers).find((e=>e.toLowerCase() === "path".toLowerCase()))]
					}
					get isTextMessage() {
							return this.privConnectionMessage.messageType === ds.Text
					}
					get isBinaryMessage() {
							return this.privConnectionMessage.messageType === ds.Binary
					}
					get TextMessage() {
							return this.privConnectionMessage.textBody
					}
					get binaryMessage() {
							return this.privConnectionMessage.binaryBody
					}
					get properties() {
							return this.privProperties
					}
					toString() {
							return ""
					}
			}
			class ConnectionEventArgs extends SessionEventArgs {
			}
			class ConnectionMessageEventArgs {
					constructor(e) {
							this.privConnectionMessage = e
					}
					get message() {
							return this.privConnectionMessage
					}
					toString() {
							return "Message: " + this.privConnectionMessage.toString()
					}
			}
			class ServiceEventArgs extends SessionEventArgs {
					constructor(e, t, n) {
							super(n),
							this.privJsonResult = e,
							this.privEventName = t
					}
					get jsonString() {
							return this.privJsonResult
					}
					get eventName() {
							return this.privEventName
					}
			}
			class Connection {
					static fromRecognizer(e) {
							const t = e.internalData
								, n = new Connection;
							return n.privInternalData = t,
							n.setupEvents(),
							n
					}
					static fromSynthesizer(e) {
							const t = e.internalData
								, n = new Connection;
							return n.privInternalData = t,
							n.setupEvents(),
							n
					}
					openConnection(e, t) {
							marshalPromiseToCallbacks(this.privInternalData.connect(), e, t)
					}
					closeConnection(e, t) {
							if (this.privInternalData instanceof SynthesisAdapterBase)
									throw new Error("Disconnecting a synthesizer's connection is currently not supported");
							marshalPromiseToCallbacks(this.privInternalData.disconnect(), e, t)
					}
					setMessageProperty(e, t, n) {
							if (Contracts.throwIfNullOrWhitespace(t, "propertyName"),
							this.privInternalData instanceof ServiceRecognizerBase) {
									if ("speech.context" !== e.toLowerCase())
											throw new Error("Only speech.context message property sets are currently supported for recognizer");
									this.privInternalData.speechContext.setSection(t, n)
							} else if (this.privInternalData instanceof SynthesisAdapterBase) {
									if ("synthesis.context" !== e.toLowerCase())
											throw new Error("Only synthesis.context message property sets are currently supported for synthesizer");
									this.privInternalData.synthesisContext.setSection(t, n)
							}
					}
					sendMessageAsync(e, t, n, i) {
							marshalPromiseToCallbacks(this.privInternalData.sendNetworkMessage(e, t), n, i)
					}
					close() {}
					setupEvents() {
							this.privEventListener = this.privInternalData.connectionEvents.attach((e=>{
									"ConnectionEstablishedEvent" === e.name ? this.connected && this.connected(new ConnectionEventArgs(e.connectionId)) : "ConnectionClosedEvent" === e.name ? this.disconnected && this.disconnected(new ConnectionEventArgs(e.connectionId)) : "ConnectionMessageSentEvent" === e.name ? this.messageSent && this.messageSent(new ConnectionMessageEventArgs(new ConnectionMessageImpl(e.message))) : "ConnectionMessageReceivedEvent" === e.name && this.messageReceived && this.messageReceived(new ConnectionMessageEventArgs(new ConnectionMessageImpl(e.message)))
							}
							)),
							this.privServiceEventListener = this.privInternalData.serviceEvents.attach((e=>{
									this.receivedServiceMessage && this.receivedServiceMessage(new ServiceEventArgs(e.jsonString,e.name))
							}
							))
					}
			}
			const Fs = new class {
					constructor() {
							this.listeners = [],
							this.unexpectedErrorHandler = function(e) {
									setTimeout((()=>{
											if (e.stack) {
													if (ErrorNoTelemetry.isErrorNoTelemetry(e))
															throw new ErrorNoTelemetry(e.message + "\n\n" + e.stack);
													throw new Error(e.message + "\n\n" + e.stack)
											}
											throw e
									}
									), 0)
							}
					}
					addListener(e) {
							return this.listeners.push(e),
							()=>{
									this._removeListener(e)
							}
					}
					emit(e) {
							this.listeners.forEach((t=>{
									t(e)
							}
							))
					}
					_removeListener(e) {
							this.listeners.splice(this.listeners.indexOf(e), 1)
					}
					setUnexpectedErrorHandler(e) {
							this.unexpectedErrorHandler = e
					}
					getUnexpectedErrorHandler() {
							return this.unexpectedErrorHandler
					}
					onUnexpectedError(e) {
							this.unexpectedErrorHandler(e),
							this.emit(e)
					}
					onUnexpectedExternalError(e) {
							this.unexpectedErrorHandler(e)
					}
			}
			;
			function errors_onUnexpectedError(e) {
					isCancellationError(e) || Fs.onUnexpectedError(e)
			}
			const Bs = "Canceled";
			function isCancellationError(e) {
					return e instanceof errors_CancellationError || e instanceof Error && e.name === Bs && e.message === Bs
			}
			class errors_CancellationError extends Error {
					constructor() {
							super(Bs),
							this.name = this.message
					}
			}
			class NotImplementedError extends Error {
					constructor(e) {
							super("NotImplemented"),
							e && (this.message = e)
					}
			}
			class NotSupportedError extends Error {
					constructor(e) {
							super("NotSupported"),
							e && (this.message = e)
					}
			}
			class ExpectedError extends Error {
					constructor() {
							super(...arguments),
							this.isExpected = !0
					}
			}
			class ErrorNoTelemetry extends Error {
					constructor(e) {
							super(e),
							this.name = "CodeExpectedError"
					}
					static fromError(e) {
							if (e instanceof ErrorNoTelemetry)
									return e;
							const t = new ErrorNoTelemetry;
							return t.message = e.message,
							t.stack = e.stack,
							t
					}
					static isErrorNoTelemetry(e) {
							return "CodeExpectedError" === e.name
					}
			}
			class BugIndicatingError extends Error {
					constructor(e) {
							super(e || "An unexpected bug occurred."),
							Object.setPrototypeOf(this, BugIndicatingError.prototype)
					}
			}
			class linkedList_Node {
					constructor(e) {
							this.element = e,
							this.next = linkedList_Node.Undefined,
							this.prev = linkedList_Node.Undefined
					}
			}
			linkedList_Node.Undefined = new linkedList_Node(void 0);
			class linkedList_LinkedList {
					constructor() {
							this._first = linkedList_Node.Undefined,
							this._last = linkedList_Node.Undefined,
							this._size = 0
					}
					get size() {
							return this._size
					}
					isEmpty() {
							return this._first === linkedList_Node.Undefined
					}
					clear() {
							let e = this._first;
							for (; e !== linkedList_Node.Undefined; ) {
									const t = e.next;
									e.prev = linkedList_Node.Undefined,
									e.next = linkedList_Node.Undefined,
									e = t
							}
							this._first = linkedList_Node.Undefined,
							this._last = linkedList_Node.Undefined,
							this._size = 0
					}
					unshift(e) {
							return this._insert(e, !1)
					}
					push(e) {
							return this._insert(e, !0)
					}
					_insert(e, t) {
							const n = new linkedList_Node(e);
							if (this._first === linkedList_Node.Undefined)
									this._first = n,
									this._last = n;
							else if (t) {
									const e = this._last;
									this._last = n,
									n.prev = e,
									e.next = n
							} else {
									const e = this._first;
									this._first = n,
									n.next = e,
									e.prev = n
							}
							this._size += 1;
							let i = !1;
							return ()=>{
									i || (i = !0,
									this._remove(n))
							}
					}
					shift() {
							if (this._first !== linkedList_Node.Undefined) {
									const e = this._first.element;
									return this._remove(this._first),
									e
							}
					}
					pop() {
							if (this._last !== linkedList_Node.Undefined) {
									const e = this._last.element;
									return this._remove(this._last),
									e
							}
					}
					_remove(e) {
							if (e.prev !== linkedList_Node.Undefined && e.next !== linkedList_Node.Undefined) {
									const t = e.prev;
									t.next = e.next,
									e.next.prev = t
							} else
									e.prev === linkedList_Node.Undefined && e.next === linkedList_Node.Undefined ? (this._first = linkedList_Node.Undefined,
									this._last = linkedList_Node.Undefined) : e.next === linkedList_Node.Undefined ? (this._last = this._last.prev,
									this._last.next = linkedList_Node.Undefined) : e.prev === linkedList_Node.Undefined && (this._first = this._first.next,
									this._first.prev = linkedList_Node.Undefined);
							this._size -= 1
					}
					*[Symbol.iterator]() {
							let e = this._first;
							for (; e !== linkedList_Node.Undefined; )
									yield e.element,
									e = e.next
					}
			}
			var Gs;
			(function(e) {
					function _addLeakageTraceLogic(e) {
							false
					}
					function once(e) {
							return (t,n=null,i)=>{
									let r, o = !1;
									return r = e((e=>{
											if (!o)
													return r ? r.dispose() : o = !0,
													t.call(n, e)
									}
									), null, i),
									o && r.dispose(),
									r
							}
					}
					function map(e, t, n) {
							return snapshot(((n,i=null,r)=>e((e=>n.call(i, t(e))), null, r)), n)
					}
					function forEach(e, t, n) {
							return snapshot(((n,i=null,r)=>e((e=>{
									t(e),
									n.call(i, e)
							}
							), null, r)), n)
					}
					function filter(e, t, n) {
							return snapshot(((n,i=null,r)=>e((e=>t(e) && n.call(i, e)), null, r)), n)
					}
					function reduce(e, t, n, i) {
							let r = n;
							return map(e, (e=>(r = t(r, e),
							r)), i)
					}
					function snapshot(e, t) {
							let n;
							const i = {
									onFirstListenerAdd() {
											n = e(r.fire, r)
									},
									onLastListenerRemove() {
											null == n || n.dispose()
									}
							};
							t || _addLeakageTraceLogic();
							const r = new Emitter(i);
							return null == t || t.add(r),
							r.event
					}
					function debounce(e, t, n=100, i=!1, r, o) {
							let s, a, l, c = 0;
							const d = {
									onFirstListenerAdd() {
											s = e((e=>{
													c++,
													a = t(a, e),
													i && !l && (p.fire(a),
													a = void 0),
													clearTimeout(l),
													l = setTimeout((()=>{
															const e = a;
															a = void 0,
															l = void 0,
															(!i || c > 1) && p.fire(e),
															c = 0
													}
													), n)
											}
											))
									},
									onLastListenerRemove() {
											s.dispose()
									}
							};
							o || _addLeakageTraceLogic();
							const p = new Emitter(d);
							return null == o || o.add(p),
							p.event
					}
					function latch(e, t=((e,t)=>e === t), n) {
							let i, r = !0;
							return filter(e, (e=>{
									const n = r || !t(e, i);
									return r = !1,
									i = e,
									n
							}
							), n)
					}
					e.None = ()=>lifecycle_Disposable.None,
					e.defer = function(e, t) {
							return debounce(e, (()=>{}
							), 0, void 0, void 0, t)
					}
					,
					e.accumulate = function(t, n=0, i) {
							return e.debounce(t, ((e,t)=>e ? (e.push(t),
							e) : [t]), n, void 0, void 0, i)
					}
					,
					e.once = once,
					e.map = map,
					e.forEach = forEach,
					e.filter = filter,
					e.signal = function(e) {
							return e
					}
					,
					e.any = function(...e) {
							return (t,n=null,i)=>combinedDisposable(...e.map((e=>e((e=>t.call(n, e)), null, i))))
					}
					,
					e.reduce = reduce,
					e.debounce = debounce,
					e.latch = latch,
					e.split = function(t, n, i) {
							return [e.filter(t, n, i), e.filter(t, (e=>!n(e)), i)]
					}
					,
					e.buffer = function(e, t=!1, n=[]) {
							let i = n.slice()
								, r = e((e=>{
									i ? i.push(e) : o.fire(e)
							}
							));
							const flush = ()=>{
									null == i || i.forEach((e=>o.fire(e))),
									i = null
							}
								, o = new Emitter({
									onFirstListenerAdd() {
											r || (r = e((e=>o.fire(e))))
									},
									onFirstListenerDidAdd() {
											i && (t ? setTimeout(flush) : flush())
									},
									onLastListenerRemove() {
											r && r.dispose(),
											r = null
									}
							});
							return o.event
					}
					;
					class ChainableEvent {
							constructor(e) {
									this.event = e,
									this.disposables = new lifecycle_DisposableStore
							}
							map(e) {
									return new ChainableEvent(map(this.event, e, this.disposables))
							}
							forEach(e) {
									return new ChainableEvent(forEach(this.event, e, this.disposables))
							}
							filter(e) {
									return new ChainableEvent(filter(this.event, e, this.disposables))
							}
							reduce(e, t) {
									return new ChainableEvent(reduce(this.event, e, t, this.disposables))
							}
							latch() {
									return new ChainableEvent(latch(this.event, void 0, this.disposables))
							}
							debounce(e, t=100, n=!1, i) {
									return new ChainableEvent(debounce(this.event, e, t, n, 0, this.disposables))
							}
							on(e, t, n) {
									return this.event(e, t, n)
							}
							once(e, t, n) {
									return once(this.event)(e, t, n)
							}
							dispose() {
									this.disposables.dispose()
							}
					}
					e.chain = function(e) {
							return new ChainableEvent(e)
					}
					,
					e.fromNodeEventEmitter = function(e, t, n=(e=>e)) {
							const fn = (...e)=>i.fire(n(...e))
								, i = new Emitter({
									onFirstListenerAdd: ()=>e.on(t, fn),
									onLastListenerRemove: ()=>e.removeListener(t, fn)
							});
							return i.event
					}
					,
					e.fromDOMEventEmitter = function(e, t, n=(e=>e)) {
							const fn = (...e)=>i.fire(n(...e))
								, i = new Emitter({
									onFirstListenerAdd: ()=>e.addEventListener(t, fn),
									onLastListenerRemove: ()=>e.removeEventListener(t, fn)
							});
							return i.event
					}
					,
					e.toPromise = function(e) {
							return new Promise((t=>once(e)(t)))
					}
					,
					e.runAndSubscribe = function(e, t) {
							return t(void 0),
							e((e=>t(e)))
					}
					,
					e.runAndSubscribeWithStore = function(e, t) {
							let n = null;
							function run(e) {
									null == n || n.dispose(),
									n = new lifecycle_DisposableStore,
									t(e, n)
							}
							run(void 0);
							const i = e((e=>run(e)));
							return lifecycle_toDisposable((()=>{
									i.dispose(),
									null == n || n.dispose()
							}
							))
					}
			}
			)(Gs || (Gs = {}));
			class Listener {
					constructor(e, t, n) {
							this.callback = e,
							this.callbackThis = t,
							this.stack = n,
							this.subscription = new SafeDisposable
					}
					invoke(e) {
							this.callback.call(this.callbackThis, e)
					}
			}
			class Emitter {
					constructor(e) {
							var t;
							this._disposed = !1,
							this._options = e,
							this._deliveryQueue = null === (t = this._options) || void 0 === t ? void 0 : t.deliveryQueue
					}
					dispose() {
							var e, t, n;
							this._disposed || (this._disposed = !0,
							this._listeners && this._listeners.clear(),
							null === (e = this._deliveryQueue) || void 0 === e || e.clear(this),
							null === (n = null === (t = this._options) || void 0 === t ? void 0 : t.onLastListenerRemove) || void 0 === n || n.call(t))
					}
					get event() {
							return this._event || (this._event = (e,t,n)=>{
									var i, r, o;
									this._listeners || (this._listeners = new linkedList_LinkedList);
									const s = this._listeners.isEmpty();
									s && (null === (i = this._options) || void 0 === i ? void 0 : i.onFirstListenerAdd) && this._options.onFirstListenerAdd(this);
									const a = new Listener(e,t,void 0)
										, l = this._listeners.push(a);
									s && (null === (r = this._options) || void 0 === r ? void 0 : r.onFirstListenerDidAdd) && this._options.onFirstListenerDidAdd(this),
									(null === (o = this._options) || void 0 === o ? void 0 : o.onListenerDidAdd) && this._options.onListenerDidAdd(this, e, t);
									const c = a.subscription.set((()=>{
											if (!this._disposed && (l(),
											this._options && this._options.onLastListenerRemove)) {
													this._listeners && !this._listeners.isEmpty() || this._options.onLastListenerRemove(this)
											}
									}
									));
									return n instanceof lifecycle_DisposableStore ? n.add(c) : Array.isArray(n) && n.push(c),
									c
							}
							),
							this._event
					}
					fire(e) {
							if (this._listeners) {
									this._deliveryQueue || (this._deliveryQueue = new PrivateEventDeliveryQueue);
									for (const t of this._listeners)
											this._deliveryQueue.push(this, t, e);
									this._deliveryQueue.deliver()
							}
					}
					hasListeners() {
							return !!this._listeners && !this._listeners.isEmpty()
					}
			}
			class EventDeliveryQueue {
					constructor() {
							this._queue = new linkedList_LinkedList
					}
					get size() {
							return this._queue.size
					}
					push(e, t, n) {
							this._queue.push(new EventDeliveryQueueElement(e,t,n))
					}
					clear(e) {
							const t = new linkedList_LinkedList;
							for (const n of this._queue)
									n.emitter !== e && t.push(n);
							this._queue = t
					}
					deliver() {
							for (; this._queue.size > 0; ) {
									const e = this._queue.shift();
									try {
											e.listener.invoke(e.event)
									} catch (e) {
											errors_onUnexpectedError(e)
									}
							}
					}
			}
			class PrivateEventDeliveryQueue extends EventDeliveryQueue {
					clear(e) {
							this._queue.clear()
					}
			}
			class EventDeliveryQueueElement {
					constructor(e, t, n) {
							this.emitter = e,
							this.listener = t,
							this.event = n
					}
			}
			class DomEmitter {
					constructor(e, t, n) {
							const fn = e=>this.emitter.fire(e);
							this.emitter = new Emitter({
									onFirstListenerAdd: ()=>e.addEventListener(t, fn, n),
									onLastListenerRemove: ()=>e.removeEventListener(t, fn, n)
							})
					}
					get event() {
							return this.emitter.event
					}
					dispose() {
							this.emitter.dispose()
					}
			}
			const Us = P.createInterface("IChatService")
				, zs = P.createInterface();
			var $s;
			(function(e) {
					e.Inactive = "Inactive",
					e.Pending = "Pending",
					e.Active = "Active"
			}
			)($s || ($s = {}));
			const Vs = P.createInterface();
			class CoreUtils {
					static clamp(e, t, n) {
							return isNaN(e) || e <= t ? t : e >= n ? n : e
					}
					static uuid() {
							return (this.partUUID() + this.partUUID() + "-" + this.partUUID() + "-" + this.partUUID() + "-" + this.partUUID() + "-" + this.partUUID() + this.partUUID() + this.partUUID()).toLowerCase()
					}
					static getActionForResultType(e) {
							switch (e) {
							case ye.Success:
									return Ko.ValidResponse;
							case ye.InternalError:
							case ye.ProcessingMessage:
									return Ko.Retry;
							case ye.Throttled:
									return Ko.UnRecoverable;
							case ye.InvalidRequest:
									return Ko.EndChat;
							case ye.InvalidSession:
									return Ko.Restart;
							default:
									return Ko.EndChat
							}
					}
					static partUUID() {
							return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
					}
			}
			const Hs = P.createInterface("ISpeechService");
			var qs;
			(function(e) {
					e[e.Prompt = 0] = "Prompt",
					e[e.ReadyToBeUsed = 1] = "ReadyToBeUsed",
					e[e.NoPermissionError = 2] = "NoPermissionError",
					e[e.MediaNotReachableError = 3] = "MediaNotReachableError",
					e[e.FailedRecognitionError = 4] = "FailedRecognitionError",
					e[e.AudioPlaybackError = 5] = "AudioPlaybackError",
					e[e.Listening = 6] = "Listening",
					e[e.Loading = 7] = "Loading",
					e[e.ReadingOut = 8] = "ReadingOut",
					e[e.PendingAudio = 9] = "PendingAudio",
					e[e.WaitingForStreamToFinish = 10] = "WaitingForStreamToFinish"
			}
			)(qs || (qs = {}));
			const js = P.createInterface("ITelemetryService");
			class StreamEventNotifier extends lifecycle_Disposable {
					constructor() {
							super(...arguments),
							this.onBeginEmitter = this._register(new Emitter),
							this.onUpdateEmitter = this._register(new Emitter),
							this.onResponseEmitter = this._register(new Emitter),
							this.onCompleteEmitter = this._register(new Emitter)
					}
					get onBegin() {
							return this.onBeginEmitter.event
					}
					get onUpdate() {
							return this.onUpdateEmitter.event
					}
					get onResponse() {
							return this.onResponseEmitter.event
					}
					get onComplete() {
							return this.onCompleteEmitter.event
					}
			}
			let Ws = class extends StreamEventNotifier {
					constructor(e, t, n, i, r) {
							var o;
							super(),
							this.services = e,
							this.config = t,
							this.conversation = n,
							this.telemetry = i,
							this.log = r,
							this._speechStatus = qs.Prompt,
							this.onSpeechStatusUpdatedEmitter = this._register(new Emitter),
							this._recognizedText = "",
							this.onRecognizedTextUpdatedEmitter = this._register(new Emitter),
							this.didUserCancelRecognition = !1,
							this.shouldReadoutResponse = !1,
							this.audioCurrentlyPlaying = void 0,
							this.audiosToBePlayed = [],
							this.lastRequest = null,
							this.handleReceivedServiceMessage = e=>{
									var t;
									const n = e.eventName.toLowerCase()
										, i = JSON.parse(e.jsonString);
									if ("uqu.message" === n)
											this.handleUquMessage(i);
									else
											null === (t = this.log) || void 0 === t || t.warn(this, this.handleReceivedServiceMessage, `Event ${n} still not implemented.`, e).write()
							}
							,
							this.onSessionStarted = (e,t)=>{
									var n;
									null === (n = this.log) || void 0 === n || n.debug(this, this.onSessionStarted, "session started, sending chat data", t).write(),
									this.sendChatData(),
									this.speechStatus = qs.Listening
							}
							,
							this.onSpeechStartDetected = (e,t)=>{
									var n;
									null === (n = this.log) || void 0 === n || n.debug(this, this.onSpeechStartDetected, "speech start detected", t).write()
							}
							,
							this.onRecognizing = (e,t)=>{
									var n;
									null === (n = this.log) || void 0 === n || n.debug(this, this.onRecognizing, "ongoing recognition", t).write(),
									t.result.text && (this.recognizedText = t.result.text)
							}
							,
							this.onSpeechEndDetected = (e,t)=>{
									var n;
									null === (n = this.log) || void 0 === n || n.debug(this, this.onSpeechEndDetected, "speech end detected", t).write()
							}
							,
							this.onRecognized = (e,t)=>{
									var n;
									null === (n = this.log) || void 0 === n || n.info(this, this.onRecognized, "recognition finalized with status", Xo[t.result.reason]).write(),
									this.stopMicStream(),
									t.result.text && !this.didUserCancelRecognition ? (this.recognizedText = t.result.text,
									this.speechStatus = qs.Loading,
									this.onBeginEmitter.fire(this.lastRequest),
									this.hasLastAudioArrived = !1,
									this.telemetry.trackEvent("InteractionEvent", "VoiceMessageSend", {
											Namespace: "Conversation",
											CustomData: JSON.stringify({
													numCharacters: this.recognizedText.length,
													numWords: this.recognizedText.split(/\s+/).length,
													turnId: this.conversation.messages.filter((e=>"user" === e.author)).length,
													convId: this.conversation.id
											}),
											EncryptedData: JSON.stringify({
													text: this.recognizedText
											})
									})) : (this.speechStatus = qs.ReadyToBeUsed,
									this.recognizedText = "")
							}
							,
							this.onSessionStopped = (e,t)=>{
									var n;
									null === (n = this.log) || void 0 === n || n.debug(this, this.onSessionStopped, "session stopped", t).write()
							}
							,
							this.onCanceled = (e,t)=>{
									var n, i;
									null === (n = this.log) || void 0 === n || n.debug(this, this.onCanceled, "recognition canceled", t).write(),
									this.recognizedText = "",
									t.errorCode === Jo.NoError ? this.speechStatus = qs.ReadyToBeUsed : (null === (i = this.log) || void 0 === i || i.error(this, this.onCanceled, "Recognition was cancelled due to an error", t).write(),
									this.speechStatus = qs.FailedRecognitionError)
							}
							,
							null === (o = this.log) || void 0 === o || o.trace(this, "ctor", null).write(),
							this.initStaticSpeechConfigs()
					}
					get speechStatus() {
							return this._speechStatus
					}
					set speechStatus(e) {
							this._speechStatus !== e && (this.telemetry.trackEvent("SystemEvent", "SpeechStatusChanged", {
									Namespace: "Conversation",
									CustomData: JSON.stringify({
											oldSpeechStatus: qs[this.speechStatus],
											newSpeechStatus: qs[e]
									})
							}),
							this._speechStatus = e,
							this.onSpeechStatusUpdatedEmitter.fire(e))
					}
					get onSpeechStatusUpdated() {
							return this.onSpeechStatusUpdatedEmitter.event
					}
					get recognizedText() {
							return this._recognizedText
					}
					set recognizedText(e) {
							this._recognizedText !== e && (this._recognizedText = e,
							this.onRecognizedTextUpdatedEmitter.fire(e))
					}
					get onRecognizedTextUpdated() {
							return this.onRecognizedTextUpdatedEmitter.event
					}
					async tryStartSpeechRecognitionAsync(e=!1) {
							var t, n, i;
							null === (t = this.log) || void 0 === t || t.trace(this, this.tryStartSpeechRecognitionAsync, "Starting speech", new Date).write(),
							this.shouldReadoutResponse = e,
							await this.initMicPermissionAsync();
							try {
									return null === (n = this.log) || void 0 === n || n.info(this, this.tryStartSpeechRecognitionAsync, "Mic permission is granted, getting media stream.").write(),
									await this.initSpeechRecognizerAsync(),
									this.mediaStream = await navigator.mediaDevices.getUserMedia({
											audio: !0
									}),
									this.didUserCancelRecognition = !1,
									this.recognizer.recognizeOnceAsync(),
									!0
							} catch (e) {
									null === (i = this.log) || void 0 === i || i.error(this, this.tryStartSpeechRecognitionAsync, "Starting speech failed.", e).write(),
									this.speechStatus !== qs.NoPermissionError && (this.speechStatus = qs.MediaNotReachableError)
							}
							return !1
					}
					tryCancelSpeechRecognition() {
							var e, t;
							return null === (e = this.log) || void 0 === e || e.info(this, this.tryCancelSpeechRecognition, "Cancelling speech recognition.").write(),
							this.speechStatus === qs.Listening ? (this.cancelPendingRequest(),
							!0) : (null === (t = this.log) || void 0 === t || t.warn(this, this.tryCancelSpeechRecognition, `Cannot cancel speech recognition when state is ${this.speechStatus}.`),
							!1)
					}
					stopReadout() {
							var e;
							null === (e = this.log) || void 0 === e || e.info(this, this.stopReadout, "Stopping readout of current turn and removing remaining audios in queue.").write(),
							this.clearAudioQueue(),
							this.speechStatus = qs.WaitingForStreamToFinish
					}
					cancelPendingRequest() {
							var e, t;
							null === (e = this.log) || void 0 === e || e.trace(this, this.cancelPendingRequest, "Resetting the service and dropping any pending interaction.").write(),
							this.didUserCancelRecognition = !0,
							this.stopStreamAndCloseConnection(),
							this.stopMicStream(),
							null === (t = this.recognizer) || void 0 === t || t.stopContinuousRecognitionAsync(),
							this.speechStatus = qs.ReadyToBeUsed,
							this.lastRequest = null,
							this.clearAudioQueue(),
							this.hasLastAudioArrived = void 0
					}
					clearAudioQueue() {
							var e, t;
							null === (e = this.audioCurrentlyPlaying) || void 0 === e || e.stop(),
							this.audioCurrentlyPlaying = void 0,
							null === (t = this.log) || void 0 === t || t.trace(this, this.clearAudioQueue, `Removing ${this.audiosToBePlayed.length} audio tracks left.`).write(),
							this.audiosToBePlayed = [],
							this.shouldReadoutResponse = !1
					}
					async initMicPermissionAsync() {
							var e, t;
							try {
									if (this.micPermission)
											return null === (e = this.log) || void 0 === e || e.info(this, this.initMicPermissionAsync, "there's a mic permission already here").write(),
											void this.handleMicPermissionChanged();
									this.micPermission = this.config.speech.micPermissionProvider ? await this.config.speech.micPermissionProvider() : await navigator.permissions.query({
											name: "microphone"
									}),
									this.micPermission && (this.micPermission.onchange = ()=>this.handleMicPermissionChanged()),
									this.handleMicPermissionChanged()
							} catch (e) {
									null === (t = this.log) || void 0 === t || t.error(this, this.initMicPermissionAsync, "Permissions could not be queried", e).write(),
									this.speechStatus = qs.MediaNotReachableError
							}
					}
					stopMicStream() {
							var e;
							null === (e = this.mediaStream) || void 0 === e || e.getTracks().forEach((e=>{
									e.stop()
							}
							))
					}
					handleMicPermissionChanged() {
							var e, t, n;
							switch (null === (e = this.log) || void 0 === e || e.trace(this, this.handleMicPermissionChanged, `Mic permission status: '${null === (t = this.micPermission) || void 0 === t ? void 0 : t.state}'`).write(),
							null === (n = this.micPermission) || void 0 === n ? void 0 : n.state) {
							case "denied":
									this.speechStatus = qs.NoPermissionError;
									break;
							case "granted":
									this.speechStatus = qs.ReadyToBeUsed;
									break;
							default:
									this.speechStatus = qs.Prompt
							}
					}
					handleUquMessage(e) {
							var t, n, i, r;
							switch (e.Scenario) {
							case "Chat":
									null === (t = this.log) || void 0 === t || t.trace(this, this.handleUquMessage, "Chat:", e.Data).write(),
									null !== this.lastRequest && (this.lastRequest = null,
									this.onResponseEmitter.fire(e.Data));
									break;
							case "SpokenResponse":
									null === (n = this.log) || void 0 === n || n.trace(this, this.handleUquMessage, "SpokenResponse").write(),
									null !== this.lastRequest && this.handleSpokenResponse(e.Data);
									break;
							case "ChatStream":
									null !== this.lastRequest && this.onUpdateEmitter.fire(e.Data);
									break;
							case "ChatStreamComplete":
									null === (i = this.log) || void 0 === i || i.debug(this, this.handleUquMessage, "Chat stream complete").write(),
									this.hasLastAudioArrived = !0,
									this.updateSpeechStatusOnResponseFinish(),
									this.onCompleteEmitter.fire();
									break;
							default:
									null === (r = this.log) || void 0 === r || r.warn(this, this.handleUquMessage, `Scenario ${e.Scenario} is not implemented`, e).write()
							}
					}
					updateSpeechStatusOnResponseFinish() {
							this.shouldReadoutResponse && this.audioCurrentlyPlaying || (this.speechStatus = qs.ReadyToBeUsed)
					}
					sendChatData() {
							var e, t;
							if (null === (e = this.log) || void 0 === e || e.debug(this, this.sendChatData, "Sending chat data to UQU").write(),
							null === this.lastRequest)
									null === (t = this.log) || void 0 === t || t.error(this, this.sendChatData, "No chat data to send").write();
							else {
									const e = {
											data: this.lastRequest,
											scenario: "chatData"
									};
									this.sendUquMessage(e, void 0, (e=>{
											var t;
											null === (t = this.log) || void 0 === t || t.error(this, this.sendChatData, "Failed to send chat data.", e).write()
									}
									))
							}
					}
					stopStreamAndCloseConnection() {
							var e;
							null === (e = this.log) || void 0 === e || e.debug(this, this.stopStreamAndCloseConnection, "Sending chat stop command to UQU and closing connection").write();
							this.sendUquMessage({
									scenario: "chatInvoke",
									type: "stop",
									data: {}
							}, this.forceCloseConnection.bind(this), this.forceCloseConnection.bind(this))
					}
					sendUquMessage(e, t, n) {
							var i;
							void 0 === this.socketConnection ? void 0 !== n && n("No connection to server") : null === (i = this.socketConnection) || void 0 === i || i.sendMessageAsync("uqu.input", JSON.stringify(e), t, n)
					}
					handleSpokenResponse(e) {
							var t, n;
							if (null === (t = this.log) || void 0 === t || t.debug(this, this.handleSpokenResponse, "Spoken response:", e).write(),
							e.url && this.shouldReadoutResponse) {
									const t = this.config.speech.textToSpeechProvider(e.url, (()=>{
											this.playNextAudioAsync()
									}
									));
									this.audiosToBePlayed.push(t),
									null === (n = this.log) || void 0 === n || n.debug(this, this.handleSpokenResponse, "speechStatus: ", qs[this.speechStatus]).write(),
									this.audioCurrentlyPlaying || this.playNextAudioAsync()
							}
					}
					async playNextAudioAsync() {
							var e, t, n, i, r;
							if (null === (e = this.log) || void 0 === e || e.trace(this, this.playNextAudioAsync, "Reading out 1st element of audio queue", this.audiosToBePlayed).write(),
							this.shouldReadoutResponse && this.audiosToBePlayed.length > 0) {
									this.audioCurrentlyPlaying = this.audiosToBePlayed.shift();
									try {
											this.speechStatus = qs.PendingAudio,
											await (null === (t = this.audioCurrentlyPlaying) || void 0 === t ? void 0 : t.play()),
											this.speechStatus = qs.ReadingOut
									} catch (e) {
											null === (n = this.log) || void 0 === n || n.error(this, this.playNextAudioAsync, "Audio could not be played", e, this.audioCurrentlyPlaying),
											this.speechStatus = qs.AudioPlaybackError
									}
							} else
									!1 === this.hasLastAudioArrived ? (null === (i = this.log) || void 0 === i || i.debug(this, this.playNextAudioAsync, "Readout queue is empty but last audio has not arrived.").write(),
									this.speechStatus = qs.PendingAudio,
									this.audioCurrentlyPlaying = void 0) : (null === (r = this.log) || void 0 === r || r.debug(this, this.playNextAudioAsync, "Readout has finished.").write(),
									this.audioCurrentlyPlaying = void 0,
									this.updateSpeechStatusOnResponseFinish())
					}
					generateSpeechEndpoint() {
							const e = this.config.buildUrl(this.config.speech);
							return e.protocol = "https:" === location.protocol ? "wss:" : "ws:",
							e
					}
					initStaticSpeechConfigs() {
							this.speechEndpointUrl = this.generateSpeechEndpoint(),
							this.audioConfig = AudioConfig.fromDefaultMicrophoneInput()
					}
					async initSpeechRecognizerAsync() {
							delete this.recognizer,
							await this.updateRequestSpecificUrlParamsAsync();
							const e = SpeechConfig.fromEndpoint(this.speechEndpointUrl, "key");
							e.speechRecognitionLanguage = "xx-yy",
							this.recognizer = new SpeechRecognizer(e,this.audioConfig),
							this.recognizer.properties.setProperty(es.SpeechServiceConnection_Endpoint, this.speechEndpointUrl.href),
							this.socketConnection = Connection.fromRecognizer(this.recognizer),
							this.socketConnection.receivedServiceMessage = this.handleReceivedServiceMessage,
							this.recognizer.sessionStarted = this.onSessionStarted,
							this.recognizer.speechStartDetected = this.onSpeechStartDetected,
							this.recognizer.recognizing = this.onRecognizing,
							this.recognizer.speechEndDetected = this.onSpeechEndDetected,
							this.recognizer.recognized = this.onRecognized,
							this.recognizer.sessionStopped = this.onSessionStopped,
							this.recognizer.canceled = this.onCanceled
					}
					forceCloseConnection() {
							void 0 !== this.socketConnection && (this.socketConnection.closeConnection(),
							this.socketConnection.close(),
							delete this.socketConnection.receivedServiceMessage,
							delete this.socketConnection)
					}
					async updateRequestSpecificUrlParamsAsync() {
							var e, t;
							null === (e = this.log) || void 0 === e || e.trace(this, this.updateRequestSpecificUrlParamsAsync, "last request:", this.lastRequest).write(),
							this.lastRequest = await this.services.get(Us).createChatRequestAsync("", Ce.Speech),
							null === (t = this.log) || void 0 === t || t.trace(this, this.updateRequestSpecificUrlParamsAsync, "new request:", this.lastRequest).write();
							let {uqurequestid: n} = this.config.speech.query;
							"<<uqurequestid>>" === n && (n = CoreUtils.uuid()),
							this.speechEndpointUrl.searchParams.set("uqurequestid", n)
					}
			}
			;
			function createAudio(e, t) {
					const n = new Audio(e);
					return n.onended = ()=>{
							t()
					}
					,
					{
							play: ()=>n.play(),
							stop: ()=>{
									n.pause()
							}
					}
			}
			__decorate([observable, __metadata("design:type", Number)], Ws.prototype, "_speechStatus", void 0),
			Ws = __decorate([__param(0, M), __param(1, Yo), __param(2, zs), __param(3, js), __param(4, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object, Object])], Ws);
			const Ys = {
					privacyStatement: "https://go.microsoft.com/fwlink/?LinkId=521839",
					termsOfUse: "https://www.bing.com/new/termsofuse",
					reportAConcern: "https://www.microsoft.com/concern/bing"
			}
				, Ks = {
					letsChat: "Let's chat",
					pause: "Pause",
					play: "Play",
					stop: "Stop",
					more: "more",
					expand: "Expand",
					clickToView: "click to view",
					seeMore: "See more",
					seeLess: "See less",
					raiSuggestions: "What is this?",
					close: "Close",
					refresh: "Refresh",
					actionBarPlaceholder: "Ask me anything...",
					actionBarOngoingConvPlaceholder: "Type message",
					actionBarSuspendConvPlaceHolder: "Messaging is disabled for suspended accounts",
					actionBarComposeButton: "New topic",
					actionBarTextInputAriaLabel: "Ask Bing",
					actionBarAutoSuggestTab: "Tab",
					actionBarAutoSuggestTap: "Tap",
					actionBarKeyboardHint: "Enter",
					actionBarTextInputModeButtonAriaLabel: "Text input mode",
					actionBarSpeechInputModeButtonAriaLabel: "Enable speech input mode",
					actionBarSubmitButtonAriaLabel: "Submit",
					actionBarCancelSpeechInputButtonAriaLabel: "Cancel speech input/readout",
					actionBarEditModeButtonAriaLabel: "Edit mode",
					actionBarSpeechBtnStartListeningAriaLabel: "Start listening",
					actionBarSpeechBtnStopListeningAriaLabel: "Stop listening",
					actionBarSpeechBtnStopReadoutAriaLabel: "Stop readout",
					feedbackAccessed: "Accessed",
					feedbackSource: "Source: Conversation with Bing,",
					feedbackLikeButtonAriaLabel: "Like",
					feedbackDislikeButtonAriaLabel: "Dislike",
					feedbackOffensiveButtonAriaLabel: "Flag as offensive",
					feedbackCopyButtonAriaLabel: "Copy",
					feedbackShareButtonAriaLabel: "Share",
					feedbackShareAnswer: "Check out this Bing answer",
					feedbackShareGenerated: "Check out what I generated with Bing",
					serpfeedback: "Feedback",
					shareConversation: "Share entire conversation",
					speechFailedRecognitionError: "Sorry, I can't listen to you because the speech server is down, please try again later.",
					speechLoading: "Waiting for audio...",
					speechListening: "I'm listening...",
					speechMediaNotReachableError: "Sorry, I can't listen to you because you don't have an available microphone.",
					speechNoPermissionError: "You will need to enable the mic for me to hear you.",
					speechAudioPlaybackError: "Something went wrong",
					typingIndicatorStopStreamingAriaLabel: "Stop streaming",
					typingIndicatorStopRespondingAriaLabel: "Stop responding",
					warmWelcomeTitle: "Welcome to the new Bing",
					welcomeContainerPrivacyStatement: "Privacy statement",
					welcomeContainerUseTerms: "Terms of use",
					welcomeMessageItemTitle1: "🧐 Ask complex questions",
					welcomeMessageItemTitle2: "🙌 Get better answers",
					welcomeMessageItemTitle3: "🎨 Get creative inspiration",
					welcomeMessageItemContent1: "What are some meals I can make for my picky toddler who only eats orange-colored food?",
					welcomeMessageItemContent2: "What are the pros and cons of the top 3 selling pet vacuums?",
					welcomeMessageItemContent3: "Write a haiku about crocodiles in outer space in the voice of a pirate",
					welcomeSubtitleText: "Your AI-powered answer engine",
					welcomeTertiaryTitleText: "Use the power of AI to find answers from the web, create written content, and more.",
					welcomeLearnSegment1: "Let's learn together. Bing is powered by AI, so surprises and mistakes are possible. Make sure to check the facts, and ",
					welcomeLearnSegment2: "share feedback ",
					welcomeLearnSegment3: "so we can learn and improve!",
					feedbackFirstMessage: "Sorry that wasn't helpful to you. Can you tell me more about what you didn't like?",
					feedbackPromptMessage: "You can also give feedback about your experience or report a concern to Bing and we'll take a look!",
					feedbackPromptGiveFeedback: "Give feedback",
					feedbackPromptGiveFeedbackAriaLabel: "Give feedback",
					feedbackPromptReportAConcern: "Report a concern",
					feedbackShareConversationQuery: "What is the new Bing?",
					messageLearnMore: "Learn more:",
					messageSharedContent: "Shared Content",
					messageSentAriaLabelPrefix: "Sent message",
					messageReceivedAriaLabelPrefix: "Received message",
					metaInternalSearchQuery: "Searching for: `{0}`",
					metaInternalLoaderMessage: "Generating answers for you...",
					messageActionsCopy: "Copy",
					messageActionsCopying: "Copying",
					messageActionsCopied: "Copied",
					messageActionsCopyError: "Error",
					messageActionsReport: "Report",
					tooltipPositive: "Like",
					tooltipNegative: "Dislike",
					tooltipShare: "Share",
					tooltipMore: "More",
					newTopicPrompt: "New Topic lets you begin a fresh conversation with Bing on any subject",
					newTopicGreet1: "Thanks for clearing my head! What can I help you with now?",
					newTopicGreet2: "Great, let's change the subject. What's on your mind?",
					newTopicGreet3: "Thank you! It's always helpful to know when you're ready to move on. What can I answer for you now?",
					newTopicGreet4: "It's always great to start fresh. Ask me anything!",
					newTopicGreet5: "All right, I've reset my brain for a new conversation. What would you like to chat about now?",
					newTopicGreet6: "No problem, I'm glad you enjoyed our previous conversation. Let's move on to a new topic. What do you want to know more about?",
					newTopicGreet7: "Sure thing, I'm ready for a new challenge. What can I do for you now?",
					newTopicGreet8: "Okay, I've cleared the slate for a fresh start. What can I help you explore now?",
					newTopicGreet9: "Got it, I've erased the past and focused on the present. What shall we discover now?",
					newTopicGreet10: "Of course, I'm happy to start over. What can I assist you with now?",
					newTopicGreet11: "Alright, I've wiped the slate clean for a new conversation. What can I chat with you about now?",
					newTopicGreet12: "No worries, I'm excited to try something new. What can I answer for you now?",
					newTopicSugg1: "What is the world's smallest mammal?",
					newTopicSugg2: "Make me laugh",
					newTopicSugg3: "What's happening in the news?",
					newTopicSugg4: "Teach me a new word",
					newTopicSugg5: "Show me inspirational quotes",
					newTopicSugg6: "Tell me a joke",
					newTopicSugg7: "I need help with homework",
					newTopicSugg8: "Looking for a non-fiction",
					newTopicSugg9: "Inspire me!",
					newTopicSugg10: "Show me recipes",
					newTopicSugg11: "How can I create a budget?",
					newTopicSugg12: "Teach me a new word",
					newTopicSugg13: "What's the weather?",
					newTopicSugg14: "I want to learn a new skill",
					newTopicSugg15: "How do I set achievable goals?",
					newTopicSugg16: "How did the universe begin?",
					newTopicSugg17: "Why do humans need sleep?",
					newTopicSugg18: "How do l bake a cake?",
					newTopicSugg19: "Why are flamingo's pink?",
					newTopicSugg20: "How do holograms work?",
					newTopicSugg21: "How were the pyramids built?",
					newTopicSugg22: "Teach me about the moon landing",
					newTopicSugg23: "Which is deepest ocean?",
					newTopicSugg24: "How many hours are in a year?",
					newTopicSugg25: "I want to learn a new skill",
					newUserGreet: "Hi there, this is Bing. I'm here to help you find answers, learn new things, and have fun, all using the power of AI. What would you like to do today?",
					newUserSugg1: "Search the web",
					newUserSugg2: "Tell me a joke",
					newUserSugg3: "Write me a poem",
					repeatUserGreet: "Welcome back. I'm happy to see you again. What can I help you with today?",
					repeatUserSugg1: "What's the latest news",
					repeatUserSugg2: "Create a song",
					repeatUserSugg3: "Show me something cool",
					notiReConnect: "Attempting to reconnect...",
					notiChatEnd: "Chat topic ended.",
					notiRestartChat: "Start a new topic in {0} hour(s)",
					notiTooManyRequests: "Sorry there are too many requests to me right now, I am swamped! Can you try again in a few minutes?",
					notiNoContent: "Sorry, this service is not enabled for you.",
					notiUnauthorizedRequest: "Sorry, you are not authorized to access this. Could you try logging into your account again and retrying?",
					notiInternalServerError: "Sorry, there has been an internal server error. Can you refresh the page and try a new conversation?",
					notificationMaxTurnsPerDay: "Sorry, you’ve reached your daily limit to chat. Let’s pick up again tomorrow!"
			};
			var Qs;
			(function(e) {
					e[e.secureConversation = 0] = "secureConversation",
					e[e.enableMetaMessages = 1] = "enableMetaMessages",
					e[e.enableLearnMore = 2] = "enableLearnMore",
					e[e.enableCitations = 3] = "enableCitations",
					e[e.enableWelcomeScreen = 4] = "enableWelcomeScreen",
					e[e.enableShare = 5] = "enableShare",
					e[e.enableStopButton = 6] = "enableStopButton",
					e[e.enableAnswerCards = 7] = "enableAnswerCards",
					e[e.enableAds = 8] = "enableAds",
					e[e.enableTTSOnVoiceInput = 9] = "enableTTSOnVoiceInput",
					e[e.enableGhostedAutoSuggest = 10] = "enableGhostedAutoSuggest",
					e[e.enableTuringAutoSuggest = 11] = "enableTuringAutoSuggest",
					e[e.enableSuggHighTrigger = 12] = "enableSuggHighTrigger",
					e[e.enableShareConversation = 13] = "enableShareConversation",
					e[e.enableApplyLinkToHoverAds = 14] = "enableApplyLinkToHoverAds",
					e[e.enableSpeechInput = 15] = "enableSpeechInput",
					e[e.enablePassBotGreetingInContext = 16] = "enablePassBotGreetingInContext",
					e[e.enableUpdateInternalLinksToOpenOnEdge = 17] = "enableUpdateInternalLinksToOpenOnEdge",
					e[e.enableTextShare = 18] = "enableTextShare",
					e[e.enableOffensiveFeedback = 19] = "enableOffensiveFeedback",
					e[e.enableErrorStateNotification = 20] = "enableErrorStateNotification",
					e[e.enableHoverCardAttributionFavicons = 21] = "enableHoverCardAttributionFavicons",
					e[e.enableErrorStateToastNotificationResetButton = 22] = "enableErrorStateToastNotificationResetButton",
					e[e.enableErrorInstrumentaton = 23] = "enableErrorInstrumentaton"
			}
			)(Qs || (Qs = {}));
			const Zs = {
					secureConversation: !0,
					enableMetaMessages: !0,
					enableLearnMore: !0,
					enableCitations: !0,
					enableWelcomeScreen: !0,
					enableShare: !1,
					enableStopButton: !0,
					enableAnswerCards: !0,
					enableAds: !0,
					enableTTSOnVoiceInput: !0,
					enableGhostedAutoSuggest: !1,
					enableTuringAutoSuggest: !1,
					enableSuggHighTrigger: !1,
					enableShareConversation: !1,
					enableApplyLinkToHoverAds: !0,
					enableSpeechInput: !0,
					enablePassBotGreetingInContext: !0,
					enableUpdateInternalLinksToOpenOnEdge: !1,
					enableTextShare: !1,
					enableOffensiveFeedback: !1,
					enableErrorStateNotification: !1,
					enableHoverCardAttributionFavicons: !1,
					enableErrorStateToastNotificationResetButton: !1,
					enableErrorInstrumentaton: !1
			};
			class ConfigBuilder {
					constructor() {}
					static getConfig() {
							const e = ConfigBuilder.getLocationData();
							let t = "https://www.bing.com";
							new URLSearchParams(window.location.search).forEach(((e,n)=>{
									"testhooks" === n.toLowerCase() && (t = window.location.origin)
							}
							));
							let n = "/search?";
							if (new URLSearchParams(window.location.search).has("testhooks")) {
									const e = ["q", "showselans", "showadsonly"];
									new URLSearchParams(window.location.search).forEach(((t,i)=>{
											e.includes(i.toLowerCase()) || (n += `${i}=${t}&`)
									}
									))
							}
							return {
									features: Zs,
									messaging: {
											enableSyntheticStreaming: !0,
											attributionMatcher: /\[\^?\d+\^?\].+?"\n\n?/g,
											streamAnnRules: !0,
											streamCachedResponses: !0,
											messageBufferWorkerDefaultDelayMS: 2e3,
											messageBufferWorkerStreamDelayMS: 1e3 / 15
									},
									telemetry: {
											eventID: "Codex",
											instrumentedLinkName: "CodexInstLink",
											externalLinkName: "CodexInstExtLink",
											kSeedBase: 6500,
											kSeedIncrement: 500
									},
									ads: {
											baseUrl: t,
											path: n,
											query: {
													showonlyads: "1",
													codex_conid: "<<conversationId>>",
													codex_summ: "<<conversationSummary>>"
											}
									},
									answers: {
											baseUrl: t,
											path: n,
											query: {
													showselans: "1"
											},
											answerCardDimensionUpdateTimeout: 1e4
									},
									creator: {
											feedbackId: void 0
									},
									debug: {},
									demo: {},
									greeting: {
											adaptiveCard: [],
											shouldSendBotGreeting: !0,
											suggestionList: []
									},
									speech: {
											isEnabled: !0,
											baseUrl: "https://sr.bing.com",
											path: "/opaluqu/speech/recognition/interactive/cognitiveservices/v1",
											query: {
													clientbuild: "sydney",
													referer: encodeURIComponent(document.location.href).substring(0, 1e3),
													uqurequestid: "<<uqurequestid>>"
											},
											micPermissionProvider: void 0,
											textToSpeechProvider: createAudio
									},
									semserp: {
											isEnabled: !0,
											baseUrl: t,
											path: n,
											query: {
													p1: 'mustshow service="wholepagetemplate"',
													mkt: e.market,
													features: ["deepleoprewon", "sydneyxg", "deepleopostwon", "leowasth1", "deepleowannpon", "deepleostoryans", "wpsemserp", "wptempux"]
											}
									},
									suggestions: {
											isEnabled: !0,
											baseUrl: "https://www.bingapis.com",
											path: "/api/v7/suggestions",
											query: {
													appid: "B1513F135D0D1D1FC36E8C31C30A31BB25E804D0",
													setmkt: e.market
											}
									},
									textPrediction: {
											baseUrl: "https://turing-writingassistance.edge.microsoft.com/",
											pathAutoSuggest: "textprediction-v2/",
											lowTrigger: "en-v2-low-tr",
											highTrigger: "en-v2-high-tr",
											subscriptionKey: "c540f39b7c0541289123636852077ac6",
											query: {
													market: e.market
											}
									},
									bing: {
											sendClickBeacon: e=>{}
											,
											baseUrl: t,
											stagingUrl: "https://www.staging-bing-int.com",
											isVisualParityRun: !1,
											pathCreateConversation: "/turing/conversation/create",
											shouldShowConversation: !1
									},
									logging: {
											logLevel: Zo.Off
									},
									sydney: {
											baseUrl: "https://sydney.bing.com",
											pathBase: "/sydney",
											pathChat: "/Chat",
											pathChatHub: "/ChatHub",
											pathFeedback: "/SendFeedback",
											pathUpdateConversation: "/UpdateConversation",
											pathGetConversation: "/GetConversation",
											pathGetSharedMessages: "/GetSharedMessages",
											pathShareMessages: "/ShareMessages",
											queryGetConversation: {
													conversationId: "<<conversationId>>",
													source: "cib"
											},
											hostnamesToBypassSecureConnection: ["www.staging-bing-int.com", "cib-serp.azurewebsites.net", "cib-serp-dev.azurewebsites.net", "cib-serp-bugbash.azurewebsites.net", "localhost"],
											slottedModeTurnIndex: 0,
											retryConfigs: ConfigBuilder.getSydneyRetryConfigs(),
											request: {
													source: "cib",
													optionsSets: ["nlu_direct_response_filter", "deepleo", "enable_debug_commands", "disable_emoji_spoken_text", "responsible_ai_policy_235", "enablemm"],
													allowedMessageTypes: ConfigBuilder.getSydneyAllowedMessageTypes(),
													sliceIds: []
											},
											message: {
													...e
											},
											LOCATION_OF_HUMAN_PARAM: "LOCATION_OF_HUMAN",
											LOCATION_OF_HUMAN_VALUE: "Redmond, WA"
									},
									strings: Ks,
									links: Ys
							}
					}
					static getSydneyAllowedMessageTypes() {
							return [Ee.Chat, Ee.InternalSearchQuery, Ee.InternalSearchResult, Ee.InternalLoaderMessage, Ee.RenderCardRequest, Ee.AdsQuery, Ee.SemanticSerp]
					}
					static getSydneyRetryConfigs() {
							return {
									[Ko.EndChat]: 1,
									[Ko.Restart]: 3,
									[Ko.Retry]: 3,
									[Ko.Timeout]: 3,
									[Ko.ValidResponse]: 3,
									[Ko.Success]: 0,
									[Ko.MaxRetriesExceeded]: 0,
									[Ko.StaleMessage]: 3,
									[Ko.NetworkOffline]: 0,
									[Ko.FailedToConnect]: 3,
									[Ko.UnRecoverable]: 0
							}
					}
					static getLocationData() {
							var e;
							const t = null !== (e = window._G) && void 0 !== e ? e : {
									Lang: "en-US",
									Mkt: "en-US",
									Region: "US"
							};
							return {
									locale: t.Lang,
									market: t.Mkt,
									region: t.Region,
									location: "lat:47.639557;long:-122.128159;re=1000m;"
							}
					}
			}
			var Xs;
			class ConfigService extends lifecycle_Disposable {
					constructor() {
							super(),
							this.debug = {},
							this.demo = {},
							Xs.set(this, void 0),
							__classPrivateFieldSet(this, Xs, ConfigBuilder.getConfig(), "f")
					}
					get ads() {
							return __classPrivateFieldGet(this, Xs, "f").ads
					}
					get bing() {
							return __classPrivateFieldGet(this, Xs, "f").bing
					}
					get creator() {
							return __classPrivateFieldGet(this, Xs, "f").creator
					}
					get answers() {
							return __classPrivateFieldGet(this, Xs, "f").answers
					}
					get features() {
							return __classPrivateFieldGet(this, Xs, "f").features
					}
					get greeting() {
							return __classPrivateFieldGet(this, Xs, "f").greeting
					}
					get logging() {
							return __classPrivateFieldGet(this, Xs, "f").logging
					}
					get messaging() {
							return __classPrivateFieldGet(this, Xs, "f").messaging
					}
					get links() {
							return __classPrivateFieldGet(this, Xs, "f").links
					}
					get sydney() {
							return __classPrivateFieldGet(this, Xs, "f").sydney
					}
					get semserp() {
							return __classPrivateFieldGet(this, Xs, "f").semserp
					}
					get suggestions() {
							return __classPrivateFieldGet(this, Xs, "f").suggestions
					}
					get strings() {
							return __classPrivateFieldGet(this, Xs, "f").strings
					}
					get speech() {
							return __classPrivateFieldGet(this, Xs, "f").speech
					}
					get telemetry() {
							return __classPrivateFieldGet(this, Xs, "f").telemetry
					}
					get textPrediction() {
							return __classPrivateFieldGet(this, Xs, "f").textPrediction
					}
					buildUrl(e) {
							const {baseUrl: t, path: n, query: i} = e;
							let r;
							if (r = n ? new URL(n,t) : new URL(t),
							i)
									for (const e in i)
											if (Object.prototype.hasOwnProperty.call(i, e)) {
													const t = i[e];
													if (void 0 !== t)
															if (Array.isArray(t))
																	if ("features" === e)
																			r.searchParams.set(e, t.join(","));
																	else
																			for (const n of t)
																					r.searchParams.append(e, n);
															else
																	r.searchParams.set(e, t)
											}
							return r
					}
			}
			Xs = new WeakMap;
			Object.prototype.hasOwnProperty;
			function isFunction(e) {
					return "function" == typeof e
			}
			class ConsoleTextFragment {
					constructor(e, t="") {
							this.text = e,
							this.style = t
					}
					get textTemplate() {
							return "" !== this.style ? `%c${this.text}` : this.text
					}
					get textStyle() {
							return this.style
					}
			}
			const Js = new Map;
			Js.set(Zo.Trace, {
					logLevel: Zo.Trace,
					logMethod: console.debug,
					linePrefix: new ConsoleTextFragment(" TRACE","color: #888; margin-left: 10px;")
			}),
			Js.set(Zo.Debug, {
					logLevel: Zo.Debug,
					logMethod: console.info,
					linePrefix: new ConsoleTextFragment(" DEBUG","color: #888; margin-left: 10px; background: #eee;")
			}),
			Js.set(Zo.Info, {
					logLevel: Zo.Info,
					logMethod: console.info,
					linePrefix: new ConsoleTextFragment("  INFO","color: #33f; margin-left: 10px;")
			}),
			Js.set(Zo.Warning, {
					logLevel: Zo.Warning,
					logMethod: console.warn,
					linePrefix: new ConsoleTextFragment(" WARN","color: #993;")
			}),
			Js.set(Zo.Error, {
					logLevel: Zo.Error,
					logMethod: console.error,
					linePrefix: new ConsoleTextFragment("ERROR","color: #f33;")
			});
			let ea = class extends lifecycle_Disposable {
					constructor(e) {
							super(),
							this.config = e
					}
					trace(e, t, n, ...i) {
							return this.createBoundLogger(Zo.Trace, e, t, n, i)
					}
					debug(e, t, n, ...i) {
							return this.createBoundLogger(Zo.Debug, e, t, n, i)
					}
					info(e, t, n, ...i) {
							return this.createBoundLogger(Zo.Info, e, t, n, i)
					}
					warn(e, t, n, ...i) {
							return this.createBoundLogger(Zo.Warning, e, t, n, i)
					}
					error(e, t, n, ...i) {
							return this.createBoundLogger(Zo.Error, e, t, n, i)
					}
					createBoundLogger(e, t, n, i, r) {
							const o = {
									write() {}
							};
							let s = [];
							if (this.config.logging.logLevel <= e) {
									const a = function(e, t) {
											let n, i;
											"string" == typeof t && (i = t);
											if ("string" == typeof e)
													n = e;
											else if ("object" == typeof e && "function" == typeof e.constructor && (n = e.constructor.name,
											!i && "function" == typeof t && (i = t.name,
											!i)))
													for (const n in e)
															if (e.hasOwnProperty(n)) {
																	const r = e[n];
																	if (isFunction(r) && r === t) {
																			i = n;
																			break
																	}
															}
											return n || (n = "UnknownSource"),
											i || (i = "UnknownCaller"),
											`${n}:${i}`
									}(t, n)
										, l = Js.get(e);
									if (s = function(e, t, n, i) {
											const r = function(e, t, n) {
													const i = function(e) {
															const t = getSegmentFragments("cib", "color: orange; font-weight: bold;", !0);
															return t.push(...function(e) {
																	const t = [];
																	if (e && null !== e) {
																			const n = e.split(":");
																			for (let e = 0; e < n.length; e++) {
																					const i = Math.min(e, ta.length - 1);
																					t.push(...getSegmentFragments(n[e], `color: ${ta[i]};`))
																			}
																	}
																	return t
															}(e)),
															t
													}(t);
													i.unshift(e);
													const r = [""];
													i.forEach((e=>function(e, t) {
															e[0] += t.textTemplate,
															"" !== t.textStyle && e.push(t.textStyle)
													}(r, e))),
													n && null !== n && (r[0] += ":",
													r.push(`${n}`));
													return r
											}(e.linePrefix, t, n);
											return r.push(...i),
											r
									}(l, a, i, r),
									o.write = l.logMethod.bind(this, ...s),
									this.config.bing.isVisualParityRun)
											try {
													JSON.stringify([this, s])
											} catch (e) {
													o.write = ()=>{
															console.error("Error serializing log arguments. This will break in SNR.", e)
													}
											}
							}
							return o
					}
			}
			;
			ea = __decorate([__param(0, Yo), __metadata("design:paramtypes", [Object])], ea);
			const ta = ["#00f", "#007", "#004", "#002"];
			const na = new ConsoleTextFragment("[","color: black; margin-left: 10px;");
			function getSegmentFragments(e, t, n=!1) {
					return [n ? na : new ConsoleTextFragment(":["), new ConsoleTextFragment(e,t), new ConsoleTextFragment("]","color: black;")]
			}
			const ia = Object.freeze((function(e, t) {
					const n = setTimeout(e.bind(t), 0);
					return {
							dispose() {
									clearTimeout(n)
							}
					}
			}
			));
			var ra;
			(function(e) {
					e.isCancellationToken = function(t) {
							return t === e.None || t === e.Cancelled || (t instanceof MutableToken || !(!t || "object" != typeof t) && ("boolean" == typeof t.isCancellationRequested && "function" == typeof t.onCancellationRequested))
					}
					,
					e.None = Object.freeze({
							isCancellationRequested: !1,
							onCancellationRequested: Gs.None
					}),
					e.Cancelled = Object.freeze({
							isCancellationRequested: !0,
							onCancellationRequested: ia
					})
			}
			)(ra || (ra = {}));
			class MutableToken {
					constructor() {
							this._isCancelled = !1,
							this._emitter = null
					}
					cancel() {
							this._isCancelled || (this._isCancelled = !0,
							this._emitter && (this._emitter.fire(void 0),
							this.dispose()))
					}
					get isCancellationRequested() {
							return this._isCancelled
					}
					get onCancellationRequested() {
							return this._isCancelled ? ia : (this._emitter || (this._emitter = new Emitter),
							this._emitter.event)
					}
					dispose() {
							this._emitter && (this._emitter.dispose(),
							this._emitter = null)
					}
			}
			let oa, sa = !1, aa = !1, la = !1, ca = !1, da = !1, pa = !1;
			const ua = "object" == typeof self ? self : "object" == typeof __webpack_require__.g ? __webpack_require__.g : {};
			var ha;
			"object" == typeof navigator ? (oa = navigator.userAgent,
			sa = oa.indexOf("Windows") >= 0,
			aa = oa.indexOf("Macintosh") >= 0,
			da = (oa.indexOf("Macintosh") >= 0 || oa.indexOf("iPad") >= 0 || oa.indexOf("iPhone") >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0,
			la = oa.indexOf("Linux") >= 0,
			pa = (null == oa ? void 0 : oa.indexOf("Mobi")) >= 0,
			ca = !0) : console.error("Unable to resolve platform."),
			function(e) {
					e[e.Web = 0] = "Web",
					e[e.Mac = 1] = "Mac",
					e[e.Linux = 2] = "Linux",
					e[e.Windows = 3] = "Windows"
			}(ha || (ha = {}));
			let ma = 0;
			aa ? ma = 1 : sa ? ma = 3 : la && (ma = 2);
			const ga = sa
				, _a = aa
				, fa = (ca && ua.importScripts,
			oa)
				, ya = "en";
			var va;
			(function(e) {
					e.value = function() {
							return ya
					}
					,
					e.isDefaultVariant = function() {
							return 2 === ya.length || ya.length >= 3 && ("e" === ya[0] && "n" === ya[1] && "-" === ya[2])
					}
					,
					e.isDefault = function() {
							return !0
					}
			}
			)(va || (va = {}));
			const ba = "function" == typeof ua.postMessage && !ua.importScripts
				, Sa = (()=>{
					if (ba) {
							const e = [];
							ua.addEventListener("message", (t=>{
									if (t.data && t.data.vscodeScheduleAsyncWork)
											for (let n = 0, i = e.length; n < i; n++) {
													const i = e[n];
													if (i.id === t.data.vscodeScheduleAsyncWork)
															return e.splice(n, 1),
															void i.callback()
											}
							}
							));
							let t = 0;
							return n=>{
									const i = ++t;
									e.push({
											id: i,
											callback: n
									}),
									ua.postMessage({
											vscodeScheduleAsyncWork: i
									}, "*")
							}
					}
					return e=>setTimeout(e)
			}
			)();
			var Ca;
			(function(e) {
					e[e.Windows = 1] = "Windows",
					e[e.Macintosh = 2] = "Macintosh",
					e[e.Linux = 3] = "Linux"
			}
			)(Ca || (Ca = {}));
			const Ea = !!(fa && fa.indexOf("Chrome") >= 0);
			fa && fa.indexOf("Firefox"),
			!Ea && fa && fa.indexOf("Safari"),
			fa && fa.indexOf("Edg/"),
			fa && fa.indexOf("Android");
			const Ta = Symbol("MicrotaskDelay");
			class Delayer {
					constructor(e) {
							this.defaultDelay = e,
							this.deferred = null,
							this.completionPromise = null,
							this.doResolve = null,
							this.doReject = null,
							this.task = null
					}
					trigger(e, t=this.defaultDelay) {
							this.task = e,
							this.cancelTimeout(),
							this.completionPromise || (this.completionPromise = new Promise(((e,t)=>{
									this.doResolve = e,
									this.doReject = t
							}
							)).then((()=>{
									if (this.completionPromise = null,
									this.doResolve = null,
									this.task) {
											const e = this.task;
											return this.task = null,
											e()
									}
							}
							)));
							const fn = ()=>{
									var e;
									this.deferred = null,
									null === (e = this.doResolve) || void 0 === e || e.call(this, null)
							}
							;
							return this.deferred = t === Ta ? (e=>{
									let t = !0;
									return queueMicrotask((()=>{
											t && (t = !1,
											e())
									}
									)),
									{
											isTriggered: ()=>t,
											dispose: ()=>{
													t = !1
											}
									}
							}
							)(fn) : ((e,t)=>{
									let n = !0;
									const i = setTimeout((()=>{
											n = !1,
											t()
									}
									), e);
									return {
											isTriggered: ()=>n,
											dispose: ()=>{
													clearTimeout(i),
													n = !1
											}
									}
							}
							)(t, fn),
							this.completionPromise
					}
					isTriggered() {
							var e;
							return !!(null === (e = this.deferred) || void 0 === e ? void 0 : e.isTriggered())
					}
					cancel() {
							var e;
							this.cancelTimeout(),
							this.completionPromise && (null === (e = this.doReject) || void 0 === e || e.call(this, new errors_CancellationError),
							this.completionPromise = null)
					}
					cancelTimeout() {
							var e;
							null === (e = this.deferred) || void 0 === e || e.dispose(),
							this.deferred = null
					}
					dispose() {
							this.cancel()
					}
			}
			class Limiter {
					constructor(e) {
							this._size = 0,
							this.maxDegreeOfParalellism = e,
							this.outstandingPromises = [],
							this.runningPromises = 0,
							this._onDrained = new Emitter
					}
					get onDrained() {
							return this._onDrained.event
					}
					get size() {
							return this._size
					}
					queue(e) {
							return this._size++,
							new Promise(((t,n)=>{
									this.outstandingPromises.push({
											factory: e,
											c: t,
											e: n
									}),
									this.consume()
							}
							))
					}
					purge() {
							this.outstandingPromises.length = 0,
							this._size = 0
					}
					consume() {
							for (; this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism; ) {
									const e = this.outstandingPromises.shift();
									this.runningPromises++;
									const t = e.factory();
									t.then(e.c, e.e),
									t.then((()=>this.consumed()), (()=>this.consumed()))
							}
					}
					consumed() {
							this._size--,
							this.runningPromises--,
							this.outstandingPromises.length > 0 ? this.consume() : this._onDrained.fire()
					}
					dispose() {
							this._onDrained.dispose()
					}
			}
			class async_Queue extends Limiter {
					constructor() {
							super(1)
					}
			}
			let Ia;
			Ia = "function" != typeof requestIdleCallback || "function" != typeof cancelIdleCallback ? e=>{
					Sa((()=>{
							if (t)
									return;
							const n = Date.now() + 15;
							e(Object.freeze({
									didTimeout: !0,
									timeRemaining: ()=>Math.max(0, n - Date.now())
							}))
					}
					));
					let t = !1;
					return {
							dispose() {
									t || (t = !0)
							}
					}
			}
			: (e,t)=>{
					const n = requestIdleCallback(e, "number" == typeof t ? {
							timeout: t
					} : void 0);
					let i = !1;
					return {
							dispose() {
									i || (i = !0,
									cancelIdleCallback(n))
							}
					}
			}
			;
			class DeferredPromise {
					constructor() {
							this.rejected = !1,
							this.resolved = !1,
							this.p = new Promise(((e,t)=>{
									this.completeCallback = e,
									this.errorCallback = t
							}
							))
					}
					get isRejected() {
							return this.rejected
					}
					get isResolved() {
							return this.resolved
					}
					get isSettled() {
							return this.rejected || this.resolved
					}
					complete(e) {
							return new Promise((t=>{
									this.completeCallback(e),
									this.resolved = !0,
									t()
							}
							))
					}
					error(e) {
							return new Promise((t=>{
									this.errorCallback(e),
									this.rejected = !0,
									t()
							}
							))
					}
					cancel() {
							new Promise((e=>{
									this.errorCallback(new errors_CancellationError),
									this.rejected = !0,
									e()
							}
							))
					}
			}
			var wa, Aa;
			(function(e) {
					e.settled = async function(e) {
							let t;
							const n = await Promise.all(e.map((e=>e.then((e=>e), (e=>{
									t || (t = e)
							}
							)))));
							if (void 0 !== t)
									throw t;
							return n
					}
					,
					e.withAsyncBody = function(e) {
							return new Promise((async(t,n)=>{
									try {
											await e(t, n)
									} catch (e) {
											n(e)
									}
							}
							))
					}
			}
			)(wa || (wa = {})),
			function(e) {
					e[e.Initial = 0] = "Initial",
					e[e.DoneOK = 1] = "DoneOK",
					e[e.DoneError = 2] = "DoneError"
			}(Aa || (Aa = {}));
			class AsyncIterableObject {
					constructor(e) {
							this._state = 0,
							this._results = [],
							this._error = null,
							this._onStateChanged = new Emitter,
							queueMicrotask((async()=>{
									const t = {
											emitOne: e=>this.emitOne(e),
											emitMany: e=>this.emitMany(e),
											reject: e=>this.reject(e)
									};
									try {
											await Promise.resolve(e(t)),
											this.resolve()
									} catch (e) {
											this.reject(e instanceof Error ? e : new Error(`${e}`))
									} finally {
											t.emitOne = void 0,
											t.emitMany = void 0,
											t.reject = void 0
									}
							}
							))
					}
					static fromArray(e) {
							return new AsyncIterableObject((t=>{
									t.emitMany(e)
							}
							))
					}
					static fromPromise(e) {
							return new AsyncIterableObject((async t=>{
									t.emitMany(await e)
							}
							))
					}
					static fromPromises(e) {
							return new AsyncIterableObject((async t=>{
									await Promise.all(e.map((async e=>t.emitOne(await e))))
							}
							))
					}
					static merge(e) {
							return new AsyncIterableObject((async t=>{
									await Promise.all(e.map((async e=>{
											for await(const n of e)
													t.emitOne(n)
									}
									)))
							}
							))
					}
					[Symbol.asyncIterator]() {
							let e = 0;
							return {
									next: async()=>{
											for (; ; ) {
													if (2 === this._state)
															throw this._error;
													if (e < this._results.length)
															return {
																	done: !1,
																	value: this._results[e++]
															};
													if (1 === this._state)
															return {
																	done: !0,
																	value: void 0
															};
													await Gs.toPromise(this._onStateChanged.event)
											}
									}
							}
					}
					static map(e, t) {
							return new AsyncIterableObject((async n=>{
									for await(const i of e)
											n.emitOne(t(i))
							}
							))
					}
					map(e) {
							return AsyncIterableObject.map(this, e)
					}
					static filter(e, t) {
							return new AsyncIterableObject((async n=>{
									for await(const i of e)
											t(i) && n.emitOne(i)
							}
							))
					}
					filter(e) {
							return AsyncIterableObject.filter(this, e)
					}
					static coalesce(e) {
							return AsyncIterableObject.filter(e, (e=>!!e))
					}
					coalesce() {
							return AsyncIterableObject.coalesce(this)
					}
					static async toPromise(e) {
							const t = [];
							for await(const n of e)
									t.push(n);
							return t
					}
					toPromise() {
							return AsyncIterableObject.toPromise(this)
					}
					emitOne(e) {
							0 === this._state && (this._results.push(e),
							this._onStateChanged.fire())
					}
					emitMany(e) {
							0 === this._state && (this._results = this._results.concat(e),
							this._onStateChanged.fire())
					}
					resolve() {
							0 === this._state && (this._state = 1,
							this._onStateChanged.fire())
					}
					reject(e) {
							0 === this._state && (this._state = 2,
							this._error = e,
							this._onStateChanged.fire())
					}
			}
			AsyncIterableObject.EMPTY = AsyncIterableObject.fromArray([]);
			const Ra = P.createInterface("IChatStreamHandler");
			var xa;
			(function(e) {
					e[e.Text = 0] = "Text",
					e[e.Speech = 1] = "Speech"
			}
			)(xa || (xa = {}));
			const Oa = P.createInterface();
			var Na, Pa, Da, Ma, La, ka, Fa, Ba;
			(function(e) {
					e.OK = "ok",
					e.NetworkFailure = "failure",
					e.NetworkOffline = "offline"
			}
			)(Na || (Na = {})),
			function(e) {
					e.OK = "ok",
					e.ChatDisabled = "disabled",
					e.ChatSuspended = "suspended",
					e.UnRecoverable = "unrecoverable"
			}(Pa || (Pa = {})),
			function(e) {
					e[e.Idle = 0] = "Idle",
					e[e.PendingRequest = 1] = "PendingRequest",
					e[e.PendingResponse = 2] = "PendingResponse",
					e[e.Canceling = 3] = "Canceling"
			}(Ba || (Ba = {}));
			let Ga = class extends lifecycle_Disposable {
					constructor(e, t, n, i, r, o, s, a) {
							var l;
							super(),
							this.config = e,
							this.conversation = t,
							this.stream = n,
							this.speech = i,
							this.api = r,
							this.errorState = o,
							this.telemetry = s,
							this.log = a,
							Da.set(this, ""),
							Ma.set(this, ""),
							this._state = Ba.Idle,
							La.set(this, this._register(new Emitter)),
							this.isRequestPending = !1,
							ka.set(this, this._register(new Emitter)),
							Fa.set(this, this._register(new Emitter)),
							this.requestQueue = this._register(new async_Queue),
							this.retryCountMap = this.config.sydney.retryConfigs,
							this.useStreaming = !0,
							this.retryCount = 0,
							this.requestToken = new DeferredPromise,
							this.bufferDelayer = this._register(new Delayer(this.config.messaging.messageBufferWorkerDefaultDelayMS)),
							this.messageBuffer = this._register(new async_Queue),
							this.handleConversationReset = ()=>{
									var e;
									null === (e = this.log) || void 0 === e || e.trace(this, this.handleConversationReset, null).write(),
									__classPrivateFieldSet(this, Da, "", "f"),
									__classPrivateFieldSet(this, Ma, "", "f")
							}
							,
							this.handleStreamBegin = ()=>{
									this.isRequestPending = !0
							}
							,
							this.handleStreamUpdate = e=>{
									e.type = fe.GetMessagesResponse,
									this.processResponse(e)
							}
							,
							this.handleStreamResponse = e=>{
									e.type = fe.ChatResponse,
									this.processResponse(e),
									this.isRequestPending = !1
							}
							,
							this.handleTextStreamComplete = ()=>{
									__classPrivateFieldGet(this, Fa, "f").fire(xa.Text)
							}
							,
							this.handleSpeechStreamComplete = ()=>{
									__classPrivateFieldGet(this, Fa, "f").fire(xa.Speech)
							}
							,
							null === (l = this.log) || void 0 === l || l.trace(this, "ctor", null).write(),
							this.attachStreamEventListeners()
					}
					get state() {
							return this._state
					}
					set state(e) {
							var t;
							this._state !== e && (null === (t = this.log) || void 0 === t || t.trace(this, "state:set", `${Ba[this._state]} -> ${Ba[e]}`).write(),
							this._state = e)
					}
					get onPendingRequestStateChanged() {
							return __classPrivateFieldGet(this, La, "f").event
					}
					isRequestPendingChanged(e, t) {
							__classPrivateFieldGet(this, La, "f").fire(t)
					}
					registerContext(e) {
							var t;
							if (null == e ? void 0 : e.length) {
									if (null === (t = this.pendingContext) || void 0 === t ? void 0 : t.length)
											for (const t of e)
													t.messageType !== Ee.Ads && this.pendingContext.push(t);
									else
											this.pendingContext = e;
									this.conversation.isExpired || this.conversation.state !== $s.Active || queueMicrotask((async()=>await this.tryApplyPendingContextAsync()))
							}
					}
					async tryApplyPendingContextAsync() {
							const e = this.flushPendingContext();
							e && await this.updateConversationAsync(e)
					}
					flushPendingContext() {
							let e;
							return this.pendingContext && (e = this.pendingContext,
							this.pendingContext = void 0),
							e
					}
					async updateConversationAsync(e) {
							var t, n, i;
							null === (t = this.log) || void 0 === t || t.trace(this, this.updateConversationAsync, `sending ${e.length} messages`).write();
							let r = null
								, o = null;
							const s = this.genTraceId();
							try {
									const {baseUrl: t, pathBase: i, pathUpdateConversation: a, request: l} = this.config.sydney;
									r = new URL(`${t}${i}${a}`);
									const c = {
											headers: [["Content-Type", "application/json"]],
											method: "POST",
											body: JSON.stringify({
													messages: e,
													conversationId: this.conversation.id,
													source: l.source,
													traceId: s
											})
									};
									if (r && (o = await fetch(r, c)),
									!o || !o.ok)
											throw new Error("Update conversation failed.");
									null === (n = this.log) || void 0 === n || n.trace(this, this.updateConversationAsync, "success").write(),
									this.errorState.setAppErrorState()
							} catch (e) {
									const t = e instanceof Error ? e : "Conversation update failed.";
									throw this.trackInternetErrorEvent("SystemEvent", null, o, e, {
											requestUrl: null == r ? void 0 : r.href,
											traceId: s,
											convId: this.conversation.id
									}),
									this.errorState.setAppErrorState(Na.NetworkFailure),
									null === (i = this.log) || void 0 === i || i.error(this, "updateConversationAsync", t).write(),
									e
							}
					}
					get onMessage() {
							return __classPrivateFieldGet(this, ka, "f").event
					}
					get onStreamingComplete() {
							return __classPrivateFieldGet(this, Fa, "f").event
					}
					cancelPendingRequest() {
							var e;
							null === (e = this.log) || void 0 === e || e.trace(this, this.cancelPendingRequest, null).write(),
							this.isRequestPending = !1,
							[Ba.PendingRequest, Ba.PendingResponse].includes(this.state) && (this.state = Ba.Canceling,
							this.requestQueue.purge(),
							this.stream.cancelPendingRequest(),
							this.requestToken.complete())
					}
					clearPendingContext() {
							this.pendingContext = []
					}
					submitMessage(e) {
							this.enqueueMessageInternal(e)
					}
					submitSearchQuery(e) {
							if (1 !== this.conversation.messages.length)
									throw new Error("IChatService.submitSearchQuery can only be called as the first message of conversation.");
							this.enqueueMessageInternal(e, Ee.SearchQuery)
					}
					enqueueMessageInternal(e, t) {
							this.state !== Ba.Idle || this.errorState.isChatDisabled() || (this.state = Ba.PendingRequest,
							this.conversation.setPending(),
							this.isRequestPending = !0,
							this.enqueueRequestAsync(e, t))
					}
					async enqueueRequestAsync(e, t) {
							await this.requestQueue.queue((()=>this.processRequestAsync(e, t)))
					}
					async processRequestAsync(e, t) {
							var n;
							let i = null;
							try {
									this.requestToken = new DeferredPromise,
									this.retryCount = 0,
									i = await this.createChatRequestAsync(e, void 0, t),
									this.state = Ba.PendingResponse,
									this.errorState.setAppErrorState(Na.OK),
									this.useStreaming ? this.requestStreamedResponseAsync(i) : this.requestBatchedResponseAsync(i),
									await this.requestToken.p
							} catch (r) {
									null === (n = this.log) || void 0 === n || n.error(this, this.processRequestAsync, "request failed:", r).write(),
									this.trackInternetErrorEvent("SystemEvent", i, null, r, {
											messageObject: JSON.stringify({
													text: e,
													messageType: t
											})
									}),
									this.errorState.setAppErrorState(Na.NetworkOffline)
							} finally {
									this.state = this.requestQueue.size > 1 ? Ba.PendingRequest : Ba.Idle
							}
					}
					async requestStreamedResponseAsync(e) {
							try {
									await this.stream.handleStreamEventsAsync(e),
									this.requestToken.complete(),
									this.telemetry.trackEvent("SystemEvent", "ChatApiPerf", {
											Namespace: "Conversation",
											CustomData: JSON.stringify({
													attempt: this.retryCount,
													payload: "suc"
											})
									})
							} catch (t) {
									if (t === Ko.UnRecoverable)
											this.errorState.setChatErrorState(Pa.UnRecoverable);
									else {
											const n = this.checkRetryPolicy(t);
											this.telemetry.trackEvent("MessageEvent", "ChatApiPerf", {
													Namespace: "Conversation",
													CustomData: JSON.stringify({
															attempt: this.retryCount,
															lastAttempt: !n,
															payload: null == t ? void 0 : t.toString().slice(0, 128)
													})
											}),
											this.trackInternetErrorEvent("SystemEvent", e, null, t, {
													messageObject: JSON.stringify(e.message)
											}),
											n && queueMicrotask((()=>{
													this.requestStreamedResponseAsync(e)
											}
											))
									}
							}
					}
					checkRetryPolicy(e) {
							const t = [Ko.Restart, Ko.Retry, Ko.EndChat].includes(e)
								, n = ++this.retryCount <= this.retryCountMap[e]
								, i = t && n;
							return i ? e === Ko.Restart && this.conversation.resetState() : (this.requestQueue.purge(),
							this.requestToken.error(new Error("Request failed"))),
							i
					}
					async requestBatchedResponseAsync(e) {
							var t;
							try {
									const t = await this.api.sydney.chat.post(e);
									t.type = fe.ChatResponse,
									this.processResponse(t)
							} catch (e) {
									throw null === (t = this.log) || void 0 === t || t.error(this, this.requestBatchedResponseAsync, "error:", e).write(),
									e
							}
					}
					processResponse(e) {
							var t, n, i, r, o;
							e.type !== fe.GetMessagesResponse && (null === (t = this.log) || void 0 === t || t.trace(this, this.processResponse, "response:", e).write());
							try {
									this.validateResponse(e),
									this.checkFateUserMessage(e)
							} catch (t) {
									return void (null === (n = this.log) || void 0 === n || n.error(this, this.processResponse, "response validation failed:", e, t).write())
							}
							if (null === (i = e.messages) || void 0 === i ? void 0 : i.length) {
									const {messages: t} = e
										, n = function(e) {
											return "number" == typeof e.firstNewMessageIndex
									}(e) ? e.firstNewMessageIndex : 0
										, i = t.length - n
										, s = function(e) {
											return "string" == typeof e.requestId
									}(e) ? e.requestId : this.genLocalIdentifier();
									for (let a = n; a < t.length; a++) {
											const n = t[a];
											switch (null !== (r = n.messageId) && void 0 !== r || (n.messageId = this.genLocalIdentifier()),
											null !== (o = n.requestId) && void 0 !== o || (n.requestId = s),
											n.responseType = e.type,
											e.type) {
											case fe.GetSharedMessagesResponse:
													n.isShared = n.author === ve.Bot;
											case fe.GetConversationResponse:
											case fe.SerpCachedResponse:
													n.isFromCache = !0,
													this.config.messaging.streamCachedResponses && (n.genStream = n.messageType === Ee.IncomingBotResponse);
													break;
											case fe.ChatResponse:
													this.config.messaging.streamAnnRules && (n.genStream = isAnnRules(n) && 1 === i);
											case fe.GetMessagesResponse:
											}
											n.messageType === Ee.AdsQuery && n.requestId !== s && (n.requestId = s),
											this.addToBuffer(n)
									}
							}
							switch (e.type) {
							case fe.ChatResponse:
									this.updateConversationData(e);
									break;
							case fe.SerpCachedResponse:
							case fe.GetConversationResponse:
							case fe.GetSharedMessagesResponse:
									this.registerContext(e.messages);
							case fe.GetMessagesResponse:
							}
							e.type !== fe.GetMessagesResponse && setTimeout((()=>this.finalizeRequest()))
					}
					genLocalIdentifier() {
							return `local-gen-${CoreUtils.uuid()}`
					}
					finalizeRequest() {
							var e, t;
							this.isRequestPending = !1;
							const n = this.conversation.messages.length - 1 >= 0 ? null === (e = this.conversation.messages[this.conversation.messages.length - 1]) || void 0 === e ? void 0 : e.finalize() : void 0;
							null === (t = this.log) || void 0 === t || t.trace(this, this.finalizeRequest, "finalizing last:", n).write()
					}
					updateConversationData(e) {
							e.conversationId && e.conversationExpiryTime && this.conversation.updateId(e.conversationId, e.conversationExpiryTime)
					}
					validateResponse(e) {
							var t, n;
							if (![fe.GetMessagesResponse, fe.SerpCachedResponse].includes(e.type) && (null === (t = e.result) || void 0 === t ? void 0 : t.value) !== ye.Success)
									throw new Error(`Unexpected result value: ${null === (n = e.result) || void 0 === n ? void 0 : n.value}`)
					}
					checkFateUserMessage(e) {
							var t;
							if (null === (t = e.messages) || void 0 === t ? void 0 : t.length) {
									const t = e.messages.map((e=>e.author === ve.User && e.offense === we.Offensive)).filter((e=>e)).length;
									this.errorState.increamentFateCounter(t)
							}
					}
					addToBuffer(e) {
							if (e.genStream && this.config.messaging.enableSyntheticStreaming)
									for (const t of this.tryGenerateMessageStream(e))
											this.messageBuffer.queue((()=>this.processMessageBufferAsync(t)));
							this.messageBuffer.queue((()=>this.processMessageBufferAsync(e)))
					}
					async processMessageBufferAsync(e) {
							let t = 0;
							this.isPreviousGenStream ? t = this.config.messaging.messageBufferWorkerStreamDelayMS : this.isPreviousFromCache && [Ee.IncomingBotResponse, Ee.InternalSearchQuery, Ee.InternalLoaderMessage].includes(e.messageType) && (t = this.config.messaging.messageBufferWorkerDefaultDelayMS),
							await this.bufferDelayer.trigger((()=>__classPrivateFieldGet(this, ka, "f").fire(e)), t),
							this.isPreviousFromCache = e.isFromCache,
							this.isPreviousGenStream = e.genStream
					}
					loadCachedResponse(e) {
							var t, n;
							null === (t = this.log) || void 0 === t || t.trace(this, this.loadCachedResponse, null, e).write();
							try {
									this.isRequestPending = !0,
									this.processResponse(e)
							} catch (e) {
									throw null === (n = this.log) || void 0 === n || n.error(this, this.loadCachedResponse, "error:", e).write(),
									e
							} finally {
									this.isRequestPending = !1
							}
					}
					async loadSharedMessagesAsync(e) {
							var t, n, i;
							null === (t = this.log) || void 0 === t || t.trace(this, this.loadSharedMessagesAsync, "enter").write();
							try {
									this.isRequestPending = !0;
									const {source: t, sliceIds: i} = this.config.sydney.request
										, r = await this.api.sydney.sharing.getSharedMessagesAsync(e, t, this.genTraceId(), i);
									r.type = fe.GetSharedMessagesResponse,
									null === (n = this.log) || void 0 === n || n.trace(this, this.loadSharedMessagesAsync, "result", r).write(),
									this.processResponse(r)
							} catch (e) {
									throw null === (i = this.log) || void 0 === i || i.error(this, this.loadSharedMessagesAsync, "error:", e).write(),
									e
							} finally {
									this.isRequestPending = !1
							}
					}
					async loadConversationAsync(e) {
							var t, n, i;
							null === (t = this.log) || void 0 === t || t.trace(this, this.loadConversationAsync, "enter", e).write();
							try {
									this.isRequestPending = !0;
									const {baseUrl: t, pathBase: i, pathGetConversation: r, queryGetConversation: o} = this.config.sydney
										, s = new URL(`${t}${i}${r}`);
									for (const t in o)
											if (Object.prototype.hasOwnProperty.call(o, t)) {
													const n = o[t];
													"<<conversationId>>" === n ? s.searchParams.set(t, e) : s.searchParams.set(t, n)
											}
									const a = await fetch(s);
									if (!a.ok)
											throw new Error("Load conversation failed.");
									{
											null === (n = this.log) || void 0 === n || n.trace(this, this.loadConversationAsync, "success").write();
											const e = await a.json();
											e.type = fe.GetConversationResponse,
											this.processResponse(e)
									}
							} catch (e) {
									const t = e instanceof Error ? e : "Conversation load failed.";
									throw null === (i = this.log) || void 0 === i || i.error(this, "loadConversationAsync", t).write(),
									e
							} finally {
									this.isRequestPending = !1
							}
					}
					async createChatRequestAsync(e, t=Ce.Keyboard, n=Ee.Chat) {
							var i;
							let r = this.conversation.isExpired;
							this.conversation.state === $s.Inactive && (r = !0,
							this.conversation.setPending());
							const o = {
									...this.config.sydney.request,
									isStartOfSession: r,
									message: {
											...this.config.sydney.message,
											author: ve.User,
											inputMethod: t,
											text: e,
											messageType: n
									}
							};
							if (this.config.features.secureConversation && await this.secureConversationAsync(o),
							o.conversationId = this.conversation.id,
							r) {
									const e = this.flushPendingContext();
									e && (o.previousMessages = e)
							}
							return null === (i = this.log) || void 0 === i || i.trace(this, this.createChatRequestAsync, "request:", o).write(),
							o
					}
					async secureConversationAsync(e) {
							var t, n, i, r;
							if (null === (t = this.log) || void 0 === t || t.trace(this, this.secureConversationAsync, "enter").write(),
							this.config.sydney.hostnamesToBypassSecureConnection.includes(window.location.hostname))
									return null === (n = this.log) || void 0 === n || n.trace(this, this.secureConversationAsync, "exiting - hostname is allowed to bypass").write(),
									void (e.isStartOfSession && this.conversation.updateId(CoreUtils.uuid(), this.in20Minutes()));
							if (!this.conversation.isExpired && this.conversation.state !== $s.Inactive && !__classPrivateFieldGet(this, Da, "f"))
									throw new Error("Invalid conversation state.");
							if (!__classPrivateFieldGet(this, Da, "f") || !this.conversation.id) {
									let e = null;
									try {
											e = await this.api.bing.createConversation.get(),
											null !== e && (this.validateBingCreateConversationResponse(e),
											__classPrivateFieldSet(this, Da, e.conversationSignature, "f"),
											__classPrivateFieldSet(this, Ma, e.clientId, "f"),
											this.conversation.updateId(e.conversationId, this.in20Minutes())),
											null === (i = this.log) || void 0 === i || i.trace(this, this.secureConversationAsync, "result:", e).write()
									} catch (t) {
											throw null === (r = this.log) || void 0 === r || r.error(this, this.secureConversationAsync, "error:", t).write(),
											this.trackInternetErrorEvent("SystemEvent", null, null, t, {
													responseMessage: JSON.stringify(null == e ? void 0 : e.result)
											}),
											t
									}
							}
							e.conversationSignature = __classPrivateFieldGet(this, Da, "f"),
							__classPrivateFieldGet(this, Ma, "f") && (e.participant = {
									id: __classPrivateFieldGet(this, Ma, "f")
							})
					}
					in20Minutes() {
							const e = new Date;
							return e.setMinutes(e.getMinutes() + 20),
							e
					}
					validateBingCreateConversationResponse(e) {
							if (!e.conversationId)
									throw new Error("Create conversation failed: conversation ID.");
							if (!e.conversationSignature)
									throw new Error("Create conversation failed: signature.");
							if (!e.clientId)
									throw new Error("Create conversation failed: client id.")
					}
					attachStreamEventListeners() {
							this._register(this.stream.onBegin(this.handleStreamBegin)),
							this._register(this.stream.onUpdate(this.handleStreamUpdate)),
							this._register(this.stream.onResponse(this.handleStreamResponse)),
							this._register(this.stream.onComplete(this.handleTextStreamComplete)),
							this._register(this.speech.onBegin(this.handleStreamBegin)),
							this._register(this.speech.onUpdate(this.handleStreamUpdate)),
							this._register(this.speech.onResponse(this.handleStreamResponse)),
							this._register(this.speech.onComplete(this.handleSpeechStreamComplete)),
							this._register(this.conversation.onReset(this.handleConversationReset))
					}
					genTraceId() {
							return CoreUtils.uuid()
					}
					*tryGenerateMessageStream(e) {
							if (function(e) {
									var t, n;
									if ((null === (t = e.adaptiveCards) || void 0 === t ? void 0 : t.length) && (null === (n = e.adaptiveCards[0].body) || void 0 === n ? void 0 : n.length) && e.adaptiveCards[0].body[0].type === _e.TextBlock)
											return !0;
									return !1
							}(e)) {
									const t = e.adaptiveCards[0].body[0].text;
									for (const [n,i] of this.generateStreamSequence(t)) {
											const t = JSON.parse(JSON.stringify(e));
											t.responseType = fe.GetMessagesResponse,
											t.text = i,
											t.spokenText = i,
											t.adaptiveCards[0].body[0].text = `${n}${i}`,
											yield t
									}
							}
					}
					*generateStreamSequence(e) {
							const [t,n] = this.separateStreamableTextPrefix(e, this.config.messaging.attributionMatcher)
								, i = n.split(" ");
							let r = "";
							for (let e = 0; e < i.length; e++)
									r = e ? `${r} ${i[e]}` : i[e],
									yield[t, r]
					}
					separateStreamableTextPrefix(e, t) {
							let n, i = "", r = e;
							const o = e.matchAll(t);
							for (const e of o)
									n = e;
							if (null == n ? void 0 : n.index) {
									const t = n.index + n[0].length;
									i = e.substring(0, t),
									r = e.substring(t)
							}
							return [i, r]
					}
					trackInternetErrorEvent(e, t, n, i, r={}) {
							var o;
							if (this.config.features.enableErrorInstrumentaton) {
									const e = {
											errorMessage: i instanceof Error ? `${null == i ? void 0 : i.name} - ${null == i ? void 0 : i.message}` : String(i),
											traceId: null == t ? void 0 : t.traceId,
											convId: null == t ? void 0 : t.conversationId,
											optionSet: `[${null === (o = null == t ? void 0 : t.optionsSets) || void 0 === o ? void 0 : o.toString()}]`,
											responseMsg: JSON.stringify((null == n ? void 0 : n.ok) ? "" : null == n ? void 0 : n.body),
											callStack: i instanceof Error ? i.stack : "",
											...r
									};
									this.telemetry.trackEvent("SystemEvent", "InternetErrorEvent", e)
							}
					}
			}
			;
			function isAnnRules(e) {
					return e.contentOrigin === be.AnnRules
			}
			var Ua;
			Da = new WeakMap,
			Ma = new WeakMap,
			La = new WeakMap,
			ka = new WeakMap,
			Fa = new WeakMap,
			__decorate([observable, __metadata("design:type", Number)], Ga.prototype, "_state", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Ga.prototype, "isRequestPending", void 0),
			Ga = __decorate([__param(0, Yo), __param(1, zs), __param(2, Ra), __param(3, Hs), __param(4, ie), __param(5, Oa), __param(6, js), __param(7, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object, Object, Object, Object, Object])], Ga),
			function(e) {
					e.Positive = "Positive",
					e.Negative = "Negative",
					e.Offensive = "Offensive"
			}(Ua || (Ua = {}));
			const za = P.createInterface();
			let $a = class {
					constructor(e, t, n) {
							var i;
							this.config = e,
							this.log = n,
							null === (i = this.log) || void 0 === i || i.trace(this, "ctor", null).write(),
							this._conversation = t
					}
					async sendFeedbackAsync(e, t, n) {
							var i, r, o, s;
							null === (i = this.log) || void 0 === i || i.trace(this, this.sendFeedbackAsync, "enter").write();
							const a = await this.postFeedback(e, t, n);
							if (a.ok)
									return null === (r = this.log) || void 0 === r || r.trace(this, this.sendFeedbackAsync, "successful exit").write(),
									a.json();
							{
									const e = await a.json();
									throw null === (o = this.log) || void 0 === o || o.error(this, this.sendFeedbackAsync, `non-2xx from SendFeedback - status: ${a.status} - statusText ${a.statusText} - body: ${JSON.stringify(e)}`).write(),
									null === (s = this.log) || void 0 === s || s.trace(this, this.sendFeedbackAsync, "non-200: throwing exit").write(),
									new Error("non-2xx from SendFeedback")
							}
					}
					postFeedback(e, t, n) {
							var i;
							const {baseUrl: r, pathBase: o, pathFeedback: s} = this.config.sydney
								, a = `${r}${o}${s}`
								, l = {
									feedback: {
											type: "Positive" === e ? "Positive" : "Negative",
											updatedOn: (new Date).toISOString(),
											tag: e
									},
									isAdding: n,
									messageId: t,
									conversationId: this._conversation.id,
									source: this.config.sydney.request.source,
									traceId: this.config.sydney.request.messageCorrelationId,
									sliceIds: this.config.sydney.request.sliceIds
							};
							return null === (i = this.log) || void 0 === i || i.trace(this, this.postFeedback, `body: ${JSON.stringify(l)}`).write(),
							fetch(a, {
									body: JSON.stringify(l),
									headers: {
											"content-type": "application/json"
									},
									method: "POST"
							})
					}
			}
			;
			$a = __decorate([__param(0, Yo), __param(1, zs), __param(2, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object])], $a);
			const Va = P.createInterface("IFeedbackFormService");
			let Ha = class {
					constructor(e, t) {
							var n;
							this.conversation = e,
							this.log = t,
							null === (n = this.log) || void 0 === n || n.trace(this, "ctor", null).write()
					}
					openFeedbackForm() {
							var e, t, n;
							window.sj_evt && window.sj_evt.fire ? this.conversation.id ? (null === (n = this.log) || void 0 === n || n.info(this, this.openFeedbackForm, "Attempting to open feedback form").write(),
							window.sj_evt.fire("feedbackformrequested", {
									structuredData: {
											conversationId: this.conversation.id
									}
							})) : null === (t = this.log) || void 0 === t || t.info(this, this.openFeedbackForm, "failed to open form, no conversationId found").write() : null === (e = this.log) || void 0 === e || e.info(this, this.openFeedbackForm, "window.sj_evt object not found, failed to open form").write()
					}
					openShareControl(e, t, n, i, r) {
							var o, s, a;
							const l = n
								, c = null !== (o = this.createConfig) && void 0 !== o ? o : {
									CustomizedTitle: t,
									CustomizedContent: "",
									UrlOverride: e,
									ElementToBindHoverEvent: r,
									ElementForScreenshot: i,
									DisablePositioningActionMenuContent: !0,
									ShowActionMenuContentAfterLoaded: !0,
									ElementIdForScreenshot: "enable",
									ElementIdToBindHoverEvent: "enable"
							};
							null === (s = this.log) || void 0 === s || s.info(this, this.openShareControl, "Firing AjaxSharing.create with args:", {
									targetElement: l,
									config: c
							}).write(),
							null === (a = window.sj_evt) || void 0 === a || a.fire("GlobalActionMenuV2Wrapper.Create", l, c)
					}
			}
			;
			Ha = __decorate([__param(0, zs), __param(1, F(Vs)), __metadata("design:paramtypes", [Object, Object])], Ha);
			const qa = P.createInterface()
				, ja = P.createInterface();
			let Wa = class extends lifecycle_Disposable {
					constructor(e, t) {
							var n;
							super(),
							this.provider = e,
							this.log = t,
							null === (n = this.log) || void 0 === n || n.trace(this, "ctor", null).write()
					}
					get activeState() {
							return this.provider.activeState
					}
					get onActiveStateChanged() {
							return this.provider.onActiveStateChanged
					}
			}
			;
			Wa = __decorate([__param(0, ja), __param(1, F(Vs)), __metadata("design:paramtypes", [Object, Object])], Wa);
			const Ya = P.createInterface();
			var Ka, Qa;
			(function(e) {
					e.Inline = "inline",
					e.Toast = "toast"
			}
			)(Ka || (Ka = {})),
			function(e) {
					e[e.Loading = 0] = "Loading"
			}(Qa || (Qa = {}));
			class NotificationService {
					constructor() {}
					get floatingBarNotification() {
							return this._floatingNotification
					}
					sendFloatingBarNotification(e=null) {
							this._floatingNotification = e
					}
					removeFloatingBarNotification() {
							const e = this._floatingNotification;
							return this.sendFloatingBarNotification(),
							e
					}
					get bottomBarNotification() {
							return this._bottomBarNotification
					}
					sendBottomBarNotification(e=null) {
							this._bottomBarNotification = e
					}
					removeBottomBarNotification() {
							const e = this._bottomBarNotification;
							return this.sendBottomBarNotification(),
							e
					}
			}
			__decorate([observable, __metadata("design:type", Object)], NotificationService.prototype, "_floatingNotification", void 0),
			__decorate([observable, __metadata("design:type", Object)], NotificationService.prototype, "_bottomBarNotification", void 0);
			const Za = P.createInterface("IConversationManager");
			let Xa = class extends lifecycle_Disposable {
					constructor(e, t, n, i) {
							var r;
							super(),
							this.notification = e,
							this.services = t,
							this.config = n,
							this.log = i,
							this.onAppErrorStateChangeEmitter = this._register(new Emitter),
							this.onChatErrorStateChangeEmitter = this._register(new Emitter),
							this._chatErrorState = Pa.OK,
							this._appErrorState = Na.OK,
							this._fateCounter = 0,
							this._suspensionEndTime = Number.MAX_SAFE_INTEGER,
							this._suspensionTimeLocalstorageKey = "cib__suspended",
							this.handleResetRequest = ()=>{
									this.setAppErrorState(Na.OK),
									this.services.get(Za).resetConversation()
							}
							,
							null === (r = this.log) || void 0 === r || r.trace(this, "ctor", null).write(),
							this.config.features.enableErrorStateNotification && (this.checkSuspensionState(),
							this.attachNetworkStateEvents())
					}
					get onAppErrorStateChange() {
							return this.onAppErrorStateChangeEmitter.event
					}
					get appErrorState() {
							return this._appErrorState
					}
					setAppErrorState(e=Na.OK) {
							if (this.config.features.enableErrorStateNotification)
									if (this._appErrorState = e,
									e === Na.OK) {
											const e = this.notification.removeFloatingBarNotification();
											(null == e ? void 0 : e.resetHandler) && delete e.resetHandler
									} else {
											const t = this.createNotificationBody(e);
											t && this.config.features.enableErrorStateToastNotificationResetButton && (t.resetHandler = this.handleResetRequest),
											this.notification.sendFloatingBarNotification(t),
											this.onAppErrorStateChangeEmitter.fire(e)
									}
					}
					isChatDisabled() {
							return !!this.config.features.enableErrorStateNotification && (this._chatErrorState !== Pa.OK || this._appErrorState !== Na.OK)
					}
					get onChatErrorStateChange() {
							return this.onChatErrorStateChangeEmitter.event
					}
					get chatErrorState() {
							return this._chatErrorState
					}
					setChatErrorState(e=Pa.OK) {
							if (this.config.features.enableErrorStateNotification)
									if (this._chatErrorState = e,
									e === Pa.OK)
											this.notification.removeBottomBarNotification();
									else {
											const t = this.createNotificationBody(e);
											this.notification.sendBottomBarNotification(t),
											this.onChatErrorStateChangeEmitter.fire(e)
									}
					}
					increamentFateCounter(e=1) {
							if (this.config.features.enableErrorStateNotification)
									if (0 === e)
											this._fateCounter = 0;
									else if (this._fateCounter += e,
									this._fateCounter > 3) {
											this.setChatErrorState(Pa.ChatSuspended);
											const e = Date.now() + 864e5 - 6e4;
											localStorage.setItem(this._suspensionTimeLocalstorageKey, e.toString())
									}
							return this._fateCounter
					}
					checkSuspensionState() {
							const e = localStorage.getItem(this._suspensionTimeLocalstorageKey);
							if (null !== e) {
									const t = parseInt(e)
										, n = t - Date.now();
									n > 0 ? (this._suspensionEndTime = t,
									this.setChatErrorState(Pa.ChatSuspended),
									setTimeout((()=>{
											this.checkSuspensionState()
									}
									), n + 100)) : (localStorage.removeItem(this._suspensionTimeLocalstorageKey),
									this._chatErrorState === Pa.ChatSuspended && this.setChatErrorState(Pa.OK))
							}
					}
					attachNetworkStateEvents() {
							window.addEventListener("online", (()=>{
									this.setAppErrorState(Na.OK)
							}
							)),
							window.addEventListener("offline", (()=>{
									this.setAppErrorState(Na.NetworkOffline)
							}
							))
					}
					createNotificationBody(e) {
							switch (e) {
							case Na.NetworkFailure:
							case Na.NetworkOffline:
									return {
											text: this.config.strings.notiReConnect,
											icon: Qa.Loading,
											type: Ka.Toast,
											cta: this.config.strings.refresh
									};
							case Pa.ChatDisabled:
							case Pa.ChatSuspended:
									const e = this.getSuspensionHoursLeftFormattedString();
									return {
											text: this.config.strings.notiChatEnd,
											subText: this.config.strings.notiRestartChat.replace("{0}", e),
											type: Ka.Inline
									};
							case Pa.UnRecoverable:
									return {
											text: this.config.strings.notificationMaxTurnsPerDay,
											type: Ka.Inline
									}
							}
							return null
					}
					getSuspensionHoursLeftFormattedString() {
							if (this._suspensionEndTime > 0) {
									const e = (this._suspensionEndTime - Date.now()) / 36e5;
									return e <= 1 ? "<1" : e >= 24 ? "24" : Math.ceil(e).toString()
							}
							return ""
					}
			}
			;
			__decorate([observable, __metadata("design:type", String)], Xa.prototype, "_chatErrorState", void 0),
			__decorate([observable, __metadata("design:type", String)], Xa.prototype, "_appErrorState", void 0),
			Xa = __decorate([__param(0, Ya), __param(1, M), __param(2, Yo), __param(3, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object])], Xa);
			const Ja = P.createInterface();
			var el;
			(function(e) {
					e.FRE = "FRE",
					e.RAI = "RAI"
			}
			)(el || (el = {}));
			let tl = class {
					constructor(e, t) {
							var n;
							this.config = e,
							this.log = t,
							this.url = "https://services.bingapis.com/suggestionchips/api/v1/cannedChips",
							null === (n = this.log) || void 0 === n || n.trace(this, "ctor", null).write(),
							this.language = this.config.sydney.message.locale.split("-")[0]
					}
					async getFRESuggestions(e=1) {
							var t, n, i, r;
							null === (t = this.log) || void 0 === t || t.trace(this, this.getFRESuggestions, "enter").write();
							const o = {
									type: el.FRE,
									Language: this.language,
									NumberOfChips: e
							};
							null === (n = this.log) || void 0 === n || n.info(this, this.getFRESuggestions, `FRE suggestions payload: ${JSON.stringify(o)}`).write();
							try {
									return (await this.getCannedSuggestions(this.url, o)).suggestionChips
							} catch (e) {
									throw e instanceof Error ? null === (i = this.log) || void 0 === i || i.error(this, this.getFRESuggestions, e.message).write() : null === (r = this.log) || void 0 === r || r.error(this, this.getFRESuggestions, "getFRESuggestions error").write(),
									new Error("Get FRE Suggestions error",{
											cause: e
									})
							}
					}
					async getRAISuggestions(e=3) {
							var t, n, i, r;
							null === (t = this.log) || void 0 === t || t.trace(this, this.getRAISuggestions, "enter").write();
							const o = {
									type: el.RAI,
									Language: this.language,
									NumberOfChips: e
							};
							null === (n = this.log) || void 0 === n || n.info(this, this.getRAISuggestions, `RAI suggestions payload: ${JSON.stringify(o)}`).write();
							try {
									return (await this.getCannedSuggestions(this.url, o)).suggestionChips
							} catch (e) {
									throw e instanceof Error ? null === (i = this.log) || void 0 === i || i.error(this, this.getRAISuggestions, e.message).write() : null === (r = this.log) || void 0 === r || r.error(this, this.getRAISuggestions, "getRAISuggestions error").write(),
									new Error("Get RAI Suggestions error",{
											cause: e
									})
							}
					}
					async getCannedSuggestions(e, t) {
							const n = await fetch(e, {
									body: JSON.stringify(t),
									headers: {
											"content-type": "application/json"
									},
									method: "POST"
							});
							if (n.ok)
									return n.json();
							const i = await n.json();
							throw new Error(`Get Canned Suggestiosn Request failed: non-2xx - status: ${n.status} - statusText ${n.statusText} - body: ${JSON.stringify(i)}`)
					}
			}
			;
			tl = __decorate([__param(0, Yo), __param(1, F(Vs)), __metadata("design:paramtypes", [Object, Object])], tl);
			const nl = P.createInterface();
			class FirstRunExperienceService {
					constructor() {
							this._firstTimeAccessedLocalStorageKey = "cib__firstTimeAccessed",
							this._isFirstTime = !1,
							this._isFirstTime = null === localStorage.getItem(this._firstTimeAccessedLocalStorageKey),
							this._isFirstTime && localStorage.setItem(this._firstTimeAccessedLocalStorageKey, Date.now().toString())
					}
					get isFirstTime() {
							return this._isFirstTime
					}
			}
			const il = P.createInterface();
			let rl = class {
					constructor(e, t) {
							this.firstExpService = e,
							this.config = t
					}
					shouldAddInPrompt() {
							return !!this.config.features.enablePassBotGreetingInContext
					}
					get message() {
							return this.firstExpService.isFirstTime ? this.createBotMessage(this.config.strings.newUserGreet, [this.config.strings.newUserSugg1, this.config.strings.newUserSugg2, this.config.strings.newUserSugg3]) : this.createBotMessage(this.config.strings.repeatUserGreet, [this.config.strings.repeatUserSugg1, this.config.strings.repeatUserSugg2, this.config.strings.repeatUserSugg3])
					}
					get newTopicMessage() {
							const e = this.getRandomNumbers(1, 10)[0]
								, t = this.getRandomNumbers(3, 25);
							return this.createBotMessage(this.config.strings[`newTopicGreet${e}`], t.map((e=>this.config.strings[`newTopicSugg${e}`])))
					}
					getRandomNumbers(e, t, n=1) {
							const i = new Set;
							for (; i.size < e; )
									i.add(n + Math.floor(Math.random() * t));
							return Array.from(i)
					}
					createBotMessage(e, t) {
							return {
									text: e,
									author: ve.Bot,
									adaptiveCards: [],
									suggestedResponses: t.map((e=>this.createSuggestion(e))),
									messageId: CoreUtils.uuid()
							}
					}
					createSuggestion(e) {
							return {
									text: e,
									contentOrigin: be.DeepLeo,
									messageType: Ee.Suggestion,
									messageId: CoreUtils.uuid(),
									hiddenText: void 0,
									offense: we.Unknown
							}
					}
			}
			;
			rl = __decorate([__param(0, nl), __param(1, Yo), __metadata("design:paramtypes", [Object, Object])], rl);
			const ol = P.createInterface("IShareService");
			var sl, al;
			function isTextMessageModel(e) {
					return e.type === sl.Text
			}
			(function(e) {
					e.Text = "text",
					e.Meta = "meta",
					e.Host = "host"
			}
			)(sl || (sl = {})),
			function(e) {
					e.Ads = "ads",
					e.Answer = "answer",
					e.SemSerp = "semserp"
			}(al || (al = {}));
			const ll = P.createInterface();
			let cl = class {
					constructor(e, t, n) {
							var i;
							this.config = e,
							this.chat = t,
							this.log = n,
							null === (i = this.log) || void 0 === i || i.trace(this, "ctor", null).write(),
							this.shareMessagesUrl = this.config.sydney.baseUrl + this.config.sydney.pathBase + this.config.sydney.pathShareMessages
					}
					async getSharedMessagesAsync(e) {
							var t;
							null === (t = this.log) || void 0 === t || t.trace(this, this.getSharedMessagesAsync, null).write(),
							await this.chat.loadSharedMessagesAsync(e)
					}
					async shareMessagesAsync(e) {
							var t, n, i;
							const r = {
									messages: this.toMessages(e),
									source: "cib"
							}
								, o = await fetch(this.shareMessagesUrl, {
									method: "POST",
									headers: {
											"Content-Type": "application/json"
									},
									body: JSON.stringify({
											...this.config.sydney.request,
											...r
									})
							});
							if (!o.ok) {
									null === (t = this.log) || void 0 === t || t.error(this, this.shareMessagesAsync, "Failed to share messages", o);
									const e = await o.json();
									throw new Error(`Failed to share messages: ${null === (n = e.result) || void 0 === n ? void 0 : n.message}`)
							}
							const s = await o.json();
							return null === (i = this.log) || void 0 === i || i.trace(this, this.shareMessagesAsync, "ShareMessages successfully returned shareId", s.shareId, s).write(),
							s
					}
					toMessages(e) {
							return e.filter((e=>isTextMessageModel(e))).map((e=>({
									author: e.author,
									text: e.text,
									adaptiveCards: e.adaptiveCards,
									sourceAttributions: isTextMessageModel(e) ? e.sourceAttributions : void 0,
									messageId: e.messageId,
									contentOrigin: e.contentOrigin
							})))
					}
			}
			;
			cl = __decorate([__param(0, Yo), __param(1, Us), __param(2, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object])], cl);
			const dl = P.createInterface("ISystemEventBus");
			var pl, ul, hl, ml, gl, _l;
			class SystemEventBus extends lifecycle_Disposable {
					constructor() {
							super(...arguments),
							pl.add(this),
							ul.set(this, this._register(new Emitter)),
							hl.set(this, this._register(new Emitter))
					}
					get onSystemCommand() {
							return __classPrivateFieldGet(this, ul, "f").event
					}
					get onSystemEvent() {
							return __classPrivateFieldGet(this, hl, "f").event
					}
					sendSystemCommand(e, t) {
							__classPrivateFieldGet(this, pl, "m", gl).call(this, e, __classPrivateFieldGet(this, pl, "m", _l).call(this, t))
					}
					sendSystemEvent(e, t) {
							__classPrivateFieldGet(this, pl, "m", ml).call(this, e, __classPrivateFieldGet(this, pl, "m", _l).call(this, t))
					}
			}
			ul = new WeakMap,
			hl = new WeakMap,
			pl = new WeakSet,
			ml = function(e, t) {
					const n = {
							type: e,
							data: t
					};
					__classPrivateFieldGet(this, hl, "f").fire(n)
			}
			,
			gl = function(e, t) {
					const n = {
							type: e,
							data: t
					};
					__classPrivateFieldGet(this, ul, "f").fire(n)
			}
			,
			_l = function(e) {
					let t = "";
					return null != e && (t = "string" == typeof e ? e : JSON.stringify(e)),
					t
			}
			;
			let fl = class {
					constructor(e) {
							this.config = e
					}
					getTextSuggestion(e, t, n) {
							let i = this.config.textPrediction.pathAutoSuggest;
							this.config.features.enableSuggHighTrigger ? i += this.config.textPrediction.highTrigger : i += this.config.textPrediction.lowTrigger;
							const r = new URL(i,this.config.textPrediction.baseUrl);
							return fetch(r, this.getFetchOptions(e, t, n))
					}
					getFetchOptions(e, t, n) {
							var i;
							return {
									method: "POST",
									headers: {
											"content-type": "application/json",
											"Ocp-Apim-Subscription-Key": this.config.textPrediction.subscriptionKey
									},
									mode: "cors",
									body: JSON.stringify({
											text: e,
											previousText: t,
											market: n || (null === (i = this.config.textPrediction.query) || void 0 === i ? void 0 : i.market)
									})
							}
					}
			}
			;
			fl = __decorate([__param(0, Yo), __metadata("design:paramtypes", [Object])], fl);
			const yl = P.createInterface("ITuringAutoSuggestService");
			var vl, bl, Sl;
			let Cl = class extends lifecycle_Disposable {
					constructor(e, t) {
							super(),
							this.config = e,
							this.log = t,
							vl.set(this, void 0),
							bl.set(this, null),
							Sl.set(this, null),
							this.configureBingHooks()
					}
					get externalLinkId() {
							var e;
							return __classPrivateFieldSet(this, vl, null !== (e = __classPrivateFieldGet(this, vl, "f")) && void 0 !== e ? e : this.tryGetExternalLinkId(), "f"),
							__classPrivateFieldGet(this, vl, "f")
					}
					get instrumentedLink() {
							var e;
							return __classPrivateFieldSet(this, bl, null !== (e = __classPrivateFieldGet(this, bl, "f")) && void 0 !== e ? e : this.tryGetInstrumentedLink(), "f"),
							__classPrivateFieldGet(this, bl, "f")
					}
					get externalLink() {
							var e;
							return __classPrivateFieldSet(this, Sl, null !== (e = __classPrivateFieldGet(this, Sl, "f")) && void 0 !== e ? e : this.tryGetExternalLink(), "f"),
							__classPrivateFieldGet(this, Sl, "f")
					}
					trackInteractionEvent(e) {
							e.currentTarget instanceof HTMLAnchorElement ? this.trackLinkExternal(e) : this.trackInternalInteraction(e)
					}
					trackEvent(e, t, n={}) {
							const i = Object.entries(n).flatMap((e=>e));
							this.logEvent(e, t, !1, ...i)
					}
					trackInternalInteraction(e) {
							null !== this.instrumentedLink && (this.bingClickTracker(this.instrumentedLink, !1, e),
							this.logEvent("ClientInst", "ConversationalUiLinkClick", !1))
					}
					trackLinkExternal(e) {
							var t;
							this.config.bing.sendClickBeacon(e),
							this.logEvent("Click", "Click", !1, "href", null === (t = e.currentTarget) || void 0 === t ? void 0 : t.href),
							null !== this.externalLink && this.bingClickTracker(this.externalLink, !1, e)
					}
					trackError(e, t) {
							var n;
							null === (n = this.log) || void 0 === n || n.info(this, this.trackError, e).write(),
							this.trackEvent("ClientInst", "ConversationalUiError", {
									payload: t
							})
					}
					configureBingHooks() {
							var e, t, n;
							(null === (e = window.Log) || void 0 === e ? void 0 : e.Log) && (null === (t = this.log) || void 0 === t || t.info(this, this.configureBingHooks, "window.Log.Log object found").write(),
							this.bingEventLogger = window.Log.Log),
							window.si_ct && (null === (n = this.log) || void 0 === n || n.info(this, this.configureBingHooks, "window.si_ct function found").write(),
							this.bingClickTracker = window.si_ct)
					}
					logEvent(e, t, n, ...i) {
							const r = this.config.telemetry.eventID;
							this.bingEventLogger(e, r, t, n, ...i)
					}
					bingEventLogger(e, t, n, i, ...r) {
							var o;
							null === (o = this.log) || void 0 === o || o.info(this, this.logEvent, `Log.Log('${e}','${t}','${n}','${i}')`, ...r).write()
					}
					bingClickTracker(e, t, n) {
							var i;
							null === (i = this.log) || void 0 === i || i.info(this, this.bingClickTracker, `si_ct('${e.nodeName}','${t}','${n.type}')`).write()
					}
					tryGetInstrumentedLink() {
							const e = this.config.telemetry.instrumentedLinkName
								, t = document.getElementById(e);
							return null === t && this.trackError(`Could not find Instrumented Link with Name '${e}'`, "No InstLink"),
							t
					}
					tryGetExternalLink() {
							const e = this.config.telemetry.externalLinkName
								, t = document.getElementById(e);
							return null === t && this.trackError(`Could not find External Link with Name '${e}'`, "No InstLink"),
							t
					}
					tryGetExternalLinkId() {
							var e;
							let t;
							return (null === (e = this.instrumentedLink) || void 0 === e ? void 0 : e.dataset.exlk) ? t = `ID=${this.instrumentedLink.dataset.exlk}.1` : this.trackError("Could not find External Link Id", "No InstExtLinkId"),
							t
					}
			}
			;
			var El, Tl, Il, wl;
			vl = new WeakMap,
			bl = new WeakMap,
			Sl = new WeakMap,
			Cl = __decorate([__param(0, Yo), __param(1, F(Vs)), __metadata("design:paramtypes", [Object, Object])], Cl),
			function(e) {
					e.ClientInst = "ClientInst",
					e.Click = "Click",
					e.SendText = "SendText",
					e.Show = "Show",
					e.Hide = "Hide",
					e.InteractionEvent = "InteractionEvent",
					e.ClickMic = "ClickMic",
					e.MessageEvent = "MessageEvent",
					e.SendSR = "SendSR",
					e.SelectFeedback = "SelectFeedback",
					e.ClickChip = "ClickChip",
					e.HoverInfo = "HoverInfo",
					e.HoverLogo = "HoverLogo",
					e.Scroll = "Scroll",
					e.StopMic = "StopMic",
					e.SystemEvent = "SystemEvent"
			}(El || (El = {})),
			function(e) {
					e.Namespace = "Namespace",
					e.CustomData = "CustomData",
					e.EncryptedData = "EncryptedData"
			}(Tl || (Tl = {})),
			function(e) {
					e.Conversation = "Conversation",
					e.RightRail = "RightRail",
					e.Pole = "Pole",
					e.Creator = "Creator"
			}(Il || (Il = {}));
			let Al = class extends lifecycle_Disposable {
					constructor(e, t, n, i, r, o, s) {
							super(),
							this.config = e,
							this.modelFactory = t,
							this.conversation = n,
							this.chat = i,
							this.speech = r,
							this.greeting = o,
							this.log = s,
							wl.set(this, this._register(new Emitter)),
							this.handleSpeechStreamBegin = ()=>{
									this.addUserMessage(this.speech.recognizedText)
							}
							,
							this.processMessage = e=>{
									var t, n, i, r;
									try {
											if (e.author === ve.User)
													return void (e.isFromCache && e.text && this.addUserMessage(e.text));
											const r = this.conversation.messages.length - 1 >= 0 ? this.conversation.messages[this.conversation.messages.length - 1] : void 0;
											(null == r ? void 0 : r.messageId) && !r.isFinalized && r.messageId !== e.messageId && (null === (t = this.log) || void 0 === t || t.trace(this, this.processMessage, "finalizing last", r).write(),
											r.finalize());
											let o = this.tryGetExistingModel(e);
											null === o ? (o = this.modelFactory.createIncoming(e),
											null !== o && (o.type === sl.Host && o.contentType === al.Ads ? (null === (n = this.log) || void 0 === n || n.trace(this, this.processMessage, "hosted ads model - compare vs last - model:", o, r).write(),
											(null == r ? void 0 : r.requestId) === o.requestId && (null == r ? void 0 : r.type) === sl.Text && (null === (i = this.log) || void 0 === i || i.trace(this, this.processMessage, "inline ads success", o).write(),
											r.inlineAdsModel = o)) : (e.responseType !== fe.GetMessagesResponse && o.finalize(),
											this.conversation.addMessage(o)))) : o.type === sl.Text && o.update(e),
											(null == o ? void 0 : o.type) === sl.Text && this.conversation.updateSuggestions(o)
									} catch (t) {
											null === (r = this.log) || void 0 === r || r.error(this, this.processMessage, "Error processing message:", e.messageId, t)
									}
							}
							,
							this._register(this.chat.onMessage(this.processMessage)),
							this._register(this.speech.onBegin(this.handleSpeechStreamBegin))
					}
					get onResetConversationInvoked() {
							return __classPrivateFieldGet(this, wl, "f").event
					}
					resetConversation() {
							var e;
							null === (e = this.log) || void 0 === e || e.trace(this, this.resetConversation, null).write(),
							this.chat.cancelPendingRequest(),
							this.speech.cancelPendingRequest(),
							this.conversation.reset(),
							this.config.greeting.shouldSendBotGreeting && (this.chat.clearPendingContext(),
							this.addBotGreeting(!0)),
							__classPrivateFieldGet(this, wl, "f").fire()
					}
					async beginConversationAsync() {
							var e, t, n;
							try {
									switch (null === (e = this.log) || void 0 === e || e.trace(this, this.beginConversationAsync, "enter").write(),
									this.conversation.state) {
									case $s.Pending:
											break;
									case $s.Active:
											this.conversation.resetState();
									case $s.Inactive:
											this.config.greeting.shouldSendBotGreeting && this.addBotGreeting()
									}
							} catch (e) {
									const n = e instanceof Error ? e : "An error occurred.";
									null === (t = this.log) || void 0 === t || t.error(this, this.beginConversationAsync, n).write()
							}
							null === (n = this.log) || void 0 === n || n.trace(this, this.beginConversationAsync, "exit").write()
					}
					sendMessage(e, t=!1, n) {
							var i;
							null === (i = this.log) || void 0 === i || i.trace(this, this.sendMessage, "manager send message:", e).write(),
							this.addUserMessage(e, n),
							t || this.chat.submitMessage(e)
					}
					sendSearchQuery(e) {
							var t;
							if (null === (t = this.log) || void 0 === t || t.trace(this, this.sendSearchQuery, "manager send search query:", e).write(),
							this.conversation.messages.length)
									throw new Error("IConversationManager.sendSearchQuery can only be called as the first message of conversation.");
							this.addUserMessage(e),
							this.chat.submitSearchQuery(e)
					}
					addBotGreeting(e=!1) {
							var t;
							null === (t = this.log) || void 0 === t || t.trace(this, this.addBotGreeting, "manager send bot greeting message: IsNewTopic:", e).write();
							const n = e ? this.greeting.newTopicMessage : this.greeting.message;
							return this.greeting.shouldAddInPrompt() && this.chat.registerContext([n]),
							this.processMessage(n),
							n
					}
					addUserMessage(e, t=Ee.Chat) {
							var n;
							null === (n = this.log) || void 0 === n || n.trace(this, this.addUserMessage, `manager add user message: "${e}" type: ${t}`).write();
							const i = this.modelFactory.createLocalText({
									text: e,
									messageType: t
							});
							this.conversation.addMessage(i)
					}
					tryGetExistingModel(e) {
							var t;
							let n;
							return e.messageId ? (n = this.conversation.messages.find((t=>this.isExistingModelPredicate(t, e.messageId, e.messageType))),
							n && e.messageType === Ee.AdsQuery && (n = n.inlineAdsModel)) : null === (t = this.log) || void 0 === t || t.warn(this, this.tryGetExistingModel, "Cannot get existing model for message with no ID.").write(),
							null != n ? n : null
					}
					isExistingModelPredicate(e, t, n) {
							var i;
							return e.messageId === t || n === Ee.AdsQuery && e.type === sl.Text && (null === (i = e.inlineAdsModel) || void 0 === i ? void 0 : i.messageId) === t
					}
			}
			;
			wl = new WeakMap,
			Al = __decorate([__param(0, Yo), __param(1, ll), __param(2, zs), __param(3, Us), __param(4, Hs), __param(5, il), __param(6, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object, Object, Object, Object])], Al);
			let Rl = class {
					constructor(e, t) {
							this.telemetry = e,
							this.log = t,
							this.lastMessage = null,
							this.expiry = null,
							this._suggestions = [],
							this._state = $s.Inactive,
							this._id = null,
							this._messages = [],
							this._onResetEmitter = new Emitter,
							this._onMessageAddedEmitter = new Emitter
					}
					get suggestions() {
							return this._suggestions
					}
					get state() {
							return this._state
					}
					get id() {
							return this._id
					}
					get messages() {
							return this._messages
					}
					onReset(e) {
							return this._onResetEmitter.event(e)
					}
					onMessageAdded(e) {
							return this._onMessageAddedEmitter.event(e)
					}
					get isExpired() {
							return null === this.expiry || this.expiry.valueOf() < Date.now()
					}
					processMessageUpdate(e) {
							const t = this.getBotMessageById(e.messageId);
							t && t.append(e.appendText)
					}
					updateSuggestions(e) {
							this._suggestions = e.suggestedResponses
					}
					reset() {
							var e;
							null === (e = this.log) || void 0 === e || e.trace(this, this.reset, null).write(),
							this.updateId(),
							this.lastMessage = null,
							this._suggestions = [],
							this._messages.splice(0, this._messages.length),
							this._onResetEmitter.fire()
					}
					addMessage(e) {
							var t, n;
							this.fireMessageTelemetry(e);
							const i = this.getBotMessageById(e.messageId);
							i ? (null === (t = this.log) || void 0 === t || t.trace(this, this.addMessage, "model update existing:").write(),
							i.update(e)) : (null === (n = this.log) || void 0 === n || n.trace(this, this.addMessage, "model add message").write(),
							this._messages.push(e),
							this._onMessageAddedEmitter.fire(e)),
							e.author === ve.Bot && e.type === sl.Text && (this.lastMessage = e)
					}
					createConversationSummary(e) {
							let t = "";
							const n = Math.max(Math.min(this.messages.length, e), 0);
							if (n > 0) {
									const e = [];
									for (let t = n - 1; t >= 0; t--) {
											const {author: n, text: i} = this.messages[t]
												, r = {
													author: n,
													text: i
											};
											e.push(r)
									}
									t = JSON.stringify(e)
							}
							return t
					}
					updateId(e=null, t=null) {
							null === e || null === t ? (this._id = this.expiry = null,
							this.setState($s.Inactive)) : (this._id = e,
							this.expiry = t,
							this.setState($s.Active))
					}
					setPending() {
							this._state === $s.Inactive && this.setState($s.Pending)
					}
					resetState() {
							var e;
							null === (e = this.log) || void 0 === e || e.debug(this, this.resetState, null).write(),
							this.updateId()
					}
					setState(e) {
							var t, n;
							this._state !== e && (this._state = e,
							e === $s.Active ? null === (t = this.log) || void 0 === t || t.debug(this, this.setState, "[state -> active] convId:", this.id).write() : null === (n = this.log) || void 0 === n || n.debug(this, this.setState, "[state ->", e, "]").write())
					}
					getBotMessageById(e) {
							return this.messages.find((t=>t.messageId === e && t.author === ve.Bot))
					}
					fireMessageTelemetry(e) {
							var t;
							const n = (this.messages.length - 1).toString();
							e.type === sl.Meta && e.messageType === Ee.InternalSearchQuery && e.contentOrigin === be.DeepLeo && this.telemetry.trackEvent("MessageEvent", "WebSearch", {
									Namespace: "Conversation",
									CustomData: JSON.stringify({
											turnId: n,
											convId: this.id
									}),
									EncryptedData: JSON.stringify({
											query: null === (t = /`(.*?)`/.exec(e.text)) || void 0 === t ? void 0 : t[1]
									})
							}),
							e.contentOrigin === be.AnnRules && (this.telemetry.trackEvent("ClientInst", "AnnHit"),
							e.offense === we.OffenseResponse && this.telemetry.trackEvent("ClientInst", "AnnHitOffensive")),
							e.text && e.text.includes("@failover_hyperlink") && (e.rewrittenMessage || (null == e ? void 0 : e.text)) && this.telemetry.trackEvent("ClientInst", "FATELink")
					}
			}
			;
			var xl, Ol;
			__decorate([observable, __metadata("design:type", Object)], Rl.prototype, "lastMessage", void 0),
			__decorate([observable, __metadata("design:type", Array)], Rl.prototype, "_suggestions", void 0),
			Rl = __decorate([__param(0, js), __param(1, F(Vs)), __metadata("design:paramtypes", [Object, Object])], Rl),
			function(e) {
					e[e.None = 0] = "None",
					e[e.WebSockets = 1] = "WebSockets",
					e[e.ServerSentEvents = 2] = "ServerSentEvents",
					e[e.LongPolling = 4] = "LongPolling"
			}(xl || (xl = {})),
			function(e) {
					e[e.Text = 1] = "Text",
					e[e.Binary = 2] = "Binary"
			}(Ol || (Ol = {}));
			const Nl = [0, 2e3, 1e4, 3e4, null];
			class DefaultReconnectPolicy {
					constructor(e) {
							this._retryDelays = void 0 !== e ? [...e, null] : Nl
					}
					nextRetryDelayInMilliseconds(e) {
							return this._retryDelays[e.previousRetryCount]
					}
			}
			class HeaderNames_HeaderNames {
			}
			HeaderNames_HeaderNames.Authorization = "Authorization",
			HeaderNames_HeaderNames.Cookie = "Cookie";
			class HttpResponse {
					constructor(e, t, n) {
							this.statusCode = e,
							this.statusText = t,
							this.content = n
					}
			}
			class HttpClient {
					get(e, t) {
							return this.send({
									...t,
									method: "GET",
									url: e
							})
					}
					post(e, t) {
							return this.send({
									...t,
									method: "POST",
									url: e
							})
					}
					delete(e, t) {
							return this.send({
									...t,
									method: "DELETE",
									url: e
							})
					}
					getCookieString(e) {
							return ""
					}
			}
			class AccessTokenHttpClient extends HttpClient {
					constructor(e, t) {
							super(),
							this._innerClient = e,
							this._accessTokenFactory = t
					}
					async send(e) {
							let t = !0;
							this._accessTokenFactory && (!this._accessToken || e.url && e.url.indexOf("/negotiate?") > 0) && (t = !1,
							this._accessToken = await this._accessTokenFactory()),
							this._setAuthorizationHeader(e);
							const n = await this._innerClient.send(e);
							return t && 401 === n.statusCode && this._accessTokenFactory ? (this._accessToken = await this._accessTokenFactory(),
							this._setAuthorizationHeader(e),
							await this._innerClient.send(e)) : n
					}
					_setAuthorizationHeader(e) {
							e.headers || (e.headers = {}),
							this._accessToken ? e.headers[HeaderNames_HeaderNames.Authorization] = `Bearer ${this._accessToken}` : this._accessTokenFactory && e.headers[HeaderNames_HeaderNames.Authorization] && delete e.headers[HeaderNames_HeaderNames.Authorization]
					}
					getCookieString(e) {
							return this._innerClient.getCookieString(e)
					}
			}
			class HttpError extends Error {
					constructor(e, t) {
							const n = new.target.prototype;
							super(`${e}: Status code '${t}'`),
							this.statusCode = t,
							this.__proto__ = n
					}
			}
			class TimeoutError extends Error {
					constructor(e="A timeout occurred.") {
							const t = new.target.prototype;
							super(e),
							this.__proto__ = t
					}
			}
			class Errors_AbortError extends Error {
					constructor(e="An abort occurred.") {
							const t = new.target.prototype;
							super(e),
							this.__proto__ = t
					}
			}
			class UnsupportedTransportError extends Error {
					constructor(e, t) {
							const n = new.target.prototype;
							super(e),
							this.transport = t,
							this.errorType = "UnsupportedTransportError",
							this.__proto__ = n
					}
			}
			class DisabledTransportError extends Error {
					constructor(e, t) {
							const n = new.target.prototype;
							super(e),
							this.transport = t,
							this.errorType = "DisabledTransportError",
							this.__proto__ = n
					}
			}
			class FailedToStartTransportError extends Error {
					constructor(e, t) {
							const n = new.target.prototype;
							super(e),
							this.transport = t,
							this.errorType = "FailedToStartTransportError",
							this.__proto__ = n
					}
			}
			class FailedToNegotiateWithServerError extends Error {
					constructor(e) {
							const t = new.target.prototype;
							super(e),
							this.errorType = "FailedToNegotiateWithServerError",
							this.__proto__ = t
					}
			}
			class AggregateErrors extends Error {
					constructor(e, t) {
							const n = new.target.prototype;
							super(e),
							this.innerErrors = t,
							this.__proto__ = n
					}
			}
			var Pl;
			(function(e) {
					e[e.Trace = 0] = "Trace",
					e[e.Debug = 1] = "Debug",
					e[e.Information = 2] = "Information",
					e[e.Warning = 3] = "Warning",
					e[e.Error = 4] = "Error",
					e[e.Critical = 5] = "Critical",
					e[e.None = 6] = "None"
			}
			)(Pl || (Pl = {}));
			class NullLogger {
					constructor() {}
					log(e, t) {}
			}
			NullLogger.instance = new NullLogger;
			class Arg {
					static isRequired(e, t) {
							if (null == e)
									throw new Error(`The '${t}' argument is required.`)
					}
					static isNotEmpty(e, t) {
							if (!e || e.match(/^\s*$/))
									throw new Error(`The '${t}' argument should not be empty.`)
					}
					static isIn(e, t, n) {
							if (!(e in t))
									throw new Error(`Unknown ${n} value: ${e}.`)
					}
			}
			class Utils_Platform {
					static get isBrowser() {
							return "object" == typeof window && "object" == typeof window.document
					}
					static get isWebWorker() {
							return "object" == typeof self && "importScripts"in self
					}
					static get isReactNative() {
							return "object" == typeof window && void 0 === window.document
					}
					static get isNode() {
							return !this.isBrowser && !this.isWebWorker && !this.isReactNative
					}
			}
			function getDataDetail(e, t) {
					let n = "";
					return isArrayBuffer(e) ? (n = `Binary data of length ${e.byteLength}`,
					t && (n += `. Content: '${function(e) {
							const t = new Uint8Array(e);
							let n = "";
							return t.forEach((e=>{
									n += `0x${e < 16 ? "0" : ""}${e.toString(16)} `
							}
							)),
							n.substr(0, n.length - 1)
					}(e)}'`)) : "string" == typeof e && (n = `String data of length ${e.length}`,
					t && (n += `. Content: '${e}'`)),
					n
			}
			function isArrayBuffer(e) {
					return e && "undefined" != typeof ArrayBuffer && (e instanceof ArrayBuffer || e.constructor && "ArrayBuffer" === e.constructor.name)
			}
			async function sendMessage(e, t, n, i, r, o) {
					const s = {}
						, [a,l] = getUserAgentHeader();
					s[a] = l,
					e.log(Pl.Trace, `(${t} transport) sending data. ${getDataDetail(r, o.logMessageContent)}.`);
					const c = isArrayBuffer(r) ? "arraybuffer" : "text"
						, d = await n.post(i, {
							content: r,
							headers: {
									...s,
									...o.headers
							},
							responseType: c,
							timeout: o.timeout,
							withCredentials: o.withCredentials
					});
					e.log(Pl.Trace, `(${t} transport) request complete. Response status: ${d.statusCode}.`)
			}
			class SubjectSubscription {
					constructor(e, t) {
							this._subject = e,
							this._observer = t
					}
					dispose() {
							const e = this._subject.observers.indexOf(this._observer);
							e > -1 && this._subject.observers.splice(e, 1),
							0 === this._subject.observers.length && this._subject.cancelCallback && this._subject.cancelCallback().catch((e=>{}
							))
					}
			}
			class ConsoleLogger {
					constructor(e) {
							this._minLevel = e,
							this.out = console
					}
					log(e, t) {
							if (e >= this._minLevel) {
									const n = `[${(new Date).toISOString()}] ${Pl[e]}: ${t}`;
									switch (e) {
									case Pl.Critical:
									case Pl.Error:
											this.out.error(n);
											break;
									case Pl.Warning:
											this.out.warn(n);
											break;
									case Pl.Information:
											this.out.info(n);
											break;
									default:
											this.out.log(n)
									}
							}
					}
			}
			function getUserAgentHeader() {
					let e = "X-SignalR-User-Agent";
					return Utils_Platform.isNode && (e = "User-Agent"),
					[e, constructUserAgent("7.0.0", getOsName(), getRuntime(), getRuntimeVersion())]
			}
			function constructUserAgent(e, t, n, i) {
					let r = "Microsoft SignalR/";
					const o = e.split(".");
					return r += `${o[0]}.${o[1]}`,
					r += ` (${e}; `,
					r += t && "" !== t ? `${t}; ` : "Unknown OS; ",
					r += `${n}`,
					r += i ? `; ${i}` : "; Unknown Runtime Version",
					r += ")",
					r
			}
			function getOsName() {
					if (!Utils_Platform.isNode)
							return "";
					switch (process.platform) {
					case "win32":
							return "Windows NT";
					case "darwin":
							return "macOS";
					case "linux":
							return "Linux";
					default:
							return process.platform
					}
			}
			function getRuntimeVersion() {
					if (Utils_Platform.isNode)
							return process.versions.node
			}
			function getRuntime() {
					return Utils_Platform.isNode ? "NodeJS" : "Browser"
			}
			function getErrorString(e) {
					return e.stack ? e.stack : e.message ? e.message : `${e}`
			}
			class FetchHttpClient_FetchHttpClient extends HttpClient {
					constructor(e) {
							if (super(),
							this._logger = e,
							"undefined" == typeof fetch) {
									const e = require;
									this._jar = new (e("tough-cookie").CookieJar),
									this._fetchType = e("node-fetch"),
									this._fetchType = e("fetch-cookie")(this._fetchType, this._jar)
							} else
									this._fetchType = fetch.bind(function() {
											if ("undefined" != typeof globalThis)
													return globalThis;
											if ("undefined" != typeof self)
													return self;
											if ("undefined" != typeof window)
													return window;
											if (void 0 !== __webpack_require__.g)
													return __webpack_require__.g;
											throw new Error("could not find global")
									}());
							if ("undefined" == typeof AbortController) {
									const e = require;
									this._abortControllerType = e("abort-controller")
							} else
									this._abortControllerType = AbortController
					}
					async send(e) {
							if (e.abortSignal && e.abortSignal.aborted)
									throw new Errors_AbortError;
							if (!e.method)
									throw new Error("No method defined.");
							if (!e.url)
									throw new Error("No url defined.");
							const t = new this._abortControllerType;
							let n;
							e.abortSignal && (e.abortSignal.onabort = ()=>{
									t.abort(),
									n = new Errors_AbortError
							}
							);
							let i, r = null;
							if (e.timeout) {
									const i = e.timeout;
									r = setTimeout((()=>{
											t.abort(),
											this._logger.log(Pl.Warning, "Timeout from HTTP request."),
											n = new TimeoutError
									}
									), i)
							}
							"" === e.content && (e.content = void 0),
							e.content && (e.headers = e.headers || {},
							isArrayBuffer(e.content) ? e.headers["Content-Type"] = "application/octet-stream" : e.headers["Content-Type"] = "text/plain;charset=UTF-8");
							try {
									i = await this._fetchType(e.url, {
											body: e.content,
											cache: "no-cache",
											credentials: !0 === e.withCredentials ? "include" : "same-origin",
											headers: {
													"X-Requested-With": "XMLHttpRequest",
													...e.headers
											},
											method: e.method,
											mode: "cors",
											redirect: "follow",
											signal: t.signal
									})
							} catch (e) {
									if (n)
											throw n;
									throw this._logger.log(Pl.Warning, `Error from HTTP request. ${e}.`),
									e
							} finally {
									r && clearTimeout(r),
									e.abortSignal && (e.abortSignal.onabort = null)
							}
							if (!i.ok) {
									const e = await deserializeContent(i, "text");
									throw new HttpError(e || i.statusText,i.status)
							}
							const o = deserializeContent(i, e.responseType)
								, s = await o;
							return new HttpResponse(i.status,i.statusText,s)
					}
					getCookieString(e) {
							let t = "";
							return Utils_Platform.isNode && this._jar && this._jar.getCookies(e, ((e,n)=>t = n.join("; "))),
							t
					}
			}
			function deserializeContent(e, t) {
					let n;
					switch (t) {
					case "arraybuffer":
							n = e.arrayBuffer();
							break;
					case "text":
					default:
							n = e.text();
							break;
					case "blob":
					case "document":
					case "json":
							throw new Error(`${t} is not supported.`)
					}
					return n
			}
			class XhrHttpClient_XhrHttpClient extends HttpClient {
					constructor(e) {
							super(),
							this._logger = e
					}
					send(e) {
							return e.abortSignal && e.abortSignal.aborted ? Promise.reject(new Errors_AbortError) : e.method ? e.url ? new Promise(((t,n)=>{
									const i = new XMLHttpRequest;
									i.open(e.method, e.url, !0),
									i.withCredentials = void 0 === e.withCredentials || e.withCredentials,
									i.setRequestHeader("X-Requested-With", "XMLHttpRequest"),
									"" === e.content && (e.content = void 0),
									e.content && (isArrayBuffer(e.content) ? i.setRequestHeader("Content-Type", "application/octet-stream") : i.setRequestHeader("Content-Type", "text/plain;charset=UTF-8"));
									const r = e.headers;
									r && Object.keys(r).forEach((e=>{
											i.setRequestHeader(e, r[e])
									}
									)),
									e.responseType && (i.responseType = e.responseType),
									e.abortSignal && (e.abortSignal.onabort = ()=>{
											i.abort(),
											n(new Errors_AbortError)
									}
									),
									e.timeout && (i.timeout = e.timeout),
									i.onload = ()=>{
											e.abortSignal && (e.abortSignal.onabort = null),
											i.status >= 200 && i.status < 300 ? t(new HttpResponse(i.status,i.statusText,i.response || i.responseText)) : n(new HttpError(i.response || i.responseText || i.statusText,i.status))
									}
									,
									i.onerror = ()=>{
											this._logger.log(Pl.Warning, `Error from HTTP request. ${i.status}: ${i.statusText}.`),
											n(new HttpError(i.statusText,i.status))
									}
									,
									i.ontimeout = ()=>{
											this._logger.log(Pl.Warning, "Timeout from HTTP request."),
											n(new TimeoutError)
									}
									,
									i.send(e.content)
							}
							)) : Promise.reject(new Error("No url defined.")) : Promise.reject(new Error("No method defined."))
					}
			}
			class DefaultHttpClient extends HttpClient {
					constructor(e) {
							if (super(),
							"undefined" != typeof fetch || Utils_Platform.isNode)
									this._httpClient = new FetchHttpClient_FetchHttpClient(e);
							else {
									if ("undefined" == typeof XMLHttpRequest)
											throw new Error("No usable HttpClient found.");
									this._httpClient = new XhrHttpClient_XhrHttpClient(e)
							}
					}
					send(e) {
							return e.abortSignal && e.abortSignal.aborted ? Promise.reject(new Errors_AbortError) : e.method ? e.url ? this._httpClient.send(e) : Promise.reject(new Error("No url defined.")) : Promise.reject(new Error("No method defined."))
					}
					getCookieString(e) {
							return this._httpClient.getCookieString(e)
					}
			}
			class esm_AbortController_AbortController {
					constructor() {
							this._isAborted = !1,
							this.onabort = null
					}
					abort() {
							this._isAborted || (this._isAborted = !0,
							this.onabort && this.onabort())
					}
					get signal() {
							return this
					}
					get aborted() {
							return this._isAborted
					}
			}
			class LongPollingTransport {
					constructor(e, t, n) {
							this._httpClient = e,
							this._logger = t,
							this._pollAbort = new esm_AbortController_AbortController,
							this._options = n,
							this._running = !1,
							this.onreceive = null,
							this.onclose = null
					}
					get pollAborted() {
							return this._pollAbort.aborted
					}
					async connect(e, t) {
							if (Arg.isRequired(e, "url"),
							Arg.isRequired(t, "transferFormat"),
							Arg.isIn(t, Ol, "transferFormat"),
							this._url = e,
							this._logger.log(Pl.Trace, "(LongPolling transport) Connecting."),
							t === Ol.Binary && "undefined" != typeof XMLHttpRequest && "string" != typeof (new XMLHttpRequest).responseType)
									throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");
							const [n,i] = getUserAgentHeader()
								, r = {
									[n]: i,
									...this._options.headers
							}
								, o = {
									abortSignal: this._pollAbort.signal,
									headers: r,
									timeout: 1e5,
									withCredentials: this._options.withCredentials
							};
							t === Ol.Binary && (o.responseType = "arraybuffer");
							const s = `${e}&_=${Date.now()}`;
							this._logger.log(Pl.Trace, `(LongPolling transport) polling: ${s}.`);
							const a = await this._httpClient.get(s, o);
							200 !== a.statusCode ? (this._logger.log(Pl.Error, `(LongPolling transport) Unexpected response code: ${a.statusCode}.`),
							this._closeError = new HttpError(a.statusText || "",a.statusCode),
							this._running = !1) : this._running = !0,
							this._receiving = this._poll(this._url, o)
					}
					async _poll(e, t) {
							try {
									for (; this._running; )
											try {
													const n = `${e}&_=${Date.now()}`;
													this._logger.log(Pl.Trace, `(LongPolling transport) polling: ${n}.`);
													const i = await this._httpClient.get(n, t);
													204 === i.statusCode ? (this._logger.log(Pl.Information, "(LongPolling transport) Poll terminated by server."),
													this._running = !1) : 200 !== i.statusCode ? (this._logger.log(Pl.Error, `(LongPolling transport) Unexpected response code: ${i.statusCode}.`),
													this._closeError = new HttpError(i.statusText || "",i.statusCode),
													this._running = !1) : i.content ? (this._logger.log(Pl.Trace, `(LongPolling transport) data received. ${getDataDetail(i.content, this._options.logMessageContent)}.`),
													this.onreceive && this.onreceive(i.content)) : this._logger.log(Pl.Trace, "(LongPolling transport) Poll timed out, reissuing.")
											} catch (e) {
													this._running ? e instanceof TimeoutError ? this._logger.log(Pl.Trace, "(LongPolling transport) Poll timed out, reissuing.") : (this._closeError = e,
													this._running = !1) : this._logger.log(Pl.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`)
											}
							} finally {
									this._logger.log(Pl.Trace, "(LongPolling transport) Polling complete."),
									this.pollAborted || this._raiseOnClose()
							}
					}
					async send(e) {
							return this._running ? sendMessage(this._logger, "LongPolling", this._httpClient, this._url, e, this._options) : Promise.reject(new Error("Cannot send until the transport is connected"))
					}
					async stop() {
							this._logger.log(Pl.Trace, "(LongPolling transport) Stopping polling."),
							this._running = !1,
							this._pollAbort.abort();
							try {
									await this._receiving,
									this._logger.log(Pl.Trace, `(LongPolling transport) sending DELETE request to ${this._url}.`);
									const e = {}
										, [t,n] = getUserAgentHeader();
									e[t] = n;
									const i = {
											headers: {
													...e,
													...this._options.headers
											},
											timeout: this._options.timeout,
											withCredentials: this._options.withCredentials
									};
									await this._httpClient.delete(this._url, i),
									this._logger.log(Pl.Trace, "(LongPolling transport) DELETE request sent.")
							} finally {
									this._logger.log(Pl.Trace, "(LongPolling transport) Stop finished."),
									this._raiseOnClose()
							}
					}
					_raiseOnClose() {
							if (this.onclose) {
									let e = "(LongPolling transport) Firing onclose event.";
									this._closeError && (e += " Error: " + this._closeError),
									this._logger.log(Pl.Trace, e),
									this.onclose(this._closeError)
							}
					}
			}
			class ServerSentEventsTransport {
					constructor(e, t, n, i) {
							this._httpClient = e,
							this._accessToken = t,
							this._logger = n,
							this._options = i,
							this.onreceive = null,
							this.onclose = null
					}
					async connect(e, t) {
							return Arg.isRequired(e, "url"),
							Arg.isRequired(t, "transferFormat"),
							Arg.isIn(t, Ol, "transferFormat"),
							this._logger.log(Pl.Trace, "(SSE transport) Connecting."),
							this._url = e,
							this._accessToken && (e += (e.indexOf("?") < 0 ? "?" : "&") + `access_token=${encodeURIComponent(this._accessToken)}`),
							new Promise(((n,i)=>{
									let r, o = !1;
									if (t === Ol.Text) {
											if (Utils_Platform.isBrowser || Utils_Platform.isWebWorker)
													r = new this._options.EventSource(e,{
															withCredentials: this._options.withCredentials
													});
											else {
													const t = this._httpClient.getCookieString(e)
														, n = {};
													n.Cookie = t;
													const [i,o] = getUserAgentHeader();
													n[i] = o,
													r = new this._options.EventSource(e,{
															withCredentials: this._options.withCredentials,
															headers: {
																	...n,
																	...this._options.headers
															}
													})
											}
											try {
													r.onmessage = e=>{
															if (this.onreceive)
																	try {
																			this._logger.log(Pl.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this._options.logMessageContent)}.`),
																			this.onreceive(e.data)
																	} catch (e) {
																			return void this._close(e)
																	}
													}
													,
													r.onerror = e=>{
															o ? this._close() : i(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))
													}
													,
													r.onopen = ()=>{
															this._logger.log(Pl.Information, `SSE connected to ${this._url}`),
															this._eventSource = r,
															o = !0,
															n()
													}
											} catch (e) {
													return void i(e)
											}
									} else
											i(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"))
							}
							))
					}
					async send(e) {
							return this._eventSource ? sendMessage(this._logger, "SSE", this._httpClient, this._url, e, this._options) : Promise.reject(new Error("Cannot send until the transport is connected"))
					}
					stop() {
							return this._close(),
							Promise.resolve()
					}
					_close(e) {
							this._eventSource && (this._eventSource.close(),
							this._eventSource = void 0,
							this.onclose && this.onclose(e))
					}
			}
			class WebSocketTransport {
					constructor(e, t, n, i, r, o) {
							this._logger = n,
							this._accessTokenFactory = t,
							this._logMessageContent = i,
							this._webSocketConstructor = r,
							this._httpClient = e,
							this.onreceive = null,
							this.onclose = null,
							this._headers = o
					}
					async connect(e, t) {
							let n;
							return Arg.isRequired(e, "url"),
							Arg.isRequired(t, "transferFormat"),
							Arg.isIn(t, Ol, "transferFormat"),
							this._logger.log(Pl.Trace, "(WebSockets transport) Connecting."),
							this._accessTokenFactory && (n = await this._accessTokenFactory()),
							new Promise(((i,r)=>{
									let o;
									e = e.replace(/^http/, "ws");
									const s = this._httpClient.getCookieString(e);
									let a = !1;
									if (Utils_Platform.isNode || Utils_Platform.isReactNative) {
											const t = {}
												, [i,r] = getUserAgentHeader();
											t[i] = r,
											n && (t[HeaderNames_HeaderNames.Authorization] = `Bearer ${n}`),
											s && (t[HeaderNames_HeaderNames.Cookie] = s),
											o = new this._webSocketConstructor(e,void 0,{
													headers: {
															...t,
															...this._headers
													}
											})
									} else
											n && (e += (e.indexOf("?") < 0 ? "?" : "&") + `access_token=${encodeURIComponent(n)}`);
									o || (o = new this._webSocketConstructor(e)),
									t === Ol.Binary && (o.binaryType = "arraybuffer"),
									o.onopen = t=>{
											this._logger.log(Pl.Information, `WebSocket connected to ${e}.`),
											this._webSocket = o,
											a = !0,
											i()
									}
									,
									o.onerror = e=>{
											let t = null;
											t = "undefined" != typeof ErrorEvent && e instanceof ErrorEvent ? e.error : "There was an error with the transport",
											this._logger.log(Pl.Information, `(WebSockets transport) ${t}.`)
									}
									,
									o.onmessage = e=>{
											if (this._logger.log(Pl.Trace, `(WebSockets transport) data received. ${getDataDetail(e.data, this._logMessageContent)}.`),
											this.onreceive)
													try {
															this.onreceive(e.data)
													} catch (e) {
															return void this._close(e)
													}
									}
									,
									o.onclose = e=>{
											if (a)
													this._close(e);
											else {
													let t = null;
													t = "undefined" != typeof ErrorEvent && e instanceof ErrorEvent ? e.error : "WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",
													r(new Error(t))
											}
									}
							}
							))
					}
					send(e) {
							return this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN ? (this._logger.log(Pl.Trace, `(WebSockets transport) sending data. ${getDataDetail(e, this._logMessageContent)}.`),
							this._webSocket.send(e),
							Promise.resolve()) : Promise.reject("WebSocket is not in the OPEN state")
					}
					stop() {
							return this._webSocket && this._close(void 0),
							Promise.resolve()
					}
					_close(e) {
							this._webSocket && (this._webSocket.onclose = ()=>{}
							,
							this._webSocket.onmessage = ()=>{}
							,
							this._webSocket.onerror = ()=>{}
							,
							this._webSocket.close(),
							this._webSocket = void 0),
							this._logger.log(Pl.Trace, "(WebSockets transport) socket closed."),
							this.onclose && (!this._isCloseEvent(e) || !1 !== e.wasClean && 1e3 === e.code ? e instanceof Error ? this.onclose(e) : this.onclose() : this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason || "no reason given"}).`)))
					}
					_isCloseEvent(e) {
							return e && "boolean" == typeof e.wasClean && "number" == typeof e.code
					}
			}
			class HttpConnection {
					constructor(e, t={}) {
							var n;
							if (this._stopPromiseResolver = ()=>{}
							,
							this.features = {},
							this._negotiateVersion = 1,
							Arg.isRequired(e, "url"),
							this._logger = void 0 === (n = t.logger) ? new ConsoleLogger(Pl.Information) : null === n ? NullLogger.instance : void 0 !== n.log ? n : new ConsoleLogger(n),
							this.baseUrl = this._resolveUrl(e),
							(t = t || {}).logMessageContent = void 0 !== t.logMessageContent && t.logMessageContent,
							"boolean" != typeof t.withCredentials && void 0 !== t.withCredentials)
									throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");
							t.withCredentials = void 0 === t.withCredentials || t.withCredentials,
							t.timeout = void 0 === t.timeout ? 1e5 : t.timeout;
							let i = null
								, r = null;
							if (Utils_Platform.isNode) {
									const e = require;
									i = e("ws"),
									r = e("eventsource")
							}
							Utils_Platform.isNode || "undefined" == typeof WebSocket || t.WebSocket ? Utils_Platform.isNode && !t.WebSocket && i && (t.WebSocket = i) : t.WebSocket = WebSocket,
							Utils_Platform.isNode || "undefined" == typeof EventSource || t.EventSource ? Utils_Platform.isNode && !t.EventSource && void 0 !== r && (t.EventSource = r) : t.EventSource = EventSource,
							this._httpClient = new AccessTokenHttpClient(t.httpClient || new DefaultHttpClient(this._logger),t.accessTokenFactory),
							this._connectionState = "Disconnected",
							this._connectionStarted = !1,
							this._options = t,
							this.onreceive = null,
							this.onclose = null
					}
					async start(e) {
							if (e = e || Ol.Binary,
							Arg.isIn(e, Ol, "transferFormat"),
							this._logger.log(Pl.Debug, `Starting connection with transfer format '${Ol[e]}'.`),
							"Disconnected" !== this._connectionState)
									return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));
							if (this._connectionState = "Connecting",
							this._startInternalPromise = this._startInternal(e),
							await this._startInternalPromise,
							"Disconnecting" === this._connectionState) {
									const e = "Failed to start the HttpConnection before stop() was called.";
									return this._logger.log(Pl.Error, e),
									await this._stopPromise,
									Promise.reject(new Errors_AbortError(e))
							}
							if ("Connected" !== this._connectionState) {
									const e = "HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";
									return this._logger.log(Pl.Error, e),
									Promise.reject(new Errors_AbortError(e))
							}
							this._connectionStarted = !0
					}
					send(e) {
							return "Connected" !== this._connectionState ? Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")) : (this._sendQueue || (this._sendQueue = new TransportSendQueue(this.transport)),
							this._sendQueue.send(e))
					}
					async stop(e) {
							return "Disconnected" === this._connectionState ? (this._logger.log(Pl.Debug, `Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),
							Promise.resolve()) : "Disconnecting" === this._connectionState ? (this._logger.log(Pl.Debug, `Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),
							this._stopPromise) : (this._connectionState = "Disconnecting",
							this._stopPromise = new Promise((e=>{
									this._stopPromiseResolver = e
							}
							)),
							await this._stopInternal(e),
							void await this._stopPromise)
					}
					async _stopInternal(e) {
							this._stopError = e;
							try {
									await this._startInternalPromise
							} catch (e) {}
							if (this.transport) {
									try {
											await this.transport.stop()
									} catch (e) {
											this._logger.log(Pl.Error, `HttpConnection.transport.stop() threw error '${e}'.`),
											this._stopConnection()
									}
									this.transport = void 0
							} else
									this._logger.log(Pl.Debug, "HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")
					}
					async _startInternal(e) {
							let t = this.baseUrl;
							this._accessTokenFactory = this._options.accessTokenFactory,
							this._httpClient._accessTokenFactory = this._accessTokenFactory;
							try {
									if (this._options.skipNegotiation) {
											if (this._options.transport !== xl.WebSockets)
													throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");
											this.transport = this._constructTransport(xl.WebSockets),
											await this._startTransport(t, e)
									} else {
											let n = null
												, i = 0;
											do {
													if (n = await this._getNegotiationResponse(t),
													"Disconnecting" === this._connectionState || "Disconnected" === this._connectionState)
															throw new Errors_AbortError("The connection was stopped during negotiation.");
													if (n.error)
															throw new Error(n.error);
													if (n.ProtocolVersion)
															throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");
													if (n.url && (t = n.url),
													n.accessToken) {
															const e = n.accessToken;
															this._accessTokenFactory = ()=>e,
															this._httpClient._accessToken = e,
															this._httpClient._accessTokenFactory = void 0
													}
													i++
											} while (n.url && i < 100);
											if (100 === i && n.url)
													throw new Error("Negotiate redirection limit exceeded.");
											await this._createTransport(t, this._options.transport, n, e)
									}
									this.transport instanceof LongPollingTransport && (this.features.inherentKeepAlive = !0),
									"Connecting" === this._connectionState && (this._logger.log(Pl.Debug, "The HttpConnection connected successfully."),
									this._connectionState = "Connected")
							} catch (e) {
									return this._logger.log(Pl.Error, "Failed to start the connection: " + e),
									this._connectionState = "Disconnected",
									this.transport = void 0,
									this._stopPromiseResolver(),
									Promise.reject(e)
							}
					}
					async _getNegotiationResponse(e) {
							const t = {}
								, [n,i] = getUserAgentHeader();
							t[n] = i;
							const r = this._resolveNegotiateUrl(e);
							this._logger.log(Pl.Debug, `Sending negotiation request: ${r}.`);
							try {
									const e = await this._httpClient.post(r, {
											content: "",
											headers: {
													...t,
													...this._options.headers
											},
											timeout: this._options.timeout,
											withCredentials: this._options.withCredentials
									});
									if (200 !== e.statusCode)
											return Promise.reject(new Error(`Unexpected status code returned from negotiate '${e.statusCode}'`));
									const n = JSON.parse(e.content);
									return (!n.negotiateVersion || n.negotiateVersion < 1) && (n.connectionToken = n.connectionId),
									n
							} catch (e) {
									let t = "Failed to complete negotiation with the server: " + e;
									return e instanceof HttpError && 404 === e.statusCode && (t += " Either this is not a SignalR endpoint or there is a proxy blocking the connection."),
									this._logger.log(Pl.Error, t),
									Promise.reject(new FailedToNegotiateWithServerError(t))
							}
					}
					_createConnectUrl(e, t) {
							return t ? e + (-1 === e.indexOf("?") ? "?" : "&") + `id=${t}` : e
					}
					async _createTransport(e, t, n, i) {
							let r = this._createConnectUrl(e, n.connectionToken);
							if (this._isITransport(t))
									return this._logger.log(Pl.Debug, "Connection was provided an instance of ITransport, using that directly."),
									this.transport = t,
									await this._startTransport(r, i),
									void (this.connectionId = n.connectionId);
							const o = []
								, s = n.availableTransports || [];
							let a = n;
							for (const n of s) {
									const s = this._resolveTransportOrError(n, t, i);
									if (s instanceof Error)
											o.push(`${n.transport} failed:`),
											o.push(s);
									else if (this._isITransport(s)) {
											if (this.transport = s,
											!a) {
													try {
															a = await this._getNegotiationResponse(e)
													} catch (e) {
															return Promise.reject(e)
													}
													r = this._createConnectUrl(e, a.connectionToken)
											}
											try {
													return await this._startTransport(r, i),
													void (this.connectionId = a.connectionId)
											} catch (e) {
													if (this._logger.log(Pl.Error, `Failed to start the transport '${n.transport}': ${e}`),
													a = void 0,
													o.push(new FailedToStartTransportError(`${n.transport} failed: ${e}`,xl[n.transport])),
													"Connecting" !== this._connectionState) {
															const e = "Failed to select transport before stop() was called.";
															return this._logger.log(Pl.Debug, e),
															Promise.reject(new Errors_AbortError(e))
													}
											}
									}
							}
							return o.length > 0 ? Promise.reject(new AggregateErrors(`Unable to connect to the server with any of the available transports. ${o.join(" ")}`,o)) : Promise.reject(new Error("None of the transports supported by the client are supported by the server."))
					}
					_constructTransport(e) {
							switch (e) {
							case xl.WebSockets:
									if (!this._options.WebSocket)
											throw new Error("'WebSocket' is not supported in your environment.");
									return new WebSocketTransport(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers || {});
							case xl.ServerSentEvents:
									if (!this._options.EventSource)
											throw new Error("'EventSource' is not supported in your environment.");
									return new ServerSentEventsTransport(this._httpClient,this._httpClient._accessToken,this._logger,this._options);
							case xl.LongPolling:
									return new LongPollingTransport(this._httpClient,this._logger,this._options);
							default:
									throw new Error(`Unknown transport: ${e}.`)
							}
					}
					_startTransport(e, t) {
							return this.transport.onreceive = this.onreceive,
							this.transport.onclose = e=>this._stopConnection(e),
							this.transport.connect(e, t)
					}
					_resolveTransportOrError(e, t, n) {
							const i = xl[e.transport];
							if (null == i)
									return this._logger.log(Pl.Debug, `Skipping transport '${e.transport}' because it is not supported by this client.`),
									new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);
							if (!function(e, t) {
									return !e || 0 != (t & e)
							}(t, i))
									return this._logger.log(Pl.Debug, `Skipping transport '${xl[i]}' because it was disabled by the client.`),
									new DisabledTransportError(`'${xl[i]}' is disabled by the client.`,i);
							{
									const t = e.transferFormats.map((e=>Ol[e]));
									if (!(t.indexOf(n) >= 0))
											return this._logger.log(Pl.Debug, `Skipping transport '${xl[i]}' because it does not support the requested transfer format '${Ol[n]}'.`),
											new Error(`'${xl[i]}' does not support ${Ol[n]}.`);
									if (i === xl.WebSockets && !this._options.WebSocket || i === xl.ServerSentEvents && !this._options.EventSource)
											return this._logger.log(Pl.Debug, `Skipping transport '${xl[i]}' because it is not supported in your environment.'`),
											new UnsupportedTransportError(`'${xl[i]}' is not supported in your environment.`,i);
									this._logger.log(Pl.Debug, `Selecting transport '${xl[i]}'.`);
									try {
											return this._constructTransport(i)
									} catch (e) {
											return e
									}
							}
					}
					_isITransport(e) {
							return e && "object" == typeof e && "connect"in e
					}
					_stopConnection(e) {
							if (this._logger.log(Pl.Debug, `HttpConnection.stopConnection(${e}) called while in state ${this._connectionState}.`),
							this.transport = void 0,
							e = this._stopError || e,
							this._stopError = void 0,
							"Disconnected" !== this._connectionState) {
									if ("Connecting" === this._connectionState)
											throw this._logger.log(Pl.Warning, `Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),
											new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);
									if ("Disconnecting" === this._connectionState && this._stopPromiseResolver(),
									e ? this._logger.log(Pl.Error, `Connection disconnected with error '${e}'.`) : this._logger.log(Pl.Information, "Connection disconnected."),
									this._sendQueue && (this._sendQueue.stop().catch((e=>{
											this._logger.log(Pl.Error, `TransportSendQueue.stop() threw error '${e}'.`)
									}
									)),
									this._sendQueue = void 0),
									this.connectionId = void 0,
									this._connectionState = "Disconnected",
									this._connectionStarted) {
											this._connectionStarted = !1;
											try {
													this.onclose && this.onclose(e)
											} catch (t) {
													this._logger.log(Pl.Error, `HttpConnection.onclose(${e}) threw error '${t}'.`)
											}
									}
							} else
									this._logger.log(Pl.Debug, `Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`)
					}
					_resolveUrl(e) {
							if (0 === e.lastIndexOf("https://", 0) || 0 === e.lastIndexOf("http://", 0))
									return e;
							if (!Utils_Platform.isBrowser)
									throw new Error(`Cannot resolve '${e}'.`);
							const t = window.document.createElement("a");
							return t.href = e,
							this._logger.log(Pl.Information, `Normalizing '${e}' to '${t.href}'.`),
							t.href
					}
					_resolveNegotiateUrl(e) {
							const t = e.indexOf("?");
							let n = e.substring(0, -1 === t ? e.length : t);
							return "/" !== n[n.length - 1] && (n += "/"),
							n += "negotiate",
							n += -1 === t ? "" : e.substring(t),
							-1 === n.indexOf("negotiateVersion") && (n += -1 === t ? "?" : "&",
							n += "negotiateVersion=" + this._negotiateVersion),
							n
					}
			}
			class TransportSendQueue {
					constructor(e) {
							this._transport = e,
							this._buffer = [],
							this._executing = !0,
							this._sendBufferedData = new PromiseSource,
							this._transportResult = new PromiseSource,
							this._sendLoopPromise = this._sendLoop()
					}
					send(e) {
							return this._bufferData(e),
							this._transportResult || (this._transportResult = new PromiseSource),
							this._transportResult.promise
					}
					stop() {
							return this._executing = !1,
							this._sendBufferedData.resolve(),
							this._sendLoopPromise
					}
					_bufferData(e) {
							if (this._buffer.length && typeof this._buffer[0] != typeof e)
									throw new Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof e}`);
							this._buffer.push(e),
							this._sendBufferedData.resolve()
					}
					async _sendLoop() {
							for (; ; ) {
									if (await this._sendBufferedData.promise,
									!this._executing) {
											this._transportResult && this._transportResult.reject("Connection stopped.");
											break
									}
									this._sendBufferedData = new PromiseSource;
									const e = this._transportResult;
									this._transportResult = void 0;
									const t = "string" == typeof this._buffer[0] ? this._buffer.join("") : TransportSendQueue._concatBuffers(this._buffer);
									this._buffer.length = 0;
									try {
											await this._transport.send(t),
											e.resolve()
									} catch (t) {
											e.reject(t)
									}
							}
					}
					static _concatBuffers(e) {
							const t = e.map((e=>e.byteLength)).reduce(((e,t)=>e + t))
								, n = new Uint8Array(t);
							let i = 0;
							for (const t of e)
									n.set(new Uint8Array(t), i),
									i += t.byteLength;
							return n.buffer
					}
			}
			class PromiseSource {
					constructor() {
							this.promise = new Promise(((e,t)=>[this._resolver,this._rejecter] = [e, t]))
					}
					resolve() {
							this._resolver()
					}
					reject(e) {
							this._rejecter(e)
					}
			}
			class TextMessageFormat {
					static write(e) {
							return `${e}${TextMessageFormat.RecordSeparator}`
					}
					static parse(e) {
							if (e[e.length - 1] !== TextMessageFormat.RecordSeparator)
									throw new Error("Message is incomplete.");
							const t = e.split(TextMessageFormat.RecordSeparator);
							return t.pop(),
							t
					}
			}
			TextMessageFormat.RecordSeparatorCode = 30,
			TextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);
			class HandshakeProtocol {
					writeHandshakeRequest(e) {
							return TextMessageFormat.write(JSON.stringify(e))
					}
					parseHandshakeResponse(e) {
							let t, n;
							if (isArrayBuffer(e)) {
									const i = new Uint8Array(e)
										, r = i.indexOf(TextMessageFormat.RecordSeparatorCode);
									if (-1 === r)
											throw new Error("Message is incomplete.");
									const o = r + 1;
									t = String.fromCharCode.apply(null, Array.prototype.slice.call(i.slice(0, o))),
									n = i.byteLength > o ? i.slice(o).buffer : null
							} else {
									const i = e
										, r = i.indexOf(TextMessageFormat.RecordSeparator);
									if (-1 === r)
											throw new Error("Message is incomplete.");
									const o = r + 1;
									t = i.substring(0, o),
									n = i.length > o ? i.substring(o) : null
							}
							const i = TextMessageFormat.parse(t)
								, r = JSON.parse(i[0]);
							if (r.type)
									throw new Error("Expected a handshake response from the server.");
							return [n, r]
					}
			}
			var Dl;
			(function(e) {
					e[e.Invocation = 1] = "Invocation",
					e[e.StreamItem = 2] = "StreamItem",
					e[e.Completion = 3] = "Completion",
					e[e.StreamInvocation = 4] = "StreamInvocation",
					e[e.CancelInvocation = 5] = "CancelInvocation",
					e[e.Ping = 6] = "Ping",
					e[e.Close = 7] = "Close"
			}
			)(Dl || (Dl = {}));
			class Subject {
					constructor() {
							this.observers = []
					}
					next(e) {
							for (const t of this.observers)
									t.next(e)
					}
					error(e) {
							for (const t of this.observers)
									t.error && t.error(e)
					}
					complete() {
							for (const e of this.observers)
									e.complete && e.complete()
					}
					subscribe(e) {
							return this.observers.push(e),
							new SubjectSubscription(this,e)
					}
			}
			var Ml;
			(function(e) {
					e.Disconnected = "Disconnected",
					e.Connecting = "Connecting",
					e.Connected = "Connected",
					e.Disconnecting = "Disconnecting",
					e.Reconnecting = "Reconnecting"
			}
			)(Ml || (Ml = {}));
			class HubConnection {
					constructor(e, t, n, i) {
							this._nextKeepAlive = 0,
							this._freezeEventListener = ()=>{
									this._logger.log(Pl.Warning, "The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")
							}
							,
							Arg.isRequired(e, "connection"),
							Arg.isRequired(t, "logger"),
							Arg.isRequired(n, "protocol"),
							this.serverTimeoutInMilliseconds = 3e4,
							this.keepAliveIntervalInMilliseconds = 15e3,
							this._logger = t,
							this._protocol = n,
							this.connection = e,
							this._reconnectPolicy = i,
							this._handshakeProtocol = new HandshakeProtocol,
							this.connection.onreceive = e=>this._processIncomingData(e),
							this.connection.onclose = e=>this._connectionClosed(e),
							this._callbacks = {},
							this._methods = {},
							this._closedCallbacks = [],
							this._reconnectingCallbacks = [],
							this._reconnectedCallbacks = [],
							this._invocationId = 0,
							this._receivedHandshakeResponse = !1,
							this._connectionState = Ml.Disconnected,
							this._connectionStarted = !1,
							this._cachedPingMessage = this._protocol.writeMessage({
									type: Dl.Ping
							})
					}
					static create(e, t, n, i) {
							return new HubConnection(e,t,n,i)
					}
					get state() {
							return this._connectionState
					}
					get connectionId() {
							return this.connection && this.connection.connectionId || null
					}
					get baseUrl() {
							return this.connection.baseUrl || ""
					}
					set baseUrl(e) {
							if (this._connectionState !== Ml.Disconnected && this._connectionState !== Ml.Reconnecting)
									throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");
							if (!e)
									throw new Error("The HubConnection url must be a valid url.");
							this.connection.baseUrl = e
					}
					start() {
							return this._startPromise = this._startWithStateTransitions(),
							this._startPromise
					}
					async _startWithStateTransitions() {
							if (this._connectionState !== Ml.Disconnected)
									return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));
							this._connectionState = Ml.Connecting,
							this._logger.log(Pl.Debug, "Starting HubConnection.");
							try {
									await this._startInternal(),
									Utils_Platform.isBrowser && window.document.addEventListener("freeze", this._freezeEventListener),
									this._connectionState = Ml.Connected,
									this._connectionStarted = !0,
									this._logger.log(Pl.Debug, "HubConnection connected successfully.")
							} catch (e) {
									return this._connectionState = Ml.Disconnected,
									this._logger.log(Pl.Debug, `HubConnection failed to start successfully because of error '${e}'.`),
									Promise.reject(e)
							}
					}
					async _startInternal() {
							this._stopDuringStartError = void 0,
							this._receivedHandshakeResponse = !1;
							const e = new Promise(((e,t)=>{
									this._handshakeResolver = e,
									this._handshakeRejecter = t
							}
							));
							await this.connection.start(this._protocol.transferFormat);
							try {
									const t = {
											protocol: this._protocol.name,
											version: this._protocol.version
									};
									if (this._logger.log(Pl.Debug, "Sending handshake request."),
									await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(t)),
									this._logger.log(Pl.Information, `Using HubProtocol '${this._protocol.name}'.`),
									this._cleanupTimeout(),
									this._resetTimeoutPeriod(),
									this._resetKeepAliveInterval(),
									await e,
									this._stopDuringStartError)
											throw this._stopDuringStartError;
									this.connection.features.inherentKeepAlive || await this._sendMessage(this._cachedPingMessage)
							} catch (e) {
									throw this._logger.log(Pl.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`),
									this._cleanupTimeout(),
									this._cleanupPingTimer(),
									await this.connection.stop(e),
									e
							}
					}
					async stop() {
							const e = this._startPromise;
							this._stopPromise = this._stopInternal(),
							await this._stopPromise;
							try {
									await e
							} catch (e) {}
					}
					_stopInternal(e) {
							return this._connectionState === Ml.Disconnected ? (this._logger.log(Pl.Debug, `Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),
							Promise.resolve()) : this._connectionState === Ml.Disconnecting ? (this._logger.log(Pl.Debug, `Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),
							this._stopPromise) : (this._connectionState = Ml.Disconnecting,
							this._logger.log(Pl.Debug, "Stopping HubConnection."),
							this._reconnectDelayHandle ? (this._logger.log(Pl.Debug, "Connection stopped during reconnect delay. Done reconnecting."),
							clearTimeout(this._reconnectDelayHandle),
							this._reconnectDelayHandle = void 0,
							this._completeClose(),
							Promise.resolve()) : (this._cleanupTimeout(),
							this._cleanupPingTimer(),
							this._stopDuringStartError = e || new Errors_AbortError("The connection was stopped before the hub handshake could complete."),
							this.connection.stop(e)))
					}
					stream(e, ...t) {
							const [n,i] = this._replaceStreamingParams(t)
								, r = this._createStreamInvocation(e, t, i);
							let o;
							const s = new Subject;
							return s.cancelCallback = ()=>{
									const e = this._createCancelInvocation(r.invocationId);
									return delete this._callbacks[r.invocationId],
									o.then((()=>this._sendWithProtocol(e)))
							}
							,
							this._callbacks[r.invocationId] = (e,t)=>{
									t ? s.error(t) : e && (e.type === Dl.Completion ? e.error ? s.error(new Error(e.error)) : s.complete() : s.next(e.item))
							}
							,
							o = this._sendWithProtocol(r).catch((e=>{
									s.error(e),
									delete this._callbacks[r.invocationId]
							}
							)),
							this._launchStreams(n, o),
							s
					}
					_sendMessage(e) {
							return this._resetKeepAliveInterval(),
							this.connection.send(e)
					}
					_sendWithProtocol(e) {
							return this._sendMessage(this._protocol.writeMessage(e))
					}
					send(e, ...t) {
							const [n,i] = this._replaceStreamingParams(t)
								, r = this._sendWithProtocol(this._createInvocation(e, t, !0, i));
							return this._launchStreams(n, r),
							r
					}
					invoke(e, ...t) {
							const [n,i] = this._replaceStreamingParams(t)
								, r = this._createInvocation(e, t, !1, i)
								, o = new Promise(((e,t)=>{
									this._callbacks[r.invocationId] = (n,i)=>{
											i ? t(i) : n && (n.type === Dl.Completion ? n.error ? t(new Error(n.error)) : e(n.result) : t(new Error(`Unexpected message type: ${n.type}`)))
									}
									;
									const i = this._sendWithProtocol(r).catch((e=>{
											t(e),
											delete this._callbacks[r.invocationId]
									}
									));
									this._launchStreams(n, i)
							}
							));
							return o
					}
					on(e, t) {
							e && t && (e = e.toLowerCase(),
							this._methods[e] || (this._methods[e] = []),
							-1 === this._methods[e].indexOf(t) && this._methods[e].push(t))
					}
					off(e, t) {
							if (!e)
									return;
							e = e.toLowerCase();
							const n = this._methods[e];
							if (n)
									if (t) {
											const i = n.indexOf(t);
											-1 !== i && (n.splice(i, 1),
											0 === n.length && delete this._methods[e])
									} else
											delete this._methods[e]
					}
					onclose(e) {
							e && this._closedCallbacks.push(e)
					}
					onreconnecting(e) {
							e && this._reconnectingCallbacks.push(e)
					}
					onreconnected(e) {
							e && this._reconnectedCallbacks.push(e)
					}
					_processIncomingData(e) {
							if (this._cleanupTimeout(),
							this._receivedHandshakeResponse || (e = this._processHandshakeResponse(e),
							this._receivedHandshakeResponse = !0),
							e) {
									const t = this._protocol.parseMessages(e, this._logger);
									for (const e of t)
											switch (e.type) {
											case Dl.Invocation:
													this._invokeClientMethod(e);
													break;
											case Dl.StreamItem:
											case Dl.Completion:
													{
															const t = this._callbacks[e.invocationId];
															if (t) {
																	e.type === Dl.Completion && delete this._callbacks[e.invocationId];
																	try {
																			t(e)
																	} catch (e) {
																			this._logger.log(Pl.Error, `Stream callback threw error: ${getErrorString(e)}`)
																	}
															}
															break
													}
											case Dl.Ping:
													break;
											case Dl.Close:
													{
															this._logger.log(Pl.Information, "Close message received from server.");
															const t = e.error ? new Error("Server returned an error on close: " + e.error) : void 0;
															!0 === e.allowReconnect ? this.connection.stop(t) : this._stopPromise = this._stopInternal(t);
															break
													}
											default:
													this._logger.log(Pl.Warning, `Invalid message type: ${e.type}.`)
											}
							}
							this._resetTimeoutPeriod()
					}
					_processHandshakeResponse(e) {
							let t, n;
							try {
									[n,t] = this._handshakeProtocol.parseHandshakeResponse(e)
							} catch (e) {
									const t = "Error parsing handshake response: " + e;
									this._logger.log(Pl.Error, t);
									const n = new Error(t);
									throw this._handshakeRejecter(n),
									n
							}
							if (t.error) {
									const e = "Server returned handshake error: " + t.error;
									this._logger.log(Pl.Error, e);
									const n = new Error(e);
									throw this._handshakeRejecter(n),
									n
							}
							return this._logger.log(Pl.Debug, "Server handshake complete."),
							this._handshakeResolver(),
							n
					}
					_resetKeepAliveInterval() {
							this.connection.features.inherentKeepAlive || (this._nextKeepAlive = (new Date).getTime() + this.keepAliveIntervalInMilliseconds,
							this._cleanupPingTimer())
					}
					_resetTimeoutPeriod() {
							if (!(this.connection.features && this.connection.features.inherentKeepAlive || (this._timeoutHandle = setTimeout((()=>this.serverTimeout()), this.serverTimeoutInMilliseconds),
							void 0 !== this._pingServerHandle))) {
									let e = this._nextKeepAlive - (new Date).getTime();
									e < 0 && (e = 0),
									this._pingServerHandle = setTimeout((async()=>{
											if (this._connectionState === Ml.Connected)
													try {
															await this._sendMessage(this._cachedPingMessage)
													} catch {
															this._cleanupPingTimer()
													}
									}
									), e)
							}
					}
					serverTimeout() {
							this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))
					}
					async _invokeClientMethod(e) {
							const t = e.target.toLowerCase()
								, n = this._methods[t];
							if (!n)
									return this._logger.log(Pl.Warning, `No client method with the name '${t}' found.`),
									void (e.invocationId && (this._logger.log(Pl.Warning, `No result given for '${t}' method and invocation ID '${e.invocationId}'.`),
									await this._sendWithProtocol(this._createCompletionMessage(e.invocationId, "Client didn't provide a result.", null))));
							const i = n.slice()
								, r = !!e.invocationId;
							let o, s, a;
							for (const n of i)
									try {
											const i = o;
											o = await n.apply(this, e.arguments),
											r && o && i && (this._logger.log(Pl.Error, `Multiple results provided for '${t}'. Sending error to server.`),
											a = this._createCompletionMessage(e.invocationId, "Client provided multiple results.", null)),
											s = void 0
									} catch (e) {
											s = e,
											this._logger.log(Pl.Error, `A callback for the method '${t}' threw error '${e}'.`)
									}
							a ? await this._sendWithProtocol(a) : r ? (s ? a = this._createCompletionMessage(e.invocationId, `${s}`, null) : void 0 !== o ? a = this._createCompletionMessage(e.invocationId, null, o) : (this._logger.log(Pl.Warning, `No result given for '${t}' method and invocation ID '${e.invocationId}'.`),
							a = this._createCompletionMessage(e.invocationId, "Client didn't provide a result.", null)),
							await this._sendWithProtocol(a)) : o && this._logger.log(Pl.Error, `Result given for '${t}' method but server is not expecting a result.`)
					}
					_connectionClosed(e) {
							this._logger.log(Pl.Debug, `HubConnection.connectionClosed(${e}) called while in state ${this._connectionState}.`),
							this._stopDuringStartError = this._stopDuringStartError || e || new Errors_AbortError("The underlying connection was closed before the hub handshake could complete."),
							this._handshakeResolver && this._handshakeResolver(),
							this._cancelCallbacksWithError(e || new Error("Invocation canceled due to the underlying connection being closed.")),
							this._cleanupTimeout(),
							this._cleanupPingTimer(),
							this._connectionState === Ml.Disconnecting ? this._completeClose(e) : this._connectionState === Ml.Connected && this._reconnectPolicy ? this._reconnect(e) : this._connectionState === Ml.Connected && this._completeClose(e)
					}
					_completeClose(e) {
							if (this._connectionStarted) {
									this._connectionState = Ml.Disconnected,
									this._connectionStarted = !1,
									Utils_Platform.isBrowser && window.document.removeEventListener("freeze", this._freezeEventListener);
									try {
											this._closedCallbacks.forEach((t=>t.apply(this, [e])))
									} catch (t) {
											this._logger.log(Pl.Error, `An onclose callback called with error '${e}' threw error '${t}'.`)
									}
							}
					}
					async _reconnect(e) {
							const t = Date.now();
							let n = 0
								, i = void 0 !== e ? e : new Error("Attempting to reconnect due to a unknown error.")
								, r = this._getNextRetryDelay(n++, 0, i);
							if (null === r)
									return this._logger.log(Pl.Debug, "Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),
									void this._completeClose(e);
							if (this._connectionState = Ml.Reconnecting,
							e ? this._logger.log(Pl.Information, `Connection reconnecting because of error '${e}'.`) : this._logger.log(Pl.Information, "Connection reconnecting."),
							0 !== this._reconnectingCallbacks.length) {
									try {
											this._reconnectingCallbacks.forEach((t=>t.apply(this, [e])))
									} catch (t) {
											this._logger.log(Pl.Error, `An onreconnecting callback called with error '${e}' threw error '${t}'.`)
									}
									if (this._connectionState !== Ml.Reconnecting)
											return void this._logger.log(Pl.Debug, "Connection left the reconnecting state in onreconnecting callback. Done reconnecting.")
							}
							for (; null !== r; ) {
									if (this._logger.log(Pl.Information, `Reconnect attempt number ${n} will start in ${r} ms.`),
									await new Promise((e=>{
											this._reconnectDelayHandle = setTimeout(e, r)
									}
									)),
									this._reconnectDelayHandle = void 0,
									this._connectionState !== Ml.Reconnecting)
											return void this._logger.log(Pl.Debug, "Connection left the reconnecting state during reconnect delay. Done reconnecting.");
									try {
											if (await this._startInternal(),
											this._connectionState = Ml.Connected,
											this._logger.log(Pl.Information, "HubConnection reconnected successfully."),
											0 !== this._reconnectedCallbacks.length)
													try {
															this._reconnectedCallbacks.forEach((e=>e.apply(this, [this.connection.connectionId])))
													} catch (e) {
															this._logger.log(Pl.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`)
													}
											return
									} catch (e) {
											if (this._logger.log(Pl.Information, `Reconnect attempt failed because of error '${e}'.`),
											this._connectionState !== Ml.Reconnecting)
													return this._logger.log(Pl.Debug, `Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),
													void (this._connectionState === Ml.Disconnecting && this._completeClose());
											i = e instanceof Error ? e : new Error(e.toString()),
											r = this._getNextRetryDelay(n++, Date.now() - t, i)
									}
							}
							this._logger.log(Pl.Information, `Reconnect retries have been exhausted after ${Date.now() - t} ms and ${n} failed attempts. Connection disconnecting.`),
							this._completeClose()
					}
					_getNextRetryDelay(e, t, n) {
							try {
									return this._reconnectPolicy.nextRetryDelayInMilliseconds({
											elapsedMilliseconds: t,
											previousRetryCount: e,
											retryReason: n
									})
							} catch (n) {
									return this._logger.log(Pl.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${t}) threw error '${n}'.`),
									null
							}
					}
					_cancelCallbacksWithError(e) {
							const t = this._callbacks;
							this._callbacks = {},
							Object.keys(t).forEach((n=>{
									const i = t[n];
									try {
											i(null, e)
									} catch (t) {
											this._logger.log(Pl.Error, `Stream 'error' callback called with '${e}' threw error: ${getErrorString(t)}`)
									}
							}
							))
					}
					_cleanupPingTimer() {
							this._pingServerHandle && (clearTimeout(this._pingServerHandle),
							this._pingServerHandle = void 0)
					}
					_cleanupTimeout() {
							this._timeoutHandle && clearTimeout(this._timeoutHandle)
					}
					_createInvocation(e, t, n, i) {
							if (n)
									return 0 !== i.length ? {
											arguments: t,
											streamIds: i,
											target: e,
											type: Dl.Invocation
									} : {
											arguments: t,
											target: e,
											type: Dl.Invocation
									};
							{
									const n = this._invocationId;
									return this._invocationId++,
									0 !== i.length ? {
											arguments: t,
											invocationId: n.toString(),
											streamIds: i,
											target: e,
											type: Dl.Invocation
									} : {
											arguments: t,
											invocationId: n.toString(),
											target: e,
											type: Dl.Invocation
									}
							}
					}
					_launchStreams(e, t) {
							if (0 !== e.length) {
									t || (t = Promise.resolve());
									for (const n in e)
											e[n].subscribe({
													complete: ()=>{
															t = t.then((()=>this._sendWithProtocol(this._createCompletionMessage(n))))
													}
													,
													error: e=>{
															let i;
															i = e instanceof Error ? e.message : e && e.toString ? e.toString() : "Unknown error",
															t = t.then((()=>this._sendWithProtocol(this._createCompletionMessage(n, i))))
													}
													,
													next: e=>{
															t = t.then((()=>this._sendWithProtocol(this._createStreamItemMessage(n, e))))
													}
											})
							}
					}
					_replaceStreamingParams(e) {
							const t = []
								, n = [];
							for (let i = 0; i < e.length; i++) {
									const r = e[i];
									if (this._isObservable(r)) {
											const o = this._invocationId;
											this._invocationId++,
											t[o] = r,
											n.push(o.toString()),
											e.splice(i, 1)
									}
							}
							return [t, n]
					}
					_isObservable(e) {
							return e && e.subscribe && "function" == typeof e.subscribe
					}
					_createStreamInvocation(e, t, n) {
							const i = this._invocationId;
							return this._invocationId++,
							0 !== n.length ? {
									arguments: t,
									invocationId: i.toString(),
									streamIds: n,
									target: e,
									type: Dl.StreamInvocation
							} : {
									arguments: t,
									invocationId: i.toString(),
									target: e,
									type: Dl.StreamInvocation
							}
					}
					_createCancelInvocation(e) {
							return {
									invocationId: e,
									type: Dl.CancelInvocation
							}
					}
					_createStreamItemMessage(e, t) {
							return {
									invocationId: e,
									item: t,
									type: Dl.StreamItem
							}
					}
					_createCompletionMessage(e, t, n) {
							return t ? {
									error: t,
									invocationId: e,
									type: Dl.Completion
							} : {
									invocationId: e,
									result: n,
									type: Dl.Completion
							}
					}
			}
			class JsonHubProtocol {
					constructor() {
							this.name = "json",
							this.version = 1,
							this.transferFormat = Ol.Text
					}
					parseMessages(e, t) {
							if ("string" != typeof e)
									throw new Error("Invalid input for JSON hub protocol. Expected a string.");
							if (!e)
									return [];
							null === t && (t = NullLogger.instance);
							const n = TextMessageFormat.parse(e)
								, i = [];
							for (const e of n) {
									const n = JSON.parse(e);
									if ("number" != typeof n.type)
											throw new Error("Invalid payload.");
									switch (n.type) {
									case Dl.Invocation:
											this._isInvocationMessage(n);
											break;
									case Dl.StreamItem:
											this._isStreamItemMessage(n);
											break;
									case Dl.Completion:
											this._isCompletionMessage(n);
											break;
									case Dl.Ping:
									case Dl.Close:
											break;
									default:
											t.log(Pl.Information, "Unknown message type '" + n.type + "' ignored.");
											continue
									}
									i.push(n)
							}
							return i
					}
					writeMessage(e) {
							return TextMessageFormat.write(JSON.stringify(e))
					}
					_isInvocationMessage(e) {
							this._assertNotEmptyString(e.target, "Invalid payload for Invocation message."),
							void 0 !== e.invocationId && this._assertNotEmptyString(e.invocationId, "Invalid payload for Invocation message.")
					}
					_isStreamItemMessage(e) {
							if (this._assertNotEmptyString(e.invocationId, "Invalid payload for StreamItem message."),
							void 0 === e.item)
									throw new Error("Invalid payload for StreamItem message.")
					}
					_isCompletionMessage(e) {
							if (e.result && e.error)
									throw new Error("Invalid payload for Completion message.");
							!e.result && e.error && this._assertNotEmptyString(e.error, "Invalid payload for Completion message."),
							this._assertNotEmptyString(e.invocationId, "Invalid payload for Completion message.")
					}
					_assertNotEmptyString(e, t) {
							if ("string" != typeof e || "" === e)
									throw new Error(t)
					}
			}
			const Ll = {
					trace: Pl.Trace,
					debug: Pl.Debug,
					info: Pl.Information,
					information: Pl.Information,
					warn: Pl.Warning,
					warning: Pl.Warning,
					error: Pl.Error,
					critical: Pl.Critical,
					none: Pl.None
			};
			class HubConnectionBuilder {
					configureLogging(e) {
							if (Arg.isRequired(e, "logging"),
							void 0 !== e.log)
									this.logger = e;
							else if ("string" == typeof e) {
									const t = function(e) {
											const t = Ll[e.toLowerCase()];
											if (void 0 !== t)
													return t;
											throw new Error(`Unknown log level: ${e}`)
									}(e);
									this.logger = new ConsoleLogger(t)
							} else
									this.logger = new ConsoleLogger(e);
							return this
					}
					withUrl(e, t) {
							return Arg.isRequired(e, "url"),
							Arg.isNotEmpty(e, "url"),
							this.url = e,
							this.httpConnectionOptions = "object" == typeof t ? {
									...this.httpConnectionOptions,
									...t
							} : {
									...this.httpConnectionOptions,
									transport: t
							},
							this
					}
					withHubProtocol(e) {
							return Arg.isRequired(e, "protocol"),
							this.protocol = e,
							this
					}
					withAutomaticReconnect(e) {
							if (this.reconnectPolicy)
									throw new Error("A reconnectPolicy has already been set.");
							return e ? Array.isArray(e) ? this.reconnectPolicy = new DefaultReconnectPolicy(e) : this.reconnectPolicy = e : this.reconnectPolicy = new DefaultReconnectPolicy,
							this
					}
					build() {
							const e = this.httpConnectionOptions || {};
							if (void 0 === e.logger && (e.logger = this.logger),
							!this.url)
									throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");
							const t = new HttpConnection(this.url,e);
							return HubConnection.create(t, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol, this.reconnectPolicy)
					}
			}
			class DisposableDeferredPromise_DeferredPromise {
					constructor() {
							this._p = this.reconstructPromise(),
							this.rejected = !1,
							this.resolved = !1
					}
					get isRejected() {
							return this.rejected
					}
					get isResolved() {
							return this.resolved
					}
					get isSettled() {
							return this.rejected || this.resolved
					}
					get p() {
							return this._p
					}
					dispose() {
							this._p && (delete this._p,
							this.isSettled || this.completeCallback(void 0),
							delete this.completeCallback,
							delete this.errorCallback)
					}
					reset() {
							this.dispose(),
							this.rejected = !1,
							this.resolved = !1,
							this._p = this.reconstructPromise()
					}
					complete(e) {
							return new Promise((t=>{
									this.completeCallback(e),
									this.resolved = !0,
									t()
							}
							))
					}
					error(e) {
							return new Promise((t=>{
									this.errorCallback(e),
									this.rejected = !0,
									t()
							}
							))
					}
					cancel() {
							new Promise((e=>{
									this.errorCallback(new errors_CancellationError),
									this.rejected = !0,
									e()
							}
							))
					}
					reconstructPromise() {
							return new Promise(((e,t)=>{
									this.completeCallback = e,
									this.errorCallback = t
							}
							))
					}
			}
			let kl = class extends StreamEventNotifier {
					constructor(e, t) {
							var n;
							super(),
							this.config = e,
							this.log = t,
							this.subscription = this._register(new lifecycle_MutableDisposable),
							this._deferred = this._register(new lifecycle_MutableDisposable),
							this._closed = !1,
							this.update = e=>{
									e.type = fe.GetMessagesResponse,
									this.onUpdateEmitter.fire(e)
							}
							,
							this.next = e=>{
									var t, n;
									e.type = fe.ChatResponse;
									const i = CoreUtils.getActionForResultType(null === (t = e.result) || void 0 === t ? void 0 : t.value);
									i === Ko.ValidResponse ? this.onResponseEmitter.fire(e) : (null === (n = this.log) || void 0 === n || n.trace(this, this.next, Qo.Error, `action: ${i}; result:`, e.result).write(),
									this.error(i))
							}
							,
							this.error = async e=>{
									var t;
									null === (t = this.log) || void 0 === t || t.error(this, this.error, Qo.Error, e).write(),
									await this.stopConnectionAsync(),
									this.deferred.error(e).finally((()=>this.finalizeStreamSubscription()))
							}
							,
							this.complete = async()=>{
									var e;
									null === (e = this.log) || void 0 === e || e.trace(this, this.complete, Qo.Complete).write(),
									await this.stopConnectionAsync(),
									this.deferred.complete().finally((()=>this.finalizeStreamSubscription())),
									this.onCompleteEmitter.fire()
							}
							,
							null === (n = this.log) || void 0 === n || n.trace(this, "ctor", null).write(),
							this.connection = this.buildHubConnection(),
							this.finalizeStreamSubscription()
					}
					get deferred() {
							return this._deferred.value
					}
					get closed() {
							return this._closed
					}
					set closed(e) {
							this._closed || this._closed === e || (this._closed = e,
							this._closed && (this.deferred.cancel(),
							this.finalizeStreamSubscription()))
					}
					async handleStreamEventsAsync(e) {
							var t;
							return null === (t = this.log) || void 0 === t || t.trace(this, this.handleStreamEventsAsync, null).write(),
							await this.startConnectionAsync(),
							this.subscription.value = this.connection.stream("chat", e).subscribe(this),
							this.onBeginEmitter.fire(e),
							this.deferred.p
					}
					cancelPendingRequest() {
							this.subscription.clear(),
							this.complete()
					}
					finalizeStreamSubscription() {
							var e;
							null === (e = this.log) || void 0 === e || e.trace(this, this.finalizeStreamSubscription, null).write(),
							this._closed = !1,
							this.subscription.clear(),
							this._deferred.value = new DisposableDeferredPromise_DeferredPromise
					}
					async startConnectionAsync() {
							this.connection.baseUrl = this.getConnectionBaseUrl(),
							await this.connection.start()
					}
					async stopConnectionAsync() {
							await this.connection.stop()
					}
					buildHubConnection() {
							const e = {
									timeout: 1e4,
									transport: xl.WebSockets,
									skipNegotiation: !0,
									withCredentials: !1
							};
							try {
									const t = this.getConnectionBaseUrl()
										, n = (new HubConnectionBuilder).withUrl(t, e).withAutomaticReconnect().build();
									return n.on("update", this.update),
									n
							} catch (e) {
									throw new Error(Ko.FailedToConnect)
							}
					}
					getConnectionBaseUrl() {
							const {baseUrl: e, pathBase: t, pathChatHub: n} = this.config.sydney;
							return `${e}${t}${n}`
					}
					dispose() {
							this.connection.off("update", this.update),
							this.stopConnectionAsync(),
							this._closed = !0,
							super.dispose()
					}
			}
			;
			var Fl;
			kl = __decorate([__param(0, Yo), __param(1, F(Vs)), __metadata("design:paramtypes", [Object, Object])], kl),
			function(e) {
					e[e.MinWindowWidth = 0] = "MinWindowWidth",
					e[e.MinElementWidth = 1] = "MinElementWidth"
			}(Fl || (Fl = {}));
			const Bl = [{
					trigger: Fl.MinWindowWidth,
					name: "big",
					value: 1200
			}, {
					trigger: Fl.MinWindowWidth,
					name: "medium",
					value: 800
			}, {
					trigger: Fl.MinWindowWidth,
					name: "small",
					value: 0
			}]
				, Gl = [{
					trigger: Fl.MinElementWidth,
					name: "big",
					value: 1200
			}, {
					trigger: Fl.MinElementWidth,
					name: "medium",
					value: 800
			}, {
					trigger: Fl.MinElementWidth,
					name: "small",
					value: 0
			}];
			class LayoutStateProviderBase extends lifecycle_Disposable {
					constructor(e) {
							var t;
							super(),
							this.log = e,
							this._activeState = null,
							this.activeStateChangedEmitter = this._register(new Emitter),
							null === (t = this.log) || void 0 === t || t.trace(this, "ctor", null).write()
					}
					get activeState() {
							return this._activeState
					}
					get onActiveStateChanged() {
							return this.activeStateChangedEmitter.event
					}
					updateActiveState(e) {
							var t;
							this._activeState !== e && (null === (t = this.log) || void 0 === t || t.trace(this, this.updateActiveState, "state:", e).write(),
							this._activeState = e,
							this.activeStateChangedEmitter.fire(e))
					}
			}
			__decorate([observable, __metadata("design:type", Object)], LayoutStateProviderBase.prototype, "_activeState", void 0);
			let Ul = class extends LayoutStateProviderBase {
					constructor(e) {
							super(e),
							this.elementResizeObserver = null,
							this.element = null,
							this.handleResized = e=>{
									var t;
									null === (t = this.log) || void 0 === t || t.trace(this, this.handleResized, null).write();
									for (const t of Gl)
											if (e[0].target.clientWidth >= t.value)
													return void super.updateActiveState(t)
							}
							,
							this.configureResizeObserver()
					}
					dispose() {
							super.dispose(),
							this.element && this.elementResizeObserver && (this.elementResizeObserver.unobserve(this.element),
							this.elementResizeObserver = null,
							this.element = null)
					}
					configureResizeObserver() {
							this.element = document.querySelector("cib-serp"),
							this.element && (this.elementResizeObserver = new ResizeObserver(this.handleResized),
							this.elementResizeObserver.observe(this.element))
					}
			}
			;
			Ul = __decorate([__param(0, F(Vs)), __metadata("design:paramtypes", [Object])], Ul);
			class WindowManager {
					constructor() {
							this._zoomLevel = 0,
							this._zoomFactor = 1,
							this._fullscreen = !1,
							this._onDidChangeFullscreen = new Emitter,
							this.onDidChangeFullscreen = this._onDidChangeFullscreen.event
					}
					getZoomLevel() {
							return this._zoomLevel
					}
					setZoomLevel(e, t) {
							this._zoomLevel !== e && (this._zoomLevel = e)
					}
					getZoomFactor() {
							return this._zoomFactor
					}
					setZoomFactor(e) {
							this._zoomFactor = e
					}
					setFullscreen(e) {
							this._fullscreen !== e && (this._fullscreen = e,
							this._onDidChangeFullscreen.fire())
					}
					isFullscreen() {
							return this._fullscreen
					}
			}
			WindowManager.INSTANCE = new WindowManager;
			class DevicePixelRatioMonitor extends lifecycle_Disposable {
					constructor() {
							super(),
							this._onDidChange = this._register(new Emitter),
							this.onDidChange = this._onDidChange.event,
							this._listener = ()=>this._handleChange(!0),
							this._mediaQueryList = null,
							this._handleChange(!1)
					}
					_handleChange(e) {
							var t;
							null === (t = this._mediaQueryList) || void 0 === t || t.removeEventListener("change", this._listener),
							this._mediaQueryList = matchMedia(`(resolution: ${window.devicePixelRatio}dppx)`),
							this._mediaQueryList.addEventListener("change", this._listener),
							e && this._onDidChange.fire()
					}
			}
			class PixelRatioImpl extends lifecycle_Disposable {
					constructor() {
							super(),
							this._onDidChange = this._register(new Emitter),
							this.onDidChange = this._onDidChange.event,
							this._value = this._getPixelRatio();
							const e = this._register(new DevicePixelRatioMonitor);
							this._register(e.onDidChange((()=>{
									this._value = this._getPixelRatio(),
									this._onDidChange.fire(this._value)
							}
							)))
					}
					get value() {
							return this._value
					}
					_getPixelRatio() {
							const e = document.createElement("canvas").getContext("2d");
							return (window.devicePixelRatio || 1) / (e.webkitBackingStorePixelRatio || e.mozBackingStorePixelRatio || e.msBackingStorePixelRatio || e.oBackingStorePixelRatio || e.backingStorePixelRatio || 1)
					}
			}
			new class {
					constructor() {
							this._pixelRatioMonitor = null
					}
					_getOrCreatePixelRatioMonitor() {
							return this._pixelRatioMonitor || (this._pixelRatioMonitor = function(e) {
									return null == Q || Q.markAsSingleton(e),
									e
							}(new PixelRatioImpl)),
							this._pixelRatioMonitor
					}
					get value() {
							return this._getOrCreatePixelRatioMonitor().value
					}
					get onDidChange() {
							return this._getOrCreatePixelRatioMonitor().onDidChange
					}
			}
			;
			WindowManager.INSTANCE.onDidChangeFullscreen;
			const zl = navigator.userAgent
				, $l = (zl.indexOf("Firefox"),
			zl.indexOf("AppleWebKit"),
			zl.indexOf("Chrome") >= 0)
				, Vl = !$l && zl.indexOf("Safari") >= 0;
			zl.indexOf("Electron/"),
			zl.indexOf("Android");
			let Hl = !1;
			if (window.matchMedia) {
					const e = window.matchMedia("(display-mode: standalone) or (display-mode: window-controls-overlay)")
						, t = window.matchMedia("(display-mode: fullscreen)");
					Hl = e.matches,
					function(e, t) {
							"string" == typeof e && (e = window.matchMedia(e)),
							e.addEventListener("change", t)
					}(e, (({matches: e})=>{
							Hl && t.matches || (Hl = e)
					}
					))
			}
			var ql;
			__webpack_require__(9870);
			(function(e) {
					e[e.Always = 0] = "Always",
					e[e.FullScreen = 1] = "FullScreen",
					e[e.None = 2] = "None"
			}
			)(ql || (ql = {}));
			document.queryCommandSupported && document.queryCommandSupported("copy") || navigator && navigator.clipboard && navigator.clipboard.writeText,
			navigator && navigator.clipboard && navigator.clipboard.readText,
			Hl || navigator.keyboard,
			"ontouchstart"in window || navigator.maxTouchPoints,
			window.PointerEvent && ("ontouchstart"in window || window.navigator.maxTouchPoints > 0 || navigator.maxTouchPoints);
			var jl, Wl;
			(function(e) {
					e[e.DependsOnKbLayout = -1] = "DependsOnKbLayout",
					e[e.Unknown = 0] = "Unknown",
					e[e.Backspace = 1] = "Backspace",
					e[e.Tab = 2] = "Tab",
					e[e.Enter = 3] = "Enter",
					e[e.Shift = 4] = "Shift",
					e[e.Ctrl = 5] = "Ctrl",
					e[e.Alt = 6] = "Alt",
					e[e.PauseBreak = 7] = "PauseBreak",
					e[e.CapsLock = 8] = "CapsLock",
					e[e.Escape = 9] = "Escape",
					e[e.Space = 10] = "Space",
					e[e.PageUp = 11] = "PageUp",
					e[e.PageDown = 12] = "PageDown",
					e[e.End = 13] = "End",
					e[e.Home = 14] = "Home",
					e[e.LeftArrow = 15] = "LeftArrow",
					e[e.UpArrow = 16] = "UpArrow",
					e[e.RightArrow = 17] = "RightArrow",
					e[e.DownArrow = 18] = "DownArrow",
					e[e.Insert = 19] = "Insert",
					e[e.Delete = 20] = "Delete",
					e[e.Digit0 = 21] = "Digit0",
					e[e.Digit1 = 22] = "Digit1",
					e[e.Digit2 = 23] = "Digit2",
					e[e.Digit3 = 24] = "Digit3",
					e[e.Digit4 = 25] = "Digit4",
					e[e.Digit5 = 26] = "Digit5",
					e[e.Digit6 = 27] = "Digit6",
					e[e.Digit7 = 28] = "Digit7",
					e[e.Digit8 = 29] = "Digit8",
					e[e.Digit9 = 30] = "Digit9",
					e[e.KeyA = 31] = "KeyA",
					e[e.KeyB = 32] = "KeyB",
					e[e.KeyC = 33] = "KeyC",
					e[e.KeyD = 34] = "KeyD",
					e[e.KeyE = 35] = "KeyE",
					e[e.KeyF = 36] = "KeyF",
					e[e.KeyG = 37] = "KeyG",
					e[e.KeyH = 38] = "KeyH",
					e[e.KeyI = 39] = "KeyI",
					e[e.KeyJ = 40] = "KeyJ",
					e[e.KeyK = 41] = "KeyK",
					e[e.KeyL = 42] = "KeyL",
					e[e.KeyM = 43] = "KeyM",
					e[e.KeyN = 44] = "KeyN",
					e[e.KeyO = 45] = "KeyO",
					e[e.KeyP = 46] = "KeyP",
					e[e.KeyQ = 47] = "KeyQ",
					e[e.KeyR = 48] = "KeyR",
					e[e.KeyS = 49] = "KeyS",
					e[e.KeyT = 50] = "KeyT",
					e[e.KeyU = 51] = "KeyU",
					e[e.KeyV = 52] = "KeyV",
					e[e.KeyW = 53] = "KeyW",
					e[e.KeyX = 54] = "KeyX",
					e[e.KeyY = 55] = "KeyY",
					e[e.KeyZ = 56] = "KeyZ",
					e[e.Meta = 57] = "Meta",
					e[e.ContextMenu = 58] = "ContextMenu",
					e[e.F1 = 59] = "F1",
					e[e.F2 = 60] = "F2",
					e[e.F3 = 61] = "F3",
					e[e.F4 = 62] = "F4",
					e[e.F5 = 63] = "F5",
					e[e.F6 = 64] = "F6",
					e[e.F7 = 65] = "F7",
					e[e.F8 = 66] = "F8",
					e[e.F9 = 67] = "F9",
					e[e.F10 = 68] = "F10",
					e[e.F11 = 69] = "F11",
					e[e.F12 = 70] = "F12",
					e[e.F13 = 71] = "F13",
					e[e.F14 = 72] = "F14",
					e[e.F15 = 73] = "F15",
					e[e.F16 = 74] = "F16",
					e[e.F17 = 75] = "F17",
					e[e.F18 = 76] = "F18",
					e[e.F19 = 77] = "F19",
					e[e.NumLock = 78] = "NumLock",
					e[e.ScrollLock = 79] = "ScrollLock",
					e[e.Semicolon = 80] = "Semicolon",
					e[e.Equal = 81] = "Equal",
					e[e.Comma = 82] = "Comma",
					e[e.Minus = 83] = "Minus",
					e[e.Period = 84] = "Period",
					e[e.Slash = 85] = "Slash",
					e[e.Backquote = 86] = "Backquote",
					e[e.BracketLeft = 87] = "BracketLeft",
					e[e.Backslash = 88] = "Backslash",
					e[e.BracketRight = 89] = "BracketRight",
					e[e.Quote = 90] = "Quote",
					e[e.OEM_8 = 91] = "OEM_8",
					e[e.IntlBackslash = 92] = "IntlBackslash",
					e[e.Numpad0 = 93] = "Numpad0",
					e[e.Numpad1 = 94] = "Numpad1",
					e[e.Numpad2 = 95] = "Numpad2",
					e[e.Numpad3 = 96] = "Numpad3",
					e[e.Numpad4 = 97] = "Numpad4",
					e[e.Numpad5 = 98] = "Numpad5",
					e[e.Numpad6 = 99] = "Numpad6",
					e[e.Numpad7 = 100] = "Numpad7",
					e[e.Numpad8 = 101] = "Numpad8",
					e[e.Numpad9 = 102] = "Numpad9",
					e[e.NumpadMultiply = 103] = "NumpadMultiply",
					e[e.NumpadAdd = 104] = "NumpadAdd",
					e[e.NUMPAD_SEPARATOR = 105] = "NUMPAD_SEPARATOR",
					e[e.NumpadSubtract = 106] = "NumpadSubtract",
					e[e.NumpadDecimal = 107] = "NumpadDecimal",
					e[e.NumpadDivide = 108] = "NumpadDivide",
					e[e.KEY_IN_COMPOSITION = 109] = "KEY_IN_COMPOSITION",
					e[e.ABNT_C1 = 110] = "ABNT_C1",
					e[e.ABNT_C2 = 111] = "ABNT_C2",
					e[e.AudioVolumeMute = 112] = "AudioVolumeMute",
					e[e.AudioVolumeUp = 113] = "AudioVolumeUp",
					e[e.AudioVolumeDown = 114] = "AudioVolumeDown",
					e[e.BrowserSearch = 115] = "BrowserSearch",
					e[e.BrowserHome = 116] = "BrowserHome",
					e[e.BrowserBack = 117] = "BrowserBack",
					e[e.BrowserForward = 118] = "BrowserForward",
					e[e.MediaTrackNext = 119] = "MediaTrackNext",
					e[e.MediaTrackPrevious = 120] = "MediaTrackPrevious",
					e[e.MediaStop = 121] = "MediaStop",
					e[e.MediaPlayPause = 122] = "MediaPlayPause",
					e[e.LaunchMediaPlayer = 123] = "LaunchMediaPlayer",
					e[e.LaunchMail = 124] = "LaunchMail",
					e[e.LaunchApp2 = 125] = "LaunchApp2",
					e[e.Clear = 126] = "Clear",
					e[e.MAX_VALUE = 127] = "MAX_VALUE"
			}
			)(jl || (jl = {})),
			function(e) {
					e[e.DependsOnKbLayout = -1] = "DependsOnKbLayout",
					e[e.None = 0] = "None",
					e[e.Hyper = 1] = "Hyper",
					e[e.Super = 2] = "Super",
					e[e.Fn = 3] = "Fn",
					e[e.FnLock = 4] = "FnLock",
					e[e.Suspend = 5] = "Suspend",
					e[e.Resume = 6] = "Resume",
					e[e.Turbo = 7] = "Turbo",
					e[e.Sleep = 8] = "Sleep",
					e[e.WakeUp = 9] = "WakeUp",
					e[e.KeyA = 10] = "KeyA",
					e[e.KeyB = 11] = "KeyB",
					e[e.KeyC = 12] = "KeyC",
					e[e.KeyD = 13] = "KeyD",
					e[e.KeyE = 14] = "KeyE",
					e[e.KeyF = 15] = "KeyF",
					e[e.KeyG = 16] = "KeyG",
					e[e.KeyH = 17] = "KeyH",
					e[e.KeyI = 18] = "KeyI",
					e[e.KeyJ = 19] = "KeyJ",
					e[e.KeyK = 20] = "KeyK",
					e[e.KeyL = 21] = "KeyL",
					e[e.KeyM = 22] = "KeyM",
					e[e.KeyN = 23] = "KeyN",
					e[e.KeyO = 24] = "KeyO",
					e[e.KeyP = 25] = "KeyP",
					e[e.KeyQ = 26] = "KeyQ",
					e[e.KeyR = 27] = "KeyR",
					e[e.KeyS = 28] = "KeyS",
					e[e.KeyT = 29] = "KeyT",
					e[e.KeyU = 30] = "KeyU",
					e[e.KeyV = 31] = "KeyV",
					e[e.KeyW = 32] = "KeyW",
					e[e.KeyX = 33] = "KeyX",
					e[e.KeyY = 34] = "KeyY",
					e[e.KeyZ = 35] = "KeyZ",
					e[e.Digit1 = 36] = "Digit1",
					e[e.Digit2 = 37] = "Digit2",
					e[e.Digit3 = 38] = "Digit3",
					e[e.Digit4 = 39] = "Digit4",
					e[e.Digit5 = 40] = "Digit5",
					e[e.Digit6 = 41] = "Digit6",
					e[e.Digit7 = 42] = "Digit7",
					e[e.Digit8 = 43] = "Digit8",
					e[e.Digit9 = 44] = "Digit9",
					e[e.Digit0 = 45] = "Digit0",
					e[e.Enter = 46] = "Enter",
					e[e.Escape = 47] = "Escape",
					e[e.Backspace = 48] = "Backspace",
					e[e.Tab = 49] = "Tab",
					e[e.Space = 50] = "Space",
					e[e.Minus = 51] = "Minus",
					e[e.Equal = 52] = "Equal",
					e[e.BracketLeft = 53] = "BracketLeft",
					e[e.BracketRight = 54] = "BracketRight",
					e[e.Backslash = 55] = "Backslash",
					e[e.IntlHash = 56] = "IntlHash",
					e[e.Semicolon = 57] = "Semicolon",
					e[e.Quote = 58] = "Quote",
					e[e.Backquote = 59] = "Backquote",
					e[e.Comma = 60] = "Comma",
					e[e.Period = 61] = "Period",
					e[e.Slash = 62] = "Slash",
					e[e.CapsLock = 63] = "CapsLock",
					e[e.F1 = 64] = "F1",
					e[e.F2 = 65] = "F2",
					e[e.F3 = 66] = "F3",
					e[e.F4 = 67] = "F4",
					e[e.F5 = 68] = "F5",
					e[e.F6 = 69] = "F6",
					e[e.F7 = 70] = "F7",
					e[e.F8 = 71] = "F8",
					e[e.F9 = 72] = "F9",
					e[e.F10 = 73] = "F10",
					e[e.F11 = 74] = "F11",
					e[e.F12 = 75] = "F12",
					e[e.PrintScreen = 76] = "PrintScreen",
					e[e.ScrollLock = 77] = "ScrollLock",
					e[e.Pause = 78] = "Pause",
					e[e.Insert = 79] = "Insert",
					e[e.Home = 80] = "Home",
					e[e.PageUp = 81] = "PageUp",
					e[e.Delete = 82] = "Delete",
					e[e.End = 83] = "End",
					e[e.PageDown = 84] = "PageDown",
					e[e.ArrowRight = 85] = "ArrowRight",
					e[e.ArrowLeft = 86] = "ArrowLeft",
					e[e.ArrowDown = 87] = "ArrowDown",
					e[e.ArrowUp = 88] = "ArrowUp",
					e[e.NumLock = 89] = "NumLock",
					e[e.NumpadDivide = 90] = "NumpadDivide",
					e[e.NumpadMultiply = 91] = "NumpadMultiply",
					e[e.NumpadSubtract = 92] = "NumpadSubtract",
					e[e.NumpadAdd = 93] = "NumpadAdd",
					e[e.NumpadEnter = 94] = "NumpadEnter",
					e[e.Numpad1 = 95] = "Numpad1",
					e[e.Numpad2 = 96] = "Numpad2",
					e[e.Numpad3 = 97] = "Numpad3",
					e[e.Numpad4 = 98] = "Numpad4",
					e[e.Numpad5 = 99] = "Numpad5",
					e[e.Numpad6 = 100] = "Numpad6",
					e[e.Numpad7 = 101] = "Numpad7",
					e[e.Numpad8 = 102] = "Numpad8",
					e[e.Numpad9 = 103] = "Numpad9",
					e[e.Numpad0 = 104] = "Numpad0",
					e[e.NumpadDecimal = 105] = "NumpadDecimal",
					e[e.IntlBackslash = 106] = "IntlBackslash",
					e[e.ContextMenu = 107] = "ContextMenu",
					e[e.Power = 108] = "Power",
					e[e.NumpadEqual = 109] = "NumpadEqual",
					e[e.F13 = 110] = "F13",
					e[e.F14 = 111] = "F14",
					e[e.F15 = 112] = "F15",
					e[e.F16 = 113] = "F16",
					e[e.F17 = 114] = "F17",
					e[e.F18 = 115] = "F18",
					e[e.F19 = 116] = "F19",
					e[e.F20 = 117] = "F20",
					e[e.F21 = 118] = "F21",
					e[e.F22 = 119] = "F22",
					e[e.F23 = 120] = "F23",
					e[e.F24 = 121] = "F24",
					e[e.Open = 122] = "Open",
					e[e.Help = 123] = "Help",
					e[e.Select = 124] = "Select",
					e[e.Again = 125] = "Again",
					e[e.Undo = 126] = "Undo",
					e[e.Cut = 127] = "Cut",
					e[e.Copy = 128] = "Copy",
					e[e.Paste = 129] = "Paste",
					e[e.Find = 130] = "Find",
					e[e.AudioVolumeMute = 131] = "AudioVolumeMute",
					e[e.AudioVolumeUp = 132] = "AudioVolumeUp",
					e[e.AudioVolumeDown = 133] = "AudioVolumeDown",
					e[e.NumpadComma = 134] = "NumpadComma",
					e[e.IntlRo = 135] = "IntlRo",
					e[e.KanaMode = 136] = "KanaMode",
					e[e.IntlYen = 137] = "IntlYen",
					e[e.Convert = 138] = "Convert",
					e[e.NonConvert = 139] = "NonConvert",
					e[e.Lang1 = 140] = "Lang1",
					e[e.Lang2 = 141] = "Lang2",
					e[e.Lang3 = 142] = "Lang3",
					e[e.Lang4 = 143] = "Lang4",
					e[e.Lang5 = 144] = "Lang5",
					e[e.Abort = 145] = "Abort",
					e[e.Props = 146] = "Props",
					e[e.NumpadParenLeft = 147] = "NumpadParenLeft",
					e[e.NumpadParenRight = 148] = "NumpadParenRight",
					e[e.NumpadBackspace = 149] = "NumpadBackspace",
					e[e.NumpadMemoryStore = 150] = "NumpadMemoryStore",
					e[e.NumpadMemoryRecall = 151] = "NumpadMemoryRecall",
					e[e.NumpadMemoryClear = 152] = "NumpadMemoryClear",
					e[e.NumpadMemoryAdd = 153] = "NumpadMemoryAdd",
					e[e.NumpadMemorySubtract = 154] = "NumpadMemorySubtract",
					e[e.NumpadClear = 155] = "NumpadClear",
					e[e.NumpadClearEntry = 156] = "NumpadClearEntry",
					e[e.ControlLeft = 157] = "ControlLeft",
					e[e.ShiftLeft = 158] = "ShiftLeft",
					e[e.AltLeft = 159] = "AltLeft",
					e[e.MetaLeft = 160] = "MetaLeft",
					e[e.ControlRight = 161] = "ControlRight",
					e[e.ShiftRight = 162] = "ShiftRight",
					e[e.AltRight = 163] = "AltRight",
					e[e.MetaRight = 164] = "MetaRight",
					e[e.BrightnessUp = 165] = "BrightnessUp",
					e[e.BrightnessDown = 166] = "BrightnessDown",
					e[e.MediaPlay = 167] = "MediaPlay",
					e[e.MediaRecord = 168] = "MediaRecord",
					e[e.MediaFastForward = 169] = "MediaFastForward",
					e[e.MediaRewind = 170] = "MediaRewind",
					e[e.MediaTrackNext = 171] = "MediaTrackNext",
					e[e.MediaTrackPrevious = 172] = "MediaTrackPrevious",
					e[e.MediaStop = 173] = "MediaStop",
					e[e.Eject = 174] = "Eject",
					e[e.MediaPlayPause = 175] = "MediaPlayPause",
					e[e.MediaSelect = 176] = "MediaSelect",
					e[e.LaunchMail = 177] = "LaunchMail",
					e[e.LaunchApp2 = 178] = "LaunchApp2",
					e[e.LaunchApp1 = 179] = "LaunchApp1",
					e[e.SelectTask = 180] = "SelectTask",
					e[e.LaunchScreenSaver = 181] = "LaunchScreenSaver",
					e[e.BrowserSearch = 182] = "BrowserSearch",
					e[e.BrowserHome = 183] = "BrowserHome",
					e[e.BrowserBack = 184] = "BrowserBack",
					e[e.BrowserForward = 185] = "BrowserForward",
					e[e.BrowserStop = 186] = "BrowserStop",
					e[e.BrowserRefresh = 187] = "BrowserRefresh",
					e[e.BrowserFavorites = 188] = "BrowserFavorites",
					e[e.ZoomToggle = 189] = "ZoomToggle",
					e[e.MailReply = 190] = "MailReply",
					e[e.MailForward = 191] = "MailForward",
					e[e.MailSend = 192] = "MailSend",
					e[e.MAX_VALUE = 193] = "MAX_VALUE"
			}(Wl || (Wl = {}));
			class KeyCodeStrMap {
					constructor() {
							this._keyCodeToStr = [],
							this._strToKeyCode = Object.create(null)
					}
					define(e, t) {
							this._keyCodeToStr[e] = t,
							this._strToKeyCode[t.toLowerCase()] = e
					}
					keyCodeToStr(e) {
							return this._keyCodeToStr[e]
					}
					strToKeyCode(e) {
							return this._strToKeyCode[e.toLowerCase()] || 0
					}
			}
			const Yl = new KeyCodeStrMap
				, Kl = new KeyCodeStrMap
				, Ql = new KeyCodeStrMap
				, Zl = new Array(230)
				, Xl = {}
				, Jl = []
				, ec = Object.create(null)
				, tc = Object.create(null)
				, nc = []
				, ic = [];
			for (let e = 0; e <= 193; e++)
					nc[e] = -1;
			for (let e = 0; e <= 127; e++)
					ic[e] = -1;
			var rc, oc, sc;
			(function() {
					const e = ""
						, t = [[0, 1, 0, "None", 0, "unknown", 0, "VK_UNKNOWN", e, e], [0, 1, 1, "Hyper", 0, e, 0, e, e, e], [0, 1, 2, "Super", 0, e, 0, e, e, e], [0, 1, 3, "Fn", 0, e, 0, e, e, e], [0, 1, 4, "FnLock", 0, e, 0, e, e, e], [0, 1, 5, "Suspend", 0, e, 0, e, e, e], [0, 1, 6, "Resume", 0, e, 0, e, e, e], [0, 1, 7, "Turbo", 0, e, 0, e, e, e], [0, 1, 8, "Sleep", 0, e, 0, "VK_SLEEP", e, e], [0, 1, 9, "WakeUp", 0, e, 0, e, e, e], [31, 0, 10, "KeyA", 31, "A", 65, "VK_A", e, e], [32, 0, 11, "KeyB", 32, "B", 66, "VK_B", e, e], [33, 0, 12, "KeyC", 33, "C", 67, "VK_C", e, e], [34, 0, 13, "KeyD", 34, "D", 68, "VK_D", e, e], [35, 0, 14, "KeyE", 35, "E", 69, "VK_E", e, e], [36, 0, 15, "KeyF", 36, "F", 70, "VK_F", e, e], [37, 0, 16, "KeyG", 37, "G", 71, "VK_G", e, e], [38, 0, 17, "KeyH", 38, "H", 72, "VK_H", e, e], [39, 0, 18, "KeyI", 39, "I", 73, "VK_I", e, e], [40, 0, 19, "KeyJ", 40, "J", 74, "VK_J", e, e], [41, 0, 20, "KeyK", 41, "K", 75, "VK_K", e, e], [42, 0, 21, "KeyL", 42, "L", 76, "VK_L", e, e], [43, 0, 22, "KeyM", 43, "M", 77, "VK_M", e, e], [44, 0, 23, "KeyN", 44, "N", 78, "VK_N", e, e], [45, 0, 24, "KeyO", 45, "O", 79, "VK_O", e, e], [46, 0, 25, "KeyP", 46, "P", 80, "VK_P", e, e], [47, 0, 26, "KeyQ", 47, "Q", 81, "VK_Q", e, e], [48, 0, 27, "KeyR", 48, "R", 82, "VK_R", e, e], [49, 0, 28, "KeyS", 49, "S", 83, "VK_S", e, e], [50, 0, 29, "KeyT", 50, "T", 84, "VK_T", e, e], [51, 0, 30, "KeyU", 51, "U", 85, "VK_U", e, e], [52, 0, 31, "KeyV", 52, "V", 86, "VK_V", e, e], [53, 0, 32, "KeyW", 53, "W", 87, "VK_W", e, e], [54, 0, 33, "KeyX", 54, "X", 88, "VK_X", e, e], [55, 0, 34, "KeyY", 55, "Y", 89, "VK_Y", e, e], [56, 0, 35, "KeyZ", 56, "Z", 90, "VK_Z", e, e], [22, 0, 36, "Digit1", 22, "1", 49, "VK_1", e, e], [23, 0, 37, "Digit2", 23, "2", 50, "VK_2", e, e], [24, 0, 38, "Digit3", 24, "3", 51, "VK_3", e, e], [25, 0, 39, "Digit4", 25, "4", 52, "VK_4", e, e], [26, 0, 40, "Digit5", 26, "5", 53, "VK_5", e, e], [27, 0, 41, "Digit6", 27, "6", 54, "VK_6", e, e], [28, 0, 42, "Digit7", 28, "7", 55, "VK_7", e, e], [29, 0, 43, "Digit8", 29, "8", 56, "VK_8", e, e], [30, 0, 44, "Digit9", 30, "9", 57, "VK_9", e, e], [21, 0, 45, "Digit0", 21, "0", 48, "VK_0", e, e], [3, 1, 46, "Enter", 3, "Enter", 13, "VK_RETURN", e, e], [9, 1, 47, "Escape", 9, "Escape", 27, "VK_ESCAPE", e, e], [1, 1, 48, "Backspace", 1, "Backspace", 8, "VK_BACK", e, e], [2, 1, 49, "Tab", 2, "Tab", 9, "VK_TAB", e, e], [10, 1, 50, "Space", 10, "Space", 32, "VK_SPACE", e, e], [83, 0, 51, "Minus", 83, "-", 189, "VK_OEM_MINUS", "-", "OEM_MINUS"], [81, 0, 52, "Equal", 81, "=", 187, "VK_OEM_PLUS", "=", "OEM_PLUS"], [87, 0, 53, "BracketLeft", 87, "[", 219, "VK_OEM_4", "[", "OEM_4"], [89, 0, 54, "BracketRight", 89, "]", 221, "VK_OEM_6", "]", "OEM_6"], [88, 0, 55, "Backslash", 88, "\\", 220, "VK_OEM_5", "\\", "OEM_5"], [0, 0, 56, "IntlHash", 0, e, 0, e, e, e], [80, 0, 57, "Semicolon", 80, ";", 186, "VK_OEM_1", ";", "OEM_1"], [90, 0, 58, "Quote", 90, "'", 222, "VK_OEM_7", "'", "OEM_7"], [86, 0, 59, "Backquote", 86, "`", 192, "VK_OEM_3", "`", "OEM_3"], [82, 0, 60, "Comma", 82, ",", 188, "VK_OEM_COMMA", ",", "OEM_COMMA"], [84, 0, 61, "Period", 84, ".", 190, "VK_OEM_PERIOD", ".", "OEM_PERIOD"], [85, 0, 62, "Slash", 85, "/", 191, "VK_OEM_2", "/", "OEM_2"], [8, 1, 63, "CapsLock", 8, "CapsLock", 20, "VK_CAPITAL", e, e], [59, 1, 64, "F1", 59, "F1", 112, "VK_F1", e, e], [60, 1, 65, "F2", 60, "F2", 113, "VK_F2", e, e], [61, 1, 66, "F3", 61, "F3", 114, "VK_F3", e, e], [62, 1, 67, "F4", 62, "F4", 115, "VK_F4", e, e], [63, 1, 68, "F5", 63, "F5", 116, "VK_F5", e, e], [64, 1, 69, "F6", 64, "F6", 117, "VK_F6", e, e], [65, 1, 70, "F7", 65, "F7", 118, "VK_F7", e, e], [66, 1, 71, "F8", 66, "F8", 119, "VK_F8", e, e], [67, 1, 72, "F9", 67, "F9", 120, "VK_F9", e, e], [68, 1, 73, "F10", 68, "F10", 121, "VK_F10", e, e], [69, 1, 74, "F11", 69, "F11", 122, "VK_F11", e, e], [70, 1, 75, "F12", 70, "F12", 123, "VK_F12", e, e], [0, 1, 76, "PrintScreen", 0, e, 0, e, e, e], [79, 1, 77, "ScrollLock", 79, "ScrollLock", 145, "VK_SCROLL", e, e], [7, 1, 78, "Pause", 7, "PauseBreak", 19, "VK_PAUSE", e, e], [19, 1, 79, "Insert", 19, "Insert", 45, "VK_INSERT", e, e], [14, 1, 80, "Home", 14, "Home", 36, "VK_HOME", e, e], [11, 1, 81, "PageUp", 11, "PageUp", 33, "VK_PRIOR", e, e], [20, 1, 82, "Delete", 20, "Delete", 46, "VK_DELETE", e, e], [13, 1, 83, "End", 13, "End", 35, "VK_END", e, e], [12, 1, 84, "PageDown", 12, "PageDown", 34, "VK_NEXT", e, e], [17, 1, 85, "ArrowRight", 17, "RightArrow", 39, "VK_RIGHT", "Right", e], [15, 1, 86, "ArrowLeft", 15, "LeftArrow", 37, "VK_LEFT", "Left", e], [18, 1, 87, "ArrowDown", 18, "DownArrow", 40, "VK_DOWN", "Down", e], [16, 1, 88, "ArrowUp", 16, "UpArrow", 38, "VK_UP", "Up", e], [78, 1, 89, "NumLock", 78, "NumLock", 144, "VK_NUMLOCK", e, e], [108, 1, 90, "NumpadDivide", 108, "NumPad_Divide", 111, "VK_DIVIDE", e, e], [103, 1, 91, "NumpadMultiply", 103, "NumPad_Multiply", 106, "VK_MULTIPLY", e, e], [106, 1, 92, "NumpadSubtract", 106, "NumPad_Subtract", 109, "VK_SUBTRACT", e, e], [104, 1, 93, "NumpadAdd", 104, "NumPad_Add", 107, "VK_ADD", e, e], [3, 1, 94, "NumpadEnter", 3, e, 0, e, e, e], [94, 1, 95, "Numpad1", 94, "NumPad1", 97, "VK_NUMPAD1", e, e], [95, 1, 96, "Numpad2", 95, "NumPad2", 98, "VK_NUMPAD2", e, e], [96, 1, 97, "Numpad3", 96, "NumPad3", 99, "VK_NUMPAD3", e, e], [97, 1, 98, "Numpad4", 97, "NumPad4", 100, "VK_NUMPAD4", e, e], [98, 1, 99, "Numpad5", 98, "NumPad5", 101, "VK_NUMPAD5", e, e], [99, 1, 100, "Numpad6", 99, "NumPad6", 102, "VK_NUMPAD6", e, e], [100, 1, 101, "Numpad7", 100, "NumPad7", 103, "VK_NUMPAD7", e, e], [101, 1, 102, "Numpad8", 101, "NumPad8", 104, "VK_NUMPAD8", e, e], [102, 1, 103, "Numpad9", 102, "NumPad9", 105, "VK_NUMPAD9", e, e], [93, 1, 104, "Numpad0", 93, "NumPad0", 96, "VK_NUMPAD0", e, e], [107, 1, 105, "NumpadDecimal", 107, "NumPad_Decimal", 110, "VK_DECIMAL", e, e], [92, 0, 106, "IntlBackslash", 92, "OEM_102", 226, "VK_OEM_102", e, e], [58, 1, 107, "ContextMenu", 58, "ContextMenu", 93, e, e, e], [0, 1, 108, "Power", 0, e, 0, e, e, e], [0, 1, 109, "NumpadEqual", 0, e, 0, e, e, e], [71, 1, 110, "F13", 71, "F13", 124, "VK_F13", e, e], [72, 1, 111, "F14", 72, "F14", 125, "VK_F14", e, e], [73, 1, 112, "F15", 73, "F15", 126, "VK_F15", e, e], [74, 1, 113, "F16", 74, "F16", 127, "VK_F16", e, e], [75, 1, 114, "F17", 75, "F17", 128, "VK_F17", e, e], [76, 1, 115, "F18", 76, "F18", 129, "VK_F18", e, e], [77, 1, 116, "F19", 77, "F19", 130, "VK_F19", e, e], [0, 1, 117, "F20", 0, e, 0, "VK_F20", e, e], [0, 1, 118, "F21", 0, e, 0, "VK_F21", e, e], [0, 1, 119, "F22", 0, e, 0, "VK_F22", e, e], [0, 1, 120, "F23", 0, e, 0, "VK_F23", e, e], [0, 1, 121, "F24", 0, e, 0, "VK_F24", e, e], [0, 1, 122, "Open", 0, e, 0, e, e, e], [0, 1, 123, "Help", 0, e, 0, e, e, e], [0, 1, 124, "Select", 0, e, 0, e, e, e], [0, 1, 125, "Again", 0, e, 0, e, e, e], [0, 1, 126, "Undo", 0, e, 0, e, e, e], [0, 1, 127, "Cut", 0, e, 0, e, e, e], [0, 1, 128, "Copy", 0, e, 0, e, e, e], [0, 1, 129, "Paste", 0, e, 0, e, e, e], [0, 1, 130, "Find", 0, e, 0, e, e, e], [0, 1, 131, "AudioVolumeMute", 112, "AudioVolumeMute", 173, "VK_VOLUME_MUTE", e, e], [0, 1, 132, "AudioVolumeUp", 113, "AudioVolumeUp", 175, "VK_VOLUME_UP", e, e], [0, 1, 133, "AudioVolumeDown", 114, "AudioVolumeDown", 174, "VK_VOLUME_DOWN", e, e], [105, 1, 134, "NumpadComma", 105, "NumPad_Separator", 108, "VK_SEPARATOR", e, e], [110, 0, 135, "IntlRo", 110, "ABNT_C1", 193, "VK_ABNT_C1", e, e], [0, 1, 136, "KanaMode", 0, e, 0, e, e, e], [0, 0, 137, "IntlYen", 0, e, 0, e, e, e], [0, 1, 138, "Convert", 0, e, 0, e, e, e], [0, 1, 139, "NonConvert", 0, e, 0, e, e, e], [0, 1, 140, "Lang1", 0, e, 0, e, e, e], [0, 1, 141, "Lang2", 0, e, 0, e, e, e], [0, 1, 142, "Lang3", 0, e, 0, e, e, e], [0, 1, 143, "Lang4", 0, e, 0, e, e, e], [0, 1, 144, "Lang5", 0, e, 0, e, e, e], [0, 1, 145, "Abort", 0, e, 0, e, e, e], [0, 1, 146, "Props", 0, e, 0, e, e, e], [0, 1, 147, "NumpadParenLeft", 0, e, 0, e, e, e], [0, 1, 148, "NumpadParenRight", 0, e, 0, e, e, e], [0, 1, 149, "NumpadBackspace", 0, e, 0, e, e, e], [0, 1, 150, "NumpadMemoryStore", 0, e, 0, e, e, e], [0, 1, 151, "NumpadMemoryRecall", 0, e, 0, e, e, e], [0, 1, 152, "NumpadMemoryClear", 0, e, 0, e, e, e], [0, 1, 153, "NumpadMemoryAdd", 0, e, 0, e, e, e], [0, 1, 154, "NumpadMemorySubtract", 0, e, 0, e, e, e], [0, 1, 155, "NumpadClear", 126, "Clear", 12, "VK_CLEAR", e, e], [0, 1, 156, "NumpadClearEntry", 0, e, 0, e, e, e], [5, 1, 0, e, 5, "Ctrl", 17, "VK_CONTROL", e, e], [4, 1, 0, e, 4, "Shift", 16, "VK_SHIFT", e, e], [6, 1, 0, e, 6, "Alt", 18, "VK_MENU", e, e], [57, 1, 0, e, 57, "Meta", 0, "VK_COMMAND", e, e], [5, 1, 157, "ControlLeft", 5, e, 0, "VK_LCONTROL", e, e], [4, 1, 158, "ShiftLeft", 4, e, 0, "VK_LSHIFT", e, e], [6, 1, 159, "AltLeft", 6, e, 0, "VK_LMENU", e, e], [57, 1, 160, "MetaLeft", 57, e, 0, "VK_LWIN", e, e], [5, 1, 161, "ControlRight", 5, e, 0, "VK_RCONTROL", e, e], [4, 1, 162, "ShiftRight", 4, e, 0, "VK_RSHIFT", e, e], [6, 1, 163, "AltRight", 6, e, 0, "VK_RMENU", e, e], [57, 1, 164, "MetaRight", 57, e, 0, "VK_RWIN", e, e], [0, 1, 165, "BrightnessUp", 0, e, 0, e, e, e], [0, 1, 166, "BrightnessDown", 0, e, 0, e, e, e], [0, 1, 167, "MediaPlay", 0, e, 0, e, e, e], [0, 1, 168, "MediaRecord", 0, e, 0, e, e, e], [0, 1, 169, "MediaFastForward", 0, e, 0, e, e, e], [0, 1, 170, "MediaRewind", 0, e, 0, e, e, e], [114, 1, 171, "MediaTrackNext", 119, "MediaTrackNext", 176, "VK_MEDIA_NEXT_TRACK", e, e], [115, 1, 172, "MediaTrackPrevious", 120, "MediaTrackPrevious", 177, "VK_MEDIA_PREV_TRACK", e, e], [116, 1, 173, "MediaStop", 121, "MediaStop", 178, "VK_MEDIA_STOP", e, e], [0, 1, 174, "Eject", 0, e, 0, e, e, e], [117, 1, 175, "MediaPlayPause", 122, "MediaPlayPause", 179, "VK_MEDIA_PLAY_PAUSE", e, e], [0, 1, 176, "MediaSelect", 123, "LaunchMediaPlayer", 181, "VK_MEDIA_LAUNCH_MEDIA_SELECT", e, e], [0, 1, 177, "LaunchMail", 124, "LaunchMail", 180, "VK_MEDIA_LAUNCH_MAIL", e, e], [0, 1, 178, "LaunchApp2", 125, "LaunchApp2", 183, "VK_MEDIA_LAUNCH_APP2", e, e], [0, 1, 179, "LaunchApp1", 0, e, 0, "VK_MEDIA_LAUNCH_APP1", e, e], [0, 1, 180, "SelectTask", 0, e, 0, e, e, e], [0, 1, 181, "LaunchScreenSaver", 0, e, 0, e, e, e], [0, 1, 182, "BrowserSearch", 115, "BrowserSearch", 170, "VK_BROWSER_SEARCH", e, e], [0, 1, 183, "BrowserHome", 116, "BrowserHome", 172, "VK_BROWSER_HOME", e, e], [112, 1, 184, "BrowserBack", 117, "BrowserBack", 166, "VK_BROWSER_BACK", e, e], [113, 1, 185, "BrowserForward", 118, "BrowserForward", 167, "VK_BROWSER_FORWARD", e, e], [0, 1, 186, "BrowserStop", 0, e, 0, "VK_BROWSER_STOP", e, e], [0, 1, 187, "BrowserRefresh", 0, e, 0, "VK_BROWSER_REFRESH", e, e], [0, 1, 188, "BrowserFavorites", 0, e, 0, "VK_BROWSER_FAVORITES", e, e], [0, 1, 189, "ZoomToggle", 0, e, 0, e, e, e], [0, 1, 190, "MailReply", 0, e, 0, e, e, e], [0, 1, 191, "MailForward", 0, e, 0, e, e, e], [0, 1, 192, "MailSend", 0, e, 0, e, e, e], [109, 1, 0, e, 109, "KeyInComposition", 229, e, e, e], [111, 1, 0, e, 111, "ABNT_C2", 194, "VK_ABNT_C2", e, e], [91, 1, 0, e, 91, "OEM_8", 223, "VK_OEM_8", e, e], [0, 1, 0, e, 0, e, 0, "VK_KANA", e, e], [0, 1, 0, e, 0, e, 0, "VK_HANGUL", e, e], [0, 1, 0, e, 0, e, 0, "VK_JUNJA", e, e], [0, 1, 0, e, 0, e, 0, "VK_FINAL", e, e], [0, 1, 0, e, 0, e, 0, "VK_HANJA", e, e], [0, 1, 0, e, 0, e, 0, "VK_KANJI", e, e], [0, 1, 0, e, 0, e, 0, "VK_CONVERT", e, e], [0, 1, 0, e, 0, e, 0, "VK_NONCONVERT", e, e], [0, 1, 0, e, 0, e, 0, "VK_ACCEPT", e, e], [0, 1, 0, e, 0, e, 0, "VK_MODECHANGE", e, e], [0, 1, 0, e, 0, e, 0, "VK_SELECT", e, e], [0, 1, 0, e, 0, e, 0, "VK_PRINT", e, e], [0, 1, 0, e, 0, e, 0, "VK_EXECUTE", e, e], [0, 1, 0, e, 0, e, 0, "VK_SNAPSHOT", e, e], [0, 1, 0, e, 0, e, 0, "VK_HELP", e, e], [0, 1, 0, e, 0, e, 0, "VK_APPS", e, e], [0, 1, 0, e, 0, e, 0, "VK_PROCESSKEY", e, e], [0, 1, 0, e, 0, e, 0, "VK_PACKET", e, e], [0, 1, 0, e, 0, e, 0, "VK_DBE_SBCSCHAR", e, e], [0, 1, 0, e, 0, e, 0, "VK_DBE_DBCSCHAR", e, e], [0, 1, 0, e, 0, e, 0, "VK_ATTN", e, e], [0, 1, 0, e, 0, e, 0, "VK_CRSEL", e, e], [0, 1, 0, e, 0, e, 0, "VK_EXSEL", e, e], [0, 1, 0, e, 0, e, 0, "VK_EREOF", e, e], [0, 1, 0, e, 0, e, 0, "VK_PLAY", e, e], [0, 1, 0, e, 0, e, 0, "VK_ZOOM", e, e], [0, 1, 0, e, 0, e, 0, "VK_NONAME", e, e], [0, 1, 0, e, 0, e, 0, "VK_PA1", e, e], [0, 1, 0, e, 0, e, 0, "VK_OEM_CLEAR", e, e]]
						, n = []
						, i = [];
					for (const e of t) {
							const [t,r,o,s,a,l,c,d,p,u] = e;
							if (i[o] || (i[o] = !0,
							Jl[o] = s,
							ec[s] = o,
							tc[s.toLowerCase()] = o,
							r && (nc[o] = a,
							0 !== a && 3 !== a && 5 !== a && 4 !== a && 6 !== a && 57 !== a && (ic[a] = o))),
							!n[a]) {
									if (n[a] = !0,
									!l)
											throw new Error(`String representation missing for key code ${a} around scan code ${s}`);
									Yl.define(a, l),
									Kl.define(a, p || l),
									Ql.define(a, u || p || l)
							}
							c && (Zl[c] = a),
							d && (Xl[d] = a)
					}
					ic[3] = 46
			}
			)(),
			function(e) {
					e.toString = function(e) {
							return Yl.keyCodeToStr(e)
					}
					,
					e.fromString = function(e) {
							return Yl.strToKeyCode(e)
					}
					,
					e.toUserSettingsUS = function(e) {
							return Kl.keyCodeToStr(e)
					}
					,
					e.toUserSettingsGeneral = function(e) {
							return Ql.keyCodeToStr(e)
					}
					,
					e.fromUserSettings = function(e) {
							return Kl.strToKeyCode(e) || Ql.strToKeyCode(e)
					}
					,
					e.toElectronAccelerator = function(e) {
							if (e >= 93 && e <= 108)
									return null;
							switch (e) {
							case 16:
									return "Up";
							case 18:
									return "Down";
							case 15:
									return "Left";
							case 17:
									return "Right"
							}
							return Yl.keyCodeToStr(e)
					}
			}(rc || (rc = {})),
			function(e) {
					e[e.CtrlCmd = 2048] = "CtrlCmd",
					e[e.Shift = 1024] = "Shift",
					e[e.Alt = 512] = "Alt",
					e[e.WinCtrl = 256] = "WinCtrl"
			}(oc || (oc = {})),
			function(e) {
					e[e.CtrlCmd = 2048] = "CtrlCmd",
					e[e.Shift = 1024] = "Shift",
					e[e.Alt = 512] = "Alt",
					e[e.WinCtrl = 256] = "WinCtrl",
					e[e.KeyCode = 255] = "KeyCode"
			}(sc || (sc = {}));
			const ac = {
					get platform() {
							return ga ? "win32" : _a ? "darwin" : "linux"
					},
					get arch() {},
					get env() {
							return {}
					},
					cwd: ()=>"/"
			}
				, lc = ac.cwd
				, cc = ac.env
				, dc = ac.platform
				, pc = (ac.arch,
			46)
				, uc = 47
				, hc = 92
				, mc = 58;
			class ErrorInvalidArgType extends Error {
					constructor(e, t, n) {
							let i;
							"string" == typeof t && 0 === t.indexOf("not ") ? (i = "must not be",
							t = t.replace(/^not /, "")) : i = "must be";
							const r = -1 !== e.indexOf(".") ? "property" : "argument";
							let o = `The "${e}" ${r} ${i} of type ${t}`;
							o += ". Received type " + typeof n,
							super(o),
							this.code = "ERR_INVALID_ARG_TYPE"
					}
			}
			function validateString(e, t) {
					if ("string" != typeof e)
							throw new ErrorInvalidArgType(t,"string",e)
			}
			function isPathSeparator(e) {
					return e === uc || e === hc
			}
			function isPosixPathSeparator(e) {
					return e === uc
			}
			function isWindowsDeviceRoot(e) {
					return e >= 65 && e <= 90 || e >= 97 && e <= 122
			}
			function normalizeString(e, t, n, i) {
					let r = ""
						, o = 0
						, s = -1
						, a = 0
						, l = 0;
					for (let c = 0; c <= e.length; ++c) {
							if (c < e.length)
									l = e.charCodeAt(c);
							else {
									if (i(l))
											break;
									l = uc
							}
							if (i(l)) {
									if (s === c - 1 || 1 === a)
											;
									else if (2 === a) {
											if (r.length < 2 || 2 !== o || r.charCodeAt(r.length - 1) !== pc || r.charCodeAt(r.length - 2) !== pc) {
													if (r.length > 2) {
															const e = r.lastIndexOf(n);
															-1 === e ? (r = "",
															o = 0) : (r = r.slice(0, e),
															o = r.length - 1 - r.lastIndexOf(n)),
															s = c,
															a = 0;
															continue
													}
													if (0 !== r.length) {
															r = "",
															o = 0,
															s = c,
															a = 0;
															continue
													}
											}
											t && (r += r.length > 0 ? `${n}..` : "..",
											o = 2)
									} else
											r.length > 0 ? r += `${n}${e.slice(s + 1, c)}` : r = e.slice(s + 1, c),
											o = c - s - 1;
									s = c,
									a = 0
							} else
									l === pc && -1 !== a ? ++a : a = -1
					}
					return r
			}
			function _format(e, t) {
					if (null === t || "object" != typeof t)
							throw new ErrorInvalidArgType("pathObject","Object",t);
					const n = t.dir || t.root
						, i = t.base || `${t.name || ""}${t.ext || ""}`;
					return n ? n === t.root ? `${n}${i}` : `${n}${e}${i}` : i
			}
			const gc = {
					resolve(...e) {
							let t = ""
								, n = ""
								, i = !1;
							for (let r = e.length - 1; r >= -1; r--) {
									let o;
									if (r >= 0) {
											if (o = e[r],
											validateString(o, "path"),
											0 === o.length)
													continue
									} else
											0 === t.length ? o = lc() : (o = cc[`=${t}`] || lc(),
											(void 0 === o || o.slice(0, 2).toLowerCase() !== t.toLowerCase() && o.charCodeAt(2) === hc) && (o = `${t}\\`));
									const s = o.length;
									let a = 0
										, l = ""
										, c = !1;
									const d = o.charCodeAt(0);
									if (1 === s)
											isPathSeparator(d) && (a = 1,
											c = !0);
									else if (isPathSeparator(d))
											if (c = !0,
											isPathSeparator(o.charCodeAt(1))) {
													let e = 2
														, t = e;
													for (; e < s && !isPathSeparator(o.charCodeAt(e)); )
															e++;
													if (e < s && e !== t) {
															const n = o.slice(t, e);
															for (t = e; e < s && isPathSeparator(o.charCodeAt(e)); )
																	e++;
															if (e < s && e !== t) {
																	for (t = e; e < s && !isPathSeparator(o.charCodeAt(e)); )
																			e++;
																	e !== s && e === t || (l = `\\\\${n}\\${o.slice(t, e)}`,
																	a = e)
															}
													}
											} else
													a = 1;
									else
											isWindowsDeviceRoot(d) && o.charCodeAt(1) === mc && (l = o.slice(0, 2),
											a = 2,
											s > 2 && isPathSeparator(o.charCodeAt(2)) && (c = !0,
											a = 3));
									if (l.length > 0)
											if (t.length > 0) {
													if (l.toLowerCase() !== t.toLowerCase())
															continue
											} else
													t = l;
									if (i) {
											if (t.length > 0)
													break
									} else if (n = `${o.slice(a)}\\${n}`,
									i = c,
									c && t.length > 0)
											break
							}
							return n = normalizeString(n, !i, "\\", isPathSeparator),
							i ? `${t}\\${n}` : `${t}${n}` || "."
					},
					normalize(e) {
							validateString(e, "path");
							const t = e.length;
							if (0 === t)
									return ".";
							let n, i = 0, r = !1;
							const o = e.charCodeAt(0);
							if (1 === t)
									return isPosixPathSeparator(o) ? "\\" : e;
							if (isPathSeparator(o))
									if (r = !0,
									isPathSeparator(e.charCodeAt(1))) {
											let r = 2
												, o = r;
											for (; r < t && !isPathSeparator(e.charCodeAt(r)); )
													r++;
											if (r < t && r !== o) {
													const s = e.slice(o, r);
													for (o = r; r < t && isPathSeparator(e.charCodeAt(r)); )
															r++;
													if (r < t && r !== o) {
															for (o = r; r < t && !isPathSeparator(e.charCodeAt(r)); )
																	r++;
															if (r === t)
																	return `\\\\${s}\\${e.slice(o)}\\`;
															r !== o && (n = `\\\\${s}\\${e.slice(o, r)}`,
															i = r)
													}
											}
									} else
											i = 1;
							else
									isWindowsDeviceRoot(o) && e.charCodeAt(1) === mc && (n = e.slice(0, 2),
									i = 2,
									t > 2 && isPathSeparator(e.charCodeAt(2)) && (r = !0,
									i = 3));
							let s = i < t ? normalizeString(e.slice(i), !r, "\\", isPathSeparator) : "";
							return 0 !== s.length || r || (s = "."),
							s.length > 0 && isPathSeparator(e.charCodeAt(t - 1)) && (s += "\\"),
							void 0 === n ? r ? `\\${s}` : s : r ? `${n}\\${s}` : `${n}${s}`
					},
					isAbsolute(e) {
							validateString(e, "path");
							const t = e.length;
							if (0 === t)
									return !1;
							const n = e.charCodeAt(0);
							return isPathSeparator(n) || t > 2 && isWindowsDeviceRoot(n) && e.charCodeAt(1) === mc && isPathSeparator(e.charCodeAt(2))
					},
					join(...e) {
							if (0 === e.length)
									return ".";
							let t, n;
							for (let i = 0; i < e.length; ++i) {
									const r = e[i];
									validateString(r, "path"),
									r.length > 0 && (void 0 === t ? t = n = r : t += `\\${r}`)
							}
							if (void 0 === t)
									return ".";
							let i = !0
								, r = 0;
							if ("string" == typeof n && isPathSeparator(n.charCodeAt(0))) {
									++r;
									const e = n.length;
									e > 1 && isPathSeparator(n.charCodeAt(1)) && (++r,
									e > 2 && (isPathSeparator(n.charCodeAt(2)) ? ++r : i = !1))
							}
							if (i) {
									for (; r < t.length && isPathSeparator(t.charCodeAt(r)); )
											r++;
									r >= 2 && (t = `\\${t.slice(r)}`)
							}
							return gc.normalize(t)
					},
					relative(e, t) {
							if (validateString(e, "from"),
							validateString(t, "to"),
							e === t)
									return "";
							const n = gc.resolve(e)
								, i = gc.resolve(t);
							if (n === i)
									return "";
							if ((e = n.toLowerCase()) === (t = i.toLowerCase()))
									return "";
							let r = 0;
							for (; r < e.length && e.charCodeAt(r) === hc; )
									r++;
							let o = e.length;
							for (; o - 1 > r && e.charCodeAt(o - 1) === hc; )
									o--;
							const s = o - r;
							let a = 0;
							for (; a < t.length && t.charCodeAt(a) === hc; )
									a++;
							let l = t.length;
							for (; l - 1 > a && t.charCodeAt(l - 1) === hc; )
									l--;
							const c = l - a
								, d = s < c ? s : c;
							let p = -1
								, u = 0;
							for (; u < d; u++) {
									const n = e.charCodeAt(r + u);
									if (n !== t.charCodeAt(a + u))
											break;
									n === hc && (p = u)
							}
							if (u !== d) {
									if (-1 === p)
											return i
							} else {
									if (c > d) {
											if (t.charCodeAt(a + u) === hc)
													return i.slice(a + u + 1);
											if (2 === u)
													return i.slice(a + u)
									}
									s > d && (e.charCodeAt(r + u) === hc ? p = u : 2 === u && (p = 3)),
									-1 === p && (p = 0)
							}
							let h = "";
							for (u = r + p + 1; u <= o; ++u)
									u !== o && e.charCodeAt(u) !== hc || (h += 0 === h.length ? ".." : "\\..");
							return a += p,
							h.length > 0 ? `${h}${i.slice(a, l)}` : (i.charCodeAt(a) === hc && ++a,
							i.slice(a, l))
					},
					toNamespacedPath(e) {
							if ("string" != typeof e)
									return e;
							if (0 === e.length)
									return "";
							const t = gc.resolve(e);
							if (t.length <= 2)
									return e;
							if (t.charCodeAt(0) === hc) {
									if (t.charCodeAt(1) === hc) {
											const e = t.charCodeAt(2);
											if (63 !== e && e !== pc)
													return `\\\\?\\UNC\\${t.slice(2)}`
									}
							} else if (isWindowsDeviceRoot(t.charCodeAt(0)) && t.charCodeAt(1) === mc && t.charCodeAt(2) === hc)
									return `\\\\?\\${t}`;
							return e
					},
					dirname(e) {
							validateString(e, "path");
							const t = e.length;
							if (0 === t)
									return ".";
							let n = -1
								, i = 0;
							const r = e.charCodeAt(0);
							if (1 === t)
									return isPathSeparator(r) ? e : ".";
							if (isPathSeparator(r)) {
									if (n = i = 1,
									isPathSeparator(e.charCodeAt(1))) {
											let r = 2
												, o = r;
											for (; r < t && !isPathSeparator(e.charCodeAt(r)); )
													r++;
											if (r < t && r !== o) {
													for (o = r; r < t && isPathSeparator(e.charCodeAt(r)); )
															r++;
													if (r < t && r !== o) {
															for (o = r; r < t && !isPathSeparator(e.charCodeAt(r)); )
																	r++;
															if (r === t)
																	return e;
															r !== o && (n = i = r + 1)
													}
											}
									}
							} else
									isWindowsDeviceRoot(r) && e.charCodeAt(1) === mc && (n = t > 2 && isPathSeparator(e.charCodeAt(2)) ? 3 : 2,
									i = n);
							let o = -1
								, s = !0;
							for (let n = t - 1; n >= i; --n)
									if (isPathSeparator(e.charCodeAt(n))) {
											if (!s) {
													o = n;
													break
											}
									} else
											s = !1;
							if (-1 === o) {
									if (-1 === n)
											return ".";
									o = n
							}
							return e.slice(0, o)
					},
					basename(e, t) {
							void 0 !== t && validateString(t, "ext"),
							validateString(e, "path");
							let n, i = 0, r = -1, o = !0;
							if (e.length >= 2 && isWindowsDeviceRoot(e.charCodeAt(0)) && e.charCodeAt(1) === mc && (i = 2),
							void 0 !== t && t.length > 0 && t.length <= e.length) {
									if (t === e)
											return "";
									let s = t.length - 1
										, a = -1;
									for (n = e.length - 1; n >= i; --n) {
											const l = e.charCodeAt(n);
											if (isPathSeparator(l)) {
													if (!o) {
															i = n + 1;
															break
													}
											} else
													-1 === a && (o = !1,
													a = n + 1),
													s >= 0 && (l === t.charCodeAt(s) ? -1 == --s && (r = n) : (s = -1,
													r = a))
									}
									return i === r ? r = a : -1 === r && (r = e.length),
									e.slice(i, r)
							}
							for (n = e.length - 1; n >= i; --n)
									if (isPathSeparator(e.charCodeAt(n))) {
											if (!o) {
													i = n + 1;
													break
											}
									} else
											-1 === r && (o = !1,
											r = n + 1);
							return -1 === r ? "" : e.slice(i, r)
					},
					extname(e) {
							validateString(e, "path");
							let t = 0
								, n = -1
								, i = 0
								, r = -1
								, o = !0
								, s = 0;
							e.length >= 2 && e.charCodeAt(1) === mc && isWindowsDeviceRoot(e.charCodeAt(0)) && (t = i = 2);
							for (let a = e.length - 1; a >= t; --a) {
									const t = e.charCodeAt(a);
									if (isPathSeparator(t)) {
											if (!o) {
													i = a + 1;
													break
											}
									} else
											-1 === r && (o = !1,
											r = a + 1),
											t === pc ? -1 === n ? n = a : 1 !== s && (s = 1) : -1 !== n && (s = -1)
							}
							return -1 === n || -1 === r || 0 === s || 1 === s && n === r - 1 && n === i + 1 ? "" : e.slice(n, r)
					},
					format: _format.bind(null, "\\"),
					parse(e) {
							validateString(e, "path");
							const t = {
									root: "",
									dir: "",
									base: "",
									ext: "",
									name: ""
							};
							if (0 === e.length)
									return t;
							const n = e.length;
							let i = 0
								, r = e.charCodeAt(0);
							if (1 === n)
									return isPathSeparator(r) ? (t.root = t.dir = e,
									t) : (t.base = t.name = e,
									t);
							if (isPathSeparator(r)) {
									if (i = 1,
									isPathSeparator(e.charCodeAt(1))) {
											let t = 2
												, r = t;
											for (; t < n && !isPathSeparator(e.charCodeAt(t)); )
													t++;
											if (t < n && t !== r) {
													for (r = t; t < n && isPathSeparator(e.charCodeAt(t)); )
															t++;
													if (t < n && t !== r) {
															for (r = t; t < n && !isPathSeparator(e.charCodeAt(t)); )
																	t++;
															t === n ? i = t : t !== r && (i = t + 1)
													}
											}
									}
							} else if (isWindowsDeviceRoot(r) && e.charCodeAt(1) === mc) {
									if (n <= 2)
											return t.root = t.dir = e,
											t;
									if (i = 2,
									isPathSeparator(e.charCodeAt(2))) {
											if (3 === n)
													return t.root = t.dir = e,
													t;
											i = 3
									}
							}
							i > 0 && (t.root = e.slice(0, i));
							let o = -1
								, s = i
								, a = -1
								, l = !0
								, c = e.length - 1
								, d = 0;
							for (; c >= i; --c)
									if (r = e.charCodeAt(c),
									isPathSeparator(r)) {
											if (!l) {
													s = c + 1;
													break
											}
									} else
											-1 === a && (l = !1,
											a = c + 1),
											r === pc ? -1 === o ? o = c : 1 !== d && (d = 1) : -1 !== o && (d = -1);
							return -1 !== a && (-1 === o || 0 === d || 1 === d && o === a - 1 && o === s + 1 ? t.base = t.name = e.slice(s, a) : (t.name = e.slice(s, o),
							t.base = e.slice(s, a),
							t.ext = e.slice(o, a))),
							t.dir = s > 0 && s !== i ? e.slice(0, s - 1) : t.root,
							t
					},
					sep: "\\",
					delimiter: ";",
					win32: null,
					posix: null
			}
				, _c = {
					resolve(...e) {
							let t = ""
								, n = !1;
							for (let i = e.length - 1; i >= -1 && !n; i--) {
									const r = i >= 0 ? e[i] : lc();
									validateString(r, "path"),
									0 !== r.length && (t = `${r}/${t}`,
									n = r.charCodeAt(0) === uc)
							}
							return t = normalizeString(t, !n, "/", isPosixPathSeparator),
							n ? `/${t}` : t.length > 0 ? t : "."
					},
					normalize(e) {
							if (validateString(e, "path"),
							0 === e.length)
									return ".";
							const t = e.charCodeAt(0) === uc
								, n = e.charCodeAt(e.length - 1) === uc;
							return 0 === (e = normalizeString(e, !t, "/", isPosixPathSeparator)).length ? t ? "/" : n ? "./" : "." : (n && (e += "/"),
							t ? `/${e}` : e)
					},
					isAbsolute: e=>(validateString(e, "path"),
					e.length > 0 && e.charCodeAt(0) === uc),
					join(...e) {
							if (0 === e.length)
									return ".";
							let t;
							for (let n = 0; n < e.length; ++n) {
									const i = e[n];
									validateString(i, "path"),
									i.length > 0 && (void 0 === t ? t = i : t += `/${i}`)
							}
							return void 0 === t ? "." : _c.normalize(t)
					},
					relative(e, t) {
							if (validateString(e, "from"),
							validateString(t, "to"),
							e === t)
									return "";
							if ((e = _c.resolve(e)) === (t = _c.resolve(t)))
									return "";
							const n = e.length
								, i = n - 1
								, r = t.length - 1
								, o = i < r ? i : r;
							let s = -1
								, a = 0;
							for (; a < o; a++) {
									const n = e.charCodeAt(1 + a);
									if (n !== t.charCodeAt(1 + a))
											break;
									n === uc && (s = a)
							}
							if (a === o)
									if (r > o) {
											if (t.charCodeAt(1 + a) === uc)
													return t.slice(1 + a + 1);
											if (0 === a)
													return t.slice(1 + a)
									} else
											i > o && (e.charCodeAt(1 + a) === uc ? s = a : 0 === a && (s = 0));
							let l = "";
							for (a = 1 + s + 1; a <= n; ++a)
									a !== n && e.charCodeAt(a) !== uc || (l += 0 === l.length ? ".." : "/..");
							return `${l}${t.slice(1 + s)}`
					},
					toNamespacedPath: e=>e,
					dirname(e) {
							if (validateString(e, "path"),
							0 === e.length)
									return ".";
							const t = e.charCodeAt(0) === uc;
							let n = -1
								, i = !0;
							for (let t = e.length - 1; t >= 1; --t)
									if (e.charCodeAt(t) === uc) {
											if (!i) {
													n = t;
													break
											}
									} else
											i = !1;
							return -1 === n ? t ? "/" : "." : t && 1 === n ? "//" : e.slice(0, n)
					},
					basename(e, t) {
							void 0 !== t && validateString(t, "ext"),
							validateString(e, "path");
							let n, i = 0, r = -1, o = !0;
							if (void 0 !== t && t.length > 0 && t.length <= e.length) {
									if (t === e)
											return "";
									let s = t.length - 1
										, a = -1;
									for (n = e.length - 1; n >= 0; --n) {
											const l = e.charCodeAt(n);
											if (l === uc) {
													if (!o) {
															i = n + 1;
															break
													}
											} else
													-1 === a && (o = !1,
													a = n + 1),
													s >= 0 && (l === t.charCodeAt(s) ? -1 == --s && (r = n) : (s = -1,
													r = a))
									}
									return i === r ? r = a : -1 === r && (r = e.length),
									e.slice(i, r)
							}
							for (n = e.length - 1; n >= 0; --n)
									if (e.charCodeAt(n) === uc) {
											if (!o) {
													i = n + 1;
													break
											}
									} else
											-1 === r && (o = !1,
											r = n + 1);
							return -1 === r ? "" : e.slice(i, r)
					},
					extname(e) {
							validateString(e, "path");
							let t = -1
								, n = 0
								, i = -1
								, r = !0
								, o = 0;
							for (let s = e.length - 1; s >= 0; --s) {
									const a = e.charCodeAt(s);
									if (a !== uc)
											-1 === i && (r = !1,
											i = s + 1),
											a === pc ? -1 === t ? t = s : 1 !== o && (o = 1) : -1 !== t && (o = -1);
									else if (!r) {
											n = s + 1;
											break
									}
							}
							return -1 === t || -1 === i || 0 === o || 1 === o && t === i - 1 && t === n + 1 ? "" : e.slice(t, i)
					},
					format: _format.bind(null, "/"),
					parse(e) {
							validateString(e, "path");
							const t = {
									root: "",
									dir: "",
									base: "",
									ext: "",
									name: ""
							};
							if (0 === e.length)
									return t;
							const n = e.charCodeAt(0) === uc;
							let i;
							n ? (t.root = "/",
							i = 1) : i = 0;
							let r = -1
								, o = 0
								, s = -1
								, a = !0
								, l = e.length - 1
								, c = 0;
							for (; l >= i; --l) {
									const t = e.charCodeAt(l);
									if (t !== uc)
											-1 === s && (a = !1,
											s = l + 1),
											t === pc ? -1 === r ? r = l : 1 !== c && (c = 1) : -1 !== r && (c = -1);
									else if (!a) {
											o = l + 1;
											break
									}
							}
							if (-1 !== s) {
									const i = 0 === o && n ? 1 : o;
									-1 === r || 0 === c || 1 === c && r === s - 1 && r === o + 1 ? t.base = t.name = e.slice(i, s) : (t.name = e.slice(i, r),
									t.base = e.slice(i, s),
									t.ext = e.slice(r, s))
							}
							return o > 0 ? t.dir = e.slice(0, o - 1) : n && (t.dir = "/"),
							t
					},
					sep: "/",
					delimiter: ":",
					win32: null,
					posix: null
			};
			_c.win32 = gc.win32 = gc,
			_c.posix = gc.posix = _c;
			"win32" === dc ? gc.normalize : _c.normalize,
			"win32" === dc ? gc.isAbsolute : _c.isAbsolute,
			"win32" === dc ? gc.join : _c.join,
			"win32" === dc ? gc.resolve : _c.resolve,
			"win32" === dc ? gc.relative : _c.relative,
			"win32" === dc ? gc.dirname : _c.dirname,
			"win32" === dc ? gc.basename : _c.basename,
			"win32" === dc ? gc.extname : _c.extname,
			"win32" === dc ? gc.format : _c.format,
			"win32" === dc ? gc.parse : _c.parse,
			"win32" === dc ? gc.toNamespacedPath : _c.toNamespacedPath,
			"win32" === dc ? gc.sep : _c.sep,
			"win32" === dc ? gc.delimiter : _c.delimiter;
			var fc;
			(function(e) {
					e.http = "http",
					e.https = "https",
					e.data = "data",
					e.command = "command"
			}
			)(fc || (fc = {}));
			class DomListener {
					constructor(e, t, n, i) {
							this._node = e,
							this._type = t,
							this._handler = n,
							this._options = i || !1,
							this._node.addEventListener(this._type, this._handler, this._options)
					}
					dispose() {
							this._handler && (this._node.removeEventListener(this._type, this._handler, this._options),
							this._node = null,
							this._handler = null)
					}
			}
			function addDisposableListener(e, t, n, i) {
					return new DomListener(e,t,n,i)
			}
			let yc, vc;
			class AnimationFrameQueueItem {
					constructor(e, t=0) {
							this._runner = e,
							this.priority = t,
							this._canceled = !1
					}
					dispose() {
							this._canceled = !0
					}
					execute() {
							if (!this._canceled)
									try {
											this._runner()
									} catch (e) {
											errors_onUnexpectedError(e)
									}
					}
					static sort(e, t) {
							return t.priority - e.priority
					}
			}
			(function() {
					let e = []
						, t = null
						, n = !1
						, i = !1;
					const animationFrameRunner = ()=>{
							for (n = !1,
							t = e,
							e = [],
							i = !0; t.length > 0; ) {
									t.sort(AnimationFrameQueueItem.sort);
									t.shift().execute()
							}
							i = !1
					}
					;
					vc = (t,i=0)=>{
							const r = new AnimationFrameQueueItem(t,i);
							return e.push(r),
							n || (n = !0,
							requestAnimationFrame(animationFrameRunner)),
							r
					}
					,
					yc = (e,n)=>{
							if (i) {
									const i = new AnimationFrameQueueItem(e,n);
									return t.push(i),
									i
							}
							return vc(e, n)
					}
			}
			)();
			class Dimension {
					constructor(e, t) {
							this.width = e,
							this.height = t
					}
					with(e=this.width, t=this.height) {
							return e !== this.width || t !== this.height ? new Dimension(e,t) : this
					}
					static is(e) {
							return "object" == typeof e && "number" == typeof e.height && "number" == typeof e.width
					}
					static lift(e) {
							return e instanceof Dimension ? e : new Dimension(e.width,e.height)
					}
					static equals(e, t) {
							return e === t || !(!e || !t) && (e.width === t.width && e.height === t.height)
					}
			}
			Dimension.None = new Dimension(0,0);
			var bc;
			(function(e) {
					e.HTML = "http://www.w3.org/1999/xhtml",
					e.SVG = "http://www.w3.org/2000/svg"
			}
			)(bc || (bc = {}));
			var Sc;
			(function(e) {
					e[e.DOCUMENT = 1] = "DOCUMENT",
					e[e.BROWSER = 2] = "BROWSER"
			}
			)(Sc || (Sc = {}));
			fc.http,
			fc.https,
			fc.command,
			Object.freeze(["a", "abbr", "b", "bdo", "blockquote", "br", "caption", "cite", "code", "col", "colgroup", "dd", "del", "details", "dfn", "div", "dl", "dt", "em", "figcaption", "figure", "h1", "h2", "h3", "h4", "h5", "h6", "hr", "i", "img", "ins", "kbd", "label", "li", "mark", "ol", "p", "pre", "q", "rp", "rt", "ruby", "samp", "small", "small", "span", "strike", "strong", "sub", "summary", "sup", "table", "tbody", "td", "tfoot", "th", "thead", "time", "tr", "tt", "u", "ul", "var", "video", "wbr"]),
			Object.freeze({
					ALLOWED_TAGS: ["a", "button", "blockquote", "code", "div", "h1", "h2", "h3", "h4", "h5", "h6", "hr", "input", "label", "li", "p", "pre", "select", "small", "span", "strong", "textarea", "ul", "ol"],
					ALLOWED_ATTR: ["href", "data-href", "data-command", "target", "title", "name", "src", "alt", "class", "id", "role", "tabindex", "style", "data-code", "width", "height", "align", "x-dispatch", "required", "checked", "placeholder", "type"],
					RETURN_DOM: !1,
					RETURN_DOM_FRAGMENT: !1,
					RETURN_TRUSTED_TYPE: !0
			});
			let Cc = class extends LayoutStateProviderBase {
					constructor(e) {
							super(e),
							this.breakpointMediaQueryMap = new Map,
							this.handleMediaQueryChange = e=>{
									var t;
									if (e.target instanceof MediaQueryList && e.matches) {
											null === (t = this.log) || void 0 === t || t.trace(this, this.handleMediaQueryChange, null, e).write();
											const n = this.breakpointMediaQueryMap.get(e.target);
											n && super.updateActiveState(n)
									}
							}
							,
							this.configureMatchMediaQueries()
					}
					configureMatchMediaQueries() {
							var e;
							let t = !1;
							for (const n of Bl) {
									const i = matchMedia(`(min-width: ${n.value}px)`);
									this.breakpointMediaQueryMap.set(i, n),
									this._register(addDisposableListener(i, "change", this.handleMediaQueryChange)),
									i.matches && !t && (t = !0,
									null === (e = this.log) || void 0 === e || e.trace(this, this.configureMatchMediaQueries, "initial state:", n.name).write(),
									super.updateActiveState(n))
							}
					}
			}
			;
			var Ec;
			Cc = __decorate([__param(0, F(Vs)), __metadata("design:paramtypes", [Object])], Cc),
			function(e) {
					const t = {
							text: "any",
							messageId: "any",
							author: ve.Bot,
							contentOrigin: be.DeepLeo,
							messageType: void 0,
							hiddenText: void 0
					}
						, n = {
							...t,
							contentOrigin: be.DeepLeo,
							hiddenText: "any",
							messageType: Ee.Any
					}
						, i = {
							...n,
							messageType: Ee.InternalSearchQuery
					}
						, r = {
							...n,
							messageType: Ee.InternalLoaderMessage
					}
						, o = {
							...n,
							messageType: Ee.RenderCardRequest
					}
						, s = {
							...n,
							messageType: Ee.SemanticSerp
					}
						, a = {
							...n,
							messageType: Ee.AdsQuery
					};
					e.isBaseMessage = function(e) {
							const {text: n, author: i, messageId: r} = t;
							return e.author === i && typeof e.messageId == typeof r && (typeof e.text == typeof n || Array.isArray(e.adaptiveCards))
					}
					,
					e.isMessageTypeBase = function(t) {
							const {hiddenText: i, messageType: r, contentOrigin: o} = n;
							return t.contentOrigin === o && typeof t.messageType == typeof r && typeof t.hiddenText == typeof i && e.isBaseMessage(t)
					}
					,
					e.isInternalSearchQuery = function(t) {
							const {messageType: n} = i;
							return t.messageType === n && e.isMessageTypeBase(t)
					}
					,
					e.isInternalLoaderMessage = function(t) {
							const {messageType: n} = r;
							return t.messageType === n && e.isMessageTypeBase(t)
					}
					,
					e.isRenderCardRequest = function(t) {
							const {messageType: n, contentOrigin: i} = o;
							return t.messageType === n && t.contentOrigin === i && e.isBaseMessage(t)
					}
					,
					e.isSemanticSerp = function(t) {
							const {messageType: n, contentOrigin: i} = s;
							return t.messageType === n && t.contentOrigin === i && e.isBaseMessage(t)
					}
					,
					e.isAdsQuery = function(t) {
							const {messageType: n, contentOrigin: i} = a;
							return t.messageType === n && t.contentOrigin === i && e.isBaseMessage(t)
					}
			}(Ec || (Ec = {}));
			class MessageModelBase {
					constructor(e) {
							var t, n, i, r, o;
							this.isFinalized = !1,
							this.text = null !== (n = null === (t = e.text) || void 0 === t ? void 0 : t.trim()) && void 0 !== n ? n : "",
							this.requestId = null !== (i = e.requestId) && void 0 !== i ? i : CoreUtils.uuid(),
							this.messageId = null !== (r = e.messageId) && void 0 !== r ? r : CoreUtils.uuid(),
							this.isShared = e.isShared || !1,
							this.messageType = e.messageType,
							this.author = null !== (o = e.author) && void 0 !== o ? o : ve.User,
							this.contentOrigin = e.contentOrigin,
							this.adaptiveCards = this.getAdaptiveCards(e),
							this.onPropertyChanged = _.getNotifier(this)
					}
					update(e) {
							var t;
							this.adaptiveCards = this.getAdaptiveCards(e);
							const n = (null !== (t = e.text) && void 0 !== t ? t : this.text).trim();
							this.text !== n && (this.text = n)
					}
					finalize() {
							return this.isFinalized || (this.isFinalized = !0),
							this
					}
					append(e) {
							e && (this.text += e)
					}
					getAdaptiveCards(e) {
							return e.adaptiveCards ? Array.from(e.adaptiveCards) : []
					}
			}
			__decorate([observable, __metadata("design:type", Boolean)], MessageModelBase.prototype, "isFinalized", void 0),
			__decorate([observable, __metadata("design:type", String)], MessageModelBase.prototype, "text", void 0),
			__decorate([observable, __metadata("design:type", Array)], MessageModelBase.prototype, "adaptiveCards", void 0),
			__decorate([observable, __metadata("design:type", String)], MessageModelBase.prototype, "contentOrigin", void 0);
			class TextMessageModel extends MessageModelBase {
					constructor(e, t) {
							var n, i;
							super(e),
							this.type = sl.Text,
							this._additionalAttributionDetails = t,
							this.sourceAttributions = TextMessageModel.getSourceAttributions(e),
							this.suggestedResponses = TextMessageModel.getSuggestedResponses(e),
							this.feedbackPrompt = null !== (n = e.feedbackPrompt) && void 0 !== n && n,
							this.reportable = null === (i = e.reportable) || void 0 === i || i
					}
					update(e) {
							var t, n;
							this.sourceAttributions = TextMessageModel.getSourceAttributions(e, this._additionalAttributionDetails),
							this.suggestedResponses = TextMessageModel.getSuggestedResponses(e),
							this.adaptiveCards = this.getAdaptiveCards(e);
							let i = null;
							this.contentOrigin !== e.contentOrigin && (e.contentOrigin === be.Apology && (i = null !== (t = e.topicChangerText) && void 0 !== t ? t : ""),
							this.contentOrigin = e.contentOrigin),
							null != i || (i = null !== (n = e.text) && void 0 !== n ? n : this.text),
							i = i.trim(),
							this.text !== i && (this.text = i)
					}
					static getSuggestedResponses(e) {
							var t, n;
							return e.contentOrigin === be.Apology ? [] : null !== (n = null === (t = null == e ? void 0 : e.suggestedResponses) || void 0 === t ? void 0 : t.map((e=>({
									...e
							})))) && void 0 !== n ? n : []
					}
					static getSourceAttributions(e, t) {
							var n, i;
							return e.contentOrigin === be.Apology ? [] : null !== (i = null === (n = null == e ? void 0 : e.sourceAttributions) || void 0 === n ? void 0 : n.map((e=>({
									...e,
									snippets: this.getSnippet(e.seeMoreUrl, t)
							})))) && void 0 !== i ? i : []
					}
					static getSnippet(e, t) {
							var n, i;
							return null !== (i = null === (n = null == t ? void 0 : t.find((t=>t.url === e))) || void 0 === n ? void 0 : n.snippets) && void 0 !== i ? i : []
					}
			}
			__decorate([observable, __metadata("design:type", Object)], TextMessageModel.prototype, "inlineAdsModel", void 0),
			__decorate([observable, __metadata("design:type", Array)], TextMessageModel.prototype, "sourceAttributions", void 0);
			class MetaMessageModel extends MessageModelBase {
					constructor(e, t) {
							super(t),
							this.type = sl.Meta,
							this.isHidden = e
					}
			}
			class HostMessageModel extends MessageModelBase {
					constructor(e, t, n) {
							if (super(n),
							this.type = sl.Host,
							this.messageData = n,
							this.contentType = e,
							this.contentUrl = t,
							n.messageId)
									this.iframeid = n.messageId;
							else {
									this.iframeid = CoreUtils.uuid();
									const e = new URL(this.contentUrl);
									e.searchParams.set("iframeid", this.iframeid),
									this.contentUrl = e.href
							}
					}
			}
			let Tc = class {
					constructor(e, t, n) {
							this.config = e,
							this.conversation = t,
							this.log = n,
							this.currentKSeed = this.config.telemetry.kSeedBase,
							this._additionalAttributionDetails = []
					}
					get additionalAttributionDetails() {
							return this._additionalAttributionDetails
					}
					createIncoming(e) {
							var t, n;
							let i = null;
							switch (!e.messageType && Ec.isBaseMessage(e) && (e.messageType = Ee.Chat),
							!e.messageType || e.messageType === Ee.Chat && e.responseType === fe.GetMessagesResponse || null === (t = this.log) || void 0 === t || t.trace(this, this.createIncoming, e.messageType, e).write(),
							e.messageType) {
							case Ee.InternalSearchQuery:
									this.config.features.enableMetaMessages && Ec.isInternalSearchQuery(e) && (i = this.createLocalMeta(e, !1));
									break;
							case Ee.InternalStateMarker:
									break;
							case Ee.InternalLoaderMessage:
									this.config.features.enableMetaMessages && Ec.isInternalLoaderMessage(e) && (i = this.createLocalMeta(e, !1));
									break;
							case Ee.RenderCardRequest:
									this.config.features.enableAnswerCards && Ec.isRenderCardRequest(e) && (i = this.createAnswerHostMessageInternal(e));
									break;
							case Ee.SemanticSerp:
									this.config.semserp.isEnabled && Ec.isSemanticSerp(e) && (i = this.createSemSerpHostMessageInternal(e));
									break;
							case Ee.AdsQuery:
									this.config.features.enableAds && Ec.isAdsQuery(e) && (i = this.createAdsHostMessageInternal(e));
									break;
							case Ee.SearchQuery:
							case Ee.Internal:
							case Ee.Ads:
									break;
							case Ee.InternalSearchResult:
									this.extractAdditionalAttributionDetails(e);
									break;
							case Ee.InternalActionMarker:
							case Ee.Suggestion:
									break;
							case Ee.Chat:
							default:
									Ec.isBaseMessage(e) ? i = this.createLocalText(e) : null === (n = this.log) || void 0 === n || n.warn(this, this.createIncoming, `UNMATCHED content origin: '${e.contentOrigin}'`, e).write()
							}
							return i
					}
					extractAdditionalAttributionDetails(e) {
							var t;
							if (e.messageType === Ee.InternalSearchResult && e.hiddenText) {
									const n = null === (t = e.hiddenText.match("```json([^```]*)")) || void 0 === t ? void 0 : t[1];
									if (!n)
											return;
									this._additionalAttributionDetails = [...JSON.parse(n).question_answering_results, ...JSON.parse(n).web_search_results] || []
							}
					}
					createLocalText(e) {
							return new TextMessageModel(e,this.additionalAttributionDetails)
					}
					createLocalMeta(e, t=!1) {
							return new MetaMessageModel(t,e)
					}
					createLocalHost(e, t) {
							const n = {
									...this.generateLocalMessageData(e),
									contentOrigin: be.DeepLeo,
									messageType: Ee.Any,
									author: ve.Bot,
									hiddenText: ""
							};
							let i = null;
							switch (t) {
							case al.Ads:
									n.messageType = Ee.AdsQuery,
									i = this.createAdsHostMessageInternal(n);
									break;
							case al.Answer:
									n.messageType = Ee.RenderCardRequest,
									i = this.createAnswerHostMessageInternal(n);
									break;
							case al.SemSerp:
									n.messageType = Ee.SemanticSerp,
									i = this.createSemSerpHostMessageInternal(n)
							}
							return i
					}
					getConversationId() {
							return null === this.conversation.id ? "" : this.conversation.id
					}
					getNextKSeed() {
							return this.currentKSeed += this.config.telemetry.kSeedIncrement,
							this.currentKSeed
					}
					createAdsHostMessageInternal(e) {
							var t;
							this.config.ads.query.kseed = `${this.getNextKSeed()}`;
							const n = this.buildHostedContentUrl(this.config.ads, e.text, e.messageId);
							n.searchParams.set("codex_conid", this.getConversationId());
							let i = 3;
							do {
									n.searchParams.set("codex_summ", this.conversation.createConversationSummary(i--))
							} while (n.href.length > 2e3);
							return null === (t = this.log) || void 0 === t || t.trace(this, this.createAdsHostMessageInternal, `AdsQuery hosted content URL (length: ${n.href.length}):`, n.href).write(),
							new HostMessageModel(al.Ads,n.href,e)
					}
					createAnswerHostMessageInternal(e) {
							this.config.answers.query.kseed = `${this.getNextKSeed()}`;
							const t = this.buildHostedContentUrl(this.config.answers, e.text, e.messageId);
							return new HostMessageModel(al.Answer,t.href,e)
					}
					createSemSerpHostMessageInternal(e) {
							const t = this.buildHostedContentUrl(this.config.semserp, e.text, e.messageId);
							return new HostMessageModel(al.SemSerp,t.href,e)
					}
					buildHostedContentUrl(e, t, n) {
							const i = this.config.buildUrl(e);
							return i.searchParams.set("q", this.applyTextTransformations(t)),
							i.searchParams.set("iframeid", n),
							i
					}
					generateLocalMessageData(e) {
							var t, n, i, r, o;
							return {
									...e,
									text: null !== (t = e.text) && void 0 !== t ? t : "",
									requestId: null !== (n = e.requestId) && void 0 !== n ? n : CoreUtils.uuid(),
									messageId: null !== (i = e.requestId) && void 0 !== i ? i : CoreUtils.uuid(),
									author: null !== (r = e.author) && void 0 !== r ? r : ve.Bot,
									contentOrigin: this.config.sydney.request.source,
									adaptiveCards: [],
									reportable: null === (o = e.reportable) || void 0 === o || o
							}
					}
					applyTextTransformations(e) {
							const {LOCATION_OF_HUMAN_PARAM: t, LOCATION_OF_HUMAN_VALUE: n} = this.config.sydney;
							return (e = e.replaceAll(t, n)).startsWith("> ") && (e = e.substring(2)),
							e
					}
			}
			;
			Tc = __decorate([__param(0, Yo), __param(1, zs), __param(2, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object])], Tc);
			const Ic = P.createInterface();
			var wc = __webpack_require__(8911)
				, Ac = __webpack_require__(4868)
				, Rc = __webpack_require__.n(Ac);
			const xc = /\\([ \\!"#$%&'()*+,.\/:;<=>?@[\]^_`{|}~-])/g;
			function superscript(e, t) {
					const n = e.posMax
						, i = e.pos;
					if (94 !== e.src.charCodeAt(i))
							return !1;
					if (t)
							return !1;
					if (i + 2 >= n)
							return !1;
					let r = !1;
					for (e.pos = i + 1; e.pos < n; ) {
							if (94 === e.src.charCodeAt(e.pos)) {
									r = !0;
									break
							}
							e.md.inline.skipToken(e)
					}
					if (!r || i + 1 === e.pos)
							return e.pos = i,
							!1;
					const o = e.src.slice(i + 1, e.pos);
					if (o.match(/(^|[^\\])(\\\\)*\s/))
							return e.pos = i,
							!1;
					e.posMax = e.pos,
					e.pos = i + 1;
					let s = e.push("sup_open", "sup", 1);
					return s.markup = "^",
					s = e.push("text", "", 0),
					s.content = o.replace(xc, "$1"),
					s = e.push("sup_close", "sup", -1),
					s.markup = "^",
					e.pos = e.posMax + 1,
					e.posMax = n,
					!0
			}
			function MarkdownItSup(e) {
					e.inline.ruler.after("emphasis", "sup", superscript)
			}
			const Oc = __webpack_require__(5031);
			let Nc = class {
					constructor(e, t) {
							this.config = e,
							this.log = t,
							this.highlightCodeBlock = (e,t)=>{
									let n = "";
									if (t && Oc.getLanguage(t))
											try {
													n = Oc.highlight(e, {
															language: t,
															ignoreIllegals: !0
													}).value
											} catch (e) {}
									return n
							}
							,
							this.handleProcessMarkdown = (e,t)=>{
									e = this.applyTextTransformations(e),
									t.outputHtml = this.markdown.render(e).replaceAll("</a> <a", "</a><a"),
									t.didProcess = !0
							}
							,
							this.markdown = this.createMarkdownRenderer(),
							this.card = this.createAdaptiveCardRenderer()
					}
					create(e) {
							return this.card.parse(e),
							this.card.render()
					}
					renderMarkdownToHtml(e) {
							return this.markdown.render(e)
					}
					createMarkdownRenderer() {
							const e = {
									typographer: !0
							};
							return e.highlight = this.highlightCodeBlock,
							new (Rc())(e).use(MarkdownItSup)
					}
					createAdaptiveCardRenderer() {
							wc.AdaptiveCard.onProcessMarkdown = this.handleProcessMarkdown;
							const e = new wc.AdaptiveCard;
							return e.hostConfig = new wc.HostConfig({
									adaptiveCard: {
											allowCustomStyle: !1
									},
									fontTypes: {
											default: {
													fontFamily: "Roboto, Helvetica, sans-serif",
													fontSizes: {
															small: 16,
															default: 18,
															medium: 22,
															large: 24,
															extraLarge: 28
													},
													fontWeights: {
															lighter: 200,
															default: 400,
															bolder: 600
													}
											},
											monospace: {
													fontFamily: "'Courier New', Courier, monospace",
													fontSizes: {
															small: 12,
															default: 14,
															medium: 17,
															large: 21,
															extraLarge: 26
													},
													fontWeights: {
															lighter: 200,
															default: 400,
															bolder: 600
													}
											}
									},
									separator: {
											lineThickness: 1,
											lineColor: "#cccccc"
									}
							}),
							e
					}
					applyTextTransformations(e) {
							e = e.replaceAll("^][^", "^] [^");
							const {LOCATION_OF_HUMAN_PARAM: t, LOCATION_OF_HUMAN_VALUE: n} = this.config.sydney;
							return e.replaceAll(t, n)
					}
			}
			;
			Nc = __decorate([__param(0, Yo), __param(1, F(Vs)), __metadata("design:paramtypes", [Object, Object])], Nc);
			class TypeCheckers {
					static isPoint(e) {
							const t = e;
							return "object" == typeof e && null !== e && "number" == typeof t.x && "number" == typeof t.y
					}
					static isSize(e) {
							const t = e;
							return "object" == typeof e && null !== e && "number" == typeof t.width && "number" == typeof t.height
					}
					static isRect(e) {
							return TypeCheckers.isPoint(e) && TypeCheckers.isSize(e)
					}
			}
			class Point_Point {
					constructor(e, t) {
							this.x = 0,
							this.y = 0;
							const n = {};
							TypeCheckers.isPoint(e) ? (n.x = e.x,
							n.y = e.y) : "number" == typeof e && (n.x = e,
							n.y = t),
							void 0 !== n.x && (this.x = n.x),
							void 0 !== n.y && (this.y = n.y),
							this.equals = this.equals.bind(this),
							this.closeTo = this.closeTo.bind(this),
							this.clone = this.clone.bind(this)
					}
					static copy(e, t) {
							t.x = e.x,
							t.y = e.y
					}
					static compare(e, t, n) {
							return void 0 !== n ? Math.abs(e.x - t.x) <= n && Math.abs(e.y - t.y) <= n : e.x === t.x && e.y === t.y
					}
					closeTo(e, t) {
							return Math.abs(this.x - e.x) <= t && Math.abs(this.y - e.y) <= t
					}
					clone() {
							return new Point_Point(this.x,this.y)
					}
					copyTo(e) {
							Point_Point.copy(this, e)
					}
					equals(e) {
							return Point_Point.compare(this, e)
					}
			}
			class Size_Size {
					constructor(e, t) {
							this.width = 0,
							this.height = 0,
							void 0 !== e && (this.width = e),
							void 0 !== t && (this.height = t),
							this.equals = this.equals.bind(this),
							this.closeTo = this.closeTo.bind(this),
							this.clone = this.clone.bind(this)
					}
					static copy(e, t) {
							t.width = e.width,
							t.height = e.height
					}
					static compare(e, t, n) {
							return void 0 !== n ? Math.abs(e.width - t.width) <= n && Math.abs(e.height - t.height) <= n : e.width === t.width && e.height === t.height
					}
					closeTo(e, t) {
							return Math.abs(this.width - e.width) <= t && Math.abs(this.height - e.height) <= t
					}
					clone() {
							return new Size_Size(this.width,this.height)
					}
					copyTo(e) {
							Size_Size.copy(this, e)
					}
					equals(e) {
							return Size_Size.compare(this, e)
					}
			}
			class Rect_Rect {
					constructor(e, t, n, i) {
							var r, o, s, a;
							this.width = 0,
							this.height = 0,
							this.x = 0,
							this.y = 0;
							const l = {};
							TypeCheckers.isSize(e) ? (l.width = e.width,
							l.height = e.height) : TypeCheckers.isPoint(e) ? (l.x = e.x,
							l.y = e.y,
							TypeCheckers.isSize(t) ? (l.width = t.width,
							l.height = t.height) : "number" == typeof t && "number" == typeof n && (l.width = t,
							l.height = n)) : (l.x = e,
							l.y = t,
							TypeCheckers.isSize(n) ? (l.width = n.width,
							l.height = n.height) : (l.width = n,
							l.height = i)),
							this.x = null !== (r = l.x) && void 0 !== r ? r : 0,
							this.y = null !== (o = l.y) && void 0 !== o ? o : 0,
							this.width = null !== (s = l.width) && void 0 !== s ? s : 0,
							this.height = null !== (a = l.height) && void 0 !== a ? a : 0,
							this.equals = this.equals.bind(this),
							this.closeTo = this.closeTo.bind(this),
							this.clone = this.clone.bind(this),
							this.constrainSize = this.constrainSize.bind(this),
							this.constrainPosition = this.constrainPosition.bind(this)
					}
					static copy(e, t) {
							Point_Point.copy(e, t),
							Size_Size.copy(e, t)
					}
					static compare(e, t, n) {
							return Point_Point.compare(e, t, n) && Size_Size.compare(e, t, n)
					}
					closeTo(e, t) {
							return Math.abs(this.width - e.width) <= t && Math.abs(this.height - e.height) <= t && Math.abs(this.x - e.x) <= t && Math.abs(this.y - e.y) <= t
					}
					clone() {
							return new Rect_Rect(this.x,this.y,this.width,this.height)
					}
					constrainSize(e, t) {
							return e && t ? new Rect_Rect(this.x,this.y,CoreUtils.clamp(this.width, e.width, t.width),CoreUtils.clamp(this.height, e.height, t.height)) : e ? new Rect_Rect(this.x,this.y,Math.max(this.width, e.width),Math.max(this.height, e.height)) : t ? new Rect_Rect(this.x,this.y,Math.min(this.width, t.width),Math.min(this.height, t.height)) : new Rect_Rect(this.x,this.y,this.width,this.height)
					}
					constrainPosition(e, t) {
							return e && t ? new Rect_Rect(CoreUtils.clamp(this.x, e.x, t.x),CoreUtils.clamp(this.y, e.y, t.y),this.width,this.height) : e ? new Rect_Rect(Math.max(this.x, e.x),Math.max(this.y, e.y),this.width,this.height) : t ? new Rect_Rect(Math.min(this.x, t.x),Math.min(this.y, t.y),this.width,this.height) : new Rect_Rect(this.x,this.y,this.width,this.height)
					}
					copyTo(e) {
							Rect_Rect.copy(this, e)
					}
					equals(e) {
							return Rect_Rect.compare(this, e)
					}
			}
			function TypeUtils_isError(e) {
					return e instanceof Error
			}
			const Pc = {
					adsAug: {
							type: "string",
							default: void 0,
							isRequired: !1
					}
			};
			const Dc = {
					sydneyUrl: {
							type: "string",
							default: void 0,
							isRequired: !1
					},
					sydneyOptionsSets: {
							type: "string",
							default: void 0,
							isRequired: !1
					},
					sydneySliceIds: {
							type: "string",
							default: void 0,
							isRequired: !1
					}
			};
			class ArgsParser_ArgsParser {
					constructor(e) {
							this.descriptors = Object.freeze(e),
							this.defaults = this.getDefaults()
					}
					generateUrl(e, t) {
							const n = new URL("",e);
							let i, r;
							for (i in this.descriptors)
									i in t && (r = t[i],
									null != r && "" !== r && n.searchParams.set(i, String(r)));
							return n
					}
					parseArgs(e) {
							const t = {}
								, n = new URLSearchParams(e);
							let i;
							for (const e of Object.entries(this.descriptors)) {
									const r = e[0]
										, o = e[1];
									if (i = n.get(r),
									null !== i)
											switch (o.type) {
											case "boolean":
													if (i = i.toLowerCase(),
													"true" !== i && "false" !== i)
															throw new Error(`The ${r} parameter must be either 'true' or 'false'.`);
													t[r] = "true" === i;
													break;
											case "number":
													const e = Number(i);
													if (isNaN(e))
															throw new Error(`The ${r} parameter must be a number.`);
													t[r] = e;
													break;
											default:
													t[r] = i
											}
									else
											!0 === o.isRequired && (t[r] = o.default)
							}
							return t
					}
					getDefaults() {
							const e = {};
							let t;
							for (t in this.descriptors)
									e[t] = this.descriptors[t].default;
							return e
					}
			}
			const Mc = {
					shareId: {
							type: "string",
							default: void 0,
							isRequired: !1
					},
					showconv: {
							type: "string",
							default: void 0,
							isRequired: !1
					}
			};
			const Lc = {
					log: {
							type: "string",
							default: void 0,
							isRequired: !1
					},
					q: {
							type: "string",
							default: void 0,
							isRequired: !1
					},
					mode: {
							type: "string",
							default: void 0,
							isRequired: !1
					},
					mobile: {
							type: "boolean",
							default: !1,
							isRequired: !1
					},
					alignment: {
							type: "string",
							default: void 0,
							isRequired: !1
					},
					features: {
							type: "string",
							default: "",
							isRequired: !1
					}
			};
			const kc = {
					launch: {
							type: "boolean",
							default: !1,
							isRequired: !1
					},
					config: {
							type: "string",
							default: void 0,
							isRequired: !1
					}
			};
			function registerServices() {
					const e = new AppService;
					return e.addInstance(Y, e),
					e.addSingleton(Yo, ConfigService),
					e.addSingleton(dl, SystemEventBus),
					e.addSingleton(Us, Ga),
					e.addSingleton(Va, Ha),
					e.addSingleton(za, $a),
					e.addSingleton(Vs, ea),
					e.addSingleton(js, Cl),
					e.addSingleton(ie, ApiService),
					e.addSingleton(Ya, NotificationService),
					e.addSingleton(Oa, Xa),
					e.addSingleton(Ja, tl),
					e.addSingleton(nl, FirstRunExperienceService),
					e.addSingleton(il, rl),
					e.addSingleton(qa, Wa),
					e.addSingleton(Hs, Ws),
					e.addSingleton(ol, cl),
					e.addSingleton(yl, fl),
					e.addSingleton(ja, function(e=!1) {
							return e ? Cc : Ul
					}()),
					e.addSingleton(ll, Tc),
					e.addSingleton(Ic, Nc),
					e.addSingleton(Za, Al),
					e.addSingleton(Ra, kl),
					e.addSingleton(zs, Rl),
					e
			}
			const Fc = P.createInterface()
				, Bc = P.createInterface("IHostMessageViewModel")
				, Gc = P.createInterface("IMetaMessageViewModel")
				, Uc = P.createInterface("ITextMessageViewModel");
			var zc, $c, Vc;
			(function(e) {
					e[e.FateOverride = 0] = "FateOverride",
					e[e.AdaptiveCard = 1] = "AdaptiveCard",
					e[e.Text = 2] = "Text"
			}
			)(zc || (zc = {})),
			function(e) {
					e.Copy = "Copy",
					e.Share = "Share"
			}($c || ($c = {})),
			function(e) {
					e.Idle = "Idle",
					e.Copying = "Copying",
					e.Copied = "Copied",
					e.Error = "Error"
			}(Vc || (Vc = {}));
			const Hc = P.createInterface("IMessageGroupViewModel");
			let qc = class {
					constructor(e, t, n) {
							this.app = e,
							this.messages = t,
							this.log = n
					}
					create(e) {
							var t;
							return null === (t = this.log) || void 0 === t || t.trace("ViewModelFactory", "create", "Create non-message view model:", e.toString()).write(),
							this.app.get(e)
					}
					createMessage(e) {
							var t, n;
							let i;
							switch (null === (t = this.log) || void 0 === t || t.trace("ViewModelFactory", "createMessage", `Create message view model (${e.type})`).write(),
							e.type) {
							case sl.Text:
									i = this.app.get(Uc);
									break;
							case sl.Meta:
									i = this.app.get(Gc);
									break;
							case sl.Host:
									i = this.app.get(Bc);
									break;
							default:
									throw new Error(`Unknown message type: '${JSON.stringify(e)}'`)
							}
							return i.initialize(e),
							null === (n = this.log) || void 0 === n || n.trace("ViewModelFactory", "createMessage", "Message view model created").write(),
							i
					}
					createFeedback(e) {
							var t;
							null === (t = this.log) || void 0 === t || t.trace("ViewModelFactory", "createFeedback", "Create feedback view model.").write();
							const n = this.app.get(Hc);
							return n.initialize(e),
							n
					}
					createTextMessage(e="", t) {
							var n;
							null === (n = this.log) || void 0 === n || n.trace("ViewModelFactory", "createTextMessage", "Create text message view model.").write();
							const i = this.messages.createLocalText({
									text: e,
									author: t
							})
								, r = this.app.get(Uc);
							return r.initialize(i),
							r
					}
			}
			;
			qc = __decorate([__param(0, Y), __param(1, ll), __param(2, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object])], qc);
			const jc = P.createInterface("IActionBarViewModel");
			var Wc, Yc, Kc, Qc;
			function createDecorator(e) {
					return (t,n,i)=>{
							let r = null
								, o = null;
							if ("function" == typeof i.value ? (r = "value",
							o = i.value) : "function" == typeof i.get && (r = "get",
							o = i.get),
							!o)
									throw new Error("not supported");
							i[r] = e(o, n)
					}
			}
			(function(e) {
					e.Standby = "standby",
					e.Listening = "listening",
					e.Loading = "loading",
					e.Speaking = "speaking",
					e.Blocked = "blocked",
					e.Errored = "errored"
			}
			)(Wc || (Wc = {})),
			function(e) {
					e[e.Mic = 0] = "Mic",
					e[e.Orb = 1] = "Orb",
					e[e.External = 2] = "External"
			}(Yc || (Yc = {})),
			function(e) {
					e.Center = "center",
					e.Left = "left"
			}(Kc || (Kc = {})),
			function(e) {
					e.tryParse = function(t) {
							let n;
							switch (null == t ? void 0 : t.toLowerCase()) {
							case e.Center:
									n = e.Center;
									break;
							case e.Left:
									n = e.Left
							}
							return n
					}
			}(Kc || (Kc = {})),
			function(e) {
					e.Home = "home",
					e.Search = "search",
					e.Conversation = "conversation",
					e.OffStage = "off-stage"
			}(Qc || (Qc = {})),
			function(e) {
					let t = !1
						, n = e.OffStage
						, i = e.Conversation;
					e.tryParse = function(t) {
							let n;
							switch (null == t ? void 0 : t.toLowerCase()) {
							case e.Home:
									n = e.Home;
									break;
							case e.Search:
									n = e.Search;
									break;
							case e.Conversation:
									n = e.Conversation;
									break;
							case e.OffStage:
									n = e.OffStage
							}
							return n
					}
					,
					e.getDefault = function() {
							return n
					}
					,
					e.getInverse = function() {
							return i
					}
					,
					e.overrideDefaults = function(e, r) {
							t || (t = !0,
							n = e,
							i = r)
					}
			}(Qc || (Qc = {}));
			const Zc = P.createInterface("ISerpContext");
			class ViewModelBase extends lifecycle_Disposable {
					constructor(e, t, n) {
							super(),
							this.serp = e,
							this.layout = t,
							this.log = n
					}
			}
			var Xc;
			(function(e) {
					e.None = "none",
					e.Pole = "pole",
					e.RightRail = "right-rail",
					e.Creator = "creator"
			}
			)(Xc || (Xc = {})),
			function(e) {
					e.toTelemetryNamespace = function(t) {
							let n;
							switch (t) {
							case e.None:
									n = "Conversation";
									break;
							case e.Pole:
									n = "Pole";
									break;
							case e.RightRail:
									n = "RightRail";
									break;
							case e.Creator:
									n = "Creator";
									break;
							default:
									n = "Conversation"
							}
							return n
					}
					,
					e.tryParse = function(t) {
							let n;
							switch (null == t ? void 0 : t.toLowerCase()) {
							case e.None:
									n = e.None;
									break;
							case e.Pole:
									n = e.Pole;
									break;
							case e.RightRail:
									n = e.RightRail;
									break;
							case e.Creator:
									n = e.Creator
							}
							return n
					}
			}(Xc || (Xc = {}));
			const Jc = P.createInterface("IHoverCardViewModel")
				, ed = P.createInterface("IConversationViewModel")
				, td = P.createInterface("ITypingIndicatorViewModel");
			var nd;
			let id = class extends ViewModelBase {
					constructor(e, t, n, i, r, o, s, a, l, c, d, p, u, h) {
							super(e, t, h),
							this.telemetry = n,
							this.config = i,
							this.speech = r,
							this.chat = o,
							this.firstRunExperienceService = s,
							this.errorState = a,
							this.turingAutoSuggest = l,
							this.manager = c,
							this.hoverCard = d,
							this.typingIndicator = p,
							this.conversation = u,
							this.isPendingSubmit = !1,
							this.isEditModeEnabled = !1,
							this.enableSpeechInput = !!this.config.features.enableSpeechInput,
							this.speechIconState = "standby",
							this.speechOutputText = "",
							this.autoSuggestText = "",
							this.autoSuggestPrependedText = "",
							this.autoSuggestAppendedText = "",
							this.isFirstTime = this.firstRunExperienceService.isFirstTime,
							this.forceOngoingConversationPlaceholderText = !1,
							this.strings = {
									placeholder: this.config.strings.actionBarPlaceholder,
									close: this.config.strings.close,
									ongoingConvPlaceholder: this.config.strings.actionBarOngoingConvPlaceholder,
									suspendedConvPlaceholder: this.config.strings.actionBarSuspendConvPlaceHolder,
									composeButton: this.config.strings.actionBarComposeButton,
									composeButtonTooltip: this.config.strings.newTopicPrompt,
									textInputAriaLabel: this.config.strings.actionBarTextInputAriaLabel,
									autoSuggestTab: this.config.strings.actionBarAutoSuggestTab,
									autoSuggestTap: this.config.strings.actionBarAutoSuggestTap,
									keyboardHint: this.config.strings.actionBarKeyboardHint,
									textInputModeButtonAriaLabel: this.config.strings.actionBarTextInputModeButtonAriaLabel,
									speechInputModeButtonAriaLabel: this.config.strings.actionBarSpeechInputModeButtonAriaLabel,
									submitButtonAriaLabel: this.config.strings.actionBarSubmitButtonAriaLabel,
									cancelSpeechInputButtonAriaLabel: this.config.strings.actionBarCancelSpeechInputButtonAriaLabel,
									editModeButtonAriaLabel: this.config.strings.actionBarEditModeButtonAriaLabel,
									speechModeBtnStartListeningAriaLabel: this.config.strings.actionBarSpeechBtnStartListeningAriaLabel,
									speechModeBtnStopListeningAriaLabel: this.config.strings.typingIndicatorStopStreamingAriaLabel,
									speechModeBtnStopReadoutAriaLabel: this.config.strings.actionBarSpeechBtnStopReadoutAriaLabel,
									stop: this.config.strings.stop
							},
							nd.set(this, this._register(new Emitter)),
							this.enableTTSOnVoiceInput = !!this.config.features.enableTTSOnVoiceInput,
							this.anyMessageSent = !1,
							this.previousQuery = "",
							this._inputText = "",
							this._inputMethod = this.serp.isMobile ? Ce.Speech : Ce.Keyboard,
							this.handleRecognizedTextUpdated = e=>{
									var t;
									null === (t = this.log) || void 0 === t || t.trace(this, "handleRecognizedTextUpdated", "text:", e).write(),
									this.speechOutputText = e
							}
							,
							this.handleSpeechStatusChanged = e=>{
									var t, n;
									switch (null === (t = this.log) || void 0 === t || t.trace(this, "handleSpeechStatusChanged", "status:", qs[e]).write(),
									e) {
									case qs.NoPermissionError:
											this.speechIconState = "blocked",
											this.speechOutputText = this.config.strings.speechNoPermissionError;
											break;
									case qs.MediaNotReachableError:
											this.speechIconState = "errored",
											this.speechOutputText = this.config.strings.speechMediaNotReachableError;
											break;
									case qs.FailedRecognitionError:
											this.speechIconState = "errored",
											this.speechOutputText = this.config.strings.speechFailedRecognitionError;
											break;
									case qs.Listening:
											this.speechIconState = "listening",
											this.speechOutputText = this.config.strings.speechListening;
											break;
									case qs.Loading:
											this.speechIconState = "loading",
											this.previousQuery = this.speechOutputText.toLowerCase(),
											this.speechOutputText = this.config.strings.speechLoading;
											break;
									case qs.ReadingOut:
											this.speechIconState = "speaking",
											this.speechOutputText = "";
											break;
									case qs.PendingAudio:
									case qs.WaitingForStreamToFinish:
											this.speechIconState = "loading",
											this.speechOutputText = "";
											break;
									case qs.Prompt:
									case qs.ReadyToBeUsed:
											this.speechIconState = "standby",
											this.speechOutputText = "";
											break;
									case qs.AudioPlaybackError:
											this.speechIconState = "errored",
											this.speechOutputText = this.config.strings.speechAudioPlaybackError;
											break;
									default:
											null === (n = this.log) || void 0 === n || n.warn(this, "handleSpeechStatusChanged", `Case '${qs[e]}' has not been implemented.`).write(),
											this.speechIconState = "standby",
											this.speechOutputText = ""
									}
							}
							,
							this.initializeSerpContextObserver(),
							this.configureSpeechEventListeners(),
							null !== this.serp.query && (this.inputText = this.serp.query)
					}
					get isSpeechModeEnabled() {
							return this.inputMethod === Ce.Speech && !this.isDisabled
					}
					get inputText() {
							return _.track(this, "inputText"),
							this._inputText
					}
					set inputText(e) {
							this._inputText !== e && (this._inputText = e,
							_.notify(this, "inputText"),
							this.config.features.enableGhostedAutoSuggest && this.refreshAutoSuggestText())
					}
					get placeholderText() {
							const e = this.forceOngoingConversationPlaceholderText
								, t = this.anyMessageSent;
							let n;
							return n = this.isSuspended ? this.strings.suspendedConvPlaceholder : this.serp.isMobile ? this.strings.placeholder : this.serp.mode === Qc.Conversation && t || e ? this.strings.ongoingConvPlaceholder : this.strings.placeholder,
							n
					}
					get isCancelEnabled() {
							return this.chat.isRequestPending
					}
					get isDisabled() {
							return this.errorState.chatErrorState !== Pa.OK || this.isAppStateError
					}
					get isSuspended() {
							return this.errorState.chatErrorState === Pa.ChatSuspended
					}
					get isAppStateError() {
							return this.errorState.appErrorState !== Na.OK
					}
					get inputMethod() {
							return _.track(this, "inputMethod"),
							this._inputMethod
					}
					set inputMethod(e) {
							var t, n;
							this._inputMethod !== e && (this._inputMethod === Ce.Speech && (null === (t = this.log) || void 0 === t || t.trace(this, this.inputMethod, "InputMethod was Speech, cancelling any interaction before changing InputMethod").write(),
							this.cancelSpeechInteraction()),
							this._inputMethod = e,
							null === (n = this.log) || void 0 === n || n.debug(this, this.inputMethod, `InputMethod set to: ${this._inputMethod}`).write(),
							_.notify(this, "inputMethod"),
							__classPrivateFieldGet(this, nd, "f").fire(this._inputMethod))
					}
					get onInputMethodChanged() {
							return __classPrivateFieldGet(this, nd, "f").event
					}
					toggleEditMode() {
							this.isEditModeEnabled = !this.isEditModeEnabled
					}
					async handleSpeechChangeAsync(e) {
							var t, n, i, r, o, s, a, l;
							if (this.inputMethod === Ce.Speech) {
									switch (this.speechIconState) {
									case "listening":
											null === (n = this.log) || void 0 === n || n.trace(this, this.handleSpeechChangeAsync, "Speech service is listening, canceling now.").write(),
											this.telemetry.trackEvent("InteractionEvent", "VoiceButtonClick", {
													Namespace: "Conversation",
													CustomData: JSON.stringify({
															start: 0
													})
											}),
											this.speech.tryCancelSpeechRecognition() || null === (i = this.log) || void 0 === i || i.error(this, this.handleSpeechChangeAsync, "Cancelling did not succeded for some reason.").write();
											break;
									case "loading":
											null === (r = this.log) || void 0 === r || r.debug(this, this.handleSpeechChangeAsync, `Speech is loading, won't do anything speechState: ${qs[this.speech.speechStatus]}`).write(),
											this.telemetry.trackEvent("InteractionEvent", "speechConversation", {
													micComponent: "loading"
											});
											break;
									case "speaking":
											null === (o = this.log) || void 0 === o || o.trace(this, this.handleSpeechChangeAsync, "Speech is reading out, stopping readout.").write(),
											this.telemetry.trackEvent("InteractionEvent", "VoiceButtonClick", {
													Namespace: "Conversation",
													CustomData: JSON.stringify({
															start: -1
													})
											}),
											this.telemetry.trackEvent("InteractionEvent", "speechConversation", {
													spokenResponse: "userStopped"
											}),
											this.cancelSpeechInteraction();
											break;
									case "blocked":
											this.telemetry.trackEvent("InteractionEvent", "speechConversation", {
													micComponent: "blocked"
											});
											break;
									case "errored":
									case "standby":
											if (this.telemetry.trackEvent("InteractionEvent", "VoiceButtonClick", {
													Namespace: "Conversation",
													CustomData: JSON.stringify({
															start: 1
													})
											}),
											this.telemetry.trackEvent("InteractionEvent", "speechConversation", {
													micComponent: "clicked"
											}),
											this.chat.isRequestPending)
													null === (s = this.log) || void 0 === s || s.error(this, this.handleSpeechChangeAsync, "Speech cannot be started as there is a pending request.").write(),
													this.telemetry.trackEvent("InteractionEvent", "speechConversation", {
															micComponent: "speechStartBlocked"
													});
											else {
													await this.speech.tryStartSpeechRecognitionAsync(this.enableTTSOnVoiceInput) || (null === (a = this.log) || void 0 === a || a.error(this, this.handleSpeechChangeAsync, "Speech could not get started for some reason.").write(),
													this.telemetry.trackEvent("InteractionEvent", "speechConversation", {
															micComponent: "speechStartError"
													}))
											}
											break;
									default:
											null === (l = this.log) || void 0 === l || l.warn(this, this.handleSpeechChangeAsync, `Case ${this.speechIconState} has not implemented`).write()
									}
									this.telemetry.trackEvent("SystemEvent", "SpeechStateChanged", {
											Namespace: "Conversation",
											CustomData: JSON.stringify({
													source: Yc[e],
													speechStatus: qs[this.speech.speechStatus],
													speechIconState: this.speechIconState
											})
									})
							} else
									null === (t = this.log) || void 0 === t || t.error(this, this.handleSpeechChangeAsync, "Speech should not be triggered when speech mode is not enabled.").write()
					}
					submitSuggestion(e) {
							this.cancelSpeechInteraction(),
							this._inputText = e.text,
							this.submitInputText()
					}
					submitInputText() {
							var e;
							if (!this.chat.isRequestPending) {
									null === (e = this.log) || void 0 === e || e.trace(this, this.submitInputText, `input text: '${this.inputText}'`).write();
									const t = this.isEditModeEnabled;
									if (this.isEditModeEnabled = !1,
									!this.inputText || 0 === this.inputText.trim().length)
											return;
									this.isPendingSubmit = !0;
									const n = this.inputText;
									this.autoSuggestText = "",
									this.autoSuggestPrependedText = "",
									this.autoSuggestAppendedText = "",
									this.serp.mode === Qc.Conversation && (this.inputText = "");
									const submitQuery = ()=>{
											this.previousQuery = n.toLowerCase(),
											this.serp.submitQuery(n),
											this.anyMessageSent = !0,
											this.serp.mode === Qc.Conversation ? this.isPendingSubmit = !1 : setTimeout((()=>{
													this.isPendingSubmit = !1
											}
											), 1e3)
									}
									;
									let i = 0;
									t && (i = 666),
									setTimeout(submitQuery, i)
							}
					}
					cancelPendingRequest() {
							var e;
							null === (e = this.log) || void 0 === e || e.trace(this, this.cancelPendingRequest, "Cancelling requests from both text and speech.").write(),
							this.chat.cancelPendingRequest(),
							this.speech.cancelPendingRequest()
					}
					resetConversation() {
							var e;
							null === (e = this.log) || void 0 === e || e.trace(this, this.resetConversation, null).write(),
							this.manager.resetConversation(),
							this.hoverCard.clear()
					}
					closeRAISuggestions() {
							this.conversation.closeRAISuggestions()
					}
					acceptAutoSuggestText() {
							this.inputText = this.autoSuggestText + " "
					}
					handleChange(e, t) {
							if (e === this.serp)
									"mode" === t && this.handleSerpModeChanged(),
									"isMobile" === t && this.handleSerpIsMobileChanged()
					}
					cancelSpeechInteraction() {
							var e, t, n, i;
							null === (e = this.log) || void 0 === e || e.trace(this, this.cancelSpeechInteraction, `icon state before cancelling: '${this.speechIconState}'`).write(),
							this.chat.isRequestPending ? (null === (t = this.log) || void 0 === t || t.debug(this, this.cancelSpeechInteraction, "Cancelling only TTS readout as the request is pending").write(),
							this.speech.stopReadout()) : (null === (n = this.log) || void 0 === n || n.debug(this, this.cancelSpeechInteraction, "Resetting Speech service as there is no pending request.").write(),
							this.speech.cancelPendingRequest()),
							null === (i = this.log) || void 0 === i || i.trace(this, this.cancelSpeechInteraction, `icon state after cancelling: '${this.speechIconState}'`).write()
					}
					refreshAutoSuggestText() {
							this.config.suggestions.isEnabled && (this.inputText.length > 0 && this.autoSuggestText !== this.inputText ? this.updateAutoSuggestTextAsync(this.inputText) : this.resetAutoSuggestText())
					}
					resetAutoSuggestText() {
							this.config.suggestions.isEnabled && (this.autoSuggestText = "",
							this.autoSuggestPrependedText = "",
							this.autoSuggestAppendedText = "")
					}
					async updateAutoSuggestTextAsync(e) {
							var t;
							const n = e.toLowerCase();
							let i = "";
							try {
									const e = this.config.buildUrl(this.config.suggestions);
									if (e.searchParams.set("q", n),
									this.previousQuery && e.searchParams.set("bq", this.previousQuery),
									this.config.features.enableTuringAutoSuggest) {
											const e = await this.turingAutoSuggest.getTextSuggestion(n, this.conversation.lastBotTextMessage);
											if (e.ok) {
													i = (await e.json()).nextText
											}
									} else {
											const t = await fetch(e, {
													mode: "cors"
											});
											if (t.ok) {
													const e = await t.json()
														, {suggestionGroups: n} = e;
													if (n.length) {
															const {searchSuggestions: e} = n[0];
															if (e.length) {
																	const {ghostText: t} = e[0];
																	i = null != t ? t : ""
															}
													}
											}
									}
							} catch (e) {
									const n = e instanceof Error ? e : "Search failed.";
									throw null === (t = this.log) || void 0 === t || t.error(this, "updateAutoSuggestTextAsync", n).write(),
									e
							}
							0 !== e.length && i ? e === this.inputText && (i !== e && i.toLowerCase().startsWith(n) ? (this.autoSuggestText = `${e}${i.slice(e.length)}`,
							this.autoSuggestPrependedText = e,
							this.autoSuggestAppendedText = i.slice(e.length),
							this.telemetry.trackEvent("SystemEvent", "TextGhostingSuggest", {
									Namespace: Xc.toTelemetryNamespace(),
									CustomData: JSON.stringify({
											enteredTextLength: this.inputText.length,
											suggestedTextLength: this.autoSuggestText.length
									})
							})) : this.config.features.enableTuringAutoSuggest && i && i !== this.inputText ? (this.autoSuggestText = `${e}${i}`,
							this.autoSuggestPrependedText = e,
							this.autoSuggestAppendedText = i) : this.resetAutoSuggestText()) : this.resetAutoSuggestText()
					}
					handleSerpModeChanged() {
							var e;
							switch (null === (e = this.log) || void 0 === e || e.trace(this, this.handleSerpModeChanged, "serp.mode:", this.serp.mode).write(),
							this.cancelSpeechInteraction(),
							this.serp.mode) {
							case Qc.Home:
							case Qc.Conversation:
									this.inputText = ""
							}
					}
					handleSerpIsMobileChanged() {
							var e;
							null === (e = this.log) || void 0 === e || e.trace(this, this.handleSerpIsMobileChanged, "serp.isMobile:", this.serp.isMobile).write(),
							this.inputMethod = this.config.features.enableSpeechInput && this.serp.isMobile ? Ce.Speech : Ce.Keyboard
					}
					initializeSerpContextObserver() {
							const e = _.getNotifier(this.serp);
							e.subscribe(this, "mode"),
							this._register(lifecycle_toDisposable((()=>e.unsubscribe(this, "mode")))),
							e.subscribe(this, "isMobile"),
							this._register(lifecycle_toDisposable((()=>e.unsubscribe(this, "isMobile"))))
					}
					configureSpeechEventListeners() {
							this._register(this.speech.onRecognizedTextUpdated(this.handleRecognizedTextUpdated)),
							this._register(this.speech.onSpeechStatusUpdated(this.handleSpeechStatusChanged))
					}
			}
			;
			nd = new WeakMap,
			__decorate([observable, __metadata("design:type", Boolean)], id.prototype, "isPendingSubmit", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], id.prototype, "isEditModeEnabled", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], id.prototype, "enableSpeechInput", void 0),
			__decorate([observable, __metadata("design:type", String)], id.prototype, "speechIconState", void 0),
			__decorate([observable, __metadata("design:type", String)], id.prototype, "speechOutputText", void 0),
			__decorate([observable, __metadata("design:type", String)], id.prototype, "autoSuggestText", void 0),
			__decorate([observable, __metadata("design:type", String)], id.prototype, "autoSuggestPrependedText", void 0),
			__decorate([observable, __metadata("design:type", String)], id.prototype, "autoSuggestAppendedText", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], id.prototype, "isFirstTime", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], id.prototype, "forceOngoingConversationPlaceholderText", void 0),
			__decorate([observable, __metadata("design:type", Object)], id.prototype, "strings", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], id.prototype, "enableTTSOnVoiceInput", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], id.prototype, "anyMessageSent", void 0),
			__decorate([function(e, t, n) {
					return createDecorator(((i,r)=>{
							const o = `$debounce$${r}`
								, s = `$debounce$result$${r}`;
							return function(...r) {
									this[s] || (this[s] = n ? n() : void 0),
									clearTimeout(this[o]),
									t && (this[s] = t(this[s], ...r),
									r = [this[s]]),
									this[o] = setTimeout((()=>{
											i.apply(this, r),
											this[s] = n ? n() : void 0
									}
									), e)
							}
					}
					))
			}(10), __metadata("design:type", Function), __metadata("design:paramtypes", [String]), __metadata("design:returntype", Promise)], id.prototype, "updateAutoSuggestTextAsync", null),
			id = __decorate([__param(0, Zc), __param(1, qa), __param(2, js), __param(3, Yo), __param(4, Hs), __param(5, Us), __param(6, nl), __param(7, Oa), __param(8, yl), __param(9, Za), __param(10, Jc), __param(11, td), __param(12, ed), __param(13, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object])], id);
			const rd = P.createInterface("IBackgroundViewModel");
			let od = class extends ViewModelBase {
					constructor(e, t, n) {
							super(e, t, n)
					}
			}
			;
			od = __decorate([__param(0, Zc), __param(1, qa), __param(2, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object])], od);
			const sd = P.createInterface("ITurnViewModel")
				, ad = P.createInterface("IWelcomeContainerViewModel")
				, ld = P.createInterface("INotificationContainerViewModel");
			let cd = class extends ViewModelBase {
					constructor(e, t, n, i) {
							super(e, t, i),
							this.notification = n
					}
					get floatingNotification() {
							return this.notification.floatingBarNotification
					}
					get bottomBarNotification() {
							return this.notification.bottomBarNotification
					}
			}
			;
			var dd, pd;
			cd = __decorate([__param(0, Zc), __param(1, qa), __param(2, Ya), __param(3, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object])], cd);
			let ud = class extends ViewModelBase {
					constructor(e, t, n, i, r, o, s, a, l, c, d, p) {
							super(e, t, p),
							this.telemetry = n,
							this.factory = i,
							this.config = r,
							this.firstRunExperienceService = o,
							this.model = s,
							this.hoverCard = a,
							this.suggestionService = l,
							this.manager = c,
							this.chat = d,
							this.strings = {
									letsChatButton: this.config.strings.letsChat,
									raiSuggestionsButtonAriaLabel: this.config.strings.raiSuggestions
							},
							dd.set(this, null),
							pd.set(this, null),
							this._turnCount = 0,
							this._turns = [],
							this._isTyping = !1,
							this._isScrollTop = !1,
							this._isScrollBottom = !1,
							this._raiSuggestions = [],
							this._freSuggestions = [],
							this._shouldShowRAISuggestions = !1,
							this.handleModelReset = ()=>{
									this.reset()
							}
							,
							this.handleMessageAdded = e=>{
									var t;
									null === (t = this.log) || void 0 === t || t.trace(this, this.handleMessageAdded, "conVM handle model message added").write(),
									this.checkNewTurn(e.author),
									this.current.addTurnMessage(e)
							}
							,
							this.model.onReset(this.handleModelReset),
							this.model.onMessageAdded(this.handleMessageAdded),
							this.fillFRESuggestions()
					}
					get welcomeContainer() {
							var e;
							return __classPrivateFieldSet(this, dd, null !== (e = __classPrivateFieldGet(this, dd, "f")) && void 0 !== e ? e : this.factory.create(ad), "f"),
							__classPrivateFieldGet(this, dd, "f")
					}
					get notificationContainer() {
							var e;
							return __classPrivateFieldSet(this, pd, null !== (e = __classPrivateFieldGet(this, pd, "f")) && void 0 !== e ? e : this.factory.create(ld), "f"),
							__classPrivateFieldGet(this, pd, "f")
					}
					get lastBotTextMessage() {
							let e = "";
							for (let t = this.model.messages.length - 1; t >= 0; t--)
									if (this.model.messages[t].author === ve.Bot && isTextMessageModel(this.model.messages[t])) {
											e = this.model.messages[t].text;
											break
									}
							return e
					}
					get turnCount() {
							return this._turnCount
					}
					get convId() {
							return this.model.id
					}
					get turns() {
							return this._turns
					}
					get current() {
							const e = this._turns;
							return 0 === this.turnCount ? this.addTurn() : e[this.turnCount - 1]
					}
					get isTyping() {
							return this._isTyping
					}
					get isScrollTop() {
							return this._isScrollTop
					}
					set isScrollTop(e) {
							this._isScrollTop = e
					}
					get isScrollBottom() {
							return this._isScrollBottom
					}
					set isScrollBottom(e) {
							this._isScrollTop = e
					}
					get suggestions() {
							return this.model.suggestions
					}
					get raiSuggestions() {
							return this._raiSuggestions
					}
					get shouldShowRAISuggestions() {
							return this._shouldShowRAISuggestions
					}
					async openRAISuggestions() {
							await this.fillRAISuggestions(),
							0 !== this.raiSuggestions.length && (this._shouldShowRAISuggestions = !0)
					}
					closeRAISuggestions() {
							this._shouldShowRAISuggestions = !1
					}
					get freSuggestions() {
							return this.isFirstTime ? this._freSuggestions : []
					}
					clearFreSuggesitons() {
							this._freSuggestions.splice(0, this._freSuggestions.length)
					}
					get slottedModeTurnIndex() {
							return this.config.sydney.slottedModeTurnIndex
					}
					get isRequestPending() {
							return this.chat.isRequestPending
					}
					get isFirstTime() {
							return this.firstRunExperienceService.isFirstTime
					}
					async fillFRESuggestions() {
							if (this.isFirstTime)
									try {
											const e = await this.suggestionService.getFRESuggestions();
											this.setFreSuggestions(this.createSuggestions(e))
									} catch (e) {
											this.clearFreSuggesitons()
									}
					}
					async fillRAISuggestions() {
							try {
									const e = await this.suggestionService.getRAISuggestions();
									this.setRaiSuggestions(this.createSuggestions(e))
							} catch (e) {
									this.setRaiSuggestions([])
							}
					}
					ensureInitialized() {
							0 === this.turnCount && this.model.state === $s.Inactive && queueMicrotask((async()=>{
									await this.manager.beginConversationAsync()
							}
							))
					}
					addConversationMessage(e) {
							var t;
							null === (t = this.log) || void 0 === t || t.trace(this, this.addConversationMessage, "conVM add message:", e).write(),
							this.telemetry.trackEvent("InteractionEvent", "TextMessageSend", {
									Namespace: "Conversation",
									CustomData: JSON.stringify({
											numCharacters: e.length,
											numWords: e.split(/\s+/).length,
											turnId: this.turnCount,
											convId: this.model.id
									}),
									EncryptedData: JSON.stringify({
											text: e
									})
							}),
							this.clearFreSuggesitons(),
							this.closeRAISuggestions(),
							this.manager.sendMessage(e)
					}
					reset() {
							this._turnCount = 0,
							this._turns.splice(0, this.turns.length),
							this.addTurn()
					}
					checkNewTurn(e) {
							(0 === this.turnCount || e === ve.User && this.current.bot.messages.length) && this.addTurn()
					}
					addTurn() {
							var e;
							const t = this.factory.create(sd);
							return this._turns.push(t),
							t.initialize(this),
							this._turnCount = this.turns.length,
							null === (e = this.log) || void 0 === e || e.trace(this, this.addTurn, "conVM turn added").write(),
							t
					}
					createSuggestions(e) {
							const t = [];
							for (let n = 0; n < e.length; n++) {
									const i = {
											contentOrigin: be.DeepLeo,
											messageType: Ee.Suggestion,
											offense: we.Unknown,
											text: e[n],
											messageId: "",
											hiddenText: void 0
									};
									t.push(i)
							}
							return t
					}
					setRaiSuggestions(e) {
							this._raiSuggestions.splice(0, this._raiSuggestions.length, ...e)
					}
					setFreSuggestions(e) {
							this._freSuggestions.splice(0, this._freSuggestions.length, ...e)
					}
			}
			;
			dd = new WeakMap,
			pd = new WeakMap,
			__decorate([observable, __metadata("design:type", Object)], ud.prototype, "strings", void 0),
			__decorate([observable, __metadata("design:type", Number)], ud.prototype, "_turnCount", void 0),
			__decorate([observable, __metadata("design:type", Array)], ud.prototype, "_turns", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], ud.prototype, "_isTyping", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], ud.prototype, "_isScrollTop", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], ud.prototype, "_isScrollBottom", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], ud.prototype, "_shouldShowRAISuggestions", void 0),
			ud = __decorate([__param(0, Zc), __param(1, qa), __param(2, js), __param(3, Fc), __param(4, Yo), __param(5, nl), __param(6, zs), __param(7, Jc), __param(8, Ja), __param(9, Za), __param(10, Us), __param(11, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object])], ud);
			const hd = P.createInterface("IDrawerViewModel");
			let md = class extends ViewModelBase {
					constructor(e, t, n, i, r) {
							super(e, t, r),
							this.config = n,
							this.conversation = i,
							this.strings = {
									shareConversation: this.config.strings.shareConversation
							},
							this.enableShareConversation = !!this.config.features.enableShareConversation,
							this._isFullGestureEnabled = !1
					}
					get isFullGestureEnabled() {
							return this._isFullGestureEnabled
					}
					toggleIsFullGesture(e) {
							this._isFullGestureEnabled = e
					}
					shareConversation() {
							var e;
							try {
									return void (this.config.sydney.shareConversationProvider && this.config.sydney.shareConversationProvider())
							} catch (t) {
									TypeUtils_isError(t) && (null === (e = this.log) || void 0 === e || e.error(this, this.shareConversation, `Failed to share ${t.message}`).write())
							}
					}
			}
			;
			var gd, _d, fd, yd, vd, bd, Sd;
			__decorate([observable, __metadata("design:type", Object)], md.prototype, "strings", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], md.prototype, "enableShareConversation", void 0),
			md = __decorate([__param(0, Zc), __param(1, qa), __param(2, Yo), __param(3, ed), __param(4, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object, Object])], md);
			class MessageViewModelBase extends ViewModelBase {
					constructor(e, t, n, i, r) {
							super(n, i, r),
							this.telemetry = e,
							this.config = t,
							this.isModelFinalized = !1,
							gd.set(this, null)
					}
					get classNames() {
							return MessageViewModelBase.classNames
					}
					get model() {
							if (null === __classPrivateFieldGet(this, gd, "f"))
									throw new Error("MessageViewModel has not been initialized.");
							return __classPrivateFieldGet(this, gd, "f")
					}
					get type() {
							return this.model.type
					}
					get author() {
							return this.model.author
					}
					initialize(e) {
							__classPrivateFieldSet(this, gd, e, "f"),
							this.subscribeToModelChanges(),
							this.onModelPropertyChanged(null)
					}
					onModelPropertyChanged(e) {}
					subscribeToModelChanges() {
							const e = {
									handleChange: (e,t)=>{
											e === this.model && this.onModelPropertyChanged(t)
									}
							};
							this.model.onPropertyChanged.subscribe(e),
							this._register(lifecycle_toDisposable((()=>this.model.onPropertyChanged.unsubscribe(e))))
					}
			}
			gd = new WeakMap,
			MessageViewModelBase.classNames = {
					tooltip: "tooltip-target",
					citation: "sup-target"
			},
			__decorate([observable, __metadata("design:type", Boolean)], MessageViewModelBase.prototype, "isModelFinalized", void 0),
			function(e) {
					e.ContentLoaded = "AnswerCardDimensionUpdate",
					e.ContentResized = "AnswerCardResize",
					e.ShoppingClick = "ShoppingAnsClickUpdate"
			}(_d || (_d = {})),
			function(e) {
					e.Pole = "POLE",
					e.Top = "TOP",
					e.Ads = "ADS",
					e.Shopping = "SHOPPING",
					e.Mobile = "MOBILE",
					e.Unknown = "UNKNOWN",
					e.NoAnswer = "NOANS"
			}(fd || (fd = {})),
			function(e) {
					const t = {
							type: fd.Top,
							hasCarousel: !1,
							height: 620,
							width: 648,
							query: "weather",
							iframeid: "weather"
					}
						, n = {
							type: fd.Pole,
							hasCarousel: !0,
							height: 240,
							width: 1204,
							query: "movies",
							iframeid: "movies"
					}
						, i = {
							type: fd.Ads,
							hasCarousel: !1,
							height: 440,
							width: 820,
							query: "buy iphone",
							iframeid: "iphone",
							context: [{
									title: "A title",
									price: 19.99
							}, {
									title: "A title",
									price: 19.99
							}, {
									title: "A title",
									price: 19.99
							}]
					};
					e.queueDimensionUpdateMessage = function(e) {
							let r;
							if (e.includes("weather"))
									r = t;
							else if (e.includes("movies"))
									r = n;
							else {
									if (!e.includes("iphone"))
											return;
									r = i
							}
							const o = {
									type: _d.ContentLoaded,
									data: r
							};
							setTimeout((()=>window.postMessage(o, "*")), 4e3)
					}
					,
					e.getShoppingClickEventTestData = function() {
							return {
									type: _d.ShoppingClick,
									data: {
											type: fd.Shopping,
											height: 1005,
											width: 500,
											iframeid: "string",
											payload: {
													pdpAjaxUrl: "http://sacheru-pc/shop/productpage?q=mobiles&filters=scenario%3a%2217%22+gType%3a%2212%22+gId%3a%2299388976423%22+gIdHash%3a%220%22+gGlobalOfferIds%3a%2299388976423%22+AucContextGuid%3a%220%22+GroupEntityId%3a%2299388976423%22+NonSponsoredOffer%3a%22True%22&productpage=true&FORM=SHPPDP&browse=true&features=null&showselans=1",
													groundingData: "This item is REFURBISHEDMotorola One 5G Ace is here which could only mean one thing. Superfast 5G speed for all. Now you dont have to spend a fortune for movies ultra-clear video chats and games without the wait. 5G speed is just the start. Enjoy a long lasting 5000 mAh battery. View everything in vivid true-to-life color on the 6.7 Full HD+ Max Vision"
											}
									}
							}
					}
			}(yd || (yd = {})),
			function(e) {
					function isPostMessageEventData(e) {
							const t = e;
							return "object" == typeof e && null !== e && "string" == typeof t.type && isPostMessageEventDataType(t.type) && "string" == typeof t.iframeid && "number" == typeof t.height && "number" == typeof t.width
					}
					function isShoppingClickEventData(e) {
							const t = e;
							return isPostMessageEventData(e) && t.type === fd.Shopping && isShoppingClickEventDataPayload(t.payload)
					}
					function isShoppingClickEventDataPayload(e) {
							const t = e;
							return "object" == typeof e && null !== e && "string" == typeof t.pdpAjaxUrl && "string" == typeof t.groundingData
					}
					function isContentLoadedEventData(e) {
							const t = e;
							return isPostMessageEventData(e) && "boolean" == typeof t.hasCarousel && "string" == typeof t.query
					}
					function isPostMessageEventType(e) {
							return isEnum(_d, e)
					}
					function isPostMessageEventDataType(e) {
							return isEnum(fd, e)
					}
					function isEnum(e, t) {
							return function(e) {
									return null != e
							}(t) && function(e) {
									return Object.values(e).filter((e=>"function" != typeof e))
							}(e).includes(t)
					}
					e.isPostMessageEventData = isPostMessageEventData,
					e.isPostMessageEvent = function(e) {
							const t = e;
							return "object" == typeof e && null !== e && "string" == typeof t.type && isPostMessageEventType(t.type) && (isContentLoadedEventData(t.data) || isShoppingClickEventData(t.data))
					}
					,
					e.isShoppingClickEventData = isShoppingClickEventData,
					e.isShoppingClickEventDataPayload = isShoppingClickEventDataPayload,
					e.isContentLoadedEventData = isContentLoadedEventData,
					e.isPostMessageEventType = isPostMessageEventType,
					e.isPostMessageEventDataType = isPostMessageEventDataType
			}(vd || (vd = {})),
			function(e) {
					function isPostMessageEventData(e) {
							const t = e;
							return "object" == typeof e && null !== e && "string" == typeof t.type && vd.isPostMessageEventDataType(t.type)
					}
					e.isPostMessageEvent = function(e) {
							const t = e;
							return "object" == typeof e && null !== e && "string" == typeof t.type && vd.isPostMessageEventType(t.type) && isPostMessageEventData(t.data)
					}
					,
					e.isPostMessageEventData = isPostMessageEventData,
					e.isUnusableEventDataType = function(e) {
							return [fd.NoAnswer, fd.Unknown].includes(e)
					}
			}(bd || (bd = {}));
			let Cd = class extends MessageViewModelBase {
					constructor(e, t, n, i, r, o, s, a) {
							super(o, n, i, r, a),
							this.chat = e,
							this.vmFactory = t,
							this.conversation = s,
							this.cancelRender = !1,
							this.isContentLoaded = !1,
							Sd.set(this, null),
							this.frameConfig = null,
							this._frameHeight = "0px",
							this._frameWidth = "0px",
							this.messagingDisposer = this._register(new Disposer),
							this.handleWindowMessage = e=>{
									var t;
									const n = e.data;
									if (!bd.isPostMessageEvent(n))
											return;
									if (vd.isContentLoadedEventData(n.data) && this.model.text.toLowerCase() !== n.data.query.toLowerCase())
											return;
									if (n.data.iframeid !== this.model.iframeid)
											return;
									if (bd.isUnusableEventDataType(n.data.type))
											return this.disposeMessageHandler(),
											this.cancelRender = !0,
											void (null === (t = this.log) || void 0 === t || t.warn(this, this.handleWindowMessage, "The content loaded by the host frame could not be used.", "type:", n.data.type).write());
									const {type: i, data: r} = n;
									i === _d.ContentLoaded ? this.handleContentLoadedEvent(r) : i === _d.ContentResized ? this.handleContentResizedEvent(r) : i === _d.ShoppingClick && this.handleShoppingClickEvent(r)
							}
							,
							this._register(lifecycle_toDisposable((()=>this.disposeMessageHandler())))
					}
					get feedback() {
							var e;
							return __classPrivateFieldSet(this, Sd, null !== (e = __classPrivateFieldGet(this, Sd, "f")) && void 0 !== e ? e : this.vmFactory.createFeedback(this.model), "f"),
							__classPrivateFieldGet(this, Sd, "f")
					}
					get frameHeight() {
							return this._frameHeight
					}
					get frameWidth() {
							return this._frameWidth
					}
					get contentUrl() {
							return this.model.contentUrl
					}
					get contentType() {
							return this.model.contentType
					}
					onModelPropertyChanged(e) {
							super.onModelPropertyChanged(e),
							null === e && (this.configureHostedContentMessaging(),
							this.enableConfigDrivenFeatures())
					}
					configureHostedContentMessaging() {
							var e;
							null === (e = this.log) || void 0 === e || e.trace(this, this.configureHostedContentMessaging, null).write(),
							this.messagingDisposer.register(addDisposableListener(window, "message", this.handleWindowMessage))
					}
					enableConfigDrivenFeatures() {
							const e = this.config.answers.answerCardDimensionUpdateTimeout;
							e > 0 && setTimeout((()=>{
									this.isContentLoaded ? this.telemetry.trackEvent("SystemEvent", "ComponentRender", {
											Namespace: "Conversation",
											CustomData: JSON.stringify({
													scenarioName: "TODO",
													serviceName: "TODO",
													turnId: this.conversation.messages.length - 1,
													convId: this.conversation.id
											})
									}) : this.disposeMessageHandler(!0)
							}
							), e),
							this.config.answers.debugAutoSizeAnswerCard && yd.queueDimensionUpdateMessage(this.contentUrl)
					}
					disposeMessageHandler(e=!1) {
							var t;
							this.messagingDisposer.isDisposed || (this.messagingDisposer.dispose(),
							e && (this.cancelRender = !0,
							null === (t = this.log) || void 0 === t || t.warn(this, this.disposeMessageHandler, `The '${this.contentType}' host message rendered a frame with the following 'contentUrl' but has timed out waiting for the init message from the frame. The frame will now be destroyed.`, this.contentUrl).write()))
					}
					handleContentLoadedEvent(e) {
							var t;
							if (null === (t = this.log) || void 0 === t || t.trace(this, this.handleContentLoadedEvent, "ANSWER/ADS data:", e).write(),
							this.isContentLoaded = !0,
							this.frameConfig = e,
							e.type === fd.Ads)
									queueMicrotask((()=>this.processAdsQueryMessage(e)));
							else if (e.type === fd.Shopping && this.doesLatestTextMessageHaveInlineAds())
									return this.disposeMessageHandler(),
									void (this.cancelRender = !0);
							this.updateFrameDimensions(e)
					}
					doesLatestTextMessageHaveInlineAds() {
							const e = this.conversation.messages;
							let t = null;
							for (let n = e.length - 1; n >= 0; n--)
									if (e[n].type === sl.Text && e[n].author === ve.Bot) {
											t = e[n];
											break
									}
							return !(!t || !t.inlineAdsModel)
					}
					handleContentResizedEvent(e) {
							var t;
							null === (t = this.log) || void 0 === t || t.trace(this, this.handleContentResizedEvent, "ANSWER/ADS data:", e).write(),
							this.frameConfig = e,
							this.updateFrameDimensions(e)
					}
					handleShoppingClickEvent(e) {
							var t;
							null === (t = this.log) || void 0 === t || t.trace(this, this.handleShoppingClickEvent, "SHOPPING data:", e).write();
							const n = this.vmFactory.createTextMessage("$$$>SLOTTED<$$$", ve.Bot);
							let i;
							e.payload.groundingData && (i = this.vmFactory.createTextMessage(e.payload.groundingData, ve.Bot));
							const r = new URL(e.payload.pdpAjaxUrl);
							r.searchParams.delete("iframeid");
							const o = {
									groundingTextVm: i,
									emptyVm: n,
									contentHostData: {
											isContentLoaded: !0,
											contentUrl: r.href,
											frameWidth: `${e.width}px`,
											frameHeight: `${e.height}px`,
											cancelRender: !1
									}
							};
							this.shoppingPdpRenderData = o
					}
					updateFrameDimensions(e) {
							const {hasCarousel: t, height: n, width: i} = e;
							this._frameHeight = `${n}px`,
							this._frameWidth = t ? "100%" : `${i}px`
					}
					processAdsQueryMessage(e) {
							var t, n, i;
							if (this.model.contentType === al.Ads) {
									const r = this.model.messageData.messageId
										, o = "string" == typeof e.context ? JSON.parse(e.context) : e.context
										, s = new AdsMessage(r,o);
									null === (t = this.log) || void 0 === t || t.trace(this, this.processAdsQueryMessage, "Received AdsQuery:", this.model.messageData).write(),
									null === (n = this.log) || void 0 === n || n.trace(this, this.processAdsQueryMessage, "Rendered, received context:", e.context).write(),
									null === (i = this.log) || void 0 === i || i.trace(this, this.processAdsQueryMessage, "Created AdsMessage:", s).write(),
									this.chat.registerContext([s])
							}
					}
			}
			;
			Sd = new WeakMap,
			__decorate([observable, __metadata("design:type", Boolean)], Cd.prototype, "cancelRender", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Cd.prototype, "isContentLoaded", void 0),
			__decorate([observable, __metadata("design:type", Object)], Cd.prototype, "shoppingPdpRenderData", void 0),
			__decorate([observable, __metadata("design:type", String)], Cd.prototype, "_frameHeight", void 0),
			__decorate([observable, __metadata("design:type", String)], Cd.prototype, "_frameWidth", void 0),
			Cd = __decorate([__param(0, Us), __param(1, Fc), __param(2, Yo), __param(3, Zc), __param(4, qa), __param(5, js), __param(6, zs), __param(7, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object, Object, Object, Object, Object])], Cd);
			let Ed = class extends lifecycle_Disposable {
					constructor(e, t, n, i, r, o, s, a, l, c, d) {
							super(),
							this.serp = e,
							this.telemetry = t,
							this.config = n,
							this.chat = i,
							this.feedbackService = r,
							this.feedbackFormService = o,
							this.conversation = s,
							this.modelFactory = a,
							this.conversationModel = l,
							this.shareService = c,
							this.log = d,
							this.hasSubmittedPositiveFeedback = !1,
							this.hasSubmittedNegativeFeedback = !1,
							this.hasSubmittedOffensiveFeedback = !1,
							this.enableShare = !!this.config.features.enableShare,
							this.enableOffensiveFeedback = !!this.config.features.enableOffensiveFeedback,
							this.copyState = Vc.Idle,
							this.strings = {
									accessed: this.config.strings.feedbackAccessed,
									source: this.config.strings.feedbackSource,
									likeButtonAriaLabel: this.config.strings.feedbackLikeButtonAriaLabel,
									dislikeButtonAriaLabel: this.config.strings.feedbackDislikeButtonAriaLabel,
									offensiveButtonAriaLabel: this.config.strings.feedbackOffensiveButtonAriaLabel,
									copyButtonAriaLabel: this.config.strings.feedbackCopyButtonAriaLabel,
									shareButtonAriaLabel: this.config.strings.feedbackShareButtonAriaLabel,
									messageActionsCopy: this.config.strings.messageActionsCopy,
									messageActionsCopying: this.config.strings.messageActionsCopying,
									messageActionsCopyError: this.config.strings.messageActionsCopyError,
									messageActionsCopied: this.config.strings.messageActionsCopied,
									messageActionsReport: this.config.strings.messageActionsReport,
									shareAnswer: this.config.strings.feedbackShareAnswer,
									shareGenerated: this.config.strings.feedbackShareGenerated,
									tooltipPositive: this.config.strings.tooltipPositive,
									tooltipNegative: this.config.strings.tooltipNegative,
									tooltipShare: this.config.strings.tooltipShare,
									tooltipMore: this.config.strings.tooltipMore
							},
							this.message = null,
							this.shareUrlCache = {
									[Xc.RightRail]: void 0,
									[Xc.None]: void 0,
									[Xc.Pole]: void 0,
									[Xc.Creator]: void 0
							},
							this.citationRegex = /\[\^([1-9]+)\^\]/g,
							this.numberToSuperscript = {
									0: "⁰",
									1: "¹",
									2: "²",
									3: "³",
									4: "⁴",
									5: "⁵",
									6: "⁶",
									7: "⁷",
									8: "⁸",
									9: "⁹"
							}
					}
					get hasClickedShare() {
							return void 0 !== this.shareUrlCache[this.serp.serpSlot]
					}
					initialize(e) {
							this.message = e
					}
					async sendFeedbackAsync(e, t) {
							var n, i, r;
							if (this.message)
									try {
											switch (this.conversationModel.id ? await this.feedbackService.sendFeedbackAsync(e, this.message.messageId, t) : null === (i = this.log) || void 0 === i || i.info(this, this.sendFeedbackAsync, "ConversationId is null, skipping sydney feedback").write(),
											this.logFeedback(e, t),
											e) {
											case "Positive":
													this.hasSubmittedPositiveFeedback = t,
													this.hasSubmittedNegativeFeedback = !1;
													break;
											case "Negative":
													this.hasSubmittedNegativeFeedback = t,
													this.hasSubmittedPositiveFeedback = !1;
													break;
											case "Offensive":
													this.hasSubmittedOffensiveFeedback = t,
													t && this.promptUserForFeedback()
											}
									} catch (t) {
											const n = TypeUtils_isError(t) ? t.message : "unknown error";
											null === (r = this.log) || void 0 === r || r.error(this, this.sendFeedbackAsync, `Error sending feedback: kind: ${e} ${n}`).write()
									}
							else
									null === (n = this.log) || void 0 === n || n.error(this, this.sendFeedbackAsync, "Message is null").write()
					}
					async copyToClipboard(e) {
							var t, n, i;
							try {
									if (this.changeCopyState(Vc.Copying),
									!this.message)
											return void (null === (t = this.log) || void 0 === t || t.error(this, this.copyToClipboard, "Message is null").write());
									const i = this.getCopyTextWithCitations();
									if (i)
											return void this.copyText(i);
									if (!e)
											return void (null === (n = this.log) || void 0 === n || n.error(this, this.copyToClipboard, "Message container is null").write());
									const r = document.createRange()
										, o = window.getSelection();
									if (o)
											return o.removeAllRanges(),
											r.selectNodeContents(e),
											o.addRange(r),
											document.execCommand("Copy"),
											o.removeAllRanges(),
											void this.changeCopyState(Vc.Copied)
							} catch (e) {
									this.changeCopyState(Vc.Error),
									TypeUtils_isError(e) && (null === (i = this.log) || void 0 === i || i.error(this, this.copyToClipboard, `Failed to copy. Reason: ${e.message}`).write())
							}
					}
					async share(e, t, n, i) {
							var r, o, s, a, l, c, d;
							if (this.config.features.enableTextShare)
									return void await this.shareText();
							i.setTarget(n);
							const p = i.container;
							if (this.hasClickedShare)
									return void (null === (r = this.log) || void 0 === r || r.trace(this, this.share, "share has previously been invoked, returning early"));
							let u = "Conversation"
								, h = !1;
							e === Xc.Creator && (h = !0,
							u = "Creator");
							let m = !1;
							e === Xc.RightRail && (m = !0,
							u = "RightRail"),
							e === Xc.Pole && (m = !0,
							u = "Pole");
							const g = m ? this.strings.shareAnswer : this.strings.shareGenerated
								, _ = new URL(window.location.href);
							e === Xc.None && (_.searchParams.set("q", this.config.strings.feedbackShareConversationQuery),
							_.searchParams.set("showconv", "1"));
							const f = function(e, t) {
									const n = t === Xc.Pole || t === Xc.RightRail ? "WholePageTemplate_SemanticSerp" : t === Xc.Creator ? "WholePageTemplate_Creator" : t === Xc.None ? "Conversation" : ""
										, i = `wholepagesharingscenario:"${n}"`;
									if (!n)
											return e;
									if (e)
											return `${e.split(" ").filter((e=>!e.includes("wholepagesharingscenario"))).join(" ")} ${i}`;
									return n ? i : null
							}(_.searchParams.get("filters"), e);
							if (f && _.searchParams.set("filters", f),
							this.config.sydney.shareId && (null === (o = this.conversationModel.messages[0]) || void 0 === o ? void 0 : o.messageId) === (null === (s = this.message) || void 0 === s ? void 0 : s.messageId))
									return null === (a = this.log) || void 0 === a || a.info(this, this.share, "Reusing current link because we're resharing the initial shared message", {
											isCreatorMode: h,
											isSemanticSerp: m,
											shareId: this.config.sydney.shareId
									}).write(),
									void this.embedShareControl(_.href, g, p, t, n, e);
							try {
									null === (l = this.log) || void 0 === l || l.info(this, this.share, "Sharing message messageId:", null === (c = this.message) || void 0 === c ? void 0 : c.messageId).write();
									const i = await this.shareService.shareMessagesAsync(this.conversationModel.messages.filter((e=>{
											var t;
											return e.messageId === (null === (t = this.message) || void 0 === t ? void 0 : t.messageId)
									}
									)));
									_.searchParams.set("shareId", i.shareId),
									this.embedShareControl(_.href, g, p, t, n, e),
									this.telemetry.trackEvent("MessageEvent", "ActionBarShare", {
											Namespace: u,
											CustomData: JSON.stringify({
													shareId: i.shareId,
													shareUrl: _.href
											})
									})
							} catch (e) {
									null === (d = this.log) || void 0 === d || d.error(this, this.share, `Failed to hit share: ${e}`).write()
							}
					}
					async shareText() {
							var e, t, n, i;
							if (!this.config.sydney.shareTextProvider)
									return void (null === (e = this.log) || void 0 === e || e.error(this, this.shareText, "No share provider available").write());
							if (!this.message)
									return void (null === (t = this.log) || void 0 === t || t.error(this, this.shareText, "Message is null").write());
							let r = this.getCopyTextWithCitations();
							if (!r && isTextMessageModel(this.message) && (r = `${this.message.text}`),
							r)
									try {
											return null === (n = this.log) || void 0 === n || n.trace(this, this.shareText, `Sharing text: ${r}`),
											this.config.sydney.shareTextProvider(r)
									} catch (e) {
											null === (i = this.log) || void 0 === i || i.error(this, this.shareText, "Failed to share text cause:" + (e instanceof Error ? e.toString() : "undefined"))
									}
					}
					getCopyTextWithCitations() {
							var e, t;
							if (!this.message)
									throw null === (e = this.log) || void 0 === e || e.error(this, this.getCopyTextWithCitations, "Message is null").write(),
									new Error("Message is null");
							if (isTextMessageModel(this.message) && (null === (t = this.message.sourceAttributions) || void 0 === t ? void 0 : t.length) > 0) {
									const e = (new Date).toLocaleDateString()
										, t = this.message.sourceAttributions.map(((t,n)=>`(${n + 1}) ${t.providerDisplayName}. ${t.seeMoreUrl} ${this.strings.accessed} ${e}.`));
									let n = `${this.message.text}`;
									return n = n.split(this.citationRegex).map((e=>this.isInteger(e) ? this.toSuperscript(e) : e)).join(""),
									n += "\n\n",
									n += `${this.strings.source} ${e}`,
									n += t.join("\n"),
									n
							}
							return null
					}
					async copyText(e) {
							var t;
							try {
									return null === (t = this.log) || void 0 === t || t.trace(this, this.copyText, `Copying text: ${e}`),
									this.changeCopyState(Vc.Copied),
									this.config.sydney.copyToClipboardProvider ? this.config.sydney.copyToClipboardProvider(e) : await navigator.clipboard.writeText(e)
							} catch (e) {
									throw new Error("Failed to copy text",{
											cause: e instanceof Error ? e : void 0
									})
							}
					}
					changeCopyState(e) {
							this.copyState = e,
							window.setTimeout((()=>{
									e !== Vc.Copied && e !== Vc.Error || this.changeCopyState(Vc.Idle)
							}
							), 3e3)
					}
					embedShareControl(e, t, n, i, r, o) {
							var s, a;
							null === (s = this.log) || void 0 === s || s.info(this, this.embedShareControl, `Creating share control with link: ${e}`).write(),
							this.hasClickedShare || (this.feedbackFormService.openShareControl(e, t, n, i, r),
							this.shareUrlCache[o] = e),
							null === (a = this.log) || void 0 === a || a.trace(this, this.embedShareControl, "done").write()
					}
					promptUserForFeedback() {
							this.serp.mode !== Qc.Conversation && this.serp.changeMode(Qc.Conversation);
							const e = [{
									text: this.config.strings.feedbackFirstMessage + "\n\n" + this.config.strings.feedbackPromptMessage,
									author: ve.Bot,
									feedbackPrompt: !0,
									reportable: !1
							}]
								, t = this.modelFactory.createLocalText(e[0]);
							this.conversation.addMessage(t),
							this.chat.registerContext(e)
					}
					toSuperscript(e) {
							return e.split("").map((e=>this.numberToSuperscript[e])).join("")
					}
					isInteger(e) {
							return !isNaN(Number(e))
					}
					logFeedback(e, t) {
							var n;
							null !== this.message ? this.telemetry.trackEvent("ClientInst", "Feedback", {
									isAdding: t.toString(),
									type: e,
									mid: this.message.messageId,
									text: this.message.text,
									creatorFeedbackId: this.config.creator.feedbackId
							}) : null === (n = this.log) || void 0 === n || n.error(this, this.logFeedback, "Message is null").write()
					}
					get hasSelectedFeedback() {
							return this.hasSubmittedNegativeFeedback || this.hasSubmittedPositiveFeedback || this.hasSubmittedOffensiveFeedback
					}
					get shouldOffensiveBeFirst() {
							return this.hasSubmittedNegativeFeedback || this.hasSubmittedPositiveFeedback
					}
			}
			;
			__decorate([observable, __metadata("design:type", Boolean)], Ed.prototype, "hasSubmittedPositiveFeedback", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Ed.prototype, "hasSubmittedNegativeFeedback", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Ed.prototype, "hasSubmittedOffensiveFeedback", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Ed.prototype, "enableShare", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Ed.prototype, "enableOffensiveFeedback", void 0),
			__decorate([observable, __metadata("design:type", String)], Ed.prototype, "copyState", void 0),
			__decorate([observable, __metadata("design:type", Object)], Ed.prototype, "strings", void 0),
			Ed = __decorate([__param(0, Zc), __param(1, js), __param(2, Yo), __param(3, Us), __param(4, za), __param(5, Va), __param(6, zs), __param(7, ll), __param(8, zs), __param(9, ol), __param(10, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object])], Ed);
			class HoverAdsModel extends lifecycle_Disposable {
					constructor(e, t, n, i) {
							super(),
							this.config = t,
							this.conversation = n,
							this.log = i,
							this.isContentLoaded = !1,
							this.cancelRender = !1,
							this.contentUrl = "",
							this._frameHeight = "0px",
							this._frameWidth = "0px",
							this._iframeId = this.getUUID(),
							this.handleWindowMessage = e=>{
									var t, n;
									const i = e.data.data;
									if (null === (t = this.log) || void 0 === t || t.trace(this, this.handleWindowMessage, null, e.data).write(),
									this.shouldHandleMessage(e.data))
											if (this.messageHandlerDisposer.dispose(),
											i.type !== fd.Ads || 0 === i.height || 0 === i.width)
													this.cancelRender = !0;
											else {
													try {
															const t = e.data.data;
															t.context && (this._context = JSON.parse(t.context.toString()))
													} catch (e) {
															null === (n = this.log) || void 0 === n || n.error(this, this.shouldHandleMessage, "Failed to parse AdContext from JSON").write()
													}
													this.isContentLoaded = !0,
													this._frameHeight = i.height + "px",
													this._frameWidth = i.width + "px"
											}
							}
							,
							this.messageHandlerDisposer = addDisposableListener(window, "message", this.handleWindowMessage),
							this._query = e,
							this._context = void 0,
							this.setContentUrl()
					}
					get frameHeight() {
							return this._frameHeight
					}
					get frameWidth() {
							return this._frameWidth
					}
					get iframeId() {
							return this._iframeId
					}
					get context() {
							return this._context
					}
					setContentUrl() {
							const e = this.config.buildUrl(this.config.ads);
							e.searchParams.set("q", this._query),
							e.searchParams.set("iframeid", this.iframeId),
							e.searchParams.set("onlyadsovl", "1"),
							e.searchParams.set("codex_conid", this.getConversationId());
							let t = 3;
							do {
									e.searchParams.set("codex_summ", this.conversation.createConversationSummary(t--))
							} while (e.href.length > 2e3);
							this.contentUrl = e.toString()
					}
					shouldHandleMessage(e) {
							return vd.isPostMessageEvent(e) && e.type === _d.ContentLoaded && this.iframeId === e.data.iframeid
					}
					getUUID() {
							return CoreUtils.uuid()
					}
					getConversationId() {
							return null === this.conversation.id ? "" : this.conversation.id
					}
			}
			__decorate([observable, __metadata("design:type", Boolean)], HoverAdsModel.prototype, "isContentLoaded", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], HoverAdsModel.prototype, "cancelRender", void 0),
			__decorate([observable, __metadata("design:type", String)], HoverAdsModel.prototype, "contentUrl", void 0),
			__decorate([observable, __metadata("design:type", String)], HoverAdsModel.prototype, "_frameHeight", void 0),
			__decorate([observable, __metadata("design:type", String)], HoverAdsModel.prototype, "_frameWidth", void 0);
			let Td = class extends ViewModelBase {
					constructor(e, t, n, i, r, o) {
							var s;
							super(e, t, void 0),
							this.telemetry = n,
							this.config = i,
							this.conversation = r,
							this.showAttributionFavicons = null === (s = this.config.features.enableHoverCardAttributionFavicons) || void 0 === s || s,
							this._attributions = [],
							this._adverts = [],
							this._attributionsMap = new Map,
							this._adsModels = new Map,
							this._citationGroupMap = new Map,
							this._target = null
					}
					get target() {
							return this._target
					}
					get attributions() {
							return this._attributions
					}
					get citations() {
							return this._citations
					}
					get adverts() {
							return this._adverts
					}
					setTarget(e) {
							var t;
							this._target !== e && (this._target = e,
							this.loadTargetCitationsById(null === (t = this.target) || void 0 === t ? void 0 : t.dataset.citationid))
					}
					addAttributions(e, t) {
							var n;
							null === (n = this.log) || void 0 === n || n.trace(this, this.addAttributions, "newAttributions", e, "enableHoverAds:", t).write();
							for (const n of e) {
									n.searchQuery && this.config.features.enableAds && t && this.generateAdvertForQuery(n.searchQuery);
									const e = this.ignoreTrailingSlash(n.link);
									this._attributionsMap.has(e) || (this._attributionsMap.set(e, n),
									this._attributions.push(n))
							}
					}
					addOrUpdateCitationGroup(e, t) {
							var n;
							null === (n = this.log) || void 0 === n || n.trace(this, this.addOrUpdateCitationGroup, "group:", t).write(),
							this._citationGroupMap.set(e, t)
					}
					getSearchQueryFromUrl(e) {
							return this.getSearchQueryByUrl(e)
					}
					applyLinkToTargetFromQuery(e) {
							if (this.target && null === this.target.getAttribute("href")) {
									const t = this.getAdsUrlBySearchQuery(e);
									this.config.features.enableApplyLinkToHoverAds && t && this.canApplyClickout(e) ? !this.serp.isMobile && window.innerWidth > 600 && (this.target.setAttribute("href", t),
									this.target.setAttribute("target", "_blank")) : this._citations && this._citations.length > 0 && (this.target.setAttribute("href", this._citations[0].link),
									this.target.setAttribute("target", "_blank"))
							}
					}
					applyLinkToTarget() {
							this.target && null === this.target.getAttribute("href") && this._citations && this._citations.length > 0 && (this.target.setAttribute("href", this._citations[0].link),
							this.target.setAttribute("target", "_blank"))
					}
					clear() {
							this._adsModels.clear(),
							this._adverts = [],
							this._attributions = [],
							this._attributionsMap.clear(),
							this._citationGroupMap.clear(),
							delete this._citations
					}
					generateAdvertForQuery(e) {
							var t;
							if (!this._adsModels.has(e)) {
									const n = new HoverAdsModel(e,this.config,this.conversation,this.log);
									this._adsModels.set(e, n),
									this._adverts.push({
											query: e,
											model: n
									}),
									null === (t = this.log) || void 0 === t || t.trace(this, this.generateAdvertForQuery, e, "adverts:", this._adverts).write()
							}
					}
					loadTargetCitationsById(e="-1") {
							var t;
							this._citations = this._citationGroupMap.get(e),
							null === (t = this.log) || void 0 === t || t.trace(this, this.loadTargetCitationsById, e, this._citations).write()
					}
					ignoreTrailingSlash(e) {
							return e.endsWith("/") ? e.slice(0, -1) : e
					}
					getSearchQueryByUrl(e) {
							var t, n;
							let i;
							return e && (i = null === (t = this._attributionsMap.get(this.ignoreTrailingSlash(e))) || void 0 === t ? void 0 : t.searchQuery),
							null === (n = this.log) || void 0 === n || n.trace(this, this.getSearchQueryByUrl, `url: '${e}'`, `result query: '${i}'`).write(),
							i
					}
					getAdsUrlBySearchQuery(e) {
							var t;
							const n = null === (t = this._adsModels.get(e)) || void 0 === t ? void 0 : t.context;
							if (n && n.length > 0)
									return n[0].rlink
					}
					canApplyClickout(e) {
							const t = this._attributions.filter((t=>t.searchQuery === e)).sort(((e,t)=>parseInt(e.number) - parseInt(t.number)));
							return !!(t.length > 0 && this._citations && this._citations.length > 0 && t[0].title === this._citations[0].title)
					}
			}
			;
			__decorate([observable, __metadata("design:type", Boolean)], Td.prototype, "showAttributionFavicons", void 0),
			__decorate([observable, __metadata("design:type", Object), __metadata("design:paramtypes", [])], Td.prototype, "target", null),
			__decorate([observable, __metadata("design:type", Array)], Td.prototype, "_attributions", void 0),
			__decorate([observable, __metadata("design:type", Object)], Td.prototype, "_citations", void 0),
			__decorate([observable, __metadata("design:type", Array)], Td.prototype, "_adverts", void 0),
			Td = __decorate([__param(0, Zc), __param(1, qa), __param(2, js), __param(3, Yo), __param(4, zs), __param(5, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object, Object, Object])], Td);
			const Id = P.createInterface("IHoverViewModel");
			let wd = class extends ViewModelBase {
					constructor(e, t, n, i) {
							super(e, t, i),
							this.telemetry = n,
							this.target = null,
							this.content = null,
							this.container = null
					}
					setContent(e) {
							this.content = e
					}
					setTarget(e) {
							this.target = e
					}
					get isMobile() {
							return this.serp.isMobile
					}
			}
			;
			__decorate([observable, __metadata("design:type", Object)], wd.prototype, "target", void 0),
			__decorate([observable, __metadata("design:type", Object)], wd.prototype, "content", void 0),
			wd = __decorate([__param(0, Zc), __param(1, qa), __param(2, js), __param(3, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object])], wd);
			const Ad = P.createInterface("IMessageGroupViewModel");
			var Rd;
			let xd = class extends ViewModelBase {
					constructor(e, t, n, i) {
							super(e, t, i),
							this.factory = n,
							Rd.set(this, null),
							this._isExpanded = !1,
							this._messageCount = 0,
							this._messages = [],
							this._author = null
					}
					get isExpanded() {
							return this._isExpanded
					}
					get messageCount() {
							return this._messageCount
					}
					get messages() {
							return this._messages
					}
					get source() {
							return this.author
					}
					get author() {
							if (null === this._author)
									throw new Error("MessageGroupViewModel has not been initialized.");
							return this._author
					}
					get serpSlotLastMetaMessage() {
							if (0 === this.messageCount)
									return;
							let e;
							const t = this.messages.filter((e=>e.type === sl.Meta));
							return t.length > 0 && (e = t[t.length - 1]),
							e
					}
					get serpSlotFirstTextMessage() {
							if (0 !== this.messageCount)
									return this.messages.find((e=>e.type === sl.Text))
					}
					get showSerpSlotMetaMessage() {
							return void 0 !== this.serpSlotLastMetaMessage && void 0 === this.serpSlotFirstTextMessage
					}
					get turn() {
							if (null === __classPrivateFieldGet(this, Rd, "f"))
									throw new Error("MessageGroupViewModel has not been initialized.");
							return __classPrivateFieldGet(this, Rd, "f")
					}
					addGroupMessage(e) {
							var t;
							if (e.author !== this.author)
									throw new Error(`Author mismatch. Group: '${this.author}' Message: '${e.author}'`);
							const n = this.createMessageVM(e);
							this._messages.push(n),
							this._messageCount = this._messages.length,
							null === (t = this.log) || void 0 === t || t.trace(this, this.addGroupMessage, `group message added: '${e.author}' (count: ${this._messageCount})`).write(),
							this.checkExpand(n)
					}
					initialize(e, t) {
							__classPrivateFieldSet(this, Rd, e, "f"),
							this._author = t
					}
					checkExpand(e) {
							e.type === sl.Host && e.contentType === al.SemSerp && (this._isExpanded = !0)
					}
					createMessageVM(e) {
							return this.factory.createMessage(e)
					}
			}
			;
			Rd = new WeakMap,
			__decorate([observable, __metadata("design:type", Boolean)], xd.prototype, "_isExpanded", void 0),
			__decorate([observable, __metadata("design:type", Number)], xd.prototype, "_messageCount", void 0),
			__decorate([observable, __metadata("design:type", Array)], xd.prototype, "_messages", void 0),
			__decorate([observable_volatile, __metadata("design:type", Object), __metadata("design:paramtypes", [])], xd.prototype, "serpSlotLastMetaMessage", null),
			__decorate([observable_volatile, __metadata("design:type", Object), __metadata("design:paramtypes", [])], xd.prototype, "serpSlotFirstTextMessage", null),
			__decorate([observable_volatile, __metadata("design:type", Boolean), __metadata("design:paramtypes", [])], xd.prototype, "showSerpSlotMetaMessage", null),
			xd = __decorate([__param(0, Zc), __param(1, qa), __param(2, Fc), __param(3, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object])], xd);
			let Od = class extends MessageViewModelBase {
					constructor(e, t, n, i, r, o) {
							super(r, t, n, i, o),
							this.cards = e,
							this._metaTextHtml = ""
					}
					get metaTextHtml() {
							return this._metaTextHtml
					}
					onModelPropertyChanged(e) {
							switch (super.onModelPropertyChanged(e),
							e) {
							case null:
							case "text":
									this._metaTextHtml = this.getFormattedHtml()
							}
					}
					getFormattedHtml() {
							const {text: e, messageType: t} = this.model;
							let n;
							switch (t) {
							case Ee.InternalSearchQuery:
									const t = /`(.*?)`/;
									n = this.getFormattedString(e, this.config.strings.metaInternalSearchQuery, t);
									break;
							case Ee.InternalLoaderMessage:
									n = this.config.strings.metaInternalLoaderMessage;
									break;
							default:
									n = e
							}
							return this.cards.renderMarkdownToHtml(n)
					}
					getFormattedString(e, t, n) {
							const i = null == e ? void 0 : e.match(n);
							let r = t;
							return null == i || i.forEach(((e,t)=>{
									r = r.replaceAll(`{${t}}`, e)
							}
							)),
							r
					}
			}
			;
			__decorate([observable, __metadata("design:type", String)], Od.prototype, "_metaTextHtml", void 0),
			Od = __decorate([__param(0, Ic), __param(1, Yo), __param(2, Zc), __param(3, qa), __param(4, js), __param(5, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object, Object, Object])], Od);
			const Nd = P.createInterface("ISeeMoreContainerViewModel");
			let Pd = class extends ViewModelBase {
					constructor(e, t, n, i) {
							super(t, n, i),
							this.config = e,
							this.strings = {
									seeMoreButton: this.config.strings.seeMore
							}
					}
			}
			;
			var Dd;
			__decorate([observable, __metadata("design:type", Object)], Pd.prototype, "strings", void 0),
			Pd = __decorate([__param(0, Yo), __param(1, Zc), __param(2, qa), __param(3, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object])], Pd),
			function(e) {
					e.Bing = "bing",
					e.Sapphire = "sapphire",
					e.Shoreline = "shoreline"
			}(Dd || (Dd = {})),
			function(e) {
					e.tryParse = function(t) {
							let n;
							switch (null == t ? void 0 : t.toLowerCase()) {
							case e.Bing:
									n = e.Bing;
									break;
							case e.Sapphire:
									n = e.Sapphire;
									break;
							case e.Shoreline:
									n = e.Shoreline
							}
							return n
					}
					,
					e.getDefault = function() {
							return e.Bing
					}
			}(Dd || (Dd = {}));
			const Md = P.createInterface("ISerpFeedbackViewModel")
				, Ld = P.createInterface("ISlimHeaderViewModel")
				, kd = P.createInterface("ISerpViewModel");
			var Fd, Bd, Gd, Ud, zd, $d, Vd, Hd, qd, jd, Wd, Yd, Kd;
			let Qd = class extends lifecycle_Disposable {
					constructor(e, t, n, i) {
							super(),
							this.telemetry = e,
							this.errorService = t,
							this.factory = n,
							this.log = i,
							this.isDevMode = !1,
							this.isMobile = !1,
							this.isCachedResponse = !1,
							this.isSeeMoreActivated = !1,
							this.serpSlot = Xc.None,
							this.cardHeight = 320,
							this.canTransition = !0,
							Fd.set(this, this._register(new Emitter)),
							Bd.set(this, this._register(new Emitter)),
							Gd.set(this, this._register(new Emitter)),
							Ud.set(this, null),
							zd.set(this, null),
							$d.set(this, null),
							Vd.set(this, null),
							Hd.set(this, null),
							qd.set(this, null),
							jd.set(this, null),
							Wd.set(this, null),
							Yd.set(this, null),
							Kd.set(this, null),
							this.handleWindowResize = ()=>{
									var e;
									null === (e = this.log) || void 0 === e || e.trace(this, this.handleWindowResize, "Disabling transitions.").write(),
									this.canTransition = !1
							}
							,
							this.onWindowResize = this._register(new DomEmitter(window,"resize")),
							this.onWindowResize.event(this.handleWindowResize),
							this.query = null,
							this.mode = Qc.getDefault(),
							this.alignment = this.getDefaultAlignment(),
							this.productType = Dd.getDefault()
					}
					get onSerpSlotSuggestionInvoked() {
							return __classPrivateFieldGet(this, Fd, "f").event
					}
					get onModeChanging() {
							return __classPrivateFieldGet(this, Bd, "f").event
					}
					get onModeChanged() {
							return __classPrivateFieldGet(this, Gd, "f").event
					}
					get actionBar() {
							var e;
							return __classPrivateFieldSet(this, Ud, null !== (e = __classPrivateFieldGet(this, Ud, "f")) && void 0 !== e ? e : this._register(this.factory.create(jc)), "f"),
							__classPrivateFieldGet(this, Ud, "f")
					}
					get background() {
							var e;
							return __classPrivateFieldSet(this, zd, null !== (e = __classPrivateFieldGet(this, zd, "f")) && void 0 !== e ? e : this._register(this.factory.create(rd)), "f"),
							__classPrivateFieldGet(this, zd, "f")
					}
					get conversation() {
							var e;
							return __classPrivateFieldSet(this, $d, null !== (e = __classPrivateFieldGet(this, $d, "f")) && void 0 !== e ? e : this._register(this.factory.create(ed)), "f"),
							__classPrivateFieldGet(this, $d, "f")
					}
					get drawer() {
							var e;
							return __classPrivateFieldSet(this, Vd, null !== (e = __classPrivateFieldGet(this, Vd, "f")) && void 0 !== e ? e : this._register(this.factory.create(hd)), "f"),
							__classPrivateFieldGet(this, Vd, "f")
					}
					get hoverCard() {
							var e;
							return __classPrivateFieldSet(this, Hd, null !== (e = __classPrivateFieldGet(this, Hd, "f")) && void 0 !== e ? e : this._register(this.factory.create(Jc)), "f"),
							__classPrivateFieldGet(this, Hd, "f")
					}
					get hover() {
							var e;
							return __classPrivateFieldSet(this, qd, null !== (e = __classPrivateFieldGet(this, qd, "f")) && void 0 !== e ? e : this._register(this.factory.create(Id)), "f"),
							__classPrivateFieldGet(this, qd, "f")
					}
					get seeMoreContainer() {
							var e;
							return __classPrivateFieldSet(this, jd, null !== (e = __classPrivateFieldGet(this, jd, "f")) && void 0 !== e ? e : this._register(this.factory.create(Nd)), "f"),
							__classPrivateFieldGet(this, jd, "f")
					}
					get serpFeedback() {
							var e;
							return __classPrivateFieldSet(this, Wd, null !== (e = __classPrivateFieldGet(this, Wd, "f")) && void 0 !== e ? e : this._register(this.factory.create(Md)), "f"),
							__classPrivateFieldGet(this, Wd, "f")
					}
					get slimHeader() {
							var e;
							return __classPrivateFieldSet(this, Yd, null !== (e = __classPrivateFieldGet(this, Yd, "f")) && void 0 !== e ? e : this._register(this.factory.create(Ld)), "f"),
							__classPrivateFieldGet(this, Yd, "f")
					}
					get typingIndicator() {
							var e;
							return __classPrivateFieldSet(this, Kd, null !== (e = __classPrivateFieldGet(this, Kd, "f")) && void 0 !== e ? e : this._register(this.factory.create(td)), "f"),
							__classPrivateFieldGet(this, Kd, "f")
					}
					changeMode(e) {
							var t, n;
							!this.isDevMode && [Qc.Home, Qc.Search].includes(e) || this.mode !== e && (null === (t = this.log) || void 0 === t || t.debug(this, this.changeMode, `SerpMode changing: ${e}`).write(),
							__classPrivateFieldGet(this, Bd, "f").fire(e),
							this.canTransition = !0,
							e === Qc.Conversation && (this.telemetry.trackEvent("ClientInst", "EnterConversation"),
							this.query = null,
							this.conversation.ensureInitialized()),
							this.mode === Qc.Conversation && this.telemetry.trackEvent("ClientInst", "ExitConversation"),
							this.mode = e,
							__classPrivateFieldGet(this, Gd, "f").fire(this.mode),
							null === (n = this.log) || void 0 === n || n.debug(this, this.changeMode, `SerpMode changed: ${this.mode}`).write())
					}
					invokeSuggestion(e) {
							this.isConversationChatDisabled() || (null !== e && this.actionBar.submitSuggestion(e),
							this.changeMode(Qc.Conversation),
							this.serpSlot !== Xc.None && __classPrivateFieldGet(this, Fd, "f").fire(null !== e))
					}
					submitQuery(e) {
							var t;
							this.isConversationChatDisabled() || (null !== e && this.conversation.addConversationMessage(e),
							this.mode !== Qc.Conversation && this.query !== e && (null === (t = this.log) || void 0 === t || t.debug(this, this.submitQuery, `Query received: ${e}`).write(),
							this.query = e,
							null !== this.query && setTimeout((()=>this.afterQueryReceived()), 333)))
					}
					afterQueryReceived() {
							var e;
							null === (e = this.log) || void 0 === e || e.trace(this, this.afterQueryReceived, null).write(),
							this.randomizeCardHeight(),
							this.changeMode(Qc.Search)
					}
					queryChanged() {
							var e;
							null === (e = this.log) || void 0 === e || e.trace(this, this.queryChanged, `Query changed: ${this.query}`).write()
					}
					isConversationChatDisabled() {
							return this.mode === Qc.Conversation && this.errorService.isChatDisabled()
					}
					getDefaultAlignment() {
							return Kc.Center
					}
					randomizeCardHeight() {
							this.cardHeight = Math.floor(400 * Math.random()) + 240
					}
			}
			;
			Fd = new WeakMap,
			Bd = new WeakMap,
			Gd = new WeakMap,
			Ud = new WeakMap,
			zd = new WeakMap,
			$d = new WeakMap,
			Vd = new WeakMap,
			Hd = new WeakMap,
			qd = new WeakMap,
			jd = new WeakMap,
			Wd = new WeakMap,
			Yd = new WeakMap,
			Kd = new WeakMap,
			__decorate([observable, __metadata("design:type", Boolean)], Qd.prototype, "isDevMode", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Qd.prototype, "isMobile", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Qd.prototype, "isCachedResponse", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Qd.prototype, "isSeeMoreActivated", void 0),
			__decorate([observable, __metadata("design:type", String)], Qd.prototype, "mode", void 0),
			__decorate([observable, __metadata("design:type", String)], Qd.prototype, "productType", void 0),
			__decorate([observable, __metadata("design:type", String)], Qd.prototype, "alignment", void 0),
			__decorate([observable, __metadata("design:type", String)], Qd.prototype, "serpSlot", void 0),
			__decorate([observable, __metadata("design:type", Object)], Qd.prototype, "query", void 0),
			__decorate([observable, __metadata("design:type", Number)], Qd.prototype, "cardHeight", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Qd.prototype, "canTransition", void 0),
			Qd = __decorate([__param(0, js), __param(1, Oa), __param(2, Fc), __param(3, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object])], Qd);
			let Zd = class extends ViewModelBase {
					constructor(e, t, n, i, r, o) {
							super(e, t, o),
							this.feedbackForm = n,
							this.config = i,
							this.telemetry = r,
							this.feedbackString = this.config.strings.serpfeedback
					}
					openFeedbackForm() {
							this.feedbackForm.openFeedbackForm()
					}
			}
			;
			Zd = __decorate([__param(0, Zc), __param(1, qa), __param(2, Va), __param(3, Yo), __param(4, js), __param(5, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object, Object, Object])], Zd);
			let Xd = class extends ViewModelBase {
					constructor(e, t, n, i) {
							super(e, t, i),
							this.config = n,
							this.strings = {
									letsChat: this.config.strings.letsChat
							}
					}
					enableConversationMode() {
							this.serp.invokeSuggestion(null)
					}
			}
			;
			__decorate([observable, __metadata("design:type", Object)], Xd.prototype, "strings", void 0),
			Xd = __decorate([__param(0, Zc), __param(1, qa), __param(2, Yo), __param(3, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object])], Xd);
			class HTMLDirective {
					constructor() {
							this.targetIndex = 0
					}
			}
			class TargetedHTMLDirective extends HTMLDirective {
					constructor() {
							super(...arguments),
							this.createPlaceholder = g.createInterpolationPlaceholder
					}
			}
			class AttachedBehaviorHTMLDirective extends HTMLDirective {
					constructor(e, t, n) {
							super(),
							this.name = e,
							this.behavior = t,
							this.options = n
					}
					createPlaceholder(e) {
							return g.createCustomAttributePlaceholder(this.name, e)
					}
					createBehavior(e) {
							return new this.behavior(e,this.options)
					}
			}
			function normalBind(e, t) {
					this.source = e,
					this.context = t,
					null === this.bindingObserver && (this.bindingObserver = _.binding(this.binding, this, this.isBindingVolatile)),
					this.updateTarget(this.bindingObserver.observe(e, t))
			}
			function triggerBind(e, t) {
					this.source = e,
					this.context = t,
					this.target.addEventListener(this.targetName, this)
			}
			function normalUnbind() {
					this.bindingObserver.disconnect(),
					this.source = null,
					this.context = null
			}
			function contentUnbind() {
					this.bindingObserver.disconnect(),
					this.source = null,
					this.context = null;
					const e = this.target.$fastView;
					void 0 !== e && e.isComposed && (e.unbind(),
					e.needsBindOnly = !0)
			}
			function triggerUnbind() {
					this.target.removeEventListener(this.targetName, this),
					this.source = null,
					this.context = null
			}
			function updateAttributeTarget(e) {
					g.setAttribute(this.target, this.targetName, e)
			}
			function updateBooleanAttributeTarget(e) {
					g.setBooleanAttribute(this.target, this.targetName, e)
			}
			function updateContentTarget(e) {
					if (null == e && (e = ""),
					e.create) {
							this.target.textContent = "";
							let t = this.target.$fastView;
							void 0 === t ? t = e.create() : this.target.$fastTemplate !== e && (t.isComposed && (t.remove(),
							t.unbind()),
							t = e.create()),
							t.isComposed ? t.needsBindOnly && (t.needsBindOnly = !1,
							t.bind(this.source, this.context)) : (t.isComposed = !0,
							t.bind(this.source, this.context),
							t.insertBefore(this.target),
							this.target.$fastView = t,
							this.target.$fastTemplate = e)
					} else {
							const t = this.target.$fastView;
							void 0 !== t && t.isComposed && (t.isComposed = !1,
							t.remove(),
							t.needsBindOnly ? t.needsBindOnly = !1 : t.unbind()),
							this.target.textContent = e
					}
			}
			function updatePropertyTarget(e) {
					this.target[this.targetName] = e
			}
			function updateClassTarget(e) {
					const t = this.classVersions || Object.create(null)
						, n = this.target;
					let i = this.version || 0;
					if (null != e && e.length) {
							const r = e.split(/\s+/);
							for (let e = 0, o = r.length; e < o; ++e) {
									const o = r[e];
									"" !== o && (t[o] = i,
									n.classList.add(o))
							}
					}
					if (this.classVersions = t,
					this.version = i + 1,
					0 !== i) {
							i -= 1;
							for (const e in t)
									t[e] === i && n.classList.remove(e)
					}
			}
			class HTMLBindingDirective extends TargetedHTMLDirective {
					constructor(e) {
							super(),
							this.binding = e,
							this.bind = normalBind,
							this.unbind = normalUnbind,
							this.updateTarget = updateAttributeTarget,
							this.isBindingVolatile = _.isVolatileBinding(this.binding)
					}
					get targetName() {
							return this.originalTargetName
					}
					set targetName(e) {
							if (this.originalTargetName = e,
							void 0 !== e)
									switch (e[0]) {
									case ":":
											if (this.cleanedTargetName = e.substr(1),
											this.updateTarget = updatePropertyTarget,
											"innerHTML" === this.cleanedTargetName) {
													const e = this.binding;
													this.binding = (t,n)=>g.createHTML(e(t, n))
											}
											break;
									case "?":
											this.cleanedTargetName = e.substr(1),
											this.updateTarget = updateBooleanAttributeTarget;
											break;
									case "@":
											this.cleanedTargetName = e.substr(1),
											this.bind = triggerBind,
											this.unbind = triggerUnbind;
											break;
									default:
											this.cleanedTargetName = e,
											"class" === e && (this.updateTarget = updateClassTarget)
									}
					}
					targetAtContent() {
							this.updateTarget = updateContentTarget,
							this.unbind = contentUnbind
					}
					createBehavior(e) {
							return new BindingBehavior(e,this.binding,this.isBindingVolatile,this.bind,this.unbind,this.updateTarget,this.cleanedTargetName)
					}
			}
			class BindingBehavior {
					constructor(e, t, n, i, r, o, s) {
							this.source = null,
							this.context = null,
							this.bindingObserver = null,
							this.target = e,
							this.binding = t,
							this.isBindingVolatile = n,
							this.bind = i,
							this.unbind = r,
							this.updateTarget = o,
							this.targetName = s
					}
					handleChange() {
							this.updateTarget(this.bindingObserver.observe(this.source, this.context))
					}
					handleEvent(e) {
							ExecutionContext.setEvent(e);
							const t = this.binding(this.source, this.context);
							ExecutionContext.setEvent(null),
							!0 !== t && e.preventDefault()
					}
			}
			let Jd = null;
			class CompilationContext {
					addFactory(e) {
							e.targetIndex = this.targetIndex,
							this.behaviorFactories.push(e)
					}
					captureContentBinding(e) {
							e.targetAtContent(),
							this.addFactory(e)
					}
					reset() {
							this.behaviorFactories = [],
							this.targetIndex = -1
					}
					release() {
							Jd = this
					}
					static borrow(e) {
							const t = Jd || new CompilationContext;
							return t.directives = e,
							t.reset(),
							Jd = null,
							t
					}
			}
			function createAggregateBinding(e) {
					if (1 === e.length)
							return e[0];
					let t;
					const n = e.length
						, i = e.map((e=>"string" == typeof e ? ()=>e : (t = e.targetName || t,
					e.binding)))
						, r = new HTMLBindingDirective(((e,t)=>{
							let r = "";
							for (let o = 0; o < n; ++o)
									r += i[o](e, t);
							return r
					}
					));
					return r.targetName = t,
					r
			}
			const ep = m.length;
			function parseContent(e, t) {
					const n = t.split(h);
					if (1 === n.length)
							return null;
					const i = [];
					for (let t = 0, r = n.length; t < r; ++t) {
							const r = n[t]
								, o = r.indexOf(m);
							let s;
							if (-1 === o)
									s = r;
							else {
									const t = parseInt(r.substring(0, o));
									i.push(e.directives[t]),
									s = r.substring(o + ep)
							}
							"" !== s && i.push(s)
					}
					return i
			}
			function compileAttributes(e, t, n=!1) {
					const i = t.attributes;
					for (let r = 0, o = i.length; r < o; ++r) {
							const s = i[r]
								, a = s.value
								, l = parseContent(e, a);
							let c = null;
							null === l ? n && (c = new HTMLBindingDirective((()=>a)),
							c.targetName = s.name) : c = createAggregateBinding(l),
							null !== c && (t.removeAttributeNode(s),
							r--,
							o--,
							e.addFactory(c))
					}
			}
			function compileContent(e, t, n) {
					const i = parseContent(e, t.textContent);
					if (null !== i) {
							let r = t;
							for (let o = 0, s = i.length; o < s; ++o) {
									const s = i[o]
										, a = 0 === o ? t : r.parentNode.insertBefore(document.createTextNode(""), r.nextSibling);
									"string" == typeof s ? a.textContent = s : (a.textContent = " ",
									e.captureContentBinding(s)),
									r = a,
									e.targetIndex++,
									a !== t && n.nextNode()
							}
							e.targetIndex--
					}
			}
			const tp = document.createRange();
			class HTMLView {
					constructor(e, t) {
							this.fragment = e,
							this.behaviors = t,
							this.source = null,
							this.context = null,
							this.firstChild = e.firstChild,
							this.lastChild = e.lastChild
					}
					appendTo(e) {
							e.appendChild(this.fragment)
					}
					insertBefore(e) {
							if (this.fragment.hasChildNodes())
									e.parentNode.insertBefore(this.fragment, e);
							else {
									const t = e.parentNode
										, n = this.lastChild;
									let i, r = this.firstChild;
									for (; r !== n; )
											i = r.nextSibling,
											t.insertBefore(r, e),
											r = i;
									t.insertBefore(n, e)
							}
					}
					remove() {
							const e = this.fragment
								, t = this.lastChild;
							let n, i = this.firstChild;
							for (; i !== t; )
									n = i.nextSibling,
									e.appendChild(i),
									i = n;
							e.appendChild(t)
					}
					dispose() {
							const e = this.firstChild.parentNode
								, t = this.lastChild;
							let n, i = this.firstChild;
							for (; i !== t; )
									n = i.nextSibling,
									e.removeChild(i),
									i = n;
							e.removeChild(t);
							const r = this.behaviors
								, o = this.source;
							for (let e = 0, t = r.length; e < t; ++e)
									r[e].unbind(o)
					}
					bind(e, t) {
							const n = this.behaviors;
							if (this.source !== e)
									if (null !== this.source) {
											const i = this.source;
											this.source = e,
											this.context = t;
											for (let r = 0, o = n.length; r < o; ++r) {
													const o = n[r];
													o.unbind(i),
													o.bind(e, t)
											}
									} else {
											this.source = e,
											this.context = t;
											for (let i = 0, r = n.length; i < r; ++i)
													n[i].bind(e, t)
									}
					}
					unbind() {
							if (null === this.source)
									return;
							const e = this.behaviors
								, t = this.source;
							for (let n = 0, i = e.length; n < i; ++n)
									e[n].unbind(t);
							this.source = null
					}
					static disposeContiguousBatch(e) {
							if (0 !== e.length) {
									tp.setStartBefore(e[0].firstChild),
									tp.setEndAfter(e[e.length - 1].lastChild),
									tp.deleteContents();
									for (let t = 0, n = e.length; t < n; ++t) {
											const n = e[t]
												, i = n.behaviors
												, r = n.source;
											for (let e = 0, t = i.length; e < t; ++e)
													i[e].unbind(r)
									}
							}
					}
			}
			class ViewTemplate {
					constructor(e, t) {
							this.behaviorCount = 0,
							this.hasHostBehaviors = !1,
							this.fragment = null,
							this.targetOffset = 0,
							this.viewBehaviorFactories = null,
							this.hostBehaviorFactories = null,
							this.html = e,
							this.directives = t
					}
					create(e) {
							if (null === this.fragment) {
									let e;
									const t = this.html;
									if ("string" == typeof t) {
											e = document.createElement("template"),
											e.innerHTML = g.createHTML(t);
											const n = e.content.firstElementChild;
											null !== n && "TEMPLATE" === n.tagName && (e = n)
									} else
											e = t;
									const n = function(e, t) {
											const n = e.content;
											document.adoptNode(n);
											const i = CompilationContext.borrow(t);
											compileAttributes(i, e, !0);
											const r = i.behaviorFactories;
											i.reset();
											const o = g.createTemplateWalker(n);
											let s;
											for (; s = o.nextNode(); )
													switch (i.targetIndex++,
													s.nodeType) {
													case 1:
															compileAttributes(i, s);
															break;
													case 3:
															compileContent(i, s, o);
															break;
													case 8:
															g.isMarker(s) && i.addFactory(t[g.extractDirectiveIndexFromMarker(s)])
													}
											let a = 0;
											(g.isMarker(n.firstChild) || 1 === n.childNodes.length && t.length) && (n.insertBefore(document.createComment(""), n.firstChild),
											a = -1);
											const l = i.behaviorFactories;
											return i.release(),
											{
													fragment: n,
													viewBehaviorFactories: l,
													hostBehaviorFactories: r,
													targetOffset: a
											}
									}(e, this.directives);
									this.fragment = n.fragment,
									this.viewBehaviorFactories = n.viewBehaviorFactories,
									this.hostBehaviorFactories = n.hostBehaviorFactories,
									this.targetOffset = n.targetOffset,
									this.behaviorCount = this.viewBehaviorFactories.length + this.hostBehaviorFactories.length,
									this.hasHostBehaviors = this.hostBehaviorFactories.length > 0
							}
							const t = this.fragment.cloneNode(!0)
								, n = this.viewBehaviorFactories
								, i = new Array(this.behaviorCount)
								, r = g.createTemplateWalker(t);
							let o = 0
								, s = this.targetOffset
								, a = r.nextNode();
							for (let e = n.length; o < e; ++o) {
									const e = n[o]
										, t = e.targetIndex;
									for (; null !== a; ) {
											if (s === t) {
													i[o] = e.createBehavior(a);
													break
											}
											a = r.nextNode(),
											s++
									}
							}
							if (this.hasHostBehaviors) {
									const t = this.hostBehaviorFactories;
									for (let n = 0, r = t.length; n < r; ++n,
									++o)
											i[o] = t[n].createBehavior(e)
							}
							return new HTMLView(t,i)
					}
					render(e, t, n) {
							"string" == typeof t && (t = document.getElementById(t)),
							void 0 === n && (n = t);
							const i = this.create(n);
							return i.bind(e, y),
							i.appendTo(t),
							i
					}
			}
			const np = /([ \x09\x0a\x0c\x0d])([^\0-\x1F\x7F-\x9F "'>=/]+)([ \x09\x0a\x0c\x0d]*=[ \x09\x0a\x0c\x0d]*(?:[^ \x09\x0a\x0c\x0d"'`<>=]*|"[^"]*|'[^']*))$/;
			function html(e, ...t) {
					const n = [];
					let i = "";
					for (let r = 0, o = e.length - 1; r < o; ++r) {
							const o = e[r];
							let s = t[r];
							if (i += o,
							s instanceof ViewTemplate) {
									const e = s;
									s = ()=>e
							}
							if ("function" == typeof s && (s = new HTMLBindingDirective(s)),
							s instanceof TargetedHTMLDirective) {
									const e = np.exec(o);
									null !== e && (s.targetName = e[2])
							}
							s instanceof HTMLDirective ? (i += s.createPlaceholder(n.length),
							n.push(s)) : i += s
					}
					return i += e[e.length - 1],
					new ViewTemplate(i,n)
			}
			const ip = /([ \x09\x0a\x0c\x0d])([^\0-\x1F\x7F-\x9F "'>=/]+)([ \x09\x0a\x0c\x0d]*=[ \x09\x0a\x0c\x0d]*(?:[^ \x09\x0a\x0c\x0d"'`<>=]*|"[^"]*|'[^']*))$/;
			function createTemplate(e, t) {
					const n = [];
					let i = "";
					for (let r = 0, o = e.length - 1; r < o; ++r) {
							const o = e[r];
							let s = t[r];
							if (i += o,
							s instanceof ViewTemplate) {
									const e = s;
									s = ()=>e
							}
							if ("function" == typeof s && (s = new HTMLBindingDirective(s)),
							s instanceof TargetedHTMLDirective) {
									const e = ip.exec(o);
									null !== e && (s.targetName = e[2])
							}
							s instanceof HTMLDirective ? (i += s.createPlaceholder(n.length),
							n.push(s)) : i += s
					}
					return i += e[e.length - 1],
					new ViewTemplate(i,n)
			}
			class OnceBehavior {
					constructor(e, t, n, i, r) {
							this.location = e,
							this.itemBinding = t,
							this.templateBinding = i,
							this.source = null,
							this.view = null,
							this.item = null,
							this.itemObserver = null,
							this.itemBindingObserver = _.binding(t, this, n),
							this.templateBindingObserver = _.binding(i, this, r)
					}
					bind(e, t) {
							this.source = e,
							this.originalContext = t,
							this.childContext = Object.create(t),
							this.childContext.parent = e,
							this.childContext.parentContext = this.originalContext,
							this.item = this.itemBindingObserver.observe(e, this.originalContext),
							this.template = this.templateBindingObserver.observe(e, this.originalContext),
							this.observeItem(!0),
							this.refreshView()
					}
					unbind() {
							var e;
							this.source = null,
							this.item = null,
							null !== this.itemObserver && this.itemObserver.unsubscribe(this),
							null === (e = this.view) || void 0 === e || e.unbind(),
							this.itemBindingObserver.disconnect(),
							this.templateBindingObserver.disconnect()
					}
					handleChange(e) {
							e === this.itemBinding ? (this.item = this.itemBindingObserver.observe(this.source, this.originalContext),
							this.observeItem(),
							this.refreshView()) : e === this.templateBinding ? (this.template = this.templateBindingObserver.observe(this.source, this.originalContext),
							this.refreshView(!0)) : this.refreshView()
					}
					observeItem(e=!1) {
							if (null === this.item)
									return void (this.item = {});
							const t = this.itemObserver
								, n = this.itemObserver = _.getNotifier(this.item)
								, i = t !== n;
							i && null !== t && t.unsubscribe(this),
							(i || e) && n.subscribe(this)
					}
					createView() {
							this.view = this.template.create(),
							this.bindView(),
							this.view.insertBefore(this.location)
					}
					bindView() {
							var e;
							null === (e = this.view) || void 0 === e || e.bind(this.item, this.childContext)
					}
					refreshView(e=!1) {
							var t;
							e && (null === (t = this.view) || void 0 === t || t.dispose(),
							this.view = null),
							null === this.view ? this.createView() : this.bindView()
					}
			}
			class OnceDirective extends HTMLDirective {
					constructor(e, t) {
							super(),
							this.itemBinding = e,
							this.templateBinding = t,
							this.createPlaceholder = g.createBlockPlaceholder,
							this.isItemBindingVolatile = _.isVolatileBinding(e),
							this.isTemplateBindingVolatile = _.isVolatileBinding(t)
					}
					createBehavior(e) {
							return new OnceBehavior(e,this.itemBinding,this.isItemBindingVolatile,this.templateBinding,this.isTemplateBindingVolatile)
					}
			}
			function OnceDirective_once(e, t) {
					return new OnceDirective(e,"function" == typeof t ? t : ()=>t)
			}
			var rp;
			const op = "-1#5#9#5#1-"
				, sp = "`" + op + "`"
				, ap = `<code>${op}</code>`
				, lp = html`
${OnceDirective_once((e=>e.fateLink), html`
<a
	h="${e=>e.h}"
	href="${e=>e.link}"
	title="${e=>e.title}"
	target="_blank"
	@click=${(e,t)=>e.handleLinkClick(t.event)}
	>${e=>e.sourceCaption}</a
>
`)}
`;
			html`
 <cib-message-attributions :vm=${e=>e}></cib-message-attributions>
`;
			let cp = class extends MessageViewModelBase {
					constructor(e, t, n, i, r, o, s, a, l, c) {
							super(s, t, n, a, c),
							this.cards = e,
							this.conversation = i,
							this.hoverCard = r,
							this.vmFactory = o,
							this.feedbackForm = l,
							rp.set(this, null),
							this.wrappedCount = 0,
							this.isExpanded = !1,
							this._inlineAdsViewModel = null,
							this._fateOverrideTemplate = null,
							this._adaptiveCardTemplate = null,
							this._displayMode = zc.Text,
							this._attributions = [],
							this._fateLink = null,
							this.subdomainToRemove = ["www", "ww2", "mobile", "m"],
							this.messageId = CoreUtils.uuid(),
							this.citationGroups = new Map,
							this.handleLinkClick = e=>{
									let t;
									if (!(e.currentTarget instanceof HTMLAnchorElement))
											throw new Error("Link click event target is not an HTMLAnchorElement");
									return t = e.currentTarget,
									this.telemetry.trackInteractionEvent(e),
									this.telemetry.trackEvent("ClientInst", "LinkClicked", {
											link: t.href
									}),
									!0
							}
							,
							this.handleFateLinkClick = e=>(this.telemetry.trackInteractionEvent(e),
							this.telemetry.trackEvent("ClientInst", "FATELinkClicked"),
							!0)
					}
					get feedback() {
							var e;
							return __classPrivateFieldSet(this, rp, null !== (e = __classPrivateFieldGet(this, rp, "f")) && void 0 !== e ? e : this.vmFactory.createFeedback(this.model), "f"),
							__classPrivateFieldGet(this, rp, "f")
					}
					get inlineAds() {
							return this._inlineAdsViewModel
					}
					get text() {
							return this.model.text
					}
					get isShared() {
							return !!this.model.isShared && this.model.author === ve.Bot
					}
					get learnMoreText() {
							return this.config.strings.messageLearnMore
					}
					get fateOverrideTemplate() {
							return this._fateOverrideTemplate
					}
					get adaptiveCardTemplate() {
							return this._adaptiveCardTemplate
					}
					get displayMode() {
							return this._displayMode
					}
					get attributions() {
							return this._attributions
					}
					get feedbackPrompt() {
							return this.model.feedbackPrompt
					}
					get reportable() {
							return this.model.reportable
					}
					openFeedbackForm() {
							this.feedbackForm.openFeedbackForm()
					}
					onModelPropertyChanged(e) {
							super.onModelPropertyChanged(e);
							let t;
							switch (e) {
							case null:
									this.mapAttributionsFromModel(),
									this.isModelFinalized = this.model.isFinalized;
							case "text":
									this._displayMode = this.getDisplayMode(),
									null == t || t.trace(this, this.onModelPropertyChanged, `${null != e ? e : "init"}: '${this.model.text.slice(0, 60)}'`).write();
									break;
							case "sourceAttributions":
									this.mapAttributionsFromModel(),
									this.isModelFinalized && _.notify(this, "isModelFinalized"),
									null == t || t.trace(this, this.onModelPropertyChanged, `${e}:`, this.model[e]).write();
									break;
							case "isFinalized":
									this.isModelFinalized = this.model.isFinalized,
									this.mapAttributionsFromModel(),
									null == t || t.trace(this, this.onModelPropertyChanged, `${e}: '${this.model[e]}'`).write();
									break;
							case "inlineAdsModel":
									null === this._inlineAdsViewModel && this.model.inlineAdsModel && (this._inlineAdsViewModel = this.vmFactory.createMessage(this.model.inlineAdsModel)),
									this.mapAttributionsFromModel(),
									null == t || t.trace(this, this.onModelPropertyChanged, `${e}:`, this.model[e]).write();
									break;
							case "contentOrigin":
									null == t || t.trace(this, this.onModelPropertyChanged, `${e}: '${this.model[e]}'`).write()
							}
					}
					getDisplayMode() {
							let e = zc.Text;
							return this.author === ve.Bot && (this.checkBotFatePolicy() ? e = zc.FateOverride : this.checkBotAdaptiveCards() && (e = zc.AdaptiveCard)),
							e
					}
					checkBotFatePolicy() {
							let e = !1;
							return this._fateOverrideTemplate = this.getFatePolicyCheckResult(),
							this._fateOverrideTemplate && (e = !0),
							e
					}
					checkBotAdaptiveCards() {
							let e = !1;
							return this.model.adaptiveCards.length > 0 && (this._adaptiveCardTemplate = this.renderAdaptiveCardToTemplate(),
							this._adaptiveCardTemplate && (e = !0)),
							e
					}
					createAdaptiveCardViewTemplate(e) {
							var t;
							let n;
							if (this.attributions.length > 0) {
									const i = e.lastElementChild;
									if ((null == i ? void 0 : i.matches(".ac-textBlock")) && (null === (t = i.previousElementSibling) || void 0 === t ? void 0 : t.matches(".ac-horizontal-separator")))
											if (i.remove(),
											this.config.features.enableLearnMore) {
													i.innerHTML = ap;
													n = createTemplate(e.outerHTML.split(ap), [])
											} else
													i.previousElementSibling.remove(),
													i.remove()
							}
							return null != n || (n = new ViewTemplate(e.outerHTML,[])),
							n
					}
					renderAdaptiveCardToTemplate() {
							const e = this.cards.create(this.model.adaptiveCards[0]);
							if (!e)
									return null;
							e.removeAttribute("style");
							const t = this.telemetry.externalLinkId
								, {tooltip: n, citation: i} = this.classNames;
							return e.querySelectorAll("*").forEach(((e,r)=>{
									var o, s;
									if ("A" === e.nodeName) {
											if ("SUP" === (null === (o = e.firstChild) || void 0 === o ? void 0 : o.nodeName)) {
													if (!this.config.features.enableCitations)
															return void e.remove();
													if (e.firstChild.textContent) {
															const o = e
																, a = `${this.messageId}-${r}`;
															if (this.citationGroups.set(a, [o.href]),
															o.classList.add(i),
															o.setAttribute("data-citationid", a),
															o.setAttribute("aria-label", o.title),
															o.removeAttribute("title"),
															"A" !== (null === (s = e.nextSibling) || void 0 === s ? void 0 : s.nodeName)) {
																	const i = e;
																	let o = i;
																	const s = [o];
																	let a = o.previousSibling;
																	const l = [i.href]
																		, c = `${this.messageId}-${r}-group`;
																	for (this.citationGroups.set(c, l); "A" === (null == a ? void 0 : a.nodeName); ) {
																			o = a,
																			a = o.previousSibling;
																			const e = o;
																			l.unshift(e.href),
																			s.unshift(o)
																	}
																	for (; !this.isCitationContextStart(a); )
																			o = a,
																			a = o.previousSibling,
																			s.unshift(o);
																	const d = document.createElement("a");
																	if (this.config.features.enableCitations && (d.classList.add(n),
																	d.setAttribute("data-citationid", c),
																	!this.serp.isMobile && l.length && t && d.setAttribute("h", t)),
																	(null == a ? void 0 : a.nodeType) === Node.TEXT_NODE && a.textContent) {
																			const e = a.textContent.match(/([\.!?] )/);
																			if (e) {
																					const t = e[0]
																						, n = a.textContent.split(t);
																					if (n && Array.isArray(n))
																							for (; n.length > 0; ) {
																									const e = n.pop();
																									if (e.trim()) {
																											d.appendChild(document.createTextNode(e));
																											break
																									}
																							}
																					a.textContent = n.length ? `${n.join(t)}${t}` : `${n.join(t)}`
																			}
																	}
																	for (const e of s)
																			e === i && e.replaceWith(d),
																			d.appendChild(e)
															}
													}
											}
											t && e.setAttribute("h", t)
									}
									"CODE" !== e.tagName && e.removeAttribute("style"),
									"IMG" === e.nodeName && e.remove()
							}
							)),
							this.createAdaptiveCardViewTemplate(e)
					}
					isCitationContextStart(e) {
							return !e || (["A", "P", "DIV", "SPAN"].includes(e.nodeName) || e.nodeType === Node.TEXT_NODE && /[\.!?] /.test(e.textContent))
					}
					mapAttributionsFromModel() {
							if (this.model.feedbackPrompt)
									return;
							this._attributions = [];
							const e = this.telemetry.externalLinkId;
							for (let t = 0; t < this.model.sourceAttributions.length; t++) {
									const n = this.model.sourceAttributions[t];
									if (!n.seeMoreUrl)
											continue;
									const i = new URL(n.seeMoreUrl)
										, r = `${t + 1}`
										, o = `${r}. ${this.getDisplayDomain(i)}`
										, s = {
											handleLinkClick: this.handleLinkClick,
											number: r,
											title: n.providerDisplayName,
											sourceCaption: o,
											link: i.href,
											searchQuery: n.searchQuery,
											description: n.snippets,
											favIcon: n.imageFavicon || "",
											imageHeight: isNaN(Number(n.imageHeight)) ? 0 : parseInt(n.imageHeight),
											imageWidth: isNaN(Number(n.imageWidth)) ? 0 : parseInt(n.imageWidth),
											imageLink: n.imageLink || "",
											h: e
									};
									this._attributions.push(s)
							}
							this.enableHoverCitations(),
							this.enableHoverAds()
					}
					enableHoverCitations() {
							var e, t;
							if (this.config.features.enableCitations && this.isModelFinalized) {
									null === (e = this.log) || void 0 === e || e.trace(this, this.enableHoverCitations, null).write();
									for (const e of this.citationGroups.keys()) {
											const n = this.createCitationGroup(e);
											null === (t = this.citationGroups.get(e)) || void 0 === t || t.forEach((e=>{
													const t = this.attributions.find((t=>t.link === e));
													t && n.push(t)
											}
											)),
											this.hoverCard.addOrUpdateCitationGroup(e, n)
									}
							}
					}
					enableHoverAds() {
							if (this.isModelFinalized) {
									const e = !0;
									this.hoverCard.addAttributions(this.attributions, e)
							}
					}
					createCitationGroup(e) {
							const t = [];
							return t.uuid = e,
							t
					}
					getDisplayDomain(e) {
							return this.subdomainToRemove.reduce(((e,t)=>(t += ".",
							e.startsWith(t) ? e.replace(t, "") : e)), e.hostname)
					}
					get fateLink() {
							var e;
							return null !== (e = this._fateLink) && void 0 !== e || (this._fateLink = {
									number: "-1",
									handleLinkClick: this.handleFateLinkClick,
									title: "Bing",
									sourceCaption: "Bing",
									link: this.config.bing.baseUrl
							}),
							this._fateLink
					}
					getFatePolicyCheckResult() {
							const e = "@failover_hyperlink"
								, t = sp;
							let n = null;
							if (this.model.text.includes(e)) {
									const i = this.model.text.replace(e, t);
									n = createTemplate(this.cards.renderMarkdownToHtml(i).split(ap), [lp])
							}
							return n
					}
			}
			;
			var dp, pp, up;
			rp = new WeakMap,
			__decorate([observable, __metadata("design:type", Number)], cp.prototype, "wrappedCount", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], cp.prototype, "isExpanded", void 0),
			__decorate([observable, __metadata("design:type", Object)], cp.prototype, "_inlineAdsViewModel", void 0),
			__decorate([observable, __metadata("design:type", Object)], cp.prototype, "_fateOverrideTemplate", void 0),
			__decorate([observable, __metadata("design:type", Object)], cp.prototype, "_adaptiveCardTemplate", void 0),
			__decorate([observable, __metadata("design:type", Number)], cp.prototype, "_displayMode", void 0),
			__decorate([observable, __metadata("design:type", Array)], cp.prototype, "_attributions", void 0),
			cp = __decorate([__param(0, Ic), __param(1, Yo), __param(2, Zc), __param(3, zs), __param(4, Jc), __param(5, Fc), __param(6, js), __param(7, qa), __param(8, Va), __param(9, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object, Object, Object, Object, Object, Object, Object])], cp);
			let hp = class extends ViewModelBase {
					constructor(e, t, n, i) {
							super(e, t, i),
							this.factory = n,
							dp.set(this, null),
							pp.set(this, void 0),
							up.set(this, void 0),
							__classPrivateFieldSet(this, pp, this.createMessageGroup(ve.User), "f"),
							__classPrivateFieldSet(this, up, this.createMessageGroup(ve.Bot), "f")
					}
					get bot() {
							return __classPrivateFieldGet(this, up, "f")
					}
					get user() {
							return __classPrivateFieldGet(this, pp, "f")
					}
					get isExpanded() {
							return this.bot.isExpanded || this.user.isExpanded
					}
					get conversation() {
							if (null === __classPrivateFieldGet(this, dp, "f"))
									throw new Error("TurnViewModel has not been initialized.");
							return __classPrivateFieldGet(this, dp, "f")
					}
					get isCurrent() {
							return this.conversation.current === this
					}
					addTurnMessage(e) {
							var t;
							switch (null === (t = this.log) || void 0 === t || t.trace(this, this.addTurnMessage, "turn add message:", e.messageId).write(),
							e.author) {
							case ve.Bot:
									this.bot.addGroupMessage(e);
									break;
							case ve.User:
									this.user.addGroupMessage(e);
									break;
							default:
									throw new Error(`Unsupported author: '${e.author}'`)
							}
					}
					get lastMessage() {
							let e = null;
							return this.user.messages.length > 0 && (e = this.user.messages[this.user.messages.length - 1]),
							this.bot.messages.length > 0 && (e = this.bot.messages[this.bot.messages.length - 1]),
							e
					}
					initialize(e) {
							__classPrivateFieldSet(this, dp, e, "f")
					}
					createMessageGroup(e) {
							const t = this.factory.create(Ad);
							return t.initialize(this, e),
							t
					}
			}
			;
			dp = new WeakMap,
			pp = new WeakMap,
			up = new WeakMap,
			hp = __decorate([__param(0, Zc), __param(1, qa), __param(2, Fc), __param(3, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object])], hp);
			let mp = class extends ViewModelBase {
					constructor(e, t, n, i, r, o, s) {
							var a;
							super(e, t, s),
							this.config = n,
							this.chat = i,
							this.speech = r,
							this.conversation = o,
							this.strings = {
									stopStreamingAriaLabel: this.config.strings.typingIndicatorStopStreamingAriaLabel,
									stopRespondingAriaLabel: this.config.strings.typingIndicatorStopRespondingAriaLabel,
									stop: this.config.strings.stop
							},
							this.enableStreamStop = null === (a = !!this.config.features.enableStopButton) || void 0 === a || a
					}
					get isCancelEnabled() {
							return this.chat.isRequestPending
					}
					cancelPendingRequest() {
							var e;
							null === (e = this.log) || void 0 === e || e.trace(this, this.cancelPendingRequest, "Cancelling requests from both text and speech.").write(),
							this.chat.cancelPendingRequest(),
							this.speech.cancelPendingRequest()
					}
			}
			;
			__decorate([observable, __metadata("design:type", Object)], mp.prototype, "strings", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], mp.prototype, "enableStreamStop", void 0),
			mp = __decorate([__param(0, Zc), __param(1, qa), __param(2, Yo), __param(3, Us), __param(4, Hs), __param(5, ed), __param(6, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object, Object, Object, Object])], mp);
			let gp = class extends ViewModelBase {
					constructor(e, t, n, i) {
							super(i, n),
							this.config = e,
							this.feedbackForm = t,
							this._showWelcomeScreen = !!this.config.features.enableWelcomeScreen
					}
					get learnSegment1() {
							return this.config.strings.welcomeLearnSegment1
					}
					get learnSegment2() {
							return this.config.strings.welcomeLearnSegment3
					}
					get learnSegment3() {
							return this.config.strings.welcomeLearnSegment2
					}
					get messageItems() {
							return [{
									header: this.config.strings.welcomeMessageItemTitle1,
									body: this.config.strings.welcomeMessageItemContent1
							}, {
									header: this.config.strings.welcomeMessageItemTitle2,
									body: this.config.strings.welcomeMessageItemContent2
							}, {
									header: this.config.strings.welcomeMessageItemTitle3,
									body: this.config.strings.welcomeMessageItemContent3
							}]
					}
					openFeedbackForm() {
							this.feedbackForm.openFeedbackForm()
					}
					get privacyStatementLink() {
							return {
									title: this.config.strings.welcomeContainerPrivacyStatement,
									url: this.config.links.privacyStatement
							}
					}
					get showWelcomeScreen() {
							return this._showWelcomeScreen
					}
					get subTitleText() {
							return this.config.strings.welcomeSubtitleText
					}
					get titleText() {
							return this.config.strings.warmWelcomeTitle
					}
					get tertiaryTitleText() {
							return this.config.strings.welcomeTertiaryTitleText
					}
					get termsOfUseLink() {
							return {
									title: this.config.strings.welcomeContainerUseTerms,
									url: this.config.links.termsOfUse
							}
					}
					getSuggestions() {
							return [{
									contentOrigin: be.DeepLeo,
									messageType: Ee.Suggestion,
									offense: we.Unknown,
									text: "How does Bing use AI?",
									messageId: "",
									hiddenText: void 0
							}, {
									contentOrigin: be.DeepLeo,
									messageType: Ee.Suggestion,
									offense: we.Unknown,
									text: "What else can Bing do?",
									messageId: "",
									hiddenText: void 0
							}, {
									contentOrigin: be.DeepLeo,
									messageType: Ee.Suggestion,
									offense: we.Unknown,
									text: "What is the latest news in tech?",
									messageId: "",
									hiddenText: void 0
							}]
					}
					toggleWelcomeScreen(e) {
							return this._showWelcomeScreen = e,
							this._showWelcomeScreen
					}
			}
			;
			__decorate([observable, __metadata("design:type", Boolean)], gp.prototype, "_showWelcomeScreen", void 0),
			gp = __decorate([__param(0, Yo), __param(1, Va), __param(2, qa), __param(3, Zc), __metadata("design:paramtypes", [Object, Object, Object, Object])], gp);
			class css_directive_CSSDirective {
					createCSS() {
							return ""
					}
					createBehavior() {}
			}
			function collectStyles(e, t) {
					const n = [];
					let i = "";
					const r = [];
					for (let o = 0, s = e.length - 1; o < s; ++o) {
							i += e[o];
							let s = t[o];
							if (s instanceof css_directive_CSSDirective) {
									const e = s.createBehavior();
									s = s.createCSS(),
									e && r.push(e)
							}
							s instanceof element_styles_ElementStyles || s instanceof CSSStyleSheet ? ("" !== i.trim() && (n.push(i),
							i = ""),
							n.push(s)) : i += s
					}
					return i += e[e.length - 1],
					"" !== i.trim() && n.push(i),
					{
							styles: n,
							behaviors: r
					}
			}
			function css(e, ...t) {
					const {styles: n, behaviors: i} = collectStyles(e, t)
						, r = element_styles_ElementStyles.create(n);
					return i.length && r.withBehaviors(...i),
					r
			}
			class DesignSystemFactory {
					constructor(e) {
							this.create = e,
							this.cache = new Map,
							function(e) {
									if ("function" != typeof e)
											throw new Error(`Expected type: 'function'. Actual type: '${typeof e}'`)
							}(this.create)
					}
					get asUnkeyed() {
							return this
					}
					getDesignSystem(e) {
							if (void 0 === e)
									return this.getUnkeyedDesignSystem();
							let t = this.cache.get(e);
							return void 0 === t && (t = this.create(e),
							this.cache.set(e, t)),
							t
					}
					getUnkeyedDesignSystem() {
							return void 0 === this.system && (this.system = this.asUnkeyed.create()),
							this.system
					}
			}
			class DesignTokenManager {
					constructor() {
							this._element = document.body,
							this._tokens = null,
							this.factory = null,
							this.isInitialized = !1,
							this.current = null
					}
					get element() {
							return this._element
					}
					set element(e) {
							this._element = e
					}
					get tokens() {
							if (null === this._tokens)
									throw new Error("Design token manager must be initialized first.");
							return this._tokens
					}
					initialize() {
							this.isInitialized || (this.isInitialized = !0,
							this._tokens = this.getDesignTokens(),
							this.factory = this.createDesignSystemFactory())
					}
					activate(e) {
							if (!this.isInitialized)
									throw new Error("Design token manager must be initialized first.");
							this.current !== e && (this.current = e,
							this.updateTokens())
					}
					updateTokens() {
							if (null === this.current || null === this.factory)
									return;
							const e = this.factory.getDesignSystem(this.current);
							this.traverseDesignSystemKeys(e)
					}
					traverseDesignSystemKeys(e, t=[]) {
							Object.entries(e).forEach((([e,n])=>{
									"string" == typeof n || "number" == typeof n ? this.applyDesignTokenValue(n, t.concat(e)) : "object" == typeof n && null !== n && this.traverseDesignSystemKeys(n, t.concat(e))
							}
							))
					}
					applyDesignTokenValue(e, t) {
							if (null === this._tokens)
									return;
							let n = this._tokens;
							for (const e of t)
									n = n[e];
							if (!this.isCSSDesignToken(n))
									throw new Error(`Unable to resolve design token property path: root[${t.join("][")}]`);
							n.setValueFor(this.element, e)
					}
					isCSSDesignToken(e) {
							const t = e;
							return "object" == typeof e && null !== e && "string" == typeof t.cssCustomProperty && "function" == typeof t.setValueFor
					}
					createDesignSystemFactory() {
							return new DesignSystemFactory(this.createDesignSystem)
					}
			}
			function composedParent(e) {
					const t = e.parentElement;
					if (t)
							return t;
					{
							const t = e.getRootNode();
							if (t.host instanceof HTMLElement)
									return t.host
					}
					return null
			}
			const _p = document.createElement("div");
			class QueuedStyleSheetTarget {
					setProperty(e, t) {
							g.queueUpdate((()=>this.target.setProperty(e, t)))
					}
					removeProperty(e) {
							g.queueUpdate((()=>this.target.removeProperty(e)))
					}
			}
			class DocumentStyleSheetTarget extends QueuedStyleSheetTarget {
					constructor() {
							super();
							const e = new CSSStyleSheet;
							this.target = e.cssRules[e.insertRule(":root{}")].style,
							document.adoptedStyleSheets = [...document.adoptedStyleSheets, e]
					}
			}
			class HeadStyleElementStyleSheetTarget extends QueuedStyleSheetTarget {
					constructor() {
							super(),
							this.style = document.createElement("style"),
							document.head.appendChild(this.style);
							const {sheet: e} = this.style;
							if (e) {
									const t = e.insertRule(":root{}", e.cssRules.length);
									this.target = e.cssRules[t].style
							}
					}
			}
			class StyleElementStyleSheetTarget {
					constructor(e) {
							this.store = new Map,
							this.target = null;
							const t = e.$fastController;
							this.style = document.createElement("style"),
							t.addStyles(this.style),
							_.getNotifier(t).subscribe(this, "isConnected"),
							this.handleChange(t, "isConnected")
					}
					targetChanged() {
							if (null !== this.target)
									for (const [e,t] of this.store.entries())
											this.target.setProperty(e, t)
					}
					setProperty(e, t) {
							this.store.set(e, t),
							g.queueUpdate((()=>{
									null !== this.target && this.target.setProperty(e, t)
							}
							))
					}
					removeProperty(e) {
							this.store.delete(e),
							g.queueUpdate((()=>{
									null !== this.target && this.target.removeProperty(e)
							}
							))
					}
					handleChange(e, t) {
							const {sheet: n} = this.style;
							if (n) {
									const e = n.insertRule(":host{}", n.cssRules.length);
									this.target = n.cssRules[e].style
							} else
									this.target = null
					}
			}
			tslib_es6_decorate([observable], StyleElementStyleSheetTarget.prototype, "target", void 0);
			class ElementStyleSheetTarget {
					constructor(e) {
							this.target = e.style
					}
					setProperty(e, t) {
							g.queueUpdate((()=>this.target.setProperty(e, t)))
					}
					removeProperty(e) {
							g.queueUpdate((()=>this.target.removeProperty(e)))
					}
			}
			class RootStyleSheetTarget {
					setProperty(e, t) {
							RootStyleSheetTarget.properties[e] = t;
							for (const n of RootStyleSheetTarget.roots.values())
									vp.getOrCreate(RootStyleSheetTarget.normalizeRoot(n)).setProperty(e, t)
					}
					removeProperty(e) {
							delete RootStyleSheetTarget.properties[e];
							for (const t of RootStyleSheetTarget.roots.values())
									vp.getOrCreate(RootStyleSheetTarget.normalizeRoot(t)).removeProperty(e)
					}
					static registerRoot(e) {
							const {roots: t} = RootStyleSheetTarget;
							if (!t.has(e)) {
									t.add(e);
									const n = vp.getOrCreate(this.normalizeRoot(e));
									for (const e in RootStyleSheetTarget.properties)
											n.setProperty(e, RootStyleSheetTarget.properties[e])
							}
					}
					static unregisterRoot(e) {
							const {roots: t} = RootStyleSheetTarget;
							if (t.has(e)) {
									t.delete(e);
									const n = vp.getOrCreate(RootStyleSheetTarget.normalizeRoot(e));
									for (const e in RootStyleSheetTarget.properties)
											n.removeProperty(e)
							}
					}
					static normalizeRoot(e) {
							return e === _p ? document : e
					}
			}
			RootStyleSheetTarget.roots = new Set,
			RootStyleSheetTarget.properties = {};
			const fp = new WeakMap
				, yp = g.supportsAdoptedStyleSheets ? class extends QueuedStyleSheetTarget {
					constructor(e) {
							super();
							const t = new CSSStyleSheet;
							this.target = t.cssRules[t.insertRule(":host{}")].style,
							e.$fastController.addStyles(element_styles_ElementStyles.create([t]))
					}
			}
			: StyleElementStyleSheetTarget
				, vp = Object.freeze({
					getOrCreate(e) {
							if (fp.has(e))
									return fp.get(e);
							let t;
							return e === _p ? t = new RootStyleSheetTarget : e instanceof Document ? t = g.supportsAdoptedStyleSheets ? new DocumentStyleSheetTarget : new HeadStyleElementStyleSheetTarget : t = e instanceof w ? new yp(e) : new ElementStyleSheetTarget(e),
							fp.set(e, t),
							t
					}
			});
			class DesignTokenImpl extends css_directive_CSSDirective {
					constructor(e) {
							super(),
							this.subscribers = new WeakMap,
							this._appliedTo = new Set,
							this.name = e.name,
							null !== e.cssCustomPropertyName && (this.cssCustomProperty = `--${e.cssCustomPropertyName}`,
							this.cssVar = `var(${this.cssCustomProperty})`),
							this.id = DesignTokenImpl.uniqueId(),
							DesignTokenImpl.tokensById.set(this.id, this)
					}
					get appliedTo() {
							return [...this._appliedTo]
					}
					static from(e) {
							return new DesignTokenImpl({
									name: "string" == typeof e ? e : e.name,
									cssCustomPropertyName: "string" == typeof e ? e : void 0 === e.cssCustomPropertyName ? e.name : e.cssCustomPropertyName
							})
					}
					static isCSSDesignToken(e) {
							return "string" == typeof e.cssCustomProperty
					}
					static isDerivedDesignTokenValue(e) {
							return "function" == typeof e
					}
					static getTokenById(e) {
							return DesignTokenImpl.tokensById.get(e)
					}
					getOrCreateSubscriberSet(e=this) {
							return this.subscribers.get(e) || this.subscribers.set(e, new Set) && this.subscribers.get(e)
					}
					createCSS() {
							return this.cssVar || ""
					}
					getValueFor(e) {
							const t = DesignTokenNode.getOrCreate(e).get(this);
							if (void 0 !== t)
									return t;
							throw new Error(`Value could not be retrieved for token named "${this.name}". Ensure the value is set for ${e} or an ancestor of ${e}.`)
					}
					setValueFor(e, t) {
							return this._appliedTo.add(e),
							t instanceof DesignTokenImpl && (t = this.alias(t)),
							DesignTokenNode.getOrCreate(e).set(this, t),
							this
					}
					deleteValueFor(e) {
							return this._appliedTo.delete(e),
							DesignTokenNode.existsFor(e) && DesignTokenNode.getOrCreate(e).delete(this),
							this
					}
					withDefault(e) {
							return this.setValueFor(_p, e),
							this
					}
					subscribe(e, t) {
							const n = this.getOrCreateSubscriberSet(t);
							t && !DesignTokenNode.existsFor(t) && DesignTokenNode.getOrCreate(t),
							n.has(e) || n.add(e)
					}
					unsubscribe(e, t) {
							const n = this.subscribers.get(t || this);
							n && n.has(e) && n.delete(e)
					}
					notify(e) {
							const t = Object.freeze({
									token: this,
									target: e
							});
							this.subscribers.has(this) && this.subscribers.get(this).forEach((e=>e.handleChange(t))),
							this.subscribers.has(e) && this.subscribers.get(e).forEach((e=>e.handleChange(t)))
					}
					alias(e) {
							return t=>e.getValueFor(t)
					}
			}
			DesignTokenImpl.uniqueId = (()=>{
					let e = 0;
					return ()=>(e++,
					e.toString(16))
			}
			)(),
			DesignTokenImpl.tokensById = new Map;
			class DesignTokenBindingObserver {
					constructor(e, t, n) {
							this.source = e,
							this.token = t,
							this.node = n,
							this.dependencies = new Set,
							this.observer = _.binding(e, this, !1),
							this.observer.handleChange = this.observer.call,
							this.handleChange()
					}
					disconnect() {
							this.observer.disconnect()
					}
					handleChange() {
							this.node.store.set(this.token, this.observer.observe(this.node.target, y))
					}
			}
			class Store {
					constructor() {
							this.values = new Map
					}
					set(e, t) {
							this.values.get(e) !== t && (this.values.set(e, t),
							_.getNotifier(this).notify(e.id))
					}
					get(e) {
							return _.track(this, e.id),
							this.values.get(e)
					}
					delete(e) {
							this.values.delete(e)
					}
					all() {
							return this.values.entries()
					}
			}
			const bp = new WeakMap
				, Sp = new WeakMap;
			class DesignTokenNode {
					constructor(e) {
							this.target = e,
							this.store = new Store,
							this.children = [],
							this.assignedValues = new Map,
							this.reflecting = new Set,
							this.bindingObservers = new Map,
							this.tokenValueChangeHandler = {
									handleChange: (e,t)=>{
											const n = DesignTokenImpl.getTokenById(t);
											if (n && (n.notify(this.target),
											DesignTokenImpl.isCSSDesignToken(n))) {
													const t = this.parent
														, i = this.isReflecting(n);
													if (t) {
															const r = t.get(n)
																, o = e.get(n);
															r === o || i ? r === o && i && this.stopReflectToCSS(n) : this.reflectToCSS(n)
													} else
															i || this.reflectToCSS(n)
											}
									}
							},
							bp.set(e, this),
							_.getNotifier(this.store).subscribe(this.tokenValueChangeHandler),
							e instanceof w ? e.$fastController.addBehaviors([this]) : e.isConnected && this.bind()
					}
					static getOrCreate(e) {
							return bp.get(e) || new DesignTokenNode(e)
					}
					static existsFor(e) {
							return bp.has(e)
					}
					static findParent(e) {
							if (_p !== e.target) {
									let t = composedParent(e.target);
									for (; null !== t; ) {
											if (bp.has(t))
													return bp.get(t);
											t = composedParent(t)
									}
									return DesignTokenNode.getOrCreate(_p)
							}
							return null
					}
					static findClosestAssignedNode(e, t) {
							let n = t;
							do {
									if (n.has(e))
											return n;
									n = n.parent ? n.parent : n.target !== _p ? DesignTokenNode.getOrCreate(_p) : null
							} while (null !== n);
							return null
					}
					get parent() {
							return Sp.get(this) || null
					}
					has(e) {
							return this.assignedValues.has(e)
					}
					get(e) {
							const t = this.store.get(e);
							if (void 0 !== t)
									return t;
							const n = this.getRaw(e);
							return void 0 !== n ? (this.hydrate(e, n),
							this.get(e)) : void 0
					}
					getRaw(e) {
							var t;
							return this.assignedValues.has(e) ? this.assignedValues.get(e) : null === (t = DesignTokenNode.findClosestAssignedNode(e, this)) || void 0 === t ? void 0 : t.getRaw(e)
					}
					set(e, t) {
							DesignTokenImpl.isDerivedDesignTokenValue(this.assignedValues.get(e)) && this.tearDownBindingObserver(e),
							this.assignedValues.set(e, t),
							DesignTokenImpl.isDerivedDesignTokenValue(t) ? this.setupBindingObserver(e, t) : this.store.set(e, t)
					}
					delete(e) {
							this.assignedValues.delete(e),
							this.tearDownBindingObserver(e);
							const t = this.getRaw(e);
							t ? this.hydrate(e, t) : this.store.delete(e)
					}
					bind() {
							const e = DesignTokenNode.findParent(this);
							e && e.appendChild(this);
							for (const e of this.assignedValues.keys())
									e.notify(this.target)
					}
					unbind() {
							if (this.parent) {
									Sp.get(this).removeChild(this)
							}
					}
					appendChild(e) {
							e.parent && Sp.get(e).removeChild(e);
							const t = this.children.filter((t=>e.contains(t)));
							Sp.set(e, this),
							this.children.push(e),
							t.forEach((t=>e.appendChild(t))),
							_.getNotifier(this.store).subscribe(e);
							for (const [t,n] of this.store.all())
									e.hydrate(t, this.bindingObservers.has(t) ? this.getRaw(t) : n)
					}
					removeChild(e) {
							const t = this.children.indexOf(e);
							return -1 !== t && this.children.splice(t, 1),
							_.getNotifier(this.store).unsubscribe(e),
							e.parent === this && Sp.delete(e)
					}
					contains(e) {
							return function(e, t) {
									let n = t;
									for (; null !== n; ) {
											if (n === e)
													return !0;
											n = composedParent(n)
									}
									return !1
							}(this.target, e.target)
					}
					reflectToCSS(e) {
							this.isReflecting(e) || (this.reflecting.add(e),
							DesignTokenNode.cssCustomPropertyReflector.startReflection(e, this.target))
					}
					stopReflectToCSS(e) {
							this.isReflecting(e) && (this.reflecting.delete(e),
							DesignTokenNode.cssCustomPropertyReflector.stopReflection(e, this.target))
					}
					isReflecting(e) {
							return this.reflecting.has(e)
					}
					handleChange(e, t) {
							const n = DesignTokenImpl.getTokenById(t);
							n && this.hydrate(n, this.getRaw(n))
					}
					hydrate(e, t) {
							if (!this.has(e)) {
									const n = this.bindingObservers.get(e);
									DesignTokenImpl.isDerivedDesignTokenValue(t) ? n ? n.source !== t && (this.tearDownBindingObserver(e),
									this.setupBindingObserver(e, t)) : this.setupBindingObserver(e, t) : (n && this.tearDownBindingObserver(e),
									this.store.set(e, t))
							}
					}
					setupBindingObserver(e, t) {
							const n = new DesignTokenBindingObserver(t,e,this);
							return this.bindingObservers.set(e, n),
							n
					}
					tearDownBindingObserver(e) {
							return !!this.bindingObservers.has(e) && (this.bindingObservers.get(e).disconnect(),
							this.bindingObservers.delete(e),
							!0)
					}
			}
			DesignTokenNode.cssCustomPropertyReflector = new class {
					startReflection(e, t) {
							e.subscribe(this, t),
							this.handleChange({
									token: e,
									target: t
							})
					}
					stopReflection(e, t) {
							e.unsubscribe(this, t),
							this.remove(e, t)
					}
					handleChange(e) {
							const {token: t, target: n} = e;
							this.add(t, n)
					}
					add(e, t) {
							vp.getOrCreate(t).setProperty(e.cssCustomProperty, this.resolveCSSValue(DesignTokenNode.getOrCreate(t).get(e)))
					}
					remove(e, t) {
							vp.getOrCreate(t).removeProperty(e.cssCustomProperty)
					}
					resolveCSSValue(e) {
							return e && "function" == typeof e.createCSS ? e.createCSS() : e
					}
			}
			,
			tslib_es6_decorate([observable], DesignTokenNode.prototype, "children", void 0);
			const Cp = Object.freeze({
					create: function(e) {
							return DesignTokenImpl.from(e)
					},
					notifyConnection: e=>!(!e.isConnected || !DesignTokenNode.existsFor(e)) && (DesignTokenNode.getOrCreate(e).bind(),
					!0),
					notifyDisconnection: e=>!(e.isConnected || !DesignTokenNode.existsFor(e)) && (DesignTokenNode.getOrCreate(e).unbind(),
					!0),
					registerRoot(e=_p) {
							RootStyleSheetTarget.registerRoot(e)
					},
					unregisterRoot(e=_p) {
							RootStyleSheetTarget.unregisterRoot(e)
					}
			})
				, {create: Ep} = Cp
				, Tp = {
					colors: {
							base: {
									ambient10: Ep("cib-color-ambient-10"),
									ambient20: Ep("cib-color-ambient-20"),
									ambient30: Ep("cib-color-ambient-30"),
									ambient40: Ep("cib-color-ambient-40")
							},
							brand: {
									solid: {
											denimPlus5: Ep("cib-color-brand-solid-denim-plus-5"),
											denimPlus4: Ep("cib-color-brand-solid-denim-plus-4"),
											denimPlus3: Ep("cib-color-brand-solid-denim-plus-3"),
											denimPlus2: Ep("cib-color-brand-solid-denim-plus-2"),
											denimPlus1: Ep("cib-color-brand-solid-denim-plus-1"),
											denim: Ep("cib-color-brand-solid-denim"),
											denimMinus1: Ep("cib-color-brand-solid-denim-minus-1"),
											denimMinus2: Ep("cib-color-brand-solid-denim-minus-2"),
											denimMinus3: Ep("cib-color-brand-solid-denim-minus-3"),
											denimMinus4: Ep("cib-color-brand-solid-denim-minus-4")
									},
									gradient: {
											core: Ep("cib-color-brand-gradient-core"),
											vibrant: Ep("cib-color-brand-gradient-vibrant"),
											background: Ep("cib-color-brand-gradient-background")
									}
							},
							fill: {
									control: {
											default: Ep("cib-color-fill-control-default"),
											secondary: Ep("cib-color-fill-control-secondary"),
											tertiary: Ep("cib-color-fill-control-tertiary"),
											quaternary: Ep("cib-color-fill-control-quaternary"),
											quinary: Ep("cib-color-fill-control-quinary"),
											disabled: Ep("cib-color-fill-control-disabled"),
											inputActive: Ep("cib-color-fill-control-input-active"),
											inputInactive: Ep("cib-color-fill-control-input-inactive"),
											transparent: Ep("cib-color-fill-control-transparent")
									},
									controlAlt: {
											default: Ep("cib-color-fill-control-alt-default"),
											secondary: Ep("cib-color-fill-control-alt-secondary"),
											tertiary: Ep("cib-color-fill-control-alt-tertiary"),
											quaternary: Ep("cib-color-fill-control-alt-quaternary"),
											disabled: Ep("cib-color-fill-control-alt-disabled"),
											transparent: Ep("cib-color-fill-control-alt-transparent")
									},
									controlStrong: {
											default: Ep("cib-color-fill-control-strong-default"),
											disabled: Ep("cib-color-fill-control-strong-disabled")
									},
									subtle: {
											default: Ep("cib-color-fill-subtle-default"),
											secondary: Ep("cib-color-fill-subtle-secondary"),
											tertiary: Ep("cib-color-fill-subtle-tertiary"),
											disabled: Ep("cib-color-fill-subtle-disabled"),
											transparent: Ep("cib-color-fill-subtle-transparent")
									},
									onImage: {
											default: Ep("cib-color-fill-on-image-default"),
											secondary: Ep("cib-color-fill-on-image-secondary"),
											tertiary: Ep("cib-color-fill-on-image-tertiary"),
											disabled: Ep("cib-color-fill-on-image-disabled")
									},
									accent: {
											default: Ep("cib-color-fill-accent-default"),
											secondary: Ep("cib-color-fill-accent-secondary"),
											tertiary: Ep("cib-color-fill-accent-tertiary"),
											disabled: Ep("cib-color-fill-accent-disabled")
									},
									vibrant: {
											default: Ep("cib-color-fill-vibrant-default"),
											secondary: Ep("cib-color-fill-vibrant-secondary"),
											tertiary: Ep("cib-color-fill-vibrant-tertiary"),
											disabled: Ep("cib-color-fill-vibrant-disabled"),
											selectedText: Ep("cib-color-fill-vibrant-selected-text")
									}
							},
							stroke: {
									control: {
											default: Ep("cib-color-stroke-control-default"),
											disabled: Ep("cib-color-stroke-control-disabled"),
											elevation: Ep("cib-color-stroke-control-elevation")
									},
									controlOnAccent: {
											default: Ep("cib-color-stroke-control-on-accent-default"),
											secondary: Ep("cib-color-stroke-control-on-accent-secondary"),
											tertiary: Ep("cib-color-stroke-control-on-accent-tertiary"),
											disabled: Ep("cib-color-stroke-control-on-accent-disabled")
									},
									controlOnImage: {
											default: Ep("cib-color-stroke-control-on-image-default")
									},
									controlStrong: {
											default: Ep("cib-color-stroke-control-strong-default"),
											disabled: Ep("cib-color-stroke-control-strong-disabled")
									},
									card: {
											default: Ep("cib-color-stroke-card-default"),
											solid: Ep("cib-color-stroke-card-solid")
									},
									surface: {
											default: Ep("cib-color-stroke-surface-default"),
											flyout: Ep("cib-color-stroke-surface-flyout")
									},
									divider: {
											default: Ep("cib-color-stroke-divider-default")
									},
									focus: {
											outer: Ep("cib-color-stroke-focus-outer"),
											inner: Ep("cib-color-stroke-focus-inner")
									}
							},
							text: {
									standard: {
											primary: Ep("cib-color-text-standard-primary"),
											secondary: Ep("cib-color-text-standard-secondary"),
											tertiary: Ep("cib-color-text-standard-tertiary"),
											disabled: Ep("cib-color-text-standard-disabled")
									},
									accent: {
											primary: Ep("cib-color-text-accent-primary"),
											secondary: Ep("cib-color-text-accent-secondary"),
											tertiary: Ep("cib-color-text-accent-tertiary"),
											disabled: Ep("cib-color-text-accent-disabled")
									},
									vibrant: {
											primary: Ep("cib-color-text-vibrant-primary"),
											secondary: Ep("cib-color-text-vibrant-secondary"),
											tertiary: Ep("cib-color-text-vibrant-tertiary"),
											disabled: Ep("cib-color-text-vibrant-disabled")
									},
									onAccent: {
											primary: Ep("cib-color-text-on-accent-primary"),
											secondary: Ep("cib-color-text-on-accent-secondary"),
											disabled: Ep("cib-color-text-on-accent-disabled"),
											selected: Ep("cib-color-text-on-accent-selected")
									},
									onVibrant: {
											primary: Ep("cib-color-text-on-vibrant-primary"),
											secondary: Ep("cib-color-text-on-vibrant-secondary"),
											disabled: Ep("cib-color-text-on-vibrant-disabled")
									}
							}
					},
					icons: {
							themed: {}
					},
					shadows: {
							defaults: {
									card: Ep("cib-shadow-card"),
									cardRaised: Ep("cib-shadow-card-raised"),
									dialog: Ep("cib-shadow-dialog"),
									flyout: Ep("cib-shadow-flyout"),
									layer: Ep("cib-shadow-layer"),
									panel: Ep("cib-shadow-panel"),
									tooltip: Ep("cib-shadow-tooltip")
							},
							elevations: {
									elevation2: Ep("cib-shadow-elevation-2"),
									elevation4: Ep("cib-shadow-elevation-4"),
									elevation8: Ep("cib-shadow-elevation-8"),
									elevation16: Ep("cib-shadow-elevation-16"),
									elevation28: Ep("cib-shadow-elevation-28"),
									elevation64: Ep("cib-shadow-elevation-64")
							}
					}
			};
			function clamp(e, t, n) {
					return isNaN(e) || e <= t ? t : e >= n ? n : e
			}
			function math_utilities_normalize(e, t, n) {
					return isNaN(e) || e <= t ? 0 : e >= n ? 1 : e / (n - t)
			}
			function denormalize(e, t, n) {
					return isNaN(e) ? t : t + e * (n - t)
			}
			Math.PI;
			function roundToPrecisionSmall(e, t) {
					const n = Math.pow(10, t);
					return Math.round(e * n) / n
			}
			class color_rgba_64_ColorRGBA64 {
					constructor(e, t, n, i) {
							this.r = e,
							this.g = t,
							this.b = n,
							this.a = "number" != typeof i || isNaN(i) ? 1 : i
					}
					static fromObject(e) {
							return !e || isNaN(e.r) || isNaN(e.g) || isNaN(e.b) ? null : new color_rgba_64_ColorRGBA64(e.r,e.g,e.b,e.a)
					}
					equalValue(e) {
							return this.r === e.r && this.g === e.g && this.b === e.b && this.a === e.a
					}
					toStringHexRGB() {
							return "#" + [this.r, this.g, this.b].map(this.formatHexValue).join("")
					}
					toStringHexRGBA() {
							return this.toStringHexRGB() + this.formatHexValue(this.a)
					}
					toStringHexARGB() {
							return "#" + [this.a, this.r, this.g, this.b].map(this.formatHexValue).join("")
					}
					toStringWebRGB() {
							return `rgb(${Math.round(denormalize(this.r, 0, 255))},${Math.round(denormalize(this.g, 0, 255))},${Math.round(denormalize(this.b, 0, 255))})`
					}
					toStringWebRGBA() {
							return `rgba(${Math.round(denormalize(this.r, 0, 255))},${Math.round(denormalize(this.g, 0, 255))},${Math.round(denormalize(this.b, 0, 255))},${clamp(this.a, 0, 1)})`
					}
					roundToPrecision(e) {
							return new color_rgba_64_ColorRGBA64(roundToPrecisionSmall(this.r, e),roundToPrecisionSmall(this.g, e),roundToPrecisionSmall(this.b, e),roundToPrecisionSmall(this.a, e))
					}
					clamp() {
							return new color_rgba_64_ColorRGBA64(clamp(this.r, 0, 1),clamp(this.g, 0, 1),clamp(this.b, 0, 1),clamp(this.a, 0, 1))
					}
					toObject() {
							return {
									r: this.r,
									g: this.g,
									b: this.b,
									a: this.a
							}
					}
					formatHexValue(e) {
							return function(e) {
									const t = Math.round(clamp(e, 0, 255)).toString(16);
									return 1 === t.length ? "0" + t : t
							}(denormalize(e, 0, 255))
					}
			}
			const Ip = {
					aliceblue: {
							r: .941176,
							g: .972549,
							b: 1
					},
					antiquewhite: {
							r: .980392,
							g: .921569,
							b: .843137
					},
					aqua: {
							r: 0,
							g: 1,
							b: 1
					},
					aquamarine: {
							r: .498039,
							g: 1,
							b: .831373
					},
					azure: {
							r: .941176,
							g: 1,
							b: 1
					},
					beige: {
							r: .960784,
							g: .960784,
							b: .862745
					},
					bisque: {
							r: 1,
							g: .894118,
							b: .768627
					},
					black: {
							r: 0,
							g: 0,
							b: 0
					},
					blanchedalmond: {
							r: 1,
							g: .921569,
							b: .803922
					},
					blue: {
							r: 0,
							g: 0,
							b: 1
					},
					blueviolet: {
							r: .541176,
							g: .168627,
							b: .886275
					},
					brown: {
							r: .647059,
							g: .164706,
							b: .164706
					},
					burlywood: {
							r: .870588,
							g: .721569,
							b: .529412
					},
					cadetblue: {
							r: .372549,
							g: .619608,
							b: .627451
					},
					chartreuse: {
							r: .498039,
							g: 1,
							b: 0
					},
					chocolate: {
							r: .823529,
							g: .411765,
							b: .117647
					},
					coral: {
							r: 1,
							g: .498039,
							b: .313725
					},
					cornflowerblue: {
							r: .392157,
							g: .584314,
							b: .929412
					},
					cornsilk: {
							r: 1,
							g: .972549,
							b: .862745
					},
					crimson: {
							r: .862745,
							g: .078431,
							b: .235294
					},
					cyan: {
							r: 0,
							g: 1,
							b: 1
					},
					darkblue: {
							r: 0,
							g: 0,
							b: .545098
					},
					darkcyan: {
							r: 0,
							g: .545098,
							b: .545098
					},
					darkgoldenrod: {
							r: .721569,
							g: .52549,
							b: .043137
					},
					darkgray: {
							r: .662745,
							g: .662745,
							b: .662745
					},
					darkgreen: {
							r: 0,
							g: .392157,
							b: 0
					},
					darkgrey: {
							r: .662745,
							g: .662745,
							b: .662745
					},
					darkkhaki: {
							r: .741176,
							g: .717647,
							b: .419608
					},
					darkmagenta: {
							r: .545098,
							g: 0,
							b: .545098
					},
					darkolivegreen: {
							r: .333333,
							g: .419608,
							b: .184314
					},
					darkorange: {
							r: 1,
							g: .54902,
							b: 0
					},
					darkorchid: {
							r: .6,
							g: .196078,
							b: .8
					},
					darkred: {
							r: .545098,
							g: 0,
							b: 0
					},
					darksalmon: {
							r: .913725,
							g: .588235,
							b: .478431
					},
					darkseagreen: {
							r: .560784,
							g: .737255,
							b: .560784
					},
					darkslateblue: {
							r: .282353,
							g: .239216,
							b: .545098
					},
					darkslategray: {
							r: .184314,
							g: .309804,
							b: .309804
					},
					darkslategrey: {
							r: .184314,
							g: .309804,
							b: .309804
					},
					darkturquoise: {
							r: 0,
							g: .807843,
							b: .819608
					},
					darkviolet: {
							r: .580392,
							g: 0,
							b: .827451
					},
					deeppink: {
							r: 1,
							g: .078431,
							b: .576471
					},
					deepskyblue: {
							r: 0,
							g: .74902,
							b: 1
					},
					dimgray: {
							r: .411765,
							g: .411765,
							b: .411765
					},
					dimgrey: {
							r: .411765,
							g: .411765,
							b: .411765
					},
					dodgerblue: {
							r: .117647,
							g: .564706,
							b: 1
					},
					firebrick: {
							r: .698039,
							g: .133333,
							b: .133333
					},
					floralwhite: {
							r: 1,
							g: .980392,
							b: .941176
					},
					forestgreen: {
							r: .133333,
							g: .545098,
							b: .133333
					},
					fuchsia: {
							r: 1,
							g: 0,
							b: 1
					},
					gainsboro: {
							r: .862745,
							g: .862745,
							b: .862745
					},
					ghostwhite: {
							r: .972549,
							g: .972549,
							b: 1
					},
					gold: {
							r: 1,
							g: .843137,
							b: 0
					},
					goldenrod: {
							r: .854902,
							g: .647059,
							b: .12549
					},
					gray: {
							r: .501961,
							g: .501961,
							b: .501961
					},
					green: {
							r: 0,
							g: .501961,
							b: 0
					},
					greenyellow: {
							r: .678431,
							g: 1,
							b: .184314
					},
					grey: {
							r: .501961,
							g: .501961,
							b: .501961
					},
					honeydew: {
							r: .941176,
							g: 1,
							b: .941176
					},
					hotpink: {
							r: 1,
							g: .411765,
							b: .705882
					},
					indianred: {
							r: .803922,
							g: .360784,
							b: .360784
					},
					indigo: {
							r: .294118,
							g: 0,
							b: .509804
					},
					ivory: {
							r: 1,
							g: 1,
							b: .941176
					},
					khaki: {
							r: .941176,
							g: .901961,
							b: .54902
					},
					lavender: {
							r: .901961,
							g: .901961,
							b: .980392
					},
					lavenderblush: {
							r: 1,
							g: .941176,
							b: .960784
					},
					lawngreen: {
							r: .486275,
							g: .988235,
							b: 0
					},
					lemonchiffon: {
							r: 1,
							g: .980392,
							b: .803922
					},
					lightblue: {
							r: .678431,
							g: .847059,
							b: .901961
					},
					lightcoral: {
							r: .941176,
							g: .501961,
							b: .501961
					},
					lightcyan: {
							r: .878431,
							g: 1,
							b: 1
					},
					lightgoldenrodyellow: {
							r: .980392,
							g: .980392,
							b: .823529
					},
					lightgray: {
							r: .827451,
							g: .827451,
							b: .827451
					},
					lightgreen: {
							r: .564706,
							g: .933333,
							b: .564706
					},
					lightgrey: {
							r: .827451,
							g: .827451,
							b: .827451
					},
					lightpink: {
							r: 1,
							g: .713725,
							b: .756863
					},
					lightsalmon: {
							r: 1,
							g: .627451,
							b: .478431
					},
					lightseagreen: {
							r: .12549,
							g: .698039,
							b: .666667
					},
					lightskyblue: {
							r: .529412,
							g: .807843,
							b: .980392
					},
					lightslategray: {
							r: .466667,
							g: .533333,
							b: .6
					},
					lightslategrey: {
							r: .466667,
							g: .533333,
							b: .6
					},
					lightsteelblue: {
							r: .690196,
							g: .768627,
							b: .870588
					},
					lightyellow: {
							r: 1,
							g: 1,
							b: .878431
					},
					lime: {
							r: 0,
							g: 1,
							b: 0
					},
					limegreen: {
							r: .196078,
							g: .803922,
							b: .196078
					},
					linen: {
							r: .980392,
							g: .941176,
							b: .901961
					},
					magenta: {
							r: 1,
							g: 0,
							b: 1
					},
					maroon: {
							r: .501961,
							g: 0,
							b: 0
					},
					mediumaquamarine: {
							r: .4,
							g: .803922,
							b: .666667
					},
					mediumblue: {
							r: 0,
							g: 0,
							b: .803922
					},
					mediumorchid: {
							r: .729412,
							g: .333333,
							b: .827451
					},
					mediumpurple: {
							r: .576471,
							g: .439216,
							b: .858824
					},
					mediumseagreen: {
							r: .235294,
							g: .701961,
							b: .443137
					},
					mediumslateblue: {
							r: .482353,
							g: .407843,
							b: .933333
					},
					mediumspringgreen: {
							r: 0,
							g: .980392,
							b: .603922
					},
					mediumturquoise: {
							r: .282353,
							g: .819608,
							b: .8
					},
					mediumvioletred: {
							r: .780392,
							g: .082353,
							b: .521569
					},
					midnightblue: {
							r: .098039,
							g: .098039,
							b: .439216
					},
					mintcream: {
							r: .960784,
							g: 1,
							b: .980392
					},
					mistyrose: {
							r: 1,
							g: .894118,
							b: .882353
					},
					moccasin: {
							r: 1,
							g: .894118,
							b: .709804
					},
					navajowhite: {
							r: 1,
							g: .870588,
							b: .678431
					},
					navy: {
							r: 0,
							g: 0,
							b: .501961
					},
					oldlace: {
							r: .992157,
							g: .960784,
							b: .901961
					},
					olive: {
							r: .501961,
							g: .501961,
							b: 0
					},
					olivedrab: {
							r: .419608,
							g: .556863,
							b: .137255
					},
					orange: {
							r: 1,
							g: .647059,
							b: 0
					},
					orangered: {
							r: 1,
							g: .270588,
							b: 0
					},
					orchid: {
							r: .854902,
							g: .439216,
							b: .839216
					},
					palegoldenrod: {
							r: .933333,
							g: .909804,
							b: .666667
					},
					palegreen: {
							r: .596078,
							g: .984314,
							b: .596078
					},
					paleturquoise: {
							r: .686275,
							g: .933333,
							b: .933333
					},
					palevioletred: {
							r: .858824,
							g: .439216,
							b: .576471
					},
					papayawhip: {
							r: 1,
							g: .937255,
							b: .835294
					},
					peachpuff: {
							r: 1,
							g: .854902,
							b: .72549
					},
					peru: {
							r: .803922,
							g: .521569,
							b: .247059
					},
					pink: {
							r: 1,
							g: .752941,
							b: .796078
					},
					plum: {
							r: .866667,
							g: .627451,
							b: .866667
					},
					powderblue: {
							r: .690196,
							g: .878431,
							b: .901961
					},
					purple: {
							r: .501961,
							g: 0,
							b: .501961
					},
					red: {
							r: 1,
							g: 0,
							b: 0
					},
					rosybrown: {
							r: .737255,
							g: .560784,
							b: .560784
					},
					royalblue: {
							r: .254902,
							g: .411765,
							b: .882353
					},
					saddlebrown: {
							r: .545098,
							g: .270588,
							b: .07451
					},
					salmon: {
							r: .980392,
							g: .501961,
							b: .447059
					},
					sandybrown: {
							r: .956863,
							g: .643137,
							b: .376471
					},
					seagreen: {
							r: .180392,
							g: .545098,
							b: .341176
					},
					seashell: {
							r: 1,
							g: .960784,
							b: .933333
					},
					sienna: {
							r: .627451,
							g: .321569,
							b: .176471
					},
					silver: {
							r: .752941,
							g: .752941,
							b: .752941
					},
					skyblue: {
							r: .529412,
							g: .807843,
							b: .921569
					},
					slateblue: {
							r: .415686,
							g: .352941,
							b: .803922
					},
					slategray: {
							r: .439216,
							g: .501961,
							b: .564706
					},
					slategrey: {
							r: .439216,
							g: .501961,
							b: .564706
					},
					snow: {
							r: 1,
							g: .980392,
							b: .980392
					},
					springgreen: {
							r: 0,
							g: 1,
							b: .498039
					},
					steelblue: {
							r: .27451,
							g: .509804,
							b: .705882
					},
					tan: {
							r: .823529,
							g: .705882,
							b: .54902
					},
					teal: {
							r: 0,
							g: .501961,
							b: .501961
					},
					thistle: {
							r: .847059,
							g: .74902,
							b: .847059
					},
					tomato: {
							r: 1,
							g: .388235,
							b: .278431
					},
					transparent: {
							r: 0,
							g: 0,
							b: 0,
							a: 0
					},
					turquoise: {
							r: .25098,
							g: .878431,
							b: .815686
					},
					violet: {
							r: .933333,
							g: .509804,
							b: .933333
					},
					wheat: {
							r: .960784,
							g: .870588,
							b: .701961
					},
					white: {
							r: 1,
							g: 1,
							b: 1
					},
					whitesmoke: {
							r: .960784,
							g: .960784,
							b: .960784
					},
					yellow: {
							r: 1,
							g: 1,
							b: 0
					},
					yellowgreen: {
							r: .603922,
							g: .803922,
							b: .196078
					}
			}
				, wp = /^rgb\(\s*((?:(?:25[0-5]|2[0-4]\d|1\d\d|\d{1,2})\s*,\s*){2}(?:25[0-5]|2[0-4]\d|1\d\d|\d{1,2})\s*)\)$/i
				, Ap = /^rgba\(\s*((?:(?:25[0-5]|2[0-4]\d|1\d\d|\d{1,2})\s*,\s*){3}(?:0|1|0?\.\d*)\s*)\)$/i
				, Rp = /^#((?:[0-9a-f]{6}|[0-9a-f]{3}))$/i
				, xp = /^#((?:[0-9a-f]{8}|[0-9a-f]{4}))$/i;
			function isColorStringHexRGBA(e) {
					return function(e) {
							return xp.test(e)
					}(e)
			}
			function parseColor(e) {
					const t = e.toLowerCase();
					return function(e) {
							return Rp.test(e)
					}(t) ? function(e) {
							const t = Rp.exec(e);
							if (null === t)
									return null;
							let n = t[1];
							if (3 === n.length) {
									const e = n.charAt(0)
										, t = n.charAt(1)
										, i = n.charAt(2);
									n = e.concat(e, t, t, i, i)
							}
							const i = parseInt(n, 16);
							return isNaN(i) ? null : new color_rgba_64_ColorRGBA64(math_utilities_normalize((16711680 & i) >>> 16, 0, 255),math_utilities_normalize((65280 & i) >>> 8, 0, 255),math_utilities_normalize(255 & i, 0, 255),1)
					}(t) : isColorStringHexRGBA(t) ? function(e) {
							const t = xp.exec(e);
							if (null === t)
									return null;
							let n = t[1];
							if (4 === n.length) {
									const e = n.charAt(0)
										, t = n.charAt(1)
										, i = n.charAt(2)
										, r = n.charAt(3);
									n = e.concat(e, t, t, i, i, r, r)
							}
							const i = parseInt(n, 16);
							return isNaN(i) ? null : new color_rgba_64_ColorRGBA64(math_utilities_normalize((16711680 & i) >>> 16, 0, 255),math_utilities_normalize((65280 & i) >>> 8, 0, 255),math_utilities_normalize(255 & i, 0, 255),math_utilities_normalize((4278190080 & i) >>> 24, 0, 255))
					}(t) : function(e) {
							return wp.test(e)
					}(t) ? function(e) {
							const t = wp.exec(e);
							if (null === t)
									return null;
							const n = t[1].split(",");
							return new color_rgba_64_ColorRGBA64(math_utilities_normalize(Number(n[0]), 0, 255),math_utilities_normalize(Number(n[1]), 0, 255),math_utilities_normalize(Number(n[2]), 0, 255),1)
					}(t) : function(e) {
							return Ap.test(e)
					}(t) ? function(e) {
							const t = Ap.exec(e);
							if (null === t)
									return null;
							const n = t[1].split(",");
							return 4 === n.length ? new color_rgba_64_ColorRGBA64(math_utilities_normalize(Number(n[0]), 0, 255),math_utilities_normalize(Number(n[1]), 0, 255),math_utilities_normalize(Number(n[2]), 0, 255),Number(n[3])) : null
					}(t) : function(e) {
							return Ip.hasOwnProperty(e)
					}(t) ? function(e) {
							const t = Ip[e.toLowerCase()];
							return t ? new color_rgba_64_ColorRGBA64(t.r,t.g,t.b,t.hasOwnProperty("a") ? t.a : void 0) : null
					}(t) : null
			}
			function hexToRGBA(e, t) {
					const {r: n, g: i, b: r} = parseColor(e);
					return color_rgba_64_ColorRGBA64.fromObject({
							r: n,
							g: i,
							b: r,
							a: t
					}).toStringWebRGBA()
			}
			function control(e) {
					return {
							default: hexToRGBA(e.ambient20, .08),
							secondary: hexToRGBA(e.ambient20, .11),
							tertiary: hexToRGBA(e.ambient20, .04),
							quaternary: hexToRGBA(e.ambient20, .19),
							quinary: hexToRGBA(e.ambient20, .25),
							disabled: hexToRGBA(e.ambient20, .03),
							inputActive: "#FFFFFF",
							inputInactive: hexToRGBA(e.ambient20, .08),
							transparent: "transparent"
					}
			}
			function controlAlt(e) {
					return {
							default: hexToRGBA(e.ambient20, .07),
							secondary: hexToRGBA(e.ambient20, .07),
							tertiary: hexToRGBA(e.ambient20, .11),
							quaternary: hexToRGBA(e.ambient20, .04),
							disabled: hexToRGBA(e.ambient20, .03),
							transparent: "transparent"
					}
			}
			function controlStrong(e) {
					return {
							default: hexToRGBA(e.ambient10, .61),
							disabled: hexToRGBA(e.ambient10, .3)
					}
			}
			function subtle(e) {
					return {
							default: "transparent",
							secondary: hexToRGBA(e.ambient20, .07),
							tertiary: hexToRGBA(e.ambient20, .04),
							disabled: "transparent",
							transparent: "transparent"
					}
			}
			function fill(e) {
					return {
							control: control(e),
							controlAlt: controlAlt(e),
							controlStrong: controlStrong(e),
							subtle: subtle(e),
							onImage: {
									default: hexToRGBA("#FFFFFF", .79),
									secondary: "#EEF3FF",
									tertiary: "#E3ECFF",
									disabled: "transparent"
							},
							accent: {
									default: "#4272DB",
									secondary: "#78A8FF",
									tertiary: "#78A8FF",
									disabled: hexToRGBA("#000000", .2169)
							},
							vibrant: {
									default: "#6C9CFF",
									secondary: "#6191F4",
									tertiary: "#78A8FF",
									disabled: hexToRGBA("#FFFFFF", .1581),
									selectedText: "#6C9CFF"
							}
					}
			}
			function colors_stroke_control(e) {
					return {
							default: hexToRGBA(e.ambient20, .04),
							disabled: hexToRGBA(e.ambient20, .03),
							elevation: hexToRGBA("#FFFFFF", .08)
					}
			}
			function controlOnAccent(e) {
					return {
							default: "transparent",
							secondary: hexToRGBA(e.ambient10, .35),
							tertiary: hexToRGBA(e.ambient10, .35),
							disabled: "transparent"
					}
			}
			function stroke(e) {
					return {
							control: colors_stroke_control(e),
							controlOnAccent: controlOnAccent(e),
							controlOnImage: {
									default: "#0000006B"
							},
							controlStrong: {
									default: "#FFFFFF8B",
									disabled: "#FFFFFF28"
							},
							card: {
									default: "#00000019",
									solid: "#1C1C1CFF"
							},
							surface: {
									default: "#FFFFFF15",
									flyout: "#00000033"
							},
							divider: {
									default: "#FFFFFF15"
							},
							focus: {
									outer: "#FFFFFFFF",
									inner: "#000000B3"
							}
					}
			}
			function colors_text_accent(e) {
					return {
							primary: "#1040A9",
							secondary: "#04349D",
							tertiary: "#1B4BB4",
							disabled: hexToRGBA(e.ambient10, .3)
					}
			}
			function colors_text_text(e) {
					return {
							standard: {
									primary: "#FFFFFF",
									secondary: "rgba(255, 255, 255, 0.786)",
									tertiary: "rgba(255, 255, 255, 0.5442)",
									disabled: "rgba(255, 255, 255, 0.3628)"
							},
							accent: colors_text_accent(e),
							vibrant: {
									primary: "#9FCFFF",
									secondary: "#94C4F4",
									tertiary: "#AADAFF",
									disabled: hexToRGBA("#FFFFFF", .3628)
							},
							onAccent: {
									primary: "#000000",
									secondary: hexToRGBA("#000000", .5),
									disabled: hexToRGBA("#FFFFFF", .5302),
									selected: "#FFFFFF"
							},
							onVibrant: {
									primary: "#FFFFFF",
									secondary: hexToRGBA("#FFFFFF", .3),
									disabled: "#FFFFFF"
							}
					}
			}
			function colors() {
					const e = {
							ambient10: "#2B3540",
							ambient20: "#2555BE",
							ambient30: "#C3C9D7",
							ambient40: "#F9FBFF"
					};
					return {
							base: e,
							brand: {
									solid: {
											denimPlus5: "#EFF3FF",
											denimPlus4: "#D1DBFA",
											denimPlus3: "#A2B7F4",
											denimPlus2: "#7492EF",
											denimPlus1: "#456EE9",
											denim: "#174AE4",
											denimMinus1: "#123BB6",
											denimMinus2: "#0E2C89",
											denimMinus3: "#091E5B",
											denimMinus4: "#050F2E"
									},
									gradient: {
											core: "linear-gradient(81.62deg, #2870EA 8.72%, #1B4AEF 85.01%)",
											vibrant: "linear-gradient(81.09deg, #18C1ED 8.85%, #3495EA 48.98%, #2161EF 89.11%)",
											background: "radial-gradient(61.04% 89.69% at 100% 100%, rgba(200, 250, 255, 0.08) 0%, rgba(28, 210, 229, 0.08) 40.63%, rgba(28, 210, 229, 0) 100%), radial-gradient(43.78% 64.34% at 60.31% 100%, rgba(23, 74, 228, 0.08) 0%, rgba(23, 74, 228, 0) 100%), linear-gradient(180deg, rgba(23, 74, 228, 0) 29.44%, rgba(23, 74, 228, 0.06) 100%), linear-gradient(90deg, #F3F3F7 0%, #EBF0F9 100%)"
									}
							},
							fill: fill(e),
							stroke: stroke(e),
							text: colors_text_text(e)
					}
			}
			function shadows() {
					const e = {
							elevation2: "0px 0.15px 0.45px rgba(0, 0, 0, 0.12), 0px 0.8px 1.8px rgba(0, 0, 0, 0.16)",
							elevation4: "0px 0.3px 0.9px rgba(0, 0, 0, 0.12), 0px 1.6px 3.6px rgba(0, 0, 0, 0.16)",
							elevation8: "0px 0.6px 1.8px rgba(0, 0, 0, 0.12), 0px 3.2px 7.2px rgba(0, 0, 0, 0.16)",
							elevation16: "0px 1.2px 3.6px rgba(0, 0, 0, 0.16), 0px 6.4px 14.4px rgba(0, 0, 0, 0.2)",
							elevation28: "0px 14px 28px rgba(0, 0, 0, 0.24), 0px 0px 8px rgba(0, 0, 0, 0.2)",
							elevation64: "0px 4.8px 14.4px rgba(0, 0, 0, 0.18), 0px 25.6px 57.6px rgba(0, 0, 0, 0.22)"
					};
					return {
							defaults: {
									card: e.elevation4,
									cardRaised: e.elevation8,
									dialog: e.elevation64,
									flyout: e.elevation16,
									layer: e.elevation2,
									panel: e.elevation28,
									tooltip: e.elevation16
							},
							elevations: e
					}
			}
			function colors_fill_control(e) {
					return {
							default: hexToRGBA(e.ambient20, .08),
							secondary: hexToRGBA(e.ambient20, .11),
							tertiary: hexToRGBA(e.ambient20, .04),
							quaternary: hexToRGBA(e.ambient20, .19),
							quinary: hexToRGBA(e.ambient20, .25),
							disabled: hexToRGBA(e.ambient20, .03),
							inputActive: "#FFFFFF",
							inputInactive: hexToRGBA(e.ambient20, .08),
							transparent: "transparent"
					}
			}
			function colors_fill_controlAlt(e) {
					return {
							default: hexToRGBA(e.ambient20, .07),
							secondary: hexToRGBA(e.ambient20, .07),
							tertiary: hexToRGBA(e.ambient20, .11),
							quaternary: hexToRGBA(e.ambient20, .04),
							disabled: hexToRGBA(e.ambient20, .03),
							transparent: "transparent"
					}
			}
			function colors_fill_controlStrong(e) {
					return {
							default: hexToRGBA(e.ambient10, .61),
							disabled: hexToRGBA(e.ambient10, .3)
					}
			}
			function colors_fill_subtle(e) {
					return {
							default: "transparent",
							secondary: hexToRGBA(e.ambient20, .07),
							tertiary: hexToRGBA(e.ambient20, .04),
							disabled: "transparent",
							transparent: "transparent"
					}
			}
			function colors_fill_fill(e) {
					return {
							control: colors_fill_control(e),
							controlAlt: colors_fill_controlAlt(e),
							controlStrong: colors_fill_controlStrong(e),
							subtle: colors_fill_subtle(e),
							onImage: {
									default: hexToRGBA("#FFFFFF", .79),
									secondary: "#EEF3FF",
									tertiary: "#E3ECFF",
									disabled: "transparent"
							},
							accent: {
									default: "#4272DB",
									secondary: "#3767D0",
									tertiary: "#3767D0",
									disabled: hexToRGBA("#000000", .2169)
							},
							vibrant: {
									default: "#6C9CFF",
									secondary: "#6191F4",
									tertiary: "#78A8FF",
									disabled: hexToRGBA("#FFFFFF", .1581),
									selectedText: "#6C9CFF"
							}
					}
			}
			function dark_colors_stroke_control(e) {
					return {
							default: hexToRGBA(e.ambient20, .04),
							disabled: hexToRGBA(e.ambient20, .03),
							elevation: hexToRGBA("#FFFFFF", .08)
					}
			}
			function colors_stroke_controlOnAccent(e) {
					return {
							default: "transparent",
							secondary: hexToRGBA(e.ambient10, .35),
							tertiary: hexToRGBA(e.ambient10, .35),
							disabled: "transparent"
					}
			}
			function colors_stroke_stroke(e) {
					return {
							control: dark_colors_stroke_control(e),
							controlOnAccent: colors_stroke_controlOnAccent(e),
							controlOnImage: {
									default: "#0000006B"
							},
							controlStrong: {
									default: "#FFFFFF8B",
									disabled: "#FFFFFF28"
							},
							card: {
									default: "#00000019",
									solid: "#1C1C1CFF"
							},
							surface: {
									default: "#FFFFFF15",
									flyout: "#00000033"
							},
							divider: {
									default: "#FFFFFF15"
							},
							focus: {
									outer: "#FFFFFFFF",
									inner: "#000000B3"
							}
					}
			}
			function dark_colors_text_accent(e) {
					return {
							primary: "#1040A9",
							secondary: "#04349D",
							tertiary: "#1B4BB4",
							disabled: hexToRGBA(e.ambient10, .3)
					}
			}
			function dark_colors_text_text(e) {
					return {
							standard: {
									primary: "#FFFFFF",
									secondary: "rgba(255, 255, 255, 0.786)",
									tertiary: "rgba(255, 255, 255, 0.5442)",
									disabled: "rgba(255, 255, 255, 0.3628)"
							},
							accent: dark_colors_text_accent(e),
							vibrant: {
									primary: "#9FCFFF",
									secondary: "#94C4F4",
									tertiary: "#AADAFF",
									disabled: hexToRGBA("#FFFFFF", .3628)
							},
							onAccent: {
									primary: "#000000",
									secondary: hexToRGBA("#000000", .5),
									disabled: hexToRGBA("#FFFFFF", .5302),
									selected: "#FFFFFF"
							},
							onVibrant: {
									primary: "#FFFFFF",
									secondary: hexToRGBA("#FFFFFF", .3),
									disabled: "#FFFFFF"
							}
					}
			}
			function colors_colors() {
					const e = {
							ambient10: "#2B3540",
							ambient20: "#2555BE",
							ambient30: "#C3C9D7",
							ambient40: "#F9FBFF"
					};
					return {
							base: e,
							brand: {
									solid: {
											denimPlus5: "#EFF3FF",
											denimPlus4: "#D1DBFA",
											denimPlus3: "#A2B7F4",
											denimPlus2: "#7492EF",
											denimPlus1: "#456EE9",
											denim: "#174AE4",
											denimMinus1: "#123BB6",
											denimMinus2: "#0E2C89",
											denimMinus3: "#091E5B",
											denimMinus4: "#050F2E"
									},
									gradient: {
											core: "linear-gradient(81.62deg, #2870EA 8.72%, #1B4AEF 85.01%)",
											vibrant: "linear-gradient(81.09deg, #18C1ED 8.85%, #3495EA 48.98%, #2161EF 89.11%)",
											background: "radial-gradient(44.87% 59.2% at 100% 0%, rgba(71, 93, 239, 0.2) 0%, rgba(71, 93, 239, 0) 100%), radial-gradient(33.07% 43.78% at 58.08% 100%, rgba(180, 121, 255, 0.1) 0%, rgba(180, 121, 255, 0) 100%), radial-gradient(37.88% 50.25% at 0% 0%, rgba(0, 0, 0, 0.3) 0%, rgba(0, 0, 0, 0) 100%), linear-gradient(90deg, #140A26 0%, #0A1427 100%)"
									}
							},
							fill: colors_fill_fill(e),
							stroke: colors_stroke_stroke(e),
							text: dark_colors_text_text(e)
					}
			}
			function shadows_shadows() {
					const e = {
							elevation2: "0px 1px 2px rgba(0, 0, 0, 0.28), 0px 0px 2px rgba(0, 0, 0, 0.24)",
							elevation4: "0px 2px 4px rgba(0, 0, 0, 0.28), 0px 0px 2px rgba(0, 0, 0, 0.24)",
							elevation8: "0px 4px 8px rgba(0, 0, 0, 0.28), 0px 0px 2px rgba(0, 0, 0, 0.24)",
							elevation16: "0px 8px 16px rgba(0, 0, 0, 0.28), 0px 0px 2px rgba(0, 0, 0, 0.24)",
							elevation28: "0px 14px 28px rgba(0, 0, 0, 0.48), 0px 0px 8px rgba(0, 0, 0, 0.4)",
							elevation64: "0px 32px 64px rgba(0, 0, 0, 0.48), 0px 0px 8px rgba(0, 0, 0, 0.4)"
					};
					return {
							defaults: {
									card: e.elevation4,
									cardRaised: e.elevation8,
									dialog: e.elevation64,
									flyout: e.elevation16,
									layer: e.elevation2,
									panel: e.elevation28,
									tooltip: e.elevation16
							},
							elevations: e
					}
			}
			var Op;
			(function(e) {
					e[e.Light = 0] = "Light",
					e[e.Dark = 1] = "Dark"
			}
			)(Op || (Op = {}));
			class ThemeManager extends DesignTokenManager {
					getDesignTokens() {
							return Tp
					}
					createDesignSystem(e) {
							let t;
							switch (e) {
							case Op.Dark:
									t = {
											colors: colors_colors(),
											icons: {
													themed: {}
											},
											shadows: shadows_shadows()
									};
									break;
							case Op.Light:
									t = {
											colors: colors(),
											icons: {
													themed: {}
											},
											shadows: shadows()
									}
							}
							return t
					}
			}
			(function(e) {
					let t;
					e.tokenManager = function() {
							return null != t || (t = new ThemeManager),
							t
					}
					,
					e.tryParse = function(t) {
							let n = null;
							return t && (n = e[t]),
							n
					}
			}
			)(Op || (Op = {}));
			const {create: Np} = Cp
				, Pp = {
					measurements: {
							corners: {
									narrow: Np("cib-corner-radius-narrow"),
									normal: Np("cib-corner-radius-normal"),
									wide: Np("cib-corner-radius-wide")
							}
					},
					typography: {
							fonts: {
									text: Np("cib-font-text"),
									icons: Np("cib-font-icons")
							},
							typeRamp: {
									caption2: {
											fontSize: Np("cib-type-caption2-font-size"),
											lineHeight: Np("cib-type-caption2-line-height"),
											fontWeight: Np("cib-type-caption2-font-weight"),
											fontVariationSettings: Np("cib-type-caption2-font-variation-settings")
									},
									caption2Strong: {
											fontSize: Np("cib-type-caption2-strong-font-size"),
											lineHeight: Np("cib-type-caption2-strong-line-height"),
											fontWeight: Np("cib-type-caption2-strong-font-weight"),
											fontVariationSettings: Np("cib-type-caption2-strong-font-variation-settings")
									},
									caption1: {
											fontSize: Np("cib-type-caption1-font-size"),
											lineHeight: Np("cib-type-caption1-line-height"),
											fontWeight: Np("cib-type-caption1-font-weight"),
											fontVariationSettings: Np("cib-type-caption1-font-variation-settings")
									},
									caption1Strong: {
											fontSize: Np("cib-type-caption1-strong-font-size"),
											lineHeight: Np("cib-type-caption1-strong-line-height"),
											fontWeight: Np("cib-type-caption1-strong-font-weight"),
											fontVariationSettings: Np("cib-type-caption1-strong-font-variation-settings")
									},
									caption1Stronger: {
											fontSize: Np("cib-type-caption1-stronger-font-size"),
											lineHeight: Np("cib-type-caption1-stronger-line-height"),
											fontWeight: Np("cib-type-caption1-stronger-font-weight"),
											fontVariationSettings: Np("cib-type-caption1-stronger-font-variation-settings")
									},
									body1: {
											fontSize: Np("cib-type-body1-font-size"),
											lineHeight: Np("cib-type-body1-line-height"),
											fontWeight: Np("cib-type-body1-font-weight"),
											fontVariationSettings: Np("cib-type-body1-font-variation-settings")
									},
									body1Strong: {
											fontSize: Np("cib-type-body1-strong-font-size"),
											lineHeight: Np("cib-type-body1-strong-line-height"),
											fontWeight: Np("cib-type-body1-strong-font-weight"),
											fontVariationSettings: Np("cib-type-body1-strong-font-variation-settings")
									},
									body1Stronger: {
											fontSize: Np("cib-type-body1-stronger-font-size"),
											lineHeight: Np("cib-type-body1-stronger-line-height"),
											fontWeight: Np("cib-type-body1-stronger-font-weight"),
											fontVariationSettings: Np("cib-type-body1-stronger-font-variation-settings")
									},
									body2: {
											fontSize: Np("cib-type-body2-font-size"),
											lineHeight: Np("cib-type-body2-line-height"),
											fontWeight: Np("cib-type-body2-font-weight"),
											fontVariationSettings: Np("cib-type-body2-font-variation-settings")
									},
									subtitle2: {
											fontSize: Np("cib-type-subtitle2-font-size"),
											lineHeight: Np("cib-type-subtitle2-line-height"),
											fontWeight: Np("cib-type-subtitle2-font-weight"),
											fontVariationSettings: Np("cib-type-subtitle2-font-variation-settings")
									},
									subtitle2Stronger: {
											fontSize: Np("cib-type-subtitle2-stronger-font-size"),
											lineHeight: Np("cib-type-subtitle2-stronger-line-height"),
											fontWeight: Np("cib-type-subtitle2-stronger-font-weight"),
											fontVariationSettings: Np("cib-type-subtitle2-stronger-font-variation-settings")
									},
									subtitle1: {
											fontSize: Np("cib-type-subtitle1-font-size"),
											lineHeight: Np("cib-type-subtitle1-line-height"),
											fontWeight: Np("cib-type-subtitle1-font-weight"),
											fontVariationSettings: Np("cib-type-subtitle1-font-variation-settings")
									},
									message: {
											fontSize: Np("cib-type-message-font-size"),
											lineHeight: Np("cib-type-message-line-height"),
											fontWeight: Np("cib-type-message-font-weight"),
											fontVariationSettings: Np("cib-type-message-font-variation-settings")
									},
									messageStrong: {
											fontSize: Np("cib-type-message-strong-font-size"),
											lineHeight: Np("cib-type-message-strong-line-height"),
											fontWeight: Np("cib-type-message-strong-font-weight"),
											fontVariationSettings: Np("cib-type-message-strong-font-variation-settings")
									},
									title3: {
											fontSize: Np("cib-type-title3-font-size"),
											lineHeight: Np("cib-type-title3-line-height"),
											fontWeight: Np("cib-type-title3-font-weight"),
											fontVariationSettings: Np("cib-type-title3-font-variation-settings")
									},
									title2: {
											fontSize: Np("cib-type-title2-font-size"),
											lineHeight: Np("cib-type-title2-line-height"),
											fontWeight: Np("cib-type-title2-font-weight"),
											fontVariationSettings: Np("cib-type-title2-font-variation-settings")
									},
									title1: {
											fontSize: Np("cib-type-title1-font-size"),
											lineHeight: Np("cib-type-title1-line-height"),
											fontWeight: Np("cib-type-title1-font-weight"),
											fontVariationSettings: Np("cib-type-title1-font-variation-settings")
									},
									largeTitle: {
											fontSize: Np("cib-type-large-title-font-size"),
											lineHeight: Np("cib-type-large-title-line-height"),
											fontWeight: Np("cib-type-large-title-font-weight"),
											fontVariationSettings: Np("cib-type-large-title-font-variation-settings")
									},
									display: {
											fontSize: Np("cib-type-display-font-size"),
											lineHeight: Np("cib-type-display-line-height"),
											fontWeight: Np("cib-type-display-font-weight"),
											fontVariationSettings: Np("cib-type-display-font-variation-settings")
									}
							}
					}
			};
			var Dp;
			(function(e) {
					e[e.DesktopWeb = 0] = "DesktopWeb",
					e[e.MobileIos = 1] = "MobileIos",
					e[e.MobileAndroid = 2] = "MobileAndroid",
					e[e.Windows = 3] = "Windows"
			}
			)(Dp || (Dp = {}));
			class PlatformManager extends DesignTokenManager {
					getDesignTokens() {
							return Pp
					}
					createDesignSystem(e) {
							let t;
							switch (e) {
							case Dp.DesktopWeb:
									t = {
											measurements: {
													corners: {
															narrow: 2,
															normal: 4,
															wide: 8
													}
											},
											typography: {
													fonts: {
															text: "-apple-system, Roboto, SegoeUI, 'Segoe UI', 'Helvetica Neue', Helvetica, 'Microsoft YaHei', 'Meiryo UI', Meiryo, Arial Unicode MS, sans-serif",
															icons: "'Fluent Icons'"
													},
													typeRamp: {
															caption2: {
																	fontSize: "10px",
																	lineHeight: "14px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 400, 'opsz' 8"
															},
															caption2Strong: {
																	fontSize: "10px",
																	lineHeight: "14px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 8"
															},
															caption1: {
																	fontSize: "12px",
																	lineHeight: "16px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 400, 'opsz' 10.5"
															},
															caption1Strong: {
																	fontSize: "12px",
																	lineHeight: "16px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 10.5"
															},
															caption1Stronger: {
																	fontSize: "12px",
																	lineHeight: "16px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 700, 'opsz' 10.5"
															},
															body1: {
																	fontSize: "14px",
																	lineHeight: "20px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 400, 'opsz' 10.5"
															},
															body1Strong: {
																	fontSize: "14px",
																	lineHeight: "20px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 10.5"
															},
															body1Stronger: {
																	fontSize: "14px",
																	lineHeight: "20px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 700, 'opsz' 10.5"
															},
															body2: {
																	fontSize: "16px",
																	lineHeight: "22px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 400, 'opsz' 10.5"
															},
															subtitle2: {
																	fontSize: "16px",
																	lineHeight: "22px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 10.5"
															},
															subtitle2Stronger: {
																	fontSize: "16px",
																	lineHeight: "22px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 700, 'opsz' 10.5"
															},
															subtitle1: {
																	fontSize: "20px",
																	lineHeight: "26px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 10.5"
															},
															message: {
																	fontSize: "18px",
																	lineHeight: "24px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 400, 'opsz' 36"
															},
															messageStrong: {
																	fontSize: "18px",
																	lineHeight: "24px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 36"
															},
															title3: {
																	fontSize: "24px",
																	lineHeight: "32px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 36"
															},
															title2: {
																	fontSize: "28px",
																	lineHeight: "36px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 36"
															},
															title1: {
																	fontSize: "32px",
																	lineHeight: "40px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 36"
															},
															largeTitle: {
																	fontSize: "40px",
																	lineHeight: "52px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 36"
															},
															display: {
																	fontSize: "68px",
																	lineHeight: "92px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 36"
															}
													}
											}
									};
									break;
							case Dp.MobileAndroid:
							case Dp.MobileIos:
							case Dp.Windows:
									t = {
											measurements: {
													corners: {
															narrow: 2,
															normal: 4,
															wide: 8
													}
											},
											typography: {
													fonts: {
															text: "SegoeUIVariable, SegoeUI, 'Segoe UI', 'Helvetica Neue', Helvetica, 'Microsoft YaHei', 'Meiryo UI', Meiryo, Arial Unicode MS, sans-serif",
															icons: "'Fluent Icons'"
													},
													typeRamp: {
															caption2: {
																	fontSize: "10px",
																	lineHeight: "14px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 400, 'opsz' 8"
															},
															caption2Strong: {
																	fontSize: "10px",
																	lineHeight: "14px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 8"
															},
															caption1: {
																	fontSize: "12px",
																	lineHeight: "16px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 400, 'opsz' 10.5"
															},
															caption1Strong: {
																	fontSize: "12px",
																	lineHeight: "16px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 10.5"
															},
															caption1Stronger: {
																	fontSize: "12px",
																	lineHeight: "16px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 700, 'opsz' 10.5"
															},
															body1: {
																	fontSize: "14px",
																	lineHeight: "20px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 400, 'opsz' 10.5"
															},
															body1Strong: {
																	fontSize: "14px",
																	lineHeight: "20px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 10.5"
															},
															body1Stronger: {
																	fontSize: "14px",
																	lineHeight: "20px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 700, 'opsz' 10.5"
															},
															body2: {
																	fontSize: "16px",
																	lineHeight: "22px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 400, 'opsz' 10.5"
															},
															subtitle2: {
																	fontSize: "16px",
																	lineHeight: "22px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 10.5"
															},
															subtitle2Stronger: {
																	fontSize: "16px",
																	lineHeight: "22px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 700, 'opsz' 10.5"
															},
															subtitle1: {
																	fontSize: "20px",
																	lineHeight: "26px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 10.5"
															},
															message: {
																	fontSize: "18px",
																	lineHeight: "24px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 400, 'opsz' 10.5"
															},
															messageStrong: {
																	fontSize: "18px",
																	lineHeight: "24px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 10.5"
															},
															title3: {
																	fontSize: "24px",
																	lineHeight: "32px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 36"
															},
															title2: {
																	fontSize: "28px",
																	lineHeight: "36px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 36"
															},
															title1: {
																	fontSize: "32px",
																	lineHeight: "40px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 36"
															},
															largeTitle: {
																	fontSize: "40px",
																	lineHeight: "52px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 36"
															},
															display: {
																	fontSize: "68px",
																	lineHeight: "92px",
																	fontWeight: "unset",
																	fontVariationSettings: "'wght' 600, 'opsz' 36"
															}
													}
											}
									}
							}
							return t
					}
			}
			(function(e) {
					let t;
					e.tokenManager = function() {
							return null != t || (t = new PlatformManager),
							t
					}
					,
					e.tryParse = function(t) {
							let n = null;
							return t && (n = e[t]),
							n
					}
			}
			)(Dp || (Dp = {}));
			const {create: Mp} = Cp
				, Lp = {
					motion: {
							duration: {
									faster: Mp("cib-motion-duration-faster"),
									fast: Mp("cib-motion-duration-fast"),
									normal: Mp("cib-motion-duration-normal"),
									slow: Mp("cib-motion-duration-slow"),
									slower: Mp("cib-motion-duration-slower"),
									slowest: Mp("cib-motion-duration-slowest")
							},
							durationNumber: {
									faster: Mp("cib-motion-duration-faster-number"),
									fast: Mp("cib-motion-duration-fast-number"),
									normal: Mp("cib-motion-duration-normal-number"),
									slow: Mp("cib-motion-duration-slow-number"),
									slower: Mp("cib-motion-duration-slower-number"),
									slowest: Mp("cib-motion-duration-slowest-number")
							},
							easingFunction: {
									linear: Mp("cib-motion-easing-linear"),
									motionIn: Mp("cib-motion-easing-in"),
									motionOut: Mp("cib-motion-easing-out"),
									motionStrong: Mp("cib-motion-easing-strong"),
									motionDirect: Mp("cib-motion-easing-direct"),
									motionTransition: Mp("cib-motion-easing-transition")
							}
					}
			};
			class StaticManager extends DesignTokenManager {
					getDesignTokens() {
							return Lp
					}
					createDesignSystem() {
							return {
									motion: {
											duration: {
													faster: "83ms",
													fast: "187ms",
													normal: "333ms",
													slow: "500ms",
													slower: "667ms",
													slowest: "1000ms"
											},
											durationNumber: {
													faster: 83,
													fast: 187,
													normal: 333,
													slow: 500,
													slower: 667,
													slowest: 1e3
											},
											easingFunction: {
													linear: "cubic-bezier(0,0,1,1)",
													motionIn: "cubic-bezier(0,0,0,1)",
													motionOut: "cubic-bezier(1,0,1,1)",
													motionStrong: "cubic-bezier(0.13,1.62,0,0.92)",
													motionDirect: "cubic-bezier(0.55,0.55,0,1)",
													motionTransition: "cubic-bezier(0.75, 0, 0.25, 1)"
											}
									}
							}
					}
			}
			var kp;
			(function(e) {
					let t;
					e.tokenManager = function() {
							return null != t || (t = new StaticManager),
							t
					}
			}
			)(kp || (kp = {}));
			const Fp = new class {
					constructor() {
							this.isInitialized = !1,
							this.static = kp.tokenManager(),
							this.theme = Op.tokenManager(),
							this.platform = Dp.tokenManager()
					}
					initialize(e=null) {
							this.isInitialized || (null !== e && this.updateTargetElement(e),
							this.static.initialize(),
							this.theme.initialize(),
							this.platform.initialize(),
							this.isInitialized = !0)
					}
					activateDefaults(e=null) {
							null !== e && this.updateTargetElement(e),
							this.initialize(),
							this.static.activate(),
							this.theme.activate(Op.Light),
							this.platform.activate(Dp.DesktopWeb)
					}
					updateTargetElement(e) {
							e && (this.static.element = e,
							this.theme.element = e,
							this.platform.element = e)
					}
			}
				, Bp = Lp
				, Gp = Tp
				, Up = Pp
				, zp = css`
:host {
	position: absolute;
	height: 100%;
	width: 100%;
	display: flex;
	flex-direction: column;
	align-items: center;
	color: #111111;
	-webkit-overflow-scrolling: auto;
	-webkit-tap-highlight-color: transparent;
	font-family: ${Up.typography.fonts.text};
}

/* SERP SLOT */

:host([serp-slot=${Xc.Creator}]),
:host([serp-slot=${Xc.Pole}]),
:host([serp-slot=${Xc.RightRail}]) {
	position: relative;
	max-width: 1200px;
	height: unset;
}

:host([serp-slot=${Xc.Creator}]) .action-bar,
:host([serp-slot=${Xc.Pole}]) .action-bar,
:host([serp-slot=${Xc.RightRail}]) .action-bar {
	bottom: 20px;
	position: fixed;
	z-index: -1;
	align-items: flex-end;
	transform: translate3d(0, 0, 0);
	max-width: unset;
	min-width: unset;
}

/* ALIGNMENT */

:host(:not([mobile])[alignment=${Kc.Left}]) {
	align-items: flex-start;
}

/* SLOTTED MESSAGE CONTENT */

.slotted-message {
	max-width: 1120px;
}

::slotted([slot="slotted-message-slot"]) {
	display: contents;
}

/* MOBILE */

:host([mobile][mode=${Qc.OffStage}]) {
	pointer-events: none;
}

/* MOBILE BACKGROUND */

.mobile-background {
	position: absolute;
	height: 100%;
	width: 100%;
	background: rgba(0, 0, 0, 0.4);
	touch-action: none;
	transition-property: opacity;
	transition-duration: ${Bp.motion.duration.normal};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

:host([mode=${Qc.OffStage}]) .mobile-background {
	opacity: 0;
	pointer-events: none;
}

/* SERP FEEDBACK CONTROL */

:host(:not([mobile])[mode=${Qc.Search}][serp-slot=${Xc.None}]) cib-serp-feedback,
:host(:not([mobile])[mode=${Qc.OffStage}][serp-slot=${Xc.None}]) cib-serp-feedback,
:host(:not([mobile])[mode=${Qc.Home}][serp-slot=${Xc.None}]) cib-serp-feedback {
	display: none;
}
`;
			function when(e, t) {
					const n = "function" == typeof t ? t : ()=>t;
					return (t,i)=>e(t, i) ? n(t, i) : null
			}
			function node_observation_elements(e) {
					return e ? function(t, n, i) {
							return 1 === t.nodeType && t.matches(e)
					}
					: function(e, t, n) {
							return 1 === e.nodeType
					}
			}
			class NodeObservationBehavior {
					constructor(e, t) {
							this.target = e,
							this.options = t,
							this.source = null
					}
					bind(e) {
							const t = this.options.property;
							this.shouldUpdate = _.getAccessors(e).some((e=>e.name === t)),
							this.source = e,
							this.updateTarget(this.computeNodes()),
							this.shouldUpdate && this.observe()
					}
					unbind() {
							this.updateTarget(l),
							this.source = null,
							this.shouldUpdate && this.disconnect()
					}
					handleEvent() {
							this.updateTarget(this.computeNodes())
					}
					computeNodes() {
							let e = this.getNodes();
							return void 0 !== this.options.filter && (e = e.filter(this.options.filter)),
							e
					}
					updateTarget(e) {
							this.source[this.options.property] = e
					}
			}
			class ChildrenBehavior extends NodeObservationBehavior {
					constructor(e, t) {
							super(e, t),
							this.observer = null,
							t.childList = !0
					}
					observe() {
							null === this.observer && (this.observer = new MutationObserver(this.handleEvent.bind(this))),
							this.observer.observe(this.target, this.options)
					}
					disconnect() {
							this.observer.disconnect()
					}
					getNodes() {
							return "subtree"in this.options ? Array.from(this.target.querySelectorAll(this.options.selector)) : Array.from(this.target.childNodes)
					}
			}
			function children(e) {
					return "string" == typeof e && (e = {
							property: e
					}),
					new AttachedBehaviorHTMLDirective("fast-children",ChildrenBehavior,e)
			}
			class MatchMediaBehavior {
					constructor(e) {
							this.listenerCache = new WeakMap,
							this.query = e
					}
					bind(e) {
							const {query: t} = this
								, n = this.constructListener(e);
							n.bind(t)(),
							t.addListener(n),
							this.listenerCache.set(e, n)
					}
					unbind(e) {
							const t = this.listenerCache.get(e);
							t && (this.query.removeListener(t),
							this.listenerCache.delete(e))
					}
			}
			class MatchMediaStyleSheetBehavior extends MatchMediaBehavior {
					constructor(e, t) {
							super(e),
							this.styles = t
					}
					static with(e) {
							return t=>new MatchMediaStyleSheetBehavior(e,t)
					}
					constructListener(e) {
							let t = !1;
							const n = this.styles;
							return function() {
									const {matches: i} = this;
									i && !t ? (e.$fastController.addStyles(n),
									t = i) : !i && t && (e.$fastController.removeStyles(n),
									t = i)
							}
					}
					unbind(e) {
							super.unbind(e),
							e.$fastController.removeStyles(this.styles)
					}
			}
			const $p = MatchMediaStyleSheetBehavior.with(window.matchMedia("(forced-colors)"));
			MatchMediaStyleSheetBehavior.with(window.matchMedia("(prefers-color-scheme: dark)")),
			MatchMediaStyleSheetBehavior.with(window.matchMedia("(prefers-color-scheme: light)"));
			var Vp;
			(function(e) {
					e.Canvas = "Canvas",
					e.CanvasText = "CanvasText",
					e.LinkText = "LinkText",
					e.VisitedText = "VisitedText",
					e.ActiveText = "ActiveText",
					e.ButtonFace = "ButtonFace",
					e.ButtonText = "ButtonText",
					e.Field = "Field",
					e.FieldText = "FieldText",
					e.Highlight = "Highlight",
					e.HighlightText = "HighlightText",
					e.GrayText = "GrayText"
			}
			)(Vp || (Vp = {}));
			const Hp = css`
${qp = "flex",
			`:host([hidden]){display:none}:host{display:${qp}}`}

:host {
	position: absolute;
	align-items: flex-end;
	justify-content: center;
	width: 100%;
	height: 90px;
	bottom: 16px;
	box-sizing: border-box;
	padding: 0px 32px;
	z-index: 1;
	transition-property: transform, max-width, min-width;
	transition-duration: ${Bp.motion.duration.slowest};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
}

:host([loading]),
:host([loading]) .root {
	transition: none !important;
}

:host([disabled]) {
	opacity: 0.3;
}

:host([disabled]) * {
	cursor: not-allowed;
}

/* This was previously :host */
.root {
	position: relative;
	display: flex;
	gap: 12px;
	width: 100%;
	height: auto;
	max-width: 1120px;
	min-height: 90px;
	transition-property: width, max-width;
	transition-duration: ${Bp.motion.duration.slowest};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
}

:host([mobile][disabled]) .root {
	opacity: 0;
	pointer-events: none;
}

:host([mobile][disabled]) .root.suspended {
	opacity: 0.8;
}

/* CONTAINERS */

.main-container {
	position: relative;
	width: 100%;
	height: 100%;
	min-height: 48px;
	box-sizing: border-box;
	padding: 13px 48px 11px;
	z-index: 1;
	background: white;
	border-radius: 24px;
	outline: 1px solid transparent;
	cursor: text;
	transition-property: min-height, height, width, transform, border-radius, box-shadow;
	transition-duration: ${Bp.motion.duration.fast};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
	box-shadow: ${Gp.shadows.elevations.elevation4};
	font-size: ${Up.typography.typeRamp.body2.fontSize};
	line-height: ${Up.typography.typeRamp.body2.lineHeight};
	font-weight: ${Up.typography.typeRamp.body2.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.body2.fontVariationSettings};
}

:host([transition]) .main-container {
	transition-duration: ${Bp.motion.duration.slowest};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
}

.outside-left-container {
	position: relative;
	align-self: flex-end;
	height: 48px;
	bottom: 42px;
	margin: 0px;
	padding: 0px;
	transition-property: opacity;
	transition-duration: ${Bp.motion.duration.slow};
	transition-delay: ${Bp.motion.duration.normal};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
}

.outside-left-container .button-compose-wrapper {
	transition-property: opacity, transform;
	transition-duration: ${Bp.motion.duration.fast};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

/* TEXT INPUT */

form {
	display: contents;
}

.input-container {
	display: flex;
	max-height: 50vh;
	overflow-x: hidden;
	overflow-y: auto;
}

.text-input {
	position: relative;
	display: inline-grid;
	width: 100%;
}

.text-input:after,
.text-input:before {
	visibility: hidden;
	white-space: pre-wrap;
}

.text-input:after {
	content: attr(data-input) " ";
}

.text-input:before {
	content: attr(data-suggestion) " ";
}

.text-input:after,
.text-input:before,
.text-input .text-area {
	grid-area: 1/1;
	resize: none;
	border: none;
	outline: none;
	padding: 0px;
	margin: 0px;
	background: transparent;
	word-break: break-word;
	font-family: inherit;
	font-size: ${Up.typography.typeRamp.body2.fontSize};
	line-height: ${Up.typography.typeRamp.body2.lineHeight};
	font-weight: ${Up.typography.typeRamp.body2.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.body2.fontVariationSettings};
}

.text-input .text-area {
	position: relative;
	color: #000000;
	text-shadow: 0px 0 2px white;
	overflow: auto;
	white-space: inherit;
}

.text-input .text-area::placeholder {
	color: #757575;
}

.text-input .autosuggest {
	color: #757575;
	position: absolute;
	display: inline;
	word-break: break-word;
	cursor: text;
	font-size: 0px;
	line-height: 0px;
}

.text-input .autosuggest {
	color: #757575;
	position: absolute;
	display: inline;
	word-break: break-word;
	cursor: text;
}

.text-input .autosuggest-text {
	display: inline;
	white-space: pre-wrap;
	font-size: ${Up.typography.typeRamp.body2.fontSize};
	line-height: ${Up.typography.typeRamp.body2.lineHeight};
	font-weight: ${Up.typography.typeRamp.body2.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.body2.fontVariationSettings};
}

.text-input .autosuggest-text.prepend {
	color: transparent;
	visibility: hidden;
}

.text-input .autosuggest .autosuggest-button {
	position: relative;
	display: inline-block;
	background: transparent;
	color: #757575;
	border: solid 1px #757575;
	border-radius: 2px;
	padding: 1px 6px;
	margin: 0;
	margin-left: 2px;
	text-transform: capitalize;
	vertical-align: bottom;
	pointer-events: auto;
	z-index: 1;
	cursor: pointer;
	outline: none;
	opacity: 1;
	font-family: ${Up.typography.fonts.text};
	font-size: ${Up.typography.typeRamp.caption1Stronger.fontSize};
	line-height: ${Up.typography.typeRamp.caption1Stronger.lineHeight};
	font-weight: ${Up.typography.typeRamp.caption1Stronger.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.caption1Stronger.fontVariationSettings};
	transition-property: opacity;
	transition-duration: ${Bp.motion.duration.normal};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

.text-input .autosuggest[hidden],
.text-input .autosuggest[hidden] .autosuggest-button,
:host([mobile]) .main-container:not([focus]) .text-input .autosuggest,
:host([mobile]) .main-container:not([focus]) .text-input .autosuggest .autosuggest-button {
	display: none;
	opacity: 0;
	pointer-events: none;
	transition: unset;
}

/* BUTTONS */

.button {
	display: flex;
	align-items: center;
	justify-content: center;
	height: 36px;
	width: 36px;
	color: #919191;
	fill: #919191;
	background: transparent;
	border: none;
	margin: 0;
	padding: 0;
}

.button:not([disabled]) {
	pointer-events: auto;
	cursor: pointer;
}

.button.primary {
	fill: #5087ec;
}

/* BUTTON COMPOSE TOOLTIP */

.tooltip {
	position: absolute;
	width: 330px;
	box-sizing: border-box;
	background-color: #fff;
	border: 1px solid #dddddd;
	padding: 16px;
	inset-inline-start: -12px;
	bottom: calc(100% + 18px);
	padding-inline-end: 24px;
	font-size: ${Up.typography.typeRamp.body1.fontSize};
	line-height: ${Up.typography.typeRamp.body1.lineHeight};
	border-radius: 6px;
	box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
}

.tooltip::before {
	content: "";
	position: absolute;
	top: 100%;
	inset-inline-start: 24px;
	border: 10px solid transparent;
	border-bottom: none;
	border-top-color: #fff;
	filter: drop-shadow(0 1px 0 #dddddd);
}

.tooltip-button {
	position: absolute;
	top: 4px;
	inset-inline-end: 4px;
	height: 20px;
	width: 20px;
	border: none;
	background: transparent;
	border-radius: 2px;
	display: flex;
	align-items: center;
	justify-content: center;
}

.tooltip-button:hover {
	background: rgba(0, 0, 0, 0.1);
}

.tooltip-button:active {
	background: rgba(0, 0, 0, 0.15);
}

.tooltip-button:focus-visible {
	outline: 2px solid #000;
}

/* BUTTON COMPOSE */

.button-compose {
	display: flex;
	flex-direction: row;
	position: relative;
	height: 48px;
	width: 48px;
	border-radius: 24px;
	color: #ffffff;
	fill: #ffffff;
	background: transparent;
	border: none;
	outline: 1px solid transparent;
	margin: 0;
	padding: 0;
	overflow: hidden;
	transition-property: width;
	transition-duration: ${Bp.motion.duration.normal};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
	font-family: ${Up.typography.fonts.text};
	font-size: ${Up.typography.typeRamp.body2.fontSize};
	line-height: ${Up.typography.typeRamp.body2.lineHeight};
	font-weight: ${Up.typography.typeRamp.body2.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.body2.fontVariationSettings};
}

.button-compose:not([disabled]) {
	pointer-events: auto;
	cursor: pointer;
}

.button-compose::before {
	content: "";
	position: absolute;
	width: 100%;
	height: 100%;
	border-radius: 24px;
	background: ${Gp.colors.brand.gradient.core};
	box-shadow: ${Gp.shadows.elevations.elevation4};
	transition-property: transform;
	transition-duration: ${Bp.motion.duration.fast};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

.button-compose-content {
	position: relative;
	display: grid;
	grid-template-columns: 48px auto;
	align-items: center;
	height: 48px;
}

.button-compose-icon {
	justify-self: center;
}

.button-compose-text {
	min-width: max-content;
	margin-right: 20px;
	opacity: 0;
	transition-property: opacity;
	transition-duration: ${Bp.motion.duration.fast};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

.button-compose-hint {
	display: none;
	align-items: center;
	justify-content: center;
	position: absolute;
	height: 26px;
	width: max-content;
	left: -10px;
	top: -32px;
	padding: 0 8px;
	border-radius: 4px;
	background-color: rgba(0, 0, 0, 0.7);
	color: #ffffff;
	text-align: center;
	pointer-events: none;
	z-index: 9999;
	opacity: 0;
	font-size: ${Up.typography.typeRamp.caption1Strong.fontSize};
	line-height: ${Up.typography.typeRamp.caption1Strong.lineHeight};
	font-weight: ${Up.typography.typeRamp.caption1Strong.fontWeight};
	font-weight: 600;
	font-variation-settings: ${Up.typography.typeRamp.caption1Strong.fontVariationSettings};
	transition-property: opacity;
	transition-duration: ${Bp.motion.duration.fast};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

@media (hover: hover) {
	:host(:not([disabled])) .button-compose:hover {
		width: var(--button-compose-width);
		transition-delay: ${Bp.motion.duration.fast};
	}

	.button-compose:hover .button-compose-text {
		opacity: 1;
	}

	.button-compose:hover + .button-compose-hint {
		opacity: 1;
	}
}

.button-compose:focus {
	width: var(--button-compose-width);
}

.button-compose:focus-visible {
	width: var(--button-compose-width);
	outline: 2px solid #000;
}

.button-compose:focus .button-compose-text,
.button-compose:focus + .button-compose-hint,
.button-compose:focus-visible + .button-compose-hint {
	opacity: 1;
}

.button-compose:active::before {
	transform: scale3d(0.971, 0.9583, 1);
}

/* CONTROL GROUPS */

.controls-left {
	display: flex;
	flex-direction: row;
	position: absolute;
	left: 0;
	top: 0;
	bottom: 0;
	box-sizing: border-box;
	padding: 6px 8px;
}

.controls-left .chat,
.controls-left .keyboard {
	position: absolute;
	transition-property: transform;
	transition-duration: ${Bp.motion.duration.fast};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

.controls-left .chat {
	display: flex;
	align-items: center;
	justify-content: center;
	height: 36px;
	width: 36px;
	color: #919191;
	fill: #919191;
}

.controls-left .keyboard {
	position: absolute;
	bottom: 48px;
	opacity: 0.01;
	pointer-events: none;
}

.controls-left .keyboard button {
	pointer-events: none;
}

.controls-right {
	display: flex;
	flex-direction: row;
	position: absolute;
	right: 0;
	top: 0;
	padding: 6px 8px;
}

.controls-right .cancel,
.controls-right .clear,
.controls-right .submit {
	display: none;
}

.control {
	display: flex;
	flex-direction: row;
}

:host(:not([mobile])) .control.cancel {
	display: none;
	position: absolute;
	right: 20px;
	bottom: 28px;
}

/* BOTTOM BAR */

.bottom-bar {
	position: absolute;
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-between;
	height: 36px;
	bottom: 4px;
	left: 0;
	right: 0;
	box-sizing: border-box;
	padding: 0px 8px 0 16px;
	opacity: 0;
	pointer-events: none;
	font-size: ${Up.typography.typeRamp.body1.fontSize};
	line-height: ${Up.typography.typeRamp.body1.lineHeight};
	font-weight: ${Up.typography.typeRamp.body1.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.body1.fontVariationSettings};
}

.bottom-bar-controls {
	display: flex;
	flex-direction: row;
}

.bottom-bar-control-group {
	display: flex;
	flex-direction: row;
	opacity: 0;
	pointer-events: none;
	transition-property: opacity, transform;
	transition-duration: ${Bp.motion.duration.slowest};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
}

.letter-counter {
	color: #919191;
}

/* QUERY BUILDER */

.query-builder {
	display: none;
	height: 0;
	opacity: 0;
	transition-property: opacity, height;
	transition-duration: ${Bp.motion.duration.slowest};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
}

.query-builder-buttons {
	display: flex;
	flex-direction: row;
	flex-flow: wrap;
	gap: 8px;
	box-sizing: border-box;
	padding: 16px 20px 0px;
	height: 48px;
	overflow: hidden;
}

/* SPEECH MODE */

.speech-output {
	display: none;
	max-height: 312px;
	justify-content: center;
	text-align: center;
	box-sizing: border-box;
	padding: 0 24px;
	margin: 32px 0 80px;
	overflow: auto;
	font-size: ${Up.typography.typeRamp.subtitle1.fontSize};
	line-height: ${Up.typography.typeRamp.subtitle1.lineHeight};
	font-weight: ${Up.typography.typeRamp.subtitle1.fontWeight};
	font-weight: 500;
	font-variation-settings: ${Up.typography.typeRamp.subtitle1.fontVariationSettings};
}

.controls-audio {
	position: absolute;
	display: flex;
	align-items: center;
	justify-content: center;
	height: 56px;
	width: 56px;
	bottom: 16px;
	z-index: 1;
	right: calc(50% - 28px);
	opacity: 0;
	pointer-events: none;
	transition-property: transform, opacity;
	transition-duration: ${Bp.motion.duration.normal};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

.root[speech-enabled] .controls-audio {
	opacity: 1;
	transform: translateX(0);
	pointer-events: unset;
	cursor: pointer;
}

.root[speech-enabled] .outside-left-container .button-compose-wrapper {
	transform: translateY(20px);
}

.root[speech-enabled] .main-container {
	min-height: 90px;
	border-radius: 12px;
	cursor: unset;
}

.root[speech-enabled] .main-container .controls-left .control.chat {
	transform: translate(20px, 20px);
	opacity: 0;
}

.root[speech-enabled] .main-container .controls-left .control.keyboard {
	transform: translate(20px, 20px) !important;
	opacity: 1;
}

.root[speech-enabled] .main-container .controls-left .control.keyboard button {
	pointer-events: auto;
}

.root[speech-enabled][speech-state=${"listening"}] .main-container {
	transition-duration: ${Bp.motion.duration.normal};
	box-shadow: ${Gp.shadows.elevations.elevation16};
}

.root[speech-enabled] .main-container .bottom-bar,
.root[speech-enabled] .main-container:hover .bottom-bar {
	opacity: 0 !important;
	transition-property: none !important;
	pointer-events: none;
}

.root[speech-enabled] .main-container .text-input {
	display: none;
}

/* SPEECH OUTPUT TEXT, CAN BE RECOGNIZED TEXT OR ERROR MESSAGES */

.root[speech-enabled][speech-state=${"blocked"}] .speech-output,
.root[speech-enabled][speech-state=${"errored"}] .speech-output,
.root[speech-enabled][speech-state=${"listening"}] .speech-output {
	display: block;
}

/* INPUT IN ACTION */

.root[has-text] .main-container,
:host(:not([mobile]):not([disabled])) .main-container:hover,
:host(:focus) .main-container {
	min-height: 90px;
	border-radius: 12px;
}

.root[has-text] .main-container .controls-left .control.keyboard,
.main-container:hover .controls-left .control.keyboard,
:host(:focus) .main-container .controls-left .control.keyboard {
	transform: translateY(0);
}

.root[has-text] .main-container {
	padding-bottom: 32px;
}

.root[has-text] .controls-right .microphone {
	display: none;
}

:host(:not([cancelable])) .root[has-text] .controls-right .clear,
:host(:not([cancelable])) .root[has-text] .controls-right .submit {
	display: flex;
}

.root[has-text]:not([to-submit]) .bottom-bar,
.root:not([to-submit]) .main-container:hover .bottom-bar,
:host(:focus) .root:not([to-submit]) .bottom-bar {
	opacity: 1;
	transition-property: opacity;
	transition-duration: ${Bp.motion.duration.fast};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

:host(:not([mobile])[mode=${Qc.Home}]) .root[had-suggestions]:not([to-submit]) .query-builder,
:host(:not([mobile]):where([mode=${Qc.Home}],[mode=${Qc.Search}])) .root[had-suggestions]:hover:not([to-submit]) .query-builder,
:host(:not([mobile]):where([mode=${Qc.Home}],[mode=${Qc.Search}])):host(:focus) .root[had-suggestions]:not([to-submit]) .query-builder {
	display: block;
	opacity: 1;
	height: 42px;
	transition-delay: ${Bp.motion.duration.fast};
	transition-duration: ${Bp.motion.duration.normal};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

/* EDIT MODE */

.root[edit-mode] .main-container {
	min-height: 264px !important;
	border-radius: 12px;
}

.root[edit-mode] .bottom-bar {
	opacity: 1;
}

/* PAGE MODES */

:host(:not([mobile])[mode=${Qc.Home}]) .root,
:host(:not([mobile])[mode=${Qc.Search}]) .root {
	max-width: 704px;
}

:host(:not([mobile])[mode=${Qc.Home}]) {
	align-items: flex-start;
	transform: translate3d(0px, calc(-50vh + 56px), 0px);
}

:host(:not([mobile])[mode=${Qc.Home}]) .root {
	max-width: 650px;
	height: unset;
	min-height: unset;
}

:host(:not([mobile])[mode=${Qc.Search}]),
:host(:not([mobile])[mode=${Qc.OffStage}]) {
	align-items: flex-start;
	transform: translate3d(30px, calc(-100vh + 124px), 0px);
	min-width: 1032px !important;
}

:host(:not([mobile])[alignment=${Kc.Left}][mode=${Qc.OffStage}]),
:host(:not([mobile])[alignment=${Kc.Left}][mode=${Qc.Search}]) {
	transform: translate3d(0, calc(-100vh + 124px), 0px);
	max-width: 1032px !important;
}

:host(:not([mobile])[mode=${Qc.Search}]) .root,
:host(:not([mobile])[mode=${Qc.OffStage}]) .root {
	max-width: 710px;
}

:host(:not([mobile])[mode=${Qc.Search}]) .outside-left-container,
:host(:not([mobile])[mode=${Qc.OffStage}]) .outside-left-container {
	pointer-events: none;
	opacity: 0;
}

:host(:not([mobile])[mode=${Qc.Search}]) .main-container,
:host(:not([mobile])[mode=${Qc.OffStage}]) .main-container {
	transform: translateX(-60px);
}

/* LEFT ALIGNED */

:host(:not([mobile])[alignment=${Kc.Left}]) {
	max-width: 1440px;
	min-width: 0px;
}

/* WINDOW RESIZING */
:host([no-transition]) {
	transition: none;
}

/* MEDIA QUERIES */

@media (max-width: 600px) {
	:host(:not([mobile])) {
		height: unset;
	}

	:host(:not([mobile])) .root {
		align-items: flex-end;
		justify-content: flex-end;
		min-height: unset;
	}

	:host(:not([mobile])) .outside-left-container {
		position: absolute;
		bottom: 0;
		left: 0;
	}

	:host(:not([mobile])) .button-compose {
		width: 48px !important;
	}

	:host(:not([mobile])) .button-compose-hint {
		display: flex;
	}

	:host(:not([mobile])) .main-container {
		width: calc(100% - 60px);
		padding-left: 18px;
	}

	:host(:focus:not([mobile])) .main-container {
		min-height: 48px;
		border-radius: 24px;
	}

	:host(:not([mobile])) .root[has-text] .main-container,
	:host(:not([mobile])) .main-container:focus,
	:host(:not([mobile])) .main-container[focus] {
		width: 100%;
		min-height: 90px;
		border-radius: 12px;
	}

	:host(:not([mobile]):not([disabled])) .main-container:hover {
		width: 100%;
		transition-delay: 167ms;
	}

	:host(:not([mobile])) .root[has-text]:not([to-submit]) .bottom-bar,
	:host(:not([mobile])) .root:not([to-submit]) .main-container:hover .bottom-bar {
		transition-delay: 167ms;
	}

	:host(:focus:not([mobile])) .root:not([to-submit]) .bottom-bar {
		opacity: 0;
		transition-delay: none;
	}

	:host(:not([mobile])) .main-container:focus .bottom-bar,
	:host(:not([mobile])) .main-container[focus] .bottom-bar {
		opacity: 1 !important;
		transition-delay: 167ms;
	}

	:host(:not([mobile])) .controls-left .chat {
		display: none;
	}
}

@media (max-width: 767px) {
	:host {
		padding: 0px 14px;
	}
}

/* PRODUCT TYPE */

:host([product-type=${Dd.Shoreline}]) {
	position: relative;
	bottom: 0px;
	margin-bottom: 16px;
	margin-top: 16px;
	flex-shrink: 0;
}

:host([product-type=${Dd.Shoreline}]) .main-container {
	transition-delay: 167ms;
}

/* MOBILE */

:host([mobile]) {
	position: relative;
	height: auto;
	bottom: 0px;
	padding: 0px;
}

:host([mobile]) .root {
	box-sizing: border-box;
	padding: 20px 16px;
	min-height: 88px;
	max-width: unset;
	flex-direction: column;
}

:host([mobile]) .main-container {
	min-height: unset;
	width: 100%;
	border-radius: 12px;
	padding-left: 12px;
	padding-bottom: 12px;
	padding-top: 12px;
	box-shadow: unset;
	border: 1px solid rgba(0, 0, 0, 0.18);
	transform-origin: center left;
	transition-property: transform, opacity;
	transition-duration: ${Bp.motion.duration.normal};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

:host([mobile]) .main-container,
:host([mobile]) .main-container .text-area {
	touch-action: none !important;
}

:host([mobile]) .root[speech-enabled] .main-container,
:host([mobile]) .root[speech-enabled] .text-area {
	pointer-events: none;
}

:host([mobile]) .speech-output {
	margin-bottom: 60px;
	font-size: ${Up.typography.typeRamp.message.fontSize};
	line-height: ${Up.typography.typeRamp.message.lineHeight};
}

:host([mobile]) .outside-left-container {
	display: none;
}

:host([mobile]) .controls-left {
	z-index: 2;
	bottom: 12px;
	left: -4px;
	top: unset;
	opacity: 0;
	pointer-events: none;
	transform: translateX(12px);
	transition-property: transform, opacity;
	transition-duration: ${Bp.motion.duration.normal};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

:host([mobile]) .controls-right {
	z-index: 2;
	bottom: 12px;
	right: 8px;
	top: unset;
}

:host([mobile]) .controls-left button,
:host([mobile]) .controls-right button {
	height: 52px;
	width: 52px;
	position: relative;
}

:host([mobile]) .controls-left button {
	pointer-events: none;
}

:host([mobile]) .controls-left button,
:host([mobile]) .controls-right .clear button {
	fill: #616161;
}

:host([mobile]) .controls-audio {
	bottom: 16px;
}

:host([mobile]) .root[speech-enabled] .main-container {
	opacity: 0;
	transform: scale(0.3);
}

:host([mobile]) .root[speech-enabled] .controls-left {
	opacity: 1;
	pointer-events: auto;
	padding: 6px 2px;
}

:host([mobile]) .root[speech-enabled] .controls-left button {
	pointer-events: auto;
}

:host([mobile]) .root[speech-enabled] .controls-right {
	right: -2px;
}

/* REQUEST PENDING (bot typing response) */
:host([cancelable]) .controls-right .submit {
	display: none;
}

.root[speech-enabled][speech-state=${"speaking"}] .control.cancel {
	display: flex;
}
`.withBehaviors($p(css`
	.button-compose:hover,
	.button-compose:focus-visible {
		color: ${Vp.HighlightText};
		background: ${Vp.Highlight};
	}

	.button-compose:hover .button-compose-text,
	.button-compose:focus-visible .button-compose-text {
		forced-color-adjust: none;
	}

	.text-input .text-area::placeholder {
		color: currentColor;
	}

	.text-input .autosuggest {
		color: ${Vp.Highlight};
	}
`));
			var qp;
			class RefBehavior {
					constructor(e, t) {
							this.target = e,
							this.propertyName = t
					}
					bind(e) {
							e[this.propertyName] = this.target
					}
					unbind() {}
			}
			function ref(e) {
					return new AttachedBehaviorHTMLDirective("fast-ref",RefBehavior,e)
			}
			const jp = css`
:host {
	--icon-color: inherit;
	--icon-size: 24px;
	display: inline-block;
	height: var(--icon-size);
	width: var(--icon-size);
	min-height: var(--icon-size);
	min-width: var(--icon-size);
	color: var(--icon-color);
	fill: var(--icon-color);
	user-select: none;
	backface-visibility: hidden;
	transform: translateZ(0);
}

svg {
	fill: inherit !important;
}
`.withBehaviors($p(css`
	:host svg {
		fill: currentColor !important;
	}
`))
				, Wp = html` ${e=>html`${e.svg}`} `;
			class SvgIcons {
					constructor() {}
			}
			var Yp;
			SvgIcons.AddBold = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M896 1152H256q-27 0-50-10t-41-27-27-40-10-51q0-27 10-50t27-40 41-28 50-10h640V256q0-27 10-50t27-40 41-28 50-10q26 0 49 10t41 27 28 41 10 50v640h640q26 0 49 10t41 27 28 41 10 50q0 27-10 50t-27 40-41 28-50 10h-640v640q0 27-10 50t-27 40-41 28-50 10q-27 0-50-10t-41-27-27-40-10-51v-640z" />\n  </svg>',
			SvgIcons.BackToWindow = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M2048 64q0 26-19 45l-659 659h486q26 0 45 19t19 45q0 26-19 45t-45 19h-641q-26 0-44-19t-19-45V192q0-26 19-45t45-19q26 0 45 19t19 45v486l659-659q19-19 45-19t45 19 19 45zM832 1152q26 0 45 19t19 45v640q0 26-19 45t-45 19q-26 0-45-19t-19-45v-486l-659 659q-19 19-45 19t-45-19-19-45q0-26 19-45l659-659H192q-26 0-45-19t-19-45q0-26 19-45t45-19h640z" />\n  </svg>',
			SvgIcons.Brush = '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path fill-rule="evenodd" clip-rule="evenodd" d="M20.7024 2.07782C20.3937 1.9095 20.0071 2.02326 19.8387 2.33191L14.7415 11.679C14.1315 11.2867 12.5639 10.42 11.3923 11.0061C10.3929 11.5061 10.1645 11.9182 9.7972 12.5811L9.75982 12.6485L17.4519 16.3461C17.8157 15.5976 18.0392 14.7269 17.7579 13.977C17.4612 13.1858 16.5737 12.5962 15.8846 12.2419L20.9565 2.94145C21.1248 2.6328 21.011 2.24614 20.7024 2.07782ZM9.05827 13.7646L9.08017 13.7343L16.7805 17.4359C16.6758 17.5743 16.5752 17.6958 16.4848 17.7962L12.9912 21.8721C12.7862 22.1113 12.4811 22.2405 12.1701 22.1901C11.4069 22.0663 9.9278 21.7116 8.93156 20.7456C8.80688 20.6246 8.85936 20.4169 9.00607 20.324C9.86774 19.7781 10.625 18.4374 10.625 18.4374C10.625 18.4374 9.05827 19.4999 7.0625 19.4374C5.52782 19.3893 3.64397 17.9429 2.85543 17.2771C2.6979 17.144 2.76842 16.8923 2.96968 16.8476C4.24898 16.5636 7.68904 15.6473 9.05827 13.7646Z"/>\n    <path d="M8.60974 9.02978C8.52129 8.8234 8.22871 8.82341 8.14026 9.02978L7.77833 9.87431C7.70052 10.0559 7.55586 10.2005 7.37431 10.2783L6.52978 10.6403C6.3234 10.7287 6.32341 11.0213 6.52978 11.1097L7.37431 11.4717C7.55586 11.5495 7.70052 11.6941 7.77833 11.8757L8.14026 12.7202C8.22871 12.9266 8.52129 12.9266 8.60974 12.7202L8.97167 11.8757C9.04948 11.6941 9.19414 11.5495 9.37569 11.4717L10.2202 11.1097C10.4266 11.0213 10.4266 10.7287 10.2202 10.6403L9.37569 10.2783C9.19414 10.2005 9.04948 10.0559 8.97167 9.87431L8.60974 9.02978Z"/>\n    <path d="M14.0511 5.99109C13.9847 5.8363 13.7653 5.8363 13.6989 5.99109L13.4275 6.62448C13.3691 6.76064 13.2606 6.86914 13.1245 6.92749L12.4911 7.19895C12.3363 7.26528 12.3363 7.48472 12.4911 7.55105L13.1245 7.82251C13.2606 7.88086 13.3691 7.98936 13.4275 8.12552L13.6989 8.75891C13.7653 8.9137 13.9847 8.9137 14.0511 8.75891L14.3225 8.12552C14.3809 7.98936 14.4894 7.88086 14.6255 7.82251L15.2589 7.55105C15.4137 7.48472 15.4137 7.26528 15.2589 7.19895L14.6255 6.92749C14.4894 6.86914 14.3809 6.76064 14.3225 6.62448L14.0511 5.99109Z"/>\n  </svg>',
			SvgIcons.Chat = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M0 1984q0-26 8-54t15-53q23-95 48-188t48-188q-59-110-89-230T0 1026q0-141 36-272t103-246 160-207 208-161T752 37t272-37q141 0 271 36t245 104 207 160 161 207 103 244 37 272q0 140-36 270t-103 245-159 208-206 161-244 104-271 37q-124 0-244-28t-230-86L79 2046q-10 2-15 2-27 0-45-18t-19-46zm1020-64q124 0 239-32t215-90 182-139 141-182 91-215 32-239q0-124-32-238t-90-214-141-181-182-140-214-90-238-32q-123 0-237 32t-214 90-181 139-140 181-91 213-32 238q0 65 8 120t23 107 36 105 48 109q8 16 8 31 0 11-6 41t-16 69-21 84-23 86-20 74-13 50q68-16 134-32t135-33q34-8 71-19t72-11q8 0 15 2t15 6q54 25 104 45t102 35 105 22 115 8zM704 896q-26 0-45-19t-19-45q0-26 19-45t45-19h640q26 0 45 19t19 45q0 26-19 45t-45 19H704zm0 384q-26 0-45-19t-19-45q0-26 19-45t45-19h384q26 0 45 19t19 45q0 26-19 45t-45 19H704z" />\n  </svg>',
			SvgIcons.ChatDismissFill = '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 13.6203 2.38637 15.186 3.11461 16.5922L2.04695 20.4151C1.98549 20.6349 1.98546 20.8676 2.04691 21.0876C2.23258 21.7525 2.92212 22.141 3.58704 21.9553L7.41286 20.888C8.81782 21.6146 10.3817 22 12 22C17.5228 22 22 17.5228 22 12ZM9.28033 8.21967L12 10.9393L14.7197 8.21967C15.0126 7.92678 15.4874 7.92678 15.7803 8.21967C16.0732 8.51256 16.0732 8.98744 15.7803 9.28033L13.0607 12L15.7803 14.7197C16.0732 15.0126 16.0732 15.4874 15.7803 15.7803C15.4874 16.0732 15.0126 16.0732 14.7197 15.7803L12 13.0607L9.28033 15.7803C8.98744 16.0732 8.51256 16.0732 8.21967 15.7803C7.92678 15.4874 7.92678 15.0126 8.21967 14.7197L10.9393 12L8.21967 9.28033C7.92678 8.98744 7.92678 8.51256 8.21967 8.21967C8.51256 7.92678 8.98744 7.92678 9.28033 8.21967Z" />\n  </svg>',
			SvgIcons.ChatHelp = '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C10.3817 22 8.81782 21.6146 7.41286 20.888L3.58704 21.9553C2.92212 22.141 2.23258 21.7525 2.04691 21.0876C1.98546 20.8676 1.98549 20.6349 2.04695 20.4151L3.11461 16.5922C2.38637 15.186 2 13.6203 2 12C2 6.47715 6.47715 2 12 2ZM12 3.5C7.30558 3.5 3.5 7.30558 3.5 12C3.5 13.4696 3.87277 14.8834 4.57303 16.1375L4.72368 16.4072L3.61096 20.3914L7.59755 19.2792L7.86709 19.4295C9.12006 20.1281 10.5322 20.5 12 20.5C16.6944 20.5 20.5 16.6944 20.5 12C20.5 7.30558 16.6944 3.5 12 3.5ZM12 15.5C12.5523 15.5 13 15.9477 13 16.5C13 17.0523 12.5523 17.5 12 17.5C11.4477 17.5 11 17.0523 11 16.5C11 15.9477 11.4477 15.5 12 15.5ZM12 6.75C13.5188 6.75 14.75 7.98122 14.75 9.5C14.75 10.5108 14.4525 11.074 13.6989 11.8586L13.5303 12.0303C12.9084 12.6522 12.75 12.9163 12.75 13.5C12.75 13.9142 12.4142 14.25 12 14.25C11.5858 14.25 11.25 13.9142 11.25 13.5C11.25 12.4892 11.5475 11.926 12.3011 11.1414L12.4697 10.9697C13.0916 10.3478 13.25 10.0837 13.25 9.5C13.25 8.80964 12.6904 8.25 12 8.25C11.3528 8.25 10.8205 8.74187 10.7565 9.37219L10.75 9.5C10.75 9.91421 10.4142 10.25 10 10.25C9.58579 10.25 9.25 9.91421 9.25 9.5C9.25 7.98122 10.4812 6.75 12 6.75Z" />\n  </svg>',
			SvgIcons.CheckMark = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M256 1088q0-26 19-45t45-19q26 0 45 19l403 402 915-914q19-19 45-19t45 19 19 45q0 26-19 45l-960 960q-19 19-45 19t-45-19l-448-448q-19-19-19-45z" />\n  </svg>',
			SvgIcons.ChevronDownMed = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M341 768q0-18 7-33t18-27 27-19 34-7q19 0 33 6t27 20l537 537 537-537q26-26 60-26 18 0 33 7t27 18 19 27 7 34q0 35-25 60l-598 598q-25 25-60 25t-60-25L366 828q-25-25-25-60z" />\n  </svg>',
			SvgIcons.ChevronLeftMed = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M597 1024q0-35 25-60l598-598q25-25 60-25 18 0 33 7t27 18 19 27 7 34q0 34-26 60l-537 537 537 537q13 13 19 27t7 33q0 18-7 33t-18 27-27 19-34 7q-35 0-60-25l-598-598q-25-25-25-60z" />\n  </svg>',
			SvgIcons.ChevronRightMed = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M683 1621q0-35 25-60l537-537-537-537q-25-25-25-60t24-60 61-26q35 0 60 25l598 598q25 25 25 60t-25 60l-598 598q-25 25-60 25-36 0-60-25t-25-61z" />\n  </svg>',
			SvgIcons.ChevronUpMed = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M341 1280q0-35 25-60l598-598q25-25 60-25t60 25l598 598q25 25 25 60 0 36-25 60t-61 25q-35 0-60-25l-537-537-537 537q-25 25-60 25t-60-24-26-61z" />\n  </svg>',
			SvgIcons.Compose = '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M21.7803 3.28033C22.0732 2.98744 22.0732 2.51256 21.7803 2.21967C21.4874 1.92678 21.0125 1.92678 20.7196 2.21967L10.7197 12.2197L10.25 13.75L11.7803 13.2803L21.7803 3.28033ZM6.25 3C4.45507 3 3 4.45508 3 6.25V17.75C3 19.5449 4.45507 21 6.25 21H17.75C19.5449 21 21 19.5449 21 17.75V9.75C21 9.33579 20.6642 9 20.25 9C19.8358 9 19.5 9.33579 19.5 9.75V17.75C19.5 18.7165 18.7165 19.5 17.75 19.5H6.25C5.2835 19.5 4.5 18.7165 4.5 17.75V6.25C4.5 5.2835 5.2835 4.5 6.25 4.5H14.25C14.6642 4.5 15 4.16421 15 3.75C15 3.33579 14.6642 3 14.25 3H6.25Z" />\n  </svg>',
			SvgIcons.Copy = '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n  <path d="M5.5028 4.62704L5.5 6.75V17.2542C5.5 19.0491 6.95507 20.5042 8.75 20.5042L17.3663 20.5045C17.0573 21.3782 16.224 22.0042 15.2444 22.0042H8.75C6.12665 22.0042 4 19.8776 4 17.2542V6.75C4 5.76929 4.62745 4.93512 5.5028 4.62704ZM17.75 2C18.9926 2 20 3.00736 20 4.25V17.25C20 18.4926 18.9926 19.5 17.75 19.5H8.75C7.50736 19.5 6.5 18.4926 6.5 17.25V4.25C6.5 3.00736 7.50736 2 8.75 2H17.75ZM17.75 3.5H8.75C8.33579 3.5 8 3.83579 8 4.25V17.25C8 17.6642 8.33579 18 8.75 18H17.75C18.1642 18 18.5 17.6642 18.5 17.25V4.25C18.5 3.83579 18.1642 3.5 17.75 3.5Z" />\n  </svg>',
			SvgIcons.Clear12 = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M1024 1145l-537 537q-25 25-60 25-36 0-61-25t-25-61q0-35 25-60l537-537-537-537q-25-25-25-61 0-18 7-33t18-27 27-18 34-7q35 0 60 25l537 537 537-537q25-25 60-25 36 0 61 25t25 61q0 35-25 60l-537 537 537 537q25 25 25 61 0 18-7 33t-18 27-27 18-34 7q-35 0-60-25l-537-537z" />\n  </svg>',
			SvgIcons.Flag = '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n  <path d="M3 3.74805C3 3.33383 3.33579 2.99805 3.75 2.99805H20.2541C20.8722 2.99805 21.225 3.70369 20.8541 4.19811L16.6898 9.74927L20.8541 15.3004C21.225 15.7948 20.8722 16.5005 20.2541 16.5005L4.5 16.5V21.2499C4.5 21.6296 4.21785 21.9434 3.85177 21.993L3.75 21.9999C3.3703 21.9999 3.05651 21.7177 3.00685 21.3517L3 21.2499V3.74805ZM18.7539 4.49805H4.5V15.0005H18.7539L15.1522 10.1993C14.9522 9.93264 14.9522 9.5659 15.1522 9.29921L18.7539 4.49805Z"  />\n</svg>',
			SvgIcons.FlagFill = '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n  <path d="M3 3.74805C3 3.33383 3.33579 2.99805 3.75 2.99805H20.2541C20.8722 2.99805 21.225 3.70369 20.8541 4.19811L16.6898 9.74927L20.8541 15.3004C21.225 15.7948 20.8722 16.5005 20.2541 16.5005L4.5 16.5V21.2499C4.5 21.6296 4.21785 21.9434 3.85177 21.993L3.75 21.9999C3.3703 21.9999 3.05651 21.7177 3.00685 21.3517L3 21.2499V3.74805Z" />\n  </svg>',
			SvgIcons.FullScreen = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M1856 128q26 0 45 19t19 45v768q0 26-19 45t-45 19q-26 0-45-19t-19-45V346L346 1792h614q26 0 45 19t19 45q0 26-19 45t-45 19H191q-26 0-44-19t-19-45v-768q0-26 19-45t45-19q26 0 45 19t19 45v614L1702 256h-614q-26 0-45-19t-19-45q0-26 19-45t45-19h768z" />\n  </svg>',
			SvgIcons.Globe = '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12.0001 1.99805C17.5238 1.99805 22.0016 6.47589 22.0016 11.9996C22.0016 17.5233 17.5238 22.0011 12.0001 22.0011C6.47638 22.0011 1.99854 17.5233 1.99854 11.9996C1.99854 6.47589 6.47638 1.99805 12.0001 1.99805ZM14.939 16.4993H9.06118C9.71322 18.9135 10.8466 20.5011 12.0001 20.5011C13.1536 20.5011 14.2869 18.9135 14.939 16.4993ZM7.5084 16.4999L4.78591 16.4998C5.74425 18.0328 7.1777 19.2384 8.88008 19.9104C8.3578 19.0906 7.92681 18.0643 7.60981 16.8949L7.5084 16.4999ZM19.2143 16.4998L16.4918 16.4999C16.168 17.8337 15.7004 18.9995 15.119 19.9104C16.716 19.2804 18.0757 18.1814 19.0291 16.7833L19.2143 16.4998ZM7.09351 9.99895H3.7359L3.73115 10.0162C3.57906 10.6525 3.49854 11.3166 3.49854 11.9996C3.49854 13.0558 3.69112 14.0669 4.0431 14.9999L7.21626 14.9995C7.07396 14.0504 6.99854 13.0422 6.99854 11.9996C6.99854 11.3156 7.031 10.6464 7.09351 9.99895ZM15.397 9.99901H8.60316C8.53514 10.6393 8.49853 11.309 8.49853 11.9996C8.49853 13.0591 8.58468 14.0694 8.73827 14.9997H15.2619C15.4155 14.0694 15.5016 13.0591 15.5016 11.9996C15.5016 11.309 15.465 10.6393 15.397 9.99901ZM20.2647 9.99811L16.9067 9.99897C16.9692 10.6464 17.0016 11.3156 17.0016 11.9996C17.0016 13.0422 16.9262 14.0504 16.7839 14.9995L19.9571 14.9999C20.309 14.0669 20.5016 13.0558 20.5016 11.9996C20.5016 11.3102 20.4196 10.64 20.2647 9.99811ZM8.88114 4.08875L8.85823 4.09747C6.81092 4.91218 5.1549 6.49949 4.25023 8.49935L7.29835 8.49972C7.61171 6.74693 8.15855 5.221 8.88114 4.08875ZM12.0001 3.49805L11.8844 3.50335C10.619 3.6191 9.39651 5.62107 8.8288 8.4993H15.1714C14.6052 5.62914 13.388 3.63033 12.1264 3.50436L12.0001 3.49805ZM15.1201 4.08881L15.2269 4.2629C15.8961 5.37537 16.4043 6.83525 16.7018 8.49972L19.7499 8.49935C18.8853 6.58795 17.3343 5.05341 15.4113 4.21008L15.1201 4.08881Z" /></svg>',
			SvgIcons.HugFill = '<svg xmlns="http://www.w3.org/2000/svg"viewBox="0 0 21 17" yu,i>\n  <path d="M10 4C10 6.20914 8.20914 8 6 8C3.79086 8 2 6.20914 2 4C2 1.79086 3.79086 0 6 0C8.20914 0 10 1.79086 10 4ZM18 5C18 6.65685 16.6569 8 15 8C13.3431 8 12 6.65685 12 5C12 3.34315 13.3431 2 15 2C16.6569 2 18 3.34315 18 5ZM0 12.25C0 11.0074 1.00736 10 2.25 10H9.75C10.1201 10 10.4694 10.0894 10.7774 10.2477L8.51256 12.5125C7.82915 13.196 7.82915 14.304 8.51256 14.9874L9.69939 16.1742C8.83326 16.6634 7.64105 17 6 17C0 17 0 12.5 0 12.5V12.25ZM18.2809 10.7202C17.988 10.4273 17.5131 10.4273 17.2202 10.7202C16.9273 11.013 16.9273 11.4879 17.2202 11.7808L18.4394 13H11.5607L12.7798 11.7809C13.0727 11.488 13.0727 11.0131 12.7798 10.7202C12.4869 10.4273 12.012 10.4273 11.7191 10.7202L9.21967 13.2197C8.92678 13.5125 8.92678 13.9874 9.21967 14.2803L11.7191 16.7798C12.012 17.0726 12.4869 17.0726 12.7798 16.7798C13.0727 16.4869 13.0727 16.012 12.7798 15.7191L11.5607 14.5H18.4393L17.2202 15.7191C16.9273 16.012 16.9273 16.4869 17.2202 16.7798C17.5131 17.0726 17.988 17.0726 18.2809 16.7798L20.7803 14.2803C21.0732 13.9874 21.0732 13.5126 20.7803 13.2197L18.2809 10.7202Z"/>\n  </svg>',
			SvgIcons.Keyboard = '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M19.7454 5C20.988 5 21.9954 6.00736 21.9954 7.25V16.7546C21.9954 17.9972 20.988 19.0046 19.7454 19.0046H4.25C3.00736 19.0046 2 17.9972 2 16.7546V7.25C2 6.00736 3.00736 5 4.25 5H19.7454ZM19.7454 6.5H4.25C3.83579 6.5 3.5 6.83579 3.5 7.25V16.7546C3.5 17.1688 3.83579 17.5046 4.25 17.5046H19.7454C20.1596 17.5046 20.4954 17.1688 20.4954 16.7546V7.25C20.4954 6.83579 20.1596 6.5 19.7454 6.5ZM6.75 14.5H17.25C17.6642 14.5 18 14.8358 18 15.25C18 15.6297 17.7178 15.9435 17.3518 15.9932L17.25 16H6.75C6.33579 16 6 15.6642 6 15.25C6 14.8703 6.28215 14.5565 6.64823 14.5068L6.75 14.5H17.25H6.75ZM16.5 11C17.0523 11 17.5 11.4477 17.5 12C17.5 12.5523 17.0523 13 16.5 13C15.9477 13 15.5 12.5523 15.5 12C15.5 11.4477 15.9477 11 16.5 11ZM10.5049 11C11.0572 11 11.5049 11.4477 11.5049 12C11.5049 12.5523 11.0572 13 10.5049 13C9.95259 13 9.50488 12.5523 9.50488 12C9.50488 11.4477 9.95259 11 10.5049 11ZM7.50488 11C8.05716 11 8.50488 11.4477 8.50488 12C8.50488 12.5523 8.05716 13 7.50488 13C6.95259 13 6.50488 12.5523 6.50488 12C6.50488 11.4477 6.95259 11 7.50488 11ZM13.5049 11C14.0572 11 14.5049 11.4477 14.5049 12C14.5049 12.5523 14.0572 13 13.5049 13C12.9526 13 12.5049 12.5523 12.5049 12C12.5049 11.4477 12.9526 11 13.5049 11ZM6 8C6.55228 8 7 8.44772 7 9C7 9.55228 6.55228 10 6 10C5.44772 10 5 9.55228 5 9C5 8.44772 5.44772 8 6 8ZM8.99512 8C9.54741 8 9.99512 8.44772 9.99512 9C9.99512 9.55228 9.54741 10 8.99512 10C8.44284 10 7.99512 9.55228 7.99512 9C7.99512 8.44772 8.44284 8 8.99512 8ZM11.9951 8C12.5474 8 12.9951 8.44772 12.9951 9C12.9951 9.55228 12.5474 10 11.9951 10C11.4428 10 10.9951 9.55228 10.9951 9C10.9951 8.44772 11.4428 8 11.9951 8ZM14.9951 8C15.5474 8 15.9951 8.44772 15.9951 9C15.9951 9.55228 15.5474 10 14.9951 10C14.4428 10 13.9951 9.55228 13.9951 9C13.9951 8.44772 14.4428 8 14.9951 8ZM17.9951 8C18.5474 8 18.9951 8.44772 18.9951 9C18.9951 9.55228 18.5474 10 17.9951 10C17.4428 10 16.9951 9.55228 16.9951 9C16.9951 8.44772 17.4428 8 17.9951 8Z" />\n  </svg>',
			SvgIcons.LeaveChat = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M555 1934L79 2046q-10 2-15 2-27 0-45-18t-19-46q0-13 3-29t7-34 9-34 8-29q23-90 45-178t46-178q-59-111-88-232T0 1024q0-142 36-273t103-244 160-207 207-160T751 37t273-37q140 0 270 36t244 102 206 158 161 205 104 243 39 270q-59-77-140-135-27-162-106-300t-198-238-266-156-314-57q-124 0-238 32t-214 90-181 140-140 181-91 214-32 239q0 62 8 117t23 109 36 105 47 107q4 8 6 16t3 17q0 6-3 21t-7 31-8 32-5 21q-18 75-37 149t-39 149q14-3 47-11t76-19 90-22 88-21 71-16 39-6q17 0 31 7 70 32 139 58t146 40q58 81 135 140-121-2-236-30t-223-84zm341-462q0-119 45-224t124-183 183-123 224-46q79 0 152 20t138 58 117 91 90 117 58 137 21 153q0 119-45 224t-124 183-183 123-224 46q-120 0-225-45t-183-123-123-183-45-225zm576 328q30 0 51-21t21-51q0-30-21-51l-141-141h346q26 0 45-19t19-45q0-26-19-45t-45-19h-346l141-141q21-21 21-51t-21-51-51-21q-30 0-51 21l-256 256q-21 21-21 51t21 51l256 256q21 21 51 21z" />\n  </svg>',
			SvgIcons.MessageFill = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M2048 128v1408H731l-475 475v-475H0V128h2048z" />\n  </svg>',
			SvgIcons.Microphone = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M640 376q0-78 31-146t83-120 123-80 147-30q77 0 147 29t122 81 84 119 31 147v656q0 75-30 143t-82 120-120 82-144 31q-79 0-150-28t-125-79-85-119-32-150V376zm379 904q52 0 99-19t84-53 57-80 21-99V384q0-51-20-97t-54-82-79-56-98-21q-52 0-99 19t-84 53-57 80-21 99v645q0 51 20 97t54 82 79 56 98 21zm69 445v259q0 26-19 45t-45 19q-26 0-45-19t-19-45v-259q-136-13-253-72t-203-154-135-216-49-259q0-26 19-45t45-19q26 0 45 19t19 45q0 76 19 149t58 140q39 66 93 119t118 91 138 57 150 20q77 0 150-20t137-57 118-90 93-120q39-66 58-139t20-150q0-26 19-45t45-19q26 0 45 19t19 45q0 91-22 176t-63 160-99 138-129 111-154 78-173 38z" />\n  </svg>',
			SvgIcons.More = '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n  <path d="M7.75 12C7.75 12.9665 6.9665 13.75 6 13.75C5.0335 13.75 4.25 12.9665 4.25 12C4.25 11.0335 5.0335 10.25 6 10.25C6.9665 10.25 7.75 11.0335 7.75 12ZM13.75 12C13.75 12.9665 12.9665 13.75 12 13.75C11.0335 13.75 10.25 12.9665 10.25 12C10.25 11.0335 11.0335 10.25 12 10.25C12.9665 10.25 13.75 11.0335 13.75 12ZM18 13.75C18.9665 13.75 19.75 12.9665 19.75 12C19.75 11.0335 18.9665 10.25 18 10.25C17.0335 10.25 16.25 11.0335 16.25 12C16.25 12.9665 17.0335 13.75 18 13.75Z" />\n  </svg>\n  ',
			SvgIcons.Offensive = '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M3 3.74805C3 3.33383 3.33579 2.99805 3.75 2.99805H20.2541C20.8722 2.99805 21.225 3.70369 20.8541 4.19811L16.6898 9.74927L20.8541 15.3004C21.225 15.7948 20.8722 16.5005 20.2541 16.5005L4.5 16.5V21.2499C4.5 21.6296 4.21785 21.9434 3.85177 21.993L3.75 21.9999C3.3703 21.9999 3.05651 21.7177 3.00685 21.3517L3 21.2499V3.74805Z" />\n  </svg>\n  ',
			SvgIcons.PauseSolid = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M320 1920q-39 0-74-15t-61-41-42-62-15-74V320q0-39 15-74t41-61 62-42 74-15h256q39 0 74 15t61 41 42 62 15 74v1408q0 39-15 74t-41 61-62 42-74 15H320zm1152 0q-39 0-74-15t-61-41-42-62-15-74V320q0-39 15-74t41-61 62-42 74-15h256q39 0 74 15t61 41 42 62 15 74v1408q0 39-15 74t-41 61-62 42-74 15h-256z" />\n  </svg>',
			SvgIcons.PinSolid = '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path d="M21.0682 7.75765L16.2425 2.93189C14.9152 1.60462 12.6777 1.96772 11.8382 3.6466L9.40281 8.51748C9.31512 8.69287 9.16223 8.82694 8.97688 8.89096L4.81061 10.3302C3.93791 10.6317 3.682 11.7427 4.33487 12.3956L7.43936 15.5001L3.00008 19.9394L3 21.0001H4.06074L8.50002 16.5607L11.6045 19.6653C12.2574 20.3181 13.3684 20.0622 13.6699 19.1895L15.1092 15.0232C15.1732 14.8379 15.3073 14.685 15.4826 14.5973L20.3535 12.1619C22.0324 11.3224 22.3955 9.08491 21.0682 7.75765Z"  />\n</svg>',
			SvgIcons.Pin = '<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path d="M16.2425 2.93189L21.0682 7.75765C22.3955 9.08491 22.0324 11.3224 20.3535 12.1619L15.4826 14.5973C15.3073 14.685 15.1732 14.8379 15.1092 15.0232L13.6699 19.1895C13.3684 20.0622 12.2574 20.3181 11.6045 19.6653L8.50002 16.5607L4.06074 21.0001H3L3.00008 19.9394L7.43936 15.5001L4.33487 12.3956C3.682 11.7427 3.93791 10.6317 4.81061 10.3302L8.97688 8.89096C9.16223 8.82694 9.31512 8.69287 9.40281 8.51748L11.8382 3.6466C12.6777 1.96772 14.9152 1.60462 16.2425 2.93189ZM20.0076 8.81831L15.1818 3.99255C14.5785 3.38924 13.5614 3.55429 13.1799 4.31742L10.7445 9.18829C10.4814 9.71446 10.0227 10.1167 9.46666 10.3087L5.67812 11.6175L12.3826 18.322L13.6914 14.5335C13.8835 13.9774 14.2857 13.5188 14.8118 13.2557L19.6827 10.8202C20.4458 10.4387 20.6109 9.42161 20.0076 8.81831Z" />\n  </svg>',
			SvgIcons.PlaySolid = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M449 1926q-40 0-75-15t-61-41-42-61-15-75V314q0-40 15-75t41-61 61-41 75-15q24 0 48 6t45 18l1274 710q46 26 72 70t26 98q0 54-25 98t-73 70L542 1902q-21 12-45 18t-48 6z" />\n  </svg>',
			SvgIcons.Refresh = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M2048 1024q0 142-36 273t-103 244-160 207-207 160-245 103-273 37q-142 0-273-36t-245-103-207-160-159-207-103-245-37-273q0-142 36-273t103-244 160-207 207-160T751 37t273-37q111 0 217 23t204 68 185 109 162 147V64q0-26 19-45t45-19q26 0 45 19t19 45v241q0 120 1 241 0 17-2 33t-9 30-20 22-34 9h-512q-26 0-45-19t-19-45q0-26 19-45t45-19h415q-63-90-144-161t-177-120-200-76-214-27q-124 0-238 32t-214 90-181 140-140 181-91 214-32 239q0 124 32 238t90 214 140 182 181 140 214 90 239 32q121 0 234-30t213-88 183-141 145-187q62-106 91-217t30-233q0-26 19-45t45-19q26 0 45 19t19 45z" />\n  </svg>',
			SvgIcons.RotatingLoader = '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"> <circle cx="10" cy="10" r="9.25" fill="transparent" stroke="white" stroke-opacity="0.2" stroke-width="1.5"/> <mask id="path-2-inside-1_533_10314" fill="white"> <path d="M20 10C20 11.3132 19.7413 12.6136 19.2388 13.8268C18.7362 15.0401 17.9997 16.1425 17.0711 17.0711C16.1425 17.9997 15.0401 18.7363 13.8268 19.2388C12.6136 19.7413 11.3132 20 9.99999 20L9.99999 18.4971C11.1158 18.4971 12.2208 18.2773 13.2517 17.8503C14.2826 17.4233 15.2193 16.7974 16.0083 16.0083C16.7974 15.2193 17.4232 14.2826 17.8503 13.2517C18.2773 12.2208 18.4971 11.1159 18.4971 10H20Z"/> </mask> <path d="M20 10C20 11.3132 19.7413 12.6136 19.2388 13.8268C18.7362 15.0401 17.9997 16.1425 17.0711 17.0711C16.1425 17.9997 15.0401 18.7363 13.8268 19.2388C12.6136 19.7413 11.3132 20 9.99999 20L9.99999 18.4971C11.1158 18.4971 12.2208 18.2773 13.2517 17.8503C14.2826 17.4233 15.2193 16.7974 16.0083 16.0083C16.7974 15.2193 17.4232 14.2826 17.8503 13.2517C18.2773 12.2208 18.4971 11.1159 18.4971 10H20Z" stroke="#D1DBFA" stroke-width="3" mask="url(#path-2-inside-1_533_10314)"/> <style> svg > path { transform-origin: 50%; animation: rotation 2s infinite ease-in-out; } @keyframes rotation { from {transform: rotate(0deg);} to {transform: rotate(360deg);} } </style> </svg>',
			SvgIcons.Search = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n    <path d="M1920 1856q0 26-19 45t-45 19q-26 0-45-19l-529-529q-94 79-210 121t-240 43q-97 0-187-25t-168-71-142-110-111-143-71-168-25-187q0-97 25-187t71-168 110-142 143-111 168-71 187-25q97 0 187 25t168 71 142 110 111 143 71 168 25 187q0 123-42 239t-122 211l529 529q19 19 19 45zM1408 832q0-79-20-152t-58-138-91-117-117-90-137-58-153-21q-119 0-224 45T425 425 302 608t-46 224q0 120 45 225t123 183 183 123 225 45q119 0 224-45t183-124 123-183 46-224z" />\n  </svg>',
			SvgIcons.SendFill = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">\n  <path d="M64 1920q-28 0-46-18t-18-47q0-7 2-17l189-658q5-17 19-30t32-16l878-139q14-2 22-11t8-24q0-14-8-23t-22-12L242 786q-18-3-32-16t-19-30L2 82Q0 72 0 65q0-28 18-46T64 0q15 0 27 6l1920 896q17 8 27 23t10 35q0 19-10 34t-27 24L91 1914q-12 6-27 6z" />\n  </svg>',
			SvgIcons.Share = '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n   <path d="M6.7467 4.00003H10.2109C10.6251 4.00003 10.9609 4.33582 10.9609 4.75003C10.9609 5.12972 10.6788 5.44352 10.3127 5.49318L10.2109 5.50003H6.7467C5.55584 5.50003 4.58106 6.42519 4.50189 7.59598L4.4967 7.75003V17.25C4.4967 18.4409 5.42187 19.4157 6.59266 19.4948L6.7467 19.5H16.2474C17.4383 19.5 18.4131 18.5749 18.4922 17.4041L18.4974 17.25V16.7522C18.4974 16.338 18.8332 16.0022 19.2474 16.0022C19.6271 16.0022 19.9409 16.2844 19.9906 16.6505L19.9974 16.7522V17.25C19.9974 19.2543 18.4251 20.8913 16.4466 20.9948L16.2474 21H6.7467C4.74244 21 3.10543 19.4277 3.0019 17.4492L2.9967 17.25V7.75003C2.9967 5.74577 4.56907 4.10876 6.54755 4.00523L6.7467 4.00003H10.2109H6.7467ZM14.5007 6.51988V3.75003C14.5007 3.12606 15.2075 2.78998 15.6877 3.13983L15.7699 3.20877L21.7645 8.95877C22.0442 9.22712 22.0697 9.65814 21.8408 9.9561L21.7646 10.0412L15.77 15.7931C15.3197 16.2251 14.5878 15.9477 14.5078 15.3589L14.5007 15.2519V12.5266L14.1572 12.5567C11.7575 12.807 9.45748 13.8879 7.24265 15.8174C6.72354 16.2696 5.92041 15.842 6.00579 15.1589C6.67058 9.83933 9.45245 6.90733 14.2013 6.53953L14.5007 6.51988V3.75003V6.51988ZM16.0007 5.50867V7.25003C16.0007 7.66424 15.6649 8.00003 15.2507 8.00003C11.3773 8.00003 8.97667 9.67616 7.93943 13.1572L7.86037 13.4358L8.21256 13.199C10.449 11.7372 12.7985 11 15.2507 11C15.6304 11 15.9442 11.2822 15.9939 11.6483L16.0007 11.75V13.4928L20.1619 9.50012L16.0007 5.50867Z"/>\n  </svg>',
			SvgIcons.Stop = '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M4.75 3C3.7835 3 3 3.7835 3 4.75V19.25C3 20.2165 3.7835 21 4.75 21H19.25C20.2165 21 21 20.2165 21 19.25V4.75C21 3.7835 20.2165 3 19.25 3H4.75Z"  />\n  </svg>',
			SvgIcons.ThumbDislike = '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n   <path d="M16.4996 17.9849C16.4996 20.4269 15.3595 22.1836 13.4932 22.1836C12.5183 22.1836 12.1518 21.6409 11.8021 20.3878L11.596 19.6159C11.495 19.2572 11.3192 18.6464 11.069 17.7849C11.0623 17.7618 11.0524 17.7401 11.0396 17.72L8.17281 13.2344C7.49476 12.1734 6.49429 11.3579 5.31841 10.9077L4.84513 10.7265C3.5984 10.2492 2.87457 8.94538 3.1287 7.63481L3.53319 5.54873C3.77462 4.30364 4.71828 3.31273 5.9501 3.01082L13.5778 1.14129C16.109 0.520894 18.6674 2.05583 19.3113 4.58116L20.7262 10.1303C21.1697 11.8696 20.1192 13.6391 18.3799 14.0825C18.1175 14.1494 17.8478 14.1833 17.5769 14.1833H15.7536C16.2497 15.8162 16.4996 17.076 16.4996 17.9849ZM4.60127 7.92034C4.48576 8.51606 4.81477 9.10868 5.38147 9.32565L5.85475 9.50686C7.33036 10.0718 8.58585 11.0952 9.43674 12.4266L12.3035 16.9123C12.3935 17.0531 12.4629 17.2062 12.5095 17.3668L13.0614 19.287L13.2731 20.0784C13.4125 20.5664 13.4827 20.6836 13.4932 20.6836C14.3609 20.6836 14.9996 19.6995 14.9996 17.9849C14.9996 17.1004 14.6738 15.6495 14.0158 13.6698C13.8544 13.1843 14.2158 12.6833 14.7275 12.6833H17.5769C17.7228 12.6833 17.868 12.6651 18.0093 12.629C18.9459 12.3902 19.5115 11.4375 19.2727 10.5009L17.8578 4.95176C17.4172 3.2239 15.6668 2.17369 13.9349 2.59816L6.30718 4.46769C5.64389 4.63026 5.13577 5.16383 5.00577 5.83426L4.60127 7.92034Z"/>\n  </svg>',
			SvgIcons.ThumbDislikeFill = '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M15.0556 14.1826C15.5164 15.6096 15.7491 16.8587 15.7491 17.9358C15.7491 20.3345 14.81 22.1832 13.2491 22.1832C12.4493 22.1832 12.1712 21.7335 11.8665 20.6367L11.5968 19.6152C11.4958 19.2565 11.32 18.6457 11.0697 17.7842C11.063 17.7611 11.0532 17.7394 11.0403 17.7193L8.17359 13.2336C7.49554 12.1727 6.49507 11.3572 5.31919 10.907L4.06196 10.4256C3.26859 10.1218 2.80797 9.29217 2.96968 8.45817L3.65584 4.9195C3.82298 4.05751 4.47629 3.3715 5.32909 3.16248L13.5786 1.14055C16.1098 0.520162 18.6682 2.05509 19.3121 4.58042L20.886 10.7531C21.2612 12.2248 20.3723 13.7221 18.9007 14.0973C18.6786 14.1539 18.4504 14.1826 18.2212 14.1826H15.0556Z"  />\n  </svg>',
			SvgIcons.ThumbLike = '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M16.4996 5.20235C16.4996 2.76041 15.3595 1.00366 13.4932 1.00366C12.467 1.00366 12.1149 1.60503 11.747 3.00324C11.6719 3.29209 11.635 3.43272 11.596 3.57133C11.495 3.93007 11.3192 4.54082 11.069 5.40234C11.0623 5.42542 11.0524 5.44717 11.0396 5.46724L8.17281 9.95291C7.49476 11.0139 6.49429 11.8294 5.31841 12.2796L4.84513 12.4608C3.5984 12.9381 2.87457 14.2419 3.1287 15.5525L3.53319 17.6385C3.77462 18.8836 4.71828 19.8745 5.9501 20.1764L13.5778 22.046C16.109 22.6664 18.6674 21.1314 19.3113 18.6061L20.7262 13.057C21.1697 11.3177 20.1192 9.5482 18.3799 9.10473C18.1175 9.03782 17.8478 9.00398 17.5769 9.00398H15.7536C16.2497 7.37109 16.4996 6.1113 16.4996 5.20235ZM4.60127 15.2669C4.48576 14.6712 4.81477 14.0786 5.38147 13.8616L5.85475 13.6804C7.33036 13.1154 8.58585 12.0921 9.43674 10.7607L12.3035 6.27501C12.3935 6.13412 12.4629 5.98107 12.5095 5.8205C12.7608 4.95549 12.9375 4.3415 13.0399 3.97761C13.083 3.82436 13.1239 3.66891 13.1976 3.38494C13.3875 2.66324 13.4809 2.50366 13.4932 2.50366C14.3609 2.50366 14.9996 3.48773 14.9996 5.20235C14.9996 6.08683 14.6738 7.53779 14.0158 9.51741C13.8544 10.0029 14.2158 10.504 14.7275 10.504H17.5769C17.7228 10.504 17.868 10.5222 18.0093 10.5582C18.9459 10.797 19.5115 11.7498 19.2727 12.6863L17.8578 18.2355C17.4172 19.9634 15.6668 21.0136 13.9349 20.5891L6.30718 18.7196C5.64389 18.557 5.13577 18.0234 5.00577 17.353L4.60127 15.2669Z"/>\n  </svg>',
			SvgIcons.ThumbLikeFill = '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M15.0556 9.00361C15.5164 7.57659 15.7491 6.32742 15.7491 5.25034C15.7491 2.85167 14.81 1.00293 13.2491 1.00293C12.4023 1.00293 12.1402 1.50717 11.8123 2.74976C11.8295 2.68483 11.6494 3.38371 11.5968 3.57096C11.4958 3.9297 11.32 4.54045 11.0697 5.40197C11.063 5.42505 11.0532 5.4468 11.0403 5.46688L8.17359 9.95254C7.49554 11.0135 6.49507 11.829 5.31919 12.2792L4.06196 12.7606C3.26859 13.0643 2.80797 13.894 2.96968 14.728L3.65584 18.2667C3.82298 19.1287 4.47629 19.8147 5.32909 20.0237L13.5786 22.0456C16.1098 22.666 18.6682 21.1311 19.3121 18.6057L20.886 12.4331C21.2612 10.9614 20.3723 9.46411 18.9007 9.08887C18.6786 9.03225 18.4504 9.00361 18.2212 9.00361H15.0556Z"  />\n  </svg>',
			function(e) {
					e.AddBold = "add-bold",
					e.BackToWindow = "back-to-window",
					e.Brush = "brush",
					e.Chat = "chat",
					e.ChatDismissFill = "ChatDismissFill",
					e.ChatHelp = "chat-help",
					e.CheckMark = "check-mark",
					e.ChevronDownMed = "chevron-down-med",
					e.ChevronLeftMed = "chevron-left-med",
					e.ChevronRightMed = "chevron-right-med",
					e.ChevronUpMed = "chevron-up-med",
					e.Clear12 = "clear-12",
					e.Compose = "compose",
					e.Copy = "copy",
					e.Flag = "flag",
					e.FlagFill = "flag-fill",
					e.FullScreen = "full-screen",
					e.Globe = "globe",
					e.HugFill = "hug-fill",
					e.Keyboard = "keyboard",
					e.LeaveChat = "leave-chat",
					e.MessageFill = "MessageFill",
					e.Microphone = "microphone",
					e.More = "more",
					e.Offensive = "offensive",
					e.PauseSolid = "pause-solid",
					e.Pin = "pin",
					e.PinSolid = "pin-solid",
					e.PlaySolid = "play-solid",
					e.Refresh = "refresh",
					e.RotatingLoader = "rotating-loader",
					e.Search = "search",
					e.SendFill = "send-fill",
					e.Share = "share",
					e.Stop = "stop",
					e.ThumbDislike = "thumb-dislike",
					e.ThumbDislikeFill = "thumb-dislike-fill",
					e.ThumbLike = "thumb-like",
					e.ThumbLikeFill = "thumb-like-fill"
			}(Yp || (Yp = {}));
			let Kp = class extends w {
					constructor() {
							super(),
							this.type = Yp.Chat,
							this.svg = "",
							this.updateIconSvg()
					}
					connectedCallback() {
							super.connectedCallback(),
							this.updateIconProperties(),
							this.updateIconSvg()
					}
					updateIconProperties() {
							void 0 !== this.size && this.style.setProperty("--icon-size", `${this.size}px`),
							void 0 !== this.color && this.style.setProperty("--icon-color", `${this.color}`)
					}
					updateIconSvg() {
							switch (this.type) {
							case Yp.AddBold:
									this.svg = SvgIcons.AddBold;
									break;
							case Yp.BackToWindow:
									this.svg = SvgIcons.BackToWindow;
									break;
							case Yp.Brush:
									this.svg = SvgIcons.Brush;
									break;
							case Yp.Chat:
									this.svg = SvgIcons.Chat;
									break;
							case Yp.ChatDismissFill:
									this.svg = SvgIcons.ChatDismissFill;
									break;
							case Yp.ChatHelp:
									this.svg = SvgIcons.ChatHelp;
									break;
							case Yp.CheckMark:
									this.svg = SvgIcons.CheckMark;
									break;
							case Yp.ChevronDownMed:
									this.svg = SvgIcons.ChevronDownMed;
									break;
							case Yp.ChevronLeftMed:
									this.svg = SvgIcons.ChevronLeftMed;
									break;
							case Yp.ChevronRightMed:
									this.svg = SvgIcons.ChevronRightMed;
									break;
							case Yp.ChevronUpMed:
									this.svg = SvgIcons.ChevronUpMed;
									break;
							case Yp.Clear12:
									this.svg = SvgIcons.Clear12;
									break;
							case Yp.Compose:
									this.svg = SvgIcons.Compose;
									break;
							case Yp.Copy:
									this.svg = SvgIcons.Copy;
									break;
							case Yp.Flag:
									this.svg = SvgIcons.Flag;
									break;
							case Yp.FlagFill:
									this.svg = SvgIcons.FlagFill;
									break;
							case Yp.FullScreen:
									this.svg = SvgIcons.FullScreen;
									break;
							case Yp.Globe:
									this.svg = SvgIcons.Globe;
									break;
							case Yp.HugFill:
									this.svg = SvgIcons.HugFill;
									break;
							case Yp.Keyboard:
									this.svg = SvgIcons.Keyboard;
									break;
							case Yp.LeaveChat:
									this.svg = SvgIcons.LeaveChat;
									break;
							case Yp.MessageFill:
									this.svg = SvgIcons.MessageFill;
									break;
							case Yp.Microphone:
									this.svg = SvgIcons.Microphone;
									break;
							case Yp.More:
									this.svg = SvgIcons.More;
									break;
							case Yp.Offensive:
									this.svg = SvgIcons.Offensive;
									break;
							case Yp.PauseSolid:
									this.svg = SvgIcons.PauseSolid;
									break;
							case Yp.Pin:
									this.svg = SvgIcons.Pin;
									break;
							case Yp.PinSolid:
									this.svg = SvgIcons.PinSolid;
									break;
							case Yp.PlaySolid:
									this.svg = SvgIcons.PlaySolid;
									break;
							case Yp.RotatingLoader:
									this.svg = SvgIcons.RotatingLoader;
									break;
							case Yp.Refresh:
									this.svg = SvgIcons.Refresh;
									break;
							case Yp.Search:
									this.svg = SvgIcons.Search;
									break;
							case Yp.SendFill:
									this.svg = SvgIcons.SendFill;
									break;
							case Yp.Share:
									this.svg = SvgIcons.Share;
									break;
							case Yp.Stop:
									this.svg = SvgIcons.Stop;
									break;
							case Yp.ThumbDislike:
									this.svg = SvgIcons.ThumbDislike;
									break;
							case Yp.ThumbDislikeFill:
									this.svg = SvgIcons.ThumbDislikeFill;
									break;
							case Yp.ThumbLike:
									this.svg = SvgIcons.ThumbLike;
									break;
							case Yp.ThumbLikeFill:
									this.svg = SvgIcons.ThumbLikeFill
							}
					}
			}
			;
			__decorate([attr, __metadata("design:type", String)], Kp.prototype, "type", void 0),
			__decorate([attr, __metadata("design:type", Number)], Kp.prototype, "size", void 0),
			__decorate([attr, __metadata("design:type", String)], Kp.prototype, "color", void 0),
			__decorate([observable, __metadata("design:type", String)], Kp.prototype, "svg", void 0),
			Kp = __decorate([customElement({
					name: "svg-icon",
					template: Wp,
					styles: jp
			}), __metadata("design:paramtypes", [])], Kp);
			const Qp = css`
:host {
	display: flex;
	align-items: center;
	justify-content: center;
	position: absolute;
	height: 56px;
	width: 56px;
	user-select: none;
	cursor: pointer;
}

.icon {
	display: block;
	position: absolute;
	height: 56px;
	width: 56px;
	padding: 0;
	margin: 0;
	opacity: 0;
	border-radius: 50%;
	border: none;
	background: transparent;
	transition-property: opacity;
	transition-duration: ${Bp.motion.duration.fast};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
}

.icon svg {
	display: block;
	user-select: none;
	backface-visibility: hidden;
	transform: translateZ(0);
}

:host([state=${"standby"}]) .icon,
:host([state=${"listening"}]) .icon {
	opacity: 1;
}

:host([state=${"blocked"}]) .icon {
	filter: grayscale(1);
	opacity: 1;
}

:host([state=${"errored"}]) .icon,
:host([state=${"loading"}]) .icon {
	opacity: 0.5;
}

:host([state=${"speaking"}]) .icon {
	opacity: 1;
	height: 28px;
}
`
				, Zp = html`
<template>
	<button
		type="button"
		class="icon"
		aria-label=${e=>e.ariaLabelText}
		aria-live="polite"
		?disabled=${e=>!e.isSpeechModeEnabled}
	>
		${e=>html`${e.svg}`}
	</button>
</template>
`;
			let Xp = class extends w {
					constructor() {
							super(...arguments),
							this.isSpeechModeEnabled = !1,
							this.startListeningAriaLabel = "",
							this.stopListeningAriaLabel = "",
							this.stopReadoutAriaLabel = "",
							this.svg = "",
							this.ariaLabelText = "",
							this.svgMic = '<svg width="56" height="56" viewBox="0 0 56 56" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path d="M54 28C54 42.3594 42.3594 54 28 54C13.6406 54 2 42.3594 2 28C2 13.6406 13.6406 2 28 2C42.3594 2 54 13.6406 54 28Z" fill="white"/>\n  <path fill-rule="evenodd" clip-rule="evenodd" d="M56 28C56 43.464 43.464 56 28 56C12.536 56 0 43.464 0 28C0 12.536 12.536 0 28 0C43.464 0 56 12.536 56 28ZM28 54C42.3594 54 54 42.3594 54 28C54 13.6406 42.3594 2 28 2C13.6406 2 2 13.6406 2 28C2 42.3594 13.6406 54 28 54Z" fill="url(#paint0_linear_35_10318)"/>\n  <path d="M36.9286 26.6C37.471 26.6 37.9193 26.995 37.9902 27.5075L38 27.65V28.35C38 33.3332 34.0642 37.4155 29.0728 37.7744L29.0714 40.95C29.0714 41.5299 28.5917 42 28 42C27.4576 42 27.0093 41.605 26.9384 41.0925L26.9286 40.95L26.9286 37.7745C22.0475 37.4242 18.1755 33.5133 18.0058 28.6809L18 28.35V27.65C18 27.0701 18.4797 26.6 19.0714 26.6C19.6139 26.6 20.0621 26.995 20.1331 27.5075L20.1429 27.65V28.35C20.1429 32.3078 23.3349 35.535 27.3337 35.6939L27.6429 35.7H28.3571C32.3957 35.7 35.6888 32.5718 35.8509 28.653L35.8571 28.35V27.65C35.8571 27.0701 36.3368 26.6 36.9286 26.6ZM28 14C31.1559 14 33.7143 16.5072 33.7143 19.6V28C33.7143 31.0928 31.1559 33.6 28 33.6C24.8441 33.6 22.2857 31.0928 22.2857 28V19.6C22.2857 16.5072 24.8441 14 28 14Z" fill="url(#paint1_linear_35_10318)"/>\n  <defs>\n  <linearGradient id="paint0_linear_35_10318" x1="7.05344" y1="64.4" x2="57.7973" y2="56.4429" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#18C1ED"/>\n  <stop offset="0.5" stop-color="#3495EA"/>\n  <stop offset="1" stop-color="#2161EF"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_35_10318" x1="20.5191" y1="46.2" x2="38.8574" y2="44.146" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#18C1ED"/>\n  <stop offset="0.5" stop-color="#3495EA"/>\n  <stop offset="1" stop-color="#2161EF"/>\n  </linearGradient>\n  </defs>\n  </svg>\n   \n  ',
							this.svgClose = '<svg width="56" height="56" viewBox="0 0 56 56" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g filter="url(#filter0_dd_615_85512)">\n  <circle cx="28" cy="28" r="28" fill="url(#paint0_linear_615_85512)"/>\n  </g>\n  <path d="M18.9112 19.1181L19.0082 19.0082C19.4288 18.5876 20.0905 18.5553 20.5482 18.9112L20.6581 19.0082L27.9998 26.349L35.3416 19.0082C35.7971 18.5526 36.5359 18.5526 36.9915 19.0082C37.447 19.4638 37.447 20.2025 36.9915 20.6581L29.6507 27.9998L36.9915 35.3416C37.412 35.7621 37.4444 36.4239 37.0885 36.8816L36.9915 36.9915C36.5709 37.412 35.9091 37.4444 35.4515 37.0885L35.3416 36.9915L27.9998 29.6507L20.6581 36.9915C20.2025 37.447 19.4638 37.447 19.0082 36.9915C18.5526 36.5359 18.5526 35.7971 19.0082 35.3416L26.349 27.9998L19.0082 20.6581C18.5876 20.2376 18.5553 19.5758 18.9112 19.1181L19.0082 19.0082L18.9112 19.1181Z" fill="url(#paint1_linear_615_85512)"/>\n  <path d="M18.9112 19.1181L19.0082 19.0082C19.4288 18.5876 20.0905 18.5553 20.5482 18.9112L20.6581 19.0082L27.9998 26.349L35.3416 19.0082C35.7971 18.5526 36.5359 18.5526 36.9915 19.0082C37.447 19.4638 37.447 20.2025 36.9915 20.6581L29.6507 27.9998L36.9915 35.3416C37.412 35.7621 37.4444 36.4239 37.0885 36.8816L36.9915 36.9915C36.5709 37.412 35.9091 37.4444 35.4515 37.0885L35.3416 36.9915L27.9998 29.6507L20.6581 36.9915C20.2025 37.447 19.4638 37.447 19.0082 36.9915C18.5526 36.5359 18.5526 35.7971 19.0082 35.3416L26.349 27.9998L19.0082 20.6581C18.5876 20.2376 18.5553 19.5758 18.9112 19.1181L19.0082 19.0082L18.9112 19.1181Z" fill="white"/>\n  </g>\n  <defs>\n  <filter id="filter0_dd_615_85512" x="-3" y="-2" width="62" height="63" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="2"/>\n  <feGaussianBlur stdDeviation="1.5"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0"/>\n  <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_615_85512"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="-1"/>\n  <feGaussianBlur stdDeviation="0.5"/>\n  <feComposite in2="hardAlpha" operator="out"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0"/>\n  <feBlend mode="normal" in2="effect1_dropShadow_615_85512" result="effect2_dropShadow_615_85512"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_615_85512" result="shape"/>\n  </filter>\n  <linearGradient id="paint0_linear_615_85512" x1="0.213741" y1="66.5" x2="63.1001" y2="57.2323" gradientUnits="userSpaceOnUse">\n  <stop offset="0.107946" stop-color="#2870EA"/>\n  <stop offset="0.870845" stop-color="#1B4AEF"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_615_85512" x1="21.0176" y1="40.1332" x2="37.9323" y2="37.4808" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#18C1ED"/>\n  <stop offset="0.5" stop-color="#3495EA"/>\n  <stop offset="1" stop-color="#2161EF"/>\n  </linearGradient>\n  <clipPath id="clip0_615_85512">\n  <rect width="56" height="56" fill="white"/>\n  </clipPath>\n  </defs>\n  </svg>\n  ',
							this.svgFeedback = '<svg width="56" height="28" viewBox="0 0 56 28" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <rect x="52" y="11" width="4" height="6" rx="2" fill="#1DBDED"/>\n  <rect x="39" y="7" width="4" height="14" rx="2" fill="#2C7AEB"/>\n  <rect x="26" width="4" height="28" rx="2" fill="#3398EB"/>\n  <rect x="13" y="7" width="4" height="14" rx="2" fill="#2C7AEB"/>\n  <rect y="11" width="4" height="6" rx="2" fill="#1DBDED"/>\n  </svg>\n  '
					}
					stateChanged(e, t) {
							switch (t) {
							case "listening":
									this.svg = this.svgClose,
									this.ariaLabelText = this.stopListeningAriaLabel;
									break;
							case "speaking":
									this.svg = this.svgFeedback,
									this.ariaLabelText = this.stopReadoutAriaLabel;
									break;
							default:
									this.svg = this.svgMic,
									this.ariaLabelText = this.startListeningAriaLabel
							}
					}
			}
			;
			__decorate([attr, __metadata("design:type", String)], Xp.prototype, "state", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Xp.prototype, "isSpeechModeEnabled", void 0),
			__decorate([observable, __metadata("design:type", String)], Xp.prototype, "startListeningAriaLabel", void 0),
			__decorate([observable, __metadata("design:type", String)], Xp.prototype, "stopListeningAriaLabel", void 0),
			__decorate([observable, __metadata("design:type", String)], Xp.prototype, "stopReadoutAriaLabel", void 0),
			__decorate([observable, __metadata("design:type", String)], Xp.prototype, "svg", void 0),
			__decorate([observable, __metadata("design:type", String)], Xp.prototype, "ariaLabelText", void 0),
			Xp = __decorate([customElement({
					name: "cib-speech-icon",
					template: Zp,
					styles: Qp
			})], Xp);
			const Jp = css`
:host {
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 4px;
	height: 24px;
	color: #202124;
	background: #f1f3f4;
	border: 1px solid rgba(255, 255, 255, 0);
	border-radius: 4px;
	padding: 0px 6px;
	cursor: pointer;
}

.text {
	color: #202124;
	margin-bottom: 2px;
	font-size: ${Up.typography.typeRamp.body1.fontSize};
	line-height: ${Up.typography.typeRamp.body1.lineHeight};
	font-weight: ${Up.typography.typeRamp.body1.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.body1.fontVariationSettings};
}

.text span {
	font-variation-settings: ${Up.typography.typeRamp.body1Strong.fontVariationSettings};
}
`
				, eu = html`
${when((e=>e.icon), html` <svg-icon type=${Yp.AddBold} size="14" color="#3d6cdc"></svg-icon> `)}
<div class="text">${e=>e.getHighlightedSuggestion()}</div>
`;
			let tu = class extends w {
					constructor() {
							super(...arguments),
							this.query = "",
							this.suggestion = "",
							this.icon = null,
							this.getHighlightedSuggestion = ()=>{
									const e = this.query.trim();
									return html`
		${this.suggestion.split(new RegExp(`(${e})`,"gi")).map((t=>t.toLowerCase() === e.toLowerCase() ? `<span>${t}</span>` : t)).join("")}
	`
							}
					}
			}
			;
			__decorate([attr, __metadata("design:type", String)], tu.prototype, "query", void 0),
			__decorate([attr, __metadata("design:type", String)], tu.prototype, "suggestion", void 0),
			__decorate([attr({
					mode: "boolean"
			}), __metadata("design:type", Object)], tu.prototype, "icon", void 0),
			tu = __decorate([customElement({
					name: "cib-query-suggestion",
					template: eu,
					styles: Jp
			})], tu);
			const nu = css`
@keyframes typing-indicator-dot {
	0% {
		transform: scale(0.75);
	}
	33% {
		transform: scale(1);
	}
	66% {
		transform: scale(0.75);
	}
	100% {
		transform: scale(0.75);
	}
}

/* HOST */

:host {
	position: absolute;
	width: 100%;
	left: 0;
	bottom: calc(100% + 20px);
	display: flex;
	flex-direction: row;
	gap: 10px;
	align-items: center;
	justify-content: center;
	opacity: 0;
	pointer-events: none;
	transform: translateY(24px);
	transition-property: opacity, transform;
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

:host([mobile][serp-slot=${Xc.None}]) {
	bottom: 84px;
}

:host([cancelable]) {
	opacity: 1;
	pointer-events: auto;
	transform: translateY(0);
	transition-delay: ${Bp.motion.duration.normal};
	transition-duration: ${Bp.motion.duration.normal};
}

/* TYPING CONTROL ITEM */

.typing-control-item {
	position: relative;
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: center;
	gap: 4px;
	background: #f2f7fd;
	border-radius: 8px;
	height: 40px;
	box-sizing: border-box;
	padding: 0 8px;
	line-height: 28px;
	color: ${Gp.colors.brand.solid.denim};
	fill: ${Gp.colors.brand.solid.denim};
	border: 1px solid ${Gp.colors.brand.solid.denim};
	font-family: ${Up.typography.fonts.text};
	font-size: 15px;
	font-weight: ${Up.typography.typeRamp.body1Strong.fontWeight};
	font-weight: 500;
	font-variation-settings: ${Up.typography.typeRamp.body1Strong.fontVariationSettings};
}

.typing-control-item svg-icon {
	display: flex;
}

/* TYPING CONTROL - STOP BUTTON */

.typing-control-item.stop {
	gap: 6px;
	padding: 0 12px;
}

:host(:not([mobile]):not([product-type=${Dd.Shoreline}])[serp-slot=${Xc.None}]) .typing-control-item.stop {
	box-shadow: 0px 0px 8px 2px #cadbf2;
}

/* TYPING CONTROL - DOT INDICATOR */

.typing-control-item.indicator {
	display: none;
	gap: 0;
	padding: 0;
	width: 56px;
}

.typing-control-item:not(.indicator) {
	cursor: pointer;
}

.typing-control-item.indicator .indicator-dot {
	height: 8px;
	width: 8px;
	border-radius: 4px;
	margin: 2px;
	animation: typing-indicator-dot 1.5s infinite;
	background: ${Gp.colors.brand.solid.denim};
}

.typing-control-item.indicator .indicator-dot:nth-child(2) {
	animation-delay: 0.25s;
}

.typing-control-item.indicator .indicator-dot:nth-child(3) {
	animation-delay: 0.5s;
}

/* SERP SLOT */

:host([serp-slot=${Xc.Pole}]),
:host([serp-slot=${Xc.RightRail}]) {
	bottom: 0;
	top: 0;
	transform: none;
	justify-content: flex-start;
	position: relative;
	width: unset;
}

:host([serp-slot=${Xc.Pole}]) .typing-control-item,
:host([serp-slot=${Xc.RightRail}]) .typing-control-item {
	height: 36px;
	background: #ffffff;
	border: none;
}

:host([serp-slot=${Xc.Pole}]) .typing-control-item::after,
:host([serp-slot=${Xc.RightRail}]) .typing-control-item::after {
	content: "";
	position: absolute;
	inset: -1px;
	border-radius: 8px;
	border: 1px solid #dddddd;
	pointer-events: none;
}

/* MOBILE */

:host([mobile]) .typing-control-item {
	background: #f5f5f5;
}

/* PRODUCT TYPE */

:host([product-type=${Dd.Shoreline}]) .typing-control-item {
	background: #f5f5f5;
}
`.withBehaviors($p(css`
	.typing-control-item.indicator .indicator-dot {
		background: ${Vp.CanvasText};
	}

	.typing-control-item:not(.indicator) {
		color: ${Vp.ButtonText};
		outline: ${Vp.ButtonText};
	}

	.typing-control-item:not(.indicator):hover,
	.typing-control-item:not(.indicator):focus-visible {
		forced-color-adjust: none;
		color: ${Vp.HighlightText};
		background: ${Vp.Highlight};
		border-color: ${Vp.Highlight};
		outline: ${Vp.Highlight};
	}

	.button-compose:hover,
	.button-compose:focus-visible {
		color: ${Vp.HighlightText};
		background: ${Vp.Highlight};
	}

	.button-compose:hover .button-compose-text,
	.button-compose:focus-visible .button-compose-text {
		forced-color-adjust: none;
	}

	.text-input .user-text::placeholder {
		color: currentColor;
	}

	.text-input .autosuggest-text {
		color: ${Vp.Highlight};
	}
`))
				, iu = html`
<template
	serp-slot=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.serpSlot
			}
			}
	product-type=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.productType
			}
			}
	?mobile=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.isMobile
			}
			}
	?cancelable=${e=>e.vm.isCancelEnabled}
>
	${when((e=>e.vm.enableStreamStop), html`
			<button
				class="typing-control-item stop"
				type="button"
				aria-label=${e=>e.vm.strings.stopRespondingAriaLabel}
				@click=${(e,t)=>e.handleCancelClick(t.event)}
				?disabled=${e=>!e.vm.isCancelEnabled}
			>
				<svg-icon type=${Yp.Stop} size="24"></svg-icon>
				<div>${e=>e.vm.strings.stopRespondingAriaLabel}</div>
			</button>
		`)}
</template>
`;
			let ru = class extends w {
					constructor() {
							super(...arguments),
							this.handleCancelClick = e=>(e.stopPropagation(),
							this.vm.cancelPendingRequest(),
							!0)
					}
			}
			;
			__decorate([observable, __metadata("design:type", Object)], ru.prototype, "vm", void 0),
			__decorate([observable, __metadata("design:type", Object)], ru.prototype, "layout", void 0),
			ru = __decorate([customElement({
					name: "cib-typing-indicator",
					template: iu,
					styles: nu
			})], ru);
			const ou = html`
<form id="searchboxform" autocomplete="off">
	<label
		class="text-input"
		data-input=${e=>e.vm.inputText}
		data-suggestion=${e=>e.isInputFocused ? e.vm.autoSuggestText + " " + (e.layout.isMobile ? e.vm.strings.autoSuggestTap : e.vm.strings.autoSuggestTab) : e.vm.inputText}
	>
		<div class="autosuggest" ?hidden=${e=>0 === e.vm.autoSuggestText.length}>
			<span class="autosuggest-text prepend">${e=>e.vm.autoSuggestPrependedText}</span>
			<span class="autosuggest-text append">${e=>e.vm.autoSuggestAppendedText}</span>
			<span
				class="autosuggest-button"
				${ref("autoSuggestTapButtonRef")}
				@click=${e=>e.handleAutoSuggestButtonClick()}
				>${e=>e.layout.isMobile ? e.vm.strings.autoSuggestTap : e.vm.strings.autoSuggestTab}</span
			>
		</div>
		<textarea
			${ref("textAreaRef")}
			class="text-area"
			id="searchbox"
			name="searchbox"
			type="text"
			aria-label=${e=>e.vm.strings.textInputAriaLabel}
			rows="1"
			enterkeyhint="send"
			maxlength="2000"
			dir=""
			autofocus
			autocapitalize="off"
			autocorrect="off"
			autocomplete="off"
			aria-autocomplete="both"
			spellcheck="false"
			maxlength=${e=>e.maxLength}
			@change=${(e,t)=>e.handleInputTextChanged(t.event)}
			@input=${(e,t)=>e.handleInputTextChanged(t.event)}
			@keyup=${(e,t)=>e.handleInputTextKey(t.event)}
			@keydown=${(e,t)=>e.handleInputTextKey(t.event)}
			@focus=${(e,t)=>e.onInputFocus()}
			@blur=${(e,t)=>e.onInputBlur()}
			placeholder=${e=>e.vm.strings.placeholder}
			:value=${e=>e.vm.inputText}
			?disabled=${e=>e.vm.isSpeechModeEnabled}
		></textarea>
	</label>
</form>
`
				, su = html`
<form id="searchboxform" autocomplete="off" disabled>
	<label
		class="text-input"
		data-input=${e=>e.vm.inputText}
		data-suggestion=${e=>e.isInputFocused ? e.vm.autoSuggestText + " " + (e.layout.isMobile ? e.vm.strings.autoSuggestTap : e.vm.strings.autoSuggestTab) : e.vm.inputText}
	>
		<textarea
			${ref("textAreaRef")}
			class="text-area"
			id="searchbox"
			name="searchbox"
			type="text"
			aria-label=${e=>e.vm.isSuspended ? e.vm.strings.suspendedConvPlaceholder : e.vm.strings.textInputAriaLabel}
			rows="1"
			dir=""
			placeholder=${e=>e.vm.strings.placeholder}
			:value=${e=>e.vm.inputText}
			disabled
		></textarea>
	</label>
</form>
`
				, au = html`
${when((e=>e.vm.enableSpeechInput), html`
		<div class="controls-audio">
			<cib-speech-icon
				id="cib-speech-icon"
				class="speech-icon"
				state=${e=>e.vm.speechIconState}
				:isSpeechModeEnabled=${e=>e.vm.isSpeechModeEnabled}
				:startListeningAriaLabel=${e=>e.vm.strings.speechModeBtnStartListeningAriaLabel}
				:stopListeningAriaLabel=${e=>e.vm.strings.speechModeBtnStopListeningAriaLabel}
				:stopReadoutAriaLabel=${e=>e.vm.strings.speechModeBtnStopReadoutAriaLabel}
				@click=${(e,t)=>e.handleSpeechIconClick(t.event)}
				${ref("audioControlsRef")}
			></cib-speech-icon>
		</div>
	`)}
`
				, lu = html`
<div class="button-compose-wrapper">
	<button
		class="button-compose"
		type="button"
		aria-label=${e=>e.vm.strings.composeButton}
		@click=${(e,t)=>!e.vm.isDisabled && e.handleResetClick(t.event)}
		?disabled=${e=>e.vm.isDisabled || e.vm.serp.mode !== Qc.Conversation}
	>
		<div class="button-compose-content" ${ref("composeButtonContentRef")}>
			<svg-icon class="button-compose-icon" type=${Yp.Brush} size="32"></svg-icon>
			<div class="button-compose-text">${e=>e.vm.strings.composeButton}</div>
		</div>
	</button>
	<div class="button-compose-hint">${e=>e.vm.strings.composeButton}</div>
</div>
`
				, cu = html`
<div class="controls-left">
	<div class="control chat">
		<svg-icon type=${Yp.Chat} size="20"></svg-icon>
	</div>
	<div class="control keyboard">
		<button
			class="button"
			type="button"
			aria-label=${e=>e.vm.strings.textInputModeButtonAriaLabel}
			?disabled=${e=>!e.vm.isSpeechModeEnabled}
			@click=${(e,t)=>!e.vm.isDisabled && e.handleKeyboardClick(t.event)}
		>
			<svg-icon type=${Yp.Keyboard} size="24"></svg-icon>
		</button>
	</div>
</div>
`
				, du = html`
<div class="tooltip">
	${e=>e.vm.strings.composeButtonTooltip}
	<button
		class="tooltip-button"
		aria-label=${e=>e.vm.strings.close}
		@click=${(e,t)=>e.handleTooltipCloseClick(t.event)}
	>
		<svg-icon type=${Yp.Clear12} size="12"></svg-icon>
	</button>
</div>
`
				, pu = html`
${when((e=>!e.vm.isSpeechModeEnabled), html`
		<div class="controls-right">
			${when((e=>e.vm.enableSpeechInput), html`
					<div class="control microphone">
						<button
							class="button primary"
							type="button"
							aria-label=${e=>e.vm.strings.speechInputModeButtonAriaLabel}
							@click=${(e,t)=>!e.vm.isDisabled && e.handleSpeechMicClick(t.event)}
							?disabled=${e=>e.vm.isDisabled}
						>
							<svg-icon type=${Yp.Microphone} size="20"></svg-icon>
						</button>
					</div>
				`)}
			<div class="control submit">
				<button
					class="button primary"
					type="button"
					aria-label=${e=>e.vm.strings.submitButtonAriaLabel}
					@click=${e=>!e.vm.isDisabled && e.handleSubmitButtonClick()}
					?disabled=${e=>e.vm.isDisabled}
				>
					<svg-icon type=${Yp.SendFill} size="20"></svg-icon>
				</button>
			</div>
		</div>
	`)}
${when((e=>e.vm.isSpeechModeEnabled), html`
		<div class="control cancel">
			<button
				class="button"
				type="button"
				aria-label=${e=>e.vm.strings.cancelSpeechInputButtonAriaLabel}
				@click=${(e,t)=>!e.vm.isDisabled && e.handleSpeechCancelClick(t.event)}
				?disabled=${e=>e.vm.isDisabled}
			>
				<svg-icon type=${Yp.Clear12} size="24"></svg-icon>
			</button>
		</div>
	`)}
`
				, uu = html`
<div class="bottom-bar">
	<div class="letter-counter"><span>${e=>e.vm.inputText.length}</span>/${e=>e.maxLength}</div>
	<div class="bottom-bar-controls">
		<button
			class="button"
			type="button"
			aria-label=${e=>e.vm.strings.editModeButtonAriaLabel}
			aria-expanded=${e=>e.vm.isEditModeEnabled}
			aria-live="polite"
			?disabled=${e=>e.vm.isSpeechModeEnabled}
			@click=${(e,t)=>e.handleToggleEditModeClick(t.event)}
		>
			${when((e=>e.vm.isEditModeEnabled), html`<svg-icon type=${Yp.PinSolid} size="20"></svg-icon>`)}
			${when((e=>!e.vm.isEditModeEnabled), html`<svg-icon type=${Yp.Pin} size="20"></svg-icon>`)}
		</button>
	</div>
</div>
`
				, hu = html`
<div
	class="root"
	?edit-mode=${e=>e.vm.isEditModeEnabled}
	?speech-enabled=${e=>e.vm.isSpeechModeEnabled}
	speech-state=${e=>e.vm.speechIconState}
	?has-text=${e=>e.vm.inputText.length > 0}
	?to-submit=${e=>e.vm.isPendingSubmit}
>
	<cib-typing-indicator :layout=${e=>e.layout} :vm=${e=>e.vm.typingIndicator}></cib-typing-indicator>
	<div class="outside-left-container">
		${when((e=>e.renderNewTopicTooltip), html`${du}`)} ${lu}
	</div>
	<div class="main-container" ?focus=${e=>e.isInputFocused} @click=${e=>e.handleMainContainerClick()}>
		<div class="speech-output">${e=>e.vm.speechOutputText}</div>
		<div class="input-container">
			${ou} ${cu} ${au} ${pu}
			${uu}
		</div>
	</div>
</div>
`
				, mu = html`
<div class="root">
	${lu}
	<div class="main-container">
		<div class="input-container">${su} ${cu} ${pu}</div>
	</div>
</div>
`
				, gu = html`
<div class="controls-left">
	<button
		id="keyboard-button"
		class="button"
		type="button"
		aria-label=${e=>e.vm.strings.textInputModeButtonAriaLabel}
		@click=${(e,t)=>!e.vm.isDisabled && e.handleKeyboardClick(t.event)}
		?disabled=${e=>e.vm.isDisabled}
	>
		<svg-icon type=${Yp.Keyboard} size="24"></svg-icon>
	</button>
</div>
`
				, _u = html`
<div
	class="root"
	?has-text=${e=>e.vm.inputText.length > 0}
	?speech-enabled=${e=>e.vm.isSpeechModeEnabled}
	speech-state=${e=>e.vm.speechIconState}
>
	<cib-typing-indicator :layout=${e=>e.layout} :vm=${e=>e.vm.typingIndicator}></cib-typing-indicator>
	<div id="speech-recognized-text" class="speech-output">${e=>e.vm.speechOutputText}</div>
	<div class="main-container" ?focus=${e=>e.isInputFocused}>
		<div class="input-container">${ou}</div>
	</div>
	${gu} ${au} ${html`
<div class="controls-right">
	${when((e=>!e.vm.isSpeechModeEnabled), html`
			${when((e=>e.vm.enableSpeechInput), html`
					<div class="control microphone">
						<button
							id="mic-button"
							class="button primary"
							type="button"
							aria-label=${e=>e.vm.strings.speechInputModeButtonAriaLabel}
							@click=${(e,t)=>!e.vm.isDisabled && e.handleSpeechMicClick(t.event)}
							?disabled=${e=>e.vm.isDisabled}
						>
							<svg-icon type=${Yp.Microphone} size="24"></svg-icon>
						</button>
					</div>
				`)}
			<div class="control submit">
				<button
					id="send-button"
					class="button primary"
					type="button"
					aria-label=${e=>e.vm.strings.submitButtonAriaLabel}
					@click=${e=>e.handleSubmitButtonClick()}
				>
					<svg-icon type=${Yp.SendFill} size="20"></svg-icon>
				</button>
			</div>
		`)}
	${when((e=>e.vm.isSpeechModeEnabled), html`
			<div class="control cancel">
				<button
					class="button"
					type="button"
					aria-label=${e=>e.vm.strings.cancelSpeechInputButtonAriaLabel}
					@click=${(e,t)=>e.handleSpeechCancelClick(t.event)}
				>
					<svg-icon type=${Yp.Clear12} size="24"></svg-icon>
				</button>
			</div>
		`)}
</div>
`}
</div>
`
				, fu = html`
<div
	class="root ${e=>e.vm.isSuspended && !e.vm.isAppStateError ? "suspended" : ""}"
	speech-state=${e=>"blocked"}
>
	<div id="speech-recognized-text" class="speech-output"></div>
	<div class="main-container"></div>
	${gu} ${au}
</div>
`
				, yu = html`
<template
	id="cib-action-bar-main"
	?mobile=${e=>e.layout.isMobile}
	serp-slot=${e=>e.layout.serpSlot}
	product-type=${e=>e.layout.productType}
	mode=${e=>e.vm.serp.mode}
	alignment=${e=>e.layout.alignment}
	?cancelable=${e=>e.vm.isCancelEnabled}
	?loading=${e=>e.isLoading}
	@click=${(e,t)=>!e.vm.isDisabled && e.handleMobileActionBarClick(t.event)}
	?disabled=${e=>e.vm.isDisabled}
>
	${e=>e.layout.isMobile ? e.vm.isDisabled ? fu : _u : e.vm.isDisabled ? mu : hu}
</template>
`;
			let vu = class extends w {
					constructor() {
							super(...arguments),
							this.hasTransition = !1,
							this.isInputFocused = !1,
							this.isLoading = !0,
							this.renderNewTopicTooltip = !0,
							this.maxLength = 2e3,
							this.handleToggleEditModeClick = e=>(e.stopPropagation(),
							this.vm.toggleEditMode(),
							this.vm.isEditModeEnabled && setTimeout((()=>{
									var e;
									null === (e = this.textAreaRef) || void 0 === e || e.focus()
							}
							), 200),
							!0),
							this.handleCancelClick = e=>(e.stopPropagation(),
							this.vm.cancelPendingRequest(),
							!0),
							this.handleResetClick = e=>(this.renderNewTopicTooltip = !1,
							e.preventDefault(),
							e.stopPropagation(),
							this.vm.resetConversation(),
							this.handleInputFocus(),
							this.vm.closeRAISuggestions(),
							!0),
							this.handleKeyboardClick = e=>{
									var t;
									return e.stopPropagation(),
									this.layout.isMobile || null === (t = this.textAreaRef) || void 0 === t || t.focus(),
									this.vm.inputMethod = Ce.Keyboard,
									!0
							}
							,
							this.handleSpeechMicClick = e=>{
									var t, n, i;
									return e.stopPropagation(),
									this.vm.inputMethod === Ce.Keyboard && (null === (i = null === (n = null === (t = this.audioControlsRef) || void 0 === t ? void 0 : t.shadowRoot) || void 0 === n ? void 0 : n.querySelector("button")) || void 0 === i || i.focus()),
									this.vm.inputMethod = Ce.Speech,
									this.vm.handleSpeechChangeAsync(Yc.Mic),
									!0
							}
							,
							this.handleTooltipCloseClick = e=>{
									this.renderNewTopicTooltip = !1
							}
							,
							this.handleSpeechIconClick = e=>(e.stopPropagation(),
							this.vm.handleSpeechChangeAsync(Yc.Orb),
							!0),
							this.handleSpeechCancelClick = e=>(e.stopPropagation(),
							this.vm.cancelSpeechInteraction(),
							!0),
							this.handleMobileActionBarClick = e=>(this.layout.isMobile && (e.stopPropagation(),
							this.handleInputFocus()),
							!0)
					}
					connectedCallback() {
							super.connectedCallback(),
							this.renderNewTopicTooltip = this.vm.isFirstTime,
							this.layout.serpSlot === Xc.None && (this.vm.forceOngoingConversationPlaceholderText = this.layout.isMobile),
							this.addEventListener("transitionend", this.onTransitionEnd),
							this.hasTransition = !1,
							setTimeout((()=>{
									var e;
									this.style.setProperty("--button-compose-width", `${null === (e = this.composeButtonContentRef) || void 0 === e ? void 0 : e.offsetWidth}px`)
							}
							), 200),
							this.onLoad()
					}
					disconnectedCallback() {
							super.disconnectedCallback(),
							this.removeEventListener("transitionend", this.onTransitionEnd)
					}
					attributeChangedCallback(e, t, n) {
							"mode" === e && n !== t && this.onTransitionStart()
					}
					onTransitionStart() {
							this.hasTransition = !0
					}
					onTransitionEnd() {
							this.hasTransition = !1
					}
					handleInputTextKey(e) {
							var t;
							return "Enter" !== e.key || e.shiftKey ? "Tab" !== e.key || !this.vm.autoSuggestText || ("keyup" === e.type && (this.vm.telemetry.trackEvent("InteractionEvent", "TextGhostingAccept", {
									Namespace: Xc.toTelemetryNamespace(null === (t = this.layout) || void 0 === t ? void 0 : t.serpSlot),
									CustomData: JSON.stringify({
											enteredTextLength: this.vm.inputText.length,
											acceptedTextLength: this.vm.autoSuggestText.length,
											acceptMethod: "pressTab"
									})
							}),
							this.handleAcceptAutoSuggestText()),
							!1) : (this.handleSubmitButtonClick(),
							this.vm.telemetry.trackInteractionEvent(e),
							!1)
					}
					handleInputTextChanged(e) {
							var t;
							if (this.vm.isDisabled)
									return;
							const {value: n} = e.target;
							null === (t = this.vm.log) || void 0 === t || t.trace(this, this.handleInputTextChanged, `value: '${n}'`).write(),
							this.vm.inputText = n
					}
					handleClearButtonClick() {
							var e;
							null === (e = this.vm.log) || void 0 === e || e.trace(this, this.handleClearButtonClick, "value: ''").write(),
							this.vm.inputText = "",
							this.textAreaRef.value = ""
					}
					handleMainContainerClick() {
							var e;
							this.vm.closeRAISuggestions(),
							null === (e = this.textAreaRef) || void 0 === e || e.focus()
					}
					onInputFocus() {
							var e;
							this.isInputFocused = !0,
							null === (e = this.textAreaRef) || void 0 === e || e.focus()
					}
					handleInputFocus() {
							var e;
							null === (e = this.textAreaRef) || void 0 === e || e.focus()
					}
					onInputBlur() {
							var e;
							this.isInputFocused = !1,
							null === (e = this.textAreaRef) || void 0 === e || e.blur()
					}
					handleInputBlur() {
							var e;
							null === (e = this.textAreaRef) || void 0 === e || e.blur()
					}
					handleSuggestionChipClick(e) {
							this.vm.inputText = e
					}
					handleSubmitButtonClick() {
							this.vm.submitInputText(),
							this.layout.isMobile && (this.handleClearButtonClick(),
							this.handleInputBlur())
					}
					handleAutoSuggestButtonClick() {
							var e, t;
							return this.vm.telemetry.trackEvent("InteractionEvent", "TextGhostingAccept", {
									Namespace: Xc.toTelemetryNamespace(null === (e = this.layout) || void 0 === e ? void 0 : e.serpSlot),
									CustomData: JSON.stringify({
											enteredTextLength: this.vm.inputText.length,
											acceptedTextLength: this.vm.autoSuggestText.length,
											acceptMethod: "pressTap"
									})
							}),
							this.vm.acceptAutoSuggestText(),
							null === (t = this.textAreaRef) || void 0 === t || t.focus(),
							!1
					}
					handleAcceptAutoSuggestText() {
							this.vm.acceptAutoSuggestText()
					}
					onLoad() {
							setTimeout((()=>{
									vc((()=>{
											this.isLoading = !1
									}
									))
							}
							), 20)
					}
			}
			;
			__decorate([attr, __metadata("design:type", String)], vu.prototype, "mode", void 0),
			__decorate([attr({
					attribute: "transition",
					mode: "boolean"
			}), __metadata("design:type", Boolean)], vu.prototype, "hasTransition", void 0),
			__decorate([observable, __metadata("design:type", Object)], vu.prototype, "vm", void 0),
			__decorate([observable, __metadata("design:type", Object)], vu.prototype, "layout", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], vu.prototype, "isInputFocused", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], vu.prototype, "isLoading", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], vu.prototype, "renderNewTopicTooltip", void 0),
			vu = __decorate([customElement({
					name: "cib-action-bar",
					template: yu,
					styles: Hp
			})], vu);
			const bu = css`
:host {
	position: fixed;
	height: 100vh;
	width: 100vw;
	inset: 0;
	background-color: #f9f9f9;
	pointer-events: none;
}

:host([product=${Dd.Shoreline}]) {
	background-color: #f3f3f3;
}

:host(:not([product=${Dd.Shoreline}])) .image {
	position: absolute;
	inset: 0;
	background: ${Gp.colors.brand.gradient.background};
	background-position: center;
	background-size: cover;
	transition-property: opacity;
	transition-duration: ${Bp.motion.duration.slowest};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
}
`.withBehaviors($p(css`
	.image {
		background: transparent !important;
	}
`))
				, Su = html`
<template mode=${e=>e.vm.serp.mode} product=${e=>e.vm.serp.productType}>
	<div class="image" style="background-image: url(${e=>e.backgroundImgUrl})"></div>
</template>
`;
			let Cu = class extends w {
					get backgroundImgUrl() {
							var e;
							return (null === (e = this.vm) || void 0 === e ? void 0 : e.serp.isDevMode) ? "images/assets/background/cib-background.jpg" : "https://www.bing.com/cdx/bg.jpg"
					}
			}
			;
			Cu = __decorate([customElement({
					name: "cib-background",
					template: Su,
					styles: bu
			})], Cu);
			const lodash_es_isObject = function(e) {
					var t = typeof e;
					return null != e && ("object" == t || "function" == t)
			};
			const Eu = "object" == typeof global && global && global.Object === Object && global;
			var Tu = "object" == typeof self && self && self.Object === Object && self;
			const Iu = Eu || Tu || Function("return this")();
			const lodash_es_now = function() {
					return Iu.Date.now()
			};
			var wu = /\s/;
			const _trimmedEndIndex = function(e) {
					for (var t = e.length; t-- && wu.test(e.charAt(t)); )
							;
					return t
			};
			var Au = /^\s+/;
			const _baseTrim = function(e) {
					return e ? e.slice(0, _trimmedEndIndex(e) + 1).replace(Au, "") : e
			};
			const Ru = Iu.Symbol;
			var xu = Object.prototype
				, Ou = xu.hasOwnProperty
				, Nu = xu.toString
				, Pu = Ru ? Ru.toStringTag : void 0;
			const _getRawTag = function(e) {
					var t = Ou.call(e, Pu)
						, n = e[Pu];
					try {
							e[Pu] = void 0;
							var i = !0
					} catch (e) {}
					var r = Nu.call(e);
					return i && (t ? e[Pu] = n : delete e[Pu]),
					r
			};
			var Du = Object.prototype.toString;
			const _objectToString = function(e) {
					return Du.call(e)
			};
			var Mu = Ru ? Ru.toStringTag : void 0;
			const _baseGetTag = function(e) {
					return null == e ? void 0 === e ? "[object Undefined]" : "[object Null]" : Mu && Mu in Object(e) ? _getRawTag(e) : _objectToString(e)
			};
			const lodash_es_isObjectLike = function(e) {
					return null != e && "object" == typeof e
			};
			const lodash_es_isSymbol = function(e) {
					return "symbol" == typeof e || lodash_es_isObjectLike(e) && "[object Symbol]" == _baseGetTag(e)
			};
			var Lu = /^[-+]0x[0-9a-f]+$/i
				, ku = /^0b[01]+$/i
				, Fu = /^0o[0-7]+$/i
				, Bu = parseInt;
			const lodash_es_toNumber = function(e) {
					if ("number" == typeof e)
							return e;
					if (lodash_es_isSymbol(e))
							return NaN;
					if (lodash_es_isObject(e)) {
							var t = "function" == typeof e.valueOf ? e.valueOf() : e;
							e = lodash_es_isObject(t) ? t + "" : t
					}
					if ("string" != typeof e)
							return 0 === e ? e : +e;
					e = _baseTrim(e);
					var n = ku.test(e);
					return n || Fu.test(e) ? Bu(e.slice(2), n ? 2 : 8) : Lu.test(e) ? NaN : +e
			};
			var Gu = Math.max
				, Uu = Math.min;
			const lodash_es_debounce = function(e, t, n) {
					var i, r, o, s, a, l, c = 0, d = !1, p = !1, u = !0;
					if ("function" != typeof e)
							throw new TypeError("Expected a function");
					function invokeFunc(t) {
							var n = i
								, o = r;
							return i = r = void 0,
							c = t,
							s = e.apply(o, n)
					}
					function leadingEdge(e) {
							return c = e,
							a = setTimeout(timerExpired, t),
							d ? invokeFunc(e) : s
					}
					function shouldInvoke(e) {
							var n = e - l;
							return void 0 === l || n >= t || n < 0 || p && e - c >= o
					}
					function timerExpired() {
							var e = lodash_es_now();
							if (shouldInvoke(e))
									return trailingEdge(e);
							a = setTimeout(timerExpired, function(e) {
									var n = t - (e - l);
									return p ? Uu(n, o - (e - c)) : n
							}(e))
					}
					function trailingEdge(e) {
							return a = void 0,
							u && i ? invokeFunc(e) : (i = r = void 0,
							s)
					}
					function debounced() {
							var e = lodash_es_now()
								, n = shouldInvoke(e);
							if (i = arguments,
							r = this,
							l = e,
							n) {
									if (void 0 === a)
											return leadingEdge(l);
									if (p)
											return clearTimeout(a),
											a = setTimeout(timerExpired, t),
											invokeFunc(l)
							}
							return void 0 === a && (a = setTimeout(timerExpired, t)),
							s
					}
					return t = lodash_es_toNumber(t) || 0,
					lodash_es_isObject(n) && (d = !!n.leading,
					o = (p = "maxWait"in n) ? Gu(lodash_es_toNumber(n.maxWait) || 0, t) : o,
					u = "trailing"in n ? !!n.trailing : u),
					debounced.cancel = function() {
							void 0 !== a && clearTimeout(a),
							c = 0,
							i = l = r = a = void 0
					}
					,
					debounced.flush = function() {
							return void 0 === a ? s : trailingEdge(lodash_es_now())
					}
					,
					debounced
			};
			const lodash_es_throttle = function(e, t, n) {
					var i = !0
						, r = !0;
					if ("function" != typeof e)
							throw new TypeError("Expected a function");
					return lodash_es_isObject(n) && (i = "leading"in n ? !!n.leading : i,
					r = "trailing"in n ? !!n.trailing : r),
					lodash_es_debounce(e, t, {
							leading: i,
							maxWait: t,
							trailing: r
					})
			}
				, zu = css`
:host {
	position: absolute;
	height: 100%;
	width: 100%;
	z-index: 0;
	opacity: 1;
	transition: transform ${Bp.motion.duration.slowest}
			${Bp.motion.easingFunction.motionTransition},
		opacity ${Bp.motion.duration.normal} ${Bp.motion.easingFunction.linear};
}

/* SCROLLER */

.scroller {
	position: relative;
	height: 100%;
	width: 100%;
	overflow: hidden;
	z-index: 1;
}

.scroller-enabled {
	overflow-y: overlay;
}

/* SCROLLER POSITIONER */

.scroller-positioner {
	position: relative;
	height: 100%;
	width: 100%;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: flex-end;
	pointer-events: none;
}

.scroller-enabled .scroller-positioner {
	justify-content: unset;
}

/* SCROLLER CONTENT */

.content {
	display: flex;
	flex: 1;
	flex-direction: column;
	justify-content: flex-end;
	width: 100%;
	max-width: 1184px;
	box-sizing: border-box;
	padding: 32px 0 106px;
	z-index: -1;
	pointer-events: auto;
	transition-property: transform;
	transition-timing-function: ${Bp.motion.easingFunction.motionDirect};
}

:host([loading]) .content {
	transition: none !important;
}

/* BACKGROUND FADE */

:host .divider {
	left: 0;
	right: 0;
	opacity: 0;
	border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

/* BACKGROUND FADE */

.fade {
	display: none;
	width: 100%;
	height: 104px;
	position: fixed;
	left: 0;
	z-index: -1;
	overflow: hidden;
	clip-path: inset(0px);
	pointer-events: none;
}

.fade.bottom {
	display: block;
	bottom: 0px;
}

.fade .background {
	transition-property: transform;
	transition-duration: ${Bp.motion.duration.slowest};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
}

.fade.top {
	transition-property: transform;
	transition-duration: ${Bp.motion.duration.slowest};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
}

:host([has-top-fade]) .fade.top {
	display: block;
	height: 96px;
	top: 0px;
	-webkit-mask-image: linear-gradient(black 72px, transparent 96px);
	mask-image: linear-gradient(black 72px, transparent 96px);
}

:host([has-top-fade]) .content {
	padding-top: 108px;
}

:host([has-bottom-fade]) .fade.bottom {
	height: 140px;
	-webkit-mask-image: linear-gradient(transparent calc(100% - 140px), black calc(100% - 118px));
	mask-image: linear-gradient(transparent calc(100% - 140px), black calc(100% - 118px));
}

/* PAGE MODES & ALIGNMENTS */

:host(:not([mobile])[mode=${Qc.Home}]),
:host(:not([mobile])[mode=${Qc.Search}]),
:host(:not([mobile])[mode=${Qc.OffStage}]) {
	opacity: 0;
	transform: translate3d(0, -100vh, 0);
}

:host(:not([mobile])[mode=${Qc.Search}]) {
	clip-path: unset;
}

:host(:not([mobile])[mode=${Qc.Home}]) .scroller .fade.bottom .background,
:host(:not([mobile])[mode=${Qc.Search}]) .scroller .fade.bottom .background,
:host(:not([mobile])[mode=${Qc.OffStage}]) .scroller .fade.bottom .background {
	transform: translate3d(0, 100vh, 0);
}

:host(:not([mobile])[mode=${Qc.Home}]) .scroller .fade.top,
:host(:not([mobile])[mode=${Qc.Search}]) .scroller .fade.top,
:host(:not([mobile])[mode=${Qc.OffStage}]) .scroller .fade.top {
	transform: translate3d(0, 100vh, 0);
}

:host(:not([mobile])[alignment=${Kc.Left}]) .scroller-positioner,
:host(:not([mobile])[alignment=${Kc.Left}]) .footer {
	max-width: 1440px;
}

/* MAIN */

.main {
	display: flex;
	flex: 1;
	flex-direction: column;
	justify-content: flex-end;
	box-sizing: border-box;
	padding: 0 32px;
}

.main cib-chat-turn {
	margin-top: 24px;
}

/* FOOTER */

.footer {
	position: absolute;
	display: flex;
	flex-direction: column;
	align-items: center;
	gap: 24px;
	width: 100%;
	bottom: 126px;
	box-sizing: border-box;
	padding: 0 32px;
	pointer-events: none;
}

.footer-content {
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	width: 100%;
	max-width: 1120px;
}

/* WELCOME MESSAGE */

.welcome-message {
	position: relative;
	text-align: center;
	top: 4px;
}

/* SERP SLOT */

:host([serp-slot=${Xc.Creator}]),
:host([serp-slot=${Xc.Pole}]),
:host([serp-slot=${Xc.RightRail}]) {
	position: relative;
}

:host([serp-slot=${Xc.Creator}]) .content,
:host([serp-slot=${Xc.Pole}]) .content,
:host([serp-slot=${Xc.RightRail}]) .content {
	padding: 0 !important;
	max-width: unset;
	min-height: 100%;
}

:host([serp-slot=${Xc.Creator}]) .main,
:host([serp-slot=${Xc.Pole}]) .main,
:host([serp-slot=${Xc.RightRail}]) .main {
	padding: 0 20px;
	min-height: 100%;
	flex-grow: 1;
	justify-content: flex-start;
}

:host([serp-slot=${Xc.Pole}]) .main {
	padding: 0 24px;
}

:host([serp-slot=${Xc.Creator}][mode=${Qc.OffStage}]),
:host([serp-slot=${Xc.Pole}][mode=${Qc.OffStage}]),
:host([serp-slot=${Xc.RightRail}][mode=${Qc.OffStage}]),
:host([serp-slot=${Xc.Creator}][mode=${Qc.Search}]),
:host([serp-slot=${Xc.Pole}][mode=${Qc.Search}]),
:host([serp-slot=${Xc.RightRail}][mode=${Qc.Search}]) {
	opacity: 1;
	transform: unset;
}

/* PRODUCT TYPE */

:host([product-type=${Dd.Shoreline}]) {
	position: relative;
	min-height: 0;
}

:host([product-type=${Dd.Shoreline}]) .content {
	padding-bottom: 0px !important;
}

:host([product-type=${Dd.Shoreline}]) .fade {
	display: none !important;
}

:host([product-type=${Dd.Shoreline}][has-bottom-fade]) .divider {
	opacity: 1;
}

/* MEDIA QUERIES */

@media (max-width: 767px) {
	.main,
	.footer {
		padding: 0 16px;
	}

	.main cib-chat-turn {
		margin-top: 18px;
	}

	:host([has-top-fade]) .content {
		padding-top: 32px;
	}
}

@media (max-width: 600px) {
	:host([serp-slot=${Xc.Pole}]) .main,
	:host([serp-slot=${Xc.RightRail}]) .main {
		padding: 0 16px;
	}
}

/* MOBILE */

:host([mobile]) {
	position: relative;
	display: flex;
	min-height: 0;
	flex-direction: column;
}

:host([mobile]) ::-webkit-scrollbar {
	display: none;
}

:host([mobile]) .content {
	padding: 8px 0 0;
}

:host([mobile]) .main {
	padding: 0px 16px 20px;
}

:host([mobile][has-bottom-fade]) .divider {
	opacity: 1;
}

:host([mobile]) .suggestion-bar {
	padding: 0px 16px;
	margin: 0;
}

.collapsed {
	height: 0px;
	overflow: hidden;
	opacity: 0;
}
`;
			function newSplice(e, t, n) {
					return {
							index: e,
							removed: t,
							addedCount: n
					}
			}
			function calcSplices(e, t, n, i, r, o) {
					let s = 0
						, a = 0;
					const c = Math.min(n - t, o - r);
					if (0 === t && 0 === r && (s = function(e, t, n) {
							for (let i = 0; i < n; ++i)
									if (e[i] !== t[i])
											return i;
							return n
					}(e, i, c)),
					n === e.length && o === i.length && (a = function(e, t, n) {
							let i = e.length
								, r = t.length
								, o = 0;
							for (; o < n && e[--i] === t[--r]; )
									o++;
							return o
					}(e, i, c - s)),
					r += s,
					o -= a,
					(n -= a) - (t += s) == 0 && o - r == 0)
							return l;
					if (t === n) {
							const e = newSplice(t, [], 0);
							for (; r < o; )
									e.removed.push(i[r++]);
							return [e]
					}
					if (r === o)
							return [newSplice(t, [], n - t)];
					const d = function(e) {
							let t = e.length - 1
								, n = e[0].length - 1
								, i = e[t][n];
							const r = [];
							for (; t > 0 || n > 0; ) {
									if (0 === t) {
											r.push(2),
											n--;
											continue
									}
									if (0 === n) {
											r.push(3),
											t--;
											continue
									}
									const o = e[t - 1][n - 1]
										, s = e[t - 1][n]
										, a = e[t][n - 1];
									let l;
									l = s < a ? s < o ? s : o : a < o ? a : o,
									l === o ? (o === i ? r.push(0) : (r.push(1),
									i = o),
									t--,
									n--) : l === s ? (r.push(3),
									t--,
									i = s) : (r.push(2),
									n--,
									i = a)
							}
							return r.reverse(),
							r
					}(function(e, t, n, i, r, o) {
							const s = o - r + 1
								, a = n - t + 1
								, l = new Array(s);
							let c, d;
							for (let e = 0; e < s; ++e)
									l[e] = new Array(a),
									l[e][0] = e;
							for (let e = 0; e < a; ++e)
									l[0][e] = e;
							for (let n = 1; n < s; ++n)
									for (let o = 1; o < a; ++o)
											e[t + o - 1] === i[r + n - 1] ? l[n][o] = l[n - 1][o - 1] : (c = l[n - 1][o] + 1,
											d = l[n][o - 1] + 1,
											l[n][o] = c < d ? c : d);
							return l
					}(e, t, n, i, r, o))
						, p = [];
					let u, h = t, m = r;
					for (let e = 0; e < d.length; ++e)
							switch (d[e]) {
							case 0:
									void 0 !== u && (p.push(u),
									u = void 0),
									h++,
									m++;
									break;
							case 1:
									void 0 === u && (u = newSplice(h, [], 0)),
									u.addedCount++,
									h++,
									u.removed.push(i[m]),
									m++;
									break;
							case 2:
									void 0 === u && (u = newSplice(h, [], 0)),
									u.addedCount++,
									h++;
									break;
							case 3:
									void 0 === u && (u = newSplice(h, [], 0)),
									u.removed.push(i[m]),
									m++
							}
					return void 0 !== u && p.push(u),
					p
			}
			const $u = Array.prototype.push;
			function mergeSplice(e, t, n, i) {
					const r = newSplice(t, n, i);
					let o = !1
						, s = 0;
					for (let t = 0; t < e.length; t++) {
							const n = e[t];
							if (n.index += s,
							o)
									continue;
							const i = (a = r.index,
							l = r.index + r.removed.length,
							c = n.index,
							d = n.index + n.addedCount,
							l < c || d < a ? -1 : l === c || d === a ? 0 : a < c ? l < d ? l - c : d - c : d < l ? d - a : l - a);
							if (i >= 0) {
									e.splice(t, 1),
									t--,
									s -= n.addedCount - n.removed.length,
									r.addedCount += n.addedCount - i;
									const a = r.removed.length + n.removed.length - i;
									if (r.addedCount || a) {
											let e = n.removed;
											if (r.index < n.index) {
													const t = r.removed.slice(0, n.index - r.index);
													$u.apply(t, e),
													e = t
											}
											if (r.index + r.removed.length > n.index + n.addedCount) {
													const t = r.removed.slice(n.index + n.addedCount - r.index);
													$u.apply(e, t)
											}
											r.removed = e,
											n.index < r.index && (r.index = n.index)
									} else
											o = !0
							} else if (r.index < n.index) {
									o = !0,
									e.splice(t, 0, r),
									t++;
									const i = r.addedCount - r.removed.length;
									n.index += i,
									s += i
							}
					}
					var a, l, c, d;
					o || e.push(r)
			}
			function projectArraySplices(e, t) {
					let n = [];
					const i = function(e) {
							const t = [];
							for (let n = 0, i = e.length; n < i; n++) {
									const i = e[n];
									mergeSplice(t, i.index, i.removed, i.addedCount)
							}
							return t
					}(t);
					for (let t = 0, r = i.length; t < r; ++t) {
							const r = i[t];
							1 !== r.addedCount || 1 !== r.removed.length ? n = n.concat(calcSplices(e, r.index, r.index + r.addedCount, r.removed, 0, r.removed.length)) : r.removed[0] !== e[r.index] && n.push(r)
					}
					return n
			}
			let Vu = !1;
			function adjustIndex(e, t) {
					let n = e.index;
					const i = t.length;
					return n > i ? n = i - e.addedCount : n < 0 && (n = i + e.removed.length + n - e.addedCount),
					n < 0 && (n = 0),
					e.index = n,
					e
			}
			class ArrayObserver extends SubscriberSet {
					constructor(e) {
							super(e),
							this.oldCollection = void 0,
							this.splices = void 0,
							this.needsQueue = !0,
							this.call = this.flush,
							Reflect.defineProperty(e, "$fastController", {
									value: this,
									enumerable: !1
							})
					}
					subscribe(e) {
							this.flush(),
							super.subscribe(e)
					}
					addSplice(e) {
							void 0 === this.splices ? this.splices = [e] : this.splices.push(e),
							this.needsQueue && (this.needsQueue = !1,
							g.queueUpdate(this))
					}
					reset(e) {
							this.oldCollection = e,
							this.needsQueue && (this.needsQueue = !1,
							g.queueUpdate(this))
					}
					flush() {
							const e = this.splices
								, t = this.oldCollection;
							if (void 0 === e && void 0 === t)
									return;
							this.needsQueue = !0,
							this.splices = void 0,
							this.oldCollection = void 0;
							const n = void 0 === t ? projectArraySplices(this.source, e) : calcSplices(this.source, 0, this.source.length, t, 0, t.length);
							this.notify(n)
					}
			}
			const Hu = Object.freeze({
					positioning: !1,
					recycle: !0
			});
			function bindWithoutPositioning(e, t, n, i) {
					e.bind(t[n], i)
			}
			function bindWithPositioning(e, t, n, i) {
					const r = Object.create(i);
					r.index = n,
					r.length = t.length,
					e.bind(t[n], r)
			}
			class RepeatBehavior {
					constructor(e, t, n, i, r, o) {
							this.location = e,
							this.itemsBinding = t,
							this.templateBinding = i,
							this.options = o,
							this.source = null,
							this.views = [],
							this.items = null,
							this.itemsObserver = null,
							this.originalContext = void 0,
							this.childContext = void 0,
							this.bindView = bindWithoutPositioning,
							this.itemsBindingObserver = _.binding(t, this, n),
							this.templateBindingObserver = _.binding(i, this, r),
							o.positioning && (this.bindView = bindWithPositioning)
					}
					bind(e, t) {
							this.source = e,
							this.originalContext = t,
							this.childContext = Object.create(t),
							this.childContext.parent = e,
							this.childContext.parentContext = this.originalContext,
							this.items = this.itemsBindingObserver.observe(e, this.originalContext),
							this.template = this.templateBindingObserver.observe(e, this.originalContext),
							this.observeItems(!0),
							this.refreshAllViews()
					}
					unbind() {
							this.source = null,
							this.items = null,
							null !== this.itemsObserver && this.itemsObserver.unsubscribe(this),
							this.unbindAllViews(),
							this.itemsBindingObserver.disconnect(),
							this.templateBindingObserver.disconnect()
					}
					handleChange(e, t) {
							e === this.itemsBinding ? (this.items = this.itemsBindingObserver.observe(this.source, this.originalContext),
							this.observeItems(),
							this.refreshAllViews()) : e === this.templateBinding ? (this.template = this.templateBindingObserver.observe(this.source, this.originalContext),
							this.refreshAllViews(!0)) : this.updateViews(t)
					}
					observeItems(e=!1) {
							if (!this.items)
									return void (this.items = l);
							const t = this.itemsObserver
								, n = this.itemsObserver = _.getNotifier(this.items)
								, i = t !== n;
							i && null !== t && t.unsubscribe(this),
							(i || e) && n.subscribe(this)
					}
					updateViews(e) {
							const t = this.childContext
								, n = this.views
								, i = this.bindView
								, r = this.items
								, o = this.template
								, s = this.options.recycle
								, a = [];
							let l = 0
								, c = 0;
							for (let d = 0, p = e.length; d < p; ++d) {
									const p = e[d]
										, u = p.removed;
									let h = 0
										, m = p.index;
									const g = m + p.addedCount
										, _ = n.splice(p.index, u.length);
									for (c = a.length + _.length; m < g; ++m) {
											const e = n[m]
												, d = e ? e.firstChild : this.location;
											let p;
											s && c > 0 ? (h <= c && _.length > 0 ? (p = _[h],
											h++) : (p = a[l],
											l++),
											c--) : p = o.create(),
											n.splice(m, 0, p),
											i(p, r, m, t),
											p.insertBefore(d)
									}
									_[h] && a.push(..._.slice(h))
							}
							for (let e = l, t = a.length; e < t; ++e)
									a[e].dispose();
							if (this.options.positioning)
									for (let e = 0, t = n.length; e < t; ++e) {
											const i = n[e].context;
											i.length = t,
											i.index = e
									}
					}
					refreshAllViews(e=!1) {
							const t = this.items
								, n = this.childContext
								, i = this.template
								, r = this.location
								, o = this.bindView;
							let s = t.length
								, a = this.views
								, l = a.length;
							if (0 !== s && !e && this.options.recycle || (HTMLView.disposeContiguousBatch(a),
							l = 0),
							0 === l) {
									this.views = a = new Array(s);
									for (let e = 0; e < s; ++e) {
											const s = i.create();
											o(s, t, e, n),
											a[e] = s,
											s.insertBefore(r)
									}
							} else {
									let e = 0;
									for (; e < s; ++e)
											if (e < l) {
													o(a[e], t, e, n)
											} else {
													const s = i.create();
													o(s, t, e, n),
													a.push(s),
													s.insertBefore(r)
											}
									const c = a.splice(e, l - e);
									for (e = 0,
									s = c.length; e < s; ++e)
											c[e].dispose()
							}
					}
					unbindAllViews() {
							const e = this.views;
							for (let t = 0, n = e.length; t < n; ++t)
									e[t].unbind()
					}
			}
			class RepeatDirective extends HTMLDirective {
					constructor(e, t, n) {
							super(),
							this.itemsBinding = e,
							this.templateBinding = t,
							this.options = n,
							this.createPlaceholder = g.createBlockPlaceholder,
							function() {
									if (Vu)
											return;
									Vu = !0,
									_.setArrayObserverFactory((e=>new ArrayObserver(e)));
									const e = Array.prototype;
									if (e.$fastPatch)
											return;
									Reflect.defineProperty(e, "$fastPatch", {
											value: 1,
											enumerable: !1
									});
									const t = e.pop
										, n = e.push
										, i = e.reverse
										, r = e.shift
										, o = e.sort
										, s = e.splice
										, a = e.unshift;
									e.pop = function() {
											const e = this.length > 0
												, n = t.apply(this, arguments)
												, i = this.$fastController;
											return void 0 !== i && e && i.addSplice(newSplice(this.length, [n], 0)),
											n
									}
									,
									e.push = function() {
											const e = n.apply(this, arguments)
												, t = this.$fastController;
											return void 0 !== t && t.addSplice(adjustIndex(newSplice(this.length - arguments.length, [], arguments.length), this)),
											e
									}
									,
									e.reverse = function() {
											let e;
											const t = this.$fastController;
											void 0 !== t && (t.flush(),
											e = this.slice());
											const n = i.apply(this, arguments);
											return void 0 !== t && t.reset(e),
											n
									}
									,
									e.shift = function() {
											const e = this.length > 0
												, t = r.apply(this, arguments)
												, n = this.$fastController;
											return void 0 !== n && e && n.addSplice(newSplice(0, [t], 0)),
											t
									}
									,
									e.sort = function() {
											let e;
											const t = this.$fastController;
											void 0 !== t && (t.flush(),
											e = this.slice());
											const n = o.apply(this, arguments);
											return void 0 !== t && t.reset(e),
											n
									}
									,
									e.splice = function() {
											const e = s.apply(this, arguments)
												, t = this.$fastController;
											return void 0 !== t && t.addSplice(adjustIndex(newSplice(+arguments[0], e, arguments.length > 2 ? arguments.length - 2 : 0), this)),
											e
									}
									,
									e.unshift = function() {
											const e = a.apply(this, arguments)
												, t = this.$fastController;
											return void 0 !== t && t.addSplice(adjustIndex(newSplice(0, [], arguments.length), this)),
											e
									}
							}(),
							this.isItemsBindingVolatile = _.isVolatileBinding(e),
							this.isTemplateBindingVolatile = _.isVolatileBinding(t)
					}
					createBehavior(e) {
							return new RepeatBehavior(e,this.itemsBinding,this.isItemsBindingVolatile,this.templateBinding,this.isTemplateBindingVolatile,this.options)
					}
			}
			function repeat(e, t, n=Hu) {
					return new RepeatDirective(e,"function" == typeof t ? t : ()=>t,Object.assign(Object.assign({}, Hu), n))
			}
			const qu = css`
:host {
	display: flex;
	flex-direction: column;
	gap: 24px;
}

:host([expanded]) {
	/*
	 * The values subtracted from the vertical height of the page appear in the
	 * formula from left to right in the top-down order they are encountered on the
	 * page.
	 *
	 * content div top padding: 32px
	 * content div item gap: 24px
	 * suggestions bar height: 40px
	 * content div bottom padding: 146px
	 */
	height: calc(100vh - 32px - 24px - 40px - 146px);
}

:host([serp-slot=${Xc.Creator}]),
:host([serp-slot=${Xc.Pole}]),
:host([serp-slot=${Xc.RightRail}]) {
	display: contents;
}

/* MEDIA QUERIES */

@media (max-width: 767px) {
	:host {
		gap: 18px;
	}
}
`;
			class SlottedBehavior extends NodeObservationBehavior {
					constructor(e, t) {
							super(e, t)
					}
					observe() {
							this.target.addEventListener("slotchange", this)
					}
					disconnect() {
							this.target.removeEventListener("slotchange", this)
					}
					getNodes() {
							return this.target.assignedNodes(this.options)
					}
			}
			function slotted(e) {
					return "string" == typeof e && (e = {
							property: e
					}),
					new AttachedBehaviorHTMLDirective("fast-slotted",SlottedBehavior,e)
			}
			const ju = css`
:host {
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 12px;
}

:host([source=${ve.User}]) {
	align-self: flex-end;
}

:host([expanded]) {
	flex-grow: 1;
}

:host([serp-slot=${Xc.Creator}]),
:host([serp-slot=${Xc.Pole}]),
:host([serp-slot=${Xc.RightRail}]) {
	display: contents;
}

.frame {
	position: relative;
	overflow: hidden;
	width: 100%;
	height: auto;
	border: none;
	outline: none;
	padding: 0;
	margin: 0;
	display: flex;
	align-self: flex-start;
	border-radius: 12px;
	box-shadow: ${Gp.shadows.defaults.layer};
}
`
				, Wu = html` ${when((e=>!e.cancelRender), html`
	<iframe
		style="width:${e=>e.frameWidth};height:${e=>e.frameHeight};"
		class="frame ${e=>e.isContentLoaded ? "inline" : ""}"
		src=${e=>e.contentUrl}
	>
	</iframe>
`)}`;
			class RemoteContentHostViewHelper extends lifecycle_Disposable {
					constructor(e) {
							super(),
							this.remoteContentHostView = null,
							this.bindingTarget = e
					}
					get view() {
							return this.remoteContentHostView
					}
					createView() {
							this.remoteContentHostView = this._register(Wu.create(this.bindingTarget))
					}
					bindView(e) {
							var t;
							null === (t = this.remoteContentHostView) || void 0 === t || t.bind(e, y)
					}
					insertBefore(e) {
							var t;
							null === (t = this.remoteContentHostView) || void 0 === t || t.insertBefore(e)
					}
					appendTo(e) {
							var t;
							null === (t = this.remoteContentHostView) || void 0 === t || t.appendTo(e)
					}
					dispose() {
							super.dispose(),
							this.remoteContentHostView = null,
							delete this.bindingTarget
					}
			}
			const Yu = css`
${css`
/*!
Theme: Default
Description: Original highlight.js style
Author: (c) Ivan Sagalaev <maniac@softwaremaniacs.org>
Maintainer: @highlightjs/core-team
Website: https://highlightjs.org/
License: see project LICENSE
Touched: 2021
*/
pre code.hljs {
	display: block;
	overflow-x: auto;
	padding: 1em;
}
code.hljs {
	padding: 3px 5px;
}
.hljs {
	background: #fff;
	color: #000;
}
.hljs-comment,
.hljs-quote,
.hljs-variable {
	color: green;
}
.hljs-built_in,
.hljs-keyword,
.hljs-name,
.hljs-selector-tag,
.hljs-tag {
	color: #00f;
}
.hljs-addition,
.hljs-attribute,
.hljs-literal,
.hljs-section,
.hljs-string,
.hljs-template-tag,
.hljs-template-variable,
.hljs-title,
.hljs-type {
	color: #a31515;
}
.hljs-deletion,
.hljs-meta,
.hljs-selector-attr,
.hljs-selector-pseudo {
	color: #2b91af;
}
.hljs-doctag {
	color: grey;
}
.hljs-attr {
	color: red;
}
.hljs-bullet,
.hljs-link,
.hljs-symbol {
	color: #00b0e8;
}
.hljs-emphasis {
	font-style: italic;
}
.hljs-strong {
	font-weight: 700;
}
`}

@keyframes message-enter {
	from {
		opacity: 0;
		transform: scale(0.9);
	}
	to {
		opacity: 1;
		transform: scale(1);
	}
}

@keyframes tooltip-enter {
	0% {
		opacity: 0;
		transform: translateY(8px);
		pointer-events: none;
	}
	33% {
		opacity: 1;
	}
	100% {
		opacity: 1;
		transform: translateY(0);
		pointer-events: unset;
	}
}

:host {
	position: relative;
	display: flex;
	flex-direction: column;
	max-width: 768px;
	margin-right: 80px;
	background: rgba(255, 255, 255, 0.6);
	border-radius: 12px;
	opacity: 1;
	z-index: 10;
	box-shadow: ${Gp.shadows.defaults.card};
	outline: 1px solid transparent;
}

:host(:hover) {
	z-index: 1;
}

:host([animate]) {
	opacity: 0;
	animation-name: message-enter;
	animation-fill-mode: both;
	animation-delay: ${Bp.motion.duration.normal};
	animation-duration: ${Bp.motion.duration.normal};
	animation-timing-function: ${Bp.motion.easingFunction.motionIn};
	animation-timing-function: cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* USER */

:host([source=${ve.User}]) {
	color: #fff;
	align-self: flex-end;
	margin-right: unset;
	margin-left: 80px;
	background: ${Gp.colors.brand.gradient.core};
}

/* CONTENT */

.content {
	display: flex;
	flex-direction: column;
	box-sizing: border-box;
	padding: 10px 16px;
	user-select: text;
	-webkit-user-select: text;
	word-break: break-word;
	font-size: ${Up.typography.typeRamp.body2.fontSize};
	line-height: ${Up.typography.typeRamp.body2.lineHeight};
	font-weight: ${Up.typography.typeRamp.body2.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.body2.fontVariationSettings};
}

:host([attributions]) .content.attributions {
	padding-top: 0;
}

.hidden {
	top: 0;
	left: -2px;
	width: 1px;
	height: 1px;
	position: absolute;
	overflow: hidden;
}

:host cib-feedback {
	visibility: visible;
}

:host(:not(:hover, :focus, :active, :focus-visible, :focus-within)) cib-feedback {
	visibility: hidden;
}
:host(:not(:hover, :focus, :active, :focus-visible, :focus-within)) {
	z-index: unset;
}

.content span {
	font-variation-settings: ${Up.typography.typeRamp.subtitle1.fontVariationSettings};
}

/* TEXT TYPE */

:host([type=${sl.Text}]:focus-visible) {
	outline: 2px solid #000;
}

/* META TYPE */

:host([type=${sl.Meta}]) {
	background: none;
	box-shadow: none;
	outline: none;
	margin: 0;
}

:host([type=${sl.Meta}]) .content {
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 8px;
	box-sizing: border-box;
	padding: 0;
}

:host([type=${sl.Meta}]) .content .meta-text,
:host([type=${sl.Meta}]) .content .meta-text p ,
:host([type=${sl.Meta}]) .content .meta-text code {
	user-select: text;
	-webkit-user-select: text;
	word-break: break-word;
	font-size: ${Up.typography.typeRamp.body1.fontSize};
	line-height: ${Up.typography.typeRamp.body1.lineHeight};
	font-weight: ${Up.typography.typeRamp.body1.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.body1.fontVariationSettings};
}

:host([type=${sl.Meta}]) .content .meta-text span,
:host([type=${sl.Meta}]) .content .meta-text code {
	font-family: ${Up.typography.fonts.text};
	font-weight: ${Up.typography.typeRamp.body1Strong.fontWeight};
	font-weight: 600;
	font-variation-settings: ${Up.typography.typeRamp.body1Strong.fontVariationSettings};
}

:host([type=${sl.Meta}]) .content .meta-text p {
	margin: 0;
}

:host([type=${sl.Meta}]) .content .meta-text blockquote {
	display: none;
}

/* CARD TYPE */

:host(([type=${sl.Host}][content=${al.SemSerp}])) {
	max-width: unset;
	flex-grow: 1;
	width: 100%;
}

:host([type=${sl.Host}][content=${al.Answer}]) {
	max-width: unset;
	flex-grow: 1;
	display: contents;
}

.card {
	position: relative;
	overflow: auto;
	border-radius: unset;
}

.card-frame {
	position: absolute;
	overflow: auto;
	width: 100%;
	height: 100%;
	border: none;
	outline: none;
	padding: 0;
	margin: 0;
}

.frame {
	position: relative;
	overflow: hidden;
	width: 100%;
	height: auto;
	border: none;
	outline: none;
	padding: 0;
	margin: 0;
	display: flex;
	align-self: flex-start;
	border-radius: 12px;
	box-shadow: ${Gp.shadows.defaults.card};
}

.inline {
	margin: 4px 0px;
	border-radius: 8px;
	box-shadow: unset;
}

:host([mobile]) .frame:not(.inline) {
	min-width: max(288px, 100% - 80px);
	max-width: calc(100% - 80px);
}

/* INDICATOR */

.sub {
	display: inline-block;
	position: absolute;
	color: #660000;
	margin: -6px 0px 0px 0px;
	scale: 0.5;
}

/* ADAPTIVE CARDS */

.content .ac-container {
	display: flex;
	flex-direction: column;
}

.content .ac-container > * {
	margin-top: 10px !important;
}

.content .ac-container > *:first-child {
	margin-top: 0 !important;
}

.content .ac-container .ac-textBlock {
	display: flex;
	flex-direction: column;
}

.content .ac-container .ac-textBlock > * {
	margin-top: 10px !important;
}

.content .ac-container .ac-textBlock > *:first-child {
	margin-top: 0 !important;
}

.content .ac-container,
.content .ac-container p,
.content .ac-container h1,
.content .ac-container h2,
.content .ac-container h3,
.content .ac-container h4 {
	padding: 0;
	margin: 0;
	user-select: text;
	-webkit-user-select: text;
	word-break: break-word;
}

.content .ac-container,
.content .ac-container p {
	font-size: ${Up.typography.typeRamp.body2.fontSize};
	line-height: ${Up.typography.typeRamp.body2.lineHeight};
	font-weight: ${Up.typography.typeRamp.body2.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.body2.fontVariationSettings};
}

.content .ac-container h1 {
	font-size: ${Up.typography.typeRamp.title2.fontSize};
	line-height: ${Up.typography.typeRamp.title2.lineHeight};
	font-weight: ${Up.typography.typeRamp.title2.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.title2.fontVariationSettings};
}

.content .ac-container h2 {
	font-size: ${Up.typography.typeRamp.title3.fontSize};
	line-height: ${Up.typography.typeRamp.title3.lineHeight};
	font-weight: ${Up.typography.typeRamp.title3.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.title3.fontVariationSettings};
}

.content .ac-container h3 {
	font-size: ${Up.typography.typeRamp.subtitle1.fontSize};
	line-height: ${Up.typography.typeRamp.subtitle1.lineHeight};
	font-weight: ${Up.typography.typeRamp.subtitle1.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.subtitle1.fontVariationSettings};
}

.content .ac-container h4 {
	font-size: ${Up.typography.typeRamp.subtitle2.fontSize};
	line-height: ${Up.typography.typeRamp.subtitle2.lineHeight};
	font-weight: ${Up.typography.typeRamp.subtitle2.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.subtitle2.fontVariationSettings};
}

.content .ac-container a {
	position: relative;
	color: ${"#4007a2"};
	text-decoration: none;
}

.content .ac-container a:hover {
	text-decoration: underline;
}

.content .ac-container a:focus-visible {
	outline: none;
}

.content .ac-container a:focus-visible sup::after {
	content: "";
	position: absolute;
	width: 130%;
	height: 130%;
	top: -2px;
	border-radius: 3px;
	border: 2px solid #000;
	outline: 2px solid #fff;
	box-sizing: border-box;
}

.content .ac-container sup {
	position: relative;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	font-size: 10px;
	font-weight: 600;
	vertical-align: top;
	top: -1px;
	margin: 0px 2px;
	min-width: 14px;
	height: 14px;
	border-radius: 3px;
	text-decoration-color: transparent;
	color: ${Gp.colors.brand.solid.denimMinus1};
	background: ${Gp.colors.brand.solid.denimPlus4};
	outline: 1px solid transparent;
}

.content .ac-container .ac-textBlock img {
	display: none;
}

.content .ac-container .ac-textBlock pre {
	margin: 0;
	margin-bottom: 4px;
	background: rgba(0, 0, 0, 0.02);
	border: 1px solid rgba(0, 0, 0, 0.2);
	border-radius: 8px;
	padding: 6px 10px;
	box-sizing: border-box;
}

.content .ac-container .ac-textBlock code {
	white-space: pre-wrap;
	font-size: 14px;
}

.content .ac-container .ac-textBlock :not(pre) code {
	margin: 0px 2px;
	background: rgba(0, 0, 0, 0.02);
	border: 1px solid rgba(0, 0, 0, 0.2);
	border-radius: 4px;
	padding: 1px 4px;
	box-sizing: border-box;
	font-weight: 500;
}

.content .ac-container .ac-textBlock blockquote {
	margin: 0;
	font-style: italic;
}

.content .ac-container .ac-textBlock ol,
.content .ac-container .ac-textBlock ul {
	display: flex;
	flex-direction: column;
	gap: 10px;
	margin: 0;
	padding-left: 24px;
}

.content .ac-container .ac-textBlock p p + ol,
.content .ac-container .ac-textBlock p p + ul {
	margin-top: 10px;
}

.content .ac-container .ac-textBlock li > ol {
	margin: 0;
}

.content .ac-container .ac-textBlock table {
	border: 1px solid #d2d2d2;
	border-radius: 6px;
	overflow: hidden;
	border-spacing: 0px;
	margin: 8px 0;
	padding: 0 12px;
	width: 100%;
	table-layout: fixed;
}

.content .ac-container .ac-textBlock tr {
	padding: 0 4px;
}

.content .ac-container .ac-textBlock th,
.content .ac-container .ac-textBlock td {
	text-align: left;
	vertical-align: baseline;
	word-break: initial;
	padding: 8px 4px;
}

.content .ac-container .ac-textBlock th {
	font-size: ${Up.typography.typeRamp.body1Strong.fontSize};
	line-height: ${Up.typography.typeRamp.body1Strong.lineHeight};
	font-weight: ${Up.typography.typeRamp.body1Strong.fontWeight};
	font-weight: 600;
	font-variation-settings: ${Up.typography.typeRamp.body1Strong.fontVariationSettings};
}

.content .ac-container .ac-textBlock td {
	font-size: ${Up.typography.typeRamp.body1.fontSize};
	line-height: ${Up.typography.typeRamp.body1.lineHeight};
	font-weight: ${Up.typography.typeRamp.body1.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.body1.fontVariationSettings};
}

.content .ac-container .ac-textBlock th:first-child,
.content .ac-container .ac-textBlock td:first-child {
	padding-left: 0;
}

.content .ac-container .ac-horizontal-separator {
	background: #dddddd;
	height: 1px;
	margin: 10px -16px 0;
}

.content .ac-container .ac-horizontal-separator + .ac-textBlock {
	margin-top: 0 !important;
}

.content .ac-container .ac-horizontal-separator + .ac-textBlock p {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	gap: 8px;
	font-size: ${Up.typography.typeRamp.body1Strong.fontSize};
	line-height: 24px;
	font-weight: ${Up.typography.typeRamp.body1Strong.fontWeight};
	font-weight: 600;
	font-variation-settings: ${Up.typography.typeRamp.body1Strong.fontVariationSettings};
}

.content .ac-container .ac-horizontal-separator + .ac-textBlock p a {
	text-decoration: none;
	display: flex;
	align-items: center;
	justify-content: center;
	border-radius: 4px;
	box-sizing: border-box;
	padding: 0 8px;
	font-weight: 500;
	color: ${Gp.colors.brand.solid.denimMinus1};
	background: ${Gp.colors.brand.solid.denimPlus4};
}

content .ac-container .ac-horizontal-separator + .ac-textBlock p a:hover {
	text-decoration: underline;
}

/* TOOLTIP */

.ac-container a.tooltip-target,
.ac-container span.tooltip-target {
	position: relative;
	color: inherit;
	text-underline-offset: 3px;
	border-bottom: 2px solid transparent;
	text-decoration-style: dotted;
	text-decoration-color: #999999;
	text-underline-offset: 3px;
}

.ac-container a.tooltip-target:hover,
.ac-container a.tooltip-target:focus,
.ac-container a.tooltip-target:active,
.ac-container span.tooltip-target:hover,
.ac-container span.tooltip-target:focus,
.ac-container span.tooltip-target:active {
	text-decoration-style: dotted;
	text-decoration-color: #999999;
}

.ac-container a.tooltip-target.hover,
.ac-container span.tooltip-target.hover {
	cursor: pointer;
	background: #e2e9ff;
	border-radius: 2px;
	color: ${Gp.colors.brand.solid.denimMinus2};
	text-decoration-color: ${Gp.colors.brand.solid.denim};
}

:host(:hover) .ac-container a.tooltip-target,
:host(:focus) .ac-container a.tooltip-target,
:host(:hover) .ac-container span.tooltip-target,
:host(:focus) .ac-container span.tooltip-target {
	text-decoration-line: underline;
}

.content .ac-container a.tooltip-target:focus-visible,
.content .ac-container span.tooltip-target:focus-visible {
	outline: black solid 2px;
	outline-offset: 3px;
}

.ac-container a.tooltip-target a,
.ac-container a.tooltip-target:hover a,
.ac-container a.tooltip-target:focus a,
.ac-container a.tooltip-target:active a,
.ac-container span.tooltip-target a,
.ac-container span.tooltip-target:hover a,
.ac-container span.tooltip-target:focus a,
.ac-container span.tooltip-target:active a {
	text-decoration-color: transparent !important;
}

.ac-container a.tooltip-target strong,
.ac-container span.tooltip-target strong {
	/** fixes issue that causes hover class not to be applied when moving from citation to tooltip */
	pointer-events: none;
}

/* FP */

.fp-horizontal-separator {
	background: #cccccc;
	height: 1px;
}

.fp-vertical-separator {
	display: inline-block;
	background: #0000001f;
	height: 16px;
	width: 1px;
	margin: 0 8px;
}

.fp-container {
	display: flex;
	margin: 10px;
	align-items: center;
}

.fp-button {
	text-decoration: none;
	display: flex;
	align-items: center;
	justify-content: center;
	border-radius: 4px;
	box-sizing: border-box;
	padding: 0 8px;
	font-weight: 500;
	border: none;
	height: 20px;
	cursor: pointer;
	color: ${Gp.colors.brand.solid.denimMinus1};
	background: ${Gp.colors.brand.solid.denimPlus4};
	font-family: ${Up.typography.fonts.text};
	font-size: ${Up.typography.typeRamp.body1Strong.fontSize};
	font-weight: ${Up.typography.typeRamp.body1Strong.fontWeight};
	font-weight: 500;
	font-variation-settings: ${Up.typography.typeRamp.body1Strong.fontVariationSettings};
}

.fp-button:hover {
	text-decoration: underline;
}

/* SERP SLOT */

:host([serp-slot=${Xc.Creator}]),
:host([serp-slot=${Xc.Pole}]),
:host([serp-slot=${Xc.RightRail}]) {
	position: relative;
	background: transparent;
	max-width: unset;
	width: 100%;
	margin: 0;
	opacity: 1;
	animation-name: unset;
	box-shadow: none;
	outline: none;
}

:host([serp-slot=${Xc.Creator}]),
:host([serp-slot=${Xc.Creator}]) .content,
:host([serp-slot=${Xc.Creator}]) .content .ac-container,
:host([serp-slot=${Xc.Creator}]) .content .ac-container > .ac-textBlock,
:host([serp-slot=${Xc.Pole}]),
:host([serp-slot=${Xc.Pole}]) .content,
:host([serp-slot=${Xc.Pole}]) .content .ac-container,
:host([serp-slot=${Xc.Pole}]) .content .ac-container > .ac-textBlock,
:host([serp-slot=${Xc.RightRail}]),
:host([serp-slot=${Xc.RightRail}]) .content,
:host([serp-slot=${Xc.RightRail}]) .content .ac-container,
:host([serp-slot=${Xc.RightRail}]) .content .ac-container > .ac-textBlock {
	flex-grow: 1;
}

:host([serp-slot=${Xc.Creator}][type=${sl.Meta}]),
:host([serp-slot=${Xc.Pole}][type=${sl.Meta}]),
:host([serp-slot=${Xc.RightRail}][type=${sl.Meta}]) {
	align-items: center;
}

:host([serp-slot=${Xc.Creator}][type=${sl.Meta}]) .content {
	margin-bottom: 12px;
}

:host([serp-slot=${Xc.Pole}][type=${sl.Meta}]) .content,
:host([serp-slot=${Xc.RightRail}][type=${sl.Meta}]) .content {
	position: relative;
	margin: 0;
	margin-top: -48px;
}

:host([serp-slot=${Xc.Pole}][type=${sl.Meta}]) .content .meta-text,
:host([serp-slot=${Xc.Pole}][type=${sl.Meta}]) .content .meta-text p ,
:host([serp-slot=${Xc.Pole}][type=${sl.Meta}]) .content .meta-text code,
:host([serp-slot=${Xc.RightRail}][type=${sl.Meta}]) .content .meta-text,
:host([serp-slot=${Xc.RightRail}][type=${sl.Meta}]) .content .meta-text p ,
:host([serp-slot=${Xc.RightRail}][type=${sl.Meta}]) .content .meta-text code {
	font-size: ${Up.typography.typeRamp.body2.fontSize};
	line-height: ${Up.typography.typeRamp.body2.lineHeight};
}

:host([serp-slot=${Xc.Pole}][type=${sl.Meta}]) .content .meta-text span,
:host([serp-slot=${Xc.Pole}][type=${sl.Meta}]) .content .meta-text code,
:host([serp-slot=${Xc.RightRail}][type=${sl.Meta}]) .content .meta-text span,
:host([serp-slot=${Xc.RightRail}][type=${sl.Meta}]) .content .meta-text code {
	font-size: ${Up.typography.typeRamp.subtitle2.fontSize};
	line-height: ${Up.typography.typeRamp.subtitle2.lineHeight};
}

:host([serp-slot=${Xc.Creator}]) .content,
:host([serp-slot=${Xc.Pole}]) .content,
:host([serp-slot=${Xc.RightRail}]) .content {
	padding: 0;
}

:host([serp-slot=${Xc.Pole}]) .content,
:host([serp-slot=${Xc.RightRail}]) .content {
	min-height: 100%;
}

:host([attributions][serp-slot=${Xc.Creator}]) .content.attributions,
:host([attributions][serp-slot=${Xc.Pole}]) .content.attributions,
:host([attributions][serp-slot=${Xc.RightRail}]) .content.attributions {
	flex-grow: 0;
	padding-top: 20px;
}

:host([serp-slot=${Xc.Creator}]) .content .ac-container,
:host([serp-slot=${Xc.Pole}]) .content .ac-container,
:host([serp-slot=${Xc.RightRail}]) .content .ac-container {
	width: 100%;
}

:host([cached][serp-slot=${Xc.Creator}]) .content .ac-container .ac-textBlock:first-child,
:host([cached][serp-slot=${Xc.Pole}]) .content .ac-container .ac-textBlock:first-child,
:host([cached][serp-slot=${Xc.RightRail}]) .content .ac-container .ac-textBlock:first-child {
	align-self: center;
	max-width: 100%;
}

:host([serp-slot=${Xc.Creator}]) .content .ac-container .ac-horizontal-separator,
:host([serp-slot=${Xc.Pole}]) .content .ac-container .ac-horizontal-separator,
:host([serp-slot=${Xc.RightRail}]) .content .ac-container .ac-horizontal-separator {
	margin: 0 !important;
	visibility: hidden;
}

:host([serp-slot=${Xc.Creator}]) .content .ac-container .ac-horizontal-separator + .ac-textBlock,
:host([serp-slot=${Xc.RightRail}]) .content .ac-container .ac-horizontal-separator + .ac-textBlock {
	margin-top: 16px !important;
	flex-grow: unset;
}

:host([serp-slot=${Xc.Pole}]) .content .ac-container .ac-horizontal-separator + .ac-textBlock {
	margin-top: 24px !important;
	margin-bottom: 8px;
	flex-grow: unset;
}

:host([serp-slot=${Xc.Creator}]) cib-reactions,
:host([serp-slot=${Xc.Pole}]) cib-reactions,
:host([serp-slot=${Xc.RightRail}]) cib-reactions {
	display: none;
}

/* MOBILE */

:host([mobile]) .content .ac-container .tooltip-target > a,
:host([mobile]) .content .ac-container sup {
	pointer-events: none;
}

:host([mobile]) .content .ac-container sup::before {
	content: "";
	position: absolute;
	inset: -6px;
}

:host([serp-slot=${Xc.None}][feedback]) {
	margin-bottom: 18px !important;
}

/* MEDIA QUERIES */

@media (max-width: 767px) {
	:host {
		margin-right: 48px;
	}

	:host([source=${ve.User}]) {
		margin-left: 48px;
	}

	:host([mobile]) .frame:not(.inline) {
		min-width: max(288px, 100% - 48px);
		max-width: calc(100% - 48px);
	}
}

@media (min-width: 601px) {
	:host([serp-slot=${Xc.Pole}]) .content,
	:host([serp-slot=${Xc.Pole}]) .content .ac-container,
	:host([serp-slot=${Xc.Pole}]) .content .ac-container p {
		font-size: ${Up.typography.typeRamp.message.fontSize};
		line-height: ${Up.typography.typeRamp.message.lineHeight};
		font-weight: ${Up.typography.typeRamp.message.fontWeight};
		font-variation-settings: ${Up.typography.typeRamp.message.fontVariationSettings};
	}

	:host([serp-slot=${Xc.Pole}]) .content .ac-container .ac-textBlock {
		gap: 8px;
	}

	:host([serp-slot=${Xc.Pole}]) .content .ac-container .ac-textBlock th {
		font-size: ${Up.typography.typeRamp.subtitle2.fontSize};
		line-height: ${Up.typography.typeRamp.subtitle2.lineHeight};
		font-weight: ${Up.typography.typeRamp.subtitle2.fontWeight};
		font-weight: 600;
		font-variation-settings: ${Up.typography.typeRamp.subtitle2.fontVariationSettings};
	}

	:host([serp-slot=${Xc.Pole}]) .content .ac-container .ac-textBlock td {
		font-size: ${Up.typography.typeRamp.body2.fontSize};
		line-height: ${Up.typography.typeRamp.body2.lineHeight};
		font-weight: ${Up.typography.typeRamp.body2.fontWeight};
		font-variation-settings: ${Up.typography.typeRamp.body2.fontVariationSettings};
	}

	:host([serp-slot=${Xc.Pole}]) .content .ac-container .ac-textBlock pre {
		padding: 8px 12px;
	}

	:host([serp-slot=${Xc.Pole}]) .content .ac-container .ac-textBlock code {
		font-size: 15px;
	}
}

@media (max-width: 600px) {
	:host([serp-slot=${Xc.Pole}]) .content .ac-container .ac-horizontal-separator + .ac-textBlock,
	:host([serp-slot=${Xc.RightRail}]) .content .ac-container .ac-horizontal-separator + .ac-textBlock {
		margin: 16px 0 4px !important;
	}
}

/* FAILED */

:host([fail]) {
	display: none;
}

:host([fail][type="host"][content="answer"]) {
	display: flex;
	margin-bottom: -12px !important;
}
`.withBehaviors($p(css`
	:host([source=${ve.User}]) {
		forced-color-adjust: none;
		background: ${Vp.Highlight};
		color: ${Vp.HighlightText};
		outline-color: ${Vp.HighlightText};
	}

	:host([type=${sl.Text}]:focus-visible) {
		background: ${Vp.CanvasText};
		outline-color: ${Vp.Highlight};
	}

	.content .ac-container a:focus-visible sup {
		forced-color-adjust: none;
		color: ${Vp.HighlightText};
		background: ${Vp.Highlight};
		outline-color: ${Vp.Highlight};
	}

	.content .ac-container a:focus-visible sup::after {
		border: none;
		outline: none;
	}

	.tooltip-target.hover {
		background: ${Vp.Highlight};
		color: ${Vp.HighlightText};
	}
`));
			var Ku, Qu, Zu;
			(function(e) {
					e.HostedContentDimensionUpdate = "HostedContentDimensionUpdate"
			}
			)(Ku || (Ku = {})),
			function(e) {
					e.Pole = "POLE",
					e.Top = "TOP",
					e.Ads = "ADS",
					e.Unknown = "UNKNOWN",
					e.NoAnswer = "NOANS"
			}(Qu || (Qu = {})),
			function(e) {
					function isHostedContentMessageData(e) {
							const t = e;
							return "object" == typeof e && null !== e && "string" == typeof t.type && "boolean" == typeof t.hasCarousel && "number" == typeof t.height && "number" == typeof t.width
					}
					function isAnswerCardMessageType(e) {
							return function(e, t) {
									return function(e) {
											return null != e
									}(t) && function(e) {
											return Object.values(e).filter((e=>"function" != typeof e))
									}(e).includes(t)
							}(Ku, e)
					}
					e.isMessageData = function(e) {
							const t = e;
							return "object" == typeof e && null !== e && "string" == typeof t.type && isAnswerCardMessageType(t.type) && isHostedContentMessageData(t.data)
					}
					,
					e.isHostedContentMessageData = isHostedContentMessageData,
					e.isAnswerCardMessageType = isAnswerCardMessageType;
					const t = {
							type: Qu.Top,
							hasCarousel: !1,
							height: 620,
							width: 648
					}
						, n = {
							type: Qu.Pole,
							hasCarousel: !0,
							height: 240,
							width: 1204
					};
					e.queueDimensionUpdateMessage = function(e) {
							let i;
							if (e.includes("weather"))
									i = t;
							else {
									if (!e.includes("movies"))
											return;
									i = n
							}
							const r = {
									type: Ku.HostedContentDimensionUpdate,
									data: i
							};
							setTimeout((()=>window.postMessage(r, "*")), 4e3)
					}
			}(Zu || (Zu = {}));
			const Xu = css`
:host {
	position: relative;
	min-height: 160px;
	width: 100%;
	overflow: auto;
	flex-grow: 1;
	background: rgba(255, 255, 255, 0.6);
	transition-property: height, width;
	transition-duration: ${Bp.motion.duration.slowest};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
	box-shadow: ${Gp.shadows.defaults.card};
}

.frame {
	position: absolute;
	overflow: auto;
	width: 100%;
	height: 100%;
	border: none;
	outline: none;
	padding: 0;
	margin: 0;
}
`
				, Ju = html`
<iframe class="frame" ${ref("frame")} src=${e=>e.vm.contentUrl}></iframe>
`;
			let eh = class extends w {
					constructor() {
							super(...arguments),
							this.disposer = new Disposer,
							this.handleWindowMessage = e=>{
									var t;
									const n = e.data;
									if (Zu.isMessageData(n) && n.type === Ku.HostedContentDimensionUpdate) {
											const {type: e, hasCarousel: i, height: r, width: o} = n.data;
											null === (t = this.vm.log) || void 0 === t || t.debug(this, this.handleWindowMessage, `message: ${n.type}; card: ${e}; carousel: ${i}; height: ${r}; width: ${o}`).write()
									}
							}
					}
					connectedCallback() {
							var e;
							super.connectedCallback(),
							null === (e = this.vm.log) || void 0 === e || e.trace(this, this.connectedCallback, null).write(),
							this.configureHostedContentMessaging()
					}
					disconnectedCallback() {
							var e;
							null === (e = this.vm.log) || void 0 === e || e.trace(this, this.disconnectedCallback, null).write(),
							this.disposer.isDisposed || this.disposer.dispose(),
							super.disconnectedCallback()
					}
					configureHostedContentMessaging() {
							window.addEventListener("message", this.handleWindowMessage),
							this.disposer.register((()=>window.removeEventListener("message", this.handleWindowMessage)))
					}
			}
			;
			__decorate([observable, __metadata("design:type", Object)], eh.prototype, "vm", void 0),
			eh = __decorate([customElement({
					name: "cib-content-host",
					template: Ju,
					styles: Xu
			})], eh);
			const th = css`
:host {
	position: relative;
	min-height: 320px;
	width: 100%;
	flex-grow: 1;
	background: rgba(255, 255, 255, 0.6);
	border-radius: 12px;
	transition-property: height, width;
	transition-duration: ${Bp.motion.duration.slowest};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
	box-shadow: ${Gp.shadows.defaults.card};
}
`
				, nh = html`<slot></slot>`;
			let ih = class extends w {
			}
			;
			ih = __decorate([customElement({
					name: "cib-card",
					template: nh,
					styles: th
			})], ih);
			const rh = css`
@keyframes fadeIn {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}

:host {
	position: absolute;
	top: -36px;
	right: 0;
	z-index: 1001;
	display: flex;
	flex-direction: row;
	will-change: transform;
	border-radius: 8px;
	background: #ffffff;
	box-shadow: ${Gp.shadows.elevations.elevation4};
	outline: 1px solid transparent;
}

/* CONTAINER */

.container {
	display: flex;
	flex-direction: row;
}

/* BUTTONS */

button {
	position: relative;
	outline: none;
	border: none;
	background: none;
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	padding: 0px;
	margin: 0;
	color: #444444;
	fill: #444444;
	width: 36px;
	height: 36px;
	cursor: pointer;
	font-family: ${Up.typography.fonts.text};
	border-radius: 6px;
}

button:before {
	content: "";
	position: absolute;
	inset: 2px;
	border-radius: 6px;
	background: rgba(0, 0, 0, 0.08);
	opacity: 0;
	transition-property: opacity;
	transition-duration: ${Bp.motion.duration.fast};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

@media (hover: hover) {
	button:hover:before,
	button:hover .tooltip {
		opacity: 1;
	}

	button:hover svg-icon {
		fill: #444444;
	}
}

button:active:before,
button:active .tooltip,
button:focus-visible .tooltip {
	opacity: 1;
}

button:active svg-icon {
	fill: #444444;
}

button:focus-visible:before {
	opacity: 1;
	outline: 2px solid black;
}

button.positive[aria-pressed="true"]:after,
button.negative[aria-pressed="true"]:after {
	content: "";
	pointer-events: none;
	position: absolute;
	width: 18px;
	height: 1px;
	bottom: 2px;
	border-radius: 2px;
	border: 1px solid transparent;
	background-color: ${Gp.colors.brand.solid.denim};
}

button.more {
	padding-left: 1px;
}

button.more:after {
	content: "";
	position: absolute;
	width: 100%;
	height: 100%;
	border-left: 1px solid rgba(0, 0, 0, 0.1);
}

/* ICONS */

svg-icon[type="flag-fill"] {
	fill: rgba(200, 0, 0, 1);
}

/* OVERFLOW MENU */

.overflow-menu {
	position: absolute;
	display: flex;
	flex-direction: column;
	top: calc(100% + 2px);
	left: calc(100% - 36px);
	border-radius: 8px;
	background: #ffffff;
	box-shadow: ${Gp.shadows.elevations.elevation4};
	outline: 1px solid transparent;
}

.overflow-menu button {
	justify-content: flex-start;
	width: unset;
}

.overflow-menu-icon {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	color: #444444;
	fill: #444444;
	width: 36px;
	height: 36px;
	cursor: pointer;
}

.overflow-menu-text {
	padding-right: 10px;
	font-size: ${Up.typography.typeRamp.body1.fontSize};
	line-height: ${Up.typography.typeRamp.body1.lineHeight};
	font-weight: ${Up.typography.typeRamp.body1.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.body1.fontVariationSettings};
}

.overflow-menu .copy-success,
.overflow-menu .copy-success .overflow-menu-icon {
	color: ${Gp.colors.brand.solid.denim};
	fill: ${Gp.colors.brand.solid.denim};
}

/* TOOLTIPS */

.tooltip {
	display: flex;
	align-items: center;
	justify-content: center;
	position: absolute;
	height: 24px;
	width: max-content;
	top: -28px;
	padding: 0 8px;
	border-radius: 4px;
	background-color: rgba(0, 0, 0, 0.7);
	color: #ffffff;
	text-align: center;
	pointer-events: none;
	z-index: 9999;
	opacity: 0;
	font-size: ${Up.typography.typeRamp.caption1Strong.fontSize};
	line-height: ${Up.typography.typeRamp.caption1Strong.lineHeight};
	font-weight: ${Up.typography.typeRamp.caption1Strong.fontWeight};
	font-weight: 600;
	font-variation-settings: ${Up.typography.typeRamp.caption1Strong.fontVariationSettings};
	transition-property: opacity;
	transition-duration: ${Bp.motion.duration.fast};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

/* SERP SLOT */

:host([serp-slot=${Xc.Creator}]),
:host([serp-slot=${Xc.Pole}]),
:host([serp-slot=${Xc.RightRail}]) {
	box-shadow: none;
	visibility: visible !important;
}

:host([serp-slot=${Xc.Creator}]) {
	top: 8px;
	right: 8px;
}

:host([serp-slot=${Xc.Pole}]),
:host([serp-slot=${Xc.RightRail}]) {
	top: -66px;
	right: -8px;
}

:host([serp-slot=${Xc.Creator}]) .container:after,
:host([serp-slot=${Xc.Pole}]) .container:after,
:host([serp-slot=${Xc.RightRail}]) .container:after {
	content: "";
	position: absolute;
	inset: -1px;
	border-radius: 8px;
	border: 1px solid rgba(0, 0, 0, 0.12);
	pointer-events: none;
}

:host([serp-slot=${Xc.Creator}]) button svg-icon,
:host([serp-slot=${Xc.Pole}]) button svg-icon,
:host([serp-slot=${Xc.RightRail}]) button svg-icon {
	fill: #999999;
}

:host([serp-slot=${Xc.Creator}]) .tooltip,
:host([serp-slot=${Xc.Pole}]) .tooltip,
:host([serp-slot=${Xc.RightRail}]) .tooltip {
	top: unset;
	bottom: -32px;
}

:host([serp-slot=${Xc.Creator}]) .overflow-menu,
:host([serp-slot=${Xc.Pole}]) .overflow-menu,
:host([serp-slot=${Xc.RightRail}]) .overflow-menu {
	left: unset;
	right: 0;
}

:host([serp-slot=${Xc.Creator}][overflow]) button.more .tooltip,
:host([serp-slot=${Xc.Pole}][overflow]) button.more .tooltip,
:host([serp-slot=${Xc.RightRail}][overflow]) button.more .tooltip {
	opacity: 0;
}
`.withBehaviors($p(css`
	:host button {
		color: ${Vp.ButtonText};
	}

	:host button:hover,
	:host button:focus-visible,
	:host button:hover .overflow-menu-icon,
	:host button:focus-visible .overflow-menu-icon {
		color: ${Vp.Highlight};
	}

	:host button:hover:after,
	:host button:focus-visible:after {
		border: 2px solid ${Vp.Highlight};
		outline: none;
	}

	button.divider {
		border-right-color: ${Vp.CanvasText};
	}

	.tooltip {
		forced-color-adjust: none;
		color: ${Vp.HighlightText};
		background-color: ${Vp.Highlight};
	}
`))
				, oh = html`
<template
	serp-slot=${e=>{
					var t, n;
					return null !== (n = null === (t = e.layout) || void 0 === t ? void 0 : t.serpSlot) && void 0 !== n ? n : Xc.None
			}
			}
	?overflow=${e=>e.showMore}
	@mouseenter=${e=>e.handleHostMouseEnter()}
	@mouseleave=${e=>e.handleHostMouseLeave()}
>
	<div class="container">${html`
<button
	class="positive"
	type="button"
	aria-label=${e=>e.vm.strings.likeButtonAriaLabel}
	aria-pressed=${e=>e.vm.hasSubmittedPositiveFeedback}
	@click=${e=>e.handlePositiveClick()}
>
	<svg-icon type=${Yp.ThumbLike} size="22"></svg-icon>
	<div class="tooltip">${e=>e.vm.strings.tooltipPositive}</div>
</button>
<button
	class="negative"
	type="button"
	aria-label=${e=>e.vm.strings.dislikeButtonAriaLabel}
	aria-pressed=${e=>e.vm.hasSubmittedNegativeFeedback}
	@click=${e=>e.handleNegativeClick()}
>
	<svg-icon type=${Yp.ThumbDislike} size="22"></svg-icon>
	<div class="tooltip">${e=>e.vm.strings.tooltipNegative}</div>
</button>
`} ${html`
${when((e=>e.vm.enableShare), html`
		<button
			${ref("shareButton")}
			type="button"
			aria-label=${e=>e.vm.strings.shareButtonAriaLabel}
			aria-haspopup="true"
		>
			<svg-icon type=${Yp.Share} size="22"></svg-icon>
			<div class="tooltip">${e=>e.vm.strings.tooltipShare}</div>
		</button>
	`)}
`} ${html`
<button
	class="more"
	type="button"
	aria-label="See More Options"
	aria-haspoup="true"
	aria-expanded=${e=>e.showMore}
	@click=${e=>e.handleMoreClick()}
	@keydown=${(e,t)=>e.handleMoreKeydown(t.event)}
	${ref("moreButton")}
>
	<svg-icon type=${Yp.More} size="22"></svg-icon>
	<div class="tooltip">${e=>e.vm.strings.tooltipMore}</div>
</button>
`}</div>
	${html`
${when((e=>e.showMore), html`
		<div
			class="overflow-menu"
			role="menu"
			@keydown=${(e,t)=>e.handleMenuKeydown(t.event)}
			${children({
					property: "moreMenuItems",
					filter: node_observation_elements()
			})}
		>
			<button
				class="${e=>e.vm.copyState === Vc.Copied ? "copy-success" : ""}"
				type="button"
				role="menuitem"
				aria-label=${e=>e.vm.strings.copyButtonAriaLabel}
				@click=${e=>e.handleCopyClick()}
			>
				<div class="overflow-menu-icon">
					<svg-icon type=${Yp.Copy} size="22"></svg-icon>
				</div>
				<div class="overflow-menu-text">${e=>e.getCopyText()}</div>
			</button>
			${when((e=>e.vm.enableOffensiveFeedback), html`
					<button
						type="button"
						role="menuitem"
						aria-label=${e=>e.vm.strings.offensiveButtonAriaLabel}
						aria-checked=${e=>e.vm.hasSubmittedOffensiveFeedback}
						@click=${e=>e.handleOffensiveClick()}
					>
						<div class="overflow-menu-icon">
							${when((e=>e.vm.hasSubmittedOffensiveFeedback), html`<svg-icon type=${Yp.FlagFill} size="22"></svg-icon> `)}
							${when((e=>!e.vm.hasSubmittedOffensiveFeedback), html`<svg-icon type=${Yp.Flag} size="22"></svg-icon> `)}
						</div>
						<div class="overflow-menu-text">${e=>e.vm.strings.messageActionsReport}</div>
					</button>
				`)}
		</div>
	`)}
`}
</template>
`;
			let sh = class extends w {
					constructor() {
							super(),
							this.showMore = !1,
							this.hostMouseOverTimerId = null,
							this.focusedMenuItemIndex = 0,
							this.handleMoreKeydown = e=>{
									if (e && !e.defaultPrevented)
											switch (e.key) {
											case "Enter":
											case "Space":
													this.toggleShowMore(),
													!0 === this.showMore && g.queueUpdate((()=>{
															this.moreMenuItems[0].focus()
													}
													));
													break;
											default:
													return !0
											}
							}
							,
							this.handleMenuKeydown = e=>{
									var t, n;
									if (e && !e.defaultPrevented)
											switch (e.key) {
											case "ArrowDown":
													e.preventDefault(),
													this.focusMenuItem(this.focusedMenuItemIndex + 1, 1);
													break;
											case "ArrowUp":
													e.preventDefault(),
													this.focusMenuItem(this.focusedMenuItemIndex - 1, -1);
													break;
											case "End":
													return e.preventDefault(),
													void this.focusMenuItem(this.moreMenuItems.length - 1, -1);
											case "Home":
													return e.preventDefault(),
													void this.focusMenuItem(0, 1);
											case "Escape":
													e.preventDefault(),
													this.hideShowMore(),
													null === (t = this.moreButton) || void 0 === t || t.focus();
													break;
											case "Tab":
											case e.shiftKey && "Tab":
													e.preventDefault(),
													this.hideShowMore(),
													null === (n = this.moreButton) || void 0 === n || n.focus();
													break;
											default:
													return !0
											}
							}
							,
							this.disposer = new Disposer
					}
					connectedCallback() {
							super.connectedCallback(),
							this.shareButton && this.disposer.register(addDisposableListener(this.shareButton, "click", this.handleShareClick.bind(this)))
					}
					disconnectedCallback() {
							super.disconnectedCallback(),
							this.disposer.isDisposed || this.disposer.dispose()
					}
					handleHostMouseEnter() {
							this.hostMouseOverTimerId && (window.clearTimeout(this.hostMouseOverTimerId),
							this.hostMouseOverTimerId = null)
					}
					handleHostMouseLeave() {
							this.hostMouseOverTimerId = window.setTimeout((()=>{
									this.hideShowMore()
							}
							), 1e3)
					}
					async handlePositiveClick() {
							return this.hideShowMore(),
							this.vm.sendFeedbackAsync("Positive", !this.vm.hasSubmittedPositiveFeedback)
					}
					async handleNegativeClick() {
							return this.hideShowMore(),
							this.vm.sendFeedbackAsync("Negative", !this.vm.hasSubmittedNegativeFeedback)
					}
					async handleOffensiveClick() {
							return this.hideShowMore(),
							this.vm.sendFeedbackAsync("Offensive", !this.vm.hasSubmittedOffensiveFeedback)
					}
					toggleShowMore() {
							this.showMore = !this.showMore
					}
					hideShowMore() {
							!1 !== this.showMore && (this.resetMenuItems(),
							this.showMore = !1)
					}
					handleMoreClick() {
							this.toggleShowMore()
					}
					resetMenuItems() {
							if (!this.moreMenuItems)
									return;
							this.moreMenuItems[this.focusedMenuItemIndex].setAttribute("tabindex", "-1"),
							this.moreMenuItems[0].setAttribute("tabindex", "0"),
							this.focusedMenuItemIndex = 0
					}
					focusMenuItem(e, t) {
							if (void 0 !== this.moreMenuItems)
									for (; e >= 0 && e < this.moreMenuItems.length; ) {
											const n = this.moreMenuItems[e];
											if ("menuitem" === n.getAttribute("role")) {
													this.focusedMenuItemIndex > -1 && this.moreMenuItems.length >= this.focusedMenuItemIndex - 1 && this.moreMenuItems[this.focusedMenuItemIndex].setAttribute("tabindex", "-1"),
													this.focusedMenuItemIndex = e,
													n.setAttribute("tabindex", "0"),
													n.focus();
													break
											}
											e += t
									}
					}
					async handleShareClick(e) {
							var t, n, i;
							if (this.hideShowMore(),
							this.messageEl) {
									if (this.shareButton)
											return null === (i = this.vm.log) || void 0 === i || i.trace(this, this.handleShareClick, "Opening share control", {
													serpSlot: this.layout.serpSlot,
													messageEl: this.messageEl
											}).write(),
											this.vm.share(this.layout.serpSlot, this.messageEl, this.shareButton, this.layout.hoverVm);
									null === (n = this.vm.log) || void 0 === n || n.error(this, this.handleShareClick, "ShareButton undefined, ending share early").write()
							} else
									null === (t = this.vm.log) || void 0 === t || t.error(this, this.handleShareClick, "Screenshot target undefined, ending share early").write()
					}
					handleCopyClick() {
							return this.vm.copyToClipboard(this.messageEl)
					}
					getCopyText() {
							switch (this.vm.copyState) {
							case Vc.Idle:
									return this.vm.strings.messageActionsCopy;
							case Vc.Copying:
									return this.vm.strings.messageActionsCopying;
							case Vc.Copied:
									return this.vm.strings.messageActionsCopied;
							case Vc.Error:
									return this.vm.strings.messageActionsCopyError;
							default:
									return this.vm.strings.messageActionsCopy
							}
					}
			}
			;
			__decorate([observable, __metadata("design:type", Boolean)], sh.prototype, "showMore", void 0),
			__decorate([observable, __metadata("design:type", Object)], sh.prototype, "layout", void 0),
			__decorate([observable, __metadata("design:type", Object)], sh.prototype, "messageEl", void 0),
			__decorate([observable, __metadata("design:type", Object)], sh.prototype, "shareButton", void 0),
			__decorate([observable, __metadata("design:type", Object)], sh.prototype, "moreButton", void 0),
			__decorate([observable, __metadata("design:type", Object)], sh.prototype, "moreMenuItems", void 0),
			sh = __decorate([customElement({
					name: "cib-feedback",
					template: oh,
					styles: rh
			}), __metadata("design:paramtypes", [])], sh);
			const ah = css`
:host {
	display: flex;
	flex-direction: row;
	align-items: start;
	height: 24px;
	max-height: 24px;
	padding: 2px;
	margin: -2px;
	overflow: hidden;
}

:host([expanded]) {
	height: unset;
	max-height: unset;
}

div {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	row-gap: 6px;
	margin: 0px;
}

span,
a,
button,
.expand-button {
	margin-right: 6px;
	font-family: ${Up.typography.fonts.text};
	font-size: ${Up.typography.typeRamp.body1.fontSize};
	line-height: 24px;
}

span {
	font-weight: 600;
	left: 1px;
	position: relative;
}

a,
button {
	text-decoration: none;
	display: flex;
	align-items: center;
	justify-content: center;
	border-radius: 4px;
	box-sizing: border-box;
	padding: 0 8px;
	font-weight: 500;
	font-family: ${Up.typography.fonts.text};
	color: ${Gp.colors.brand.solid.denimMinus1};
	background: ${Gp.colors.brand.solid.denimPlus4};
}

a:hover {
	text-decoration: underline;
}

a.wrapped {
	width: 0px;
	margin: 0;
	padding: 0;
	height: 24px;
	pointer-events: none;
	opacity: 0;
}

.expand-button {
	display: flex;
	align-items: center;
	justify-content: center;
	border-radius: 4px;
	box-sizing: border-box;
	padding: 0 8px;
	right: 12px;
	height: 24px;
	margin: 0;
	margin-left: auto;
	border: none;
	cursor: pointer;
	bottom: 8px;
	min-width: max-content;
	font-family: ${Up.typography.fonts.text};
	color: ${Gp.colors.brand.solid.denimMinus1};
	background: ${Gp.colors.brand.solid.denimPlus4};
}

.expand-button-wrapper {
	display: flex;
	height: 100%;
}
`.withBehaviors($p(css`
	.expand-button {
		color: ${Vp.ButtonText};
	}
`))
				, lh = html`
<a
	h="${e=>e.h}"
	href="${e=>e.link}"
	title="${e=>e.title}"
	target="_blank"
	role="listitem"
	@click=${(e,t)=>e.handleLinkClick(t.event)}
	>${e=>e.sourceCaption}</a
>
`
				, ch = html`
<template ?expanded=${e=>e.vm.isExpanded}>
	<div role="list" aria-label=${e=>e.vm.learnMoreText} ${ref("linksDiv")}>
		<span>${e=>e.vm.learnMoreText}</span> ${repeat((e=>e.vm.attributions), lh)}
	</div>
	<div class="expand-button-wrapper">
		${when((e=>e.vm.wrappedCount > 0), html`<button
				class="expand-button"
				type="button"
				aria-label=${e=>e.vm.isExpanded ? e.vm.config.strings.seeLess : e.vm.config.strings.seeMore}
				${ref("expandButton")}
				@click=${e=>e.handleExpandClick()}
			>
				${when((e=>e.vm.isExpanded), html`&mdash;`)}
				${when((e=>!e.vm.isExpanded && e.vm.wrappedCount > 0 && !e.allWrapped), html`+${e=>e.vm.wrappedCount} ${e=>e.vm.config.strings.more}`)}
				${when((e=>!e.vm.isExpanded && e.allWrapped), html`${e=>e.vm.config.strings.clickToView}`)}
			</button>`)}
	</div>
</template>
`;
			let dh = class extends w {
					constructor() {
							super(...arguments),
							this.allWrapped = !1,
							this.resizeObserver = null,
							this.handleExpandClick = ()=>{
									var e, t;
									if (this.vm.isExpanded)
											this.vm.isExpanded = !1,
											this.handleResize();
									else {
											this.vm.isExpanded = !0,
											null === (e = this.linksDiv.querySelector(".wrapped")) || void 0 === e || e.focus();
											for (let e = 1; e < (null === (t = this.linksDiv) || void 0 === t ? void 0 : t.children.length); e++) {
													const t = this.linksDiv.children.item(e);
													t.classList.toggle("wrapped", !1),
													"a" === t.nodeName.toLowerCase() && (t.tabIndex = 0)
											}
									}
							}
							,
							this.handleResize = ()=>{
									this.assignRows()
							}
							,
							this.assignRows = ()=>{
									var e, t;
									if (!this.vm.isExpanded) {
											let n = 0
												, i = 0;
											for (let r = 0; r < this.linksDiv.children.length; r++) {
													const o = null === (e = this.linksDiv) || void 0 === e ? void 0 : e.children[r];
													o.classList.toggle("wrapped", !1),
													"a" === o.nodeName.toLowerCase() && (o.tabIndex = 0);
													const s = o.previousElementSibling;
													(!s || o.offsetLeft <= s.offsetLeft) && n++,
													n > 1 && (o.classList.toggle("wrapped", !0),
													o.tabIndex = -1,
													i++),
													this.vm.wrappedCount = i,
													this.allWrapped = this.vm.wrappedCount === (null === (t = this.linksDiv) || void 0 === t ? void 0 : t.children.length) - 1
											}
									}
							}
					}
					attributionCountChanged() {
							queueMicrotask((()=>this.assignRows()))
					}
					connectedCallback() {
							super.connectedCallback(),
							this.resizeObserver = new ResizeObserver(this.handleResize),
							this.resizeObserver.observe(this),
							this.assignRows()
					}
					disconnectedCallback() {
							var e;
							super.disconnectedCallback(),
							null === (e = this.resizeObserver) || void 0 === e || e.unobserve(this)
					}
			}
			;
			__decorate([attr, __metadata("design:type", Boolean)], dh.prototype, "expanded", void 0),
			__decorate([observable, __metadata("design:type", Object)], dh.prototype, "vm", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], dh.prototype, "allWrapped", void 0),
			__decorate([observable, __metadata("design:type", Number)], dh.prototype, "attributionCount", void 0),
			dh = __decorate([customElement({
					name: "cib-message-attributions",
					template: ch,
					styles: ah
			})], dh);
			class RefParentBehavior {
					constructor(e, t) {
							this.target = e,
							this.parentPropertyName = t
					}
					bind(e, t) {
							t.parent[this.parentPropertyName] = this.target
					}
					unbind() {}
			}
			function refParent(e) {
					return new AttachedBehaviorHTMLDirective("cib-ref-parent",RefParentBehavior,e)
			}
			const ph = css`
:host {
	background: unset;
	padding: unset;
	border-radius: unset;
}

/* DEFAULTS */

:host([serp-slot=${Xc.Pole}]),
:host([serp-slot=${Xc.RightRail}]) {
	display: flex;
	flex-direction: column;
	flex-grow: 1;
}

:host .label {
	display: none;
}

/* SHARED */

:host([shared]) {
	padding: 8px 12px 12px;
	margin: 12px;
	border-radius: 8px;
	background: ${Gp.colors.brand.solid.denimPlus4};
}

:host([shared][serp-slot=${Xc.Creator}]),
:host([shared][serp-slot=${Xc.Pole}]),
:host([shared][serp-slot=${Xc.RightRail}]) {
	margin: 0;
}

:host([shared]) .label {
	display: flex;
	align-items: center;
	gap: 10px;
	font-size: 18px;
	font-weight: 600;
	margin: 10px 4px 14px;
	line-height: 22px;
	color: ${Gp.colors.brand.solid.denim};
	fill: ${Gp.colors.brand.solid.denim};
}

:host([shared]) .message {
	background: white;
	border-radius: 8px;
	padding: 12px;
	box-shadow: ${Gp.shadows.defaults.card};
}
`
				, uh = html`
<template serp-slot=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.serpSlot
			}
			}>
	<div class="label">
		<svg-icon type=${Yp.HugFill} size="18"></svg-icon>
		${e=>e.vm.config.strings.messageSharedContent}
	</div>
	<div class="message">
		<slot></slot>
	</div>
</template>
`;
			let hh = class extends w {
					constructor() {
							super(...arguments),
							this.shared = !1
					}
			}
			;
			__decorate([observable, __metadata("design:type", Object)], hh.prototype, "vm", void 0),
			__decorate([observable, __metadata("design:type", Object)], hh.prototype, "layout", void 0),
			__decorate([attr({
					mode: "boolean"
			}), __metadata("design:type", Boolean)], hh.prototype, "shared", void 0),
			hh = __decorate([customElement({
					name: "cib-shared",
					template: uh,
					styles: ph
			})], hh);
			const mh = css`
:host {
	position: absolute;
	display: flex;
	flex-direction: row;
	align-items: flex-end;
	gap: 6px;
	bottom: -14px;
	right: 16px;
}

/* PILLS */

.pill {
	display: flex;
	justify-content: center;
	align-items: center;
	height: 22px;
	width: 34px;
	border-radius: 12px;
	background: #ffffff;
	border: 0.5px solid rgba(0, 0, 0, 0.1);
	box-shadow: ${Gp.shadows.elevations.elevation4};
}

.pill.offense {
	color: #c80000;
	fill: #c80000;
	background: #e9dce3;
	border-color: rgba(200, 0, 0, 0.5);
}

.pill .icon {
	--size: 20px;
	display: inline-block;
	height: var(--size);
	width: var(--size);
	min-height: var(--size);
	min-width: var(--size);
	user-select: none;
	backface-visibility: hidden;
	transform: translateZ(0);
	background-size: contain;
}
`
				, gh = html`
<template ?offensiveFirst=${e=>e.vm.feedback.shouldOffensiveBeFirst}>
	${html`
${when((e=>e.vm.feedback.hasSelectedFeedback && e.vm.feedback.hasSubmittedOffensiveFeedback), html`
		<div class="pill offense">
			<svg-icon type=${Yp.Offensive} size="18"></svg-icon>
		</div>
	`)}
`} ${html`
${when((e=>e.vm.feedback.hasSubmittedPositiveFeedback || e.vm.feedback.hasSubmittedNegativeFeedback), html`
		<div class="pill">
			${when((e=>e.vm.feedback.hasSubmittedPositiveFeedback), html`<div class="icon" style="background-image: url(${e=>e.positiveIconUrl})"></div>`)}
			${when((e=>e.vm.feedback.hasSubmittedNegativeFeedback), html`<div class="icon" style="background-image: url(${e=>e.negativeIconUrl})"></div>`)}
		</div>
	`)}
`}
</template>
`;
			let _h = class extends w {
					get positiveIconUrl() {
							return this.vm.serp.isDevMode ? "images/assets/icons/thumbs-up.svg" : "https://www.bing.com/cdx/tup.svg"
					}
					get negativeIconUrl() {
							return this.vm.serp.isDevMode ? "images/assets/icons/thumbs-down.svg" : "https://www.bing.com/cdx/tdwn.svg"
					}
			}
			;
			__decorate([observable, __metadata("design:type", Object)], _h.prototype, "vm", void 0),
			_h = __decorate([customElement({
					name: "cib-reactions",
					template: gh,
					styles: mh
			})], _h);
			const fh = html`
${when(((e,t)=>{
					var n;
					return (null === (n = t.parent.layout) || void 0 === n ? void 0 : n.serpSlot) === Xc.None
			}
			), html`<div
		class="hidden"
		aria-live="polite"
		aria-hidden=${(e,t)=>"" === t.parent.getAriaLiveText(e.text)}
	>
		${(e,t)=>`${e.author === ve.User ? e.config.strings.messageSentAriaLabelPrefix : e.config.strings.messageReceivedAriaLabelPrefix}. ${t.parent.getAriaLiveText(e.text)}`}
	</div>`)}
`
				, yh = html`
<div class="hidden" aria-live="polite">${e=>html`${e.metaTextHtml}`}</div>
`
				, vh = html`
<div class="content">${e=>e.fateOverrideTemplate}</div>
${fh}
`
				, bh = html`
<cib-shared ?shared=${e=>e.isShared} :vm=${e=>e} :layout=${(e,t)=>t.parent.layout}>
	<div
		class="content"
		${refParent("contentDiv")}
		@pointerover="${(e,t)=>{
					t.event.target && t.parent.tryTargetHoverCard(t.event.target)
			}
			}"
	>
		${e=>e.adaptiveCardTemplate}
	</div>
</cib-shared>
${fh}
`
				, Sh = html`
<div class="fp-horizontal-separator"></div>
<div class="fp-container">
	<button
		class="fp-button"
		aria-label=${e=>e.config.strings.feedbackPromptGiveFeedbackAriaLabel}
		@click=${(e,t)=>t.parent.handleGiveFeedbackClick(t.event)}
	>
		${e=>e.config.strings.feedbackPromptGiveFeedback}
	</button>
	<div class="fp-vertical-separator"></div>
	<a class="fp-button" target="_blank" href=${e=>e.config.links.reportAConcern}>
		${e=>e.config.strings.feedbackPromptReportAConcern}
	</a>
</div>
`
				, Ch = html`
<cib-shared ?shared=${e=>e.isShared} :vm=${e=>e} :layout=${(e,t)=>t.parent.layout}>
	<div ${refParent("textScreenshotTarget")} class="content text-message-content" aria-hidden="true">
		${e=>e.text}
	</div>
	${fh}
	<slot name="footer"></slot>
	${when((e=>e.feedbackPrompt), Sh)}
</cib-shared>
`
				, Eh = html`
<div class="content">
	<svg-icon type=${Yp.CheckMark} size="28" color="#13A10E"></svg-icon>
	<div class="meta-text">${e=>html`${e.metaTextHtml}`}</div>
	${yh}
</div>
`
				, Th = html`
<cib-card class="card">
	<iframe class="card-frame" src=${e=>e.contentUrl}></iframe>
</cib-card>
`
				, Ih = html`
${when((e=>!e.cancelRender), html`
	<iframe
		style="width:${e=>e.frameWidth};height:${e=>e.frameHeight};"
		class="frame"
		src=${e=>e.contentUrl}
		role="presentation">
	</iframe>
`)}`
				, wh = html`<slot></slot>`
				, Ah = html`
<template
	class="cib-message-main"
	?animate=${e=>e.shouldAnimate}
	?attributions=${e=>e.areAttributionsPresent()}
	?fail=${e=>e.vm.cancelRender}
	?feedback=${e=>e.shouldRenderFeedback && e.vm.feedback.hasSelectedFeedback}
	type=${e=>e.vm.type}
	source=${e=>e.vm.author}
	content=${e=>{
					var t;
					return null === (t = e.vm) || void 0 === t ? void 0 : t.contentType
			}
			}
	serp-slot=${e=>{
					var t, n;
					return null !== (n = null === (t = e.layout) || void 0 === t ? void 0 : t.serpSlot) && void 0 !== n ? n : Xc.None
			}
			}
	?mobile=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.isMobile
			}
			}
	?cached=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.isCachedResponse
			}
			}
	?see-more-covering=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.isSeeMoreCovering
			}
			}
	?see-more-expanded=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.isSeeMoreExpanded
			}
			}
	tabindex=${e=>e.vm.author === ve.User ? 0 : void 0}
>
	${OnceDirective_once((e=>e.vm), (e=>e.getViewTemplate(e.vm)))}
	${when((e=>{
					var t;
					return e.vm.type === sl.Text && e.vm.author === ve.Bot && (null === (t = e.vm.attributions) || void 0 === t ? void 0 : t.length)
			}
			), html`<div class="content attributions">
			<cib-message-attributions
				:vm=${e=>e.vm}
				:attributionCount=${e=>e.vm.attributions.length}
			></cib-message-attributions>
		</div>`)}
	${when((e=>e.shouldRenderFeedback), html`
			<cib-feedback
				:layout=${e=>e.layout}
				:vm=${e=>e.vm.type !== sl.Meta ? e.vm.feedback : null}
				:messageEl=${e=>e.messageEl}
			></cib-feedback>
		`)}
	${when((e=>e.shouldRenderFeedback && e.isTextMessageViewModel(e.vm) && e.vm.feedback.hasSelectedFeedback), html` <cib-reactions :vm=${e=>e.vm}></cib-reactions> `)}
</template>
`;
			let Rh = class extends w {
					constructor() {
							super(...arguments),
							this.shouldAnimate = !0,
							this.handleGiveFeedbackClick = e=>{
									var t, n;
									this.vm.type === sl.Text ? (null === (n = this.vm.telemetry) || void 0 === n || n.trackInteractionEvent(e),
									this.vm.openFeedbackForm()) : null === (t = this.vm.log) || void 0 === t || t.warn(this, this.handleGiveFeedbackClick, "Message type not text but has been clicked").write()
							}
							,
							this.handleReportConcernClick = e=>{
									var t;
									null === (t = this.vm.telemetry) || void 0 === t || t.trackInteractionEvent(e)
							}
							,
							this.handleAnchorMouseDown = e=>{
									e.stopPropagation(),
									this.vm.type === sl.Text && this.vm.telemetry.trackInteractionEvent(e)
							}
					}
					get shouldRenderFeedback() {
							return this.vm.author === ve.Bot && this.vm.type !== sl.Meta && this.vm.type === sl.Text && this.vm.reportable
					}
					get messageEl() {
							return this.contentDiv || this.textScreenshotTarget
					}
					connectedCallback() {
							var e;
							super.connectedCallback(),
							null === (e = this.vm.log) || void 0 === e || e.trace(this, this.connectedCallback, "connected").write(),
							this.shouldAnimate = !0,
							this.disposer = new Disposer,
							this.disposer.register(addDisposableListener(this, "animationend", this.onAnimationEnd)),
							this.vm.isModelFinalized ? this.finalizeRendering() : this.subscribeToViewModelChanges()
					}
					disconnectedCallback() {
							var e, t;
							!1 === (null === (e = this.disposer) || void 0 === e ? void 0 : e.isDisposed) && (this.disposer.dispose(),
							delete this.disposer),
							super.disconnectedCallback(),
							null === (t = this.vm.log) || void 0 === t || t.trace(this, this.disconnectedCallback, "disconnected").write()
					}
					areAttributionsPresent() {
							return !(this.vm.type !== sl.Text || this.vm.author !== ve.Bot || !this.vm.attributions.length)
					}
					getViewTemplate(e) {
							var t, n, i;
							null === (t = e.log) || void 0 === t || t.trace(this, this.getViewTemplate, `type: '${e.type}'; serp-slot: '${null !== (i = null === (n = this.layout) || void 0 === n ? void 0 : n.serpSlot) && void 0 !== i ? i : "none"}'`).write();
							let r = wh;
							switch (e.type) {
							case sl.Text:
									"$$$>SLOTTED<$$$" !== e.text && (r = this.getTextMessageTemplate(e));
									break;
							case sl.Host:
									r = this.getHostMessageTemplate(e);
									break;
							case sl.Meta:
									r = Eh
							}
							return r
					}
					tryTargetHoverCard(e) {
							var t;
							this.vm.isModelFinalized && this.isHoverCardTarget(e) && (null === (t = this.vm.hoverCard) || void 0 === t || t.setTarget(e))
					}
					getAriaLiveText(e) {
							return this.vm.isModelFinalized ? e.replace(/\[\^\d+\^\]/g, "") : ""
					}
					isTextMessageViewModel(e) {
							return this.vm.type === sl.Text
					}
					onAnimationEnd() {
							this.shouldAnimate = !1
					}
					getTextMessageTemplate(e) {
							var t;
							switch (null === (t = e.log) || void 0 === t || t.trace(this, this.getTextMessageTemplate, `text content: ${zc[e.displayMode]}`).write(),
							e.displayMode) {
							case zc.FateOverride:
									return vh;
							case zc.AdaptiveCard:
									return bh;
							case zc.Text:
									return Ch
							}
					}
					getHostMessageTemplate(e) {
							var t;
							switch (null === (t = e.log) || void 0 === t || t.trace(this, this.getHostMessageTemplate, `hosted content: ${e.contentType}`).write(),
							e.contentType) {
							case al.Ads:
							case al.Answer:
									return Ih;
							case al.SemSerp:
									return Th
							}
					}
					subscribeToViewModelChanges() {
							var e, t, n;
							this.subscriberDisposer = new Disposer,
							null === (e = this.disposer) || void 0 === e || e.register((()=>this.disposeSubscriber()));
							const i = {
									handleChange: (e,t)=>{
											e === this.vm && "isModelFinalized" === t && this.vm.isModelFinalized && this.handleViewModelFinalized()
									}
							};
							this.finalizedNotifier = _.getNotifier(this.vm),
							this.finalizedNotifier.subscribe(i),
							null === (t = this.subscriberDisposer) || void 0 === t || t.register((()=>this.finalizedNotifier.unsubscribe(i))),
							null === (n = this.vm.log) || void 0 === n || n.trace(this, this.subscribeToViewModelChanges, "subscribed").write()
					}
					handleViewModelFinalized() {
							var e;
							null === (e = this.vm.log) || void 0 === e || e.trace(this, this.handleViewModelFinalized, "isModelFinalized:", this.vm.isModelFinalized).write(),
							this.finalizeRendering(),
							queueMicrotask((()=>this.disposeSubscriber()))
					}
					disposeSubscriber() {
							var e, t;
							!1 === (null === (e = this.subscriberDisposer) || void 0 === e ? void 0 : e.isDisposed) && (this.subscriberDisposer.dispose(),
							delete this.subscriberDisposer,
							null === (t = this.vm.log) || void 0 === t || t.trace(this, this.disposeSubscriber, "DISPOSED: isModelFinalized subscriber").write())
					}
					finalizeRendering() {
							this.instrumentAdaptiveCardLinks(),
							this.fireMessageTelemetry(),
							this.tryRenderInlineAds(),
							this.vm.config.features.enableUpdateInternalLinksToOpenOnEdge && this.updateInternalLinksToOpenOnEdge()
					}
					updateInternalLinksToOpenOnEdge() {
							var e, t;
							null === (t = null === (e = this.contentDiv) || void 0 === e ? void 0 : e.querySelectorAll("a[h]")) || void 0 === t || t.forEach((e=>{
									if ("A" === e.nodeName && e.hasAttribute("h")) {
											const t = e;
											(t.href.startsWith("https://aka.ms") || t.href.startsWith("https://dev.azure.com")) && (t.href = "microsoft-edge://" + t.href.substring("https://".length))
									}
							}
							))
					}
					instrumentAdaptiveCardLinks() {
							var e, t, n;
							null === (e = this.vm.log) || void 0 === e || e.trace(this, this.instrumentAdaptiveCardLinks, "contentDiv:", this.contentDiv).write(),
							this.vm.telemetry.externalLinkId && (null === (n = null === (t = this.contentDiv) || void 0 === t ? void 0 : t.querySelectorAll("*")) || void 0 === n || n.forEach((e=>{
									if ("A" === e.nodeName && e.hasAttribute("h")) {
											const t = e;
											this.addDisposableMouseDownListener(t)
									}
							}
							)))
					}
					addDisposableMouseDownListener(e) {
							var t;
							null === (t = this.disposer) || void 0 === t || t.register(addDisposableListener(e, "mousedown", this.handleAnchorMouseDown))
					}
					fireMessageTelemetry() {
							var e, t;
							(null === (e = this.layout) || void 0 === e ? void 0 : e.serpSlot) === Xc.None && this.vm.serp.mode === Qc.OffStage || this.vm.author !== ve.Bot || this.vm.type !== sl.Text || this.vm.telemetry.trackEvent("MessageEvent", "BotResponseRender", {
									Namespace: Xc.toTelemetryNamespace(null === (t = this.layout) || void 0 === t ? void 0 : t.serpSlot),
									CustomData: JSON.stringify({
											length: this.vm.text.length,
											learnMoreCnt: this.vm.attributions.length,
											turnId: this.vm.conversation.messages.length - 1,
											convId: this.vm.conversation.id
									})
							})
					}
					tryRenderInlineAds() {
							window.setTimeout((()=>{
									var e;
									if (this.vm.type === sl.Text && null !== this.vm.inlineAds && this.contentDiv) {
											const t = new RemoteContentHostViewHelper(this);
											t.createView(),
											t.bindView(this.vm.inlineAds);
											const n = this.contentDiv.querySelectorAll(".ac-horizontal-separator");
											if (n.length) {
													const e = n.item(n.length - 1);
													t.insertBefore(e)
											}
											null === (e = this.disposer) || void 0 === e || e.register(t)
									}
							}
							), 100)
					}
					isHoverCardTarget(e) {
							const {tooltip: t, citation: n} = this.vm.classNames;
							return function(e) {
									return function(e) {
											return null !== e
									}(e) && void 0 !== e.nodeType
							}(i = e) && "A" === i.nodeName && (e.classList.contains(t) || e.classList.contains(n));
							var i
					}
			}
			;
			__decorate([observable, __metadata("design:type", Object)], Rh.prototype, "vm", void 0),
			__decorate([observable, __metadata("design:type", Object)], Rh.prototype, "layout", void 0),
			__decorate([observable, __metadata("design:type", HTMLDivElement)], Rh.prototype, "contentDiv", void 0),
			__decorate([observable, __metadata("design:type", HTMLDivElement)], Rh.prototype, "textScreenshotTarget", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Rh.prototype, "shouldAnimate", void 0),
			Rh = __decorate([customElement({
					name: "cib-message",
					template: Ah,
					styles: Yu
			})], Rh);
			const xh = html`
${when((e=>{
					var t;
					return null === (t = e.shoppingPdpRenderData) || void 0 === t ? void 0 : t.groundingTextVm
			}
			), html`
		<cib-message :vm=${e=>e.shoppingPdpRenderData.groundingTextVm} :layout=${e=>e.layout}></cib-message>
	`)}
<cib-message :vm=${e=>e.shoppingPdpRenderData.emptyVm} :layout=${e=>e.layout} type="host" content="answer">
	${OnceDirective_once((e=>e.shoppingPdpRenderData.contentHostData), Wu)}
</cib-message>
`
				, Oh = html`
<cib-message :vm=${e=>e} :layout=${(e,t)=>t.parent.layout}></cib-message>
${when((e=>e.type === sl.Host && e.contentType === al.Answer && e.shoppingPdpRenderData), xh)}
`
				, Nh = html`
${when((e=>e.vm.showSerpSlotMetaMessage), html`${OnceDirective_once((e=>e.vm.serpSlotLastMetaMessage), Oh)}`)}
${when((e=>e.vm.serpSlotFirstTextMessage), html`${OnceDirective_once((e=>e.vm.serpSlotFirstTextMessage), Oh)}`)}
`
				, Ph = html`
${repeat((e=>e.vm.messages), Oh, {
					recycle: !1
			})}
`
				, Dh = html`
<template
	?expanded=${e=>e.vm.isExpanded}
	source=${e=>e.vm.source}
	?mobile=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.isMobile
			}
			}
	serp-slot=${e=>{
					var t;
					return null !== (t = e.layout.serpSlot) && void 0 !== t ? t : Xc.None
			}
			}
>
	${when((e=>{
					var t;
					return 0 === (null === (t = e.slotContents) || void 0 === t ? void 0 : t.length)
			}
			), html`
			${when((e=>e.layout.serpSlot !== Xc.None), Nh)}
			${when((e=>e.layout.serpSlot === Xc.None), Ph)}
		`)}
	<slot ${slotted("slotContents")}> </slot>
</template>
`;
			let Mh = class extends w {
					constructor() {
							super(...arguments),
							this.expanded = !1,
							this.source = ve.User
					}
			}
			;
			__decorate([observable, __metadata("design:type", Object)], Mh.prototype, "vm", void 0),
			__decorate([attr({
					mode: "boolean"
			}), __metadata("design:type", Boolean)], Mh.prototype, "expanded", void 0),
			__decorate([attr, __metadata("design:type", String)], Mh.prototype, "source", void 0),
			__decorate([observable, __metadata("design:type", Object)], Mh.prototype, "layout", void 0),
			__decorate([observable, __metadata("design:type", Array)], Mh.prototype, "slotContents", void 0),
			Mh = __decorate([customElement({
					name: "cib-message-group",
					template: Dh,
					styles: ju
			})], Mh);
			const Lh = html`
<template ?expanded=${e=>e.vm.isExpanded} serp-slot=${e=>{
					var t;
					return null !== (t = e.layout.serpSlot) && void 0 !== t ? t : Xc.None
			}
			}>
	${when((e=>{
					var t;
					return 0 === (null === (t = e.slotContents) || void 0 === t ? void 0 : t.length)
			}
			), html` ${when((e=>e.vm.user.messageCount > 0), html`<cib-message-group :vm=${e=>e.vm.user} :layout=${e=>e.layout}></cib-message-group>`)}
		${when((e=>e.vm.bot.messageCount > 0), html`<cib-message-group
				class="response-message-group"
				:vm=${e=>e.vm.bot}
				:layout=${e=>e.layout}
			></cib-message-group>`)}`)}
	<slot ${slotted("slotContents")}> </slot>
</template>
`;
			let kh = class extends w {
			}
			;
			__decorate([observable, __metadata("design:type", Object)], kh.prototype, "vm", void 0),
			__decorate([observable, __metadata("design:type", Object)], kh.prototype, "layout", void 0),
			__decorate([observable, __metadata("design:type", Array)], kh.prototype, "slotContents", void 0),
			kh = __decorate([customElement({
					name: "cib-chat-turn",
					template: Lh,
					styles: qu
			})], kh);
			const Fh = css`
:host {
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: flex-end;
	column-gap: 8px;
	row-gap: 100%;
	height: 32px;
	min-height: 32px;
	padding: 24px 32px 16px;
	margin-bottom: 8px;
}

.suggestion-items {
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: center;
	flex-flow: wrap;
	column-gap: 8px;
	row-gap: 100%;
	order: 1;
	height: 34px;
	padding-left: 2px;
	overflow-y: hidden;
}

:host(:not([serp-slot=${Xc.RightRail}])) .suggestion-item.wrapped {
	display: none;
}

/* RAI BUTTON */
.rai-button {
	background: none;
	border: none;
	padding: 0;
	cursor: pointer;
}

.rai-button svg-icon {
	width: 26px;
	height: 26px;
	fill: ${Gp.colors.brand.solid.denimMinus1};
}

.rai-button:hover {
	box-shadow: none;
}

/* CHAT BUTTON */

.chat-button {
	display: none;
	align-items: center;
	justify-content: center;
	gap: 6px;
	order: 1;
	height: 34px;
	min-width: fit-content;
	color: #ffffff;
	fill: #ffffff;
	border-radius: 20px;
	border: none;
	outline: 1px solid transparent;
	margin: 0px;
	padding: 7px 16px 7px 12px;
	cursor: pointer;
	font-family: ${Up.typography.fonts.text};
	font-size: ${Up.typography.typeRamp.body1Strong.fontSize};
	font-weight: ${Up.typography.typeRamp.body1Strong.fontWeight};
	font-weight: 500;
	font-variation-settings: ${Up.typography.typeRamp.body1Strong.fontVariationSettings};
	background: ${Gp.colors.brand.gradient.core};
}

.chat-button:focus-visible {
	outline: 2px solid black;
}

/* SERP SLOT */

:host([serp-slot=${Xc.Creator}]),
:host([serp-slot=${Xc.Pole}]),
:host([serp-slot=${Xc.RightRail}]) {
	margin-top: 26px;
	border-top: 1px solid #dddddd;
	padding: 16px 16px 8px;
}

:host([serp-slot=${Xc.Creator}][visible="false"]),
:host([serp-slot=${Xc.Pole}][visible="false"]),
:host([serp-slot=${Xc.RightRail}][visible="false"]) {
	margin: 0;
	padding: 0;
	height: 24px;
	min-height: 0px;
	opacity: 0;
	pointer-events: none;
}

:host([serp-slot=${Xc.Creator}]),
:host([serp-slot=${Xc.Pole}]) {
	justify-content: center;
}

:host([serp-slot=${Xc.RightRail}]) {
	height: unset;
	overflow: visible;
	flex-flow: wrap;
	justify-content: flex-start;
	gap: 8px;
}

:host([serp-slot=${Xc.RightRail}])::-webkit-scrollbar {
	display: none;
}

:host([serp-slot=${Xc.RightRail}]) .suggestion-items {
	display: contents;
}

:host([serp-slot=${Xc.Creator}]) .chat-button,
:host([serp-slot=${Xc.Pole}]) .chat-button,
:host([serp-slot=${Xc.RightRail}]) .chat-button {
	display: flex;
}

/* MOBILE */

:host([mobile]) {
	flex-flow: unset;
	justify-content: flex-start;
	overflow-y: hidden;
	overflow-x: overlay;
	scroll-snap-type: x mandatory;
	-webkit-overflow-scrolling: touch;
	height: 32px;
}

:host([mobile])::-webkit-scrollbar {
	display: none;
}

/* HOVER */

@media (hover: hover) {
	button:hover {
		box-shadow: ${Gp.shadows.defaults.cardRaised};
	}
}

button:active {
	box-shadow: unset;
}

/* MEDIA QUERIES */

@media (max-width: 767px) {
	:host {
		padding-left: 16px;
		padding-right: 16px;
		flex-flow: wrap;
		gap: 8px;
		height: unset;
	}

	:host .suggestion-items {
		display: contents;
	}
}

@media (max-width: 600px) {
	:host([serp-slot=${Xc.Pole}]) {
		justify-content: flex-start;
	}
}

/* PRODUCT TYPE */

:host([product-type=${Dd.Shoreline}]) {
	margin-bottom: 0;
	padding-bottom: 8px;
}
`.withBehaviors($p(css`
	.chat-button {
		forced-color-adjust: none;
		color: ${Vp.ButtonFace};
		background: ${Vp.ButtonText};
	}

	.chat-button:focus-visible {
		color: ${Vp.HighlightText};
		background: ${Vp.Highlight};
		outline: 2px solid ${Vp.Highlight};
	}
`))
				, Bh = css`
:host {
	order: 1;
	max-width: -webkit-fill-available;
}

:host([mobile]) {
	min-width: max-content;
	max-width: unset;
}

.container {
	height: 30px;
	min-width: max-content;
	background: rgba(255, 255, 255, 0.7);
	border-radius: 8px;
	overflow: hidden;
	box-sizing: border-box;
	padding: 0 12px;
	margin: 1px;
	cursor: pointer;
	line-height: 28px;
	border: 1px solid ${Gp.colors.brand.solid.denim};
	color: ${Gp.colors.brand.solid.denim};
	font-family: ${Up.typography.fonts.text};
	font-size: ${Up.typography.typeRamp.body1Strong.fontSize};
	font-weight: ${Up.typography.typeRamp.body1Strong.fontWeight};
	font-weight: 500;
	font-variation-settings: ${Up.typography.typeRamp.body1Strong.fontVariationSettings};
}

.container[primary] {
	height: 40px;
	color: #fff;
	background: ${Gp.colors.brand.gradient.core};
	border: none;
}

.container:hover,
.container:focus {
	background: ${Gp.colors.brand.solid.denimPlus5};
}

.container:active,
.container.touch-active {
	color: ${Gp.colors.brand.solid.denimMinus2};
	background: ${Gp.colors.brand.solid.denimPlus4};
}

.container:not([mobile]) {
	width: min-content;
	min-width: unset;
	text-overflow: ellipsis;
	white-space: nowrap;
	max-width: 100%;
}

@media (max-width: 767px) {
	.container {
		width: fit-content;
	}
}
`.withBehaviors($p(css`
	.container {
		color: ${Vp.ButtonText};
		outline-color: ${Vp.ButtonText};
	}

	.container:hover,
	.container:focus-visible {
		forced-color-adjust: none;
		background: ${Vp.Highlight};
		color: ${Vp.HighlightText};
		border-color: ${Vp.Highlight};
		outline-color: ${Vp.Highlight};
	}
`))
				, Gh = html`
<button class="container" type="button" serp-slot=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.serpSlot
			}
			} ?mobile=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.isMobile
			}
			}>
	<slot></slot>
	${e=>{
					var t;
					return null === (t = e.suggestion) || void 0 === t ? void 0 : t.text
			}
			}
</button>
`;
			let Uh = class extends w {
					constructor() {
							super(...arguments),
							this.isPrimary = !1
					}
					connectedCallback() {
							super.connectedCallback(),
							this.addEventListener("touchstart", this.onTouchStart),
							this.addEventListener("touchend", this.onTouchEnd),
							this.addEventListener("touchmove", this.onTouchMove)
					}
					disconnectedCallback() {
							super.disconnectedCallback(),
							this.removeEventListener("touchstart", this.onTouchStart),
							this.removeEventListener("touchend", this.onTouchEnd),
							this.removeEventListener("touchmove", this.onTouchMove)
					}
					onTouchStart() {
							this.classList.toggle("touch-active", !0)
					}
					onTouchMove() {
							this.classList.toggle("touch-active", !1)
					}
					onTouchEnd() {
							this.classList.toggle("touch-active", !1)
					}
			}
			;
			__decorate([attr({
					attribute: "primary",
					mode: "boolean"
			}), __metadata("design:type", Boolean)], Uh.prototype, "isPrimary", void 0),
			__decorate([observable, __metadata("design:type", Object)], Uh.prototype, "suggestion", void 0),
			__decorate([observable, __metadata("design:type", Object)], Uh.prototype, "layout", void 0),
			Uh = __decorate([customElement({
					name: "cib-suggestion-item",
					template: Gh,
					styles: Bh
			})], Uh);
			const zh = html`
<cib-suggestion-item
	class="suggestion-item"
	@click=${(e,t)=>t.parent.handleSuggestionClick(t.event)}
	:suggestion=${e=>e}
	:layout=${(e,t)=>t.parent.layout}
	?mobile=${(e,t)=>{
					var n;
					return null === (n = t.parent.layout) || void 0 === n ? void 0 : n.isMobile
			}
			}
>
</cib-suggestion-item>
`
				, $h = html`
<button
	@click=${e=>e.handleChatButtonClick()}
	class="chat-button"
	type="button"
	aria-label=${e=>e.vm.strings.letsChatButton}
>
	<svg-icon type=${Yp.Chat} size="20"></svg-icon>
	<span>${e=>e.vm.strings.letsChatButton}</span>
</button>
`
				, Vh = html`
<button
	@click=${(e,t)=>e.handleQuestionClick(t.event)}
	class="rai-button"
	type="button"
	aria-label=${e=>e.vm.strings.raiSuggestionsButtonAriaLabel}
>
	${when((e=>!e.vm.shouldShowRAISuggestions), html`<svg-icon type=${Yp.ChatHelp} size="24"></svg-icon>`)}
	${when((e=>e.vm.shouldShowRAISuggestions), html`<svg-icon type=${Yp.ChatDismissFill} size="24"></svg-icon>`)}
</button>
`
				, Hh = html`
${repeat((e=>e.freSuggestions), zh, {
					recycle: !1
			})}
`
				, qh = html`
<template
	?mobile=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.isMobile
			}
			}
	serp-slot=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.serpSlot
			}
			}
	product-type=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.productType
			}
			}
	?see-more-covering=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.isSeeMoreCovering
			}
			}
	?see-more-expanded=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.isSeeMoreExpanded
			}
			}
>
	<div class="suggestion-items" ${ref("suggestionItemsRef")}>
		${when((e=>e.suggestions.length > 0 && e.shouldShowRaiIcon), Vh)}
		${when((e=>!e.vm.shouldShowRAISuggestions && e.suggestions.length > 0), Hh)}
		${repeat((e=>e.suggestions), zh, {
					recycle: !1
			})}
	</div>
	${when((e=>e.visible), $h)}
</template>
`;
			let jh = class extends w {
					constructor() {
							super(...arguments),
							this.visible = !1,
							this.shouldShowRaiIcon = !0,
							this.suggestionArray = [],
							this.resizeObserver = null,
							this._renderedSuggestions = null,
							this.onResize = ()=>{
									this.assignRows()
							}
							,
							this.assignRows = ()=>{
									let e = 0;
									for (let t = 0; t < this.suggestionItemsRef.children.length; t++) {
											const n = this.suggestionItemsRef.children[t];
											n.classList.toggle("wrapped", !1);
											const i = n.previousElementSibling;
											(!i || n.offsetLeft < i.offsetLeft) && e++,
											n.classList.toggle("wrapped", e > 1)
									}
							}
							,
							this.handleSuggestionClick = e=>{
									var t;
									const n = e.target;
									return this.vm.closeRAISuggestions(),
									this.vm.clearFreSuggesitons(),
									this.vm.telemetry.trackEvent("InteractionEvent", "SuggestionChipClick", {
											Namespace: Xc.toTelemetryNamespace(null === (t = this.layout) || void 0 === t ? void 0 : t.serpSlot),
											CustomData: JSON.stringify({
													text: n.suggestion.text,
													turnId: this.vm.turnCount,
													position: this.vm.suggestions.indexOf(n.suggestion),
													convId: this.vm.convId
											})
									}),
									this.vm.telemetry.trackInteractionEvent(e),
									this.vm.serp.invokeSuggestion(n.suggestion),
									!0
							}
							,
							this.handleChatButtonClick = ()=>{
									this.vm.serp.invokeSuggestion(null)
							}
					}
					connectedCallback() {
							super.connectedCallback(),
							this.resizeObserver = new ResizeObserver(this.onResize),
							this.resizeObserver.observe(this.suggestionItemsRef),
							this.assignRows()
					}
					disconnectedCallback() {
							var e;
							super.disconnectedCallback(),
							null === (e = this.resizeObserver) || void 0 === e || e.unobserve(this.suggestionItemsRef)
					}
					get suggestions() {
							var e, t;
							if (this.shouldShowRaiIcon = !0,
							this.vm.shouldShowRAISuggestions)
									return this.vm.raiSuggestions;
							if (this.$fastController.isConnected) {
									if (this._serpSlotSuggestions && this.layout && this.layout.serpSlot !== Xc.None)
											return this._serpSlotSuggestions;
									if (this.visible = !1,
									!this.vm.isRequestPending) {
											if (this.vm.suggestions.length > 0)
													return this.visible = !0,
													this._serpSlotSuggestions || (this._serpSlotSuggestions = this.vm.suggestions.slice()),
													this._renderedSuggestions === this.vm.suggestions || (null === (e = this.layout) || void 0 === e ? void 0 : e.serpSlot) === Xc.None && this.vm.serp.mode === Qc.OffStage || (this.vm.telemetry.trackEvent("SystemEvent", "SuggestionChipRender", {
															Namespace: Xc.toTelemetryNamespace(null === (t = this.layout) || void 0 === t ? void 0 : t.serpSlot),
															CustomData: JSON.stringify({
																	chips: this.vm.suggestions.map((e=>e.text)),
																	turnId: this.vm.turnCount,
																	convId: this.vm.convId
															})
													}),
													this._renderedSuggestions = this.vm.suggestions),
													this.vm.suggestions;
											if (!this.vm.shouldShowRAISuggestions)
													return this.shouldShowRaiIcon = !1,
													this.vm.raiSuggestions
									}
							}
							return this.suggestionArray
					}
					async handleQuestionClick(e) {
							this.vm.telemetry.trackEvent("InteractionEvent", "QuestionClick"),
							this.vm.telemetry.trackInteractionEvent(e),
							this.vm.shouldShowRAISuggestions ? this.vm.closeRAISuggestions() : this.vm.openRAISuggestions()
					}
					get freSuggestions() {
							return this.vm.freSuggestions
					}
			}
			;
			__decorate([observable, __metadata("design:type", Object)], jh.prototype, "vm", void 0),
			__decorate([attr, __metadata("design:type", Boolean)], jh.prototype, "visible", void 0),
			__decorate([observable, __metadata("design:type", Object)], jh.prototype, "layout", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], jh.prototype, "shouldShowRaiIcon", void 0),
			__decorate([observable_volatile, __metadata("design:type", Array), __metadata("design:paramtypes", [])], jh.prototype, "suggestions", null),
			__decorate([observable_volatile, __metadata("design:type", Array), __metadata("design:paramtypes", [])], jh.prototype, "freSuggestions", null),
			jh = __decorate([customElement({
					name: "cib-suggestion-bar",
					template: qh,
					styles: Fh
			})], jh);
			const Wh = css`
:host {
	display: flex;
	flex: 1;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	column-gap: 8px;
	padding: 24px 0;
}

.learn-tog-item {
	font-style: normal;
	font-weight: 400;
	color: #2b2b2b;
	text-align: center;
	padding: 50px 50px 35px;
	max-width: 70vh;
	font-family: ${Up.typography.fonts.text};
	font-size: ${Up.typography.typeRamp.message.fontSize};
	line-height: ${Up.typography.typeRamp.message.lineHeight};
}

.feedback-form {
	color: #1a0dab;
	cursor: pointer;
}

.container-logo {
	display: flex;
	align-items: center;
	margin-bottom: 40px;
}

.container-item {
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 16px;
}

.container-title {
	font-weight: 600;
	text-align: center;
	color: #111111;
	margin-bottom: 8px;
	font-size: 36px;
	font-family: ${Up.typography.fonts.text};
}

.container-subTitle {
	font-weight: 400;
	margin-bottom: 4vh;
	font-size: ${Up.typography.typeRamp.message.fontSize};
	line-height: ${Up.typography.typeRamp.subtitle1.lineHeight};
	text-align: center;
	font-family: ${Up.typography.fonts.text};
}

.privacy-statement {
	display: flex;
	flex-direction: row;
	margin-top: 20px;
}

.privacy-statement a {
	padding: 2px 8px;
	font-style: normal;
	text-decoration: none;
	color: ${Gp.colors.brand.solid.denimMinus1};
	font-variation-settings: ${Up.typography.typeRamp.caption1.fontVariationSettings};
	font-size: ${Up.typography.typeRamp.caption1.fontSize};
	line-height: ${Up.typography.typeRamp.caption1.lineHeight};
}

.privacy-statement a:hover,
.privacy-statement a:active {
	text-decoration: underline;
}

.privacy-statement .privacy {
	border-left: 1px solid rgb(55, 55, 55);
}

/* MEDIA QUERIES */

@media (max-width: 767px) {
	.container-item {
		flex-direction: column;
	}

	.container-title {
		font-size: ${Up.typography.typeRamp.title1.fontSize};
		line-height: ${Up.typography.typeRamp.title1.lineHeight};
	}

	.welcome-container-subTitle {
		font-weight: 500;
		margin-bottom: 5vh;
		font-size: ${Up.typography.typeRamp.subtitle1.fontSize};
		line-height: ${Up.typography.typeRamp.subtitle1.lineHeight};
		text-align: center;
	}
}

:host([product=${Dd.Shoreline}]) .container-title {
	font-size: ${Up.typography.typeRamp.subtitle1.fontSize};
	line-height: ${Up.typography.typeRamp.title2.lineHeight};
	font-weight: 500;
}

:host([product=${Dd.Shoreline}]) .container-subTitle {
	font-size: ${Up.typography.typeRamp.subtitle2.fontSize};
}

:host([product=${Dd.Shoreline}]) {
	align-items: flex-start;
	justify-content: left;
	margin-bottom: 5vh;
}

.welcome-suggestion {
	flex-direction: column;
	display: flex;
	align-items: center;
	row-gap: 8px;
}

/* MOBILE */

.mobile-container {
	display: flex;
	flex-direction: column;
	align-items: center;
	text-align: center;
}

.mobile-container .container-logo {
	margin-bottom: 0;
}

.mobile-title {
	font-size: ${Up.typography.typeRamp.subtitle1.fontSize};
	line-height: ${Up.typography.typeRamp.subtitle2.lineHeight};
	font-weight: 600;
	margin: 4vh 0;
}

.mobile-subTitle {
	font-weight: 400;
	margin: 0 8vw 4vh;
	font-size: ${Up.typography.typeRamp.body2.fontSize};
	line-height: ${Up.typography.typeRamp.body2.lineHeight};
}
`
				, Yh = css`
:host {
	flex-grow: 1;
	flex-basis: 0;
	height: 100%;
}

.container {
	display: flex;
	flex-direction: column;
	align-items: center;
	height: 100%;
	gap: 8px;
	background: transparent;
	border: none;
	font-family: ${Up.typography.fonts.text};
}

:host([product=${Dd.Shoreline}]) .container {
	align-items: flex-start;
	background: white;
	border: 1.5px solid transparent;
	border-radius: 6px;
	box-shadow: rgb(0 0 0 / 10%) 0px 2px 4px;
	width: 100%;
}

:host([product=${Dd.Shoreline}]) .container:hover {
	border: 1.5px solid #174ae4;
}

:host([product=${Dd.Shoreline}]) .item-body {
	color: #174ae4;
}

.container:focus,
.container:focus-visible {
	border: none;
	outline: none;
}

.container:focus-visible .item-content {
	outline: 2px solid #000;
}

.item-title {
	display: flex;
	align-items: center;
	justify-content: center;
	text-align: center;
	font-weight: 500;
	min-height: 52px;
	color: rgb(32, 32, 32);
	font-size: ${Up.typography.typeRamp.message.fontSize};
	line-height: ${Up.typography.typeRamp.subtitle1.lineHeight};
	font-family: ${Up.typography.fonts.text};
}

:host([product=${Dd.Shoreline}]) .item-title {
	padding-left: 20px;
}

.item-content {
	display: flex;
	align-items: center;
	gap: 4px;
	position: relative;
	height: 100%;
	background: rgba(255, 255, 255, 0.6);
	border-radius: 6px;
	text-align: left;
	outline: 1px solid transparent;
	padding: 20px;
	cursor: pointer;
}

.item-content::before {
	content: "";
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	z-index: -1;
	opacity: 0;
	background: rgba(255, 255, 255, 0.6);
	border-radius: 6px;
	transition-property: opacity;
	transition-duration: ${Bp.motion.duration.fast};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
	box-shadow: ${Gp.shadows.defaults.card};
}

.item-body {
	font-weight: 400;
	color: #1b1b1b;
	align-items: center;
	display: flex;
	font-size: ${Up.typography.typeRamp.subtitle2.fontSize};
	line-height: ${Up.typography.typeRamp.message.lineHeight};
	font-family: ${Up.typography.fonts.text};
}

.item-button {
	height: 24px;
	width: 24px;
	color: #1b1b1b;
	fill: #1b1b1b;
}

.container:hover .item-button,
.container:focus .item-button,
.container:focus-visible .item-button {
	color: ${Gp.colors.brand.solid.denim};
	fill: ${Gp.colors.brand.solid.denim};
}

:host .item-content:hover::before,
:host .container:focus-visible .item-content::before {
	opacity: 1;
}

/* MEDIA QUERIES */

@media (max-width: 767px) {
	:host {
		width: 100%;
	}

	.container {
		gap: 4px;
	}

	.item-title {
		min-height: 44px;
		font-weight: 500;
		font-size: ${Up.typography.typeRamp.subtitle2.fontSize};
		line-height: ${Up.typography.typeRamp.subtitle2.lineHeight};
	}

	:host([product=${Dd.Shoreline}]) .item-title {
		padding-left: 16px;
	}

	.item-body {
		font-size: ${Up.typography.typeRamp.body2.fontSize};
		line-height: ${Up.typography.typeRamp.body2.lineHeight};
	}

	.item-content {
		padding: 16px;
		min-height: 4vh;
	}
}

:host([product=${Dd.Shoreline}]) .item-content {
	padding-top: 0;
}
`.withBehaviors($p(css`
	:host .container[disabled],
	:host .container[disabled] .item-title,
	:host .container[disabled] .item-body {
		color: ${Vp.CanvasText};
	}

	:host .item-content:hover,
	:host .container:focus-visible .item-content {
		background: ${Vp.Highlight};
		outline-color: ${Vp.Highlight};
	}

	:host .item-content:hover .item-body,
	:host .container:focus-visible .item-body {
		forced-color-adjust: none;
		color: ${Vp.HighlightText};
	}
`))
				, Kh = html`
<button class="container" type="button">
	<div class="item-title">${e=>e.header}</div>
	<div class="item-content">${html`
<div class="item-body">"${e=>e.body}"</div>
`}</div>
</button>
`;
			let Qh = class extends w {
			}
			;
			var Zh;
			__decorate([observable, __metadata("design:type", String)], Qh.prototype, "header", void 0),
			__decorate([observable, __metadata("design:type", String)], Qh.prototype, "body", void 0),
			__decorate([attr, __metadata("design:type", String)], Qh.prototype, "product", void 0),
			Qh = __decorate([customElement({
					name: "cib-welcome-item",
					template: Kh,
					styles: Yh
			})], Qh),
			function(e) {
					e.CibLogo12 = "cib-logo-12",
					e.CibLogo16 = "cib-logo-16",
					e.CibLogo20 = "cib-logo-20",
					e.CibLogo24 = "cib-logo-24",
					e.CibLogo32 = "cib-logo-32",
					e.CibLogo36 = "cib-logo-36",
					e.CibLogo40 = "cib-logo-40",
					e.CibLogo48 = "cib-logo-48",
					e.CibLogo56 = "cib-logo-56",
					e.CibLogoWithBubble12 = "cib-logo-with-bubble-12",
					e.CibLogoWithBubble16 = "cib-logo-with-bubble-16",
					e.CibLogoWithBubble20 = "cib-logo-with-bubble-20",
					e.CibLogoWithBubble24 = "cib-logo-with-bubble-24",
					e.CibLogoWithBubble32 = "cib-logo-with-bubble-32",
					e.CibLogoWithBubble36 = "cib-logo-with-bubble-36",
					e.CibLogoWithBubble40 = "cib-logo-with-bubble-40",
					e.CibLogoWithBubble48 = "cib-logo-with-bubble-48",
					e.CibLogoWithBubble56 = "cib-logo-with-bubble-56"
			}(Zh || (Zh = {}));
			const Xh = css`
:host {
	--icon-size: 32px;
	display: flex;
	align-items: center;
	justify-items: center;
	position: relative;
	height: var(--icon-size);
	width: var(--icon-size);
}

.icon {
	display: flex;
}
`
				, Jh = html` ${e=>html` <div class="icon">${e.svg}</div>`} `;
			class CibLogoIcons {
					constructor() {}
			}
			CibLogoIcons.CibLogo12 = '<svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g clip-path="url(#clip0_36_2231)">\n  <path d="M9.99959 7.71144C9.99959 7.82833 9.99326 7.94455 9.98059 8.05909C9.90526 8.75774 9.60393 9.3895 9.15026 9.87812C9.20743 9.81441 9.25893 9.74602 9.3041 9.67278C9.33893 9.61709 9.36993 9.55907 9.3961 9.49853C9.4056 9.47863 9.41426 9.4579 9.42143 9.43733C9.4301 9.41743 9.43726 9.3967 9.4436 9.37613C9.45076 9.35706 9.4571 9.33716 9.4626 9.31726C9.4681 9.29653 9.47376 9.27596 9.47843 9.25523C9.47926 9.25289 9.4801 9.25038 9.48076 9.24803C9.4856 9.2273 9.48943 9.20673 9.49343 9.186C9.49743 9.16459 9.50143 9.14302 9.5046 9.12162C9.5046 9.12078 9.5046 9.12078 9.5046 9.12011C9.50776 9.10021 9.5101 9.08031 9.51176 9.05958C9.5166 9.01259 9.51893 8.96577 9.51893 8.91794C9.51893 8.64905 9.4451 8.39671 9.31593 8.182C9.2866 8.13183 9.2541 8.08418 9.21843 8.03886C9.17643 7.98468 9.13126 7.93385 9.0821 7.88686C8.95993 7.7683 8.81727 7.67114 8.65943 7.60275C8.59127 7.57248 8.51993 7.5479 8.44694 7.5295C8.4461 7.5295 8.4446 7.52867 8.44377 7.52867L8.41844 7.51997L8.04894 7.39272V7.39188L7.08228 7.05844C7.07911 7.05761 7.07511 7.05761 7.07278 7.05694L7.01244 7.0347C6.81811 6.95828 6.65711 6.81514 6.55645 6.63286L6.20361 5.7297L5.79912 4.69528L5.72145 4.49561L5.70162 4.45498C5.67945 4.4008 5.66745 4.34194 5.66745 4.28073C5.66745 4.26485 5.66745 4.24896 5.66912 4.23458C5.69212 4.00699 5.88478 3.82874 6.11795 3.82874C6.17978 3.82874 6.23928 3.84144 6.29328 3.86452L8.0946 4.79126L8.44994 4.97353C8.63793 5.08574 8.8131 5.21784 8.97327 5.36667C9.55376 5.90144 9.93443 6.65092 9.99159 7.48887C9.99643 7.56278 9.99959 7.63669 9.99959 7.71144Z" fill="url(#paint0_linear_36_2231)"/>\n  <path d="M9.51822 8.9177C9.51822 9.01 9.50955 9.09913 9.49355 9.18592C9.48872 9.209 9.48405 9.23207 9.47855 9.25515C9.46822 9.29645 9.45722 9.33625 9.44372 9.37605C9.43655 9.39679 9.42939 9.41735 9.42155 9.43725C9.41355 9.45799 9.40489 9.47789 9.39622 9.49846C9.37005 9.55899 9.33905 9.61702 9.30422 9.6727C9.25905 9.74594 9.20739 9.81434 9.15039 9.87805C8.88789 10.1693 7.99639 10.6887 7.66789 10.8998L6.93857 11.3469C6.40423 11.6773 5.8989 11.9111 5.26207 11.927C5.23191 11.9278 5.20257 11.9287 5.17324 11.9287C5.13208 11.9287 5.09158 11.9278 5.05108 11.9263C3.97258 11.885 3.03192 11.3041 2.48959 10.4456C2.24142 10.0533 2.07726 9.60297 2.02176 9.1192C2.13826 9.78039 2.71259 10.2817 3.40492 10.2817C3.64758 10.2817 3.87525 10.2205 4.07425 10.1122C4.07575 10.1113 4.07741 10.1105 4.07908 10.1098L4.15041 10.0668L4.44075 9.89494L4.81024 9.67538V9.66501L4.85791 9.63641L8.16423 7.67107L8.41872 7.5199L8.44406 7.52859C8.44489 7.52859 8.44639 7.52943 8.44722 7.52943C8.52022 7.54766 8.59156 7.57241 8.65972 7.60267C8.81755 7.67107 8.96022 7.76822 9.08239 7.88678C9.13155 7.93377 9.17672 7.9846 9.21872 8.03878C9.25439 8.0841 9.28689 8.13193 9.31622 8.18193C9.44439 8.39647 9.51822 8.64881 9.51822 8.9177Z" fill="url(#paint1_linear_36_2231)"/>\n  <path d="M4.81109 2.35883L4.80992 9.67508L4.44042 9.89481L4.14992 10.0665L4.07842 10.11C4.07726 10.11 4.07509 10.1112 4.07409 10.1122C3.87476 10.2199 3.64709 10.2819 3.40426 10.2819C2.71177 10.2819 2.13844 9.7806 2.02127 9.11941C2.01577 9.08897 2.0116 9.05737 2.00827 9.02694C2.00394 8.96924 2.00077 8.91272 1.9996 8.85503V0.621068C1.9996 0.361206 2.20994 0.14917 2.46993 0.14917C2.56743 0.14917 2.65843 0.179604 2.73327 0.229603L4.17142 1.1724C4.17909 1.17892 4.18759 1.18444 4.19642 1.18979C4.56825 1.4443 4.81109 1.87272 4.81109 2.35883Z" fill="url(#paint2_linear_36_2231)"/>\n  <path opacity="0.15" d="M9.51822 8.9177C9.51822 9.01 9.50955 9.09913 9.49355 9.18592C9.48872 9.209 9.48405 9.23207 9.47855 9.25515C9.46822 9.29645 9.45722 9.33625 9.44372 9.37605C9.43655 9.39679 9.42939 9.41735 9.42155 9.43725C9.41355 9.45799 9.40489 9.47789 9.39622 9.49846C9.37005 9.55899 9.33905 9.61702 9.30422 9.6727C9.25905 9.74594 9.20755 9.81434 9.15039 9.87805C8.88789 10.1693 7.99639 10.6887 7.66789 10.8998L6.93857 11.3469C6.40423 11.6773 5.8989 11.9111 5.26207 11.927C5.23191 11.9278 5.20257 11.9287 5.17324 11.9287C5.13208 11.9287 5.09158 11.9278 5.05108 11.9263C3.97258 11.885 3.03192 11.3041 2.48959 10.4456C2.24142 10.0533 2.07726 9.60297 2.02176 9.1192C2.13826 9.78039 2.71259 10.2817 3.40492 10.2817C3.64758 10.2817 3.87525 10.2205 4.07425 10.1122C4.07575 10.1113 4.07741 10.1105 4.07908 10.1098L4.15041 10.0668L4.44075 9.89494L4.81024 9.67538V9.66501L4.85791 9.63641L8.16423 7.67107L8.41872 7.5199L8.44406 7.52859C8.44489 7.52859 8.44639 7.52943 8.44722 7.52943C8.52022 7.54766 8.59156 7.57241 8.65972 7.60267C8.81755 7.67107 8.96022 7.76822 9.08239 7.88678C9.13155 7.93377 9.17672 7.9846 9.21872 8.03878C9.25439 8.0841 9.28689 8.13193 9.31622 8.18193C9.44439 8.39647 9.51822 8.64881 9.51822 8.9177Z" fill="url(#paint3_linear_36_2231)"/>\n  <path opacity="0.1" d="M4.81109 2.35883L4.80992 9.67508L4.44042 9.89481L4.14992 10.0665L4.07842 10.11C4.07726 10.11 4.07509 10.1112 4.07409 10.1122C3.87476 10.2199 3.64709 10.2819 3.40426 10.2819C2.71177 10.2819 2.13844 9.7806 2.02127 9.11941C2.01577 9.08897 2.0116 9.05737 2.00827 9.02694C2.00394 8.96924 2.00077 8.91272 1.9996 8.85503V0.621068C1.9996 0.361206 2.20994 0.14917 2.46993 0.14917C2.56743 0.14917 2.65843 0.179604 2.73327 0.229603L4.17142 1.1724C4.17909 1.17892 4.18759 1.18444 4.19642 1.18979C4.56825 1.4443 4.81109 1.87272 4.81109 2.35883Z" fill="url(#paint4_linear_36_2231)"/>\n  </g>\n  <defs>\n  <linearGradient id="paint0_linear_36_2231" x1="5.0402" y1="5.24784" x2="10.1999" y2="8.21689" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_36_2231" x1="2.02143" y1="9.72414" x2="9.51817" y2="9.72414" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint2_linear_36_2231" x1="3.40533" y1="10.3854" x2="3.40533" y2="0.327611" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint3_linear_36_2231" x1="3.51153" y1="11.5805" x2="8.15328" y2="6.95414" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint4_linear_36_2231" x1="3.40533" y1="0.14917" x2="3.40533" y2="10.2818" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_36_2231">\n  <rect width="8" height="12" fill="white" transform="translate(2)"/>\n  </clipPath>\n  </defs>\n  </svg>\n  ',
			CibLogoIcons.CibLogo16 = '<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g clip-path="url(#clip0_36_2232)">\n  <path d="M12.9995 10.2819C12.9995 10.4378 12.9916 10.5927 12.9758 10.7455C12.8816 11.677 12.5049 12.5193 11.9379 13.1708C12.0093 13.0859 12.0737 12.9947 12.1302 12.897C12.1737 12.8228 12.2125 12.7454 12.2452 12.6647C12.257 12.6382 12.2679 12.6105 12.2768 12.5831C12.2877 12.5566 12.2966 12.5289 12.3045 12.5015C12.3135 12.4761 12.3214 12.4496 12.3283 12.423C12.3352 12.3954 12.3422 12.3679 12.3481 12.3403C12.3491 12.3372 12.3502 12.3338 12.351 12.3307C12.357 12.3031 12.3618 12.2756 12.3668 12.248C12.3718 12.2195 12.3768 12.1907 12.3808 12.1622C12.3808 12.161 12.3808 12.161 12.3808 12.1601C12.3847 12.1336 12.3877 12.1071 12.3897 12.0794C12.3958 12.0168 12.3987 11.9544 12.3987 11.8906C12.3987 11.5321 12.3064 11.1956 12.145 10.9093C12.1083 10.8424 12.0677 10.7789 12.0231 10.7185C11.9706 10.6462 11.9141 10.5785 11.8527 10.5158C11.7 10.3577 11.5216 10.2282 11.3243 10.137C11.2391 10.0966 11.15 10.0639 11.0587 10.0393C11.0577 10.0393 11.0558 10.0382 11.0547 10.0382L11.0231 10.0266L10.5612 9.85696V9.85584L9.35288 9.41126C9.34892 9.41014 9.34392 9.41014 9.34101 9.40925L9.26559 9.3796C9.02268 9.2777 8.82143 9.08685 8.69559 8.84382L8.25456 7.63961L7.74893 6.26037L7.65185 5.99415L7.62706 5.93997C7.59935 5.86773 7.58435 5.78925 7.58435 5.70765C7.58435 5.68646 7.58435 5.66528 7.58643 5.64611C7.61518 5.34266 7.85602 5.10498 8.14747 5.10498C8.22476 5.10498 8.29914 5.12193 8.36664 5.15269L10.6183 6.38835L11.0625 6.63137C11.2975 6.78098 11.5164 6.95712 11.7166 7.15556C12.4422 7.86859 12.9181 8.8679 12.9895 9.98516C12.9956 10.0837 12.9995 10.1823 12.9995 10.2819Z" fill="url(#paint0_linear_36_2232)"/>\n  <path d="M12.3978 11.8905C12.3978 12.0135 12.3869 12.1324 12.3669 12.2481C12.3609 12.2789 12.3551 12.3096 12.3482 12.3404C12.3353 12.3955 12.3215 12.4485 12.3046 12.5016C12.2957 12.5293 12.2867 12.5567 12.2769 12.5832C12.2669 12.6109 12.2561 12.6374 12.2453 12.6648C12.2126 12.7455 12.1738 12.8229 12.1303 12.8971C12.0738 12.9948 12.0092 13.086 11.938 13.1709C11.6099 13.5593 10.4955 14.2519 10.0849 14.5332L9.1732 15.1294C8.50529 15.57 7.87362 15.8817 7.07759 15.9029C7.03988 15.904 7.00321 15.9051 6.96654 15.9051C6.91509 15.9051 6.86446 15.904 6.81384 15.902C5.46572 15.8469 4.28989 15.0723 3.61198 13.9277C3.30177 13.4046 3.09657 12.8042 3.02719 12.1591C3.17282 13.0407 3.89073 13.7092 4.75614 13.7092C5.05947 13.7092 5.34405 13.6276 5.5928 13.4831C5.59468 13.482 5.59676 13.4809 5.59884 13.48L5.68801 13.4227L6.05092 13.1935L6.5128 12.9007V12.8869L6.57238 12.8488L10.7053 10.2283L11.0234 10.0267L11.0551 10.0383C11.0561 10.0383 11.058 10.0394 11.059 10.0394C11.1503 10.0637 11.2394 10.0967 11.3246 10.1371C11.5219 10.2283 11.7003 10.3578 11.853 10.5159C11.9144 10.5786 11.9709 10.6463 12.0234 10.7186C12.068 10.779 12.1086 10.8428 12.1453 10.9094C12.3055 11.1955 12.3978 11.5319 12.3978 11.8905Z" fill="url(#paint1_linear_36_2232)"/>\n  <path d="M6.51387 3.14519L6.51241 12.9002L6.05054 13.1932L5.68741 13.4221L5.59804 13.4801C5.59658 13.4801 5.59387 13.4817 5.59262 13.483C5.34346 13.6266 5.05887 13.7093 4.75533 13.7093C3.88971 13.7093 3.17305 13.0409 3.02659 12.1593C3.01972 12.1187 3.01451 12.0766 3.01034 12.036C3.00493 11.9591 3.00097 11.8837 2.99951 11.8068V0.828172C2.99951 0.48169 3.26243 0.198975 3.58742 0.198975C3.7093 0.198975 3.82305 0.239554 3.91659 0.306219L5.71429 1.56328C5.72387 1.57197 5.7345 1.57933 5.74554 1.58646C6.21033 1.92581 6.51387 2.49704 6.51387 3.14519Z" fill="url(#paint2_linear_36_2232)"/>\n  <path opacity="0.15" d="M12.3978 11.8905C12.3978 12.0135 12.3869 12.1324 12.3669 12.2481C12.3609 12.2789 12.3551 12.3096 12.3482 12.3404C12.3353 12.3955 12.3215 12.4485 12.3046 12.5016C12.2957 12.5293 12.2867 12.5567 12.2769 12.5832C12.2669 12.6109 12.2561 12.6374 12.2453 12.6648C12.2126 12.7455 12.1738 12.8229 12.1303 12.8971C12.0738 12.9948 12.0094 13.086 11.938 13.1709C11.6099 13.5593 10.4955 14.2519 10.0849 14.5332L9.1732 15.1294C8.50529 15.57 7.87362 15.8817 7.07759 15.9029C7.03988 15.904 7.00321 15.9051 6.96654 15.9051C6.91509 15.9051 6.86446 15.904 6.81384 15.902C5.46572 15.8469 4.28989 15.0723 3.61198 13.9277C3.30177 13.4046 3.09657 12.8042 3.02719 12.1591C3.17282 13.0407 3.89073 13.7092 4.75614 13.7092C5.05947 13.7092 5.34405 13.6276 5.5928 13.4831C5.59468 13.482 5.59676 13.4809 5.59884 13.48L5.68801 13.4227L6.05092 13.1935L6.5128 12.9007V12.8869L6.57238 12.8488L10.7053 10.2283L11.0234 10.0267L11.0551 10.0383C11.0561 10.0383 11.058 10.0394 11.059 10.0394C11.1503 10.0637 11.2394 10.0967 11.3246 10.1371C11.5219 10.2283 11.7003 10.3578 11.853 10.5159C11.9144 10.5786 11.9709 10.6463 12.0234 10.7186C12.068 10.779 12.1086 10.8428 12.1453 10.9094C12.3055 11.1955 12.3978 11.5319 12.3978 11.8905Z" fill="url(#paint3_linear_36_2232)"/>\n  <path opacity="0.1" d="M6.51387 3.14519L6.51241 12.9002L6.05054 13.1932L5.68741 13.4221L5.59804 13.4801C5.59658 13.4801 5.59387 13.4817 5.59262 13.483C5.34346 13.6266 5.05887 13.7093 4.75533 13.7093C3.88971 13.7093 3.17305 13.0409 3.02659 12.1593C3.01972 12.1187 3.01451 12.0766 3.01034 12.036C3.00493 11.9591 3.00097 11.8837 2.99951 11.8068V0.828172C2.99951 0.48169 3.26243 0.198975 3.58742 0.198975C3.7093 0.198975 3.82305 0.239554 3.91659 0.306219L5.71429 1.56328C5.72387 1.57197 5.7345 1.57933 5.74554 1.58646C6.21033 1.92581 6.51387 2.49704 6.51387 3.14519Z" fill="url(#paint4_linear_36_2232)"/>\n  </g>\n  <defs>\n  <linearGradient id="paint0_linear_36_2232" x1="6.80029" y1="6.99712" x2="13.4502" y2="10.5845" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_36_2232" x1="3.02677" y1="12.9657" x2="12.3977" y2="12.9657" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint2_linear_36_2232" x1="4.75667" y1="13.8472" x2="4.75667" y2="0.436896" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint3_linear_36_2232" x1="4.88941" y1="15.4408" x2="11.0642" y2="9.67118" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint4_linear_36_2232" x1="4.75667" y1="0.198975" x2="4.75667" y2="13.7092" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_36_2232">\n  <rect width="10" height="16" fill="white" transform="translate(3)"/>\n  </clipPath>\n  </defs>\n  </svg>\n  ',
			CibLogoIcons.CibLogo20 = '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g clip-path="url(#clip0_36_2233)">\n  <path d="M16.9994 12.8524C16.9994 13.0472 16.9891 13.2409 16.9685 13.4318C16.8461 14.5962 16.3564 15.6492 15.6192 16.4635C15.7121 16.3574 15.7958 16.2434 15.8692 16.1213C15.9258 16.0285 15.9762 15.9318 16.0187 15.8309C16.0341 15.7977 16.0482 15.7632 16.0598 15.7289C16.0739 15.6957 16.0856 15.6612 16.0959 15.6269C16.1075 15.5951 16.1178 15.5619 16.1267 15.5288C16.1357 15.4942 16.1449 15.4599 16.1525 15.4254C16.1538 15.4215 16.1552 15.4173 16.1563 15.4134C16.1641 15.3788 16.1703 15.3446 16.1768 15.31C16.1833 15.2743 16.1898 15.2384 16.195 15.2027C16.195 15.2013 16.195 15.2013 16.195 15.2002C16.2001 15.167 16.2039 15.1339 16.2066 15.0993C16.2145 15.021 16.2183 14.9429 16.2183 14.8632C16.2183 14.4151 16.0983 13.9945 15.8884 13.6367C15.8407 13.5531 15.7879 13.4736 15.73 13.3981C15.6617 13.3078 15.5883 13.2231 15.5084 13.1448C15.3099 12.9472 15.0781 12.7852 14.8216 12.6712C14.7108 12.6208 14.5949 12.5798 14.4763 12.5492C14.4749 12.5492 14.4725 12.5478 14.4711 12.5478L14.43 12.5333L13.8295 12.3212V12.3198L12.2587 11.7641C12.2536 11.7627 12.2471 11.7627 12.2433 11.7616L12.1452 11.7245C11.8294 11.5971 11.5678 11.3586 11.4042 11.0548L10.8309 9.54951L10.1736 7.82546L10.0474 7.49269L10.0151 7.42496C9.97913 7.33466 9.95963 7.23656 9.95963 7.13456C9.95963 7.10808 9.95963 7.0816 9.96233 7.05763C9.99971 6.67832 10.3128 6.38123 10.6917 6.38123C10.7922 6.38123 10.8888 6.40241 10.9766 6.44087L13.9037 7.98543L14.4812 8.28922C14.7867 8.47623 15.0713 8.6964 15.3316 8.94445C16.2749 9.83573 16.8935 11.0849 16.9864 12.4814C16.9942 12.6046 16.9994 12.7278 16.9994 12.8524Z" fill="url(#paint0_linear_36_2233)"/>\n  <path d="M16.2171 14.863C16.2171 15.0168 16.203 15.1654 16.177 15.31C16.1691 15.3485 16.1616 15.387 16.1526 15.4254C16.1358 15.4943 16.118 15.5606 16.096 15.6269C16.0844 15.6615 16.0727 15.6958 16.06 15.7289C16.047 15.7635 16.0329 15.7966 16.0188 15.8309C15.9763 15.9318 15.9259 16.0285 15.8693 16.1213C15.7959 16.2434 15.712 16.3574 15.6194 16.4636C15.1928 16.9491 13.7441 17.8147 13.2103 18.1664L12.0251 18.9117C11.1569 19.4624 10.3357 19.852 9.30085 19.8785C9.25183 19.8799 9.20416 19.8813 9.1565 19.8813C9.0896 19.8813 9.02379 19.8799 8.95798 19.8774C7.20543 19.8086 5.67685 18.8403 4.79556 17.4095C4.3923 16.7557 4.12553 16.0051 4.03534 15.1988C4.22465 16.3008 5.15794 17.1364 6.28297 17.1364C6.6773 17.1364 7.04726 17.0344 7.37063 16.8538C7.37307 16.8524 7.37578 16.851 7.37849 16.8499L7.4944 16.7782L7.96619 16.4917L8.56663 16.1258V16.1085L8.64408 16.0609L14.0168 12.7853L14.4304 12.5333L14.4716 12.5478C14.4729 12.5478 14.4754 12.5492 14.4767 12.5492C14.5953 12.5796 14.7113 12.6208 14.822 12.6713C15.0785 12.7853 15.3103 12.9472 15.5089 13.1448C15.5888 13.2231 15.6621 13.3078 15.7304 13.3981C15.7884 13.4737 15.8412 13.5534 15.8888 13.6367C16.0971 13.9943 16.2171 14.4148 16.2171 14.863Z" fill="url(#paint1_linear_36_2233)"/>\n  <path d="M8.56802 3.93142L8.56612 16.1252L7.96569 16.4914L7.49363 16.7776L7.37744 16.8501C7.37555 16.8501 7.37203 16.852 7.3704 16.8537C7.04649 17.0332 6.67653 17.1366 6.28193 17.1366C5.15662 17.1366 4.22496 16.301 4.03457 15.1991C4.02563 15.1483 4.01886 15.0957 4.01344 15.0449C4.0064 14.9488 4.00125 14.8546 3.99936 14.7584V1.03515C3.99936 0.602051 4.34115 0.248657 4.76365 0.248657C4.92208 0.248657 5.06996 0.299381 5.19156 0.382713L7.52857 1.95403C7.54103 1.9649 7.55484 1.9741 7.56919 1.98302C8.17342 2.4072 8.56802 3.12124 8.56802 3.93142Z" fill="url(#paint2_linear_36_2233)"/>\n  <path opacity="0.15" d="M16.2171 14.863C16.2171 15.0168 16.203 15.1654 16.177 15.31C16.1691 15.3485 16.1616 15.387 16.1526 15.4254C16.1358 15.4943 16.118 15.5606 16.096 15.6269C16.0844 15.6615 16.0727 15.6958 16.06 15.7289C16.047 15.7635 16.0329 15.7966 16.0188 15.8309C15.9763 15.9318 15.9259 16.0285 15.8693 16.1213C15.7959 16.2434 15.7123 16.3574 15.6194 16.4636C15.1928 16.9491 13.7441 17.8147 13.2103 18.1664L12.0251 18.9117C11.1569 19.4624 10.3357 19.852 9.30085 19.8785C9.25183 19.8799 9.20416 19.8813 9.1565 19.8813C9.0896 19.8813 9.02379 19.8799 8.95798 19.8774C7.20543 19.8086 5.67685 18.8403 4.79556 17.4095C4.3923 16.7557 4.12553 16.0051 4.03534 15.1988C4.22465 16.3008 5.15794 17.1364 6.28297 17.1364C6.6773 17.1364 7.04726 17.0344 7.37063 16.8538C7.37307 16.8524 7.37578 16.851 7.37849 16.8499L7.4944 16.7782L7.96619 16.4917L8.56663 16.1258V16.1085L8.64408 16.0609L14.0168 12.7853L14.4304 12.5333L14.4716 12.5478C14.4729 12.5478 14.4754 12.5492 14.4767 12.5492C14.5953 12.5796 14.7113 12.6208 14.822 12.6713C15.0785 12.7853 15.3103 12.9472 15.5089 13.1448C15.5888 13.2231 15.6621 13.3078 15.7304 13.3981C15.7884 13.4737 15.8412 13.5534 15.8888 13.6367C16.0971 13.9943 16.2171 14.4148 16.2171 14.863Z" fill="url(#paint3_linear_36_2233)"/>\n  <path opacity="0.1" d="M8.56802 3.93142L8.56612 16.1252L7.96569 16.4914L7.49363 16.7776L7.37744 16.8501C7.37555 16.8501 7.37203 16.852 7.3704 16.8537C7.04649 17.0332 6.67653 17.1366 6.28193 17.1366C5.15662 17.1366 4.22496 16.301 4.03457 15.1991C4.02563 15.1483 4.01886 15.0957 4.01344 15.0449C4.0064 14.9488 4.00125 14.8546 3.99936 14.7584V1.03515C3.99936 0.602051 4.34115 0.248657 4.76365 0.248657C4.92208 0.248657 5.06996 0.299381 5.19156 0.382713L7.52857 1.95403C7.54103 1.9649 7.55484 1.9741 7.56919 1.98302C8.17342 2.4072 8.56802 3.12124 8.56802 3.93142Z" fill="url(#paint4_linear_36_2233)"/>\n  </g>\n  <defs>\n  <linearGradient id="paint0_linear_36_2233" x1="8.94035" y1="8.7464" x2="17.4291" y2="13.509" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_36_2233" x1="4.0348" y1="16.2071" x2="16.217" y2="16.2071" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint2_linear_36_2233" x1="6.28366" y1="17.309" x2="6.28366" y2="0.546059" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint3_linear_36_2233" x1="6.45622" y1="19.301" x2="14.1893" y2="11.7862" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint4_linear_36_2233" x1="6.28366" y1="0.248657" x2="6.28366" y2="17.1364" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_36_2233">\n  <rect width="13" height="20" fill="white" transform="translate(4)"/>\n  </clipPath>\n  </defs>\n  </svg>\n  ',
			CibLogoIcons.CibLogo24 = '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g clip-path="url(#clip0_36_2234)">\n  <path d="M19.9992 15.4229C19.9992 15.6567 19.9866 15.8891 19.9612 16.1182C19.8106 17.5155 19.2079 18.779 18.3006 19.7562C18.4149 19.6288 18.5179 19.492 18.6082 19.3456C18.6779 19.2342 18.7399 19.1181 18.7922 18.9971C18.8112 18.9573 18.8286 18.9158 18.8429 18.8747C18.8602 18.8349 18.8746 18.7934 18.8872 18.7523C18.9016 18.7141 18.9142 18.6743 18.9252 18.6345C18.9362 18.5931 18.9476 18.5519 18.9569 18.5105C18.9586 18.5058 18.9602 18.5008 18.9616 18.4961C18.9712 18.4546 18.9789 18.4135 18.9869 18.372C18.9949 18.3292 19.0029 18.286 19.0092 18.2432C19.0092 18.2416 19.0092 18.2416 19.0092 18.2402C19.0156 18.2004 19.0202 18.1606 19.0236 18.1192C19.0332 18.0252 19.0379 17.9315 19.0379 17.8359C19.0379 17.2981 18.8902 16.7934 18.6319 16.364C18.5732 16.2637 18.5082 16.1684 18.4369 16.0777C18.3529 15.9694 18.2626 15.8677 18.1642 15.7737C17.9199 15.5366 17.6346 15.3423 17.3189 15.2055C17.1826 15.145 17.0399 15.0958 16.8939 15.059C16.8922 15.059 16.8892 15.0573 16.8876 15.0573L16.8369 15.0399L16.0979 14.7854V14.7838L14.1646 14.1169C14.1582 14.1152 14.1502 14.1152 14.1456 14.1139L14.0249 14.0694C13.6363 13.9166 13.3143 13.6303 13.1129 13.2657L12.4073 11.4594L11.5983 9.39055L11.4429 8.99123L11.4033 8.90996C11.3589 8.8016 11.3349 8.68387 11.3349 8.56147C11.3349 8.5297 11.3349 8.49792 11.3383 8.46916C11.3843 8.01399 11.7696 7.65747 12.2359 7.65747C12.3596 7.65747 12.4786 7.68289 12.5866 7.72904L16.1892 9.58252L16.8999 9.94706C17.2759 10.1715 17.6262 10.4357 17.9466 10.7333C19.1076 11.8029 19.8689 13.3018 19.9832 14.9777C19.9929 15.1256 19.9992 15.2734 19.9992 15.4229Z" fill="url(#paint0_linear_36_2234)"/>\n  <path d="M19.0364 17.8356C19.0364 18.0203 19.0191 18.1985 18.9871 18.3721C18.9774 18.4182 18.9681 18.4644 18.9571 18.5105C18.9364 18.5932 18.9144 18.6727 18.8874 18.7523C18.8731 18.7938 18.8588 18.835 18.8431 18.8748C18.8271 18.9162 18.8098 18.956 18.7924 18.9972C18.7401 19.1182 18.6781 19.2343 18.6084 19.3456C18.5181 19.4921 18.4148 19.6289 18.3008 19.7563C17.7758 20.3389 15.9928 21.3777 15.3358 21.7998L13.8771 22.6941C12.8085 23.3549 11.7978 23.8225 10.5241 23.8543C10.4638 23.8559 10.4051 23.8576 10.3465 23.8576C10.2642 23.8576 10.1832 23.8559 10.1022 23.8529C7.94516 23.7703 6.06384 22.6085 4.97918 20.8914C4.48285 20.1068 4.15452 19.2062 4.04352 18.2386C4.27652 19.561 5.42518 20.5637 6.80984 20.5637C7.29517 20.5637 7.7505 20.4413 8.1485 20.2246C8.1515 20.2229 8.15483 20.2212 8.15816 20.2199L8.30083 20.1339L8.88149 19.7901L9.62049 19.351V19.3303L9.71582 19.2731L16.3285 15.3424L16.8374 15.04L16.8881 15.0574C16.8898 15.0574 16.8928 15.0591 16.8944 15.0591C17.0404 15.0956 17.1831 15.1451 17.3194 15.2056C17.6351 15.3424 17.9204 15.5367 18.1648 15.7738C18.2631 15.8678 18.3534 15.9695 18.4374 16.0778C18.5088 16.1684 18.5738 16.2641 18.6324 16.3641C18.8888 16.7932 19.0364 17.2979 19.0364 17.8356Z" fill="url(#paint1_linear_36_2234)"/>\n  <path d="M9.62217 4.71778L9.61984 19.3503L8.88084 19.7897L8.29985 20.1332L8.15685 20.2202C8.15451 20.2202 8.15018 20.2225 8.14818 20.2245C7.74952 20.4399 7.29419 20.564 6.80852 20.564C5.42353 20.564 4.27687 19.5613 4.04254 18.2389C4.03154 18.1781 4.02321 18.1149 4.01654 18.054C4.00787 17.9386 4.00154 17.8256 3.99921 17.7102V1.24226C3.99921 0.722535 4.41987 0.298462 4.93987 0.298462C5.13487 0.298462 5.31687 0.35933 5.46653 0.459329L8.34285 2.34491C8.35818 2.35796 8.37518 2.36899 8.39285 2.3797C9.13651 2.88872 9.62217 3.74556 9.62217 4.71778Z" fill="url(#paint2_linear_36_2234)"/>\n  <path opacity="0.15" d="M19.0364 17.8356C19.0364 18.0203 19.0191 18.1985 18.9871 18.3721C18.9774 18.4182 18.9681 18.4644 18.9571 18.5105C18.9364 18.5932 18.9144 18.6727 18.8874 18.7523C18.8731 18.7938 18.8588 18.835 18.8431 18.8748C18.8271 18.9162 18.8098 18.956 18.7924 18.9972C18.7401 19.1182 18.6781 19.2343 18.6084 19.3456C18.5181 19.4921 18.4151 19.6289 18.3008 19.7563C17.7758 20.3389 15.9928 21.3777 15.3358 21.7998L13.8771 22.6941C12.8085 23.3549 11.7978 23.8225 10.5241 23.8543C10.4638 23.8559 10.4051 23.8576 10.3465 23.8576C10.2642 23.8576 10.1832 23.8559 10.1022 23.8529C7.94516 23.7703 6.06384 22.6085 4.97918 20.8914C4.48285 20.1068 4.15452 19.2062 4.04352 18.2386C4.27652 19.561 5.42518 20.5637 6.80984 20.5637C7.29517 20.5637 7.7505 20.4413 8.1485 20.2246C8.1515 20.2229 8.15483 20.2212 8.15816 20.2199L8.30083 20.1339L8.88149 19.7901L9.62049 19.351V19.3303L9.71582 19.2731L16.3285 15.3424L16.8374 15.04L16.8881 15.0574C16.8898 15.0574 16.8928 15.0591 16.8944 15.0591C17.0404 15.0956 17.1831 15.1451 17.3194 15.2056C17.6351 15.3424 17.9204 15.5367 18.1648 15.7738C18.2631 15.8678 18.3534 15.9695 18.4374 16.0778C18.5088 16.1684 18.5738 16.2641 18.6324 16.3641C18.8888 16.7932 19.0364 17.2979 19.0364 17.8356Z" fill="url(#paint3_linear_36_2234)"/>\n  <path opacity="0.1" d="M9.62217 4.71778L9.61984 19.3503L8.88084 19.7897L8.29985 20.1332L8.15685 20.2202C8.15451 20.2202 8.15018 20.2225 8.14818 20.2245C7.74952 20.4399 7.29419 20.564 6.80852 20.564C5.42353 20.564 4.27687 19.5613 4.04254 18.2389C4.03154 18.1781 4.02321 18.1149 4.01654 18.054C4.00787 17.9386 4.00154 17.8256 3.99921 17.7102V1.24226C3.99921 0.722535 4.41987 0.298462 4.93987 0.298462C5.13487 0.298462 5.31687 0.35933 5.46653 0.459329L8.34285 2.34491C8.35818 2.35796 8.37518 2.36899 8.39285 2.3797C9.13651 2.88872 9.62217 3.74556 9.62217 4.71778Z" fill="url(#paint4_linear_36_2234)"/>\n  </g>\n  <defs>\n  <linearGradient id="paint0_linear_36_2234" x1="10.0804" y1="10.4957" x2="20.3998" y2="16.4338" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_36_2234" x1="4.04285" y1="19.4485" x2="19.0363" y2="19.4485" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint2_linear_36_2234" x1="6.81066" y1="20.7708" x2="6.81066" y2="0.655344" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint3_linear_36_2234" x1="7.02307" y1="23.1612" x2="16.3066" y2="13.9085" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint4_linear_36_2234" x1="6.81066" y1="0.298462" x2="6.81066" y2="20.5638" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_36_2234">\n  <rect width="16" height="24" fill="white" transform="translate(4)"/>\n  </clipPath>\n  </defs>\n  </svg>\n ',
			CibLogoIcons.CibLogo32 = '<svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g clip-path="url(#clip0_36_2235)">\n  <path d="M26.999 20.564C26.999 20.8757 26.9824 21.1856 26.9491 21.491C26.7514 23.3541 25.9604 25.0388 24.7695 26.3418C24.9196 26.1719 25.0547 25.9895 25.1733 25.7942C25.2647 25.6457 25.3461 25.491 25.4148 25.3295C25.4397 25.2765 25.4625 25.2212 25.4813 25.1663C25.5041 25.1133 25.5229 25.058 25.5395 25.0031C25.5583 24.9523 25.5749 24.8992 25.5894 24.8462C25.6038 24.7909 25.6187 24.736 25.6309 24.6807C25.6331 24.6745 25.6353 24.6678 25.6371 24.6615C25.6497 24.6063 25.6598 24.5514 25.6703 24.4961C25.6808 24.439 25.6913 24.3815 25.6996 24.3244C25.6996 24.3222 25.6996 24.3222 25.6996 24.3204C25.7079 24.2674 25.7141 24.2143 25.7184 24.159C25.7311 24.0337 25.7372 23.9088 25.7372 23.7813C25.7372 23.0643 25.5434 22.3914 25.2044 21.8188C25.1274 21.685 25.0421 21.5579 24.9484 21.4371C24.8382 21.2926 24.7196 21.157 24.5906 21.0317C24.2699 20.7156 23.8954 20.4565 23.4811 20.2741C23.3021 20.1934 23.1149 20.1279 22.9233 20.0788C22.9211 20.0788 22.9171 20.0766 22.9149 20.0766L22.8484 20.0534L21.8785 19.714V19.7118L19.341 18.8226C19.3327 18.8204 19.3222 18.8204 19.3161 18.8186L19.1577 18.7593C18.6476 18.5555 18.225 18.1738 17.9607 17.6878L17.0345 15.2793L15.9727 12.5209L15.7689 11.9884L15.7168 11.8801C15.6586 11.7356 15.6271 11.5786 15.6271 11.4154C15.6271 11.3731 15.6271 11.3307 15.6315 11.2923C15.6919 10.6854 16.1976 10.2101 16.8097 10.2101C16.972 10.2101 17.1282 10.244 17.2699 10.3055L21.9984 12.7768L22.9311 13.2629C23.4246 13.5621 23.8844 13.9144 24.3049 14.3112C25.8287 15.7373 26.8279 17.7359 26.978 19.9704C26.9907 20.1675 26.999 20.3646 26.999 20.564Z" fill="url(#paint0_linear_36_2235)"/>\n  <path d="M25.7353 23.7808C25.7353 24.027 25.7126 24.2646 25.6706 24.4961C25.6579 24.5576 25.6456 24.6191 25.6312 24.6807C25.6041 24.7908 25.5752 24.897 25.5397 25.0031C25.5209 25.0584 25.5021 25.1132 25.4816 25.1663C25.4606 25.2216 25.4378 25.2747 25.4151 25.3295C25.3464 25.4909 25.265 25.6457 25.1736 25.7942C25.055 25.9895 24.9194 26.1718 24.7697 26.3417C24.0807 27.1185 21.7405 28.5036 20.8782 29.0663L18.9637 30.2587C17.5611 31.1399 16.2346 31.7633 14.5629 31.8056C14.4837 31.8079 14.4067 31.8101 14.3297 31.8101C14.2217 31.8101 14.1154 31.8079 14.0091 31.8039C11.178 31.6937 8.70877 30.1446 7.28515 27.8552C6.63372 26.8091 6.20279 25.6082 6.0571 24.3181C6.36291 26.0813 7.87053 27.4182 9.68789 27.4182C10.3249 27.4182 10.9225 27.255 11.4449 26.966C11.4488 26.9638 11.4532 26.9616 11.4576 26.9598L11.6448 26.8452L12.4069 26.3868L13.3769 25.8013V25.7736L13.502 25.6974L22.1811 20.4565L22.8491 20.0533L22.9156 20.0765C22.9178 20.0765 22.9218 20.0788 22.9239 20.0788C23.1156 20.1274 23.3028 20.1934 23.4818 20.2741C23.8961 20.4565 24.2706 20.7155 24.5912 21.0317C24.7203 21.157 24.8389 21.2926 24.9491 21.437C25.0427 21.5579 25.1281 21.6854 25.2051 21.8188C25.5415 22.3909 25.7353 23.0638 25.7353 23.7808Z" fill="url(#paint1_linear_36_2235)"/>\n  <path d="M13.3791 6.29037L13.376 25.8004L12.4061 26.3863L11.6436 26.8443L11.4559 26.9602C11.4528 26.9602 11.4471 26.9634 11.4445 26.966C10.9212 27.2532 10.3236 27.4186 9.68619 27.4186C7.86839 27.4186 6.3634 26.0818 6.05584 24.3186C6.0414 24.2374 6.03046 24.1532 6.02171 24.072C6.01034 23.9181 6.00202 23.7674 5.99896 23.6136V1.65634C5.99896 0.963379 6.55108 0.397949 7.23358 0.397949C7.48952 0.397949 7.72839 0.479107 7.92483 0.612438L11.7 3.12655C11.7201 3.14394 11.7424 3.15866 11.7656 3.17293C12.7417 3.85162 13.3791 4.99408 13.3791 6.29037Z" fill="url(#paint2_linear_36_2235)"/>\n  <path opacity="0.15" d="M25.7353 23.7808C25.7353 24.027 25.7126 24.2646 25.6706 24.4961C25.6579 24.5576 25.6456 24.6191 25.6312 24.6807C25.6041 24.7908 25.5752 24.897 25.5397 25.0031C25.5209 25.0584 25.5021 25.1132 25.4816 25.1663C25.4606 25.2216 25.4378 25.2747 25.4151 25.3295C25.3464 25.4909 25.265 25.6457 25.1736 25.7942C25.055 25.9895 24.9198 26.1718 24.7697 26.3417C24.0807 27.1185 21.7405 28.5036 20.8782 29.0663L18.9637 30.2587C17.5611 31.1399 16.2346 31.7633 14.5629 31.8056C14.4837 31.8079 14.4067 31.8101 14.3297 31.8101C14.2217 31.8101 14.1154 31.8079 14.0091 31.8039C11.178 31.6937 8.70877 30.1446 7.28515 27.8552C6.63372 26.8091 6.20279 25.6082 6.0571 24.3181C6.36291 26.0813 7.87053 27.4182 9.68789 27.4182C10.3249 27.4182 10.9225 27.255 11.4449 26.966C11.4488 26.9638 11.4532 26.9616 11.4576 26.9598L11.6448 26.8452L12.4069 26.3868L13.3769 25.8013V25.7736L13.502 25.6974L22.1811 20.4565L22.8491 20.0533L22.9156 20.0765C22.9178 20.0765 22.9218 20.0788 22.9239 20.0788C23.1156 20.1274 23.3028 20.1934 23.4818 20.2741C23.8961 20.4565 24.2706 20.7155 24.5912 21.0317C24.7203 21.157 24.8389 21.2926 24.9491 21.437C25.0427 21.5579 25.1281 21.6854 25.2051 21.8188C25.5415 22.3909 25.7353 23.0638 25.7353 23.7808Z" fill="url(#paint3_linear_36_2235)"/>\n  <path opacity="0.1" d="M13.3791 6.29037L13.376 25.8004L12.4061 26.3863L11.6436 26.8443L11.4559 26.9602C11.4528 26.9602 11.4471 26.9634 11.4445 26.966C10.9212 27.2532 10.3236 27.4186 9.68619 27.4186C7.86839 27.4186 6.3634 26.0818 6.05584 24.3186C6.0414 24.2374 6.03046 24.1532 6.02171 24.072C6.01034 23.9181 6.00202 23.7674 5.99896 23.6136V1.65634C5.99896 0.963379 6.55108 0.397949 7.23358 0.397949C7.48952 0.397949 7.72839 0.479107 7.92483 0.612438L11.7 3.12655C11.7201 3.14394 11.7424 3.15866 11.7656 3.17293C12.7417 3.85162 13.3791 4.99408 13.3791 6.29037Z" fill="url(#paint4_linear_36_2235)"/>\n  </g>\n  <defs>\n  <linearGradient id="paint0_linear_36_2235" x1="13.9806" y1="13.9944" x2="27.63" y2="21.726" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_36_2235" x1="6.05622" y1="25.9313" x2="25.7352" y2="25.9313" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint2_linear_36_2235" x1="9.68899" y1="27.6944" x2="9.68899" y2="0.873793" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint3_linear_36_2235" x1="9.96776" y1="30.8816" x2="22.3436" y2="18.7396" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint4_linear_36_2235" x1="9.68899" y1="0.397949" x2="9.68899" y2="27.4184" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_36_2235">\n  <rect width="21" height="32" fill="white" transform="translate(6)"/>\n  </clipPath>\n  </defs>\n  </svg>\n  ',
			CibLogoIcons.CibLogo36 = '<svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g clip-path="url(#clip0_36_2236)">\n  <path d="M29.9989 23.1343C29.9989 23.485 29.9807 23.8336 29.9443 24.1773C29.7277 26.2732 28.8614 28.1685 27.5571 29.6344C27.7214 29.4432 27.8695 29.2381 27.9993 29.0183C28.0995 28.8513 28.1886 28.6772 28.2638 28.4956C28.2911 28.4359 28.3161 28.3737 28.3367 28.312C28.3616 28.2523 28.3822 28.1901 28.4004 28.1284C28.421 28.0712 28.4392 28.0115 28.455 27.9518C28.4708 27.8896 28.4871 27.8279 28.5005 27.7657C28.5029 27.7587 28.5053 27.7511 28.5073 27.7441C28.5211 27.6819 28.5322 27.6202 28.5437 27.558C28.5552 27.4938 28.5667 27.4291 28.5758 27.3648C28.5758 27.3623 28.5758 27.3623 28.5758 27.3603C28.5849 27.3006 28.5916 27.2409 28.5964 27.1787C28.6103 27.0378 28.617 26.8973 28.617 26.7538C28.617 25.9471 28.4047 25.1901 28.0334 24.546C27.949 24.3955 27.8556 24.2525 27.753 24.1166C27.6323 23.954 27.5024 23.8015 27.3611 23.6606C27.0099 23.3049 26.5997 23.0134 26.1459 22.8082C25.95 22.7174 25.7449 22.6437 25.535 22.5885C25.5326 22.5885 25.5283 22.586 25.5259 22.586L25.4531 22.5599L24.3908 22.1782V22.1756L21.6116 21.1753C21.6025 21.1728 21.591 21.1728 21.5843 21.1708L21.4108 21.1041C20.8521 20.8748 20.3893 20.4454 20.0998 19.8986L19.0854 17.1891L17.9225 14.0858L17.6992 13.4868L17.6422 13.3649C17.5785 13.2024 17.544 13.0258 17.544 12.8422C17.544 12.7945 17.544 12.7469 17.5488 12.7037C17.6149 12.021 18.1688 11.4862 18.8392 11.4862C19.0169 11.4862 19.188 11.5243 19.3432 11.5936L24.522 14.3738L25.5436 14.9206C26.0841 15.2572 26.5877 15.6535 27.0482 16.1C28.7171 17.7043 29.8115 19.9528 29.9759 22.4666C29.9898 22.6883 29.9989 22.9101 29.9989 23.1343Z" fill="url(#paint0_linear_36_2236)"/>\n  <path d="M28.6149 26.7533C28.6149 27.0303 28.59 27.2976 28.544 27.558C28.5301 27.6272 28.5167 27.6965 28.5008 27.7657C28.4711 27.8896 28.4395 28.009 28.4007 28.1284C28.3801 28.1906 28.3595 28.2523 28.337 28.312C28.314 28.3742 28.289 28.4339 28.2641 28.4956C28.1889 28.6772 28.0998 28.8513 27.9996 29.0183C27.8698 29.2381 27.7212 29.4433 27.5574 29.6344C26.8027 30.5083 24.2396 32.0665 23.2952 32.6996L21.1984 34.041C19.6622 35.0323 18.2094 35.7336 16.3785 35.7813C16.2917 35.7838 16.2074 35.7863 16.1231 35.7863C16.0047 35.7863 15.8883 35.7838 15.7718 35.7793C12.6712 35.6553 9.96677 33.9126 8.40757 31.337C7.6941 30.1601 7.22212 28.8092 7.06256 27.3578C7.3975 29.3414 9.0487 30.8454 11.0391 30.8454C11.7368 30.8454 12.3913 30.6618 12.9635 30.3367C12.9678 30.3342 12.9726 30.3317 12.9774 30.3297L13.1824 30.2008L14.0171 29.6851L15.0795 29.0264V28.9953L15.2165 28.9095L24.7222 23.0134L25.4538 22.5599L25.5267 22.586C25.5291 22.586 25.5334 22.5885 25.5358 22.5885C25.7456 22.6432 25.9507 22.7175 26.1467 22.8083C26.6005 23.0134 27.0106 23.3049 27.3619 23.6606C27.5032 23.8016 27.6331 23.9541 27.7538 24.1166C27.8564 24.2525 27.9498 24.396 28.0341 24.546C28.4026 25.1897 28.6149 25.9467 28.6149 26.7533Z" fill="url(#paint1_linear_36_2236)"/>\n  <path d="M15.0819 7.07661L15.0785 29.0254L14.0162 29.6846L13.181 30.1998L12.9755 30.3302C12.9721 30.3302 12.9659 30.3337 12.963 30.3367C12.3899 30.6598 11.7354 30.8459 11.0373 30.8459C9.04634 30.8459 7.39801 29.3419 7.06116 27.3584C7.04535 27.267 7.03337 27.1722 7.02379 27.0809C7.01133 26.9079 7.00222 26.7383 6.99887 26.5652V1.86333C6.99887 1.08374 7.60358 0.447632 8.35107 0.447632C8.63138 0.447632 8.89301 0.538935 9.10815 0.688932L13.2429 3.51731C13.2649 3.53687 13.2893 3.55343 13.3147 3.56948C14.3837 4.33301 15.0819 5.61827 15.0819 7.07661Z" fill="url(#paint2_linear_36_2236)"/>\n  <path opacity="0.15" d="M28.6149 26.7533C28.6149 27.0303 28.59 27.2976 28.544 27.558C28.5301 27.6272 28.5167 27.6965 28.5008 27.7657C28.4711 27.8896 28.4395 28.009 28.4007 28.1284C28.3801 28.1906 28.3595 28.2523 28.337 28.312C28.314 28.3742 28.289 28.4339 28.2641 28.4956C28.1889 28.6772 28.0998 28.8513 27.9996 29.0183C27.8698 29.2381 27.7217 29.4433 27.5574 29.6344C26.8027 30.5083 24.2396 32.0665 23.2952 32.6996L21.1984 34.041C19.6622 35.0323 18.2094 35.7336 16.3785 35.7813C16.2917 35.7838 16.2074 35.7863 16.1231 35.7863C16.0047 35.7863 15.8883 35.7838 15.7718 35.7793C12.6712 35.6553 9.96677 33.9126 8.40757 31.337C7.6941 30.1601 7.22212 28.8092 7.06256 27.3578C7.3975 29.3414 9.0487 30.8454 11.0391 30.8454C11.7368 30.8454 12.3913 30.6618 12.9635 30.3367C12.9678 30.3342 12.9726 30.3317 12.9774 30.3297L13.1824 30.2008L14.0171 29.6851L15.0795 29.0264V28.9953L15.2165 28.9095L24.7222 23.0134L25.4538 22.5599L25.5267 22.586C25.5291 22.586 25.5334 22.5885 25.5358 22.5885C25.7456 22.6432 25.9507 22.7175 26.1467 22.8083C26.6005 23.0134 27.0106 23.3049 27.3619 23.6606C27.5032 23.8016 27.6331 23.9541 27.7538 24.1166C27.8564 24.2525 27.9498 24.396 28.0341 24.546C28.4026 25.1897 28.6149 25.9467 28.6149 26.7533Z" fill="url(#paint3_linear_36_2236)"/>\n  <path opacity="0.1" d="M15.0819 7.07661L15.0785 29.0254L14.0162 29.6846L13.181 30.1998L12.9755 30.3302C12.9721 30.3302 12.9659 30.3337 12.963 30.3367C12.3899 30.6598 11.7354 30.8459 11.0373 30.8459C9.04634 30.8459 7.39801 29.3419 7.06116 27.3584C7.04535 27.267 7.03337 27.1722 7.02379 27.0809C7.01133 26.9079 7.00222 26.7383 6.99887 26.5652V1.86333C6.99887 1.08374 7.60358 0.447632 8.35107 0.447632C8.63138 0.447632 8.89301 0.538935 9.10815 0.688932L13.2429 3.51731C13.2649 3.53687 13.2893 3.55343 13.3147 3.56948C14.3837 4.33301 15.0819 5.61827 15.0819 7.07661Z" fill="url(#paint4_linear_36_2236)"/>\n  </g>\n  <defs>\n  <linearGradient id="paint0_linear_36_2236" x1="15.7406" y1="15.7435" x2="30.882" y2="24.0933" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_36_2236" x1="7.0616" y1="29.1727" x2="28.6147" y2="29.1727" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint2_linear_36_2236" x1="11.0403" y1="31.1562" x2="11.0403" y2="0.982956" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint3_linear_36_2236" x1="11.3457" y1="34.7417" x2="25.2563" y2="21.4549" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint4_linear_36_2236" x1="11.0403" y1="0.447632" x2="11.0403" y2="30.8456" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_36_2236">\n  <rect width="23" height="36" fill="white" transform="translate(7)"/>\n  </clipPath>\n  </defs>\n  </svg>\n  ',
			CibLogoIcons.CibLogo40 = '<svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g clip-path="url(#clip0_36_2237)">\n  <path d="M32.9987 25.7049C32.9987 26.0946 32.9781 26.4819 32.937 26.8638C32.6921 29.1926 31.7128 31.2985 30.2384 32.9272C30.4242 32.7148 30.5916 32.4869 30.7384 32.2427C30.8516 32.0571 30.9523 31.8637 31.0374 31.6619C31.0682 31.5956 31.0964 31.5264 31.1197 31.4579C31.1479 31.3916 31.1711 31.3224 31.1917 31.2539C31.215 31.1903 31.2356 31.124 31.2535 31.0577C31.2714 30.9886 31.2898 30.92 31.3049 30.8509C31.3076 30.8431 31.3104 30.8347 31.3125 30.8269C31.3282 30.7578 31.3407 30.6892 31.3537 30.6201C31.3667 30.5488 31.3797 30.4769 31.39 30.4055C31.39 30.4027 31.39 30.4027 31.39 30.4005C31.4003 30.3342 31.4079 30.2678 31.4133 30.1987C31.429 30.0421 31.4366 29.886 31.4366 29.7266C31.4366 28.8303 31.1966 27.9892 30.7768 27.2735C30.6815 27.1062 30.5759 26.9474 30.4599 26.7963C30.3234 26.6157 30.1766 26.4463 30.0169 26.2896C29.6198 25.8944 29.1562 25.5706 28.6432 25.3426C28.4217 25.2417 28.1898 25.1598 27.9526 25.0985C27.9499 25.0985 27.945 25.0957 27.9423 25.0957L27.86 25.0667L26.6591 24.6425V24.6397L23.5174 23.5283C23.5071 23.5255 23.4941 23.5255 23.4866 23.5232L23.2905 23.4491C22.6589 23.1944 22.1356 22.7172 21.8085 22.1097L20.6618 19.0991L19.3472 15.651L19.0947 14.9855L19.0303 14.85C18.9583 14.6695 18.9193 14.4732 18.9193 14.2692C18.9193 14.2163 18.9193 14.1633 18.9247 14.1154C18.9994 13.3568 19.6256 12.7626 20.3834 12.7626C20.5843 12.7626 20.7777 12.8049 20.9532 12.8819L26.8075 15.971L27.9623 16.5786C28.5733 16.9526 29.1426 17.3929 29.6632 17.889C31.5498 19.6716 32.7869 22.1699 32.9727 24.963C32.9884 25.2094 32.9987 25.4558 32.9987 25.7049Z" fill="url(#paint0_linear_36_2237)"/>\n  <path d="M31.4342 29.726C31.4342 30.0337 31.406 30.3308 31.354 30.6201C31.3383 30.697 31.3232 30.7739 31.3053 30.8508C31.2717 30.9885 31.236 31.1212 31.1921 31.2538C31.1688 31.3229 31.1455 31.3915 31.12 31.4578C31.094 31.527 31.0659 31.5933 31.0377 31.6618C30.9527 31.8636 30.8519 32.057 30.7387 32.2427C30.5919 32.4868 30.424 32.7148 30.2387 32.9272C29.3856 33.8981 26.4883 35.6294 25.4206 36.3329L23.0503 37.8234C21.3138 38.9248 19.6714 39.7041 17.6017 39.757C17.5037 39.7598 17.4084 39.7626 17.313 39.7626C17.1792 39.7626 17.0476 39.7598 16.916 39.7548C13.4109 39.6171 10.3537 37.6807 8.59116 34.819C7.78462 33.5113 7.25108 32.0102 7.07071 30.3977C7.44933 32.6016 9.31591 34.2727 11.566 34.2727C12.3546 34.2727 13.0946 34.0687 13.7413 33.7075C13.7462 33.7047 13.7516 33.7019 13.757 33.6997L13.9888 33.5565L14.9324 32.9834L16.1333 32.2516V32.217L16.2882 32.1217L27.0337 25.5705L27.8608 25.0667L27.9432 25.0956C27.9459 25.0956 27.9508 25.0984 27.9535 25.0984C28.1907 25.1592 28.4225 25.2417 28.6441 25.3426C29.157 25.5705 29.6207 25.8944 30.0177 26.2896C30.1775 26.4462 30.3243 26.6157 30.4608 26.7963C30.5767 26.9473 30.6824 27.1067 30.7777 27.2734C31.1942 27.9886 31.4342 28.8297 31.4342 29.726Z" fill="url(#paint1_linear_36_2237)"/>\n  <path d="M16.136 7.86297L16.1322 32.2505L14.9314 32.9829L13.9873 33.5554L13.7549 33.7003C13.7511 33.7003 13.7441 33.7042 13.7408 33.7075C13.093 34.0665 12.3531 34.2733 11.5639 34.2733C9.31325 34.2733 7.44992 32.6022 7.06913 30.3982C7.05126 30.2968 7.03772 30.1914 7.02688 30.09C7.0128 29.8977 7.00251 29.7093 6.99872 29.517V2.07043C6.99872 1.20422 7.6823 0.497437 8.52729 0.497437C8.84417 0.497437 9.13991 0.598884 9.38312 0.765548L14.0571 3.90819C14.0821 3.92993 14.1097 3.94832 14.1384 3.96616C15.3468 4.81453 16.136 6.24259 16.136 7.86297Z" fill="url(#paint2_linear_36_2237)"/>\n  <path opacity="0.15" d="M31.4342 29.726C31.4342 30.0337 31.406 30.3308 31.354 30.6201C31.3383 30.697 31.3232 30.7739 31.3053 30.8508C31.2717 30.9885 31.236 31.1212 31.1921 31.2538C31.1688 31.3229 31.1455 31.3915 31.12 31.4578C31.094 31.527 31.0659 31.5933 31.0377 31.6618C30.9527 31.8636 30.8519 32.057 30.7387 32.2427C30.5919 32.4868 30.4245 32.7148 30.2387 32.9272C29.3856 33.8981 26.4883 35.6294 25.4206 36.3329L23.0503 37.8234C21.3138 38.9248 19.6714 39.7041 17.6017 39.757C17.5037 39.7598 17.4084 39.7626 17.313 39.7626C17.1792 39.7626 17.0476 39.7598 16.916 39.7548C13.4109 39.6171 10.3537 37.6807 8.59116 34.819C7.78462 33.5113 7.25108 32.0102 7.07071 30.3977C7.44933 32.6016 9.31591 34.2727 11.566 34.2727C12.3546 34.2727 13.0946 34.0687 13.7413 33.7075C13.7462 33.7047 13.7516 33.7019 13.757 33.6997L13.9888 33.5565L14.9324 32.9834L16.1333 32.2516V32.217L16.2882 32.1217L27.0337 25.5705L27.8608 25.0667L27.9432 25.0956C27.9459 25.0956 27.9508 25.0984 27.9535 25.0984C28.1907 25.1592 28.4225 25.2417 28.6441 25.3426C29.157 25.5705 29.6207 25.8944 30.0177 26.2896C30.1775 26.4462 30.3243 26.6157 30.4608 26.7963C30.5767 26.9473 30.6824 27.1067 30.7777 27.2734C31.1942 27.9886 31.4342 28.8297 31.4342 29.726Z" fill="url(#paint3_linear_36_2237)"/>\n  <path opacity="0.1" d="M16.136 7.86297L16.1322 32.2505L14.9314 32.9829L13.9873 33.5554L13.7549 33.7003C13.7511 33.7003 13.7441 33.7042 13.7408 33.7075C13.093 34.0665 12.3531 34.2733 11.5639 34.2733C9.31325 34.2733 7.44992 32.6022 7.06913 30.3982C7.05126 30.2968 7.03772 30.1914 7.02688 30.09C7.0128 29.8977 7.00251 29.7093 6.99872 29.517V2.07043C6.99872 1.20422 7.6823 0.497437 8.52729 0.497437C8.84417 0.497437 9.13991 0.598884 9.38312 0.765548L14.0571 3.90819C14.0821 3.92993 14.1097 3.94832 14.1384 3.96616C15.3468 4.81453 16.136 6.24259 16.136 7.86297Z" fill="url(#paint4_linear_36_2237)"/>\n  </g>\n  <defs>\n  <linearGradient id="paint0_linear_36_2237" x1="16.8807" y1="17.4929" x2="33.8581" y2="27.0181" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_36_2237" x1="7.06963" y1="32.4141" x2="31.434" y2="32.4141" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint2_linear_36_2237" x1="11.5673" y1="34.6181" x2="11.5673" y2="1.09224" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint3_linear_36_2237" x1="11.9125" y1="38.6019" x2="27.3787" y2="23.5724" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint4_linear_36_2237" x1="11.5673" y1="0.497437" x2="11.5673" y2="34.273" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_36_2237">\n  <rect width="26" height="40" fill="white" transform="translate(7)"/>\n  </clipPath>\n  </defs>\n  </svg>\n  ',
			CibLogoIcons.CibLogo48 = '<svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g clip-path="url(#clip0_36_2238)">\n  <path d="M39.9984 30.8459C39.9984 31.3134 39.9731 31.7783 39.9224 32.2365C39.6211 35.0311 38.4158 37.5581 36.6011 39.5126C36.8298 39.2578 37.0358 38.9842 37.2165 38.6912C37.3558 38.4685 37.4798 38.2364 37.5845 37.9943C37.6224 37.9147 37.6571 37.8317 37.6858 37.7494C37.7204 37.6698 37.7491 37.5869 37.7744 37.5046C37.8031 37.4284 37.8284 37.3488 37.8504 37.2692C37.8724 37.1862 37.8951 37.104 37.9138 37.021C37.9171 37.0117 37.9204 37.0016 37.9231 36.9923C37.9424 36.9093 37.9578 36.8271 37.9738 36.7441C37.9898 36.6585 38.0058 36.5722 38.0184 36.4866C38.0184 36.4832 38.0184 36.4832 38.0184 36.4806C38.0311 36.401 38.0404 36.3214 38.0471 36.2384C38.0664 36.0505 38.0758 35.8632 38.0758 35.6719C38.0758 34.5963 37.7804 33.587 37.2638 32.7281C37.1465 32.5275 37.0165 32.3368 36.8738 32.1556C36.7058 31.9388 36.5251 31.7355 36.3285 31.5475C35.8398 31.0733 35.2691 30.6847 34.6378 30.4111C34.3651 30.29 34.0798 30.1917 33.7878 30.1181C33.7845 30.1181 33.7785 30.1148 33.7751 30.1148L33.6738 30.08L32.1958 29.571V29.5676L28.3292 28.2339C28.3165 28.2305 28.3005 28.2305 28.2912 28.2279L28.0498 28.1389C27.2725 27.8332 26.6285 27.2607 26.2258 26.5316L24.8145 22.9189L23.1965 18.7812L22.8859 17.9826L22.8065 17.82C22.7179 17.6033 22.6699 17.3679 22.6699 17.1231C22.6699 17.0595 22.6699 16.996 22.6765 16.9384C22.7685 16.0281 23.5392 15.3151 24.4719 15.3151C24.7192 15.3151 24.9572 15.3659 25.1732 15.4582L32.3785 19.1652L33.7998 19.8942C34.5518 20.3431 35.2525 20.8715 35.8931 21.4668C38.2151 23.6059 39.7378 26.6038 39.9664 29.9556C39.9858 30.2512 39.9984 30.5469 39.9984 30.8459Z" fill="url(#paint0_linear_36_2238)"/>\n  <path d="M38.0729 35.6713C38.0729 36.0405 38.0382 36.397 37.9742 36.7442C37.9549 36.8365 37.9362 36.9288 37.9142 37.0211C37.8729 37.1863 37.8289 37.3455 37.7749 37.5047C37.7462 37.5876 37.7175 37.6699 37.6862 37.7495C37.6542 37.8324 37.6195 37.912 37.5849 37.9943C37.4802 38.2365 37.3562 38.4686 37.2169 38.6913C37.0362 38.9843 36.8295 39.2578 36.6015 39.5127C35.5516 40.6779 31.9856 42.7554 30.6716 43.5996L27.7543 45.3882C25.6169 46.7099 23.5956 47.645 21.0483 47.7085C20.9276 47.7119 20.8103 47.7152 20.693 47.7152C20.5283 47.7152 20.3663 47.7119 20.2043 47.7058C15.8903 47.5406 12.1277 45.2169 9.95836 41.7829C8.9657 40.2137 8.30903 38.4124 8.08704 36.4773C8.55303 39.1221 10.8504 41.1274 13.6197 41.1274C14.5903 41.1274 15.501 40.8826 16.297 40.4491C16.303 40.4458 16.3097 40.4424 16.3163 40.4398L16.6017 40.2678L17.763 39.5802L19.241 38.702V38.6605L19.4316 38.5461L32.6569 30.6847L33.6749 30.0801L33.7762 30.1149C33.7796 30.1149 33.7856 30.1182 33.7889 30.1182C34.0809 30.1911 34.3662 30.2901 34.6389 30.4112C35.2702 30.6848 35.8409 31.0734 36.3295 31.5476C36.5262 31.7356 36.7069 31.9389 36.8749 32.1556C37.0175 32.3369 37.1475 32.5282 37.2649 32.7282C37.7775 33.5864 38.0729 34.5957 38.0729 35.6713Z" fill="url(#paint1_linear_36_2238)"/>\n  <path d="M19.2443 9.43556L19.2397 38.7006L17.7617 39.5795L16.5997 40.2664L16.3137 40.4403C16.309 40.4403 16.3004 40.445 16.2964 40.449C15.499 40.8798 14.5884 41.128 13.617 41.128C10.8471 41.128 8.55374 39.1227 8.08508 36.4779C8.06308 36.3561 8.04641 36.2297 8.03308 36.108C8.01575 35.8772 8.00308 35.6511 7.99841 35.4204V2.48452C7.99841 1.44507 8.83974 0.596924 9.87974 0.596924C10.2697 0.596924 10.6337 0.718661 10.9331 0.918657L16.6857 4.68983C16.7164 4.71591 16.7504 4.73799 16.7857 4.75939C18.273 5.77743 19.2443 7.49111 19.2443 9.43556Z" fill="url(#paint2_linear_36_2238)"/>\n  <path opacity="0.15" d="M38.0729 35.6713C38.0729 36.0405 38.0382 36.397 37.9742 36.7442C37.9549 36.8365 37.9362 36.9288 37.9142 37.0211C37.8729 37.1863 37.8289 37.3455 37.7749 37.5047C37.7462 37.5876 37.7175 37.6699 37.6862 37.7495C37.6542 37.8324 37.6195 37.912 37.5849 37.9943C37.4802 38.2365 37.3562 38.4686 37.2169 38.6913C37.0362 38.9843 36.8302 39.2578 36.6015 39.5127C35.5516 40.6779 31.9856 42.7554 30.6716 43.5996L27.7543 45.3882C25.6169 46.7099 23.5956 47.645 21.0483 47.7085C20.9276 47.7119 20.8103 47.7152 20.693 47.7152C20.5283 47.7152 20.3663 47.7119 20.2043 47.7058C15.8903 47.5406 12.1277 45.2169 9.95836 41.7829C8.9657 40.2137 8.30903 38.4124 8.08704 36.4773C8.55303 39.1221 10.8504 41.1274 13.6197 41.1274C14.5903 41.1274 15.501 40.8826 16.297 40.4491C16.303 40.4458 16.3097 40.4424 16.3163 40.4398L16.6017 40.2678L17.763 39.5802L19.241 38.702V38.6605L19.4316 38.5461L32.6569 30.6847L33.6749 30.0801L33.7762 30.1149C33.7796 30.1149 33.7856 30.1182 33.7889 30.1182C34.0809 30.1911 34.3662 30.2901 34.6389 30.4112C35.2702 30.6848 35.8409 31.0734 36.3295 31.5476C36.5262 31.7356 36.7069 31.9389 36.8749 32.1556C37.0175 32.3369 37.1475 32.5282 37.2649 32.7282C37.7775 33.5864 38.0729 34.5957 38.0729 35.6713Z" fill="url(#paint3_linear_36_2238)"/>\n  <path opacity="0.1" d="M19.2443 9.43556L19.2397 38.7006L17.7617 39.5795L16.5997 40.2664L16.3137 40.4403C16.309 40.4403 16.3004 40.445 16.2964 40.449C15.499 40.8798 14.5884 41.128 13.617 41.128C10.8471 41.128 8.55374 39.1227 8.08508 36.4779C8.06308 36.3561 8.04641 36.2297 8.03308 36.108C8.01575 35.8772 8.00308 35.6511 7.99841 35.4204V2.48452C7.99841 1.44507 8.83974 0.596924 9.87974 0.596924C10.2697 0.596924 10.6337 0.718661 10.9331 0.918657L16.6857 4.68983C16.7164 4.71591 16.7504 4.73799 16.7857 4.75939C18.273 5.77743 19.2443 7.49111 19.2443 9.43556Z" fill="url(#paint4_linear_36_2238)"/>\n  </g>\n  <defs>\n  <linearGradient id="paint0_linear_36_2238" x1="20.1609" y1="20.9915" x2="40.7995" y2="32.8677" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_36_2238" x1="8.0857" y1="38.897" x2="38.0727" y2="38.897" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint2_linear_36_2238" x1="13.6213" y1="41.5417" x2="13.6213" y2="1.31069" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint3_linear_36_2238" x1="14.0461" y1="46.3224" x2="32.6131" y2="27.8171" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint4_linear_36_2238" x1="13.6213" y1="0.596924" x2="13.6213" y2="41.1276" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_36_2238">\n  <rect width="32" height="48" fill="white" transform="translate(8)"/>\n  </clipPath>\n  </defs>\n  </svg>\n  ',
			CibLogoIcons.CibLogo56 = '<svg width="56" height="56" viewBox="0 0 56 56" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g clip-path="url(#clip0_36_2239)">\n  <path d="M46.9982 35.9868C46.9982 36.5323 46.9689 37.0747 46.9103 37.6092C46.5619 40.8696 45.1683 43.8178 43.0701 46.098C43.3344 45.8007 43.5726 45.4815 43.7815 45.1397C43.9426 44.8799 44.086 44.6091 44.207 44.3266C44.251 44.2337 44.291 44.137 44.3242 44.041C44.3643 43.9481 44.3974 43.8514 44.4267 43.7554C44.4599 43.6664 44.4892 43.5736 44.5146 43.4807C44.54 43.3839 44.5662 43.2879 44.5878 43.1912C44.5917 43.1803 44.5955 43.1685 44.5986 43.1576C44.621 43.0609 44.6387 42.9649 44.6572 42.8681C44.6757 42.7682 44.6942 42.6675 44.7088 42.5677C44.7088 42.5638 44.7088 42.5638 44.7088 42.5606C44.7235 42.4678 44.7343 42.3749 44.742 42.2781C44.7643 42.0589 44.7751 41.8404 44.7751 41.6172C44.7751 40.3624 44.4336 39.1848 43.8363 38.1828C43.7006 37.9487 43.5503 37.7263 43.3853 37.5148C43.1911 37.262 42.9822 37.0247 42.7548 36.8054C42.1898 36.2522 41.5299 35.7988 40.8 35.4796C40.4847 35.3384 40.1548 35.2236 39.8172 35.1378C39.8133 35.1378 39.8064 35.1339 39.8025 35.1339L39.6853 35.0933L37.9764 34.4995V34.4956L33.5056 32.9395C33.491 32.9356 33.4725 32.9356 33.4617 32.9325L33.1826 32.8287C32.2838 32.4721 31.5392 31.8041 31.0736 30.9535L29.4418 26.7387L27.571 21.9114L27.2118 20.9796L27.1201 20.79C27.0175 20.5372 26.962 20.2625 26.962 19.9769C26.962 19.9027 26.962 19.8286 26.9697 19.7615C27.0761 18.6994 27.9672 17.8676 29.0456 17.8676C29.3316 17.8676 29.6068 17.9269 29.8565 18.0346L38.1876 22.3593L39.831 23.2099C40.7005 23.7336 41.5107 24.35 42.2514 25.0446C44.9362 27.5402 46.6968 31.0378 46.9612 34.9482C46.9836 35.2931 46.9982 35.638 46.9982 35.9868Z" fill="url(#paint0_linear_36_2239)"/>\n  <path d="M44.7717 41.6165C44.7717 42.0472 44.7316 42.4631 44.6576 42.8682C44.6353 42.9758 44.6137 43.0835 44.5883 43.1912C44.5405 43.384 44.4896 43.5697 44.4272 43.7554C44.394 43.8522 44.3609 43.9482 44.3246 44.041C44.2876 44.1378 44.2475 44.2307 44.2075 44.3267C44.0864 44.6092 43.9431 44.8799 43.782 45.1398C43.5731 45.4816 43.3341 45.8008 43.0705 46.0981C41.8564 47.4575 37.7333 49.8813 36.214 50.8661L32.8408 52.9528C30.3695 54.4948 28.0324 55.5858 25.087 55.6599C24.9475 55.6638 24.8119 55.6677 24.6762 55.6677C24.4858 55.6677 24.2985 55.6638 24.1112 55.6568C19.1231 55.464 14.7726 52.753 12.2643 48.7466C11.1165 46.9159 10.3573 44.8144 10.1006 42.5568C10.6394 45.6424 13.2957 47.9819 16.4977 47.9819C17.62 47.9819 18.673 47.6963 19.5933 47.1906C19.6003 47.1867 19.608 47.1828 19.6157 47.1797L19.9456 46.9791L21.2884 46.1769L22.9973 45.1523V45.1039L23.2178 44.9705L38.5095 35.7988L39.6866 35.0934L39.8037 35.134C39.8076 35.134 39.8145 35.1379 39.8184 35.1379C40.156 35.2229 40.4859 35.3384 40.8012 35.4797C41.5311 35.7988 42.191 36.2522 42.756 36.8055C42.9834 37.0248 43.1923 37.262 43.3865 37.5149C43.5515 37.7263 43.7018 37.9495 43.8375 38.1828C44.4302 39.1841 44.7717 40.3616 44.7717 41.6165Z" fill="url(#paint1_linear_36_2239)"/>\n  <path d="M23.0013 11.0082L22.9959 45.1507L21.287 46.1761L19.9434 46.9775L19.6127 47.1804C19.6073 47.1804 19.5973 47.1859 19.5927 47.1906C18.6708 47.6931 17.6178 47.9826 16.4947 47.9826C13.2919 47.9826 10.6403 45.6431 10.0984 42.5575C10.0729 42.4155 10.0537 42.268 10.0383 42.126C10.0182 41.8568 10.0036 41.593 9.99817 41.3238V2.8986C9.99817 1.68591 10.971 0.696411 12.1734 0.696411C12.6244 0.696411 13.0453 0.838438 13.3914 1.07177L20.0428 5.47146C20.0783 5.5019 20.1176 5.52765 20.1585 5.55262C21.8782 6.74034 23.0013 8.73963 23.0013 11.0082Z" fill="url(#paint2_linear_36_2239)"/>\n  <path opacity="0.15" d="M44.7717 41.6165C44.7717 42.0472 44.7316 42.4631 44.6576 42.8682C44.6353 42.9758 44.6137 43.0835 44.5883 43.1912C44.5405 43.384 44.4896 43.5697 44.4272 43.7554C44.394 43.8522 44.3609 43.9482 44.3246 44.041C44.2876 44.1378 44.2475 44.2307 44.2075 44.3267C44.0864 44.6092 43.9431 44.8799 43.782 45.1398C43.5731 45.4816 43.3349 45.8008 43.0705 46.0981C41.8564 47.4575 37.7333 49.8813 36.214 50.8661L32.8408 52.9528C30.3695 54.4948 28.0324 55.5858 25.087 55.6599C24.9475 55.6638 24.8119 55.6677 24.6762 55.6677C24.4858 55.6677 24.2985 55.6638 24.1112 55.6568C19.1231 55.464 14.7726 52.753 12.2643 48.7466C11.1165 46.9159 10.3573 44.8144 10.1006 42.5568C10.6394 45.6424 13.2957 47.9819 16.4977 47.9819C17.62 47.9819 18.673 47.6963 19.5933 47.1906C19.6003 47.1867 19.608 47.1828 19.6157 47.1797L19.9456 46.9791L21.2884 46.1769L22.9973 45.1523V45.1039L23.2178 44.9705L38.5095 35.7988L39.6866 35.0934L39.8037 35.134C39.8076 35.134 39.8145 35.1379 39.8184 35.1379C40.156 35.2229 40.4859 35.3384 40.8012 35.4797C41.5311 35.7988 42.191 36.2522 42.756 36.8055C42.9834 37.0248 43.1923 37.262 43.3865 37.5149C43.5515 37.7263 43.7018 37.9495 43.8375 38.1828C44.4302 39.1841 44.7717 40.3616 44.7717 41.6165Z" fill="url(#paint3_linear_36_2239)"/>\n  <path opacity="0.1" d="M23.0013 11.0082L22.9959 45.1507L21.287 46.1761L19.9434 46.9775L19.6127 47.1804C19.6073 47.1804 19.5973 47.1859 19.5927 47.1906C18.6708 47.6931 17.6178 47.9826 16.4947 47.9826C13.2919 47.9826 10.6403 45.6431 10.0984 42.5575C10.0729 42.4155 10.0537 42.268 10.0383 42.126C10.0182 41.8568 10.0036 41.593 9.99817 41.3238V2.8986C9.99817 1.68591 10.971 0.696411 12.1734 0.696411C12.6244 0.696411 13.0453 0.838438 13.3914 1.07177L20.0428 5.47146C20.0783 5.5019 20.1176 5.52765 20.1585 5.55262C21.8782 6.74034 23.0013 8.73963 23.0013 11.0082Z" fill="url(#paint4_linear_36_2239)"/>\n  </g>\n  <defs>\n  <linearGradient id="paint0_linear_36_2239" x1="24.061" y1="24.49" x2="48.0304" y2="38.1597" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_36_2239" x1="10.099" y1="45.3798" x2="44.7715" y2="45.3798" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint2_linear_36_2239" x1="16.4996" y1="48.4653" x2="16.4996" y2="1.52914" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint3_linear_36_2239" x1="16.9908" y1="54.0427" x2="38.6508" y2="32.6475" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint4_linear_36_2239" x1="16.4996" y1="0.696411" x2="16.4996" y2="47.9822" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_36_2239">\n  <rect width="37" height="56" fill="white" transform="translate(10)"/>\n  </clipPath>\n  </defs>\n  </svg>\n  ',
			CibLogoIcons.CibLogoWithBubble12 = '<svg width="16" height="15" viewBox="0 0 16 15" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g filter="url(#filter0_dd_1360_20275)">\n  <path d="M8 1C11.3137 1 14 3.68589 14 6.99911C14 10.3123 11.3137 12.9982 8 12.9982C7.33301 12.9982 6.68145 12.8891 6.06567 12.6795C5.5001 12.4871 4.89307 12.3967 4.31492 12.5472L2.63923 12.9834C2.36666 13.0544 2.08814 12.891 2.01715 12.6185C1.99519 12.5342 1.99519 12.4458 2.01713 12.3615L2.45268 10.6886C2.6034 10.1097 2.51262 9.5019 2.31959 8.93572C2.10944 8.3193 2 7.66695 2 6.99911C2 3.68589 4.68629 1 8 1Z" fill="url(#paint0_linear_1360_20275)"/>\n  <path d="M2.51314 12.4996L2.51327 12.4995L4.18896 12.0633C4.89676 11.8791 5.61009 11.9963 6.22675 12.2062C6.79062 12.3981 7.38777 12.4982 8 12.4982C11.0376 12.4982 13.5 10.0361 13.5 6.99911C13.5 3.9621 11.0376 1.5 8 1.5C4.96236 1.5 2.5 3.9621 2.5 6.99911C2.5 7.61211 2.60041 8.20995 2.79284 8.77437C3.00329 9.39164 3.12106 10.1059 2.93655 10.8146L2.501 12.4874L2.51314 12.4996ZM2.51314 12.4996C2.51092 12.5001 2.50993 12.5 2.5094 12.4999C2.50851 12.4998 2.50714 12.4994 2.5056 12.4985C2.50406 12.4976 2.50304 12.4966 2.5025 12.4959C2.50217 12.4955 2.50158 12.4946 2.501 12.4924L2.50098 12.4924M2.51314 12.4996L2.50098 12.4924M2.50098 12.4924C2.50059 12.4908 2.50056 12.4891 2.501 12.4874L2.50098 12.4924Z" stroke="url(#paint1_linear_1360_20275)"/>\n  <path d="M2.51314 12.4996L2.51327 12.4995L4.18896 12.0633C4.89676 11.8791 5.61009 11.9963 6.22675 12.2062C6.79062 12.3981 7.38777 12.4982 8 12.4982C11.0376 12.4982 13.5 10.0361 13.5 6.99911C13.5 3.9621 11.0376 1.5 8 1.5C4.96236 1.5 2.5 3.9621 2.5 6.99911C2.5 7.61211 2.60041 8.20995 2.79284 8.77437C3.00329 9.39164 3.12106 10.1059 2.93655 10.8146L2.501 12.4874L2.51314 12.4996ZM2.51314 12.4996C2.51092 12.5001 2.50993 12.5 2.5094 12.4999C2.50851 12.4998 2.50714 12.4994 2.5056 12.4985C2.50406 12.4976 2.50304 12.4966 2.5025 12.4959C2.50217 12.4955 2.50158 12.4946 2.501 12.4924L2.50098 12.4924M2.51314 12.4996L2.50098 12.4924M2.50098 12.4924C2.50059 12.4908 2.50056 12.4891 2.501 12.4874L2.50098 12.4924Z" stroke="url(#paint2_radial_1360_20275)" stroke-opacity="0.6"/>\n  <path d="M2.51314 12.4996L2.51327 12.4995L4.18896 12.0633C4.89676 11.8791 5.61009 11.9963 6.22675 12.2062C6.79062 12.3981 7.38777 12.4982 8 12.4982C11.0376 12.4982 13.5 10.0361 13.5 6.99911C13.5 3.9621 11.0376 1.5 8 1.5C4.96236 1.5 2.5 3.9621 2.5 6.99911C2.5 7.61211 2.60041 8.20995 2.79284 8.77437C3.00329 9.39164 3.12106 10.1059 2.93655 10.8146L2.501 12.4874L2.51314 12.4996ZM2.51314 12.4996C2.51092 12.5001 2.50993 12.5 2.5094 12.4999C2.50851 12.4998 2.50714 12.4994 2.5056 12.4985C2.50406 12.4976 2.50304 12.4966 2.5025 12.4959C2.50217 12.4955 2.50158 12.4946 2.501 12.4924L2.50098 12.4924M2.51314 12.4996L2.50098 12.4924M2.50098 12.4924C2.50059 12.4908 2.50056 12.4891 2.501 12.4874L2.50098 12.4924Z" stroke="url(#paint3_radial_1360_20275)" stroke-opacity="0.8"/>\n  </g>\n  <g clip-path="url(#clip0_1360_20275)" filter="url(#filter1_i_1360_20275)">\n  <g clip-path="url(#clip1_1360_20275)">\n  <path d="M10.6998 8.02689C10.6998 8.09702 10.696 8.16675 10.6884 8.23548C10.6432 8.65467 10.4624 9.03373 10.1902 9.3269C10.2245 9.28867 10.2554 9.24764 10.2825 9.20369C10.3034 9.17028 10.322 9.13546 10.3377 9.09914C10.3434 9.0872 10.3486 9.07476 10.3529 9.06242C10.3581 9.05048 10.3624 9.03804 10.3662 9.0257C10.3705 9.01426 10.3743 9.00232 10.3776 8.99038C10.3809 8.97794 10.3843 8.9656 10.3871 8.95316C10.3876 8.95176 10.3881 8.95025 10.3885 8.94885C10.3914 8.9364 10.3937 8.92406 10.3961 8.91162C10.3985 8.89878 10.4009 8.88584 10.4028 8.87299C10.4028 8.87249 10.4028 8.87249 10.4028 8.87209C10.4047 8.86015 10.4061 8.84821 10.4071 8.83577C10.41 8.80758 10.4114 8.77948 10.4114 8.75079C10.4114 8.58945 10.3671 8.43805 10.2896 8.30922C10.272 8.27913 10.2525 8.25053 10.2311 8.22334C10.2059 8.19083 10.1788 8.16033 10.1493 8.13214C10.076 8.061 9.99045 8.00271 9.89575 7.96167C9.85485 7.94351 9.81205 7.92876 9.76825 7.91773C9.76775 7.91773 9.76685 7.91723 9.76635 7.91723L9.75115 7.91201L9.52945 7.83566V7.83515L8.94945 7.63509C8.94755 7.63459 8.94515 7.63459 8.94375 7.63419L8.90755 7.62084C8.79095 7.57499 8.69435 7.48911 8.63395 7.37974L8.42225 6.83785L8.17956 6.21719L8.13296 6.09739L8.12106 6.07301C8.10776 6.0405 8.10056 6.00519 8.10056 5.96846C8.10056 5.95893 8.10056 5.9494 8.10156 5.94077C8.11536 5.80422 8.23095 5.69727 8.37085 5.69727C8.40795 5.69727 8.44365 5.70489 8.47605 5.71874L9.55685 6.27478L9.77005 6.38414C9.88285 6.45147 9.98795 6.53073 10.084 6.62002C10.4323 6.94089 10.6607 7.39058 10.695 7.89335C10.6979 7.93769 10.6998 7.98204 10.6998 8.02689Z" fill="url(#paint4_linear_1360_20275)"/>\n  <path d="M10.411 8.75067C10.411 8.80605 10.4058 8.85953 10.3962 8.9116C10.3933 8.92545 10.3905 8.93929 10.3872 8.95314C10.381 8.97792 10.3744 9.0018 10.3663 9.02568C10.362 9.03812 10.3577 9.05046 10.353 9.0624C10.3482 9.07484 10.343 9.08678 10.3378 9.09912C10.3221 9.13544 10.3035 9.17026 10.2826 9.20367C10.2555 9.24762 10.2245 9.28865 10.1903 9.32688C10.0328 9.50166 9.4979 9.81329 9.3008 9.93991L8.8632 10.2082C8.5426 10.4065 8.2394 10.5467 7.85731 10.5563C7.83921 10.5568 7.82161 10.5573 7.80401 10.5573C7.77931 10.5573 7.75501 10.5568 7.73071 10.5559C7.08361 10.5311 6.51921 10.1825 6.19381 9.66741C6.04492 9.43203 5.94642 9.16183 5.91312 8.87157C5.98302 9.26828 6.32761 9.56908 6.74301 9.56908C6.88861 9.56908 7.02521 9.53236 7.14461 9.46734C7.14551 9.46684 7.14651 9.46634 7.14751 9.46594L7.19031 9.44015L7.36451 9.33701L7.58621 9.20527V9.19905L7.61481 9.1819L9.5986 8.00269L9.7513 7.91199L9.7665 7.9172C9.767 7.9172 9.7679 7.91771 9.7684 7.91771C9.8122 7.92864 9.85499 7.94349 9.89589 7.96165C9.99059 8.00269 10.0762 8.06098 10.1495 8.13212C10.179 8.16031 10.2061 8.19081 10.2313 8.22332C10.2527 8.25051 10.2722 8.2792 10.2898 8.3092C10.3667 8.43793 10.411 8.58933 10.411 8.75067Z" fill="url(#paint5_linear_1360_20275)"/>\n  <path d="M7.5867 4.8153L7.586 9.20505L7.3643 9.33689L7.19 9.43993L7.1471 9.46602C7.1464 9.46602 7.1451 9.46672 7.1445 9.46732C7.0249 9.53193 6.88831 9.56916 6.74261 9.56916C6.32711 9.56916 5.98311 9.26836 5.91281 8.87165C5.90951 8.85338 5.90701 8.83442 5.90501 8.81616C5.90241 8.78155 5.90051 8.74763 5.89981 8.71302V3.77264C5.89981 3.61672 6.02601 3.4895 6.18201 3.4895C6.24051 3.4895 6.29511 3.50776 6.34001 3.53776L7.2029 4.10344C7.2075 4.10735 7.2126 4.11066 7.2179 4.11387C7.441 4.26658 7.5867 4.52363 7.5867 4.8153Z" fill="url(#paint6_linear_1360_20275)"/>\n  <path opacity="0.15" d="M10.411 8.75067C10.411 8.80605 10.4058 8.85953 10.3962 8.9116C10.3933 8.92545 10.3905 8.93929 10.3872 8.95314C10.381 8.97792 10.3744 9.0018 10.3663 9.02568C10.362 9.03812 10.3577 9.05046 10.353 9.0624C10.3482 9.07484 10.343 9.08678 10.3378 9.09912C10.3221 9.13544 10.3035 9.17026 10.2826 9.20367C10.2555 9.24762 10.2246 9.28865 10.1903 9.32688C10.0328 9.50166 9.4979 9.81329 9.3008 9.93991L8.8632 10.2082C8.5426 10.4065 8.2394 10.5467 7.85731 10.5563C7.83921 10.5568 7.82161 10.5573 7.80401 10.5573C7.77931 10.5573 7.75501 10.5568 7.73071 10.5559C7.08361 10.5311 6.51921 10.1825 6.19381 9.66741C6.04492 9.43203 5.94642 9.16183 5.91312 8.87157C5.98302 9.26828 6.32761 9.56908 6.74301 9.56908C6.88861 9.56908 7.02521 9.53236 7.14461 9.46734C7.14551 9.46684 7.14651 9.46634 7.14751 9.46594L7.19031 9.44015L7.36451 9.33701L7.58621 9.20527V9.19905L7.61481 9.1819L9.5986 8.00269L9.7513 7.91199L9.7665 7.9172C9.767 7.9172 9.7679 7.91771 9.7684 7.91771C9.8122 7.92864 9.85499 7.94349 9.89589 7.96165C9.99059 8.00269 10.0762 8.06098 10.1495 8.13212C10.179 8.16031 10.2061 8.19081 10.2313 8.22332C10.2527 8.25051 10.2722 8.2792 10.2898 8.3092C10.3667 8.43793 10.411 8.58933 10.411 8.75067Z" fill="url(#paint7_linear_1360_20275)"/>\n  <path opacity="0.1" d="M7.5867 4.8153L7.586 9.20505L7.3643 9.33689L7.19 9.43993L7.1471 9.46602C7.1464 9.46602 7.1451 9.46672 7.1445 9.46732C7.0249 9.53193 6.88831 9.56916 6.74261 9.56916C6.32711 9.56916 5.98311 9.26836 5.91281 8.87165C5.90951 8.85338 5.90701 8.83442 5.90501 8.81616C5.90241 8.78155 5.90051 8.74763 5.89981 8.71302V3.77264C5.89981 3.61672 6.02601 3.4895 6.18201 3.4895C6.24051 3.4895 6.29511 3.50776 6.34001 3.53776L7.2029 4.10344C7.2075 4.10735 7.2126 4.11066 7.2179 4.11387C7.441 4.26658 7.5867 4.52363 7.5867 4.8153Z" fill="url(#paint8_linear_1360_20275)"/>\n  </g>\n  </g>\n  <defs>\n  <filter id="filter0_dd_1360_20275" x="0.8" y="0.4" width="14.4" height="14.4" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset/>\n  <feGaussianBlur stdDeviation="0.3"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.12 0"/>\n  <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1360_20275"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="0.6"/>\n  <feGaussianBlur stdDeviation="0.6"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0"/>\n  <feBlend mode="normal" in2="effect1_dropShadow_1360_20275" result="effect2_dropShadow_1360_20275"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_1360_20275" result="shape"/>\n  </filter>\n  <filter id="filter1_i_1360_20275" x="4.40002" y="3.40002" width="7.20001" height="8.09995" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="0.9"/>\n  <feGaussianBlur stdDeviation="1.4625"/>\n  <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0.81875 0 0 0 0 0.824081 0 0 0 0 1 0 0 0 0.37 0"/>\n  <feBlend mode="normal" in2="shape" result="effect1_innerShadow_1360_20275"/>\n  </filter>\n  <linearGradient id="paint0_linear_1360_20275" x1="8" y1="1" x2="8" y2="13" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#F9F9F9"/>\n  <stop offset="1" stop-color="#EDF0F9"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_1360_20275" x1="2.0458" y1="15.25" x2="15.5215" y2="13.2641" gradientUnits="userSpaceOnUse">\n  <stop offset="0.107946" stop-color="#1D6CF2"/>\n  <stop offset="0.870845" stop-color="#1B4AEF"/>\n  </linearGradient>\n  <radialGradient id="paint2_radial_1360_20275" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(5.10714 11.7143) rotate(14.0362) scale(10.6023)">\n  <stop stop-color="#0B31A3"/>\n  <stop offset="1" stop-color="#39A0ED"/>\n  </radialGradient>\n  <radialGradient id="paint3_radial_1360_20275" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(6.07143 5.28571) rotate(-140.774) scale(6.77716)">\n  <stop stop-color="#00FFF3" stop-opacity="0.77"/>\n  <stop offset="0.423394" stop-color="#00FFF3" stop-opacity="0.72"/>\n  <stop offset="1" stop-color="#5BDCD6" stop-opacity="0"/>\n  </radialGradient>\n  <linearGradient id="paint4_linear_1360_20275" x1="7.72421" y1="6.54873" x2="10.82" y2="8.33016" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint5_linear_1360_20275" x1="5.91292" y1="9.23453" x2="10.411" y2="9.23453" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint6_linear_1360_20275" x1="6.74325" y1="9.63121" x2="6.74325" y2="3.59657" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint7_linear_1360_20275" x1="6.80698" y1="10.3483" x2="9.59203" y2="7.57253" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint8_linear_1360_20275" x1="6.74325" y1="3.4895" x2="6.74325" y2="9.5691" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_1360_20275">\n  <rect width="7.2" height="7.2" fill="white" transform="translate(4.40002 3.40002)"/>\n  </clipPath>\n  <clipPath id="clip1_1360_20275">\n  <rect width="4.8" height="7.2" fill="white" transform="translate(5.90002 3.40002)"/>\n  </clipPath>\n  </defs>\n  </svg>\n  ',
			CibLogoIcons.CibLogoWithBubble16 = '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g filter="url(#filter0_dd_1360_20276)">\n  <path d="M10 1C14.4182 1 18 4.58119 18 8.99881C18 13.4164 14.4182 16.9976 10 16.9976C9.11068 16.9976 8.24193 16.8521 7.42089 16.5727C6.6668 16.3161 5.85743 16.1956 5.08656 16.3963L2.8523 16.9779C2.48888 17.0726 2.11752 16.8547 2.02286 16.4913C1.99359 16.379 1.99358 16.261 2.02284 16.1486L2.60357 13.9181C2.80453 13.1463 2.68349 12.3359 2.42612 11.581C2.14592 10.7591 2 9.88926 2 8.99881C2 4.58119 5.58172 1 10 1Z" fill="url(#paint0_linear_1360_20276)"/>\n  <path d="M2.72635 16.494L2.72622 16.494C2.63005 16.5191 2.53177 16.4614 2.50672 16.3653L2.5067 16.3652C2.49898 16.3356 2.49896 16.3044 2.50671 16.2746L3.08744 14.0441C3.3222 13.1424 3.17416 12.2256 2.89937 11.4196C2.63689 10.6497 2.5 9.83442 2.5 8.99881C2.5 4.8574 5.85779 1.5 10 1.5C14.1422 1.5 17.5 4.8574 17.5 8.99881C17.5 13.1402 14.1422 16.4976 10 16.4976C9.16544 16.4976 8.3511 16.3611 7.58197 16.0994C6.77679 15.8254 5.86112 15.678 4.9606 15.9124L2.72635 16.494Z" stroke="url(#paint1_linear_1360_20276)"/>\n  <path d="M2.72635 16.494L2.72622 16.494C2.63005 16.5191 2.53177 16.4614 2.50672 16.3653L2.5067 16.3652C2.49898 16.3356 2.49896 16.3044 2.50671 16.2746L3.08744 14.0441C3.3222 13.1424 3.17416 12.2256 2.89937 11.4196C2.63689 10.6497 2.5 9.83442 2.5 8.99881C2.5 4.8574 5.85779 1.5 10 1.5C14.1422 1.5 17.5 4.8574 17.5 8.99881C17.5 13.1402 14.1422 16.4976 10 16.4976C9.16544 16.4976 8.3511 16.3611 7.58197 16.0994C6.77679 15.8254 5.86112 15.678 4.9606 15.9124L2.72635 16.494Z" stroke="url(#paint2_radial_1360_20276)" stroke-opacity="0.6"/>\n  <path d="M2.72635 16.494L2.72622 16.494C2.63005 16.5191 2.53177 16.4614 2.50672 16.3653L2.5067 16.3652C2.49898 16.3356 2.49896 16.3044 2.50671 16.2746L3.08744 14.0441C3.3222 13.1424 3.17416 12.2256 2.89937 11.4196C2.63689 10.6497 2.5 9.83442 2.5 8.99881C2.5 4.8574 5.85779 1.5 10 1.5C14.1422 1.5 17.5 4.8574 17.5 8.99881C17.5 13.1402 14.1422 16.4976 10 16.4976C9.16544 16.4976 8.3511 16.3611 7.58197 16.0994C6.77679 15.8254 5.86112 15.678 4.9606 15.9124L2.72635 16.494Z" stroke="url(#paint3_radial_1360_20276)" stroke-opacity="0.8"/>\n  </g>\n  <g clip-path="url(#clip0_1360_20276)" filter="url(#filter1_i_1360_20276)">\n  <g clip-path="url(#clip1_1360_20276)">\n  <path d="M13.5996 10.3691C13.5996 10.4626 13.5946 10.5556 13.5844 10.6472C13.5242 11.2061 13.2831 11.7116 12.9202 12.1025C12.9659 12.0515 13.0071 11.9968 13.0432 11.9382C13.0711 11.8936 13.0959 11.8472 13.1168 11.7988C13.1244 11.7829 13.1314 11.7663 13.1371 11.7498C13.144 11.7339 13.1498 11.7173 13.1548 11.7009C13.1606 11.6856 13.1656 11.6697 13.17 11.6538C13.1744 11.6372 13.179 11.6207 13.1827 11.6041C13.1834 11.6023 13.184 11.6003 13.1846 11.5984C13.1884 11.5818 13.1915 11.5653 13.1947 11.5487C13.1979 11.5316 13.2011 11.5144 13.2036 11.4972C13.2036 11.4966 13.2036 11.4966 13.2036 11.496C13.2062 11.4801 13.208 11.4642 13.2094 11.4476C13.2132 11.41 13.2151 11.3726 13.2151 11.3343C13.2151 11.1192 13.156 10.9173 13.0527 10.7456C13.0292 10.7054 13.0032 10.6673 12.9747 10.631C12.9411 10.5877 12.905 10.547 12.8656 10.5094C12.7679 10.4146 12.6538 10.3369 12.5275 10.2821C12.473 10.2579 12.4159 10.2383 12.3575 10.2236C12.3568 10.2236 12.3556 10.2229 12.355 10.2229L12.3347 10.2159L12.0391 10.1141V10.1135L11.2658 9.84671C11.2632 9.84604 11.26 9.84604 11.2582 9.8455L11.2099 9.82771C11.0544 9.76657 10.9256 9.65206 10.8451 9.50624L10.5628 8.78371L10.2392 7.95617L10.1771 7.79644L10.1612 7.76393C10.1435 7.72059 10.1339 7.6735 10.1339 7.62454C10.1339 7.61183 10.1339 7.59912 10.1352 7.58762C10.1536 7.40555 10.3078 7.26294 10.4943 7.26294C10.5438 7.26294 10.5914 7.27311 10.6346 7.29157L12.0756 8.03296L12.3599 8.17878C12.5103 8.26854 12.6504 8.37422 12.7786 8.49329C13.243 8.9211 13.5475 9.52069 13.5932 10.191C13.5971 10.2502 13.5996 10.3093 13.5996 10.3691Z" fill="url(#paint4_linear_1360_20276)"/>\n  <path d="M13.2145 11.3342C13.2145 11.408 13.2076 11.4793 13.1948 11.5488C13.1909 11.5672 13.1872 11.5857 13.1828 11.6041C13.1745 11.6372 13.1657 11.669 13.1549 11.7009C13.1492 11.7175 13.1434 11.7339 13.1372 11.7498C13.1308 11.7664 13.1238 11.7823 13.1169 11.7988C13.096 11.8472 13.0712 11.8936 13.0433 11.9382C13.0072 11.9968 12.9658 12.0515 12.9202 12.1025C12.7102 12.3355 11.9971 12.751 11.7343 12.9198L11.1508 13.2776C10.7233 13.5419 10.3191 13.7289 9.8096 13.7416C9.78547 13.7423 9.762 13.743 9.73853 13.743C9.7056 13.743 9.6732 13.7423 9.6408 13.7411C8.778 13.7081 8.02548 13.2433 7.59161 12.5565C7.39308 12.2427 7.26175 11.8824 7.21735 11.4954C7.31055 12.0243 7.77001 12.4254 8.32387 12.4254C8.51801 12.4254 8.70014 12.3764 8.85934 12.2898C8.86054 12.2891 8.86187 12.2884 8.8632 12.2879L8.92027 12.2535L9.15254 12.116L9.44813 11.9403V11.932L9.48627 11.9092L12.1313 10.3369L12.3349 10.2159L12.3552 10.2229C12.3559 10.2229 12.3571 10.2236 12.3577 10.2236C12.4161 10.2381 12.4732 10.2579 12.5277 10.2822C12.654 10.3369 12.7681 10.4146 12.8658 10.5094C12.9052 10.547 12.9413 10.5877 12.9749 10.6311C13.0034 10.6673 13.0294 10.7056 13.0529 10.7456C13.1554 10.9172 13.2145 11.1191 13.2145 11.3342Z" fill="url(#paint5_linear_1360_20276)"/>\n  <path d="M9.44886 6.08706L9.44793 11.9401L9.15233 12.1159L8.91993 12.2532L8.86273 12.288C8.8618 12.288 8.86007 12.289 8.85927 12.2898C8.6998 12.3759 8.51767 12.4255 8.3234 12.4255C7.76941 12.4255 7.31074 12.0245 7.21701 11.4955C7.21261 11.4712 7.20928 11.4459 7.20661 11.4215C7.20314 11.3754 7.20061 11.3302 7.19968 11.284V4.69685C7.19968 4.48896 7.36794 4.31934 7.57594 4.31934C7.65394 4.31934 7.72674 4.34368 7.78661 4.38368L8.93713 5.13792C8.94327 5.14313 8.95007 5.14755 8.95713 5.15183C9.2546 5.35544 9.44886 5.69817 9.44886 6.08706Z" fill="url(#paint6_linear_1360_20276)"/>\n  <path opacity="0.15" d="M13.2145 11.3342C13.2145 11.408 13.2076 11.4793 13.1948 11.5488C13.1909 11.5672 13.1872 11.5857 13.1828 11.6041C13.1745 11.6372 13.1657 11.669 13.1549 11.7009C13.1492 11.7175 13.1434 11.7339 13.1372 11.7498C13.1308 11.7664 13.1238 11.7823 13.1169 11.7988C13.096 11.8472 13.0712 11.8936 13.0433 11.9382C13.0072 11.9968 12.966 12.0515 12.9202 12.1025C12.7102 12.3355 11.9971 12.751 11.7343 12.9198L11.1508 13.2776C10.7233 13.5419 10.3191 13.7289 9.8096 13.7416C9.78547 13.7423 9.762 13.743 9.73853 13.743C9.7056 13.743 9.6732 13.7423 9.6408 13.7411C8.778 13.7081 8.02548 13.2433 7.59161 12.5565C7.39308 12.2427 7.26175 11.8824 7.21735 11.4954C7.31055 12.0243 7.77001 12.4254 8.32387 12.4254C8.51801 12.4254 8.70014 12.3764 8.85934 12.2898C8.86054 12.2891 8.86187 12.2884 8.8632 12.2879L8.92027 12.2535L9.15254 12.116L9.44813 11.9403V11.932L9.48627 11.9092L12.1313 10.3369L12.3349 10.2159L12.3552 10.2229C12.3559 10.2229 12.3571 10.2236 12.3577 10.2236C12.4161 10.2381 12.4732 10.2579 12.5277 10.2822C12.654 10.3369 12.7681 10.4146 12.8658 10.5094C12.9052 10.547 12.9413 10.5877 12.9749 10.6311C13.0034 10.6673 13.0294 10.7056 13.0529 10.7456C13.1554 10.9172 13.2145 11.1191 13.2145 11.3342Z" fill="url(#paint7_linear_1360_20276)"/>\n  <path opacity="0.1" d="M9.44886 6.08706L9.44793 11.9401L9.15233 12.1159L8.91993 12.2532L8.86273 12.288C8.8618 12.288 8.86007 12.289 8.85927 12.2898C8.6998 12.3759 8.51767 12.4255 8.3234 12.4255C7.76941 12.4255 7.31074 12.0245 7.21701 11.4955C7.21261 11.4712 7.20928 11.4459 7.20661 11.4215C7.20314 11.3754 7.20061 11.3302 7.19968 11.284V4.69685C7.19968 4.48896 7.36794 4.31934 7.57594 4.31934C7.65394 4.31934 7.72674 4.34368 7.78661 4.38368L8.93713 5.13792C8.94327 5.14313 8.95007 5.14755 8.95713 5.15183C9.2546 5.35544 9.44886 5.69817 9.44886 6.08706Z" fill="url(#paint8_linear_1360_20276)"/>\n  </g>\n  </g>\n  <defs>\n  <filter id="filter0_dd_1360_20276" x="0.4" y="0.2" width="19.2" height="19.2" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset/>\n  <feGaussianBlur stdDeviation="0.4"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.12 0"/>\n  <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1360_20276"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="0.8"/>\n  <feGaussianBlur stdDeviation="0.8"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0"/>\n  <feBlend mode="normal" in2="effect1_dropShadow_1360_20276" result="effect2_dropShadow_1360_20276"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_1360_20276" result="shape"/>\n  </filter>\n  <filter id="filter1_i_1360_20276" x="5.19998" y="4.19995" width="9.60001" height="10.8" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="1.2"/>\n  <feGaussianBlur stdDeviation="1.95"/>\n  <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0.81875 0 0 0 0 0.824081 0 0 0 0 1 0 0 0 0.37 0"/>\n  <feBlend mode="normal" in2="shape" result="effect1_innerShadow_1360_20276"/>\n  </filter>\n  <linearGradient id="paint0_linear_1360_20276" x1="10" y1="1" x2="10" y2="17" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#F9F9F9"/>\n  <stop offset="1" stop-color="#EDF0F9"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_1360_20276" x1="2.06107" y1="20" x2="20.0286" y2="17.3521" gradientUnits="userSpaceOnUse">\n  <stop offset="0.107946" stop-color="#1D6CF2"/>\n  <stop offset="0.870845" stop-color="#1B4AEF"/>\n  </linearGradient>\n  <radialGradient id="paint2_radial_1360_20276" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(6.14286 15.2857) rotate(14.0362) scale(14.1364)">\n  <stop stop-color="#0B31A3"/>\n  <stop offset="1" stop-color="#39A0ED"/>\n  </radialGradient>\n  <radialGradient id="paint3_radial_1360_20276" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(7.42857 6.71429) rotate(-140.774) scale(9.03621)">\n  <stop stop-color="#00FFF3" stop-opacity="0.77"/>\n  <stop offset="0.423394" stop-color="#00FFF3" stop-opacity="0.72"/>\n  <stop offset="1" stop-color="#5BDCD6" stop-opacity="0"/>\n  </radialGradient>\n  <linearGradient id="paint4_linear_1360_20276" x1="9.63211" y1="8.39822" x2="13.7598" y2="10.7735" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint5_linear_1360_20276" x1="7.21708" y1="11.9793" x2="13.2145" y2="11.9793" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint6_linear_1360_20276" x1="8.32426" y1="12.5083" x2="8.32426" y2="4.46209" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint7_linear_1360_20276" x1="8.40917" y1="13.4644" x2="12.1226" y2="9.76334" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint8_linear_1360_20276" x1="8.32426" y1="4.31934" x2="8.32426" y2="12.4255" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_1360_20276">\n  <rect width="9.6" height="9.6" fill="white" transform="translate(5.19998 4.19995)"/>\n  </clipPath>\n  <clipPath id="clip1_1360_20276">\n  <rect width="6.4" height="9.6" fill="white" transform="translate(7.19998 4.19995)"/>\n  </clipPath>\n  </defs>\n  </svg>  \n  ',
			CibLogoIcons.CibLogoWithBubble20 = '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g filter="url(#filter0_dd_1360_20277)">\n  <path d="M12 1C17.5228 1 22 5.47648 22 10.9985C22 16.5205 17.5228 20.997 12 20.997C10.8884 20.997 9.80241 20.8151 8.77611 20.4659C7.83349 20.1451 6.82179 19.9945 5.85819 20.2453L3.06538 20.9723C2.6111 21.0907 2.1469 20.8184 2.02858 20.3641C1.99199 20.2237 1.99198 20.0763 2.02855 19.9358L2.75447 17.1476C3.00566 16.1828 2.85436 15.1698 2.53265 14.2262C2.18239 13.1988 2 12.1116 2 10.9985C2 5.47648 6.47715 1 12 1Z" fill="url(#paint0_linear_1360_20277)"/>\n  <path d="M2.93942 20.4885L2.9393 20.4885C2.75227 20.5372 2.56115 20.4251 2.51243 20.2381L2.51241 20.238C2.49738 20.1803 2.49735 20.1196 2.51242 20.0617L3.23834 17.2736C3.52333 16.179 3.34503 15.0596 3.0059 14.0649C2.67337 13.0895 2.5 12.0567 2.5 10.9985C2.5 5.7527 6.75322 1.5 12 1.5C17.2467 1.5 21.5 5.7527 21.5 10.9985C21.5 16.2443 17.2467 20.497 12 20.497C10.9431 20.497 9.91158 20.3241 8.93719 19.9926C7.94349 19.6544 6.82548 19.4769 5.73224 19.7615L2.93942 20.4885Z" stroke="url(#paint1_linear_1360_20277)"/>\n  <path d="M2.93942 20.4885L2.9393 20.4885C2.75227 20.5372 2.56115 20.4251 2.51243 20.2381L2.51241 20.238C2.49738 20.1803 2.49735 20.1196 2.51242 20.0617L3.23834 17.2736C3.52333 16.179 3.34503 15.0596 3.0059 14.0649C2.67337 13.0895 2.5 12.0567 2.5 10.9985C2.5 5.7527 6.75322 1.5 12 1.5C17.2467 1.5 21.5 5.7527 21.5 10.9985C21.5 16.2443 17.2467 20.497 12 20.497C10.9431 20.497 9.91158 20.3241 8.93719 19.9926C7.94349 19.6544 6.82548 19.4769 5.73224 19.7615L2.93942 20.4885Z" stroke="url(#paint2_radial_1360_20277)" stroke-opacity="0.6"/>\n  <path d="M2.93942 20.4885L2.9393 20.4885C2.75227 20.5372 2.56115 20.4251 2.51243 20.2381L2.51241 20.238C2.49738 20.1803 2.49735 20.1196 2.51242 20.0617L3.23834 17.2736C3.52333 16.179 3.34503 15.0596 3.0059 14.0649C2.67337 13.0895 2.5 12.0567 2.5 10.9985C2.5 5.7527 6.75322 1.5 12 1.5C17.2467 1.5 21.5 5.7527 21.5 10.9985C21.5 16.2443 17.2467 20.497 12 20.497C10.9431 20.497 9.91158 20.3241 8.93719 19.9926C7.94349 19.6544 6.82548 19.4769 5.73224 19.7615L2.93942 20.4885Z" stroke="url(#paint3_radial_1360_20277)" stroke-opacity="0.8"/>\n  </g>\n  <g filter="url(#filter1_i_1360_20277)">\n  <g clip-path="url(#clip0_1360_20277)">\n  <path d="M16.4996 12.7114C16.4996 12.8283 16.4933 12.9445 16.4806 13.0591C16.4053 13.7577 16.104 14.3895 15.6503 14.8781C15.7075 14.8144 15.759 14.746 15.8041 14.6728C15.839 14.6171 15.87 14.5591 15.8961 14.4985C15.9056 14.4786 15.9143 14.4579 15.9215 14.4373C15.9301 14.4174 15.9373 14.3967 15.9436 14.3761C15.9508 14.3571 15.9571 14.3372 15.9626 14.3173C15.9681 14.2965 15.9738 14.276 15.9785 14.2552C15.9793 14.2529 15.9801 14.2504 15.9808 14.248C15.9856 14.2273 15.9895 14.2067 15.9935 14.186C15.9975 14.1646 16.0015 14.143 16.0046 14.1216C16.0046 14.1208 16.0046 14.1208 16.0046 14.1201C16.0078 14.1002 16.0101 14.0803 16.0118 14.0596C16.0166 14.0126 16.019 13.9658 16.019 13.9179C16.019 13.649 15.9451 13.3967 15.816 13.182C15.7866 13.1318 15.7541 13.0842 15.7185 13.0389C15.6765 12.9847 15.6313 12.9338 15.5821 12.8869C15.46 12.7683 15.3173 12.6711 15.1595 12.6027C15.0913 12.5725 15.02 12.5479 14.947 12.5295C14.9461 12.5295 14.9446 12.5287 14.9438 12.5287L14.9185 12.52L14.549 12.3927V12.3919L13.5823 12.0584C13.5791 12.0576 13.5751 12.0576 13.5728 12.0569L13.5125 12.0347C13.3181 11.9583 13.1571 11.8151 13.0565 11.6329L12.7036 10.7297L12.2991 9.69528L12.2215 9.49561L12.2016 9.45498C12.1795 9.4008 12.1675 9.34194 12.1675 9.28073C12.1675 9.26485 12.1675 9.24896 12.1691 9.23458C12.1921 9.00699 12.3848 8.82874 12.618 8.82874C12.6798 8.82874 12.7393 8.84144 12.7933 8.86452L14.5946 9.79126L14.95 9.97353C15.138 10.0857 15.3131 10.2178 15.4733 10.3667C16.0538 10.9014 16.4345 11.6509 16.4916 12.4889C16.4965 12.5628 16.4996 12.6367 16.4996 12.7114Z" fill="url(#paint4_linear_1360_20277)"/>\n  <path d="M16.0182 13.9177C16.0182 14.01 16.0096 14.0991 15.9936 14.1859C15.9887 14.209 15.9841 14.2321 15.9786 14.2552C15.9682 14.2965 15.9572 14.3363 15.9437 14.3761C15.9366 14.3968 15.9294 14.4174 15.9216 14.4373C15.9136 14.458 15.9049 14.4779 15.8962 14.4985C15.8701 14.559 15.8391 14.617 15.8042 14.6727C15.7591 14.7459 15.7074 14.8143 15.6504 14.878C15.3879 15.1693 14.4964 15.6887 14.1679 15.8998L13.4386 16.3469C12.9043 16.6773 12.3989 16.9111 11.7621 16.927C11.7319 16.9278 11.7026 16.9287 11.6733 16.9287C11.6321 16.9287 11.5916 16.9278 11.5511 16.9263C10.4726 16.885 9.53195 16.3041 8.98962 15.4456C8.74146 15.0533 8.57729 14.603 8.52179 14.1192C8.63829 14.7804 9.21262 15.2817 9.90495 15.2817C10.1476 15.2817 10.3753 15.2205 10.5743 15.1122C10.5758 15.1113 10.5774 15.1105 10.5791 15.1098L10.6504 15.0668L10.9408 14.8949L11.3103 14.6754V14.665L11.3579 14.6364L14.6643 12.6711L14.9188 12.5199L14.9441 12.5286C14.9449 12.5286 14.9464 12.5294 14.9473 12.5294C15.0203 12.5477 15.0916 12.5724 15.1598 12.6027C15.3176 12.6711 15.4603 12.7682 15.5824 12.8868C15.6316 12.9338 15.6768 12.9846 15.7187 13.0388C15.7544 13.0841 15.7869 13.1319 15.8162 13.1819C15.9444 13.3965 16.0182 13.6488 16.0182 13.9177Z" fill="url(#paint5_linear_1360_20277)"/>\n  <path d="M11.3111 7.35883L11.31 14.6751L10.9405 14.8948L10.65 15.0665L10.5785 15.11C10.5773 15.11 10.5751 15.1112 10.5741 15.1122C10.3748 15.2199 10.1471 15.2819 9.90429 15.2819C9.2118 15.2819 8.63847 14.7806 8.5213 14.1194C8.5158 14.089 8.51163 14.0574 8.5083 14.0269C8.50397 13.9692 8.5008 13.9127 8.49963 13.855V5.62107C8.49963 5.36121 8.70997 5.14917 8.96996 5.14917C9.06746 5.14917 9.15846 5.1796 9.2333 5.2296L10.6715 6.1724C10.6791 6.17892 10.6876 6.18444 10.6965 6.18979C11.0683 6.4443 11.3111 6.87272 11.3111 7.35883Z" fill="url(#paint6_linear_1360_20277)"/>\n  <path opacity="0.15" d="M16.0182 13.9177C16.0182 14.01 16.0096 14.0991 15.9936 14.1859C15.9887 14.209 15.9841 14.2321 15.9786 14.2552C15.9682 14.2965 15.9572 14.3363 15.9437 14.3761C15.9366 14.3968 15.9294 14.4174 15.9216 14.4373C15.9136 14.458 15.9049 14.4779 15.8962 14.4985C15.8701 14.559 15.8391 14.617 15.8042 14.6727C15.7591 14.7459 15.7076 14.8143 15.6504 14.878C15.3879 15.1693 14.4964 15.6887 14.1679 15.8998L13.4386 16.3469C12.9043 16.6773 12.3989 16.9111 11.7621 16.927C11.7319 16.9278 11.7026 16.9287 11.6733 16.9287C11.6321 16.9287 11.5916 16.9278 11.5511 16.9263C10.4726 16.885 9.53195 16.3041 8.98962 15.4456C8.74146 15.0533 8.57729 14.603 8.52179 14.1192C8.63829 14.7804 9.21262 15.2817 9.90495 15.2817C10.1476 15.2817 10.3753 15.2205 10.5743 15.1122C10.5758 15.1113 10.5774 15.1105 10.5791 15.1098L10.6504 15.0668L10.9408 14.8949L11.3103 14.6754V14.665L11.3579 14.6364L14.6643 12.6711L14.9188 12.5199L14.9441 12.5286C14.9449 12.5286 14.9464 12.5294 14.9473 12.5294C15.0203 12.5477 15.0916 12.5724 15.1598 12.6027C15.3176 12.6711 15.4603 12.7682 15.5824 12.8868C15.6316 12.9338 15.6768 12.9846 15.7187 13.0388C15.7544 13.0841 15.7869 13.1319 15.8162 13.1819C15.9444 13.3965 16.0182 13.6488 16.0182 13.9177Z" fill="url(#paint7_linear_1360_20277)"/>\n  <path opacity="0.1" d="M11.3111 7.35883L11.31 14.6751L10.9405 14.8948L10.65 15.0665L10.5785 15.11C10.5773 15.11 10.5751 15.1112 10.5741 15.1122C10.3748 15.2199 10.1471 15.2819 9.90429 15.2819C9.2118 15.2819 8.63847 14.7806 8.5213 14.1194C8.5158 14.089 8.51163 14.0574 8.5083 14.0269C8.50397 13.9692 8.5008 13.9127 8.49963 13.855V5.62107C8.49963 5.36121 8.70997 5.14917 8.96996 5.14917C9.06746 5.14917 9.15846 5.1796 9.2333 5.2296L10.6715 6.1724C10.6791 6.17892 10.6876 6.18444 10.6965 6.18979C11.0683 6.4443 11.3111 6.87272 11.3111 7.35883Z" fill="url(#paint8_linear_1360_20277)"/>\n  </g>\n  </g>\n  <defs>\n  <filter id="filter0_dd_1360_20277" x="0" y="0" width="24" height="24" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset/>\n  <feGaussianBlur stdDeviation="0.5"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.12 0"/>\n  <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1360_20277"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="1"/>\n  <feGaussianBlur stdDeviation="1"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0"/>\n  <feBlend mode="normal" in2="effect1_dropShadow_1360_20277" result="effect2_dropShadow_1360_20277"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_1360_20277" result="shape"/>\n  </filter>\n  <filter id="filter1_i_1360_20277" x="6" y="5" width="12" height="13.5" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="1.5"/>\n  <feGaussianBlur stdDeviation="2.4375"/>\n  <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0.81875 0 0 0 0 0.824081 0 0 0 0 1 0 0 0 0.37 0"/>\n  <feBlend mode="normal" in2="shape" result="effect1_innerShadow_1360_20277"/>\n  </filter>\n  <linearGradient id="paint0_linear_1360_20277" x1="12" y1="1" x2="12" y2="21" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#F9F9F9"/>\n  <stop offset="1" stop-color="#EDF0F9"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_1360_20277" x1="2.07634" y1="24.75" x2="24.5358" y2="21.4401" gradientUnits="userSpaceOnUse">\n  <stop offset="0.107946" stop-color="#1D6CF2"/>\n  <stop offset="0.870845" stop-color="#1B4AEF"/>\n  </linearGradient>\n  <radialGradient id="paint2_radial_1360_20277" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(7.17857 18.8571) rotate(14.0362) scale(17.6705)">\n  <stop stop-color="#0B31A3"/>\n  <stop offset="1" stop-color="#39A0ED"/>\n  </radialGradient>\n  <radialGradient id="paint3_radial_1360_20277" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(8.78571 8.14286) rotate(-140.774) scale(11.2953)">\n  <stop stop-color="#00FFF3" stop-opacity="0.77"/>\n  <stop offset="0.423394" stop-color="#00FFF3" stop-opacity="0.72"/>\n  <stop offset="1" stop-color="#5BDCD6" stop-opacity="0"/>\n  </radialGradient>\n  <linearGradient id="paint4_linear_1360_20277" x1="11.5402" y1="10.2478" x2="16.6999" y2="13.2169" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint5_linear_1360_20277" x1="8.52146" y1="14.7241" x2="16.0182" y2="14.7241" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint6_linear_1360_20277" x1="9.90536" y1="15.3854" x2="9.90536" y2="5.32761" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint7_linear_1360_20277" x1="10.0116" y1="16.5805" x2="14.6533" y2="11.9541" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint8_linear_1360_20277" x1="9.90536" y1="5.14917" x2="9.90536" y2="15.2818" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_1360_20277">\n  <rect width="8" height="12" fill="white" transform="translate(8.5 5)"/>\n  </clipPath>\n  </defs>\n  </svg>  \n  ',
			CibLogoIcons.CibLogoWithBubble24 = '<svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g filter="url(#filter0_dd_1360_20278)">\n  <path d="M15 2C21.6274 2 27 7.37178 27 13.9982C27 20.6246 21.6274 25.9964 15 25.9964C13.666 25.9964 12.3629 25.7782 11.1313 25.3591C10.0002 24.9741 8.78614 24.7934 7.62983 25.0944L4.27846 25.9668C3.73332 26.1089 3.17628 25.782 3.0343 25.2369C2.99039 25.0685 2.99038 24.8915 3.03426 24.7229L3.90536 21.3771C4.20679 20.2194 4.02523 19.0038 3.63918 17.8714C3.21887 16.6386 3 15.3339 3 13.9982C3 7.37178 8.37258 2 15 2Z" fill="url(#paint0_linear_1360_20278)"/>\n  <path d="M4.1525 25.4829L4.15237 25.483C3.87449 25.5554 3.59053 25.3888 3.51815 25.1109L3.51813 25.1108C3.49578 25.0251 3.49575 24.9349 3.51813 24.8489C3.51813 24.8489 3.51813 24.8489 3.51813 24.8489L4.38923 21.5031C4.72446 20.2155 4.5159 18.8935 4.11243 17.7101C3.70985 16.5293 3.5 15.2791 3.5 13.9982C3.5 7.64799 8.64865 2.5 15 2.5C21.3513 2.5 26.5 7.648 26.5 13.9982C26.5 20.3484 21.3513 25.4964 15 25.4964C13.7208 25.4964 12.4721 25.2872 11.2924 24.8857C10.1102 24.4834 8.78983 24.2758 7.50388 24.6105L4.1525 25.4829Z" stroke="url(#paint1_linear_1360_20278)"/>\n  <path d="M4.1525 25.4829L4.15237 25.483C3.87449 25.5554 3.59053 25.3888 3.51815 25.1109L3.51813 25.1108C3.49578 25.0251 3.49575 24.9349 3.51813 24.8489C3.51813 24.8489 3.51813 24.8489 3.51813 24.8489L4.38923 21.5031C4.72446 20.2155 4.5159 18.8935 4.11243 17.7101C3.70985 16.5293 3.5 15.2791 3.5 13.9982C3.5 7.64799 8.64865 2.5 15 2.5C21.3513 2.5 26.5 7.648 26.5 13.9982C26.5 20.3484 21.3513 25.4964 15 25.4964C13.7208 25.4964 12.4721 25.2872 11.2924 24.8857C10.1102 24.4834 8.78983 24.2758 7.50388 24.6105L4.1525 25.4829Z" stroke="url(#paint2_radial_1360_20278)" stroke-opacity="0.6"/>\n  <path d="M4.1525 25.4829L4.15237 25.483C3.87449 25.5554 3.59053 25.3888 3.51815 25.1109L3.51813 25.1108C3.49578 25.0251 3.49575 24.9349 3.51813 24.8489C3.51813 24.8489 3.51813 24.8489 3.51813 24.8489L4.38923 21.5031C4.72446 20.2155 4.5159 18.8935 4.11243 17.7101C3.70985 16.5293 3.5 15.2791 3.5 13.9982C3.5 7.64799 8.64865 2.5 15 2.5C21.3513 2.5 26.5 7.648 26.5 13.9982C26.5 20.3484 21.3513 25.4964 15 25.4964C13.7208 25.4964 12.4721 25.2872 11.2924 24.8857C10.1102 24.4834 8.78983 24.2758 7.50388 24.6105L4.1525 25.4829Z" stroke="url(#paint3_radial_1360_20278)" stroke-opacity="0.8"/>\n  </g>\n  <g clip-path="url(#clip0_1360_20278)" filter="url(#filter1_i_1360_20278)">\n  <g clip-path="url(#clip1_1360_20278)">\n  <path d="M20.3996 16.0538C20.3996 16.194 20.392 16.3335 20.3768 16.471C20.2864 17.3093 19.9248 18.0675 19.3804 18.6538C19.449 18.5773 19.5108 18.4953 19.565 18.4074C19.6068 18.3406 19.644 18.2709 19.6754 18.1983C19.6868 18.1744 19.6972 18.1495 19.7058 18.1248C19.7162 18.101 19.7248 18.0761 19.7324 18.0514C19.741 18.0285 19.7486 18.0046 19.7552 17.9808C19.7618 17.9559 19.7686 17.9312 19.7742 17.9063C19.7752 17.9035 19.7762 17.9005 19.777 17.8977C19.7828 17.8728 19.7874 17.8481 19.7922 17.8232C19.797 17.7976 19.8018 17.7717 19.8056 17.746C19.8056 17.745 19.8056 17.745 19.8056 17.7442C19.8094 17.7203 19.8122 17.6964 19.8142 17.6715C19.82 17.6152 19.8228 17.559 19.8228 17.5016C19.8228 17.1789 19.7342 16.8761 19.5792 16.6184C19.544 16.5583 19.505 16.5011 19.4622 16.4467C19.4118 16.3817 19.3576 16.3207 19.2986 16.2643C19.152 16.122 18.9808 16.0054 18.7914 15.9233C18.7096 15.887 18.624 15.8575 18.5364 15.8355C18.5354 15.8355 18.5336 15.8345 18.5326 15.8345L18.5022 15.824L18.0588 15.6713V15.6703L16.8988 15.2702C16.895 15.2692 16.8902 15.2692 16.8874 15.2684L16.815 15.2417C16.5818 15.15 16.3886 14.9782 16.2678 14.7595L15.8444 13.6757L15.359 12.4344L15.2658 12.1948L15.242 12.146C15.2154 12.081 15.201 12.0104 15.201 11.9369C15.201 11.9179 15.201 11.8988 15.203 11.8815C15.2306 11.6084 15.4618 11.3945 15.7416 11.3945C15.8158 11.3945 15.8872 11.4098 15.952 11.4375L18.1136 12.5496L18.54 12.7683C18.7656 12.9029 18.9758 13.0615 19.168 13.24C19.8646 13.8818 20.3214 14.7812 20.39 15.7867C20.3958 15.8754 20.3996 15.9641 20.3996 16.0538Z" fill="url(#paint4_linear_1360_20278)"/>\n  <path d="M19.822 17.5015C19.822 17.6122 19.8116 17.7192 19.7924 17.8233C19.7866 17.851 19.781 17.8787 19.7744 17.9064C19.762 17.956 19.7488 18.0037 19.7326 18.0515C19.724 18.0764 19.7154 18.101 19.706 18.1249C19.6964 18.1498 19.686 18.1737 19.6756 18.1984C19.6442 18.271 19.607 18.3406 19.5652 18.4075C19.511 18.4954 19.449 18.5774 19.3806 18.6539C19.0656 19.0034 17.9958 19.6267 17.6016 19.8799L16.7264 20.4165C16.0852 20.813 15.4788 21.0936 14.7146 21.1126C14.6784 21.1136 14.6432 21.1146 14.608 21.1146C14.5586 21.1146 14.51 21.1136 14.4614 21.1118C13.1672 21.0623 12.0384 20.3652 11.3876 19.3349C11.0898 18.8642 10.8928 18.3238 10.8262 17.7433C10.966 18.5367 11.6552 19.1383 12.486 19.1383C12.7772 19.1383 13.0504 19.0648 13.2892 18.9348C13.291 18.9338 13.293 18.9328 13.295 18.932L13.3806 18.8804L13.729 18.6741L14.1724 18.4107V18.3982L14.2296 18.3639L18.1972 16.0055L18.5026 15.8241L18.533 15.8345C18.534 15.8345 18.5358 15.8355 18.5368 15.8355C18.6244 15.8574 18.71 15.8871 18.7918 15.9234C18.9812 16.0055 19.1524 16.1221 19.299 16.2644C19.358 16.3207 19.4122 16.3817 19.4626 16.4468C19.5054 16.5011 19.5444 16.5585 19.5796 16.6185C19.7334 16.876 19.822 17.1788 19.822 17.5015Z" fill="url(#paint5_linear_1360_20278)"/>\n  <path d="M14.1734 9.63072L14.172 18.4102L13.7286 18.6739L13.38 18.88L13.2942 18.9322C13.2928 18.9322 13.2902 18.9336 13.289 18.9348C13.0498 19.064 12.7766 19.1384 12.4852 19.1384C11.6542 19.1384 10.9662 18.5368 10.8256 17.7434C10.819 17.7069 10.814 17.669 10.81 17.6324C10.8048 17.5632 10.801 17.4954 10.7996 17.4262V7.5454C10.7996 7.23357 11.052 6.97913 11.364 6.97913C11.481 6.97913 11.5902 7.01565 11.68 7.07565L13.4058 8.207C13.415 8.21482 13.4252 8.22144 13.4358 8.22787C13.882 8.53328 14.1734 9.04738 14.1734 9.63072Z" fill="url(#paint6_linear_1360_20278)"/>\n  <path opacity="0.15" d="M19.822 17.5015C19.822 17.6122 19.8116 17.7192 19.7924 17.8233C19.7866 17.851 19.781 17.8787 19.7744 17.9064C19.762 17.956 19.7488 18.0037 19.7326 18.0515C19.724 18.0764 19.7154 18.101 19.706 18.1249C19.6964 18.1498 19.686 18.1737 19.6756 18.1984C19.6442 18.271 19.607 18.3406 19.5652 18.4075C19.511 18.4954 19.4492 18.5774 19.3806 18.6539C19.0656 19.0034 17.9958 19.6267 17.6016 19.8799L16.7264 20.4165C16.0852 20.813 15.4788 21.0936 14.7146 21.1126C14.6784 21.1136 14.6432 21.1146 14.608 21.1146C14.5586 21.1146 14.51 21.1136 14.4614 21.1118C13.1672 21.0623 12.0384 20.3652 11.3876 19.3349C11.0898 18.8642 10.8928 18.3238 10.8262 17.7433C10.966 18.5367 11.6552 19.1383 12.486 19.1383C12.7772 19.1383 13.0504 19.0648 13.2892 18.9348C13.291 18.9338 13.293 18.9328 13.295 18.932L13.3806 18.8804L13.729 18.6741L14.1724 18.4107V18.3982L14.2296 18.3639L18.1972 16.0055L18.5026 15.8241L18.533 15.8345C18.534 15.8345 18.5358 15.8355 18.5368 15.8355C18.6244 15.8574 18.71 15.8871 18.7918 15.9234C18.9812 16.0055 19.1524 16.1221 19.299 16.2644C19.358 16.3207 19.4122 16.3817 19.4626 16.4468C19.5054 16.5011 19.5444 16.5585 19.5796 16.6185C19.7334 16.876 19.822 17.1788 19.822 17.5015Z" fill="url(#paint7_linear_1360_20278)"/>\n  <path opacity="0.1" d="M14.1734 9.63072L14.172 18.4102L13.7286 18.6739L13.38 18.88L13.2942 18.9322C13.2928 18.9322 13.2902 18.9336 13.289 18.9348C13.0498 19.064 12.7766 19.1384 12.4852 19.1384C11.6542 19.1384 10.9662 18.5368 10.8256 17.7434C10.819 17.7069 10.814 17.669 10.81 17.6324C10.8048 17.5632 10.801 17.4954 10.7996 17.4262V7.5454C10.7996 7.23357 11.052 6.97913 11.364 6.97913C11.481 6.97913 11.5902 7.01565 11.68 7.07565L13.4058 8.207C13.415 8.21482 13.4252 8.22144 13.4358 8.22787C13.882 8.53328 14.1734 9.04738 14.1734 9.63072Z" fill="url(#paint8_linear_1360_20278)"/>\n  </g>\n  </g>\n  <defs>\n  <filter id="filter0_dd_1360_20278" x="0.6" y="0.8" width="28.8" height="28.8" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset/>\n  <feGaussianBlur stdDeviation="0.6"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.12 0"/>\n  <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1360_20278"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="1.2"/>\n  <feGaussianBlur stdDeviation="1.2"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0"/>\n  <feBlend mode="normal" in2="effect1_dropShadow_1360_20278" result="effect2_dropShadow_1360_20278"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_1360_20278" result="shape"/>\n  </filter>\n  <filter id="filter1_i_1360_20278" x="7.80002" y="6.80005" width="14.4" height="16.2" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="1.8"/>\n  <feGaussianBlur stdDeviation="2.925"/>\n  <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0.81875 0 0 0 0 0.824081 0 0 0 0 1 0 0 0 0.37 0"/>\n  <feBlend mode="normal" in2="shape" result="effect1_innerShadow_1360_20278"/>\n  </filter>\n  <linearGradient id="paint0_linear_1360_20278" x1="15" y1="2" x2="15" y2="26" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#F9F9F9"/>\n  <stop offset="1" stop-color="#EDF0F9"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_1360_20278" x1="3.0916" y1="30.5" x2="30.0429" y2="26.5281" gradientUnits="userSpaceOnUse">\n  <stop offset="0.107946" stop-color="#1D6CF2"/>\n  <stop offset="0.870845" stop-color="#1B4AEF"/>\n  </linearGradient>\n  <radialGradient id="paint2_radial_1360_20278" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(9.21429 23.4286) rotate(14.0362) scale(21.2045)">\n  <stop stop-color="#0B31A3"/>\n  <stop offset="1" stop-color="#39A0ED"/>\n  </radialGradient>\n  <radialGradient id="paint3_radial_1360_20278" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(11.1429 10.5714) rotate(-140.774) scale(13.5543)">\n  <stop stop-color="#00FFF3" stop-opacity="0.77"/>\n  <stop offset="0.423394" stop-color="#00FFF3" stop-opacity="0.72"/>\n  <stop offset="1" stop-color="#5BDCD6" stop-opacity="0"/>\n  </radialGradient>\n  <linearGradient id="paint4_linear_1360_20278" x1="14.4484" y1="13.0975" x2="20.6399" y2="16.6603" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint5_linear_1360_20278" x1="10.8258" y1="18.4692" x2="19.8219" y2="18.4692" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint6_linear_1360_20278" x1="12.4865" y1="19.2625" x2="12.4865" y2="7.19326" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint7_linear_1360_20278" x1="12.614" y1="20.6968" x2="18.1841" y2="15.1452" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint8_linear_1360_20278" x1="12.4865" y1="6.97913" x2="12.4865" y2="19.1383" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_1360_20278">\n  <rect width="14.4" height="14.4" fill="white" transform="translate(7.80002 6.80005)"/>\n  </clipPath>\n  <clipPath id="clip1_1360_20278">\n  <rect width="9.6" height="14.4" fill="white" transform="translate(10.8 6.80005)"/>\n  </clipPath>\n  </defs>\n  </svg>  \n  ',
			CibLogoIcons.CibLogoWithBubble32 = '<svg width="40" height="39" viewBox="0 0 40 39" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g filter="url(#filter0_dd_1360_20279)">\n  <path d="M20 2C28.8365 2 36 9.16237 36 17.9976C36 26.8328 28.8365 33.9952 20 33.9952C18.2214 33.9952 16.4839 33.7042 14.8418 33.1454C13.3336 32.6322 11.7149 32.3912 10.1731 32.7925L5.70461 33.9557C4.97776 34.1451 4.23504 33.7094 4.04573 32.9826C3.98718 32.758 3.98717 32.522 4.04568 32.2973L5.20715 27.8362C5.60906 26.2925 5.36698 24.6717 4.85224 23.1619C4.29183 21.5181 4 19.7785 4 17.9976C4 9.16237 11.1634 2 20 2Z" fill="url(#paint0_linear_1360_20279)"/>\n  <path d="M5.51567 33.2299L5.51548 33.23C5.18952 33.3149 4.85641 33.1195 4.77151 32.7935L4.77148 32.7934C4.74527 32.6929 4.74523 32.5871 4.77148 32.4862C4.77149 32.4862 4.77149 32.4862 4.77149 32.4862L5.93295 28.0252C6.38556 26.2868 6.10298 24.5063 5.56212 22.9199C5.0283 21.3541 4.75 19.6963 4.75 17.9976C4.75 9.57669 11.5775 2.75 20 2.75C28.4224 2.75 35.25 9.5767 35.25 17.9976C35.25 26.4185 28.4224 33.2452 20 33.2452C18.3035 33.2452 16.6476 32.9677 15.0834 32.4354C13.4986 31.8961 11.7204 31.6148 9.98417 32.0667L5.51567 33.2299ZM4.04577 32.9826L4.04576 32.9826L4.04577 32.9826Z" stroke="url(#paint1_linear_1360_20279)" stroke-width="1.5"/>\n  <path d="M5.51567 33.2299L5.51548 33.23C5.18952 33.3149 4.85641 33.1195 4.77151 32.7935L4.77148 32.7934C4.74527 32.6929 4.74523 32.5871 4.77148 32.4862C4.77149 32.4862 4.77149 32.4862 4.77149 32.4862L5.93295 28.0252C6.38556 26.2868 6.10298 24.5063 5.56212 22.9199C5.0283 21.3541 4.75 19.6963 4.75 17.9976C4.75 9.57669 11.5775 2.75 20 2.75C28.4224 2.75 35.25 9.5767 35.25 17.9976C35.25 26.4185 28.4224 33.2452 20 33.2452C18.3035 33.2452 16.6476 32.9677 15.0834 32.4354C13.4986 31.8961 11.7204 31.6148 9.98417 32.0667L5.51567 33.2299ZM4.04577 32.9826L4.04576 32.9826L4.04577 32.9826Z" stroke="url(#paint2_radial_1360_20279)" stroke-opacity="0.6" stroke-width="1.5"/>\n  <path d="M5.51567 33.2299L5.51548 33.23C5.18952 33.3149 4.85641 33.1195 4.77151 32.7935L4.77148 32.7934C4.74527 32.6929 4.74523 32.5871 4.77148 32.4862C4.77149 32.4862 4.77149 32.4862 4.77149 32.4862L5.93295 28.0252C6.38556 26.2868 6.10298 24.5063 5.56212 22.9199C5.0283 21.3541 4.75 19.6963 4.75 17.9976C4.75 9.57669 11.5775 2.75 20 2.75C28.4224 2.75 35.25 9.5767 35.25 17.9976C35.25 26.4185 28.4224 33.2452 20 33.2452C18.3035 33.2452 16.6476 32.9677 15.0834 32.4354C13.4986 31.8961 11.7204 31.6148 9.98417 32.0667L5.51567 33.2299ZM4.04577 32.9826L4.04576 32.9826L4.04577 32.9826Z" stroke="url(#paint3_radial_1360_20279)" stroke-opacity="0.8" stroke-width="1.5"/>\n  </g>\n  <g clip-path="url(#clip0_1360_20279)" filter="url(#filter1_i_1360_20279)">\n  <g clip-path="url(#clip1_1360_20279)">\n  <path d="M27.1994 20.7383C27.1994 20.9254 27.1893 21.1113 27.169 21.2946C27.0485 22.4124 26.5664 23.4232 25.8405 24.205C25.932 24.1031 26.0144 23.9937 26.0866 23.8765C26.1424 23.7874 26.192 23.6945 26.2338 23.5977C26.249 23.5658 26.2629 23.5327 26.2744 23.4998C26.2882 23.4679 26.2997 23.4347 26.3098 23.4018C26.3213 23.3713 26.3314 23.3395 26.3402 23.3076C26.349 23.2745 26.3581 23.2416 26.3656 23.2084C26.3669 23.2046 26.3682 23.2006 26.3693 23.1969C26.377 23.1637 26.3832 23.1308 26.3896 23.0976C26.396 23.0634 26.4024 23.0289 26.4074 22.9946C26.4074 22.9933 26.4074 22.9933 26.4074 22.9922C26.4125 22.9604 26.4162 22.9285 26.4189 22.8953C26.4266 22.8202 26.4304 22.7453 26.4304 22.6687C26.4304 22.2385 26.3122 21.8348 26.1056 21.4912C26.0586 21.411 26.0066 21.3347 25.9496 21.2622C25.8824 21.1755 25.8101 21.0942 25.7314 21.019C25.536 20.8293 25.3077 20.6739 25.0552 20.5644C24.9461 20.516 24.832 20.4767 24.7152 20.4472C24.7138 20.4472 24.7114 20.4459 24.7101 20.4459L24.6696 20.432L24.0784 20.2284V20.227L22.5317 19.6935C22.5267 19.6922 22.5203 19.6922 22.5165 19.6911L22.42 19.6555C22.1091 19.5333 21.8515 19.3042 21.6904 19.0126L21.1259 17.5676L20.4787 15.9125L20.3544 15.593L20.3227 15.528C20.2872 15.4413 20.268 15.3471 20.268 15.2492C20.268 15.2238 20.268 15.1984 20.2707 15.1754C20.3075 14.8112 20.6157 14.526 20.9888 14.526C21.0877 14.526 21.1829 14.5463 21.2693 14.5833L24.1515 16.066L24.72 16.3577C25.0208 16.5372 25.301 16.7486 25.5573 16.9867C26.4861 17.8423 27.0952 19.0415 27.1866 20.3822C27.1944 20.5005 27.1994 20.6187 27.1994 20.7383Z" fill="url(#paint4_linear_1360_20279)"/>\n  <path d="M26.4292 22.6685C26.4292 22.8162 26.4153 22.9588 26.3897 23.0976C26.382 23.1346 26.3745 23.1715 26.3657 23.2084C26.3492 23.2745 26.3316 23.3382 26.31 23.4019C26.2985 23.435 26.2871 23.4679 26.2745 23.4998C26.2617 23.533 26.2479 23.5648 26.234 23.5977C26.1921 23.6946 26.1425 23.7874 26.0868 23.8765C26.0145 23.9937 25.9319 24.1031 25.8407 24.205C25.4207 24.6711 23.9943 25.5021 23.4687 25.8398L22.3018 26.5552C21.4468 27.0839 20.6383 27.458 19.6194 27.4834C19.5711 27.4847 19.5242 27.4861 19.4772 27.4861C19.4114 27.4861 19.3466 27.4847 19.2818 27.4823C17.5562 27.4162 16.0511 26.4867 15.1834 25.1131C14.7863 24.4854 14.5237 23.7649 14.4349 22.9909C14.6213 24.0488 15.5402 24.8509 16.6479 24.8509C17.0362 24.8509 17.4005 24.753 17.7189 24.5796C17.7213 24.5783 17.7239 24.5769 17.7266 24.5759L17.8407 24.5071L18.3053 24.2321L18.8965 23.8808V23.8642L18.9727 23.8184L24.2628 20.6739L24.67 20.432L24.7106 20.4459C24.7119 20.4459 24.7143 20.4473 24.7156 20.4473C24.8324 20.4764 24.9466 20.516 25.0556 20.5644C25.3081 20.6739 25.5364 20.8293 25.7319 21.019C25.8105 21.0942 25.8828 21.1755 25.95 21.2622C26.0071 21.3347 26.0591 21.4113 26.106 21.4913C26.3111 21.8345 26.4292 22.2383 26.4292 22.6685Z" fill="url(#paint5_linear_1360_20279)"/>\n  <path d="M18.8978 12.1742L18.8959 23.8803L18.3047 24.2318L17.8399 24.5066L17.7255 24.5762C17.7237 24.5762 17.7202 24.578 17.7186 24.5796C17.3997 24.7519 17.0354 24.8512 16.6469 24.8512C15.5389 24.8512 14.6215 24.0491 14.4341 22.9912C14.4253 22.9425 14.4186 22.8919 14.4133 22.8432C14.4063 22.7509 14.4013 22.6605 14.3994 22.5682V9.39383C14.3994 8.97805 14.7359 8.63879 15.1519 8.63879C15.3079 8.63879 15.4535 8.68749 15.5733 8.76749L17.8743 10.276C17.8866 10.2864 17.9002 10.2952 17.9143 10.3038C18.5093 10.711 18.8978 11.3965 18.8978 12.1742Z" fill="url(#paint6_linear_1360_20279)"/>\n  <path opacity="0.15" d="M26.4292 22.6685C26.4292 22.8162 26.4153 22.9588 26.3897 23.0976C26.382 23.1346 26.3745 23.1715 26.3657 23.2084C26.3492 23.2745 26.3316 23.3382 26.31 23.4019C26.2985 23.435 26.2871 23.4679 26.2745 23.4998C26.2617 23.533 26.2479 23.5648 26.234 23.5977C26.1921 23.6946 26.1425 23.7874 26.0868 23.8765C26.0145 23.9937 25.9321 24.1031 25.8407 24.205C25.4207 24.6711 23.9943 25.5021 23.4687 25.8398L22.3018 26.5552C21.4468 27.0839 20.6383 27.458 19.6194 27.4834C19.5711 27.4847 19.5242 27.4861 19.4772 27.4861C19.4114 27.4861 19.3466 27.4847 19.2818 27.4823C17.5562 27.4162 16.0511 26.4867 15.1834 25.1131C14.7863 24.4854 14.5237 23.7649 14.4349 22.9909C14.6213 24.0488 15.5402 24.8509 16.6479 24.8509C17.0362 24.8509 17.4005 24.753 17.7189 24.5796C17.7213 24.5783 17.7239 24.5769 17.7266 24.5759L17.8407 24.5071L18.3053 24.2321L18.8965 23.8808V23.8642L18.9727 23.8184L24.2628 20.6739L24.67 20.432L24.7106 20.4459C24.7119 20.4459 24.7143 20.4473 24.7156 20.4473C24.8324 20.4764 24.9466 20.516 25.0556 20.5644C25.3081 20.6739 25.5364 20.8293 25.7319 21.019C25.8105 21.0942 25.8828 21.1755 25.95 21.2622C26.0071 21.3347 26.0591 21.4113 26.106 21.4913C26.3111 21.8345 26.4292 22.2383 26.4292 22.6685Z" fill="url(#paint7_linear_1360_20279)"/>\n  <path opacity="0.1" d="M18.8978 12.1742L18.8959 23.8803L18.3047 24.2318L17.8399 24.5066L17.7255 24.5762C17.7237 24.5762 17.7202 24.578 17.7186 24.5796C17.3997 24.7519 17.0354 24.8512 16.6469 24.8512C15.5389 24.8512 14.6215 24.0491 14.4341 22.9912C14.4253 22.9425 14.4186 22.8919 14.4133 22.8432C14.4063 22.7509 14.4013 22.6605 14.3994 22.5682V9.39383C14.3994 8.97805 14.7359 8.63879 15.1519 8.63879C15.3079 8.63879 15.4535 8.68749 15.5733 8.76749L17.8743 10.276C17.8866 10.2864 17.9002 10.2952 17.9143 10.3038C18.5093 10.711 18.8978 11.3965 18.8978 12.1742Z" fill="url(#paint8_linear_1360_20279)"/>\n  </g>\n  </g>\n  <defs>\n  <filter id="filter0_dd_1360_20279" x="0.8" y="0.4" width="38.4" height="38.4" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset/>\n  <feGaussianBlur stdDeviation="0.8"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.12 0"/>\n  <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1360_20279"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="1.6"/>\n  <feGaussianBlur stdDeviation="1.6"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0"/>\n  <feBlend mode="normal" in2="effect1_dropShadow_1360_20279" result="effect2_dropShadow_1360_20279"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_1360_20279" result="shape"/>\n  </filter>\n  <filter id="filter1_i_1360_20279" x="10.4" y="8.40002" width="19.2" height="21.6" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="2.4"/>\n  <feGaussianBlur stdDeviation="3.9"/>\n  <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0.81875 0 0 0 0 0.824081 0 0 0 0 1 0 0 0 0.37 0"/>\n  <feBlend mode="normal" in2="shape" result="effect1_innerShadow_1360_20279"/>\n  </filter>\n  <linearGradient id="paint0_linear_1360_20279" x1="20" y1="2" x2="20" y2="34" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#F9F9F9"/>\n  <stop offset="1" stop-color="#EDF0F9"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_1360_20279" x1="4.12214" y1="40" x2="40.0572" y2="34.7041" gradientUnits="userSpaceOnUse">\n  <stop offset="0.107946" stop-color="#1D6CF2"/>\n  <stop offset="0.870845" stop-color="#1B4AEF"/>\n  </linearGradient>\n  <radialGradient id="paint2_radial_1360_20279" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.2857 30.5714) rotate(14.0362) scale(28.2727)">\n  <stop stop-color="#0B31A3"/>\n  <stop offset="1" stop-color="#39A0ED"/>\n  </radialGradient>\n  <radialGradient id="paint3_radial_1360_20279" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(14.8571 13.4286) rotate(-140.774) scale(18.0724)">\n  <stop stop-color="#00FFF3" stop-opacity="0.77"/>\n  <stop offset="0.423394" stop-color="#00FFF3" stop-opacity="0.72"/>\n  <stop offset="1" stop-color="#5BDCD6" stop-opacity="0"/>\n  </radialGradient>\n  <linearGradient id="paint4_linear_1360_20279" x1="19.2644" y1="16.7966" x2="27.5199" y2="21.547" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint5_linear_1360_20279" x1="14.4343" y1="23.9588" x2="26.4291" y2="23.9588" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint6_linear_1360_20279" x1="16.6486" y1="25.0167" x2="16.6486" y2="8.9243" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint7_linear_1360_20279" x1="16.8185" y1="26.9289" x2="24.2453" y2="19.5268" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint8_linear_1360_20279" x1="16.6486" y1="8.63879" x2="16.6486" y2="24.851" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_1360_20279">\n  <rect width="19.2" height="19.2" fill="white" transform="translate(10.4 8.40002)"/>\n  </clipPath>\n  <clipPath id="clip1_1360_20279">\n  <rect width="12.8" height="19.2" fill="white" transform="translate(14.4 8.40002)"/>\n  </clipPath>\n  </defs>\n  </svg>  \n  ',
			CibLogoIcons.CibLogoWithBubble36 = '<svg width="44" height="44" viewBox="0 0 44 44" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g filter="url(#filter0_dd_1360_20280)">\n  <path d="M22 2C31.941 2 40 10.0577 40 19.9973C40 29.9369 31.941 37.9946 22 37.9946C19.999 37.9946 18.0443 37.6673 16.197 37.0386C14.5003 36.4612 12.6792 36.1901 10.9447 36.6416L5.91768 37.9502C5.09998 38.1633 4.26442 37.673 4.05144 36.8554C3.98558 36.6027 3.98556 36.3373 4.05139 36.0844L5.35804 31.0657C5.81019 29.3291 5.53785 27.5057 4.95877 25.8072C4.32831 23.9579 4 22.0008 4 19.9973C4 10.0577 12.0589 2 22 2Z" fill="url(#paint0_linear_1360_20280)"/>\n  <path d="M5.72875 37.2244L5.72856 37.2244C5.31174 37.333 4.88579 37.0831 4.77723 36.6664L4.7772 36.6662C4.74367 36.5376 4.74362 36.4023 4.7772 36.2733L6.08385 31.2547C6.58669 29.3233 6.27386 27.3403 5.66865 25.5651C5.06478 23.7939 4.75 21.9186 4.75 19.9973C4.75 10.472 12.473 2.75 22 2.75C31.5269 2.75 39.25 10.472 39.25 19.9973C39.25 29.5226 31.5269 37.2446 22 37.2446C20.0812 37.2446 18.2081 36.9308 16.4386 36.3286C14.6653 35.7251 12.6848 35.4137 10.7558 35.9158L5.72875 37.2244Z" stroke="url(#paint1_linear_1360_20280)" stroke-width="1.5"/>\n  <path d="M5.72875 37.2244L5.72856 37.2244C5.31174 37.333 4.88579 37.0831 4.77723 36.6664L4.7772 36.6662C4.74367 36.5376 4.74362 36.4023 4.7772 36.2733L6.08385 31.2547C6.58669 29.3233 6.27386 27.3403 5.66865 25.5651C5.06478 23.7939 4.75 21.9186 4.75 19.9973C4.75 10.472 12.473 2.75 22 2.75C31.5269 2.75 39.25 10.472 39.25 19.9973C39.25 29.5226 31.5269 37.2446 22 37.2446C20.0812 37.2446 18.2081 36.9308 16.4386 36.3286C14.6653 35.7251 12.6848 35.4137 10.7558 35.9158L5.72875 37.2244Z" stroke="url(#paint2_radial_1360_20280)" stroke-opacity="0.6" stroke-width="1.5"/>\n  <path d="M5.72875 37.2244L5.72856 37.2244C5.31174 37.333 4.88579 37.0831 4.77723 36.6664L4.7772 36.6662C4.74367 36.5376 4.74362 36.4023 4.7772 36.2733L6.08385 31.2547C6.58669 29.3233 6.27386 27.3403 5.66865 25.5651C5.06478 23.7939 4.75 21.9186 4.75 19.9973C4.75 10.472 12.473 2.75 22 2.75C31.5269 2.75 39.25 10.472 39.25 19.9973C39.25 29.5226 31.5269 37.2446 22 37.2446C20.0812 37.2446 18.2081 36.9308 16.4386 36.3286C14.6653 35.7251 12.6848 35.4137 10.7558 35.9158L5.72875 37.2244Z" stroke="url(#paint3_radial_1360_20280)" stroke-opacity="0.8" stroke-width="1.5"/>\n  </g>\n  <g clip-path="url(#clip0_1360_20280)" filter="url(#filter1_i_1360_20280)">\n  <g clip-path="url(#clip1_1360_20280)">\n  <path d="M30.0993 23.0805C30.0993 23.2909 30.0879 23.5001 30.0651 23.7063C29.9295 24.9639 29.3871 26.1011 28.5705 26.9806C28.6734 26.8659 28.7661 26.7428 28.8474 26.6109C28.9101 26.5107 28.9659 26.4063 29.013 26.2973C29.0301 26.2615 29.0457 26.2242 29.0586 26.1871C29.0742 26.1513 29.0871 26.114 29.0985 26.077C29.1114 26.0427 29.1228 26.0068 29.1327 25.971C29.1426 25.9337 29.1528 25.8967 29.1612 25.8594C29.1627 25.8551 29.1642 25.8506 29.1654 25.8464C29.1741 25.8091 29.181 25.7721 29.1882 25.7347C29.1954 25.6962 29.2026 25.6574 29.2083 25.6189C29.2083 25.6174 29.2083 25.6174 29.2083 25.6162C29.214 25.5803 29.2182 25.5445 29.2212 25.5072C29.2299 25.4226 29.2341 25.3383 29.2341 25.2522C29.2341 24.7682 29.1012 24.314 28.8687 23.9276C28.8159 23.8373 28.7574 23.7515 28.6932 23.6699C28.6176 23.5724 28.5363 23.4809 28.4478 23.3963C28.2279 23.1829 27.9711 23.008 27.687 22.8849C27.5643 22.8304 27.4359 22.7862 27.3045 22.7531C27.303 22.7531 27.3003 22.7516 27.2988 22.7516L27.2532 22.7359L26.5881 22.5068V22.5053L24.8481 21.9051C24.8424 21.9036 24.8352 21.9036 24.831 21.9024L24.7224 21.8624C24.3726 21.7249 24.0828 21.4672 23.9016 21.1391L23.2665 19.5134L22.5385 17.6514L22.3987 17.2921L22.363 17.2189C22.3231 17.1214 22.3015 17.0154 22.3015 16.9053C22.3015 16.8767 22.3015 16.8481 22.3045 16.8222C22.3459 16.4125 22.6927 16.0917 23.1123 16.0917C23.2236 16.0917 23.3307 16.1146 23.4279 16.1561L26.6703 17.8242L27.3099 18.1523C27.6483 18.3543 27.9636 18.5921 28.2519 18.86C29.2968 19.8225 29.982 21.1716 30.0849 22.6799C30.0936 22.813 30.0993 22.946 30.0993 23.0805Z" fill="url(#paint4_linear_1360_20280)"/>\n  <path d="M29.2328 25.2519C29.2328 25.418 29.2172 25.5785 29.1884 25.7347C29.1797 25.7762 29.1713 25.8178 29.1614 25.8593C29.1428 25.9336 29.123 26.0053 29.0987 26.0769C29.0858 26.1142 29.0729 26.1513 29.0588 26.1871C29.0444 26.2244 29.0288 26.2602 29.0132 26.2972C28.9661 26.4062 28.9103 26.5107 28.8476 26.6109C28.7663 26.7427 28.6733 26.8658 28.5707 26.9805C28.0982 27.5048 26.4935 28.4397 25.9022 28.8196L24.5894 29.6245C23.6277 30.2192 22.7181 30.64 21.5718 30.6686C21.5175 30.6701 21.4647 30.6716 21.4119 30.6716C21.3378 30.6716 21.2649 30.6701 21.192 30.6674C19.2507 30.5931 17.5575 29.5474 16.5813 28.0021C16.1346 27.296 15.8391 26.4854 15.7392 25.6146C15.9489 26.8047 16.9827 27.7071 18.2289 27.7071C18.6657 27.7071 19.0755 27.597 19.4337 27.4019C19.4364 27.4004 19.4394 27.3989 19.4424 27.3977L19.5708 27.3203L20.0934 27.0109L20.7585 26.6157V26.597L20.8443 26.5456L26.7956 23.0079L27.2537 22.7358L27.2993 22.7515C27.3008 22.7515 27.3035 22.753 27.305 22.753C27.4364 22.7858 27.5648 22.8304 27.6875 22.8848C27.9716 23.0079 28.2284 23.1828 28.4483 23.3962C28.5368 23.4808 28.6181 23.5723 28.6937 23.6698C28.7579 23.7514 28.8164 23.8375 28.8692 23.9275C29.0999 24.3137 29.2328 24.7679 29.2328 25.2519Z" fill="url(#paint5_linear_1360_20280)"/>\n  <path d="M20.76 13.4459L20.7579 26.6152L20.0928 27.0107L19.5699 27.3198L19.4412 27.398C19.4391 27.398 19.4352 27.4002 19.4334 27.402C19.0746 27.5958 18.6648 27.7075 18.2277 27.7075C16.9812 27.7075 15.9492 26.8051 15.7383 25.6149C15.7284 25.5602 15.7209 25.5033 15.7149 25.4485C15.7071 25.3446 15.7014 25.2429 15.6993 25.1391V10.3179C15.6993 9.85017 16.0779 9.46851 16.5459 9.46851C16.7214 9.46851 16.8852 9.52329 17.0199 9.61329L19.6086 11.3103C19.6224 11.3221 19.6377 11.332 19.6536 11.3416C20.3229 11.7997 20.76 12.5709 20.76 13.4459Z" fill="url(#paint6_linear_1360_20280)"/>\n  <path opacity="0.15" d="M29.2328 25.2519C29.2328 25.418 29.2172 25.5785 29.1884 25.7347C29.1797 25.7762 29.1713 25.8178 29.1614 25.8593C29.1428 25.9336 29.123 26.0053 29.0987 26.0769C29.0858 26.1142 29.0729 26.1513 29.0588 26.1871C29.0444 26.2244 29.0288 26.2602 29.0132 26.2972C28.9661 26.4062 28.9103 26.5107 28.8476 26.6109C28.7663 26.7427 28.6736 26.8658 28.5707 26.9805C28.0982 27.5048 26.4935 28.4397 25.9022 28.8196L24.5894 29.6245C23.6277 30.2192 22.7181 30.64 21.5718 30.6686C21.5175 30.6701 21.4647 30.6716 21.4119 30.6716C21.3378 30.6716 21.2649 30.6701 21.192 30.6674C19.2507 30.5931 17.5575 29.5474 16.5813 28.0021C16.1346 27.296 15.8391 26.4854 15.7392 25.6146C15.9489 26.8047 16.9827 27.7071 18.2289 27.7071C18.6657 27.7071 19.0755 27.597 19.4337 27.4019C19.4364 27.4004 19.4394 27.3989 19.4424 27.3977L19.5708 27.3203L20.0934 27.0109L20.7585 26.6157V26.597L20.8443 26.5456L26.7956 23.0079L27.2537 22.7358L27.2993 22.7515C27.3008 22.7515 27.3035 22.753 27.305 22.753C27.4364 22.7858 27.5648 22.8304 27.6875 22.8848C27.9716 23.0079 28.2284 23.1828 28.4483 23.3962C28.5368 23.4808 28.6181 23.5723 28.6937 23.6698C28.7579 23.7514 28.8164 23.8375 28.8692 23.9275C29.0999 24.3137 29.2328 24.7679 29.2328 25.2519Z" fill="url(#paint7_linear_1360_20280)"/>\n  <path opacity="0.1" d="M20.76 13.4459L20.7579 26.6152L20.0928 27.0107L19.5699 27.3198L19.4412 27.398C19.4391 27.398 19.4352 27.4002 19.4334 27.402C19.0746 27.5958 18.6648 27.7075 18.2277 27.7075C16.9812 27.7075 15.9492 26.8051 15.7383 25.6149C15.7284 25.5602 15.7209 25.5033 15.7149 25.4485C15.7071 25.3446 15.7014 25.2429 15.6993 25.1391V10.3179C15.6993 9.85017 16.0779 9.46851 16.5459 9.46851C16.7214 9.46851 16.8852 9.52329 17.0199 9.61329L19.6086 11.3103C19.6224 11.3221 19.6377 11.332 19.6536 11.3416C20.3229 11.7997 20.76 12.5709 20.76 13.4459Z" fill="url(#paint8_linear_1360_20280)"/>\n  </g>\n  </g>\n  <defs>\n  <filter id="filter0_dd_1360_20280" x="0.4" y="0.2" width="43.2" height="43.2" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset/>\n  <feGaussianBlur stdDeviation="0.9"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.12 0"/>\n  <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1360_20280"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="1.8"/>\n  <feGaussianBlur stdDeviation="1.8"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0"/>\n  <feBlend mode="normal" in2="effect1_dropShadow_1360_20280" result="effect2_dropShadow_1360_20280"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_1360_20280" result="shape"/>\n  </filter>\n  <filter id="filter1_i_1360_20280" x="11.2" y="9.19995" width="21.6" height="24.3" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="2.7"/>\n  <feGaussianBlur stdDeviation="4.3875"/>\n  <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0.81875 0 0 0 0 0.824081 0 0 0 0 1 0 0 0 0.37 0"/>\n  <feBlend mode="normal" in2="shape" result="effect1_innerShadow_1360_20280"/>\n  </filter>\n  <linearGradient id="paint0_linear_1360_20280" x1="22" y1="2" x2="22" y2="38" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#F9F9F9"/>\n  <stop offset="1" stop-color="#EDF0F9"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_1360_20280" x1="4.1374" y1="44.75" x2="44.5644" y2="38.7922" gradientUnits="userSpaceOnUse">\n  <stop offset="0.107946" stop-color="#1D6CF2"/>\n  <stop offset="0.870845" stop-color="#1B4AEF"/>\n  </linearGradient>\n  <radialGradient id="paint2_radial_1360_20280" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(13.3214 34.1429) rotate(14.0362) scale(31.8068)">\n  <stop stop-color="#0B31A3"/>\n  <stop offset="1" stop-color="#39A0ED"/>\n  </radialGradient>\n  <radialGradient id="paint3_radial_1360_20280" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(16.2143 14.8571) rotate(-140.774) scale(20.3315)">\n  <stop stop-color="#00FFF3" stop-opacity="0.77"/>\n  <stop offset="0.423394" stop-color="#00FFF3" stop-opacity="0.72"/>\n  <stop offset="1" stop-color="#5BDCD6" stop-opacity="0"/>\n  </radialGradient>\n  <linearGradient id="paint4_linear_1360_20280" x1="21.1724" y1="18.6461" x2="30.4598" y2="23.9903" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint5_linear_1360_20280" x1="15.7386" y1="26.7035" x2="29.2327" y2="26.7035" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint6_linear_1360_20280" x1="18.2296" y1="27.8936" x2="18.2296" y2="9.7897" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint7_linear_1360_20280" x1="18.4208" y1="30.0449" x2="26.7759" y2="21.7175" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint8_linear_1360_20280" x1="18.2296" y1="9.46851" x2="18.2296" y2="27.7073" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_1360_20280">\n  <rect width="21.6" height="21.6" fill="white" transform="translate(11.2 9.19995)"/>\n  </clipPath>\n  <clipPath id="clip1_1360_20280">\n  <rect width="14.4" height="21.6" fill="white" transform="translate(15.7 9.19995)"/>\n  </clipPath>\n  </defs>\n  </svg>  \n  ',
			CibLogoIcons.CibLogoWithBubble40 = '<svg width="48" height="48" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g filter="url(#filter0_dd_1360_20281)">\n  <path d="M24 2C35.0456 2 44 10.953 44 21.997C44 33.041 35.0456 41.994 24 41.994C21.7767 41.994 19.6048 41.6303 17.5522 40.9318C15.667 40.2902 13.6436 39.989 11.7164 40.4907L6.13076 41.9447C5.2222 42.1814 4.2938 41.6367 4.05716 40.7282C3.98398 40.4475 3.98396 40.1525 4.0571 39.8716L5.50894 34.2952C6.01132 32.3656 5.70872 30.3397 5.0653 28.4524C4.36479 26.3977 4 24.2232 4 21.997C4 10.953 12.9543 2 24 2Z" fill="url(#paint0_linear_1360_20281)"/>\n  <path d="M5.87885 40.9769L5.87859 40.977C5.50454 41.0744 5.12229 40.8502 5.02487 40.4762L5.02483 40.476C4.99476 40.3607 4.99471 40.2393 5.02485 40.1235L6.47667 34.5472C7.04666 32.358 6.69006 30.1192 6.01181 28.1297C5.34674 26.179 5 24.1135 5 21.997C5 11.5054 13.5064 3 24 3C34.4935 3 43 11.5054 43 21.997C43 32.4886 34.4935 40.994 24 40.994C21.8862 40.994 19.8232 40.6483 17.8744 39.9851C15.887 39.3088 13.651 38.9537 11.4645 39.5229L5.87885 40.9769Z" stroke="url(#paint1_linear_1360_20281)" stroke-width="2"/>\n  <path d="M5.87885 40.9769L5.87859 40.977C5.50454 41.0744 5.12229 40.8502 5.02487 40.4762L5.02483 40.476C4.99476 40.3607 4.99471 40.2393 5.02485 40.1235L6.47667 34.5472C7.04666 32.358 6.69006 30.1192 6.01181 28.1297C5.34674 26.179 5 24.1135 5 21.997C5 11.5054 13.5064 3 24 3C34.4935 3 43 11.5054 43 21.997C43 32.4886 34.4935 40.994 24 40.994C21.8862 40.994 19.8232 40.6483 17.8744 39.9851C15.887 39.3088 13.651 38.9537 11.4645 39.5229L5.87885 40.9769Z" stroke="url(#paint2_radial_1360_20281)" stroke-opacity="0.6" stroke-width="2"/>\n  <path d="M5.87885 40.9769L5.87859 40.977C5.50454 41.0744 5.12229 40.8502 5.02487 40.4762L5.02483 40.476C4.99476 40.3607 4.99471 40.2393 5.02485 40.1235L6.47667 34.5472C7.04666 32.358 6.69006 30.1192 6.01181 28.1297C5.34674 26.179 5 24.1135 5 21.997C5 11.5054 13.5064 3 24 3C34.4935 3 43 11.5054 43 21.997C43 32.4886 34.4935 40.994 24 40.994C21.8862 40.994 19.8232 40.6483 17.8744 39.9851C15.887 39.3088 13.651 38.9537 11.4645 39.5229L5.87885 40.9769Z" stroke="url(#paint3_radial_1360_20281)" stroke-opacity="0.8" stroke-width="2"/>\n  </g>\n  <g filter="url(#filter1_i_1360_20281)">\n  <g clip-path="url(#clip0_1360_20281)">\n  <path d="M32.9992 25.4229C32.9992 25.6567 32.9866 25.8891 32.9612 26.1182C32.8106 27.5155 32.2079 28.779 31.3006 29.7562C31.4149 29.6288 31.5179 29.492 31.6082 29.3456C31.6779 29.2342 31.7399 29.1181 31.7922 28.9971C31.8112 28.9573 31.8286 28.9158 31.8429 28.8747C31.8602 28.8349 31.8746 28.7934 31.8872 28.7523C31.9016 28.7141 31.9142 28.6743 31.9252 28.6345C31.9362 28.5931 31.9476 28.5519 31.9569 28.5105C31.9586 28.5058 31.9602 28.5008 31.9616 28.4961C31.9712 28.4546 31.9789 28.4135 31.9869 28.372C31.9949 28.3292 32.0029 28.286 32.0092 28.2432C32.0092 28.2416 32.0092 28.2416 32.0092 28.2402C32.0156 28.2004 32.0202 28.1606 32.0236 28.1192C32.0332 28.0252 32.0379 27.9315 32.0379 27.8359C32.0379 27.2981 31.8902 26.7934 31.6319 26.364C31.5732 26.2637 31.5082 26.1684 31.4369 26.0777C31.3529 25.9694 31.2626 25.8677 31.1642 25.7737C30.9199 25.5366 30.6346 25.3423 30.3189 25.2055C30.1826 25.145 30.0399 25.0958 29.8939 25.059C29.8922 25.059 29.8892 25.0573 29.8876 25.0573L29.8369 25.0399L29.0979 24.7854V24.7838L27.1646 24.1169C27.1582 24.1152 27.1502 24.1152 27.1456 24.1139L27.0249 24.0694C26.6363 23.9166 26.3143 23.6303 26.1129 23.2657L25.4073 21.4594L24.5983 19.3906L24.4429 18.9912L24.4033 18.91C24.3589 18.8016 24.3349 18.6839 24.3349 18.5615C24.3349 18.5297 24.3349 18.4979 24.3383 18.4692C24.3843 18.014 24.7696 17.6575 25.2359 17.6575C25.3596 17.6575 25.4786 17.6829 25.5866 17.729L29.1892 19.5825L29.8999 19.9471C30.2759 20.1715 30.6262 20.4357 30.9466 20.7333C32.1076 21.8029 32.8689 23.3018 32.9832 24.9777C32.9929 25.1256 32.9992 25.2734 32.9992 25.4229Z" fill="url(#paint4_linear_1360_20281)"/>\n  <path d="M32.0364 27.8356C32.0364 28.0203 32.0191 28.1985 31.9871 28.3721C31.9774 28.4182 31.9681 28.4644 31.9571 28.5105C31.9364 28.5932 31.9144 28.6727 31.8874 28.7523C31.8731 28.7938 31.8588 28.835 31.8431 28.8748C31.8271 28.9162 31.8098 28.956 31.7924 28.9972C31.7401 29.1182 31.6781 29.2343 31.6084 29.3456C31.5181 29.4921 31.4148 29.6289 31.3008 29.7563C30.7758 30.3389 28.9928 31.3777 28.3358 31.7998L26.8771 32.6941C25.8085 33.3549 24.7978 33.8225 23.5241 33.8543C23.4638 33.8559 23.4051 33.8576 23.3465 33.8576C23.2642 33.8576 23.1832 33.8559 23.1022 33.8529C20.9452 33.7703 19.0638 32.6085 17.9792 30.8914C17.4828 30.1068 17.1545 29.2062 17.0435 28.2386C17.2765 29.561 18.4252 30.5637 19.8098 30.5637C20.2952 30.5637 20.7505 30.4413 21.1485 30.2246C21.1515 30.2229 21.1548 30.2212 21.1582 30.2199L21.3008 30.1339L21.8815 29.7901L22.6205 29.351V29.3303L22.7158 29.2731L29.3285 25.3424L29.8374 25.04L29.8881 25.0574C29.8898 25.0574 29.8928 25.0591 29.8944 25.0591C30.0404 25.0956 30.1831 25.1451 30.3194 25.2056C30.6351 25.3424 30.9204 25.5367 31.1648 25.7738C31.2631 25.8678 31.3534 25.9695 31.4374 26.0778C31.5088 26.1684 31.5738 26.2641 31.6324 26.3641C31.8888 26.7932 32.0364 27.2979 32.0364 27.8356Z" fill="url(#paint5_linear_1360_20281)"/>\n  <path d="M22.6222 14.7178L22.6198 29.3503L21.8808 29.7897L21.2998 30.1332L21.1568 30.2202C21.1545 30.2202 21.1502 30.2225 21.1482 30.2245C20.7495 30.4399 20.2942 30.564 19.8085 30.564C18.4235 30.564 17.2769 29.5613 17.0425 28.2389C17.0315 28.1781 17.0232 28.1149 17.0165 28.054C17.0079 27.9386 17.0015 27.8256 16.9992 27.7102V11.2423C16.9992 10.7225 17.4199 10.2985 17.9399 10.2985C18.1349 10.2985 18.3169 10.3593 18.4665 10.4593L21.3428 12.3449C21.3582 12.358 21.3752 12.369 21.3928 12.3797C22.1365 12.8887 22.6222 13.7456 22.6222 14.7178Z" fill="url(#paint6_linear_1360_20281)"/>\n  <path opacity="0.15" d="M32.0364 27.8356C32.0364 28.0203 32.0191 28.1985 31.9871 28.3721C31.9774 28.4182 31.9681 28.4644 31.9571 28.5105C31.9364 28.5932 31.9144 28.6727 31.8874 28.7523C31.8731 28.7938 31.8588 28.835 31.8431 28.8748C31.8271 28.9162 31.8098 28.956 31.7924 28.9972C31.7401 29.1182 31.6781 29.2343 31.6084 29.3456C31.5181 29.4921 31.4151 29.6289 31.3008 29.7563C30.7758 30.3389 28.9928 31.3777 28.3358 31.7998L26.8771 32.6941C25.8085 33.3549 24.7978 33.8225 23.5241 33.8543C23.4638 33.8559 23.4051 33.8576 23.3465 33.8576C23.2642 33.8576 23.1832 33.8559 23.1022 33.8529C20.9452 33.7703 19.0638 32.6085 17.9792 30.8914C17.4828 30.1068 17.1545 29.2062 17.0435 28.2386C17.2765 29.561 18.4252 30.5637 19.8098 30.5637C20.2952 30.5637 20.7505 30.4413 21.1485 30.2246C21.1515 30.2229 21.1548 30.2212 21.1582 30.2199L21.3008 30.1339L21.8815 29.7901L22.6205 29.351V29.3303L22.7158 29.2731L29.3285 25.3424L29.8374 25.04L29.8881 25.0574C29.8898 25.0574 29.8928 25.0591 29.8944 25.0591C30.0404 25.0956 30.1831 25.1451 30.3194 25.2056C30.6351 25.3424 30.9204 25.5367 31.1648 25.7738C31.2631 25.8678 31.3534 25.9695 31.4374 26.0778C31.5088 26.1684 31.5738 26.2641 31.6324 26.3641C31.8888 26.7932 32.0364 27.2979 32.0364 27.8356Z" fill="url(#paint7_linear_1360_20281)"/>\n  <path opacity="0.1" d="M22.6222 14.7178L22.6198 29.3503L21.8808 29.7897L21.2998 30.1332L21.1568 30.2202C21.1545 30.2202 21.1502 30.2225 21.1482 30.2245C20.7495 30.4399 20.2942 30.564 19.8085 30.564C18.4235 30.564 17.2769 29.5613 17.0425 28.2389C17.0315 28.1781 17.0232 28.1149 17.0165 28.054C17.0079 27.9386 17.0015 27.8256 16.9992 27.7102V11.2423C16.9992 10.7225 17.4199 10.2985 17.9399 10.2985C18.1349 10.2985 18.3169 10.3593 18.4665 10.4593L21.3428 12.3449C21.3582 12.358 21.3752 12.369 21.3928 12.3797C22.1365 12.8887 22.6222 13.7456 22.6222 14.7178Z" fill="url(#paint8_linear_1360_20281)"/>\n  </g>\n  </g>\n  <defs>\n  <filter id="filter0_dd_1360_20281" x="0" y="0" width="48" height="48" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset/>\n  <feGaussianBlur stdDeviation="1"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.12 0"/>\n  <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1360_20281"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="2"/>\n  <feGaussianBlur stdDeviation="2"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0"/>\n  <feBlend mode="normal" in2="effect1_dropShadow_1360_20281" result="effect2_dropShadow_1360_20281"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_1360_20281" result="shape"/>\n  </filter>\n  <filter id="filter1_i_1360_20281" x="12" y="10" width="24" height="27" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="3"/>\n  <feGaussianBlur stdDeviation="4.875"/>\n  <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0.81875 0 0 0 0 0.824081 0 0 0 0 1 0 0 0 0.37 0"/>\n  <feBlend mode="normal" in2="shape" result="effect1_innerShadow_1360_20281"/>\n  </filter>\n  <linearGradient id="paint0_linear_1360_20281" x1="24" y1="2" x2="24" y2="42" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#F9F9F9"/>\n  <stop offset="1" stop-color="#EDF0F9"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_1360_20281" x1="4.15267" y1="49.5" x2="49.0715" y2="42.8802" gradientUnits="userSpaceOnUse">\n  <stop offset="0.107946" stop-color="#1D6CF2"/>\n  <stop offset="0.870845" stop-color="#1B4AEF"/>\n  </linearGradient>\n  <radialGradient id="paint2_radial_1360_20281" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(14.3571 37.7143) rotate(14.0362) scale(35.3409)">\n  <stop stop-color="#0B31A3"/>\n  <stop offset="1" stop-color="#39A0ED"/>\n  </radialGradient>\n  <radialGradient id="paint3_radial_1360_20281" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(17.5714 16.2857) rotate(-140.774) scale(22.5905)">\n  <stop stop-color="#00FFF3" stop-opacity="0.77"/>\n  <stop offset="0.423394" stop-color="#00FFF3" stop-opacity="0.72"/>\n  <stop offset="1" stop-color="#5BDCD6" stop-opacity="0"/>\n  </radialGradient>\n  <linearGradient id="paint4_linear_1360_20281" x1="23.0804" y1="20.4957" x2="33.3998" y2="26.4338" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint5_linear_1360_20281" x1="17.0429" y1="29.4485" x2="32.0363" y2="29.4485" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint6_linear_1360_20281" x1="19.8107" y1="30.7708" x2="19.8107" y2="10.6553" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint7_linear_1360_20281" x1="20.0231" y1="33.1612" x2="29.3066" y2="23.9085" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint8_linear_1360_20281" x1="19.8107" y1="10.2985" x2="19.8107" y2="30.5638" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_1360_20281">\n  <rect width="16" height="24" fill="white" transform="translate(17 10)"/>\n  </clipPath>\n  </defs>\n  </svg>  \n  ',
			CibLogoIcons.CibLogoWithBubble48 = '<svg width="58" height="59" viewBox="0 0 58 59" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g filter="url(#filter0_dd_1360_20282)">\n  <path d="M29 3C42.2547 3 53 13.7436 53 26.9964C53 40.2492 42.2547 50.9929 29 50.9929C26.3321 50.9929 23.7258 50.5564 21.2627 49.7182C19.0004 48.9483 16.5723 48.5868 14.2597 49.1888L7.55691 50.9336C6.46664 51.2177 5.35256 50.564 5.06859 49.4739C4.98078 49.137 4.98075 48.783 5.06852 48.4459L6.81072 41.7543C7.41359 39.4388 7.05047 37.0076 6.27836 34.7429C5.43775 32.2772 5 29.6678 5 26.9964C5 13.7436 15.7452 3 29 3Z" fill="url(#paint0_linear_1360_20282)"/>\n  <path d="M7.305 49.9658L7.30474 49.9659C6.74898 50.1107 6.18105 49.7775 6.0363 49.2218L6.03626 49.2217C5.99156 49.0502 5.9915 48.8698 6.03626 48.6978C6.03626 48.6978 6.03626 48.6978 6.03627 48.6978L7.77846 42.0062C8.44892 39.4311 8.03181 36.7871 7.22487 34.4202C6.4197 32.0585 6 29.5581 6 26.9964C6 14.296 16.2973 4 29 4C41.7026 4 52 14.296 52 26.9964C52 39.6968 41.7026 49.9929 29 49.9929C26.4416 49.9929 23.9441 49.5743 21.5848 48.7715C19.2204 47.9668 16.5797 47.5515 14.0078 48.221L7.305 49.9658Z" stroke="url(#paint1_linear_1360_20282)" stroke-width="2"/>\n  <path d="M7.305 49.9658L7.30474 49.9659C6.74898 50.1107 6.18105 49.7775 6.0363 49.2218L6.03626 49.2217C5.99156 49.0502 5.9915 48.8698 6.03626 48.6978C6.03626 48.6978 6.03626 48.6978 6.03627 48.6978L7.77846 42.0062C8.44892 39.4311 8.03181 36.7871 7.22487 34.4202C6.4197 32.0585 6 29.5581 6 26.9964C6 14.296 16.2973 4 29 4C41.7026 4 52 14.296 52 26.9964C52 39.6968 41.7026 49.9929 29 49.9929C26.4416 49.9929 23.9441 49.5743 21.5848 48.7715C19.2204 47.9668 16.5797 47.5515 14.0078 48.221L7.305 49.9658Z" stroke="url(#paint2_radial_1360_20282)" stroke-opacity="0.6" stroke-width="2"/>\n  <path d="M7.305 49.9658L7.30474 49.9659C6.74898 50.1107 6.18105 49.7775 6.0363 49.2218L6.03626 49.2217C5.99156 49.0502 5.9915 48.8698 6.03626 48.6978C6.03626 48.6978 6.03626 48.6978 6.03627 48.6978L7.77846 42.0062C8.44892 39.4311 8.03181 36.7871 7.22487 34.4202C6.4197 32.0585 6 29.5581 6 26.9964C6 14.296 16.2973 4 29 4C41.7026 4 52 14.296 52 26.9964C52 39.6968 41.7026 49.9929 29 49.9929C26.4416 49.9929 23.9441 49.5743 21.5848 48.7715C19.2204 47.9668 16.5797 47.5515 14.0078 48.221L7.305 49.9658Z" stroke="url(#paint3_radial_1360_20282)" stroke-opacity="0.8" stroke-width="2"/>\n  </g>\n  <g clip-path="url(#clip0_1360_20282)" filter="url(#filter1_i_1360_20282)">\n  <g clip-path="url(#clip1_1360_20282)">\n  <path d="M39.799 31.1076C39.799 31.3881 39.7838 31.667 39.7534 31.9419C39.5726 33.6187 38.8494 35.1349 37.7606 36.3076C37.8978 36.1547 38.0214 35.9905 38.1298 35.8148C38.2134 35.6811 38.2878 35.5419 38.3506 35.3966C38.3734 35.3488 38.3942 35.2991 38.4114 35.2497C38.4322 35.2019 38.4494 35.1522 38.4646 35.1028C38.4818 35.0571 38.497 35.0093 38.5102 34.9615C38.5234 34.9118 38.537 34.8624 38.5482 34.8126C38.5502 34.807 38.5522 34.801 38.5538 34.7954C38.5654 34.7456 38.5746 34.6963 38.5842 34.6465C38.5938 34.5951 38.6034 34.5433 38.611 34.492C38.611 34.49 38.611 34.49 38.611 34.4884C38.6186 34.4406 38.6242 34.3928 38.6282 34.3431C38.6398 34.2303 38.6454 34.1179 38.6454 34.0032C38.6454 33.3578 38.4682 32.7522 38.1582 32.2369C38.0878 32.1165 38.0098 32.0021 37.9242 31.8934C37.8234 31.7633 37.715 31.6413 37.597 31.5286C37.3038 31.244 36.9614 31.0108 36.5826 30.8467C36.419 30.7741 36.2478 30.7151 36.0726 30.6709C36.0706 30.6709 36.067 30.6689 36.065 30.6689L36.0042 30.648L35.1174 30.3426V30.3406L32.7974 29.5404C32.7898 29.5384 32.7802 29.5384 32.7746 29.5367L32.6298 29.4834C32.1634 29.3 31.777 28.9564 31.5354 28.519L30.6886 26.3514L29.7179 23.8688L29.5315 23.3896L29.4839 23.292C29.4307 23.162 29.4019 23.0207 29.4019 22.8739C29.4019 22.8357 29.4019 22.7976 29.4059 22.7631C29.4611 22.2169 29.9235 21.7891 30.483 21.7891C30.6314 21.7891 30.7742 21.8196 30.9038 21.8749L35.227 24.0991L36.0798 24.5366C36.531 24.8059 36.9514 25.1229 37.3358 25.4801C38.729 26.7636 39.6426 28.5623 39.7798 30.5734C39.7914 30.7508 39.799 30.9282 39.799 31.1076Z" fill="url(#paint4_linear_1360_20282)"/>\n  <path d="M38.6437 34.0027C38.6437 34.2242 38.6229 34.4381 38.5845 34.6464C38.5729 34.7018 38.5617 34.7572 38.5485 34.8126C38.5237 34.9117 38.4973 35.0072 38.4649 35.1027C38.4477 35.1525 38.4305 35.2018 38.4117 35.2496C38.3925 35.2994 38.3717 35.3471 38.3509 35.3965C38.2881 35.5418 38.2137 35.681 38.1301 35.8147C38.0217 35.9905 37.8977 36.1546 37.7609 36.3075C37.1309 37.0066 34.9913 38.2532 34.2029 38.7596L32.4526 39.8328C31.1702 40.6258 29.9574 41.1869 28.429 41.225C28.3566 41.227 28.2862 41.229 28.2158 41.229C28.117 41.229 28.0198 41.227 27.9226 41.2234C25.3342 41.1243 23.0766 39.7301 21.775 37.6696C21.1794 36.7281 20.7854 35.6473 20.6522 34.4863C20.9318 36.0731 22.3102 37.2763 23.9718 37.2763C24.5542 37.2763 25.1006 37.1294 25.5782 36.8694C25.5818 36.8674 25.5858 36.8654 25.5898 36.8638L25.761 36.7606L26.4578 36.348L27.3446 35.8211V35.7962L27.459 35.7276L35.3941 31.0108L36.0049 30.6479L36.0657 30.6688C36.0677 30.6688 36.0713 30.6708 36.0733 30.6708C36.2485 30.7146 36.4197 30.774 36.5833 30.8466C36.9621 31.0108 37.3045 31.2439 37.5977 31.5285C37.7157 31.6412 37.8241 31.7632 37.9249 31.8933C38.0105 32.002 38.0885 32.1168 38.1589 32.2368C38.4665 32.7517 38.6437 33.3573 38.6437 34.0027Z" fill="url(#paint5_linear_1360_20282)"/>\n  <path d="M27.3466 18.2613L27.3438 35.8203L26.457 36.3477L25.7598 36.7598L25.5882 36.8642C25.5854 36.8642 25.5802 36.867 25.5778 36.8694C25.0994 37.1279 24.553 37.2768 23.9702 37.2768C22.3082 37.2768 20.9322 36.0736 20.651 34.4867C20.6378 34.4137 20.6278 34.3378 20.6198 34.2648C20.6094 34.1263 20.6018 33.9907 20.599 33.8522V14.0907C20.599 13.467 21.1038 12.9581 21.7278 12.9581C21.9618 12.9581 22.1802 13.0312 22.3598 13.1512L25.8114 15.4139C25.8298 15.4295 25.8502 15.4428 25.8714 15.4556C26.7638 16.0664 27.3466 17.0946 27.3466 18.2613Z" fill="url(#paint6_linear_1360_20282)"/>\n  <path opacity="0.15" d="M38.6437 34.0027C38.6437 34.2242 38.6229 34.4381 38.5845 34.6464C38.5729 34.7018 38.5617 34.7572 38.5485 34.8126C38.5237 34.9117 38.4973 35.0072 38.4649 35.1027C38.4477 35.1525 38.4305 35.2018 38.4117 35.2496C38.3925 35.2994 38.3717 35.3471 38.3509 35.3965C38.2881 35.5418 38.2137 35.681 38.1301 35.8147C38.0217 35.9905 37.8981 36.1546 37.7609 36.3075C37.1309 37.0066 34.9913 38.2532 34.2029 38.7596L32.4526 39.8328C31.1702 40.6258 29.9574 41.1869 28.429 41.225C28.3566 41.227 28.2862 41.229 28.2158 41.229C28.117 41.229 28.0198 41.227 27.9226 41.2234C25.3342 41.1243 23.0766 39.7301 21.775 37.6696C21.1794 36.7281 20.7854 35.6473 20.6522 34.4863C20.9318 36.0731 22.3102 37.2763 23.9718 37.2763C24.5542 37.2763 25.1006 37.1294 25.5782 36.8694C25.5818 36.8674 25.5858 36.8654 25.5898 36.8638L25.761 36.7606L26.4578 36.348L27.3446 35.8211V35.7962L27.459 35.7276L35.3941 31.0108L36.0049 30.6479L36.0657 30.6688C36.0677 30.6688 36.0713 30.6708 36.0733 30.6708C36.2485 30.7146 36.4197 30.774 36.5833 30.8466C36.9621 31.0108 37.3045 31.2439 37.5977 31.5285C37.7157 31.6412 37.8241 31.7632 37.9249 31.8933C38.0105 32.002 38.0885 32.1168 38.1589 32.2368C38.4665 32.7517 38.6437 33.3573 38.6437 34.0027Z" fill="url(#paint7_linear_1360_20282)"/>\n  <path opacity="0.1" d="M27.3466 18.2613L27.3438 35.8203L26.457 36.3477L25.7598 36.7598L25.5882 36.8642C25.5854 36.8642 25.5802 36.867 25.5778 36.8694C25.0994 37.1279 24.553 37.2768 23.9702 37.2768C22.3082 37.2768 20.9322 36.0736 20.651 34.4867C20.6378 34.4137 20.6278 34.3378 20.6198 34.2648C20.6094 34.1263 20.6018 33.9907 20.599 33.8522V14.0907C20.599 13.467 21.1038 12.9581 21.7278 12.9581C21.9618 12.9581 22.1802 13.0312 22.3598 13.1512L25.8114 15.4139C25.8298 15.4295 25.8502 15.4428 25.8714 15.4556C26.7638 16.0664 27.3466 17.0946 27.3466 18.2613Z" fill="url(#paint8_linear_1360_20282)"/>\n  </g>\n  </g>\n  <defs>\n  <filter id="filter0_dd_1360_20282" x="0.2" y="0.6" width="57.6" height="57.6" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset/>\n  <feGaussianBlur stdDeviation="1.2"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.12 0"/>\n  <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1360_20282"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="2.4"/>\n  <feGaussianBlur stdDeviation="2.4"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0"/>\n  <feBlend mode="normal" in2="effect1_dropShadow_1360_20282" result="effect2_dropShadow_1360_20282"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_1360_20282" result="shape"/>\n  </filter>\n  <filter id="filter1_i_1360_20282" x="14.6" y="12.6" width="28.8" height="32.4" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="3.6"/>\n  <feGaussianBlur stdDeviation="5.85"/>\n  <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0.81875 0 0 0 0 0.824081 0 0 0 0 1 0 0 0 0.37 0"/>\n  <feBlend mode="normal" in2="shape" result="effect1_innerShadow_1360_20282"/>\n  </filter>\n  <linearGradient id="paint0_linear_1360_20282" x1="29" y1="3" x2="29" y2="51" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#F9F9F9"/>\n  <stop offset="1" stop-color="#EDF0F9"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_1360_20282" x1="5.18321" y1="60" x2="59.0858" y2="52.0562" gradientUnits="userSpaceOnUse">\n  <stop offset="0.107946" stop-color="#1D6CF2"/>\n  <stop offset="0.870845" stop-color="#1B4AEF"/>\n  </linearGradient>\n  <radialGradient id="paint2_radial_1360_20282" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(17.4286 45.8571) rotate(14.0362) scale(42.4091)">\n  <stop stop-color="#0B31A3"/>\n  <stop offset="1" stop-color="#39A0ED"/>\n  </radialGradient>\n  <radialGradient id="paint3_radial_1360_20282" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(21.2857 20.1429) rotate(-140.774) scale(27.1086)">\n  <stop stop-color="#00FFF3" stop-opacity="0.77"/>\n  <stop offset="0.423394" stop-color="#00FFF3" stop-opacity="0.72"/>\n  <stop offset="1" stop-color="#5BDCD6" stop-opacity="0"/>\n  </radialGradient>\n  <linearGradient id="paint4_linear_1360_20282" x1="27.8965" y1="25.1949" x2="40.2796" y2="32.3206" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint5_linear_1360_20282" x1="20.6514" y1="35.9381" x2="38.6436" y2="35.9381" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint6_linear_1360_20282" x1="23.9727" y1="37.525" x2="23.9727" y2="13.3864" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint7_linear_1360_20282" x1="24.2277" y1="40.3933" x2="35.3679" y2="29.2901" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint8_linear_1360_20282" x1="23.9727" y1="12.9581" x2="23.9727" y2="37.2765" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_1360_20282">\n  <rect width="28.8" height="28.8" fill="white" transform="translate(14.6 12.6)"/>\n  </clipPath>\n  <clipPath id="clip1_1360_20282">\n  <rect width="19.2" height="28.8" fill="white" transform="translate(20.6 12.6)"/>\n  </clipPath>\n  </defs>\n  </svg>  \n  ',
			CibLogoIcons.CibLogoWithBubble56 = '<svg width="68" height="68" viewBox="0 0 68 68" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <g filter="url(#filter0_dd_1360_20283)">\n  <path d="M34 3C49.4638 3 62 15.5342 62 30.9958C62 46.4574 49.4638 58.9917 34 58.9917C30.8874 58.9917 27.8467 58.4824 24.9731 57.5045C22.3338 56.6063 19.501 56.1846 16.8029 56.8869L8.98306 58.9225C7.71108 59.254 6.41132 58.4914 6.08002 57.2195C5.97757 56.8265 5.97754 56.4135 6.07994 56.0202L8.11251 48.2133C8.81585 45.5119 8.39221 42.6755 7.49142 40.0334C6.5107 37.1568 6 34.1124 6 30.9958C6 15.5342 18.536 3 34 3Z" fill="url(#paint0_linear_1360_20283)"/>\n  <path d="M8.73115 57.9548L8.73089 57.9548C7.99342 58.147 7.23981 57.7049 7.04773 56.9675L7.04769 56.9673C6.98835 56.7397 6.98829 56.5003 7.04768 56.2721C7.04768 56.2721 7.04768 56.2721 7.04769 56.2721L9.08025 48.4653C9.85118 45.5042 9.37355 42.455 8.43793 39.7107C7.49266 36.938 7 34.0027 7 30.9958C7 16.0866 19.0882 4 34 4C48.9117 4 61 16.0866 61 30.9958C61 45.9049 48.9117 57.9917 34 57.9917C30.9969 57.9917 28.0651 57.5004 25.2953 56.5578C22.5538 55.6249 19.5084 55.1493 16.551 55.9192L8.73115 57.9548Z" stroke="url(#paint1_linear_1360_20283)" stroke-width="2"/>\n  <path d="M8.73115 57.9548L8.73089 57.9548C7.99342 58.147 7.23981 57.7049 7.04773 56.9675L7.04769 56.9673C6.98835 56.7397 6.98829 56.5003 7.04768 56.2721C7.04768 56.2721 7.04768 56.2721 7.04769 56.2721L9.08025 48.4653C9.85118 45.5042 9.37355 42.455 8.43793 39.7107C7.49266 36.938 7 34.0027 7 30.9958C7 16.0866 19.0882 4 34 4C48.9117 4 61 16.0866 61 30.9958C61 45.9049 48.9117 57.9917 34 57.9917C30.9969 57.9917 28.0651 57.5004 25.2953 56.5578C22.5538 55.6249 19.5084 55.1493 16.551 55.9192L8.73115 57.9548Z" stroke="url(#paint2_radial_1360_20283)" stroke-opacity="0.6" stroke-width="2"/>\n  <path d="M8.73115 57.9548L8.73089 57.9548C7.99342 58.147 7.23981 57.7049 7.04773 56.9675L7.04769 56.9673C6.98835 56.7397 6.98829 56.5003 7.04768 56.2721C7.04768 56.2721 7.04768 56.2721 7.04769 56.2721L9.08025 48.4653C9.85118 45.5042 9.37355 42.455 8.43793 39.7107C7.49266 36.938 7 34.0027 7 30.9958C7 16.0866 19.0882 4 34 4C48.9117 4 61 16.0866 61 30.9958C61 45.9049 48.9117 57.9917 34 57.9917C30.9969 57.9917 28.0651 57.5004 25.2953 56.5578C22.5538 55.6249 19.5084 55.1493 16.551 55.9192L8.73115 57.9548Z" stroke="url(#paint3_radial_1360_20283)" stroke-opacity="0.8" stroke-width="2"/>\n  </g>\n  <g clip-path="url(#clip0_1360_20283)" filter="url(#filter1_i_1360_20283)">\n  <g clip-path="url(#clip1_1360_20283)">\n  <path d="M46.5989 35.7921C46.5989 36.1194 46.5811 36.4448 46.5457 36.7655C46.3347 38.7218 45.491 40.4907 44.2208 41.8588C44.3808 41.6804 44.525 41.4889 44.6515 41.2838C44.749 41.1279 44.8358 40.9655 44.9091 40.796C44.9357 40.7402 44.9599 40.6822 44.98 40.6246C45.0043 40.5689 45.0243 40.5108 45.0421 40.4532C45.0621 40.3999 45.0799 40.3441 45.0953 40.2884C45.1107 40.2304 45.1265 40.1728 45.1396 40.1147C45.1419 40.1082 45.1443 40.1011 45.1461 40.0946C45.1597 40.0365 45.1704 39.9789 45.1816 39.9209C45.1928 39.8609 45.204 39.8005 45.2129 39.7406C45.2129 39.7383 45.2129 39.7383 45.2129 39.7364C45.2217 39.6807 45.2283 39.6249 45.2329 39.5669C45.2465 39.4353 45.253 39.3042 45.253 39.1703C45.253 38.4174 45.0463 37.7109 44.6846 37.1097C44.6025 36.9692 44.5115 36.8358 44.4116 36.7089C44.294 36.5572 44.1676 36.4148 44.0299 36.2833C43.6878 35.9513 43.2884 35.6793 42.8464 35.4878C42.6556 35.403 42.4558 35.3342 42.2514 35.2827C42.2491 35.2827 42.2449 35.2803 42.2426 35.2803L42.1716 35.256L41.137 34.8997V34.8973L38.4304 33.9637C38.4215 33.9614 38.4103 33.9614 38.4038 33.9595L38.2349 33.8972C37.6907 33.6832 37.2399 33.2825 36.9581 32.7721L35.9701 30.2432L34.8375 27.3468L34.6201 26.7878L34.5645 26.674C34.5025 26.5223 34.4689 26.3575 34.4689 26.1861C34.4689 26.1416 34.4689 26.0972 34.4735 26.0569C34.5379 25.4197 35.0774 24.9205 35.7303 24.9205C35.9034 24.9205 36.07 24.9561 36.2212 25.0207L41.2649 27.6156L42.2598 28.126C42.7862 28.4401 43.2767 28.81 43.7252 29.2267C45.3505 30.7241 46.4164 32.8227 46.5765 35.1689C46.59 35.3759 46.5989 35.5828 46.5989 35.7921Z" fill="url(#paint4_linear_1360_20283)"/>\n  <path d="M45.251 39.1698C45.251 39.4283 45.2267 39.6778 45.1819 39.9208C45.1684 39.9855 45.1553 40.0501 45.1399 40.1147C45.111 40.2303 45.0802 40.3418 45.0424 40.4532C45.0223 40.5113 45.0023 40.5689 44.9803 40.6246C44.9579 40.6826 44.9337 40.7384 44.9094 40.7959C44.8361 40.9654 44.7493 41.1279 44.6518 41.2838C44.5253 41.4889 44.3807 41.6804 44.2211 41.8588C43.4861 42.6744 40.9899 44.1287 40.0701 44.7196L38.028 45.9716C36.5319 46.8968 35.1169 47.5514 33.3338 47.5959C33.2493 47.5982 33.1672 47.6006 33.0851 47.6006C32.9698 47.6006 32.8564 47.5982 32.743 47.594C29.7232 47.4784 27.0894 45.8518 25.5709 43.4479C24.876 42.3495 24.4163 41.0886 24.2609 39.734C24.5871 41.5854 26.1952 42.9891 28.1338 42.9891C28.8132 42.9891 29.4507 42.8177 30.0079 42.5143C30.0121 42.512 30.0168 42.5096 30.0214 42.5078L30.2212 42.3874L31.0341 41.9061L32.0687 41.2913V41.2623L32.2021 41.1822L41.4598 35.6793L42.1724 35.256L42.2434 35.2803C42.2457 35.2803 42.2499 35.2827 42.2522 35.2827C42.4566 35.3337 42.6564 35.403 42.8472 35.4878C43.2892 35.6793 43.6886 35.9513 44.0307 36.2833C44.1683 36.4148 44.2948 36.5572 44.4124 36.7089C44.5123 36.8358 44.6033 36.9697 44.6854 37.1097C45.0443 37.7104 45.251 38.4169 45.251 39.1698Z" fill="url(#paint5_linear_1360_20283)"/>\n  <path d="M32.0711 20.8048L32.0678 41.2904L31.0332 41.9056L30.2198 42.3865L30.0196 42.5082C30.0163 42.5082 30.0103 42.5115 30.0075 42.5143C29.4493 42.8158 28.8119 42.9895 28.132 42.9895C26.193 42.9895 24.5876 41.5858 24.2596 39.7345C24.2442 39.6493 24.2325 39.5608 24.2232 39.4755C24.211 39.314 24.2022 39.1557 24.1989 38.9942V15.9391C24.1989 15.2115 24.7878 14.6178 25.5158 14.6178C25.7888 14.6178 26.0436 14.703 26.2532 14.843L30.28 17.4828C30.3015 17.5011 30.3253 17.5165 30.35 17.5315C31.3911 18.2442 32.0711 19.4437 32.0711 20.8048Z" fill="url(#paint6_linear_1360_20283)"/>\n  <path opacity="0.15" d="M45.251 39.1698C45.251 39.4283 45.2267 39.6778 45.1819 39.9208C45.1684 39.9855 45.1553 40.0501 45.1399 40.1147C45.111 40.2303 45.0802 40.3418 45.0424 40.4532C45.0223 40.5113 45.0023 40.5689 44.9803 40.6246C44.9579 40.6826 44.9337 40.7384 44.9094 40.7959C44.8361 40.9654 44.7493 41.1279 44.6518 41.2838C44.5253 41.4889 44.3811 41.6804 44.2211 41.8588C43.4861 42.6744 40.9899 44.1287 40.0701 44.7196L38.028 45.9716C36.5319 46.8968 35.1169 47.5514 33.3338 47.5959C33.2493 47.5982 33.1672 47.6006 33.0851 47.6006C32.9698 47.6006 32.8564 47.5982 32.743 47.594C29.7232 47.4784 27.0894 45.8518 25.5709 43.4479C24.876 42.3495 24.4163 41.0886 24.2609 39.734C24.5871 41.5854 26.1952 42.9891 28.1338 42.9891C28.8132 42.9891 29.4507 42.8177 30.0079 42.5143C30.0121 42.512 30.0168 42.5096 30.0214 42.5078L30.2212 42.3874L31.0341 41.9061L32.0687 41.2913V41.2623L32.2021 41.1822L41.4598 35.6793L42.1724 35.256L42.2434 35.2803C42.2457 35.2803 42.2499 35.2827 42.2522 35.2827C42.4566 35.3337 42.6564 35.403 42.8472 35.4878C43.2892 35.6793 43.6886 35.9513 44.0307 36.2833C44.1683 36.4148 44.2948 36.5572 44.4124 36.7089C44.5123 36.8358 44.6033 36.9697 44.6854 37.1097C45.0443 37.7104 45.251 38.4169 45.251 39.1698Z" fill="url(#paint7_linear_1360_20283)"/>\n  <path opacity="0.1" d="M32.0711 20.8048L32.0678 41.2904L31.0332 41.9056L30.2198 42.3865L30.0196 42.5082C30.0163 42.5082 30.0103 42.5115 30.0075 42.5143C29.4493 42.8158 28.8119 42.9895 28.132 42.9895C26.193 42.9895 24.5876 41.5858 24.2596 39.7345C24.2442 39.6493 24.2325 39.5608 24.2232 39.4755C24.211 39.314 24.2022 39.1557 24.1989 38.9942V15.9391C24.1989 15.2115 24.7878 14.6178 25.5158 14.6178C25.7888 14.6178 26.0436 14.703 26.2532 14.843L30.28 17.4828C30.3015 17.5011 30.3253 17.5165 30.35 17.5315C31.3911 18.2442 32.0711 19.4437 32.0711 20.8048Z" fill="url(#paint8_linear_1360_20283)"/>\n  </g>\n  </g>\n  <defs>\n  <filter id="filter0_dd_1360_20283" x="0.4" y="0.2" width="67.2" height="67.2" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset/>\n  <feGaussianBlur stdDeviation="1.4"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.12 0"/>\n  <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1360_20283"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="2.8"/>\n  <feGaussianBlur stdDeviation="2.8"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0"/>\n  <feBlend mode="normal" in2="effect1_dropShadow_1360_20283" result="effect2_dropShadow_1360_20283"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_1360_20283" result="shape"/>\n  </filter>\n  <filter id="filter1_i_1360_20283" x="17.2" y="14.2" width="33.6" height="37.8" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">\n  <feFlood flood-opacity="0" result="BackgroundImageFix"/>\n  <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>\n  <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>\n  <feOffset dy="4.2"/>\n  <feGaussianBlur stdDeviation="6.825"/>\n  <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1"/>\n  <feColorMatrix type="matrix" values="0 0 0 0 0.81875 0 0 0 0 0.824081 0 0 0 0 1 0 0 0 0.37 0"/>\n  <feBlend mode="normal" in2="shape" result="effect1_innerShadow_1360_20283"/>\n  </filter>\n  <linearGradient id="paint0_linear_1360_20283" x1="34" y1="3" x2="34" y2="59" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#F9F9F9"/>\n  <stop offset="1" stop-color="#EDF0F9"/>\n  </linearGradient>\n  <linearGradient id="paint1_linear_1360_20283" x1="6.21374" y1="69.5" x2="69.1001" y2="60.2323" gradientUnits="userSpaceOnUse">\n  <stop offset="0.107946" stop-color="#1D6CF2"/>\n  <stop offset="0.870845" stop-color="#1B4AEF"/>\n  </linearGradient>\n  <radialGradient id="paint2_radial_1360_20283" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(20.5 53) rotate(14.0362) scale(49.4773)">\n  <stop stop-color="#0B31A3"/>\n  <stop offset="1" stop-color="#39A0ED"/>\n  </radialGradient>\n  <radialGradient id="paint3_radial_1360_20283" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(25 23) rotate(-140.774) scale(31.6267)">\n  <stop stop-color="#00FFF3" stop-opacity="0.77"/>\n  <stop offset="0.423394" stop-color="#00FFF3" stop-opacity="0.72"/>\n  <stop offset="1" stop-color="#5BDCD6" stop-opacity="0"/>\n  </radialGradient>\n  <linearGradient id="paint4_linear_1360_20283" x1="32.7126" y1="28.894" x2="47.1596" y2="37.2074" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#37BDFF"/>\n  <stop offset="0.1832" stop-color="#33BFFD"/>\n  <stop offset="0.3576" stop-color="#28C5F5"/>\n  <stop offset="0.528" stop-color="#15D0E9"/>\n  <stop offset="0.5468" stop-color="#12D1E7"/>\n  <stop offset="0.5903" stop-color="#1CD2E5"/>\n  <stop offset="0.7679" stop-color="#42D8DC"/>\n  <stop offset="0.9107" stop-color="#59DBD6"/>\n  <stop offset="1" stop-color="#62DCD4"/>\n  </linearGradient>\n  <linearGradient id="paint5_linear_1360_20283" x1="24.26" y1="41.4279" x2="45.2509" y2="41.4279" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#39D2FF"/>\n  <stop offset="0.1501" stop-color="#38CEFE"/>\n  <stop offset="0.2931" stop-color="#35C3FA"/>\n  <stop offset="0.4327" stop-color="#2FB0F3"/>\n  <stop offset="0.5468" stop-color="#299AEB"/>\n  <stop offset="0.5827" stop-color="#2692EC"/>\n  <stop offset="0.7635" stop-color="#1A6CF1"/>\n  <stop offset="0.909" stop-color="#1355F4"/>\n  <stop offset="1" stop-color="#104CF5"/>\n  </linearGradient>\n  <linearGradient id="paint6_linear_1360_20283" x1="28.1349" y1="43.2791" x2="28.1349" y2="15.1174" gradientUnits="userSpaceOnUse">\n  <stop stop-color="#1B48EF"/>\n  <stop offset="0.1221" stop-color="#1C51F0"/>\n  <stop offset="0.3212" stop-color="#1E69F5"/>\n  <stop offset="0.5676" stop-color="#2190FB"/>\n  <stop offset="1" stop-color="#26B8F4"/>\n  </linearGradient>\n  <linearGradient id="paint7_linear_1360_20283" x1="28.4323" y1="46.6256" x2="41.4292" y2="33.6719" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <linearGradient id="paint8_linear_1360_20283" x1="28.1349" y1="14.6178" x2="28.1349" y2="42.9892" gradientUnits="userSpaceOnUse">\n  <stop stop-color="white"/>\n  <stop offset="0.3726" stop-color="#FDFDFD"/>\n  <stop offset="0.5069" stop-color="#F6F6F6"/>\n  <stop offset="0.6026" stop-color="#EBEBEB"/>\n  <stop offset="0.68" stop-color="#DADADA"/>\n  <stop offset="0.7463" stop-color="#C4C4C4"/>\n  <stop offset="0.805" stop-color="#A8A8A8"/>\n  <stop offset="0.8581" stop-color="#888888"/>\n  <stop offset="0.9069" stop-color="#626262"/>\n  <stop offset="0.9523" stop-color="#373737"/>\n  <stop offset="0.9926" stop-color="#090909"/>\n  <stop offset="1"/>\n  </linearGradient>\n  <clipPath id="clip0_1360_20283">\n  <rect width="33.6" height="33.6" fill="white" transform="translate(17.2 14.2)"/>\n  </clipPath>\n  <clipPath id="clip1_1360_20283">\n  <rect width="22.4" height="33.6" fill="white" transform="translate(24.2 14.2)"/>\n  </clipPath>\n  </defs>\n  </svg>  \n  ';
			let em = class extends w {
					constructor() {
							super(),
							this.size = Zh.CibLogo32,
							this.svg = "",
							this.update()
					}
					connectedCallback() {
							super.connectedCallback(),
							this.update()
					}
					update() {
							let e = 32;
							switch (this.size) {
							case Zh.CibLogo12:
									e = 12,
									this.svg = CibLogoIcons.CibLogo12;
									break;
							case Zh.CibLogo16:
									e = 16,
									this.svg = CibLogoIcons.CibLogo16;
									break;
							case Zh.CibLogo20:
									e = 20,
									this.svg = CibLogoIcons.CibLogo20;
									break;
							case Zh.CibLogo24:
									e = 24,
									this.svg = CibLogoIcons.CibLogo24;
									break;
							case Zh.CibLogo32:
									e = 32,
									this.svg = CibLogoIcons.CibLogo32;
									break;
							case Zh.CibLogo36:
									e = 36,
									this.svg = CibLogoIcons.CibLogo36;
									break;
							case Zh.CibLogo40:
									e = 40,
									this.svg = CibLogoIcons.CibLogo40;
									break;
							case Zh.CibLogo48:
									e = 48,
									this.svg = CibLogoIcons.CibLogo48;
									break;
							case Zh.CibLogo56:
									e = 56,
									this.svg = CibLogoIcons.CibLogo56;
									break;
							case Zh.CibLogoWithBubble12:
									e = 12,
									this.svg = CibLogoIcons.CibLogoWithBubble12;
									break;
							case Zh.CibLogoWithBubble16:
									e = 16,
									this.svg = CibLogoIcons.CibLogoWithBubble16;
									break;
							case Zh.CibLogoWithBubble20:
									e = 20,
									this.svg = CibLogoIcons.CibLogoWithBubble20;
									break;
							case Zh.CibLogoWithBubble24:
									e = 24,
									this.svg = CibLogoIcons.CibLogoWithBubble24;
									break;
							case Zh.CibLogoWithBubble32:
									e = 32,
									this.svg = CibLogoIcons.CibLogoWithBubble32;
									break;
							case Zh.CibLogoWithBubble36:
									e = 36,
									this.svg = CibLogoIcons.CibLogoWithBubble36;
									break;
							case Zh.CibLogoWithBubble40:
									e = 40,
									this.svg = CibLogoIcons.CibLogoWithBubble40;
									break;
							case Zh.CibLogoWithBubble48:
									e = 48,
									this.svg = CibLogoIcons.CibLogoWithBubble48;
									break;
							case Zh.CibLogoWithBubble56:
									e = 56,
									this.svg = CibLogoIcons.CibLogoWithBubble56
							}
							this.style.setProperty("--icon-size", `${e}px`)
					}
			}
			;
			__decorate([attr, __metadata("design:type", String)], em.prototype, "size", void 0),
			__decorate([observable, __metadata("design:type", String)], em.prototype, "svg", void 0),
			em = __decorate([customElement({
					name: "cib-logo",
					template: Jh,
					styles: Xh
			}), __metadata("design:paramtypes", [])], em);
			const tm = html`
<div class="privacy-statement">
	<a class="termsOfUse" target="_blank" href=${e=>{
					var t;
					return null === (t = e.vm) || void 0 === t ? void 0 : t.termsOfUseLink.url
			}
			}
		>${e=>{
					var t;
					return null === (t = e.vm) || void 0 === t ? void 0 : t.termsOfUseLink.title
			}
			}</a
	>
	<a class="privacy" target="_blank" href=${e=>{
					var t;
					return null === (t = e.vm) || void 0 === t ? void 0 : t.privacyStatementLink.url
			}
			}
		>${e=>{
					var t;
					return null === (t = e.vm) || void 0 === t ? void 0 : t.privacyStatementLink.title
			}
			}</a
	>
</div>
`
				, nm = html`
<cib-suggestion-item
	class="welcome-suggestion-item"
	@click=${(e,t)=>t.parent.handleSuggestionClick(t.event)}
	:suggestion=${e=>e}
>
</cib-suggestion-item>
`
				, im = html`
<cib-welcome-item
	class="info-item"
	product="${(e,t)=>t.parent.layout.productType}"
	:header=${e=>e.header}
	:body=${e=>e.body}
	@click=${(e,t)=>t.parent.handleWelcomeMessageClick(t.event)}
>
</cib-welcome-item>
`
				, rm = html`
<div class="learn-tog-item">
	${e=>{
					var t, n, i;
					return html`<span
			>${null === (t = e.vm) || void 0 === t ? void 0 : t.learnSegment1}
			<span class="feedback-form" @click=${e=>{
							var t;
							return null === (t = e.vm) || void 0 === t ? void 0 : t.openFeedbackForm()
					}
					}>${null === (n = e.vm) || void 0 === n ? void 0 : n.learnSegment3}</span>
			${null === (i = e.vm) || void 0 === i ? void 0 : i.learnSegment2}</span
		>`
			}
			}
</div>
`
				, om = html`
${when((e=>{
					var t;
					return 0 === (null === (t = e.slotContents) || void 0 === t ? void 0 : t.length)
			}
			), html`
		<div class="container-logo">
			<cib-logo class="orb" size=${Zh.CibLogo56}></cib-logo>
		</div>
		<div class="container-title">${e=>{
					var t;
					return null === (t = e.vm) || void 0 === t ? void 0 : t.titleText
			}
			}</div>
		<div class="container-subTitle">${e=>{
					var t;
					return null === (t = e.vm) || void 0 === t ? void 0 : t.subTitleText
			}
			}</div>
	`)}

<slot ${slotted("slotContents")}></slot>
<div class="container-item">${repeat((e=>{
					var t;
					return null === (t = e.vm) || void 0 === t ? void 0 : t.messageItems
			}
			), im, {
					recycle: !1
			})}</div>
${rm} ${tm}
`
				, sm = html`
<div class="mobile-container">
	<div class="container-logo">
		<cib-logo class="orb" size=${Zh.CibLogo56}></cib-logo>
	</div>
	<div class="welcome-body">
		<div class="mobile-title">${e=>{
					var t;
					return null === (t = e.vm) || void 0 === t ? void 0 : t.titleText
			}
			}</div>
		<div class="mobile-subTitle">${e=>{
					var t;
					return null === (t = e.vm) || void 0 === t ? void 0 : t.tertiaryTitleText
			}
			}</div>
	</div>
	<div class="welcome-suggestion">
		${when((e=>{
					var t;
					return 0 === (null === (t = e.slotContents) || void 0 === t ? void 0 : t.length)
			}
			), html` ${repeat((e=>e.vm.getSuggestions()), nm, {
					recycle: !1
			})} `)}
	</div>
	<slot ${slotted("slotContents")} class="welcome-suggestion"> </slot>
</div>
`
				, am = html`
${when((e=>{
					var t;
					return 0 === (null === (t = e.slotContents) || void 0 === t ? void 0 : t.length)
			}
			), html`
		<div class="container-title">${e=>{
					var t;
					return null === (t = e.vm) || void 0 === t ? void 0 : t.titleText
			}
			}</div>
		<div class="container-subTitle">${e=>{
					var t;
					return null === (t = e.vm) || void 0 === t ? void 0 : t.subTitleText
			}
			}</div>
	`)}

<slot ${slotted("slotContents")}></slot>
<div class="container-item">${repeat((e=>{
					var t;
					return null === (t = e.vm) || void 0 === t ? void 0 : t.messageItems
			}
			), im, {
					recycle: !1
			})}</div>
`
				, lm = html`
<template product=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.productType
			}
			}> ${e=>(e=>{
					var t, n, i;
					switch (null === (t = e.layout) || void 0 === t ? void 0 : t.productType) {
					case Dd.Shoreline:
							return am;
					case Dd.Bing:
					default:
							if (!(null === (n = e.layout) || void 0 === n ? void 0 : n.isMobile))
									return om;
							if ((null === (i = e.layout) || void 0 === i ? void 0 : i.isMobile) && e.vm.showWelcomeScreen)
									return sm
					}
			}
			)(e)} </template>
`;
			let cm = class extends w {
					constructor() {
							super(...arguments),
							this.handleWelcomeMessageClick = e=>{
									const t = e.target;
									return this.vm.serp.submitQuery(null == t ? void 0 : t.body),
									!0
							}
							,
							this.handleSuggestionClick = e=>{
									const t = e.target;
									return this.vm.serp.invokeSuggestion(t.suggestion),
									!0
							}
					}
			}
			;
			__decorate([observable, __metadata("design:type", Object)], cm.prototype, "vm", void 0),
			__decorate([observable, __metadata("design:type", Object)], cm.prototype, "layout", void 0),
			__decorate([observable, __metadata("design:type", Array)], cm.prototype, "slotContents", void 0),
			cm = __decorate([customElement({
					name: "cib-welcome-container",
					template: lm,
					styles: Wh
			})], cm);
			const dm = css`
:host {
	align-items: flex-end;
	justify-content: center;
	width: 100%;
	max-width: 1120px;
	transition-property: transform, max-width, min-width;
	transition-duration: ${Bp.motion.duration.slowest};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
}

:host .floating,
:host .bottom {
	display: flex;
	justify-content: center;
}

:host .floating {
	position: fixed;
	top: 180px;
	inset-inline-start: 0;
	width: 100%;
	z-index: 5;
}

:host([mobile]) .floating {
	top: 48px;
	padding: 16px 0px;
}

:host([alignment=${Kc.Left}]) .floating {
	max-width: 1440px;
	box-sizing: border-box;
	padding: 0 128px;
}

.bottom-notifications {
	margin-top: 22px;
}
`
				, pm = css`
:host {
	width: 100vw;
}
.inline-noti {
	width: 98vw;
	max-width: 1120px;
	font-size: ${Up.typography.typeRamp.body1Strong.fontSize};
	margin-bottom: 5vh;
	display: flex;
	align-items: center;
	text-align: center;
}

.inline-noti .text-container,
.toast-noti {
	display: flex;
	flex-direction: row;
	gap: 5px;
}

.toast-noti {
	align-items: center;
	justify-content: center;
	background: #292827;
	border-radius: 12px;
	box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.14), 0px 0px 2px rgba(0, 0, 0, 0.12);
	color: #edebe9;
	padding: 12px 16px;
	gap: 10px;
	min-width: 46px;
	max-width: 600px;
	width: 354px;
	font-size: ${Up.typography.typeRamp.body2.fontSize};
	line-height: ${Up.typography.typeRamp.body2.lineHeight};
}

.toast-noti button {
	display: flex;
	height: 32px;
	padding: 0 16px;
	align-items: center;
	margin: 0;
	border: 0;
	margin-left: 8px;
	border-radius: 4px;
	color: black;
	background-color: white;
	opacity: 0.9;
	cursor: pointer;
	font-family: ${Up.typography.fonts.text};
	font-size: ${Up.typography.typeRamp.body2.fontSize};
	line-height: ${Up.typography.typeRamp.body2.lineHeight};
}

.toast-noti button:hover {
	opacity: 1;
}

.toast-noti button:active {
	opacity: 0.8;
}

.toast-noti button:focus,
.toast-noti button:focus-visible {
	outline: 2px solid black;
}

:host([mobile]) .toast-noti {
	width: 85vw;
}

.inline-noti .title {
	color: #444444;
}

.subtitle {
	color: #174aea;
	font-weight: 600;
}

.inline-noti::before,
.inline-noti::after {
	content: "";
	flex: 1;
	border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

.inline-noti::before {
	margin-inline-end: 1vw;
}

.inline-noti::after {
	margin-inline-start: 1vw;
}

/* MEDIA QUERIES */

@media (max-width: 767px) {
	.inline-noti .text-container {
		flex-direction: column;
	}
	.inline-noti {
		margin-bottom: unset;
	}
}
`
				, um = html`<div class="inline-noti">
<div class="text-container">
	${when((e=>{
					var t;
					return (null === (t = e.body.text) || void 0 === t ? void 0 : t.length) > 0
			}
			), html`<div class="title">${e=>e.body.text}</div>`)}
	${when((e=>{
					var t;
					return (null === (t = e.body.subText) || void 0 === t ? void 0 : t.length) > 0
			}
			), html`<div class="subtitle">${e=>e.body.subText}</div>`)}
</div>
</div>`
				, hm = html`<div class="toast-noti">
${when((e=>void 0 !== e.body.icon), html`<div class="icon">${e=>(e=>{
					if (e === Qa.Loading)
							return html`<svg-icon type=${Yp.RotatingLoader} size="20"></svg-icon>`
			}
			)(e.body.icon)}</div>`)}
${when((e=>{
					var t;
					return (null === (t = e.body.text) || void 0 === t ? void 0 : t.length) > 0
			}
			), html`<div class="title">${e=>e.body.text}</div>`)}
${when((e=>e.body.resetHandler), html`<button @click=${e=>e.body.resetHandler()}>${e=>e.body.cta}</button>`)}
</div>`
				, mm = html`
<template :type=${e=>e.body.type}> ${e=>(e=>{
					switch (null == e ? void 0 : e.body.type) {
					case Ka.Inline:
							return um;
					case Ka.Toast:
							return hm;
					default:
							return
					}
			}
			)(e)} </template>
`;
			let gm = class extends w {
			}
			;
			__decorate([observable, __metadata("design:type", Object)], gm.prototype, "body", void 0),
			__decorate([attr({
					mode: "boolean"
			}), __metadata("design:type", Boolean)], gm.prototype, "mobile", void 0),
			gm = __decorate([customElement({
					name: "cib-notification",
					template: mm,
					styles: pm
			})], gm);
			const _m = html`<div class="floating">
<div class="floating-notifications">
	${when((e=>{
					var t;
					return 0 === (null === (t = e.floatingContainerSlotContents) || void 0 === t ? void 0 : t.length)
			}
			), html`<cib-notification
			:layout=${e=>e.layout}
			:body=${e=>e.vm.floatingNotification}
		></cib-notification>`)}
</div>
<slot ${slotted("floatingContainerSlotContents")} class="floating-notifications"></slot>
</div>`
				, fm = html`<div class="bottom">
<div class="bottom-notifications">
	${when((e=>{
					var t;
					return 0 === (null === (t = e.bottomBarContainerSlotContents) || void 0 === t ? void 0 : t.length)
			}
			), html`<cib-notification
			:layout=${e=>e.layout}
			:body=${e=>e.vm.bottomBarNotification}
		></cib-notification>`)}
</div>
<slot ${slotted("bottomBarContainerSlotContents")} class="bottom-notifications"></slot>
</div>`
				, ym = html`
<template ?mobile=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.isMobile
			}
			} alignment=${e=>{
					var t;
					return null === (t = e.layout) || void 0 === t ? void 0 : t.alignment
			}
			}>
	${when((e=>{
					var t;
					return null === (t = e.vm) || void 0 === t ? void 0 : t.floatingNotification
			}
			), _m)}
	${when((e=>{
					var t;
					return null === (t = e.vm) || void 0 === t ? void 0 : t.bottomBarNotification
			}
			), fm)}
</template>
`;
			let vm = class extends w {
			}
			;
			__decorate([observable, __metadata("design:type", Object)], vm.prototype, "layout", void 0),
			__decorate([observable, __metadata("design:type", Array)], vm.prototype, "floatingContainerSlotContents", void 0),
			__decorate([observable, __metadata("design:type", Array)], vm.prototype, "bottomBarContainerSlotContents", void 0),
			vm = __decorate([customElement({
					name: "cib-notification-container",
					template: ym,
					styles: dm
			})], vm);
			const bm = html`
<div class="fade top">
	<cib-background class="background" :vm=${e=>e.vm.serp.background}></cib-background>
</div>
<div class="fade bottom">
	<cib-background class="background" :vm=${e=>e.vm.serp.background}></cib-background>
</div>
`
				, Sm = html`
${when((e=>e.vm.turnCount > e.vm.slottedModeTurnIndex && e.vm.turns[e.vm.slottedModeTurnIndex].bot.messageCount > 0), html`
		<div class="content">
			<div class="main">
				<cib-chat-turn :vm=${e=>e.vm.turns[e.vm.slottedModeTurnIndex]} :layout=${e=>e.layout}>
					<cib-message-group
						:vm=${e=>e.vm.turns[e.vm.slottedModeTurnIndex].bot}
						:layout=${e=>e.layout}
					></cib-message-group>
				</cib-chat-turn>
			</div>
			<cib-suggestion-bar class="suggestion-bar" :layout=${e=>e.layout} :vm=${e=>e.vm}></cib-suggestion-bar>
		</div>
	`)}
`
				, Cm = html`
<div class="scroller" ${ref("scrollerRef")}>
	<div class="scroller-positioner">
		<div class="content" ${ref("contentRef")}>
			<div class="main" id="cib-chat-main">
				<slot></slot>
				${when((e=>{
					var t;
					return null === (t = e.vm.welcomeContainer) || void 0 === t ? void 0 : t.showWelcomeScreen
			}
			), html`<cib-welcome-container
						:vm=${e=>e.vm.welcomeContainer}
						:layout=${e=>e.layout}
					></cib-welcome-container>`)}
				${repeat((e=>e.vm.turns), html`<cib-chat-turn
						:vm=${e=>e}
						:layout=${(e,t)=>t.parent.layout}
						${ref("turnRef")}
					></cib-chat-turn>`, {
					recycle: !1
			})}
				<cib-notification-container
					:layout=${e=>e.layout}
					:vm=${e=>e.vm.notificationContainer}
				></cib-notification-container>
			</div>
			${when((e=>e.vm.turnCount > 0), html`<cib-suggestion-bar
					class="suggestion-bar"
					:layout=${e=>e.layout}
					:vm=${e=>e.vm}
				></cib-suggestion-bar>`)}
		</div>
	</div>
	${when((e=>!e.layout.isMobile), bm)}
</div>
<div class="divider"></div>
`
				, Em = html`
<template
	id="cib-conversation-main"
	?mobile=${e=>e.layout.isMobile}
	?loading=${e=>e.isLoading}
	mode=${e=>e.vm.serp.mode}
	alignment=${e=>e.layout.alignment}
	serp-slot=${e=>e.layout.serpSlot}
	product-type=${e=>e.layout.productType}
>
	${when((e=>e.layout.serpSlot === Xc.None), Cm)}
	${when((e=>e.layout.serpSlot === Xc.Creator), Sm)}
	${when((e=>e.layout.serpSlot === Xc.Pole), Sm)}
	${when((e=>e.layout.serpSlot === Xc.RightRail), Sm)}
</template>
`;
			let Tm = class extends w {
					constructor() {
							super(),
							this.hasBottomFade = !1,
							this.hasTopFade = !0,
							this.isScrollEnabled = !1,
							this.isLoading = !0,
							this.contentSizeObserver = null,
							this.scrollerSizeObserver = null,
							this.currentContentHeight = 0,
							this.previousContentHeight = 0,
							this.previousLastMessage = null,
							this.throttleTime = 10,
							this.isWindowResizing = !1,
							this.resizeDelayTimerId = null,
							this.scrollPosition = 0,
							this.isScrollWithinLowerSnapRegion = !0,
							this.isPartialScroll = !1,
							this.handleResize = ()=>{
									this.isWindowResizing = !0,
									this.startResizeTimer()
							}
							,
							this.throttledHandleResize = lodash_es_throttle(this.handleResize, this.throttleTime),
							this.handleResizeEnd = ()=>{
									this.isWindowResizing = !1,
									this.updateScrollerEnabled(),
									this.updateContentHeight()
							}
							,
							this.onContentResize = e=>{
									this.updateScrollerEnabled();
									const t = this.vm.turnCount ? this.vm.current.lastMessage : null
										, n = this.previousLastMessage !== t && this.isScrollWithinLowerSnapRegion && !this.isPartialScroll;
									this.previousLastMessage = t,
									this.animateContent(n)
							}
							,
							this.onScrollerResize = e=>{
									this.scrollerRef && this.isScrollWithinLowerSnapRegion
							}
							,
							this.handleScroll = ()=>{
									if (void 0 !== this.scrollerRef && void 0 !== this.contentRef && this.scrollPosition !== this.scrollerRef.scrollTop) {
											this.scrollPosition = this.scrollerRef.scrollTop;
											const e = this.contentRef.scrollHeight - this.scrollerRef.clientHeight
												, t = 120;
											this.isScrollWithinLowerSnapRegion = !0,
											this.scrollPosition < e - t && (this.isScrollWithinLowerSnapRegion = !1);
											let n = !1
												, i = !1;
											this.scrollerRef.scrollTop < 1 && (n = !0),
											this.scrollPosition > e - 1 && (i = !0),
											this.hasBottomFade = !1,
											this.scrollPosition < e - 1 && (this.hasBottomFade = !0),
											this.vm.isScrollTop = n,
											this.vm.isScrollBottom = i,
											this.vm.hoverCard.setTarget(null)
									}
							}
							,
							this.throttledHandleScroll = lodash_es_throttle(this.handleScroll, this.throttleTime),
							this.disposer = new Disposer
					}
					connectedCallback() {
							super.connectedCallback(),
							this.contentRef && this.scrollerRef && (this.contentSizeObserver = new ResizeObserver(this.onContentResize),
							this.scrollerSizeObserver = new ResizeObserver(this.onScrollerResize),
							this.contentSizeObserver.observe(this.contentRef),
							this.scrollerSizeObserver.observe(this.scrollerRef),
							this.updateScrollerEnabled(),
							this.disposer.register(addDisposableListener(window, "resize", this.throttledHandleResize)),
							this.contentRef && this.disposer.register(addDisposableListener(this.contentRef, "transitionend", this.updateScrollPosition)),
							this.scrollerRef && this.disposer.register(addDisposableListener(this.scrollerRef, "scroll", this.throttledHandleScroll, {
									passive: !0
							})),
							this.onLoad())
					}
					disconnectedCallback() {
							var e;
							super.disconnectedCallback(),
							null === (e = this.contentSizeObserver) || void 0 === e || e.unobserve(this),
							this.disposer.isDisposed || this.disposer.dispose()
					}
					startResizeTimer() {
							this.resizeDelayTimerId && (window.clearTimeout(this.resizeDelayTimerId),
							this.resizeDelayTimerId = null),
							this.resizeDelayTimerId = window.setTimeout(this.handleResizeEnd, 166)
					}
					updateContentHeight() {
							void 0 !== this.contentRef && (this.previousContentHeight = this.contentRef.offsetHeight)
					}
					animateContent(e) {
							if (void 0 !== this.scrollerRef && void 0 !== this.contentRef)
									if (e) {
											if (!this.isWindowResizing) {
													this.currentContentHeight = this.contentRef.offsetHeight;
													const e = this.currentContentHeight - this.previousContentHeight;
													this.contentRef.style.removeProperty("transition-duration"),
													this.contentRef.style.setProperty("transform", `translateY(${e}px)`),
													setTimeout((()=>{
															var e, t;
															null === (e = this.contentRef) || void 0 === e || e.style.setProperty("transition-duration", "333ms"),
															null === (t = this.contentRef) || void 0 === t || t.style.removeProperty("transform"),
															this.previousContentHeight = this.currentContentHeight
													}
													))
											}
									} else
											this.previousContentHeight = this.contentRef.offsetHeight
					}
					updateScrollerEnabled() {
							void 0 !== this.scrollerRef && void 0 !== this.contentRef && (this.contentRef.offsetHeight > this.scrollerRef.offsetHeight ? (this.isScrollEnabled || (this.scrollerRef.classList.toggle("scroller-enabled", !0),
							this.isScrollEnabled = !0),
							this.updateScrollPosition()) : this.isScrollEnabled && (this.scrollerRef.classList.toggle("scroller-enabled", !1),
							this.isScrollEnabled = !1))
					}
					updateScrollPosition() {
							void 0 !== this.scrollerRef && void 0 !== this.contentRef && this.isScrollWithinLowerSnapRegion && (this.scrollViewFrame(),
							this.contentRef.style.removeProperty("transition-duration"))
					}
					scrollViewFrame() {
							const {lastMessage: e, turnRef: t} = this.vm.current;
							if (void 0 !== t && this.isAnswerTypeMessage(e)) {
									const e = t.getBoundingClientRect().top
										, n = this.scrollerRef.getBoundingClientRect().top;
									if (e - n > 0) {
											const t = e - n - (this.layout.isMobile ? 0 : 94);
											this.isPartialScroll = !0,
											this.scrollerRef.scrollBy({
													top: t,
													behavior: "smooth"
											})
									}
							} else
									this.isPartialScroll = !1,
									this.scrollerRef.scrollTop = this.scrollerRef.scrollHeight
					}
					isAnswerTypeMessage(e) {
							return (null == e ? void 0 : e.author) === ve.Bot && e.type === sl.Host && e.contentType === al.Answer
					}
					onLoad() {
							setTimeout((()=>{
									vc((()=>{
											this.isLoading = !1
									}
									))
							}
							), 20)
					}
			}
			;
			__decorate([attr({
					attribute: "has-bottom-fade",
					mode: "boolean"
			}), __metadata("design:type", Boolean)], Tm.prototype, "hasBottomFade", void 0),
			__decorate([attr({
					attribute: "has-top-fade",
					mode: "boolean"
			}), __metadata("design:type", Boolean)], Tm.prototype, "hasTopFade", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Tm.prototype, "isScrollEnabled", void 0),
			__decorate([observable, __metadata("design:type", Object)], Tm.prototype, "layout", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Tm.prototype, "isLoading", void 0),
			Tm = __decorate([customElement({
					name: "cib-conversation",
					template: Em,
					styles: zu
			}), __metadata("design:paramtypes", [])], Tm);
			const Im = css`
:host {
	--translate-y: 0%;
	--translate-panel-y: 200px;
	display: flex;
	flex-direction: column;
	position: absolute;
	z-index: 1;
	bottom: 0;
	width: 100%;
	min-height: 200px;
	height: min(calc(90vh - calc(env(safe-area-inset-top))), 100% - 80px);
	padding-bottom: max(0px, calc(env(safe-area-inset-bottom) - 20px));
	box-sizing: border-box;
	border-radius: 16px 16px 0 0;
	overflow: hidden;
	will-change: transform;
	backface-visibility: hidden;
	transform: unset;
	transition-property: transform;
	transition-duration: ${Bp.motion.duration.normal};
	transition-easising-function: ${Bp.motion.easingFunction.motionIn};
}

/* PANEL */

.panel {
	display: block;
	position: absolute;
	inset: 0px 0px -100vh;
	top: 100%;
	background: #f5f5f5;
	border-radius: 16px 16px 0 0;
	outline: 1px solid transparent;
	will-change: transform;
	backface-visibility: hidden;
	transform: translate3d(0, var(--translate-panel-y), 0);
	transition-duration: ${Bp.motion.duration.normal};
	transition-easising-function: ${Bp.motion.easingFunction.motionIn};
}

/* DETECTOR */

.detector {
	position: absolute;
	height: 60px;
	width: 100%;
	left: 0;
	top: 0;
	touch-action: none;
}

/* GRABBER */

.grabber {
	position: relative;
	height: 20px;
	width: 100%;
	flex-shrink: 0;
}

.grabber::before {
	content: "";
	position: absolute;
	height: 4px;
	width: 36px;
	border-radius: 2px;
	left: calc(50% - 18px);
	top: 8px;
	background: #919191;
	outline: 1px solid transparent;
	backface-visibility: hidden;
	will-change: transform;
}

/* SHARE CONTROLS */

.share-container {
	position: relative;
	height: 23px;
	width: 100%;
	flex-shrink: 0;
	border-bottom: 1px solid rgba(0, 0, 0, 0.1);
	z-index: 1;
	pointer-events: none;
	will-change: transform;
}

.share-button {
	position: absolute;
	display: flex;
	align-items: center;
	justify-content: center;
	height: 44px;
	width: 44px;
	bottom: 0;
	right: 14px;
	fill: #616161;
	border: none;
	background: none;
	pointer-events: auto;
}

.share-button:active {
	fill: ${Gp.colors.brand.solid.denimPlus1};
}

/* SHARE CONTROLS */

.main {
	display: flex;
	flex-direction: column;
	flex-grow: 1;
	position: relative;
	width: 100%;
	min-height: 0px;
}

/* STATES */

:host([mode=${Qc.OffStage}]) {
	transform: translateY(100%);
}

:host([initialize]) .panel {
	transition: unset;
}

:host([down]) {
	transition: unset;
	transform: translate3d(0, var(--translate-y), 0);
}

:host([down]) .panel {
	transition: unset;
}
`
				, wm = html`
<div class="share-container">
	<button
		class="share-button"
		type="button"
		aria-label=${e=>e.vm.strings.shareConversation}
		@click=${e=>e.handleShareButtonClick()}
	>
		<svg-icon type=${Yp.Share} size="24"></svg-icon>
	</button>
</div>
`
				, Am = html`
<template mode=${e=>e.vm.serp.mode} ?initialize=${e=>e.isInitializing} ?down=${e=>e.isTouchDown}>
	<div class="panel" ${ref("panelRef")}></div>
	<div class="grabber"></div>
	${when((e=>e.vm.enableShareConversation), wm)}
	<div class="main">
		<slot></slot>
	</div>
	<div class="detector" ${ref("detectorRef")}></div>
</template>
`;
			let Rm = class extends w {
					constructor() {
							super(),
							this.isTouchDown = !1,
							this.isInitializing = !0,
							this.resizeObserver = null,
							this.rafId = 0,
							this.panelHeight = 0,
							this.touchStartY = 0,
							this.touchDeltaY = 0,
							this.touchDeltaPreviousY = 0,
							this.touchDirectionIsDown = !1,
							this.handleShareButtonClick = ()=>{
									this.vm.shareConversation()
							}
							,
							this.setPanelHeight = ()=>{
									this.panelRef && (this.panelHeight = this.offsetHeight,
									this.isInitializing = !1)
							}
							,
							this.onDrawerResize = ()=>{
									this.panelRef && (this.setPanelHeight(),
									this.style.setProperty("--translate-panel-y", `-${this.panelHeight}px`))
							}
							,
							this.onTouchStart = e=>{
									this.detectorRef && (this.isTouchDown = !0,
									this.touchStartY = e.changedTouches[0].screenY)
							}
							,
							this.onTouchMove = e=>{
									this.detectorRef && (this.rafId = window.requestAnimationFrame((()=>{
											this.touchDeltaY = e.changedTouches[0].screenY - this.touchStartY;
											let t = this.touchDeltaY / this.panelHeight * 100;
											t = Math.min(Math.max(t, 0), 100),
											this.style.setProperty("--translate-y", `${t}%`),
											this.touchDirectionIsDown = !1,
											this.touchDeltaY > this.touchDeltaPreviousY && (this.touchDirectionIsDown = !0),
											this.touchDeltaPreviousY = this.touchDeltaY
									}
									)))
							}
							,
							this.onTouchEnd = e=>{
									this.detectorRef && (this.isTouchDown = !1,
									this.handleGesture())
							}
							,
							this.handleGesture = ()=>{
									var e;
									this.touchDirectionIsDown && (null === (e = this.vm) || void 0 === e || e.serp.changeMode(Qc.OffStage)),
									setTimeout((()=>{
											this.style.setProperty("--translate-y", "0%")
									}
									), 333)
							}
							,
							this.disposer = new Disposer
					}
					connectedCallback() {
							super.connectedCallback(),
							this.onDrawerResize(),
							this.resizeObserver = new ResizeObserver(this.onDrawerResize),
							this.resizeObserver.observe(this),
							this.detectorRef && (this.disposer.register(addDisposableListener(this.detectorRef, "touchstart", this.onTouchStart)),
							this.disposer.register(addDisposableListener(this.detectorRef, "touchmove", this.onTouchMove)),
							this.disposer.register(addDisposableListener(this.detectorRef, "touchend", this.onTouchEnd)))
					}
					disconnectedCallback() {
							var e;
							super.disconnectedCallback(),
							null === (e = this.resizeObserver) || void 0 === e || e.unobserve(this),
							window.cancelAnimationFrame(this.rafId),
							this.disposer.isDisposed || this.disposer.dispose()
					}
			}
			;
			__decorate([observable, __metadata("design:type", Boolean)], Rm.prototype, "isTouchDown", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Rm.prototype, "isInitializing", void 0),
			Rm = __decorate([customElement({
					name: "cib-drawer",
					template: Am,
					styles: Im
			}), __metadata("design:paramtypes", [])], Rm);
			const xm = css`
:host {
	position: relative;
	display: flex;
	align-items: center;
	justify-content: center;
	min-height: 320px;
	width: 100%;
	max-width: 1184px;
	box-sizing: border-box;
	padding: 32px;
	transition-property: height;
	transition-duration: ${Bp.motion.duration.slowest};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
}

.dynamic-image {
	display: flex;
	align-items: center;
	justify-content: center;
	position: absolute;
	width: 100%;
	aspect-ratio: 1920 / 640;
	background-image: url("/images/assets/background/shapes-1.png");
	background-position: center;
	background-size: cover;
	opacity: 0;
	transform: scale(0.5);
	transition-property: opacity, transform;
	transition-duration: ${Bp.motion.duration.slower};
	transition-timing-function: ${Bp.motion.easingFunction.motionTransition};
}
`
				, Om = css`
:host {
	font-size: 40px;
	line-height: 48px;
	font-weight: 400;
	text-align: center;
	user-select: text;
}

:host([text-align="left"]) {
	text-align: left;
}

:host([text-align="right"]) {
	text-align: right;
}
`
				, Nm = css`
@keyframes text-stream-item-enter {
	0% {
		opacity: 0;
		color: red;
		transform: scale(0.94);
	}
	75% {
		color: black;
	}
	100% {
		opacity: 1;
		color: black;
		transform: scale(1);
	}
}

:host {
	display: inline;
	position: relative;
	opacity: 0;
	text-shadow: rgb(255 255 255 / 60%) 0px 1px 2px;
	transform-origin: bottom;
	animation-name: text-stream-item-enter;
	animation-fill-mode: both;
	animation-duration: ${Bp.motion.duration.normal};
	animation-timing-function: ${Bp.motion.easingFunction.motionIn};
}
`
				, Pm = html`
<template style="animation-delay: ${e=>e.delay}ms">
	<slot></slot>
</template>
`;
			let Dm = class extends w {
					constructor() {
							super(...arguments),
							this.delay = 0
					}
			}
			;
			__decorate([attr, __metadata("design:type", Number)], Dm.prototype, "delay", void 0),
			Dm = __decorate([customElement({
					name: "cib-text-stream-item",
					template: Pm,
					styles: Nm
			})], Dm);
			const Mm = html`
<template
	style="font-size: ${e=>e.fontSize}; line-height: ${e=>e.lineHeight}; font-weight: ${e=>e.fontWeight}"
>
	${repeat((e=>e.textArray), html`<cib-text-stream-item delay=${e=>e.delay}>${e=>e.text}</cib-text-stream-item>`, {
					recycle: !1
			})}
</template>
`;
			let Lm = class extends w {
					constructor() {
							super(...arguments),
							this.text = "",
							this.initialDelay = 1e3,
							this.fontSize = "40px",
							this.lineHeight = "48px",
							this.fontWeight = 400,
							this.textAlign = "center",
							this.textArray = [],
							this.handleStringSplit = ()=>{
									var e;
									const t = null === (e = this.text) || void 0 === e ? void 0 : e.split(" ");
									let n = Number(this.initialDelay);
									for (let e = 0; e < (null == t ? void 0 : t.length); e++) {
											const i = {
													text: t[e],
													delay: this.getRandomArbitrary(80, 180) + n
											};
											this.textArray.push(i),
											n = i.delay
									}
							}
							,
							this.getRandomArbitrary = (e,t)=>Math.round(Math.random() * (t - e) + e)
					}
					connectedCallback() {
							super.connectedCallback(),
							this.handleStringSplit()
					}
					disconnectedCallback() {
							super.disconnectedCallback(),
							this.textArray = []
					}
					textChanged() {
							this.$fastController.isConnected && (this.textArray = [],
							this.handleStringSplit())
					}
			}
			;
			__decorate([attr, __metadata("design:type", String)], Lm.prototype, "text", void 0),
			__decorate([attr({
					attribute: "initial-delay"
			}), __metadata("design:type", Number)], Lm.prototype, "initialDelay", void 0),
			__decorate([attr({
					attribute: "font-size"
			}), __metadata("design:type", String)], Lm.prototype, "fontSize", void 0),
			__decorate([attr({
					attribute: "line-height"
			}), __metadata("design:type", String)], Lm.prototype, "lineHeight", void 0),
			__decorate([attr({
					attribute: "font-weight"
			}), __metadata("design:type", Number)], Lm.prototype, "fontWeight", void 0),
			__decorate([attr({
					attribute: "text-align"
			}), __metadata("design:type", String)], Lm.prototype, "textAlign", void 0),
			__decorate([observable, __metadata("design:type", Array)], Lm.prototype, "textArray", void 0),
			Lm = __decorate([customElement({
					name: "cib-text-stream",
					template: Mm,
					styles: Om
			})], Lm);
			const km = html`
<div class="dynamic-image"></div>
<cib-text-stream text=""> </cib-text-stream>
`;
			let Fm = class extends w {
			}
			;
			Fm = __decorate([customElement({
					name: "cib-dynamic-header",
					template: km,
					styles: xm
			})], Fm);
			const Bm = css`
:host {
	display: block;
	position: fixed;
	width: 100vw;
	height: 100vh;
	z-index: 9999;
	left: 0;
	top: 0;
	pointer-events: none;
	--position-left: 12px;
	--position-top: 100vh;
}

/* POSITIONER */

.positioner {
	display: block;
	position: absolute;
	width: max-content;
	height: auto;
	left: 0;
	top: 0;
	transform: translate(var(--position-left), var(--position-top));
}

/* DETECTOR */

.detector {
	max-height: calc(100vh - 24px);
	opacity: 0;
	pointer-events: none;
	box-sizing: border-box;
	padding: 4px;
	background: transparent;
}

/* CONTAINER */

.container {
	border-radius: 8px;
	display: flex;
	flex-direction: column;
	cursor: initial;
	text-decoration-line: none !important;
	text-decoration-style: none;
	text-decoration-color: initial;
	text-underline-offset: auto;
	border-radius: 8px;
	opacity: 0;
	overflow-x: hidden;
	overflow-y: auto;
	background: #f1f6fd;
	transform: translateY(8px);
	box-shadow: ${Gp.shadows.defaults.flyout};
	outline: 1px solid transparent;
	display: contents;
}

/* VISIBILITY */

:host([visible]) .detector {
	opacity: 1;
	pointer-events: auto;
}

:host([visible]) .container {
	opacity: 1;
	transform: translateY(0);
	transition-property: opacity, transform;
	transition-duration: ${Bp.motion.duration.normal};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

/* MOBILE */

:host([mobile]) .container {
	max-width: min(768px, 100vw - 24px);
}

/* IFRAMES */

.frame {
	position: relative;
	overflow: hidden;
	width: 100%;
	height: auto;
	border: none;
	outline: none;
	padding: 0;
	margin: 0;
	display: flex;
	align-self: flex-start;
	border-radius: 8px;
	box-shadow: ${Gp.shadows.defaults.layer};
}

.inline {
	margin: 0;
	border-radius: 8px;
	box-shadow: unset;
}

/* MEDIA QUERIES */

@media (max-width: 600px) {
	:host .detector,
	:host .container {
		max-width: calc(100vw - 16px);
	}
}

@media (max-width: 480px) {
	:host .positioner {
		width: 100%;
	}
}

/* MOBILE */

:host([mobile]) .container {
	background: #ffffff;
	backdrop-filter: unset;
	-webkit-backdrop-filter: unset;
}
`
				, Gm = html`
<template ?visible=${e=>e.isVisible} ?mobile=${e=>e.vm.serp.isMobile}>
	<div class="positioner" ${ref("positionerRef")}>
		<div class="detector" ${ref("detectorRef")}>
			<div class="container" ${ref("containerRef")}></div>
		</div>
	</div>
</template>
`;
			let Um = class extends w {
					constructor() {
							super(),
							this.isVisible = !1,
							this.resizeObserver = null,
							this.target = null,
							this.previousTarget = null,
							this.isCurrentCibSerp = !1,
							this.pointerEvent = null,
							this.willBeVisible = !1,
							this.hoverDelayTimerId = null,
							this.hoverDelayTimerDuration = 667,
							this.hoverResetTimerId = null,
							this.hoverResetTimerDuration = 0,
							this.onTargetPointerEnter = e=>{
									var t;
									this.isVisible = !1,
									this.clearHoverDelayTimer(),
									this.clearHoverResetTimer(),
									e.preventDefault(),
									null !== this.target && (this.target.classList.toggle("hover", !0),
									null === (t = this.previousTarget) || void 0 === t || t.classList.toggle("hover", !1),
									this.willBeVisible = !0,
									this.hoverDelayTimerId = window.setTimeout((()=>{
											this.enableCardVisibility(e)
									}
									), this.hoverDelayTimerDuration))
							}
							,
							this.onTargetPointerMove = e=>{
									var t, n, i, r, o, s, a, l;
									if (null !== this.target && "touch" !== e.pointerType) {
											const c = {
													x: null !== (n = null === (t = this.pointerEvent) || void 0 === t ? void 0 : t.pageX) && void 0 !== n ? n : e.pageX,
													y: null !== (r = null === (i = this.pointerEvent) || void 0 === i ? void 0 : i.pageY) && void 0 !== r ? r : e.pageY
											}
												, d = this.target.getClientRects()
												, p = (null === (s = null === (o = this.containerRef) || void 0 === o ? void 0 : o.querySelector(".actionmenu")) || void 0 === s ? void 0 : s.querySelector(".actionmenucontent")) || null
												, u = {
													height: null !== (a = null == p ? void 0 : p.getBoundingClientRect().height) && void 0 !== a ? a : this.hoverCardRect.height,
													width: null !== (l = null == p ? void 0 : p.getBoundingClientRect().width) && void 0 !== l ? l : this.hoverCardRect.width
											}
												, h = this.getHoverPosition(d, c, u);
											if (void 0 !== h) {
													this.hoverCardRect.x = h.x,
													this.hoverCardRect.y = h.y;
													const e = new Rect_Rect(h.x,h.y,u.width,u.height);
													this.hoverCardRect = this.clampRectToViewport(e),
													this.vm.isMobile || (this.positionerRef.style.setProperty("--position-left", `${this.hoverCardRect.x}px`),
													this.positionerRef.style.setProperty("--position-top", `${this.hoverCardRect.y}px`))
											}
											const m = this.getSelectedText();
											void 0 !== m && m.length > 0 && this.target.classList.toggle("hover", !1)
									}
							}
							,
							this.onTargetPointerLeave = e=>{
									"touch" === e.pointerType && this.willBeVisible || (this.hoverResetTimerId = window.setTimeout((()=>{
											this.resetCardVisibility()
									}
									), this.hoverResetTimerDuration))
							}
							,
							this.onContainerPointerEnter = e=>{
									var t;
									this.clearHoverResetTimer(),
									null === (t = this.target) || void 0 === t || t.classList.toggle("hover", !0),
									this.isVisible = !0
							}
							,
							this.onContainerPointerDown = e=>{
									e.stopPropagation()
							}
							,
							this.onContainerPointerLeave = e=>{
									"touch" !== e.pointerType && this.resetCardVisibility()
							}
							,
							this.onContainerResize = ()=>{
									var e, t, n;
									const i = (null === (t = null === (e = this.containerRef) || void 0 === e ? void 0 : e.querySelector(".actionmenu")) || void 0 === t ? void 0 : t.querySelector(".actionmenucontent")) || null;
									this.detectorRef && (this.hoverCardRect = this.clampRectToViewport(null !== (n = null == i ? void 0 : i.getBoundingClientRect()) && void 0 !== n ? n : this.detectorRef.getBoundingClientRect()),
									this.vm.isMobile || (this.positionerRef.style.setProperty("--position-left", `${this.hoverCardRect.x}px`),
									this.positionerRef.style.setProperty("--position-top", `${this.hoverCardRect.y}px`)))
							}
							,
							this.onDocumentPointerMove = e=>{
									this.pointerEvent = e
							}
							,
							this.onDocumentPointerDown = e=>{
									"touch" === e.pointerType && this.willBeVisible || this.resetCardVisibility()
							}
							,
							this.onDocumentPointerLeave = e=>{
									"touch" !== e.pointerType && this.resetCardVisibility()
							}
							,
							this.onDocumentTouchMove = e=>{
									this.resetCardVisibility()
							}
							,
							this.enableCardVisibility = e=>{
									var t, n, i, r, o, s, a, l, c, d, p;
									const u = {
											x: null !== (n = null === (t = this.pointerEvent) || void 0 === t ? void 0 : t.pageX) && void 0 !== n ? n : e.pageX,
											y: null !== (r = null === (i = this.pointerEvent) || void 0 === i ? void 0 : i.pageY) && void 0 !== r ? r : e.pageY
									}
										, h = null === (o = this.target) || void 0 === o ? void 0 : o.getClientRects()
										, m = null === (a = null === (s = this.containerRef) || void 0 === s ? void 0 : s.querySelector(".actionmenu")) || void 0 === a ? void 0 : a.querySelector(".actionmenucontent");
									if (void 0 !== h) {
											const t = {
													height: null !== (l = null == m ? void 0 : m.offsetHeight) && void 0 !== l ? l : this.detectorRef.offsetHeight,
													width: null !== (c = null == m ? void 0 : m.offsetWidth) && void 0 !== c ? c : this.detectorRef.offsetWidth
											}
												, n = h[h.length - 1];
											let i = n.y + n.height;
											"touch" !== e.pointerType && (i = null !== (p = null === (d = this.getHoverPosition(h, u, t)) || void 0 === d ? void 0 : d.y) && void 0 !== p ? p : i);
											const r = {
													x: u.x,
													y: i
											};
											this.hoverCardRect = {
													...t,
													...r
											},
											this.hoverCardRect = this.clampRectToViewport(this.hoverCardRect),
											this.vm.isMobile || (this.positionerRef.style.setProperty("--position-left", `${this.hoverCardRect.x}px`),
											this.positionerRef.style.setProperty("--position-top", `${this.hoverCardRect.y}px`)),
											this.willBeVisible = !1,
											this.isVisible = !0
									}
							}
							,
							this.resetCardVisibility = ()=>{
									var e, t;
									this.clearHoverDelayTimer(),
									this.resetCardVisibilityCSS(),
									null === (e = this.target) || void 0 === e || e.classList.toggle("hover", !1),
									null === (t = this.previousTarget) || void 0 === t || t.classList.toggle("hover", !1),
									this.willBeVisible = !1,
									this.isVisible = !1
							}
							,
							this.resetCardVisibilityCSS = ()=>{
									this.classList.toggle("animate", !1),
									this.classList.toggle("visible", !1)
							}
							,
							this.disposer = new Disposer,
							this.subscriberDisposer = new Disposer,
							this.disposer.register((()=>this.disposeSubscriber())),
							this.hoverCardRect = {
									x: 0,
									y: 0,
									width: 0,
									height: 0
							}
					}
					connectedCallback() {
							super.connectedCallback(),
							this.subscribeToViewModelChanges(),
							this.disposer.register(addDisposableListener(document, "pointermove", this.onDocumentPointerMove)),
							this.disposer.register(addDisposableListener(document, "pointerdown", this.onDocumentPointerDown)),
							this.disposer.register(addDisposableListener(document, "pointerleave", this.onDocumentPointerLeave)),
							this.disposer.register(addDisposableListener(document, "touchmove", this.onDocumentTouchMove)),
							this.detectorRef && (this.disposer.register(addDisposableListener(this.detectorRef, "pointerenter", this.onContainerPointerEnter)),
							this.disposer.register(addDisposableListener(this.detectorRef, "pointerdown", this.onContainerPointerDown)),
							this.disposer.register(addDisposableListener(this.detectorRef, "pointerleave", this.onContainerPointerLeave)),
							this.resizeObserver = new ResizeObserver(this.onContainerResize),
							this.resizeObserver.observe(this.detectorRef)),
							this.containerRef && (this.vm.container = this.containerRef)
					}
					disconnectedCallback() {
							var e;
							super.disconnectedCallback(),
							this.disposer.isDisposed || this.disposer.dispose(),
							this.detectorRef && (null === (e = this.resizeObserver) || void 0 === e || e.unobserve(this.detectorRef))
					}
					disposeSubscriber() {
							this.subscriberDisposer.isDisposed || this.subscriberDisposer.dispose()
					}
					subscribeToViewModelChanges() {
							const e = {
									handleChange: (t,n)=>{
											var i;
											null === (i = this.vm.log) || void 0 === i || i.trace(this, e.handleChange, "property", n),
											t === this.vm && ("content" === n && this.onContentChanged(this.vm.content),
											"target" === n && this.onTargetChanged(this.vm.target))
									}
							};
							this.vmChangeNotifier = _.getNotifier(this.vm),
							this.vmChangeNotifier.subscribe(e),
							this.subscriberDisposer.register((()=>this.vmChangeNotifier.unsubscribe(e)))
					}
					onContentChanged(e) {
							var t;
							null === (t = this.vm.log) || void 0 === t || t.trace(this, this.onContentChanged, "content", e),
							this.containerRef && e && this.containerRef.appendChild(e)
					}
					onTargetChanged(e) {
							e !== this.target && (this.previousTarget = this.target,
							this.isCurrentCibSerp = this.findNearestHostElementByTagName(e, "CIB-SERP") === this.getHostElement(this),
							this.target = this.isCurrentCibSerp ? e : null,
							this.addTargetEventListeners(),
							setTimeout((()=>{
									null !== this.pointerEvent && this.onTargetPointerEnter(this.pointerEvent)
							}
							)))
					}
					findNearestHostElementByTagName(e, t) {
							var n;
							if (!e)
									return null;
							if (e.tagName === t)
									return e;
							const i = this.getHostElement(e);
							return null !== (n = this.findNearestHostElementByTagName(i, t)) && void 0 !== n ? n : null
					}
					getHostElement(e) {
							if (!e)
									return null;
							const t = e.getRootNode();
							return t instanceof ShadowRoot ? t.host : null
					}
					clearHoverDelayTimer() {
							this.hoverDelayTimerId && window.clearTimeout(this.hoverDelayTimerId)
					}
					clearHoverResetTimer() {
							this.hoverResetTimerId && window.clearTimeout(this.hoverResetTimerId)
					}
					addTargetEventListeners() {
							this.isCurrentCibSerp && null !== this.target && (this.disposer.register(addDisposableListener(this.target, "pointerenter", this.onTargetPointerEnter)),
							this.disposer.register(addDisposableListener(this.target, "pointermove", this.onTargetPointerMove)),
							this.disposer.register(addDisposableListener(this.target, "pointerleave", this.onTargetPointerLeave)))
					}
					getHoverPosition(e, t, n) {
							for (let i = 0; i < e.length; i++) {
									const r = e[i].top
										, o = e[i].bottom;
									if (t.y >= r && t.y <= o)
											return void 0 !== n && o + n.height > window.innerHeight ? {
													x: t.x,
													y: r - n.height
											} : {
													x: t.x,
													y: o
											}
							}
					}
					clampRectToViewport(e) {
							const t = this.layout.isMobile ? 92 : 8;
							return e.x = Math.round(e.x - e.width / 2),
							e.y = Math.round(e.y),
							e.x < 8 ? e.x = 8 : e.x + e.width > window.innerWidth - 8 && (e.x = Math.round(window.innerWidth - e.width - 8)),
							e.y < 8 ? e.y = 8 : e.y + e.height > window.innerHeight - t && (e.y = Math.round(window.innerHeight - e.height - t)),
							e
					}
					getSelectedText() {
							let e;
							return void 0 !== window.getSelection && (e = window.getSelection().toString()),
							e
					}
			}
			;
			__decorate([observable, __metadata("design:type", Object)], Um.prototype, "vm", void 0),
			__decorate([observable, __metadata("design:type", Object)], Um.prototype, "layout", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Um.prototype, "isVisible", void 0),
			Um = __decorate([customElement({
					name: "cib-hover",
					template: Gm,
					styles: Bm
			}), __metadata("design:paramtypes", [])], Um);
			const zm = css`
:host {
	display: block;
	position: fixed;
	width: 100vw;
	height: 100vh;
	z-index: 9999;
	left: 0;
	top: 0;
	pointer-events: none;
	--position-left: 12px;
	--position-top: 100vh;
}

/* POSITIONER */

.positioner {
	display: block;
	position: absolute;
	width: max-content;
	height: auto;
	left: 0;
	top: 0;
	transform: translate(var(--position-left), var(--position-top));
}

/* DETECTOR */

.detector {
	max-height: calc(100vh - 24px);
	opacity: 0;
	pointer-events: none;
	box-sizing: border-box;
	padding: 4px;
	background: transparent;
}

/* CONTAINER */

.container {
	border-radius: 8px;
	display: flex;
	flex-direction: column;
	cursor: initial;
	text-decoration-line: none !important;
	text-decoration-style: none;
	text-decoration-color: initial;
	text-underline-offset: auto;
	border-radius: 8px;
	opacity: 0;
	overflow-x: hidden;
	overflow-y: auto;
	background: #f9fbff;
	transform: translateY(8px);
	box-shadow: ${Gp.shadows.defaults.flyout};
	outline: 1px solid transparent;
}

:host([serp-slot=${Xc.Creator}]) .container,
:host([serp-slot=${Xc.Pole}]) .container,
:host([serp-slot=${Xc.RightRail}]) .container {
	background: #f5f5f5;
}

/* VISIBILITY */

:host([visible]) .detector {
	opacity: 1;
	pointer-events: auto;
}

:host([visible]) .container {
	opacity: 1;
	transform: translateY(0);
	transition-property: opacity, transform;
	transition-duration: ${Bp.motion.duration.normal};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

/* MOBILE */

:host([mobile]) .container {
	max-width: min(768px, 100vw - 24px);
}

/* ATTRIBUTION ITEM */

.attributions {
	box-sizing: border-box;
}

.attribution-item {
	position: relative;
	display: block;
	padding: 0px 6px;
	text-decoration-line: none;
}

.attribution-item:first-child {
	padding-top: 6px;
}

.attribution-item:last-child {
	padding-bottom: 6px;
}

:host(:not([has-advert])[single]) .attribution-item {
	padding: 0 !important;
}

/* ATTRIBUTION ITEM BACKGROUND */

.attribution-item .background {
	position: absolute;
	top: 0;
	bottom: 0;
	left: 6px;
	right: 6px;
	border-radius: 4px;
	background: #ffffff;
	opacity: 0;
	box-shadow: ${Gp.shadows.elevations.elevation2};
}

.attribution-item:first-child .background {
	top: 6px;
}

.attribution-item:last-child .background {
	bottom: 6px;
}

.attribution-item:hover .background,
:host(:not([has-advert])) .detector .attributions:not(:hover) .attribution-item:first-child .background,
:host(:not(:hover):not([has-advert])) .attributions .attribution-item:first-child .background {
	opacity: 1;
}

:host(:not([has-advert])[single]) .attribution-item .background {
	inset: 0px !important;
	box-shadow: unset;
}

/* ATTRIBUTION ITEM CONTENT */

.attribution-item .content {
	position: relative;
	display: flex;
	flex-direction: row;
	align-items: center;
	gap: 12px;
	padding: 8px 12px;
	text-decoration-line: none;
	max-width: 660px;
}

/* ATTRIBUTION ITEMS */

.attribution-item:first-child {
	border-top: none;
}

.attribution-item .link-container {
	display: flex;
	flex-direction: column;
	width: calc(100% - 48px);
}

.attribution-item .favicon {
	align-self: flex-start;
	height: 32px;
	width: 32px;
	margin-top: 3px;
	user-select: none;
}

.attribution-item h4,
.attribution-item p,
.attribution-item .link-text {
	word-break: break-all;
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
	max-width: 100%;
	margin: 0;
	text-decoration-line: none;
	user-select: none;
}

.attribution-item h4 {
	color: #1a0dab;
	font-size: ${Up.typography.typeRamp.subtitle2.fontSize};
	line-height: ${Up.typography.typeRamp.subtitle2.lineHeight};
	font-weight: ${Up.typography.typeRamp.subtitle2.fontWeight};
	font-weight: 500;
	font-variation-settings: ${Up.typography.typeRamp.subtitle2.fontVariationSettings};
}

.attribution-item .link-text {
	color: #006621;
	font-size: ${Up.typography.typeRamp.body1.fontSize};
	line-height: ${Up.typography.typeRamp.body1.lineHeight};
	font-weight: ${Up.typography.typeRamp.body1.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.body1.fontVariationSettings};
}

.attribution-item .descriptions {
	color: #666666;
	margin-top: 3px;
	font-size: ${Up.typography.typeRamp.body1.fontSize};
	line-height: ${Up.typography.typeRamp.body1.lineHeight};
	font-weight: ${Up.typography.typeRamp.body1.fontWeight};
	font-variation-settings: ${Up.typography.typeRamp.body1.fontVariationSettings};
}

.attribution-item:hover h4,
.attribution-item:hover .link-text {
	text-decoration: underline;
}

.attribution-item .ellipsis {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

/* ADVERTS */

.adverts {
	display: flex;
	flex-direction: column;
}

.advert-item {
	overflow: hidden;
	position: relative;
	visibility: hidden;
	height: 0px;
	width: 24px;
	max-width: min(768px, 90vw);
	padding: 0;
}

.advert-item.visible {
	visibility: visible;
	height: unset;
	width: unset;
	padding-bottom: 6px;
}

:host([has-advert]) .advert-item.visible {
	padding: 6px 6px 0;
}

.advert-item .background {
	position: absolute;
	inset: 6px;
	background: white;
	opacity: 0.7;
	border-radius: 4px;
	box-shadow: ${Gp.shadows.elevations.elevation2};
}

:host([has-advert]) .advert-item.visible .background {
	opacity: 1;
}

:host([has-advert]) .container:hover .advert-item.visible .background {
	opacity: 0.6;
}

.advert-item:hover .background {
	opacity: 1 !important;
}

/* IFRAMES */

.frame {
	position: relative;
	overflow: hidden;
	width: 100%;
	height: auto;
	border: none;
	outline: none;
	padding: 0;
	margin: 0;
	display: flex;
	align-self: flex-start;
	border-radius: 8px;
	box-shadow: ${Gp.shadows.defaults.layer};
}

.inline {
	margin: 0;
	border-radius: 8px;
	box-shadow: unset;
}

/* FAVICON */
.placeholder-favicon-container {
	display: flex;
	justify-content: center;
	align-items: center;
	align-self: flex-start;
	height: 32px;
	width: 32px;
	margin-top: 3px;
	background-color: #f0f0f0;
	border-radius: 2px;
}

.placeholder-favicon {
	fill: ${Gp.colors.brand.solid.denim};
}

/* MEDIA QUERIES */

@media (max-width: 600px) {
	:host .detector,
	:host .container {
		max-width: calc(100vw - 16px);
	}
}

@media (max-width: 480px) {
	:host .positioner {
		width: 100%;
	}
}

/* MOBILE */

:host([mobile]) .container {
	background: #f5f5f5;
}
`
				, $m = html`
<div class="placeholder-favicon-container">
	<svg-icon class="placeholder-favicon" type=${Yp.Globe} size="24"></svg-icon>
</div>
`
				, Vm = html`
<a
	h="${e=>e.h}"
	class="attribution-item"
	href=${e=>e.link}
	target="_blank"
	@click=${(e,t)=>e.handleLinkClick(t.event)}
>
	<span class="background"></span>
	<span class="content">
		${when(((e,t)=>t.parent.vm.showAttributionFavicons), html`
				${when((e=>e.favIcon && e.favIcon.length), html`<img
class="favicon"
role="presentation"
src=${(e,t)=>t.parent.getFavIcon(e.favIcon)}
/> `)}
				${when((e=>{
					var t;
					return !e.favIcon || !(null === (t = e.favIcon) || void 0 === t ? void 0 : t.length)
			}
			), $m)}
			`)}
		<span class="link-container">
			<h4 class="ellipsis">${e=>e.title}</h4>
			<p class="link-text ellipsis">${e=>e.link}</p>
			${when((e=>{
					var t;
					return null === (t = e.description) || void 0 === t ? void 0 : t.length
			}
			), html`<p class="descriptions">
					${repeat((e=>e.description), html`<span class="ellipsis">${e=>e}</span>`)}
				</p>`)}
		</span>
	</span>
</a>
`
				, Hm = html`
${when((e=>{
					var t;
					return null === (t = e.vm.citations) || void 0 === t ? void 0 : t.length
			}
			), html` ${repeat((e=>e.vm.citations), Vm)} `)}
`
				, qm = html`
<div class="advert-item" data-advert-query=${e=>e.query}>
	<div class="background"></div>
	${OnceDirective_once((e=>e.model), Wu)}
</div>
`
				, jm = html`
<template
	?visible=${e=>e.isVisible}
	?has-advert=${e=>e.hasAdvert}
	?mobile=${e=>e.vm.serp.isMobile}
	?single=${e=>e.citationHasSingleAttribution}
	serp-slot=${e=>e.layout.serpSlot}
>
	<div class="positioner" ${ref("positionerRef")}>
		<div class="detector" ${ref("detectorRef")}>
			<div class="container">
				<div class="adverts" ${ref("advertsRef")}>${repeat((e=>e.vm.adverts), qm)}</div>
				<div class="attributions">${Hm}</div>
			</div>
		</div>
	</div>
</template>
`;
			let Wm = class extends w {
					constructor() {
							super(),
							this.isVisible = !1,
							this.hasAdvert = !1,
							this.citationHasSingleAttribution = !1,
							this.target = null,
							this.previousTarget = null,
							this.currentCibSerp = null,
							this.isCurrentCibSerp = !1,
							this.pointerEvent = null,
							this.willBeVisible = !1,
							this.hoverDelayTimerId = null,
							this.hoverDelayTimerDuration = 500,
							this.hoverResetTimerId = null,
							this.hoverResetTimerDuration = 0,
							this.onTargetPointerEnter = e=>{
									var t;
									this.isVisible = !1,
									this.displayRelevantAdvert(),
									this.clearHoverDelayTimer(),
									this.clearHoverResetTimer(),
									e.preventDefault(),
									null !== this.target && (this.target.classList.toggle("hover", !0),
									null === (t = this.previousTarget) || void 0 === t || t.classList.toggle("hover", !1),
									this.willBeVisible = !0,
									this.hasAdvert || this.vm.applyLinkToTarget(),
									this.hoverDelayTimerId = window.setTimeout((()=>{
											this.enableCardVisibility(e)
									}
									), this.hoverDelayTimerDuration))
							}
							,
							this.onTargetPointerMove = e=>{
									var t, n, i, r;
									if (null !== this.target && "touch" !== e.pointerType) {
											const o = {
													x: null !== (n = null === (t = this.pointerEvent) || void 0 === t ? void 0 : t.pageX) && void 0 !== n ? n : e.pageX,
													y: null !== (r = null === (i = this.pointerEvent) || void 0 === i ? void 0 : i.pageY) && void 0 !== r ? r : e.pageY
											}
												, s = this.target.getClientRects()
												, a = {
													height: this.hoverCardRect.height,
													width: this.hoverCardRect.width
											}
												, l = this.getHoverPosition(s, o, a);
											void 0 !== l && (this.hoverCardRect.x = l.x,
											this.hoverCardRect = this.clampRectToViewport(this.hoverCardRect),
											this.positionerRef.style.setProperty("--position-left", `${this.hoverCardRect.x}px`));
											const c = this.getSelectedText();
											void 0 !== c && c.length > 0 && this.target.classList.toggle("hover", !1)
									}
							}
							,
							this.onTargetPointerLeave = e=>{
									"touch" === e.pointerType && this.willBeVisible || (this.hoverResetTimerId = window.setTimeout((()=>{
											this.resetCardVisibility()
									}
									), this.hoverResetTimerDuration))
							}
							,
							this.onContainerPointerEnter = e=>{
									var t;
									this.clearHoverResetTimer(),
									null === (t = this.target) || void 0 === t || t.classList.toggle("hover", !0),
									this.isVisible = !0
							}
							,
							this.onContainerPointerDown = e=>{
									e.stopPropagation()
							}
							,
							this.onContainerPointerLeave = e=>{
									"touch" !== e.pointerType && this.resetCardVisibility()
							}
							,
							this.onDocumentPointerMove = e=>{
									this.pointerEvent = e
							}
							,
							this.onDocumentPointerDown = e=>{
									"touch" === e.pointerType && this.willBeVisible || this.resetCardVisibility()
							}
							,
							this.onDocumentPointerLeave = e=>{
									"touch" !== e.pointerType && this.resetCardVisibility()
							}
							,
							this.onDocumentTouchMove = e=>{
									this.resetCardVisibility()
							}
							,
							this.enableCardVisibility = e=>{
									var t, n, i, r, o, s, a;
									const l = {
											x: null !== (n = null === (t = this.pointerEvent) || void 0 === t ? void 0 : t.pageX) && void 0 !== n ? n : e.pageX,
											y: null !== (r = null === (i = this.pointerEvent) || void 0 === i ? void 0 : i.pageY) && void 0 !== r ? r : e.pageY
									}
										, c = null === (o = this.target) || void 0 === o ? void 0 : o.getClientRects();
									if (void 0 !== c) {
											const t = {
													height: this.detectorRef.offsetHeight,
													width: this.detectorRef.offsetWidth
											}
												, n = c[c.length - 1];
											let i = n.y + n.height;
											"touch" !== e.pointerType && (i = null !== (a = null === (s = this.getHoverPosition(c, l, t)) || void 0 === s ? void 0 : s.y) && void 0 !== a ? a : i);
											const r = {
													x: l.x,
													y: i
											};
											this.hoverCardRect = {
													...t,
													...r
											},
											this.hoverCardRect = this.clampRectToViewport(this.hoverCardRect),
											this.positionerRef.style.setProperty("--position-left", `${this.hoverCardRect.x}px`),
											this.positionerRef.style.setProperty("--position-top", `${this.hoverCardRect.y}px`),
											this.willBeVisible = !1,
											this.isVisible = !0
									}
							}
							,
							this.resetCardVisibility = ()=>{
									var e, t;
									this.hideAllAdverts(),
									this.clearHoverDelayTimer(),
									this.resetCardVisibilityCSS(),
									null === (e = this.target) || void 0 === e || e.classList.toggle("hover", !1),
									null === (t = this.previousTarget) || void 0 === t || t.classList.toggle("hover", !1),
									this.willBeVisible = !1,
									this.isVisible = !1
							}
							,
							this.resetCardVisibilityCSS = ()=>{
									this.classList.toggle("animate", !1),
									this.classList.toggle("visible", !1)
							}
							,
							this.disposer = new Disposer,
							this.subscriberDisposer = new Disposer,
							this.disposer.register((()=>this.disposeSubscriber())),
							this.hoverCardRect = {
									x: 0,
									y: 0,
									width: 0,
									height: 0
							}
					}
					connectedCallback() {
							super.connectedCallback(),
							this.subscribeToViewModelChanges(),
							this.disposer.register(addDisposableListener(document, "pointermove", this.onDocumentPointerMove)),
							this.disposer.register(addDisposableListener(document, "pointerdown", this.onDocumentPointerDown)),
							this.disposer.register(addDisposableListener(document, "pointerleave", this.onDocumentPointerLeave)),
							this.disposer.register(addDisposableListener(document, "touchmove", this.onDocumentTouchMove)),
							this.detectorRef && (this.disposer.register(addDisposableListener(this.detectorRef, "pointerenter", this.onContainerPointerEnter)),
							this.disposer.register(addDisposableListener(this.detectorRef, "pointerdown", this.onContainerPointerDown)),
							this.disposer.register(addDisposableListener(this.detectorRef, "pointerleave", this.onContainerPointerLeave)))
					}
					disconnectedCallback() {
							super.disconnectedCallback(),
							this.disposer.isDisposed || this.disposer.dispose()
					}
					disposeSubscriber() {
							this.subscriberDisposer.isDisposed || this.subscriberDisposer.dispose()
					}
					subscribeToViewModelChanges() {
							const e = {
									handleChange: (e,t)=>{
											e === this.vm && this.onTargetChanged(this.vm.target)
									}
							};
							this.vmChangeNotifier = _.getNotifier(this.vm),
							this.vmChangeNotifier.subscribe(e),
							this.subscriberDisposer.register((()=>this.vmChangeNotifier.unsubscribe(e)))
					}
					onTargetChanged(e) {
							e !== this.target && (this.previousTarget = this.target,
							this.currentCibSerp = this.findNearestHostElementByTagName(e, "CIB-SERP"),
							this.currentCibSerpTop = this.getDistanceFromTop(this.currentCibSerp),
							this.isCurrentCibSerp = this.currentCibSerp === this.getHostElement(this),
							this.target = this.isCurrentCibSerp ? e : null,
							this.addTargetEventListeners(),
							setTimeout((()=>{
									null !== this.pointerEvent && this.onTargetPointerEnter(this.pointerEvent)
							}
							)))
					}
					findNearestHostElementByTagName(e, t) {
							var n;
							if (!e)
									return null;
							if (e.tagName === t)
									return e;
							const i = this.getHostElement(e);
							return null !== (n = this.findNearestHostElementByTagName(i, t)) && void 0 !== n ? n : null
					}
					getHostElement(e) {
							if (!e)
									return null;
							const t = e.getRootNode();
							return t instanceof ShadowRoot ? t.host : null
					}
					getDistanceFromTop(e) {
							if (!e)
									return;
							let t = 0;
							for (; e; )
									t += e.offsetTop,
									e = e.offsetParent;
							return t
					}
					displayRelevantAdvert() {
							var e, t, n, i;
							if (this.hideAllAdverts(),
							this.citationHasSingleAttribution = 1 === (null === (e = this.vm.citations) || void 0 === e ? void 0 : e.length),
							null === (t = this.vm.citations) || void 0 === t ? void 0 : t.length) {
									const e = this.vm.getSearchQueryFromUrl(this.vm.citations[0].link);
									null === (i = null === (n = this.advertsRef) || void 0 === n ? void 0 : n.querySelectorAll(".advert-item")) || void 0 === i || i.forEach((t=>{
											const n = t.getAttribute("data-advert-query");
											if (!n)
													return;
											const i = this.hasVisibleFrame(t);
											e === n && i && (t.classList.toggle("visible", !0),
											this.hasAdvert = !0,
											this.sendVisibilitySignal(t, !0),
											this.vm.applyLinkToTargetFromQuery(n))
									}
									))
							}
					}
					hideAllAdverts() {
							var e, t;
							null === (t = null === (e = this.advertsRef) || void 0 === e ? void 0 : e.querySelectorAll(".advert-item")) || void 0 === t || t.forEach((e=>{
									e.classList.toggle("visible", !1),
									this.sendVisibilitySignal(e, !1)
							}
							)),
							this.hasAdvert = !1
					}
					hasVisibleFrame(e) {
							const t = e.querySelector("iframe");
							return null !== t && void 0 !== t.offsetWidth && void 0 !== t.offsetHeight && (t.offsetWidth > 0 || t.offsetHeight > 0)
					}
					sendVisibilitySignal(e, t) {
							const n = e.querySelector("iframe")
								, i = t ? "adsHoverIframeVisible" : "adsHoverIframeInvisible";
							null !== n && null !== n.contentWindow && n.contentWindow.postMessage(i, "*")
					}
					clearHoverDelayTimer() {
							this.hoverDelayTimerId && window.clearTimeout(this.hoverDelayTimerId)
					}
					clearHoverResetTimer() {
							this.hoverResetTimerId && window.clearTimeout(this.hoverResetTimerId)
					}
					addTargetEventListeners() {
							this.isCurrentCibSerp && null !== this.target && (this.disposer.register(addDisposableListener(this.target, "pointerenter", this.onTargetPointerEnter)),
							this.disposer.register(addDisposableListener(this.target, "pointermove", this.onTargetPointerMove)),
							this.disposer.register(addDisposableListener(this.target, "pointerleave", this.onTargetPointerLeave)))
					}
					getHoverPosition(e, t, n) {
							for (let i = 0; i < e.length; i++) {
									const r = e[i].top
										, o = e[i].bottom;
									if (t.y >= r && t.y <= o)
											return void 0 !== n && o + n.height > window.innerHeight ? {
													x: t.x,
													y: r - n.height
											} : {
													x: t.x,
													y: o
											}
							}
					}
					clampRectToViewport(e) {
							const t = this.layout.isMobile ? 92 : 8;
							e.x = Math.round(e.x - e.width / 2),
							e.y = Math.round(e.y);
							return e.x < 8 ? e.x = 8 : e.x + e.width > window.innerWidth - 8 && (e.x = Math.round(window.innerWidth - e.width - 8)),
							e.y < 8 ? e.y = 8 : e.y + e.height > window.innerHeight - t && (e.y = Math.round(window.innerHeight - e.height - t)),
							e
					}
					getSelectedText() {
							let e;
							return void 0 !== window.getSelection && (e = window.getSelection().toString()),
							e
					}
					getFavIcon(e) {
							return `data:image/png;base64,${e}`
					}
			}
			;
			__decorate([observable, __metadata("design:type", Object)], Wm.prototype, "vm", void 0),
			__decorate([observable, __metadata("design:type", Object)], Wm.prototype, "layout", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Wm.prototype, "isVisible", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Wm.prototype, "hasAdvert", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], Wm.prototype, "citationHasSingleAttribution", void 0),
			Wm = __decorate([customElement({
					name: "cib-hover-card",
					template: jm,
					styles: zm
			}), __metadata("design:paramtypes", [])], Wm);
			const Ym = css`
@keyframes fade-enter {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes button-enter {
	from {
		opacity: 0;
		transform: scale(0.9);
	}
	to {
		opacity: 1;
		transform: scale(1);
	}
}

:host {
	display: flex;
	justify-content: center;
	position: relative;
	height: 100%;
	width: 100%;
	min-height: var(--see-more-min-height);
	max-height: var(--see-more-max-height);
	background: #f9f9f9;
	box-shadow: 0 0 0 1px rgb(0 0 0 / 5%), 0 2px 3px 0 rgb(0 0 0 / 10%);
	border-radius: 12px;
	outline: 1px solid transparent;
	overflow: hidden;
}

.container {
	position: relative;
	width: 100%;
	display: flex;
	flex-direction: column;
	align-items: center;
	overflow: hidden;
	max-height: var(--max-height);
}

/* COVER */

.cover {
	position: absolute;
	left: 0;
	bottom: 0;
	width: 100%;
	display: flex;
	justify-content: center;
	height: 74px;
	opacity: 0;
	pointer-events: none;
	transition-property: opacity;
	transition-delay: ${Bp.motion.duration.normal};
	transition-duration: ${Bp.motion.duration.normal};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

/* STATES */

:host([expanded]) {
	max-height: 100%;
}

:host([cached]) .container {
	height: fit-content;
}

:host([expanded]) .container {
	max-height: unset;
}

:host([covered]) .cover {
	opacity: 1;
	pointer-events: auto;
	transition: none;
}

:host([expanded]),
:host([expanded]) .container {
	transition-property: max-height;
	transition-duration: ${Bp.motion.duration.normal};
	transition-timing-function: ${Bp.motion.easingFunction.motionIn};
}

:host([expanded]) .cover {
	opacity: 0;
	pointer-events: none;
	transition: none;
}

/* FADE */

.fade {
	position: absolute;
	width: 100%;
	height: 74px;
	bottom: 0;
	left: 0;
	border-radius: 12px;
	background: transparent;
	background: linear-gradient(180deg, rgba(249, 249, 249, 0) 0%, rgba(249, 249, 249, 1) calc(100% - 28px));
	animation-name: fade-enter;
	animation-fill-mode: forwards;
	animation-duration: ${Bp.motion.duration.normal};
	animation-timing-function: ${Bp.motion.easingFunction.motionIn};
}

.fade::before {
	content: "";
	position: absolute;
	height: 1px;
	bottom: 28px;
	left: 0px;
	right: 0px;
	background: #dddddd;
	background: linear-gradient(
		90deg,
		rgba(221, 221, 221, 0) 0%,
		rgba(221, 221, 221, 1) calc(0% + 72px),
		rgba(221, 221, 221, 1) calc(100% - 72px),
		rgba(221, 221, 221, 0) 100%
	);
}

/* BUTTON */

button {
	position: absolute;
	bottom: 12px;
	display: flex;
	align-items: center;
	justify-content: center;
	gap: 6px;
	order: 1;
	height: 34px;
	min-width: fit-content;
	color: rgb(255, 255, 255);
	fill: rgb(255, 255, 255);
	border-radius: 20px;
	border: none;
	outline: 1px solid transparent;
	margin: 0px;
	padding: 7px 12px 7px 16px;
	cursor: pointer;
	opacity: 0;
	background: ${Gp.colors.brand.gradient.core};
	animation-name: button-enter;
	animation-fill-mode: both;
	animation-duration: ${Bp.motion.duration.normal};
	animation-timing-function: ${Bp.motion.easingFunction.motionIn};
	animation-timing-function: cubic-bezier(0.34, 1.56, 0.64, 1);
}

button:focus-visible {
	outline: 2px solid black;
}

@media (hover: hover) {
	button:hover {
		box-shadow: ${Gp.shadows.defaults.cardRaised};
	}
}

button:active {
	box-shadow: unset;
}
`.withBehaviors($p(css`
	.fade {
		height: 38px;
		background: ${Vp.Canvas};
	}

	button:hover,
	button:focus-visible {
		forced-color-adjust: none;
		color: ${Vp.HighlightText};
		background: ${Vp.Highlight};
		outline: ${Vp.Highlight};
	}
`))
				, Km = html`
<template
	serp-slot=${e=>e.layout.serpSlot}
	?mobile=${e=>e.layout.isMobile}
	?cached=${e=>e.layout.isCachedResponse}
	?covered=${e=>e.layout.isSeeMoreCovering}
	?expanded=${e=>e.layout.isSeeMoreExpanded}
>
	<div class="container" ${ref("containerRef")}>
		<slot></slot>
	</div>
	<div class="cover">
		<div class="fade"></div>
		<button @click=${e=>e.handleClick()} type="button" ?disabled=${e=>e.layout.isSeeMoreExpanded}>
			<span>${e=>e.vm.strings.seeMoreButton}</span>
			<svg-icon type=${Yp.ChevronDownMed} size="20"></svg-icon>
		</button>
	</div>
</template>
`;
			let Qm = class extends w {
					constructor() {
							super(...arguments),
							this.resizeObserver = null,
							this.maxHeight = 0,
							this.minHeight = 0,
							this.handleClick = ()=>{
									this.layout.isSeeMoreCovering = !1,
									this.layout.isSeeMoreExpanded = !0
							}
							,
							this.setMinMaxHeight = ()=>{
									if (this.containerRef && !this.layout.isSeeMoreExpanded) {
											if (this.layout.serpSlot === Xc.Pole && this.containerRef.offsetWidth > 600)
													this.maxHeight = this.layout.isCachedResponse ? 380 : 196,
													this.minHeight = this.layout.isCachedResponse ? 196 : this.maxHeight - 1;
											else if (this.layout.serpSlot === Xc.Pole && this.containerRef.offsetWidth <= 600) {
													const e = 320;
													this.maxHeight = Math.floor(Math.max(e, window.innerHeight / 2)),
													this.minHeight = this.layout.isCachedResponse ? 196 : this.maxHeight - 1
											} else if (this.layout.serpSlot === Xc.RightRail) {
													const e = 540
														, t = 380;
													this.maxHeight = Math.floor(Math.max(t, Math.min(e, window.innerHeight / 2.25))),
													this.minHeight = this.layout.isCachedResponse ? 196 : this.maxHeight - 1
											}
											this.updateCssVariables(),
											this.calculateHeights()
									}
							}
							,
							this.calculateHeights = ()=>{
									this.containerRef && !this.layout.isSeeMoreExpanded && (this.containerRef && this.containerRef.offsetHeight >= this.maxHeight ? this.layout.isSeeMoreCovering = !0 : this.layout.isSeeMoreCovering = !1)
							}
					}
					connectedCallback() {
							super.connectedCallback(),
							this.resizeObserver = new ResizeObserver(this.setMinMaxHeight),
							this.resizeObserver.observe(this.containerRef),
							window.addEventListener("resize", this.setMinMaxHeight),
							this.setMinMaxHeight()
					}
					disconnectedCallback() {
							var e;
							super.disconnectedCallback(),
							null === (e = this.resizeObserver) || void 0 === e || e.unobserve(this),
							window.removeEventListener("resize", this.setMinMaxHeight)
					}
					updateCssVariables() {
							this.style.setProperty("--see-more-max-height", `${this.maxHeight}px`),
							this.style.setProperty("--see-more-min-height", `${this.minHeight}px`)
					}
			}
			;
			__decorate([observable, __metadata("design:type", Object)], Qm.prototype, "layout", void 0),
			Qm = __decorate([customElement({
					name: "cib-see-more-container",
					template: Km,
					styles: Ym
			})], Qm);
			const Zm = css`
:host {
	position: relative;
	display: flex;
	align-items: center;
	justify-content: space-between;
	height: 64px;
	min-height: 64px;
	width: 100%;
	margin-bottom: 16px;
	z-index: 1;
	pointer-events: none;
	box-sizing: border-box;
	padding-left: 20px;
	padding-right: 12px;
}

button {
	display: flex;
	align-items: center;
	justify-content: center;
	height: 36px;
	width: 40px;
	margin: 0;
	margin-top: 4px;
	padding: 0;
	border: none;
	background: transparent;
	cursor: pointer;
	pointer-events: auto;
}

.button:focus-visible {
	outline: 2px solid #000;
}
`
				, Xm = html`
<template serp-slot=${e=>{
					var t, n;
					return null !== (n = null === (t = e.layout) || void 0 === t ? void 0 : t.serpSlot) && void 0 !== n ? n : Xc.None
			}
			}>
	<button type="button" aria-label=${e=>e.vm.strings.letsChat} @click=${e=>e.handleLogoButtonClick()}>
		<cib-logo size=${Zh.CibLogoWithBubble36}></cib-logo>
	</button>
	<slot></slot>
</template>
`;
			let Jm = class extends w {
					constructor() {
							super(...arguments),
							this.handleLogoButtonClick = ()=>{
									this.vm.enableConversationMode()
							}
					}
			}
			;
			__decorate([observable, __metadata("design:type", Object)], Jm.prototype, "layout", void 0),
			Jm = __decorate([customElement({
					name: "cib-slim-header",
					template: Xm,
					styles: Zm
			})], Jm);
			const eg = css`
:host {
	--icon-color: inherit;
	--icon-background-image: none;
	--icon-size: 24px;
	--icon-glyph-size: var(--icon-size);
	display: inline-block;
	height: var(--icon-size);
	width: var(--icon-size);
	background-image: var(--icon-background-image);
	color: var(--icon-color);
	font-size: var(--icon-glyph-size);
	-webkit-text-fill-color: var(--icon-color);
	-webkit-font-smoothing: auto;
	-webkit-background-clip: text;
	font-style: normal;
	font-variant: normal;
	font-weight: normal;
	line-height: 1;
	text-align: center;
	text-transform: none;
	user-select: none;
	font-family: ${Up.typography.fonts.icons};
}
`
				, tg = html` ${e=>e.glyph} `;
			class GlyphIcons {
					constructor() {}
			}
			GlyphIcons.AbsoluteValue = "",
			GlyphIcons.Accept = "",
			GlyphIcons.AcceptMedium = "",
			GlyphIcons.Accident = "",
			GlyphIcons.AccidentSolid = "",
			GlyphIcons.Accounts = "",
			GlyphIcons.AcrossTheMarket = "",
			GlyphIcons.ActionCenter = "",
			GlyphIcons.ActionCenterAsterisk = "",
			GlyphIcons.ActionCenterMirrored = "",
			GlyphIcons.ActionCenterNotification = "",
			GlyphIcons.ActionCenterNotificationMirrored = "",
			GlyphIcons.ActionCenterQuiet = "",
			GlyphIcons.ActionCenterQuietNotification = "",
			GlyphIcons.ActiveDockBottom = "",
			GlyphIcons.ActiveDockFloat = "",
			GlyphIcons.ActiveDockTop = "",
			GlyphIcons.ActualSize = "",
			GlyphIcons.AdaptiveColor = "",
			GlyphIcons.Add = "",
			GlyphIcons.AddBold = "",
			GlyphIcons.AddFavorite = "",
			GlyphIcons.AddFavoriteFill = "",
			GlyphIcons.AddFriend = "",
			GlyphIcons.AddGroup = "",
			GlyphIcons.AddIn = "",
			GlyphIcons.AddMedium = "",
			GlyphIcons.AddNewLine = "",
			GlyphIcons.AddNewLineFill = "",
			GlyphIcons.AddNotes = "",
			GlyphIcons.AddRemoteDevice = "",
			GlyphIcons.AddSurfaceHub = "",
			GlyphIcons.AddTVMonitor = "",
			GlyphIcons.AddTo = "",
			GlyphIcons.AddToAlbum = "",
			GlyphIcons.AddToNowPlaying = "",
			GlyphIcons.AddToNowPlaying2 = "",
			GlyphIcons.AddToShoppingList = "",
			GlyphIcons.AdjustHologram = "",
			GlyphIcons.Admin = "",
			GlyphIcons.Airplane = "",
			GlyphIcons.AirplaneSolid = "",
			GlyphIcons.AlarmClock = "",
			GlyphIcons.AlarmsApp = "",
			GlyphIcons.Album = "",
			GlyphIcons.AlbumRemove = "",
			GlyphIcons.AlignCenter = "",
			GlyphIcons.AlignLeft = "",
			GlyphIcons.AlignRight = "",
			GlyphIcons.AllApps = "",
			GlyphIcons.AllAppsMirrored = "",
			GlyphIcons.AllCurrency = "",
			GlyphIcons.Alphabet = "",
			GlyphIcons.Anchor = "",
			GlyphIcons.AndroidLogo = "",
			GlyphIcons.Annotation = "",
			GlyphIcons.AppIconDefault = "",
			GlyphIcons.AppIconDefaultAdd = "",
			GlyphIcons.AppIconDefaultCheckmark = "",
			GlyphIcons.AppIconDefaultEdit = "",
			GlyphIcons.AppIconDefaultList = "",
			GlyphIcons.AppIconDefaultSettings = "",
			GlyphIcons.ApplicationGuard = "",
			GlyphIcons.Apps = "",
			GlyphIcons.AppsContent = "",
			GlyphIcons.Archive = "",
			GlyphIcons.AreaChart = "",
			GlyphIcons.ArrangeBringForward = "",
			GlyphIcons.ArrangeBringToFront = "",
			GlyphIcons.ArrangeSendBackward = "",
			GlyphIcons.ArrangeSendToBack = "",
			GlyphIcons.ArrowDown12 = "",
			GlyphIcons.ArrowDown8 = "",
			GlyphIcons.ArrowDownRight8 = "",
			GlyphIcons.ArrowDownSolid12 = "",
			GlyphIcons.ArrowLeft12 = "",
			GlyphIcons.ArrowLeft8 = "",
			GlyphIcons.ArrowLeftSolid12 = "",
			GlyphIcons.ArrowRight12 = "",
			GlyphIcons.ArrowRight8 = "",
			GlyphIcons.ArrowRightSolid12 = "",
			GlyphIcons.ArrowUp12 = "",
			GlyphIcons.ArrowUp8 = "",
			GlyphIcons.ArrowUpRight8 = "",
			GlyphIcons.ArrowUpSolid12 = "",
			GlyphIcons.Articles = "",
			GlyphIcons.AskAParent = "",
			GlyphIcons.AspectRatio = "",
			GlyphIcons.AspectRatio169 = "",
			GlyphIcons.AspectRatio43 = "",
			GlyphIcons.Asterisk = "",
			GlyphIcons.AsteriskBadge12 = "",
			GlyphIcons.Attach = "",
			GlyphIcons.AttachCamera = "",
			GlyphIcons.Audio = "",
			GlyphIcons.AudioLanguage = "",
			GlyphIcons.AudioWave = "",
			GlyphIcons.AutoEnhanceOff = "",
			GlyphIcons.AutoEnhanceOn = "",
			GlyphIcons.AutoFitContents = "",
			GlyphIcons.AutoPay = "",
			GlyphIcons.AutoRestart = "",
			GlyphIcons.AutoStartAction = "",
			GlyphIcons.AutoTime = "",
			GlyphIcons.AutomateFlow = "",
			GlyphIcons.AzureIcon = "",
			GlyphIcons.Back = "",
			GlyphIcons.BackMirrored = "",
			GlyphIcons.BackSolidBold = "",
			GlyphIcons.BackSpaceDeleteWord = "",
			GlyphIcons.BackSpaceQWERTY = "",
			GlyphIcons.BackSpaceQWERTYLg = "",
			GlyphIcons.BackSpaceQWERTYMd = "",
			GlyphIcons.BackSpaceQWERTYSm = "",
			GlyphIcons.BackToWindow = "",
			GlyphIcons.BackgroundBlur = "",
			GlyphIcons.BackgroundColor = "",
			GlyphIcons.BackgroundColorFill = "",
			GlyphIcons.BackgroundRecording = "",
			GlyphIcons.BackgroundReplacement = "",
			GlyphIcons.BackgroundToggle = "",
			GlyphIcons.Badge = "",
			GlyphIcons.BadgeNotification = "",
			GlyphIcons.Balloons = "",
			GlyphIcons.BandBattery0 = "",
			GlyphIcons.BandBattery1 = "",
			GlyphIcons.BandBattery2 = "",
			GlyphIcons.BandBattery3 = "",
			GlyphIcons.BandBattery4 = "",
			GlyphIcons.BandBattery5 = "",
			GlyphIcons.BandBattery6 = "",
			GlyphIcons.BandBatteryCharging = "",
			GlyphIcons.Bank = "",
			GlyphIcons.BarChart3 = "",
			GlyphIcons.BarChart4 = "",
			GlyphIcons.BarcodeScanner = "",
			GlyphIcons.Battery0 = "",
			GlyphIcons.Battery1 = "",
			GlyphIcons.Battery10 = "",
			GlyphIcons.Battery2 = "",
			GlyphIcons.Battery3 = "",
			GlyphIcons.Battery4 = "",
			GlyphIcons.Battery5 = "",
			GlyphIcons.Battery6 = "",
			GlyphIcons.Battery7 = "",
			GlyphIcons.Battery8 = "",
			GlyphIcons.Battery9 = "",
			GlyphIcons.BatteryCapacity = "",
			GlyphIcons.BatteryCharging0 = "",
			GlyphIcons.BatteryCharging1 = "",
			GlyphIcons.BatteryCharging10 = "",
			GlyphIcons.BatteryCharging2 = "",
			GlyphIcons.BatteryCharging3 = "",
			GlyphIcons.BatteryCharging4 = "",
			GlyphIcons.BatteryCharging5 = "",
			GlyphIcons.BatteryCharging6 = "",
			GlyphIcons.BatteryCharging7 = "",
			GlyphIcons.BatteryCharging8 = "",
			GlyphIcons.BatteryCharging9 = "",
			GlyphIcons.BatteryHealth = "",
			GlyphIcons.BatteryHealth0 = "",
			GlyphIcons.BatteryHealth1 = "",
			GlyphIcons.BatteryHealth10 = "",
			GlyphIcons.BatteryHealth2 = "",
			GlyphIcons.BatteryHealth3 = "",
			GlyphIcons.BatteryHealth4 = "",
			GlyphIcons.BatteryHealth5 = "",
			GlyphIcons.BatteryHealth6 = "",
			GlyphIcons.BatteryHealth7 = "",
			GlyphIcons.BatteryHealth8 = "",
			GlyphIcons.BatteryHealth9 = "",
			GlyphIcons.BatterySaver = "",
			GlyphIcons.BatterySaver0 = "",
			GlyphIcons.BatterySaver1 = "",
			GlyphIcons.BatterySaver10 = "",
			GlyphIcons.BatterySaver2 = "",
			GlyphIcons.BatterySaver3 = "",
			GlyphIcons.BatterySaver4 = "",
			GlyphIcons.BatterySaver5 = "",
			GlyphIcons.BatterySaver6 = "",
			GlyphIcons.BatterySaver7 = "",
			GlyphIcons.BatterySaver8 = "",
			GlyphIcons.BatterySaver9 = "",
			GlyphIcons.BatteryUnknown = "",
			GlyphIcons.Beaker = "",
			GlyphIcons.Beta = "",
			GlyphIcons.BidiLtr = "",
			GlyphIcons.BidiRtl = "",
			GlyphIcons.BinaryPad = "",
			GlyphIcons.BingImageSearch = "",
			GlyphIcons.BingLogo = "",
			GlyphIcons.BirthdayCake = "",
			GlyphIcons.BitShift = "",
			GlyphIcons.BitShiftLeft = "",
			GlyphIcons.BitShiftRight = "",
			GlyphIcons.Bitlocker = "",
			GlyphIcons.Bitwise = "",
			GlyphIcons.Blender = "",
			GlyphIcons.BlockContact = "",
			GlyphIcons.Blocked = "",
			GlyphIcons.Blocked2 = "",
			GlyphIcons.Blocked2Solid = "",
			GlyphIcons.BlockedSite = "",
			GlyphIcons.Blog = "",
			GlyphIcons.BlowingSnow = "",
			GlyphIcons.BlueLight = "",
			GlyphIcons.Bluetooth = "",
			GlyphIcons.Blur = "",
			GlyphIcons.BoardActivityFeed = "",
			GlyphIcons.BodyCam = "",
			GlyphIcons.Bold = "",
			GlyphIcons.BoldBulgarian = "",
			GlyphIcons.BoldF = "",
			GlyphIcons.BoldG = "",
			GlyphIcons.BoldK = "",
			GlyphIcons.BoldKazakh = "",
			GlyphIcons.BoldKorean = "",
			GlyphIcons.BoldN = "",
			GlyphIcons.BoldP = "",
			GlyphIcons.BoldRussion = "",
			GlyphIcons.BoldSerbian = "",
			GlyphIcons.BoldT = "",
			GlyphIcons.Bonds = "",
			GlyphIcons.BookPlay = "",
			GlyphIcons.Bookmarks = "",
			GlyphIcons.BookmarksMirrored = "",
			GlyphIcons.BrainCircuit = "",
			GlyphIcons.Brightness = "",
			GlyphIcons.Broadcasting = "",
			GlyphIcons.BrokenFile = "",
			GlyphIcons.Broom = "",
			GlyphIcons.BrowsePhotos = "",
			GlyphIcons.BrowserScreenShot = "",
			GlyphIcons.Brush = "",
			GlyphIcons.BrushSize = "",
			GlyphIcons.BucketColor = "",
			GlyphIcons.BucketColorFill = "",
			GlyphIcons.Bug = "",
			GlyphIcons.BuildingEnergy = "",
			GlyphIcons.BulletedList = "",
			GlyphIcons.BulletedList2 = "",
			GlyphIcons.BulletedList2Mirrored = "",
			GlyphIcons.BulletedListMirrored = "",
			GlyphIcons.Bullseye = "",
			GlyphIcons.BullseyeTarget = "",
			GlyphIcons.BumperLeft = "",
			GlyphIcons.BumperRight = "",
			GlyphIcons.Bus = "",
			GlyphIcons.BusSolid = "",
			GlyphIcons.BusinessManagement = "",
			GlyphIcons.ButtonA = "",
			GlyphIcons.ButtonB = "",
			GlyphIcons.ButtonMenu = "",
			GlyphIcons.ButtonView = "",
			GlyphIcons.ButtonView2 = "",
			GlyphIcons.ButtonX = "",
			GlyphIcons.ButtonY = "",
			GlyphIcons.Buy = "",
			GlyphIcons.CC = "",
			GlyphIcons.CCInline = "",
			GlyphIcons.CCSolid = "",
			GlyphIcons.CHTFullWidth = "",
			GlyphIcons.CHTHalfWidth = "",
			GlyphIcons.CHTLanguageBar = "",
			GlyphIcons.CPU = "",
			GlyphIcons.Cafe = "",
			GlyphIcons.Calculator = "",
			GlyphIcons.CalculatorAddition = "",
			GlyphIcons.CalculatorBackspace = "",
			GlyphIcons.CalculatorDivide = "",
			GlyphIcons.CalculatorEqualTo = "",
			GlyphIcons.CalculatorMemory = "",
			GlyphIcons.CalculatorMemoryAdd = "",
			GlyphIcons.CalculatorMemoryClear = "",
			GlyphIcons.CalculatorMemoryMenu = "",
			GlyphIcons.CalculatorMemoryRecall = "",
			GlyphIcons.CalculatorMemoryStore = "",
			GlyphIcons.CalculatorMemorySubstract = "",
			GlyphIcons.CalculatorMultiply = "",
			GlyphIcons.CalculatorNegate = "",
			GlyphIcons.CalculatorNotEqualTo = "",
			GlyphIcons.CalculatorPercentage = "",
			GlyphIcons.CalculatorShift = "",
			GlyphIcons.CalculatorSign = "",
			GlyphIcons.CalculatorSquareroot = "",
			GlyphIcons.CalculatorSubtract = "",
			GlyphIcons.Calendar = "",
			GlyphIcons.CalendarAgenda = "",
			GlyphIcons.CalendarDay = "",
			GlyphIcons.CalendarMirrored = "",
			GlyphIcons.CalendarReply = "",
			GlyphIcons.CalendarSolid = "",
			GlyphIcons.CalendarWeek = "",
			GlyphIcons.CalendarWorkWeek = "",
			GlyphIcons.CallControl = "",
			GlyphIcons.CallForwardInternational = "",
			GlyphIcons.CallForwardInternationalMirrored = "",
			GlyphIcons.CallForwardRoaming = "",
			GlyphIcons.CallForwardRoamingMirrored = "",
			GlyphIcons.CallForwarding = "",
			GlyphIcons.CallForwardingMirrored = "",
			GlyphIcons.CalligraphyFill = "",
			GlyphIcons.CalligraphyPen = "",
			GlyphIcons.Calories = "",
			GlyphIcons.Camera = "",
			GlyphIcons.CameraMain = "",
			GlyphIcons.CameraRotation = "",
			GlyphIcons.Cancel = "",
			GlyphIcons.CancelMedium = "",
			GlyphIcons.CandleStick = "",
			GlyphIcons.CapitalBuilding = "",
			GlyphIcons.CaplockOff = "",
			GlyphIcons.Caption = "",
			GlyphIcons.Capture = "",
			GlyphIcons.CaptureStringsApp = "",
			GlyphIcons.Car = "",
			GlyphIcons.CaretBottomLeftCenter8 = "",
			GlyphIcons.CaretBottomLeftSolid8 = "",
			GlyphIcons.CaretBottomRightCenter8 = "",
			GlyphIcons.CaretBottomRightSolid8 = "",
			GlyphIcons.CaretBottomRightSolidCenter8 = "",
			GlyphIcons.CaretDown8 = "",
			GlyphIcons.CaretDownSolid8 = "",
			GlyphIcons.CaretHollow = "",
			GlyphIcons.CaretHollowMirrored = "",
			GlyphIcons.CaretLeft8 = "",
			GlyphIcons.CaretLeftSolid8 = "",
			GlyphIcons.CaretRight = "",
			GlyphIcons.CaretRight8 = "",
			GlyphIcons.CaretRightSolid8 = "",
			GlyphIcons.CaretSolid = "",
			GlyphIcons.CaretSolid16 = "",
			GlyphIcons.CaretSolidAlt = "",
			GlyphIcons.CaretSolidDown = "",
			GlyphIcons.CaretSolidLeft = "",
			GlyphIcons.CaretSolidMirrored = "",
			GlyphIcons.CaretSolidRight = "",
			GlyphIcons.CaretSolidUp = "",
			GlyphIcons.CaretTopLeftCenter8 = "",
			GlyphIcons.CaretTopLeftSolid8 = "",
			GlyphIcons.CaretTopRightCenter8 = "",
			GlyphIcons.CaretTopRightSolid8 = "",
			GlyphIcons.CaretUp8 = "",
			GlyphIcons.CaretUpSolid8 = "",
			GlyphIcons.CashDrawer = "",
			GlyphIcons.CeilingValue = "",
			GlyphIcons.CellPhone = "",
			GlyphIcons.CellPhoneError = "",
			GlyphIcons.CellPhoneHistory = "",
			GlyphIcons.CellPhonePermissions = "",
			GlyphIcons.CellPhoneSend = "",
			GlyphIcons.CellPhoneUnknown = "",
			GlyphIcons.CellPhoneUnknownMirrored = "",
			GlyphIcons.Certificate = "",
			GlyphIcons.CharacterAppearance = "",
			GlyphIcons.Characters = "",
			GlyphIcons.ChartYAngle = "",
			GlyphIcons.Chat = "",
			GlyphIcons.ChatBubbles = "",
			GlyphIcons.ChatBubblesQuestion = "",
			GlyphIcons.ChatBubblesQuestionMirrored = "",
			GlyphIcons.ChatHelp = "",
			GlyphIcons.ChatInviteFriend = "",
			GlyphIcons.CheckList = "",
			GlyphIcons.CheckMark = "",
			GlyphIcons.Checkbox = "",
			GlyphIcons.Checkbox14 = "",
			GlyphIcons.CheckboxComposite = "",
			GlyphIcons.CheckboxComposite14 = "",
			GlyphIcons.CheckboxCompositeReversed = "",
			GlyphIcons.CheckboxFill = "",
			GlyphIcons.CheckboxIndeterminate = "",
			GlyphIcons.CheckboxIndeterminateCombo = "",
			GlyphIcons.CheckboxIndeterminateCombo14 = "",
			GlyphIcons.ChecklistMirrored = "",
			GlyphIcons.CheckmarkBadge12 = "",
			GlyphIcons.ChevronDown = "",
			GlyphIcons.ChevronDownMed = "",
			GlyphIcons.ChevronDownSmall = "",
			GlyphIcons.ChevronLeft = "",
			GlyphIcons.ChevronLeft20 = "",
			GlyphIcons.ChevronLeft32 = "",
			GlyphIcons.ChevronLeftEnd = "",
			GlyphIcons.ChevronLeftMed = "",
			GlyphIcons.ChevronLeftSmall = "",
			GlyphIcons.ChevronRight = "",
			GlyphIcons.ChevronRight20 = "",
			GlyphIcons.ChevronRight32 = "",
			GlyphIcons.ChevronRightEnd = "",
			GlyphIcons.ChevronRightMed = "",
			GlyphIcons.ChevronRightSmall = "",
			GlyphIcons.ChevronUp = "",
			GlyphIcons.ChevronUpMed = "",
			GlyphIcons.ChevronUpSmall = "",
			GlyphIcons.ChineseArray = "",
			GlyphIcons.ChineseBoPoMoFo = "",
			GlyphIcons.ChineseChangjie = "",
			GlyphIcons.ChineseDaYi = "",
			GlyphIcons.ChinesePinyin = "",
			GlyphIcons.ChinesePunctuation = "",
			GlyphIcons.ChineseQuick = "",
			GlyphIcons.ChineseWubi = "",
			GlyphIcons.ChipCardCreditCardReader = "",
			GlyphIcons.ChromeAnnotate = "",
			GlyphIcons.ChromeAnnotateContrast = "",
			GlyphIcons.ChromeBack = "",
			GlyphIcons.ChromeBackContrast = "",
			GlyphIcons.ChromeBackContrastMirrored = "",
			GlyphIcons.ChromeBackMirrored = "",
			GlyphIcons.ChromeBackToWindow = "",
			GlyphIcons.ChromeBackToWindowContrast = "",
			GlyphIcons.ChromeClose = "",
			GlyphIcons.ChromeCloseContrast = "",
			GlyphIcons.ChromeCloseSolid = "",
			GlyphIcons.ChromeFullScreen = "",
			GlyphIcons.ChromeFullScreenContrast = "",
			GlyphIcons.ChromeMaximize = "",
			GlyphIcons.ChromeMaximizeContrast = "",
			GlyphIcons.ChromeMaximizeSolid = "",
			GlyphIcons.ChromeMinimize = "",
			GlyphIcons.ChromeMinimizeContrast = "",
			GlyphIcons.ChromeMinimizeSolid = "",
			GlyphIcons.ChromeRestore = "",
			GlyphIcons.ChromeRestoreContrast = "",
			GlyphIcons.ChromeRestoreSolid = "",
			GlyphIcons.ChromeSwitch = "",
			GlyphIcons.ChromeSwitchContast = "",
			GlyphIcons.CircleAddition = "",
			GlyphIcons.CircleAdditionSolid = "",
			GlyphIcons.CircleDollar = "",
			GlyphIcons.CircleFill = "",
			GlyphIcons.CircleFillBadge12 = "",
			GlyphIcons.CirclePause = "",
			GlyphIcons.CirclePauseSolid = "",
			GlyphIcons.CirclePlus = "",
			GlyphIcons.CircleRing = "",
			GlyphIcons.CircleRingBadge12 = "",
			GlyphIcons.CircleShape = "",
			GlyphIcons.CircleShapeSolid = "",
			GlyphIcons.CityNext = "",
			GlyphIcons.CityNext2 = "",
			GlyphIcons.CleanDrive = "",
			GlyphIcons.Clear = "",
			GlyphIcons.Clear12 = "",
			GlyphIcons.ClearAllInk = "",
			GlyphIcons.ClearAllInkMirrored = "",
			GlyphIcons.ClearNight = "",
			GlyphIcons.ClearSelection = "",
			GlyphIcons.ClearSelectionMirrored = "",
			GlyphIcons.Click = "",
			GlyphIcons.ClickSolid = "",
			GlyphIcons.Clicked = "",
			GlyphIcons.ClickedOutLoudSolidBold = "",
			GlyphIcons.Clipboard = "",
			GlyphIcons.ClipboardList = "",
			GlyphIcons.ClipboardListMirrored = "",
			GlyphIcons.ClipboardSolid = "",
			GlyphIcons.ClipboardSync = "",
			GlyphIcons.ClipboardZeroStateArt135 = "",
			GlyphIcons.ClippingTool = "",
			GlyphIcons.Clock = "",
			GlyphIcons.ClosePane = "",
			GlyphIcons.ClosePaneMirrored = "",
			GlyphIcons.ClosedCaptionsInternational = "",
			GlyphIcons.Cloud = "",
			GlyphIcons.CloudAdd = "",
			GlyphIcons.CloudDownload = "",
			GlyphIcons.CloudImportExport = "",
			GlyphIcons.CloudNotSynced = "",
			GlyphIcons.CloudPrinter = "",
			GlyphIcons.CloudSearch = "",
			GlyphIcons.CloudSync = "",
			GlyphIcons.CloudUpload = "",
			GlyphIcons.CloudWarning = "",
			GlyphIcons.CloudWeather = "",
			GlyphIcons.Cloudy = "",
			GlyphIcons.Code = "",
			GlyphIcons.Coffee = "",
			GlyphIcons.CollapseContent = "",
			GlyphIcons.CollapseContentSingle = "",
			GlyphIcons.CollateLandscape = "",
			GlyphIcons.CollateLandscapeSeparated = "",
			GlyphIcons.CollatePortrait = "",
			GlyphIcons.CollatePortraitSeparated = "",
			GlyphIcons.Collection = "",
			GlyphIcons.Colon = "",
			GlyphIcons.Color = "",
			GlyphIcons.ColorOff = "",
			GlyphIcons.ColorSolid = "",
			GlyphIcons.ColumnVerticalSection = "",
			GlyphIcons.Combobox = "",
			GlyphIcons.CommaKey = "",
			GlyphIcons.CommandPrompt = "",
			GlyphIcons.Comment = "",
			GlyphIcons.CommentAdd = "",
			GlyphIcons.Commitments = "",
			GlyphIcons.Commodities = "",
			GlyphIcons.Communications = "",
			GlyphIcons.CompanionApp = "",
			GlyphIcons.CompanionDeviceFramework = "",
			GlyphIcons.CompareTime = "",
			GlyphIcons.CompassNW = "",
			GlyphIcons.Complaint = "",
			GlyphIcons.Completed = "",
			GlyphIcons.CompletedSolid = "",
			GlyphIcons.Component = "",
			GlyphIcons.ComposeMode = "",
			GlyphIcons.Conference = "",
			GlyphIcons.Connect = "",
			GlyphIcons.ConnectApp = "",
			GlyphIcons.ConnectCord = "",
			GlyphIcons.Connected = "",
			GlyphIcons.Constants = "",
			GlyphIcons.Construction = "",
			GlyphIcons.ConstructionCone = "",
			GlyphIcons.ConstructionSolid = "",
			GlyphIcons.Contact = "",
			GlyphIcons.Contact2 = "",
			GlyphIcons.ContactCard = "",
			GlyphIcons.ContactCardMirrored = "",
			GlyphIcons.ContactInfo = "",
			GlyphIcons.ContactInfoMirrored = "",
			GlyphIcons.ContactPresence = "",
			GlyphIcons.ContactSolid = "",
			GlyphIcons.Container = "",
			GlyphIcons.ContextMenu = "",
			GlyphIcons.Contrast = "",
			GlyphIcons.ConvertDEG = "",
			GlyphIcons.ConvertDMS = "",
			GlyphIcons.ConvertTo = "",
			GlyphIcons.Copper = "",
			GlyphIcons.Copy = "",
			GlyphIcons.CopyPath = "",
			GlyphIcons.CopyTo = "",
			GlyphIcons.Copyright = "",
			GlyphIcons.Corn = "",
			GlyphIcons.CortanaCrossDevice = "",
			GlyphIcons.CortanaLogoInner = "",
			GlyphIcons.CortanaLogoOuter = "",
			GlyphIcons.CortanaNotebook = "",
			GlyphIcons.Cotton = "",
			GlyphIcons.Courthouse = "",
			GlyphIcons.CreateNewAlbum = "",
			GlyphIcons.CreditCardBill = "",
			GlyphIcons.Cricket = "",
			GlyphIcons.CriticalErrorSolid = "",
			GlyphIcons.Crop = "",
			GlyphIcons.CropnRotate = "",
			GlyphIcons.Crude = "",
			GlyphIcons.CtrlSpatialLeft = "",
			GlyphIcons.CtrlSpatialRight = "",
			GlyphIcons.CubeShape = "",
			GlyphIcons.CubicRoot = "",
			GlyphIcons.Currency = "",
			GlyphIcons.CurrencyCalculator = "",
			GlyphIcons.CurrencyExchange = "",
			GlyphIcons.Cursor = "",
			GlyphIcons.Cut = "",
			GlyphIcons.DMC = "",
			GlyphIcons.DRM = "",
			GlyphIcons.Dash12 = "",
			GlyphIcons.DashKey = "",
			GlyphIcons.DataConnectionLibrary = "",
			GlyphIcons.DataSense = "",
			GlyphIcons.DataSenseBar = "",
			GlyphIcons.DateTime = "",
			GlyphIcons.DateTime2 = "",
			GlyphIcons.DateTimeMirrored = "",
			GlyphIcons.DeclineCall = "",
			GlyphIcons.DeclineCallSolid = "",
			GlyphIcons.DecreaseIndent = "",
			GlyphIcons.DecreaseIndentMirrored = "",
			GlyphIcons.DefaultAPN = "",
			GlyphIcons.DefaultApp = "",
			GlyphIcons.DefenderApp = "",
			GlyphIcons.DefenderBadge12 = "",
			GlyphIcons.Delete = "",
			GlyphIcons.DeleteLines = "",
			GlyphIcons.DeleteLinesFill = "",
			GlyphIcons.DeleteWord = "",
			GlyphIcons.DeleteWordFill = "",
			GlyphIcons.DeliveryOptimization = "",
			GlyphIcons.DeliveryTruck = "",
			GlyphIcons.Design = "",
			GlyphIcons.DesktopScreenshot = "",
			GlyphIcons.DesktopSite = "",
			GlyphIcons.DetachablePC = "",
			GlyphIcons.DevToolEdit = "",
			GlyphIcons.DevUpdate = "",
			GlyphIcons.DeveloperTools = "",
			GlyphIcons.DeviceDiscovery = "",
			GlyphIcons.DeviceEQ = "",
			GlyphIcons.DeviceFamily = "",
			GlyphIcons.DeviceLaptopNoPic = "",
			GlyphIcons.DeviceLaptopPic = "",
			GlyphIcons.DeviceMonitorLeftPic = "",
			GlyphIcons.DeviceMonitorNoPic = "",
			GlyphIcons.DeviceMonitorRightPic = "",
			GlyphIcons.DeviceTag = "",
			GlyphIcons.Devices = "",
			GlyphIcons.Devices2 = "",
			GlyphIcons.Devices3 = "",
			GlyphIcons.Devices4 = "",
			GlyphIcons.Diagnostic = "",
			GlyphIcons.DiagnosticAdd = "",
			GlyphIcons.DiagnosticDataViewerApp = "",
			GlyphIcons.Dial1 = "",
			GlyphIcons.Dial10 = "",
			GlyphIcons.Dial11 = "",
			GlyphIcons.Dial12 = "",
			GlyphIcons.Dial13 = "",
			GlyphIcons.Dial14 = "",
			GlyphIcons.Dial15 = "",
			GlyphIcons.Dial16 = "",
			GlyphIcons.Dial2 = "",
			GlyphIcons.Dial3 = "",
			GlyphIcons.Dial4 = "",
			GlyphIcons.Dial5 = "",
			GlyphIcons.Dial6 = "",
			GlyphIcons.Dial7 = "",
			GlyphIcons.Dial8 = "",
			GlyphIcons.Dial9 = "",
			GlyphIcons.DialShape1 = "",
			GlyphIcons.DialShape2 = "",
			GlyphIcons.DialShape3 = "",
			GlyphIcons.DialShape4 = "",
			GlyphIcons.DialUp = "",
			GlyphIcons.Dialpad = "",
			GlyphIcons.Diamond = "",
			GlyphIcons.Dictionary = "",
			GlyphIcons.DictionaryAdd = "",
			GlyphIcons.DictionaryCloud = "",
			GlyphIcons.DietPlanNotebook = "",
			GlyphIcons.Diploma = "",
			GlyphIcons.DirectAccess = "",
			GlyphIcons.Directions = "",
			GlyphIcons.DisableUpdates = "",
			GlyphIcons.DiscMusic = "",
			GlyphIcons.DisconnectDevice = "",
			GlyphIcons.DisconnectDisplay = "",
			GlyphIcons.DisconnectDrive = "",
			GlyphIcons.Dislike = "",
			GlyphIcons.DislikeSolid = "",
			GlyphIcons.DocLibrary = "",
			GlyphIcons.Dock = "",
			GlyphIcons.DockBottom = "",
			GlyphIcons.DockLeft = "",
			GlyphIcons.DockLeftMirrored = "",
			GlyphIcons.DockRight = "",
			GlyphIcons.DockRightMirrored = "",
			GlyphIcons.Document = "",
			GlyphIcons.DocumentApproval = "",
			GlyphIcons.DocumentSearch = "",
			GlyphIcons.DocumentSet = "",
			GlyphIcons.Documentation = "",
			GlyphIcons.DoubleBookmark = "",
			GlyphIcons.DoubleChevronDown = "",
			GlyphIcons.DoubleChevronLeft = "",
			GlyphIcons.DoubleChevronRight = "",
			GlyphIcons.DoubleChevronUp = "",
			GlyphIcons.DoublePinyin = "",
			GlyphIcons.DoubleTap = "",
			GlyphIcons.DoubleTapSwipeDown = "",
			GlyphIcons.DoubleTapSwipeUp = "",
			GlyphIcons.Down = "",
			GlyphIcons.DownShiftKey = "",
			GlyphIcons.Download = "",
			GlyphIcons.DownloadDocument = "",
			GlyphIcons.DownloadMap = "",
			GlyphIcons.Dpad = "",
			GlyphIcons.DpadDown = "",
			GlyphIcons.DpadLeft = "",
			GlyphIcons.DpadRight = "",
			GlyphIcons.DpadUp = "",
			GlyphIcons.Draw = "",
			GlyphIcons.DrawSolid = "",
			GlyphIcons.DrivingMode = "",
			GlyphIcons.Drizzle = "",
			GlyphIcons.Drop = "",
			GlyphIcons.DropShape = "",
			GlyphIcons.DualScreenDeviceLandscape = "",
			GlyphIcons.DualScreenDevicePortrait = "",
			GlyphIcons.DualScreenPhone = "",
			GlyphIcons.DullSound = "",
			GlyphIcons.DullSoundKey = "",
			GlyphIcons.DuplexLandscapeOneSided = "",
			GlyphIcons.DuplexLandscapeOneSidedMirrored = "",
			GlyphIcons.DuplexLandscapeTwoSidedLongEdge = "",
			GlyphIcons.DuplexLandscapeTwoSidedLongEdgeMirrored = "",
			GlyphIcons.DuplexLandscapeTwoSidedShortEdge = "",
			GlyphIcons.DuplexLandscapeTwoSidedShortEdgeMirrored = "",
			GlyphIcons.DuplexPortraitOneSided = "",
			GlyphIcons.DuplexPortraitOneSidedMirrored = "",
			GlyphIcons.DuplexPortraitTwoSidedLongEdge = "",
			GlyphIcons.DuplexPortraitTwoSidedLongEdgeMirrored = "",
			GlyphIcons.DuplexPortraitTwoSidedShortEdge = "",
			GlyphIcons.DuplexPortraitTwoSidedShortEdgeMirrored = "",
			GlyphIcons.Duststorm = "",
			GlyphIcons.DynamicList = "",
			GlyphIcons.DynamicLock = "",
			GlyphIcons.Dynamics365Logo = "",
			GlyphIcons.EALogo = "",
			GlyphIcons.EDP16 = "",
			GlyphIcons.EMI = "",
			GlyphIcons.EPowerX = "",
			GlyphIcons.ESIM = "",
			GlyphIcons.ESIMBusy = "",
			GlyphIcons.ESIMLocked = "",
			GlyphIcons.ESIMNoProfile = "",
			GlyphIcons.Ear = "",
			GlyphIcons.Earbud = "",
			GlyphIcons.EaseOfAccess = "",
			GlyphIcons.EatDrink = "",
			GlyphIcons.EdgeCollection = "",
			GlyphIcons.EdgeLogo = "",
			GlyphIcons.EdgeLogo16 = "",
			GlyphIcons.EdgeOldLogo = "",
			GlyphIcons.EdgeOldLogo16 = "",
			GlyphIcons.Edit = "",
			GlyphIcons.EditContact = "",
			GlyphIcons.EditCreate = "",
			GlyphIcons.EditListPencil = "",
			GlyphIcons.EditMirrored = "",
			GlyphIcons.EditNote = "",
			GlyphIcons.EditPhoto = "",
			GlyphIcons.EditSettings = "",
			GlyphIcons.EditSolid12 = "",
			GlyphIcons.Education = "",
			GlyphIcons.EducationIcon = "",
			GlyphIcons.Effects = "",
			GlyphIcons.EffectsAndModels3D = "",
			GlyphIcons.Eject = "",
			GlyphIcons.Ellipse = "",
			GlyphIcons.Embed = "",
			GlyphIcons.Emoji = "",
			GlyphIcons.Emoji2 = "",
			GlyphIcons.Emoji2Solid = "",
			GlyphIcons.EmojiDisappointed = "",
			GlyphIcons.EmojiNeutral = "",
			GlyphIcons.EmojiSwatch = "",
			GlyphIcons.EmojiTabCelebrationObjects = "",
			GlyphIcons.EmojiTabFavorites = "",
			GlyphIcons.EmojiTabFoodPlants = "",
			GlyphIcons.EmojiTabMoreSymbols = "",
			GlyphIcons.EmojiTabPeople = "",
			GlyphIcons.EmojiTabSmilesAnimals = "",
			GlyphIcons.EmojiTabSymbols = "",
			GlyphIcons.EmojiTabTextSmiles = "",
			GlyphIcons.EmojiTabTransitPlaces = "",
			GlyphIcons.EmptyRecycleBin = "",
			GlyphIcons.EndPoint = "",
			GlyphIcons.EndPointSolid = "",
			GlyphIcons.EnglishPunctuation = "",
			GlyphIcons.EnhancePop = "",
			GlyphIcons.Equalizer = "",
			GlyphIcons.EraseTool = "",
			GlyphIcons.EraseToolFill = "",
			GlyphIcons.EraseToolFill2 = "",
			GlyphIcons.Error = "",
			GlyphIcons.ErrorBadge = "",
			GlyphIcons.ErrorBadge12 = "",
			GlyphIcons.Ethernet = "",
			GlyphIcons.EthernetCable = "",
			GlyphIcons.EthernetError = "",
			GlyphIcons.EthernetHero = "",
			GlyphIcons.EthernetWarning = "",
			GlyphIcons.Event12 = "",
			GlyphIcons.EventDate = "",
			GlyphIcons.ExcelDocument = "",
			GlyphIcons.ExcelLogo = "",
			GlyphIcons.ExcelLogo16 = "",
			GlyphIcons.ExcelLogoInverse = "",
			GlyphIcons.ExcelLogoInverse16 = "",
			GlyphIcons.ExitKiosk = "",
			GlyphIcons.ExpandTile = "",
			GlyphIcons.ExpandTileMirrored = "",
			GlyphIcons.ExpenseReport = "",
			GlyphIcons.Expired = "",
			GlyphIcons.ExploitProtection = "",
			GlyphIcons.ExploitProtectionSettings = "",
			GlyphIcons.ExploreContent = "",
			GlyphIcons.ExploreContentSingle = "",
			GlyphIcons.Export = "",
			GlyphIcons.ExportMirrored = "",
			GlyphIcons.Exposure = "",
			GlyphIcons.ExpressiveInputEntry = "",
			GlyphIcons.EyeGaze = "",
			GlyphIcons.EyeGazeCorrection = "",
			GlyphIcons.Eyedropper = "",
			GlyphIcons.F12DevTools = "",
			GlyphIcons.FVS1 = "",
			GlyphIcons.FVS2 = "",
			GlyphIcons.FVS3 = "",
			GlyphIcons.FabricFolder = "",
			GlyphIcons.FabricOpenFolderHorizontal = "",
			GlyphIcons.FacebookLogo = "",
			GlyphIcons.FactoralValue = "",
			GlyphIcons.FadeThroughBlackTransition = "",
			GlyphIcons.Family = "",
			GlyphIcons.FamilySafetyLogo = "";
			GlyphIcons.FangBody = "",
			GlyphIcons.FastForward = "",
			GlyphIcons.FastForwardSolid = "",
			GlyphIcons.Favicon = "",
			GlyphIcons.Favicon2 = "",
			GlyphIcons.FavoriteList = "",
			GlyphIcons.FavoriteStar = "",
			GlyphIcons.FavoriteStarEdit = "",
			GlyphIcons.FavoriteStarFill = "",
			GlyphIcons.Fax = "",
			GlyphIcons.FeatureRequest = "",
			GlyphIcons.Feedback = "",
			GlyphIcons.FeedbackApp = "",
			GlyphIcons.FeedbackGames = "",
			GlyphIcons.Ferry = "",
			GlyphIcons.FerrySolid = "",
			GlyphIcons.FileBug = "",
			GlyphIcons.FileExplorer = "",
			GlyphIcons.FileExplorerApp = "",
			GlyphIcons.FileRequest = "",
			GlyphIcons.FileTemplate = "",
			GlyphIcons.Filter = "",
			GlyphIcons.Filter12 = "",
			GlyphIcons.FilterAlt = "",
			GlyphIcons.FilterKeys = "",
			GlyphIcons.FilterSolid = "",
			GlyphIcons.Filters = "",
			GlyphIcons.Financial = "",
			GlyphIcons.FinancialCalculator = "",
			GlyphIcons.FingerInking = "",
			GlyphIcons.Fingerprint = "",
			GlyphIcons.FitPage = "",
			GlyphIcons.Flag = "",
			GlyphIcons.FlashAuto = "",
			GlyphIcons.FlashOff = "",
			GlyphIcons.Flashlight = "",
			GlyphIcons.FlickDown = "",
			GlyphIcons.FlickLeft = "",
			GlyphIcons.FlickRight = "",
			GlyphIcons.FlickUp = "",
			GlyphIcons.FlipHorizontal = "",
			GlyphIcons.FlipVertical = "",
			GlyphIcons.FloorValue = "",
			GlyphIcons.Flow = "",
			GlyphIcons.Fluorescent = "",
			GlyphIcons.Focus = "",
			GlyphIcons.FocusSession = "",
			GlyphIcons.FocusView = "",
			GlyphIcons.Fog = "",
			GlyphIcons.Folder = "",
			GlyphIcons.FolderFill = "",
			GlyphIcons.FolderHorizontal = "",
			GlyphIcons.FolderList = "",
			GlyphIcons.FolderListMirrored = "",
			GlyphIcons.FolderMusic = "",
			GlyphIcons.FolderOpen = "",
			GlyphIcons.FolderSelect = "",
			GlyphIcons.FollowPlaylist = "",
			GlyphIcons.FollowUser = "",
			GlyphIcons.Font = "",
			GlyphIcons.FontColor = "",
			GlyphIcons.FontColorKorean = "",
			GlyphIcons.FontDecrease = "",
			GlyphIcons.FontIncrease = "",
			GlyphIcons.FontSize = "",
			GlyphIcons.FontStyleKorean = "",
			GlyphIcons.Food = "",
			GlyphIcons.FormLibrary = "",
			GlyphIcons.FormLibraryMirrored = "",
			GlyphIcons.FormProcessing = "",
			GlyphIcons.Forward = "",
			GlyphIcons.ForwardCall = "",
			GlyphIcons.ForwardMirrored = "",
			GlyphIcons.ForwardSm = "",
			GlyphIcons.ForwardSolidBold = "",
			GlyphIcons.FourBars = "",
			GlyphIcons.FourKQualityResolution = "",
			GlyphIcons.FrameRate = "",
			GlyphIcons.FreeFormClipping = "",
			GlyphIcons.FreeFormMarquee = "",
			GlyphIcons.Freezing = "",
			GlyphIcons.Frigid = "",
			GlyphIcons.Full20 = "",
			GlyphIcons.FullAlpha = "",
			GlyphIcons.FullAlphaPrivateMode = "",
			GlyphIcons.FullCircleMask = "",
			GlyphIcons.FullHiragana = "",
			GlyphIcons.FullHiraganaPrivateMode = "",
			GlyphIcons.FullHistory = "",
			GlyphIcons.FullKatakana = "",
			GlyphIcons.FullKatakanaPrivateMode = "",
			GlyphIcons.FullScreen = "",
			GlyphIcons.FullView = "",
			GlyphIcons.Functions = "",
			GlyphIcons.FuzzyReading = "",
			GlyphIcons.GIF = "",
			GlyphIcons.Game = "",
			GlyphIcons.GameAdd = "",
			GlyphIcons.GameClip = "",
			GlyphIcons.GameClubs = "",
			GlyphIcons.GameConsole = "",
			GlyphIcons.GameHub = "",
			GlyphIcons.GamePassUltimateInline2 = "",
			GlyphIcons.Gamebar = "",
			GlyphIcons.GamerScore = "",
			GlyphIcons.Gas = "",
			GlyphIcons.GatewayRouter = "",
			GlyphIcons.GenericApp = "",
			GlyphIcons.GenericBill = "",
			GlyphIcons.GenericScan = "",
			GlyphIcons.Geometry = "",
			GlyphIcons.GetHelpApp = "",
			GlyphIcons.GetHelpAppMirrored = "",
			GlyphIcons.GifSolid = "",
			GlyphIcons.GiftCard = "",
			GlyphIcons.Giftbox = "",
			GlyphIcons.GiftboxOpen = "",
			GlyphIcons.GitHubLogo = "",
			GlyphIcons.Glasses = "",
			GlyphIcons.GlobalNavButton = "",
			GlyphIcons.Globe = "",
			GlyphIcons.Globe2 = "",
			GlyphIcons.Go = "",
			GlyphIcons.GoMirrored = "",
			GlyphIcons.GoToMessage = "",
			GlyphIcons.GoToStart = "",
			GlyphIcons.Gold = "",
			GlyphIcons.GotoToday = "",
			GlyphIcons.GrammarOptions = "",
			GlyphIcons.GraphingChart = "",
			GlyphIcons.GraphingChartBestFit = "",
			GlyphIcons.GraphingChartBestFitFill = "",
			GlyphIcons.GraphingChartSettings = "",
			GlyphIcons.GreaterThan = "",
			GlyphIcons.GreaterThanOrEqualTo = "",
			GlyphIcons.GridHeart = "",
			GlyphIcons.GridView = "",
			GlyphIcons.GridViewLarge = "",
			GlyphIcons.GridViewMedium = "",
			GlyphIcons.GridViewSmall = "",
			GlyphIcons.GripperBarHorizontal = "",
			GlyphIcons.GripperBarVertical = "",
			GlyphIcons.GripperDotsVertical = "",
			GlyphIcons.GripperResize = "",
			GlyphIcons.GripperResizeMirrored = "",
			GlyphIcons.GripperTool = "",
			GlyphIcons.Groceries = "",
			GlyphIcons.Group = "",
			GlyphIcons.GroupList = "",
			GlyphIcons.GuestUser = "",
			GlyphIcons.HDRAuto = "",
			GlyphIcons.HDROff = "",
			GlyphIcons.HDROn = "",
			GlyphIcons.HDRPro = "",
			GlyphIcons.HMD = "",
			GlyphIcons.HWPInsert = "",
			GlyphIcons.HWPJoin = "",
			GlyphIcons.HWPNewLine = "",
			GlyphIcons.HWPOverwrite = "",
			GlyphIcons.HWPScratchOut = "",
			GlyphIcons.HWPSplit = "",
			GlyphIcons.HWPStrikeThrough = "",
			GlyphIcons.HailDay = "",
			GlyphIcons.HailNight = "",
			GlyphIcons.HalfAlpha = "",
			GlyphIcons.HalfAlphaPrivateMode = "",
			GlyphIcons.HalfAlphanumeric = "",
			GlyphIcons.HalfAlphanumericPrivateMode = "",
			GlyphIcons.HalfCircle = "",
			GlyphIcons.HalfDullSound = "",
			GlyphIcons.HalfKatakana = "",
			GlyphIcons.HalfKatakanaPrivateMode = "",
			GlyphIcons.HalfStarLeft = "",
			GlyphIcons.HalfStarRight = "",
			GlyphIcons.HandThreeFinger = "",
			GlyphIcons.HandsFree = "",
			GlyphIcons.Handwriting = "",
			GlyphIcons.Handwriting20 = "",
			GlyphIcons.HangUp = "",
			GlyphIcons.HapticStrong = "",
			GlyphIcons.HapticWeak = "",
			GlyphIcons.HardDrive = "",
			GlyphIcons.HardDriveGroup = "",
			GlyphIcons.HardDriveLock = "",
			GlyphIcons.HardDriveUnlock = "",
			GlyphIcons.Haze = "",
			GlyphIcons.HdQualityResolution = "",
			GlyphIcons.HeadlessDevice = "",
			GlyphIcons.Headphone = "",
			GlyphIcons.Headphone0 = "",
			GlyphIcons.Headphone1 = "",
			GlyphIcons.Headphone2 = "",
			GlyphIcons.Headphone3 = "",
			GlyphIcons.HeadphonesSoundWave = "",
			GlyphIcons.Headset = "",
			GlyphIcons.HeadsetWebcam = "",
			GlyphIcons.Health = "",
			GlyphIcons.HealthSolid = "",
			GlyphIcons.Heart = "",
			GlyphIcons.Heart12 = "",
			GlyphIcons.HeartAdd = "",
			GlyphIcons.HeartBroken = "",
			GlyphIcons.HeartBrokenFill = "",
			GlyphIcons.HeartFill = "",
			GlyphIcons.Help = "",
			GlyphIcons.HelpMirrored = "",
			GlyphIcons.HeroStatusCheckmark = "",
			GlyphIcons.HeroStatusCircle = "",
			GlyphIcons.HeroStatusError = "",
			GlyphIcons.HeroStatusExclamation = "",
			GlyphIcons.HeroStatusInfo = "",
			GlyphIcons.HeroStatusPause = "",
			GlyphIcons.Hexagon = "",
			GlyphIcons.Hide = "",
			GlyphIcons.Hide2 = "",
			GlyphIcons.Hide3 = "",
			GlyphIcons.HideBcc = "",
			GlyphIcons.Highlight = "",
			GlyphIcons.HighlightFill = "",
			GlyphIcons.HighlightFill2 = "",
			GlyphIcons.Highlights = "",
			GlyphIcons.History = "",
			GlyphIcons.HolePunchLandscapeBottom = "",
			GlyphIcons.HolePunchLandscapeLeft = "",
			GlyphIcons.HolePunchLandscapeRight = "",
			GlyphIcons.HolePunchLandscapeTop = "",
			GlyphIcons.HolePunchOff = "",
			GlyphIcons.HolePunchPortraitBottom = "",
			GlyphIcons.HolePunchPortraitLeft = "",
			GlyphIcons.HolePunchPortraitRight = "",
			GlyphIcons.HolePunchPortraitTop = "",
			GlyphIcons.HoloLens = "",
			GlyphIcons.HoloLens2 = "",
			GlyphIcons.HoloLensSelected = "",
			GlyphIcons.Holograms = "",
			GlyphIcons.Home = "",
			GlyphIcons.Home20 = "",
			GlyphIcons.HomeGroup = "",
			GlyphIcons.HomeSolid = "",
			GlyphIcons.HomeSolid20 = "",
			GlyphIcons.HorizontalTabKey = "",
			GlyphIcons.Hotel = "",
			GlyphIcons.HourGlass = "",
			GlyphIcons.HourglassMoney = "",
			GlyphIcons.IBeam = "",
			GlyphIcons.IBeamOutline = "",
			GlyphIcons.IDBadge = "",
			GlyphIcons.IOT = "",
			GlyphIcons.ISO = "",
			GlyphIcons.Ignite = "",
			GlyphIcons.ImageExport = "",
			GlyphIcons.ImagePixel = "",
			GlyphIcons.Import = "",
			GlyphIcons.ImportAll = "",
			GlyphIcons.ImportAllMirrored = "",
			GlyphIcons.ImportMirrored = "",
			GlyphIcons.Important = "",
			GlyphIcons.ImportantBadge12 = "",
			GlyphIcons.InPrivate = "",
			GlyphIcons.IncidentTriangle = "",
			GlyphIcons.IncomingCall = "",
			GlyphIcons.IncreaseIndent = "",
			GlyphIcons.IncreaseIndentMirrored = "",
			GlyphIcons.IndividualPlaylists = "",
			GlyphIcons.Inequalities = "",
			GlyphIcons.Infinity = "",
			GlyphIcons.Info = "",
			GlyphIcons.Info12 = "",
			GlyphIcons.Info2 = "",
			GlyphIcons.InfoBadge12 = "",
			GlyphIcons.InfoSolid = "",
			GlyphIcons.Infrastructure = "",
			GlyphIcons.InkingCaret = "",
			GlyphIcons.InkingColorFill = "",
			GlyphIcons.InkingColorOutline = "",
			GlyphIcons.InkingTool = "",
			GlyphIcons.InkingToolFill = "",
			GlyphIcons.InkingToolFill2 = "",
			GlyphIcons.InlineNowPlaying = "",
			GlyphIcons.Input = "",
			GlyphIcons.InsertTextBox = "",
			GlyphIcons.InsiderHubApp = "",
			GlyphIcons.Insights = "",
			GlyphIcons.Installation = "",
			GlyphIcons.InstertWords = "",
			GlyphIcons.InstertWordsFill = "",
			GlyphIcons.InteractiveDashboard = "",
			GlyphIcons.InternetExplorerLogo = "",
			GlyphIcons.InternetSecure = "",
			GlyphIcons.InternetSharing = "",
			GlyphIcons.InvertColor = "",
			GlyphIcons.IssueTracking = "",
			GlyphIcons.IssueTrackingMirrored = "",
			GlyphIcons.Italic = "",
			GlyphIcons.ItalicC = "",
			GlyphIcons.ItalicD = "",
			GlyphIcons.ItalicK = "",
			GlyphIcons.ItalicKazakh = "",
			GlyphIcons.ItalicKorean = "",
			GlyphIcons.ItalicL = "",
			GlyphIcons.ItalicS = "",
			GlyphIcons.ItalicT = "",
			GlyphIcons.JPNPrivateMode = "",
			GlyphIcons.Japanese = "",
			GlyphIcons.JapaneseIME = "",
			GlyphIcons.Jogging = "",
			GlyphIcons.JoinWords = "",
			GlyphIcons.JoinWordsFill = "",
			GlyphIcons.JpnComma = "",
			GlyphIcons.JpnPeriod = "",
			GlyphIcons.JpnRomanji = "",
			GlyphIcons.JpnRomanjiLock = "",
			GlyphIcons.JpnRomanjiShift = "",
			GlyphIcons.JpnRomanjiShiftLock = "",
			GlyphIcons.KaomojiClassic = "",
			GlyphIcons.KaomojiCute = "",
			GlyphIcons.KaomojiHappy = "",
			GlyphIcons.KaomojiHiHello = "",
			GlyphIcons.KaomojiMad = "",
			GlyphIcons.KaomojiSad = "",
			GlyphIcons.KaomojiSpeechless = "",
			GlyphIcons.KaomojiSurprise = "",
			GlyphIcons.Key12On = "",
			GlyphIcons.Keyboard12Key = "",
			GlyphIcons.Keyboard50Key = "",
			GlyphIcons.KeyboardBrightness = "",
			GlyphIcons.KeyboardClassic = "",
			GlyphIcons.KeyboardDismiss = "",
			GlyphIcons.KeyboardDock = "",
			GlyphIcons.KeyboardFull = "",
			GlyphIcons.KeyboardLayoutResize = "",
			GlyphIcons.KeyboardLeftAligned = "",
			GlyphIcons.KeyboardLeftDock = "",
			GlyphIcons.KeyboardLeftHanded = "",
			GlyphIcons.KeyboardLowerBrightness = "",
			GlyphIcons.KeyboardNarrow = "",
			GlyphIcons.KeyboardOneHanded = "",
			GlyphIcons.KeyboardRightAligned = "",
			GlyphIcons.KeyboardRightDock = "",
			GlyphIcons.KeyboardRightHanded = "",
			GlyphIcons.KeyboardSettings = "",
			GlyphIcons.KeyboardShortcut = "",
			GlyphIcons.KeyboardSplit = "",
			GlyphIcons.KeyboardStandard = "",
			GlyphIcons.KeyboardUndock = "",
			GlyphIcons.Keyboardsettings20 = "",
			GlyphIcons.Kiosk = "",
			GlyphIcons.KnowledgeArticle = "",
			GlyphIcons.Korean = "",
			GlyphIcons.KoreanOldHangul = "",
			GlyphIcons.LEDLight = "",
			GlyphIcons.LEDLightOff = "",
			GlyphIcons.Label = "",
			GlyphIcons.LandscapeOrientation = "",
			GlyphIcons.LandscapeOrientationMirrored = "",
			GlyphIcons.LangJPN = "",
			GlyphIcons.LanguageChs = "",
			GlyphIcons.LanguageCht = "",
			GlyphIcons.LanguageJpn = "",
			GlyphIcons.LanguageKor = "",
			GlyphIcons.LaptopPhone = "",
			GlyphIcons.LaptopSecure = "",
			GlyphIcons.LaptopSelected = "",
			GlyphIcons.LargeErase = "",
			GlyphIcons.LargeGrid = "",
			GlyphIcons.Leaf = "",
			GlyphIcons.Leaf12 = "",
			GlyphIcons.LearningTools = "",
			GlyphIcons.LeaveChat = "",
			GlyphIcons.LeaveChatMirrored = "",
			GlyphIcons.LeftArrowKeyTime0 = "",
			GlyphIcons.LeftDoubleQuote = "",
			GlyphIcons.LeftQuote = "",
			GlyphIcons.LeftStick = "",
			GlyphIcons.LeftToRightMark = "",
			GlyphIcons.Leisure = "",
			GlyphIcons.LessThan = "",
			GlyphIcons.LessThanOrEqualTo = "",
			GlyphIcons.Lexicon = "",
			GlyphIcons.Library = "",
			GlyphIcons.Library20 = "",
			GlyphIcons.LibrarySolid20 = "",
			GlyphIcons.Light = "",
			GlyphIcons.LightSnow = "",
			GlyphIcons.Lightbulb = "",
			GlyphIcons.LightbulbFilament = "",
			GlyphIcons.LightningBolt = "",
			GlyphIcons.LightningBoltSolid = "",
			GlyphIcons.Like = "",
			GlyphIcons.LikeDislike = "",
			GlyphIcons.LikeSolid = "",
			GlyphIcons.Line = "",
			GlyphIcons.LineChart = "",
			GlyphIcons.LineDisplay = "",
			GlyphIcons.Link = "",
			GlyphIcons.Link12 = "",
			GlyphIcons.LinkDocuments = "",
			GlyphIcons.LinkedInLogo = "",
			GlyphIcons.List = "",
			GlyphIcons.List12 = "",
			GlyphIcons.ListMirrored = "",
			GlyphIcons.LivingImage = "",
			GlyphIcons.LivingImageReplay = "",
			GlyphIcons.LocaleLanguage = "",
			GlyphIcons.Location = "",
			GlyphIcons.LocationArrow = "",
			GlyphIcons.LocationDot = "",
			GlyphIcons.Lock = "",
			GlyphIcons.Lock12 = "",
			GlyphIcons.LockFeedback = "",
			GlyphIcons.LockScreenGlance = "",
			GlyphIcons.LockSolid = "",
			GlyphIcons.LockscreenDesktop = "",
			GlyphIcons.LogYX = "",
			GlyphIcons.LowerBrightness = "",
			GlyphIcons.MSNVideos = "",
			GlyphIcons.MVS = "",
			GlyphIcons.MagStripeReader = "",
			GlyphIcons.MagicSelect = "",
			GlyphIcons.Mail = "",
			GlyphIcons.MailArticleContent = "",
			GlyphIcons.MailBadge12 = "",
			GlyphIcons.MailFill = "",
			GlyphIcons.MailForward = "",
			GlyphIcons.MailForwardMirrored = "",
			GlyphIcons.MailReply = "",
			GlyphIcons.MailReplyAll = "",
			GlyphIcons.MailReplyAllMirrored = "",
			GlyphIcons.MailReplyMirrored = "",
			GlyphIcons.Manage = "",
			GlyphIcons.ManualFocus = "",
			GlyphIcons.MapApp = "",
			GlyphIcons.MapCompassBottom = "",
			GlyphIcons.MapCompassTop = "",
			GlyphIcons.MapDirections = "",
			GlyphIcons.MapDrive = "",
			GlyphIcons.MapLayers = "",
			GlyphIcons.MapPin = "",
			GlyphIcons.MapPin2 = "",
			GlyphIcons.MapPinOff = "",
			GlyphIcons.Marker = "",
			GlyphIcons.Market = "",
			GlyphIcons.MarketDown = "",
			GlyphIcons.Marquee = "",
			GlyphIcons.MeasureDistance = "",
			GlyphIcons.Media = "",
			GlyphIcons.MediaAdjust = "",
			GlyphIcons.MediaStorageTower = "",
			GlyphIcons.Megaphone = "",
			GlyphIcons.Memo = "",
			GlyphIcons.MergeCall = "",
			GlyphIcons.Message = "",
			GlyphIcons.MicClipping = "",
			GlyphIcons.MicError = "",
			GlyphIcons.MicLocationCombo = "",
			GlyphIcons.MicOff = "",
			GlyphIcons.MicOff2 = "",
			GlyphIcons.MicOff2Solid = "",
			GlyphIcons.MicOn = "",
			GlyphIcons.MicSleep = "",
			GlyphIcons.Microphone = "",
			GlyphIcons.MicrophoneListening = "",
			GlyphIcons.MicrophoneSolidBold = "",
			GlyphIcons.MicrosoftLauncherApp16 = "",
			GlyphIcons.MicrosoftLauncherApp32 = "",
			GlyphIcons.MicrosoftLogo = "",
			GlyphIcons.MicrosoftLogoBlue = "",
			GlyphIcons.MicrosoftLogoGreen = "",
			GlyphIcons.MicrosoftLogoRed = "",
			GlyphIcons.MicrosoftLogoYellow = "",
			GlyphIcons.MiniContract = "",
			GlyphIcons.MiniContract2 = "",
			GlyphIcons.MiniContract2Mirrored = "",
			GlyphIcons.MiniContractMirrored = "",
			GlyphIcons.MiniExpand = "",
			GlyphIcons.MiniExpand2 = "",
			GlyphIcons.MiniExpand2Mirrored = "",
			GlyphIcons.MiniExpandMirrored = "",
			GlyphIcons.MiniLink = "",
			GlyphIcons.MiracastLogoLarge = "",
			GlyphIcons.MiracastLogoSmall = "",
			GlyphIcons.MissedCall = "",
			GlyphIcons.MixVolumes = "",
			GlyphIcons.MixedMediaBadge = "",
			GlyphIcons.MobActionCenter = "",
			GlyphIcons.MobAirplane = "",
			GlyphIcons.MobBattery0 = "",
			GlyphIcons.MobBattery1 = "",
			GlyphIcons.MobBattery10 = "",
			GlyphIcons.MobBattery2 = "",
			GlyphIcons.MobBattery3 = "",
			GlyphIcons.MobBattery4 = "",
			GlyphIcons.MobBattery5 = "",
			GlyphIcons.MobBattery6 = "",
			GlyphIcons.MobBattery7 = "",
			GlyphIcons.MobBattery8 = "",
			GlyphIcons.MobBattery9 = "",
			GlyphIcons.MobBatteryCharging0 = "",
			GlyphIcons.MobBatteryCharging1 = "",
			GlyphIcons.MobBatteryCharging10 = "",
			GlyphIcons.MobBatteryCharging2 = "",
			GlyphIcons.MobBatteryCharging3 = "",
			GlyphIcons.MobBatteryCharging4 = "",
			GlyphIcons.MobBatteryCharging5 = "",
			GlyphIcons.MobBatteryCharging6 = "",
			GlyphIcons.MobBatteryCharging7 = "",
			GlyphIcons.MobBatteryCharging8 = "",
			GlyphIcons.MobBatteryCharging9 = "",
			GlyphIcons.MobBatteryError0 = "",
			GlyphIcons.MobBatteryError1 = "",
			GlyphIcons.MobBatteryError10 = "",
			GlyphIcons.MobBatteryError2 = "",
			GlyphIcons.MobBatteryError3 = "",
			GlyphIcons.MobBatteryError4 = "",
			GlyphIcons.MobBatteryError5 = "",
			GlyphIcons.MobBatteryError6 = "",
			GlyphIcons.MobBatteryError7 = "",
			GlyphIcons.MobBatteryError8 = "",
			GlyphIcons.MobBatteryError9 = "",
			GlyphIcons.MobBatteryHealth0 = "",
			GlyphIcons.MobBatteryHealth1 = "",
			GlyphIcons.MobBatteryHealth10 = "",
			GlyphIcons.MobBatteryHealth2 = "",
			GlyphIcons.MobBatteryHealth3 = "",
			GlyphIcons.MobBatteryHealth4 = "",
			GlyphIcons.MobBatteryHealth5 = "",
			GlyphIcons.MobBatteryHealth6 = "",
			GlyphIcons.MobBatteryHealth7 = "",
			GlyphIcons.MobBatteryHealth8 = "",
			GlyphIcons.MobBatteryHealth9 = "",
			GlyphIcons.MobBatterySaver0 = "",
			GlyphIcons.MobBatterySaver1 = "",
			GlyphIcons.MobBatterySaver10 = "",
			GlyphIcons.MobBatterySaver2 = "",
			GlyphIcons.MobBatterySaver3 = "",
			GlyphIcons.MobBatterySaver4 = "",
			GlyphIcons.MobBatterySaver5 = "",
			GlyphIcons.MobBatterySaver6 = "",
			GlyphIcons.MobBatterySaver7 = "",
			GlyphIcons.MobBatterySaver8 = "",
			GlyphIcons.MobBatterySaver9 = "",
			GlyphIcons.MobBatteryUnknown = "",
			GlyphIcons.MobBatteryWarning0 = "",
			GlyphIcons.MobBatteryWarning1 = "",
			GlyphIcons.MobBatteryWarning10 = "",
			GlyphIcons.MobBatteryWarning2 = "",
			GlyphIcons.MobBatteryWarning3 = "",
			GlyphIcons.MobBatteryWarning4 = "",
			GlyphIcons.MobBatteryWarning5 = "",
			GlyphIcons.MobBatteryWarning6 = "",
			GlyphIcons.MobBatteryWarning7 = "",
			GlyphIcons.MobBatteryWarning8 = "",
			GlyphIcons.MobBatteryWarning9 = "",
			GlyphIcons.MobBluetooth = "",
			GlyphIcons.MobCallForwarding = "",
			GlyphIcons.MobCallForwardingMirrored = "",
			GlyphIcons.MobDrivingMode = "",
			GlyphIcons.MobLocation = "",
			GlyphIcons.MobQuietHours = "",
			GlyphIcons.MobSIM = "",
			GlyphIcons.MobSIMError = "",
			GlyphIcons.MobSIMLock = "",
			GlyphIcons.MobSIMMissing = "",
			GlyphIcons.MobSignal1 = "",
			GlyphIcons.MobSignal2 = "",
			GlyphIcons.MobSignal3 = "",
			GlyphIcons.MobSignal4 = "",
			GlyphIcons.MobSignal5 = "",
			GlyphIcons.MobWifi1 = "",
			GlyphIcons.MobWifi2 = "",
			GlyphIcons.MobWifi3 = "",
			GlyphIcons.MobWifi4 = "",
			GlyphIcons.MobWifiCall0 = "",
			GlyphIcons.MobWifiCall1 = "",
			GlyphIcons.MobWifiCall2 = "",
			GlyphIcons.MobWifiCall3 = "",
			GlyphIcons.MobWifiCall4 = "",
			GlyphIcons.MobWifiCallBars = "",
			GlyphIcons.MobWifiError1 = "",
			GlyphIcons.MobWifiError2 = "",
			GlyphIcons.MobWifiError3 = "",
			GlyphIcons.MobWifiError4 = "",
			GlyphIcons.MobWifiHotspot = "",
			GlyphIcons.MobWifiUnknown1 = "",
			GlyphIcons.MobWifiUnknown1Mirror = "",
			GlyphIcons.MobWifiUnknown2 = "",
			GlyphIcons.MobWifiUnknown2Mirror = "",
			GlyphIcons.MobWifiUnknown3 = "",
			GlyphIcons.MobWifiUnknown3Mirror = "",
			GlyphIcons.MobWifiUnknown4 = "",
			GlyphIcons.MobWifiUnknown4Mirror = "",
			GlyphIcons.MobWifiWarning1 = "",
			GlyphIcons.MobWifiWarning2 = "",
			GlyphIcons.MobWifiWarning3 = "",
			GlyphIcons.MobWifiWarning4 = "",
			GlyphIcons.MobeSIM = "",
			GlyphIcons.MobeSIMBusy = "",
			GlyphIcons.MobeSIMLocked = "",
			GlyphIcons.MobeSIMNoProfile = "",
			GlyphIcons.MobileLocked = "",
			GlyphIcons.MobilePlanApp = "",
			GlyphIcons.MobileSelected = "",
			GlyphIcons.MobileTablet = "",
			GlyphIcons.MobileTabs = "",
			GlyphIcons.MobileWifi = "",
			GlyphIcons.Money = "",
			GlyphIcons.More = "",
			GlyphIcons.MoreSports = "",
			GlyphIcons.MoreVertical = "",
			GlyphIcons.Mortgage = "",
			GlyphIcons.Motion = "",
			GlyphIcons.MountainChart = "",
			GlyphIcons.MountainClimbing = "",
			GlyphIcons.Mouse = "",
			GlyphIcons.Move = "",
			GlyphIcons.MoveToFolder = "",
			GlyphIcons.MoveToFolderHorizontal = "",
			GlyphIcons.Movers = "",
			GlyphIcons.Movies = "",
			GlyphIcons.MoviesTVApp = "",
			GlyphIcons.MultiSelect = "",
			GlyphIcons.MultiSelectMirrored = "",
			GlyphIcons.MultimediaDMP = "",
			GlyphIcons.MultimediaDMS = "",
			GlyphIcons.MultimediaDVR = "",
			GlyphIcons.MultimediaPMP = "",
			GlyphIcons.MultiplayerJoinChallenge = "",
			GlyphIcons.MultipleBatteries12 = "",
			GlyphIcons.MusicAlarm = "",
			GlyphIcons.MusicAlbum = "",
			GlyphIcons.MusicApp = "",
			GlyphIcons.MusicInCollection = "",
			GlyphIcons.MusicInCollectionFill = "",
			GlyphIcons.MusicInfo = "",
			GlyphIcons.MusicNote = "",
			GlyphIcons.MusicSharing = "",
			GlyphIcons.MusicSharingOff = "",
			GlyphIcons.Mute = "",
			GlyphIcons.MyFavorites = "",
			GlyphIcons.MyMoviesTV = "",
			GlyphIcons.MyMoviesTV20 = "",
			GlyphIcons.MyMoviesTVSolid20 = "",
			GlyphIcons.MyNetwork = "",
			GlyphIcons.MyWatchlist = "",
			GlyphIcons.NFCLogo = "",
			GlyphIcons.NNBS = "",
			GlyphIcons.NUIFPContinueSlideAction = "",
			GlyphIcons.NUIFPContinueSlideHand = "",
			GlyphIcons.NUIFPPressAction = "",
			GlyphIcons.NUIFPPressHand = "",
			GlyphIcons.NUIFPPressRepeatAction = "",
			GlyphIcons.NUIFPPressRepeatHand = "",
			GlyphIcons.NUIFPRollLeftAction = "",
			GlyphIcons.NUIFPRollLeftHand = "",
			GlyphIcons.NUIFPRollRightHand = "",
			GlyphIcons.NUIFPRollRightHandAction = "",
			GlyphIcons.NUIFPStartSlideAction = "",
			GlyphIcons.NUIFPStartSlideHand = "",
			GlyphIcons.NUIFace = "",
			GlyphIcons.NUIIris = "",
			GlyphIcons.NameInfo = "",
			GlyphIcons.Narrator = "",
			GlyphIcons.NarratorApp = "",
			GlyphIcons.NarratorForward = "",
			GlyphIcons.NarratorForwardMirrored = "",
			GlyphIcons.Nav2DMapView = "",
			GlyphIcons.NavExplore3D = "",
			GlyphIcons.NavigateBack = "",
			GlyphIcons.NavigateBackMirrored = "",
			GlyphIcons.NavigateExternalInline = "",
			GlyphIcons.NavigateForward = "",
			GlyphIcons.NavigateForwardMirrored = "",
			GlyphIcons.NearbySharing = "",
			GlyphIcons.Negate = "",
			GlyphIcons.Network = "",
			GlyphIcons.NetworkAdapter = "",
			GlyphIcons.NetworkConnected = "",
			GlyphIcons.NetworkConnectedCheckmark = "",
			GlyphIcons.NetworkOffline = "",
			GlyphIcons.NetworkPhysical = "",
			GlyphIcons.NetworkPrinter = "",
			GlyphIcons.NetworkSharing = "",
			GlyphIcons.NetworkTower = "",
			GlyphIcons.NewFolder = "",
			GlyphIcons.NewWindow = "",
			GlyphIcons.News = "",
			GlyphIcons.Next = "",
			GlyphIcons.NextSolid = "",
			GlyphIcons.NoiseCancelation = "",
			GlyphIcons.NoiseCancelationOff = "",
			GlyphIcons.NoiseSuppression = "",
			GlyphIcons.Notebook = "",
			GlyphIcons.NotesRemove = "",
			GlyphIcons.Number = "",
			GlyphIcons.ODLink = "",
			GlyphIcons.ODLink12 = "",
			GlyphIcons.OEM = "",
			GlyphIcons.OEM20 = "",
			GlyphIcons.OEMSolid20 = "",
			GlyphIcons.OHLC = "",
			GlyphIcons.ObjectHop = "",
			GlyphIcons.ObjectHover = "",
			GlyphIcons.ObjectJumpTurn = "",
			GlyphIcons.ObjectPulse = "",
			GlyphIcons.ObjectQuickAnimation = "",
			GlyphIcons.ObjectRotate = "",
			GlyphIcons.ObjectSearch = "",
			GlyphIcons.ObjectSpin = "",
			GlyphIcons.ObjectSwing = "",
			GlyphIcons.ObjectTeeter = "",
			GlyphIcons.Octagon = "",
			GlyphIcons.Offer = "",
			GlyphIcons.OfficeLogo = "",
			GlyphIcons.Omega = "",
			GlyphIcons.OneBar = "",
			GlyphIcons.OneDriveFileVault = "",
			GlyphIcons.OneDriveLogo = "",
			GlyphIcons.OneDriveLogoBottomLayer = "",
			GlyphIcons.OneDriveLogoLeftLayer = "",
			GlyphIcons.OneDriveLogoRightLayer = "",
			GlyphIcons.OneDriveLogoStrokeLayer = "",
			GlyphIcons.OneDriveLogoTopLayer = "",
			GlyphIcons.OneHandedLeft20 = "",
			GlyphIcons.OneHandedRight20 = "",
			GlyphIcons.OneNoteLogo = "",
			GlyphIcons.OneNoteLogo16 = "",
			GlyphIcons.OneNoteLogoInverse16 = "",
			GlyphIcons.OneSecRing = "",
			GlyphIcons.OnlineCampaign = "",
			GlyphIcons.OnlinePhoto = "",
			GlyphIcons.OpenEnrollment = "",
			GlyphIcons.OpenEnrollmentMirrored = "",
			GlyphIcons.OpenFile = "",
			GlyphIcons.OpenFolderHorizontal = "",
			GlyphIcons.OpenHand = "",
			GlyphIcons.OpenInNewTab = "",
			GlyphIcons.OpenInNewWindow = "",
			GlyphIcons.OpenLocal = "",
			GlyphIcons.OpenPane = "",
			GlyphIcons.OpenPaneMirrored = "",
			GlyphIcons.OpenWith = "",
			GlyphIcons.OpenWithMirrored = "",
			GlyphIcons.Orientation = "",
			GlyphIcons.Orientation2 = "",
			GlyphIcons.OtherUser = "",
			GlyphIcons.OutgoingCall = "",
			GlyphIcons.OutlineColor = "",
			GlyphIcons.OutlineHalfStarLeft = "",
			GlyphIcons.OutlineHalfStarRight = "",
			GlyphIcons.OutlineQuarterStarLeft = "",
			GlyphIcons.OutlineQuarterStarRight = "",
			GlyphIcons.OutlineStarLeftHalf = "",
			GlyphIcons.OutlineStarRightHalf = "",
			GlyphIcons.OutlineThreeQuarterStarLeft = "",
			GlyphIcons.OutlineThreeQuarterStarRight = "",
			GlyphIcons.OutlookLogo = "",
			GlyphIcons.OutlookLogo16 = "",
			GlyphIcons.OutlookLogoInverse = "",
			GlyphIcons.OutlookLogoInverse16 = "",
			GlyphIcons.OverwriteWords = "",
			GlyphIcons.OverwriteWordsFill = "",
			GlyphIcons.OverwriteWordsFillKorean = "",
			GlyphIcons.OverwriteWordsKorean = "",
			GlyphIcons.PC1 = "",
			GlyphIcons.PDF = "",
			GlyphIcons.PINPad = "",
			GlyphIcons.PIP = "",
			GlyphIcons.PLAP = "",
			GlyphIcons.POI = "",
			GlyphIcons.POILocationFound = "",
			GlyphIcons.POIOff = "",
			GlyphIcons.POISolid = "",
			GlyphIcons.PPSFourLandscape = "",
			GlyphIcons.PPSFourPortrait = "",
			GlyphIcons.PPSOneLandscape = "",
			GlyphIcons.PPSOnePortrait = "",
			GlyphIcons.PPSTwoLandscape = "",
			GlyphIcons.PPSTwoPortrait = "",
			GlyphIcons.Package = "",
			GlyphIcons.Page = "",
			GlyphIcons.PageAdd = "",
			GlyphIcons.PageArrowLeft = "",
			GlyphIcons.PageArrowRight = "",
			GlyphIcons.PageBlock = "",
			GlyphIcons.PageEdit = "",
			GlyphIcons.PageLeft = "",
			GlyphIcons.PageList = "",
			GlyphIcons.PageListMirrored = "",
			GlyphIcons.PageMarginLandscapeModerate = "",
			GlyphIcons.PageMarginLandscapeNarrow = "",
			GlyphIcons.PageMarginLandscapeNormal = "",
			GlyphIcons.PageMarginLandscapeWide = "",
			GlyphIcons.PageMarginPortraitModerate = "",
			GlyphIcons.PageMarginPortraitNarrow = "",
			GlyphIcons.PageMarginPortraitNormal = "",
			GlyphIcons.PageMarginPortraitWide = "",
			GlyphIcons.PageMirrored = "",
			GlyphIcons.PageRecurring = "",
			GlyphIcons.PageRemove = "",
			GlyphIcons.PageRight = "";
			GlyphIcons.PageShared = "",
			GlyphIcons.PageSolid = "",
			GlyphIcons.PaginationDotOutline10 = "",
			GlyphIcons.PaginationDotSolid10 = "",
			GlyphIcons.Paint3DLogo = "",
			GlyphIcons.Paint3DLogo2 = "",
			GlyphIcons.PanMode = "",
			GlyphIcons.PanoImmersive = "",
			GlyphIcons.PanoIndicator = "",
			GlyphIcons.ParkingLocation = "",
			GlyphIcons.ParkingLocationMirrored = "",
			GlyphIcons.ParkingLocationSolid = "",
			GlyphIcons.PartlyCloudyDay = "",
			GlyphIcons.PartlyCloudyNight = "",
			GlyphIcons.PartyLeader = "",
			GlyphIcons.PassiveAuthentication = "",
			GlyphIcons.PasswordKeyHide = "",
			GlyphIcons.PasswordKeyShow = "",
			GlyphIcons.Paste = "",
			GlyphIcons.PasteAsText = "",
			GlyphIcons.PasteImage = "",
			GlyphIcons.PasteLink = "",
			GlyphIcons.PasteSolid = "",
			GlyphIcons.Patterns = "",
			GlyphIcons.Pause = "",
			GlyphIcons.PauseBadge12 = "",
			GlyphIcons.PauseBold = "",
			GlyphIcons.PauseSolid = "",
			GlyphIcons.PaymentCard = "",
			GlyphIcons.Pen = "",
			GlyphIcons.PenBlock = "",
			GlyphIcons.PenPalette = "",
			GlyphIcons.PenPaletteMirrored = "",
			GlyphIcons.PenSettings = "",
			GlyphIcons.PenTips = "",
			GlyphIcons.PenTipsMirrored = "",
			GlyphIcons.PenWorkspace = "",
			GlyphIcons.PenWorkspaceMirrored = "",
			GlyphIcons.Pencil = "",
			GlyphIcons.PencilFill = "",
			GlyphIcons.Pentagon = "",
			GlyphIcons.People = "",
			GlyphIcons.PeopleAdd = "",
			GlyphIcons.PeriodKey = "",
			GlyphIcons.Permissions = "",
			GlyphIcons.PersonWork = "",
			GlyphIcons.PersonalFinance = "",
			GlyphIcons.PersonalFolder = "",
			GlyphIcons.Personalize = "",
			GlyphIcons.Phone = "",
			GlyphIcons.PhoneBook = "",
			GlyphIcons.PhoneSolid = "",
			GlyphIcons.Photo = "",
			GlyphIcons.Photo2 = "",
			GlyphIcons.Photo2Add = "",
			GlyphIcons.Photo2Remove = "",
			GlyphIcons.Photo2Solid = "",
			GlyphIcons.PhotoBlock = "",
			GlyphIcons.PhotoCollection = "",
			GlyphIcons.PhotoError = "",
			GlyphIcons.PhotoImport = "",
			GlyphIcons.PhotoSetAs = "",
			GlyphIcons.PhotoSettings = "",
			GlyphIcons.PhotoShared = "",
			GlyphIcons.PhotoVideoMedia = "",
			GlyphIcons.Photofilter = "",
			GlyphIcons.PhotosApp = "",
			GlyphIcons.PhotosVideoEditorApps = "",
			GlyphIcons.Pi = "",
			GlyphIcons.Picture = "",
			GlyphIcons.PictureFill = "",
			GlyphIcons.PictureLibrary = "",
			GlyphIcons.PieDouble = "",
			GlyphIcons.PieSingle = "",
			GlyphIcons.Pin = "",
			GlyphIcons.PinFill = "",
			GlyphIcons.PinToTab = "",
			GlyphIcons.PinchIn = "",
			GlyphIcons.PinchOut = "",
			GlyphIcons.Pinned = "",
			GlyphIcons.PinnedFill = "",
			GlyphIcons.PinnedSolid = "",
			GlyphIcons.PinyinIMELogo = "",
			GlyphIcons.PinyinIMELogo2 = "",
			GlyphIcons.Play = "",
			GlyphIcons.Play36 = "",
			GlyphIcons.PlayBadge12 = "",
			GlyphIcons.PlayPause = "",
			GlyphIcons.PlayResume = "",
			GlyphIcons.PlayResumeSolid = "",
			GlyphIcons.PlayReverse = "",
			GlyphIcons.PlayReverseResume = "",
			GlyphIcons.PlayReverseResumeSolid = "",
			GlyphIcons.PlaySolid = "",
			GlyphIcons.PlaybackRate1x = "",
			GlyphIcons.PlaybackRateOther = "",
			GlyphIcons.PlayerSettings = "",
			GlyphIcons.PlaylistFollowed = "",
			GlyphIcons.PlaylistMusic = "",
			GlyphIcons.Plug = "",
			GlyphIcons.Plug12 = "",
			GlyphIcons.PlugConnected = "",
			GlyphIcons.PlugDisconnected = "",
			GlyphIcons.PlugSolid = "",
			GlyphIcons.Podium = "",
			GlyphIcons.PointErase = "",
			GlyphIcons.PointEraseMirrored = "",
			GlyphIcons.PointerHand = "",
			GlyphIcons.PoliceCar = "",
			GlyphIcons.PopCollapse = "",
			GlyphIcons.PopExpand = "",
			GlyphIcons.PopularAthletes = "",
			GlyphIcons.PostRoll = "",
			GlyphIcons.PostUpdate = "",
			GlyphIcons.PowerButton = "",
			GlyphIcons.PowerButtonUpdate = "",
			GlyphIcons.PowerOptions = "",
			GlyphIcons.PowerPointDocument = "",
			GlyphIcons.PowerPointLogo = "",
			GlyphIcons.PowerPointLogo16 = "",
			GlyphIcons.PowerPointLogoInverse = "",
			GlyphIcons.PowerPointLogoInverse16 = "",
			GlyphIcons.PowerSettings = "",
			GlyphIcons.PowerShell = "",
			GlyphIcons.Precipitation = "",
			GlyphIcons.PresenceChicklet = "",
			GlyphIcons.PresenceChickletVideo = "",
			GlyphIcons.Preview = "",
			GlyphIcons.PreviewClip = "",
			GlyphIcons.PreviewLink = "",
			GlyphIcons.Previous = "",
			GlyphIcons.PreviousSolid = "",
			GlyphIcons.Print = "",
			GlyphIcons.PrintAllPages = "",
			GlyphIcons.PrintCustomRange = "",
			GlyphIcons.PrintDefault = "",
			GlyphIcons.Printer3D = "",
			GlyphIcons.PrintfaxPrinterFile = "",
			GlyphIcons.Priority = "",
			GlyphIcons.PrivacyDashboard = "",
			GlyphIcons.PrivateCall = "",
			GlyphIcons.ProFootball = "",
			GlyphIcons.Process = "",
			GlyphIcons.Processing = "",
			GlyphIcons.Product = "",
			GlyphIcons.ProductivityMode = "",
			GlyphIcons.ProgressRingDots = "",
			GlyphIcons.Project = "",
			GlyphIcons.ProjectToDevice = "",
			GlyphIcons.Projector = "",
			GlyphIcons.ProtectedDocument = "",
			GlyphIcons.Protractor = "",
			GlyphIcons.ProvisioningPackage = "",
			GlyphIcons.PublisherLogo = "",
			GlyphIcons.PublisherLogoInverse16 = "",
			GlyphIcons.Pulse = "",
			GlyphIcons.PuncKey = "",
			GlyphIcons.PuncKey0 = "",
			GlyphIcons.PuncKey1 = "",
			GlyphIcons.PuncKey2 = "",
			GlyphIcons.PuncKey3 = "",
			GlyphIcons.PuncKey4 = "",
			GlyphIcons.PuncKey5 = "",
			GlyphIcons.PuncKey6 = "",
			GlyphIcons.PuncKey7 = "",
			GlyphIcons.PuncKey8 = "",
			GlyphIcons.PuncKey9 = "",
			GlyphIcons.PuncKeyLeftBottom = "",
			GlyphIcons.PuncKeyRightBottom = "",
			GlyphIcons.Punctuation = "",
			GlyphIcons.Puzzle = "",
			GlyphIcons.QRCode = "",
			GlyphIcons.QWERTYOff = "",
			GlyphIcons.QWERTYOn = "",
			GlyphIcons.QuarentinedItems = "",
			GlyphIcons.QuarentinedItemsMirrored = "",
			GlyphIcons.QuarterCircle = "",
			GlyphIcons.QuarterStarLeft = "",
			GlyphIcons.QuarterStarRight = "",
			GlyphIcons.Quest = "",
			GlyphIcons.Questionnaire = "",
			GlyphIcons.QuickNote = "",
			GlyphIcons.QuietHours = "",
			GlyphIcons.QuietHoursBadge12 = "",
			GlyphIcons.Quote = "",
			GlyphIcons.RAM = "",
			GlyphIcons.RTTLogo = "",
			GlyphIcons.Radar = "",
			GlyphIcons.Radio = "",
			GlyphIcons.RadioBtnOff = "",
			GlyphIcons.RadioBtnOn = "",
			GlyphIcons.RadioBullet = "",
			GlyphIcons.RadioBullet2 = "",
			GlyphIcons.Rain = "",
			GlyphIcons.RainShowersDay = "",
			GlyphIcons.RainShowersNight = "",
			GlyphIcons.RainSnow = "",
			GlyphIcons.RainSnowShowerDay = "",
			GlyphIcons.RainSnowShowerNight = "",
			GlyphIcons.Rate = "",
			GlyphIcons.Read = "",
			GlyphIcons.ReadOutLoud = "",
			GlyphIcons.ReadinessAndCollaborationServices = "",
			GlyphIcons.ReadingList = "",
			GlyphIcons.ReadingMode = "",
			GlyphIcons.ReadingModeSolid = "",
			GlyphIcons.Recalculate = "",
			GlyphIcons.ReceiptPrinter = "",
			GlyphIcons.ReceiptProcessing = "",
			GlyphIcons.Recent = "",
			GlyphIcons.Record = "",
			GlyphIcons.Record2 = "",
			GlyphIcons.RectangleMarquee = "",
			GlyphIcons.RectangleShape = "",
			GlyphIcons.RectangularClipping = "",
			GlyphIcons.RecycleBin = "",
			GlyphIcons.RedEye = "",
			GlyphIcons.Redact = "",
			GlyphIcons.Redo = "",
			GlyphIcons.Refresh = "",
			GlyphIcons.Relationship = "",
			GlyphIcons.RememberedDevice = "",
			GlyphIcons.Reminder = "",
			GlyphIcons.ReminderFill = "",
			GlyphIcons.ReminderReactivated = "",
			GlyphIcons.ReminderToDoLogo = "",
			GlyphIcons.RemixLogo = "",
			GlyphIcons.Remote = "",
			GlyphIcons.Remove = "",
			GlyphIcons.RemoveContent = "",
			GlyphIcons.RemoveFilter = "",
			GlyphIcons.RemoveFrom = "",
			GlyphIcons.RemoveFromAlbum = "",
			GlyphIcons.RemoveLink = "",
			GlyphIcons.Rename = "",
			GlyphIcons.ReopenPages = "",
			GlyphIcons.Repair = "",
			GlyphIcons.RepeatAll = "",
			GlyphIcons.RepeatOff = "",
			GlyphIcons.RepeatOne = "",
			GlyphIcons.Replay = "",
			GlyphIcons.Reply = "",
			GlyphIcons.ReplyAll = "",
			GlyphIcons.ReplyMirrored = "",
			GlyphIcons.ReportDocument = "",
			GlyphIcons.ReportHacked = "",
			GlyphIcons.ReportUser = "",
			GlyphIcons.Reset = "",
			GlyphIcons.ResetDevice = "",
			GlyphIcons.ResetDrive = "",
			GlyphIcons.Reshare = "",
			GlyphIcons.ResizeImage = "",
			GlyphIcons.ResizeMouseLarge = "",
			GlyphIcons.ResizeMouseMedium = "",
			GlyphIcons.ResizeMouseMediumMirrored = "",
			GlyphIcons.ResizeMouseSmall = "",
			GlyphIcons.ResizeMouseSmallMirrored = "",
			GlyphIcons.ResizeMouseTall = "",
			GlyphIcons.ResizeMouseTallMirrored = "",
			GlyphIcons.ResizeMouseWide = "",
			GlyphIcons.ResizeTouchLarger = "",
			GlyphIcons.ResizeTouchNarrower = "",
			GlyphIcons.ResizeTouchNarrowerMirrored = "",
			GlyphIcons.ResizeTouchShorter = "",
			GlyphIcons.ResizeTouchSmaller = "",
			GlyphIcons.Resolution = "",
			GlyphIcons.RestartApp = "",
			GlyphIcons.RestartUpdate = "",
			GlyphIcons.ReturnKey = "",
			GlyphIcons.ReturnKeyLg = "",
			GlyphIcons.ReturnKeySm = "",
			GlyphIcons.ReturnToCall = "",
			GlyphIcons.ReturnToWindow = "",
			GlyphIcons.RevToggleKey = "",
			GlyphIcons.RevealPasswordMedium = "",
			GlyphIcons.RewardsLogo = "",
			GlyphIcons.RewardsLogoSolid = "",
			GlyphIcons.Rewind = "",
			GlyphIcons.RewindSolid = "",
			GlyphIcons.Ribbon = "",
			GlyphIcons.RightArrowKeyTime0 = "",
			GlyphIcons.RightArrowKeyTime1 = "",
			GlyphIcons.RightArrowKeyTime2 = "",
			GlyphIcons.RightArrowKeyTime3 = "",
			GlyphIcons.RightArrowKeyTime4 = "",
			GlyphIcons.RightDoubleQuote = "",
			GlyphIcons.RightQuote = "",
			GlyphIcons.RightStick = "",
			GlyphIcons.RightToLeftMark = "",
			GlyphIcons.RightTriangle = "",
			GlyphIcons.Ringer = "",
			GlyphIcons.RingerBadge12 = "",
			GlyphIcons.RingerOff = "",
			GlyphIcons.RingerRemove = "",
			GlyphIcons.RingerSilent = "",
			GlyphIcons.Rinna1 = "",
			GlyphIcons.Rinna2 = "",
			GlyphIcons.RoamingDomestic = "",
			GlyphIcons.RoamingInternational = "",
			GlyphIcons.Robot = "",
			GlyphIcons.Rotate = "",
			GlyphIcons.Rotate180 = "",
			GlyphIcons.RotateCamera = "",
			GlyphIcons.RotateLandscape = "",
			GlyphIcons.RotateLeft = "",
			GlyphIcons.RotateMapLeft = "",
			GlyphIcons.RotateMapRight = "",
			GlyphIcons.RotatePortrait = "",
			GlyphIcons.RotateRight = "",
			GlyphIcons.RotationLock = "",
			GlyphIcons.Ruler = "",
			GlyphIcons.Running = "",
			GlyphIcons.RunningMotion = "",
			GlyphIcons.SDCard = "",
			GlyphIcons.SIM = "",
			GlyphIcons.SIMError = "",
			GlyphIcons.SIMLock = "",
			GlyphIcons.SIMMissing = "",
			GlyphIcons.SIP12Key = "",
			GlyphIcons.SIPCaretLeft = "",
			GlyphIcons.SIPCaretLeftSolid = "",
			GlyphIcons.SIPCaretRight = "",
			GlyphIcons.SIPCaretRightSolid = "",
			GlyphIcons.SIPMove = "",
			GlyphIcons.SIPRedock = "",
			GlyphIcons.SIPRedockAlt = "",
			GlyphIcons.SIPUndock = "",
			GlyphIcons.SIPUndockAlt = "",
			GlyphIcons.SSLCertificate = "",
			GlyphIcons.SSLCertificateMirrored = "",
			GlyphIcons.Sad = "",
			GlyphIcons.Safe = "",
			GlyphIcons.SalesPitch = "",
			GlyphIcons.SaturationLeft = "",
			GlyphIcons.SaturationMiddle = "",
			GlyphIcons.SaturationRight = "",
			GlyphIcons.Save = "",
			GlyphIcons.SaveAll = "",
			GlyphIcons.SaveAs = "",
			GlyphIcons.SaveCopy = "",
			GlyphIcons.SaveFrame = "",
			GlyphIcons.SaveLocal = "",
			GlyphIcons.Savings = "",
			GlyphIcons.Scale = "",
			GlyphIcons.ScaleDown = "",
			GlyphIcons.ScaleUp = "",
			GlyphIcons.Scan = "",
			GlyphIcons.ScreenSleep = "",
			GlyphIcons.ScreenTime = "",
			GlyphIcons.ScreenTimeMobile = "",
			GlyphIcons.ScrollMode = "",
			GlyphIcons.ScrollUpDown = "",
			GlyphIcons.Search = "",
			GlyphIcons.SearchAndApps = "",
			GlyphIcons.SearchCampaigns = "",
			GlyphIcons.SearchMedium = "",
			GlyphIcons.SearchPC = "",
			GlyphIcons.SecurityCamera = "",
			GlyphIcons.SeeDo = "",
			GlyphIcons.SelectAll = "",
			GlyphIcons.SelectInvert = "",
			GlyphIcons.SelectiveFocus = "",
			GlyphIcons.Sell = "",
			GlyphIcons.Semicolon = "",
			GlyphIcons.Send = "",
			GlyphIcons.SendFill = "",
			GlyphIcons.SendFillMirrored = "",
			GlyphIcons.SendMirrored = "",
			GlyphIcons.SendToPhone = "",
			GlyphIcons.Sensor = "",
			GlyphIcons.SentimentAnalysis = "",
			GlyphIcons.Separator = "",
			GlyphIcons.Server = "",
			GlyphIcons.Set = "",
			GlyphIcons.SetAction = "",
			GlyphIcons.SetDesktop = "",
			GlyphIcons.SetHistoryStatus = "",
			GlyphIcons.SetHistoryStatus2 = "",
			GlyphIcons.SetSolid = "",
			GlyphIcons.SetTile = "",
			GlyphIcons.SetTopStack = "",
			GlyphIcons.SetlockScreen = "",
			GlyphIcons.Settings = "",
			GlyphIcons.SettingsApp = "",
			GlyphIcons.SettingsBattery = "",
			GlyphIcons.SettingsDisplaySound = "",
			GlyphIcons.SettingsSolid = "",
			GlyphIcons.SettingsStatusCheckmark = "",
			GlyphIcons.SettingsStatusCircle = "",
			GlyphIcons.SettingsStatusError = "",
			GlyphIcons.SettingsStatusExclamation = "",
			GlyphIcons.SettingsStatusInfo = "",
			GlyphIcons.SettingsStatusTriangle = "",
			GlyphIcons.SettingsStatusWarning = "",
			GlyphIcons.SettingsSync = "",
			GlyphIcons.Shadows = "",
			GlyphIcons.Shapes = "",
			GlyphIcons.Share = "",
			GlyphIcons.ShareBroadband = "",
			GlyphIcons.ShareiOS = "",
			GlyphIcons.Sharpness = "",
			GlyphIcons.Shield = "",
			GlyphIcons.ShieldSolid = "",
			GlyphIcons.ShiftKey = "",
			GlyphIcons.ShiftKeyLock = "",
			GlyphIcons.Shirt = "",
			GlyphIcons.Shop = "",
			GlyphIcons.ShopBrand = "",
			GlyphIcons.ShopEnterprise = "",
			GlyphIcons.ShoppingCart = "",
			GlyphIcons.ShoppingList = "",
			GlyphIcons.ShowBcc = "",
			GlyphIcons.ShowResults = "",
			GlyphIcons.ShowResultsMirrored = "",
			GlyphIcons.Shuffle = "",
			GlyphIcons.ShuffleOff = "",
			GlyphIcons.ShutterSpeed = "",
			GlyphIcons.SignOut = "",
			GlyphIcons.SignalBars1 = "",
			GlyphIcons.SignalBars2 = "",
			GlyphIcons.SignalBars3 = "",
			GlyphIcons.SignalBars4 = "",
			GlyphIcons.SignalBars5 = "",
			GlyphIcons.SignalError = "",
			GlyphIcons.SignalNotConnected = "",
			GlyphIcons.SignalRoaming = "",
			GlyphIcons.SignatureCapture = "",
			GlyphIcons.Signin = "",
			GlyphIcons.Silver = "",
			GlyphIcons.SimplifiedChinesePrivate = "",
			GlyphIcons.SingleBookmark = "",
			GlyphIcons.SingleBookmarkSolid = "",
			GlyphIcons.SingleSelect = "",
			GlyphIcons.SingleSelectMirrored = "",
			GlyphIcons.Size = "",
			GlyphIcons.SizeLegacy = "",
			GlyphIcons.SkiResorts = "",
			GlyphIcons.SkipBack10 = "",
			GlyphIcons.SkipForward30 = "",
			GlyphIcons.SkypeCheck = "",
			GlyphIcons.SkypeClock = "",
			GlyphIcons.SkypeForBusinessLogo = "",
			GlyphIcons.SkypeLogo = "",
			GlyphIcons.SkypeMinus = "",
			GlyphIcons.SlideSearch = "",
			GlyphIcons.SliderThumb = "",
			GlyphIcons.Slideshow = "",
			GlyphIcons.SlowMotionOff = "",
			GlyphIcons.SlowMotionOn = "",
			GlyphIcons.SmallErase = "",
			GlyphIcons.SmartGlass = "",
			GlyphIcons.SmartScreen = "",
			GlyphIcons.Smartcard = "",
			GlyphIcons.SmartcardVirtual = "",
			GlyphIcons.SnapAssist = "",
			GlyphIcons.Snooze = "",
			GlyphIcons.Snow = "",
			GlyphIcons.SnowShowerDay = "",
			GlyphIcons.SnowShowerNight = "",
			GlyphIcons.Snowflake = "",
			GlyphIcons.Sort = "",
			GlyphIcons.SortDown = "",
			GlyphIcons.SortLines = "",
			GlyphIcons.SortUp = "",
			GlyphIcons.Spa = "",
			GlyphIcons.SpatialVolume0 = "",
			GlyphIcons.SpatialVolume1 = "",
			GlyphIcons.SpatialVolume2 = "",
			GlyphIcons.SpatialVolume3 = "",
			GlyphIcons.Speakers = "",
			GlyphIcons.SpecialEffectSize = "",
			GlyphIcons.SpecialEffectTransparency = "",
			GlyphIcons.SpecialEvent = "",
			GlyphIcons.Speech = "",
			GlyphIcons.SpeechMirrored = "",
			GlyphIcons.SpeechOff = "",
			GlyphIcons.SpeechOff2 = "",
			GlyphIcons.SpeechOffMirrored = "",
			GlyphIcons.SpeechPrivacy = "",
			GlyphIcons.SpeechSolidBold = "",
			GlyphIcons.SpeedHigh = "",
			GlyphIcons.SpeedMedium = "",
			GlyphIcons.SpeedOff = "",
			GlyphIcons.Spelling = "",
			GlyphIcons.SpellingChinese = "",
			GlyphIcons.SpellingKorean = "",
			GlyphIcons.SpellingSerbian = "",
			GlyphIcons.Split20 = "",
			GlyphIcons.SplitVideo = "",
			GlyphIcons.SpotifyLogo = "",
			GlyphIcons.Squalls = "",
			GlyphIcons.SquareInner = "",
			GlyphIcons.SquareOuter = "",
			GlyphIcons.SquareRoot = "",
			GlyphIcons.SquareShape = "",
			GlyphIcons.Stack = "",
			GlyphIcons.StackIndicator12 = "",
			GlyphIcons.StaplingLandscapeBookBinding = "",
			GlyphIcons.StaplingLandscapeBottomLeft = "",
			GlyphIcons.StaplingLandscapeBottomRight = "",
			GlyphIcons.StaplingLandscapeTopLeft = "",
			GlyphIcons.StaplingLandscapeTopRight = "",
			GlyphIcons.StaplingLandscapeTwoBottom = "",
			GlyphIcons.StaplingLandscapeTwoLeft = "",
			GlyphIcons.StaplingLandscapeTwoRight = "",
			GlyphIcons.StaplingLandscapeTwoTop = "",
			GlyphIcons.StaplingOff = "",
			GlyphIcons.StaplingPortraitBookBinding = "",
			GlyphIcons.StaplingPortraitBottomLeft = "",
			GlyphIcons.StaplingPortraitBottomRight = "",
			GlyphIcons.StaplingPortraitTopLeft = "",
			GlyphIcons.StaplingPortraitTopRight = "",
			GlyphIcons.StaplingPortraitTwoBottom = "",
			GlyphIcons.StaplingPortraitTwoLeft = "",
			GlyphIcons.StaplingPortraitTwoRight = "",
			GlyphIcons.StaplingPortraitTwoTop = "",
			GlyphIcons.StarburstInfo = "",
			GlyphIcons.StarburstSuggested = "",
			GlyphIcons.StartPoint = "",
			GlyphIcons.StartPointSolid = "",
			GlyphIcons.StartPresenting = "",
			GlyphIcons.StatusCheckmark = "",
			GlyphIcons.StatusCheckmark7 = "",
			GlyphIcons.StatusCheckmarkLeft = "",
			GlyphIcons.StatusCircle = "",
			GlyphIcons.StatusCircle7 = "",
			GlyphIcons.StatusCircleBlock = "",
			GlyphIcons.StatusCircleBlock2 = "",
			GlyphIcons.StatusCircleCheckmark = "",
			GlyphIcons.StatusCircleErrorX = "",
			GlyphIcons.StatusCircleExclamation = "",
			GlyphIcons.StatusCircleInfo = "",
			GlyphIcons.StatusCircleInner = "",
			GlyphIcons.StatusCircleLeft = "",
			GlyphIcons.StatusCircleOuter = "",
			GlyphIcons.StatusCircleQuestionMark = "",
			GlyphIcons.StatusCircleRing = "",
			GlyphIcons.StatusCircleSync = "",
			GlyphIcons.StatusConnecting1 = "",
			GlyphIcons.StatusConnecting2 = "",
			GlyphIcons.StatusDataTransfer = "",
			GlyphIcons.StatusDataTransferRoaming = "",
			GlyphIcons.StatusDataTransferVPN = "",
			GlyphIcons.StatusDualSIM1 = "",
			GlyphIcons.StatusDualSIM1Mirrored = "",
			GlyphIcons.StatusDualSIM1VPN = "",
			GlyphIcons.StatusDualSIM2 = "",
			GlyphIcons.StatusDualSIM2Mirrored = "",
			GlyphIcons.StatusDualSIM2VPN = "",
			GlyphIcons.StatusError = "",
			GlyphIcons.StatusErrorCircle7 = "",
			GlyphIcons.StatusErrorFull = "",
			GlyphIcons.StatusErrorLeft = "",
			GlyphIcons.StatusExclamationCircle7 = "",
			GlyphIcons.StatusInfo = "",
			GlyphIcons.StatusInfoLeft = "",
			GlyphIcons.StatusMultiSIM3 = "",
			GlyphIcons.StatusMultiSIM3Mirrored = "",
			GlyphIcons.StatusMultiSIM4 = "",
			GlyphIcons.StatusMultiSIM4Mirrored = "",
			GlyphIcons.StatusMultiSIM5 = "",
			GlyphIcons.StatusMultiSIM5Mirrored = "",
			GlyphIcons.StatusPause7 = "",
			GlyphIcons.StatusSGLTE = "",
			GlyphIcons.StatusSGLTECell = "",
			GlyphIcons.StatusSGLTEDataVPN = "",
			GlyphIcons.StatusSecured = "",
			GlyphIcons.StatusTriangle = "",
			GlyphIcons.StatusTriangleExclamation = "",
			GlyphIcons.StatusTriangleInner = "",
			GlyphIcons.StatusTriangleLeft = "",
			GlyphIcons.StatusTriangleOuter = "",
			GlyphIcons.StatusUnsecure = "",
			GlyphIcons.StatusVPN = "",
			GlyphIcons.StatusWarning = "",
			GlyphIcons.StatusWarningLeft = "",
			GlyphIcons.Sticker = "",
			GlyphIcons.Sticker2 = "",
			GlyphIcons.Sticker2Solid = "",
			GlyphIcons.StickyKeys = "",
			GlyphIcons.StockDown = "",
			GlyphIcons.StockUp = "",
			GlyphIcons.Stop = "",
			GlyphIcons.StopPoint = "",
			GlyphIcons.StopPointSolid = "",
			GlyphIcons.StopPresenting = "",
			GlyphIcons.StopSlideshow = "",
			GlyphIcons.StopSolid = "",
			GlyphIcons.Stopwatch = "",
			GlyphIcons.StopwatchRecord = "",
			GlyphIcons.StorageNetworkWireless = "",
			GlyphIcons.StorageOptical = "",
			GlyphIcons.StoragePhysical = "",
			GlyphIcons.StorageTape = "",
			GlyphIcons.StoreLogo16 = "",
			GlyphIcons.StoreLogoMed20 = "",
			GlyphIcons.StoryboardImport = "",
			GlyphIcons.Straighten = "",
			GlyphIcons.Streaming = "",
			GlyphIcons.StreamingEnterprise = "",
			GlyphIcons.Street = "",
			GlyphIcons.StreetsideSplitExpand = "",
			GlyphIcons.StreetsideSplitMinimize = "",
			GlyphIcons.Strength = "",
			GlyphIcons.Strikethrough = "",
			GlyphIcons.StrikethroughKorean = "",
			GlyphIcons.StrokeErase = "",
			GlyphIcons.StrokeErase2 = "",
			GlyphIcons.StrokeEraseMirrored = "",
			GlyphIcons.StrokeSIP = "",
			GlyphIcons.SubscriptionAdd = "",
			GlyphIcons.SubscriptionAddMirrored = "",
			GlyphIcons.Subscriptions = "",
			GlyphIcons.SubscriptionsMirrored = "",
			GlyphIcons.SubstitutionsCombined = "",
			GlyphIcons.SubstitutionsIn = "",
			GlyphIcons.SubstitutionsOut = "",
			GlyphIcons.Subtitles = "",
			GlyphIcons.SubtitlesAudio = "",
			GlyphIcons.SubtractBold = "",
			GlyphIcons.Suitcase = "",
			GlyphIcons.SummaryChart = "",
			GlyphIcons.Sunny = "",
			GlyphIcons.SurfaceApp = "",
			GlyphIcons.SurfaceEarbuds = "",
			GlyphIcons.SurfaceHeadphoneApp = "",
			GlyphIcons.SurfaceHub = "",
			GlyphIcons.SurfaceHubSelected = "",
			GlyphIcons.Sustainable = "",
			GlyphIcons.SwayLogoInverse = "",
			GlyphIcons.SwiftKeyApp = "",
			GlyphIcons.Swipe = "",
			GlyphIcons.SwipeDown = "",
			GlyphIcons.SwipeRevealArt = "",
			GlyphIcons.SwipeUP = "",
			GlyphIcons.SwipeUpDock = "",
			GlyphIcons.Switch = "",
			GlyphIcons.SwitchAccess = "",
			GlyphIcons.SwitchApps = "",
			GlyphIcons.SwitchUser = "",
			GlyphIcons.Sync = "",
			GlyphIcons.SyncBadge12 = "",
			GlyphIcons.SyncError = "",
			GlyphIcons.SyncFolder = "",
			GlyphIcons.SyncFolderHorizontal = "",
			GlyphIcons.SyncOccurence = "",
			GlyphIcons.SyncOptions = "",
			GlyphIcons.SyncStatus = "",
			GlyphIcons.SyncStatusSolid = "",
			GlyphIcons.SyncToPC = "",
			GlyphIcons.SysAirplane = "",
			GlyphIcons.SysEaseOfAccess = "",
			GlyphIcons.System = "",
			GlyphIcons.SystemSolid = "",
			GlyphIcons.TVMonitor = "",
			GlyphIcons.TVMonitorSelected = "",
			GlyphIcons.TVShows = "",
			GlyphIcons.Tab = "",
			GlyphIcons.TabCenter = "",
			GlyphIcons.TabCenterSolid = "",
			GlyphIcons.TabSweep = "",
			GlyphIcons.Tablet = "",
			GlyphIcons.TabletMode = "",
			GlyphIcons.TabletSelected = "",
			GlyphIcons.Tag = "",
			GlyphIcons.Tag20 = "",
			GlyphIcons.TagSolid = "",
			GlyphIcons.TagSolid20 = "",
			GlyphIcons.TapAndSend = "",
			GlyphIcons.Task = "",
			GlyphIcons.TaskSolid = "",
			GlyphIcons.TaskView = "",
			GlyphIcons.TaskViewExpanded = "",
			GlyphIcons.TaskViewSettings = "",
			GlyphIcons.Taskbar = "",
			GlyphIcons.TaskbarPhone = "",
			GlyphIcons.Taskboard = "",
			GlyphIcons.TeamFavorite = "",
			GlyphIcons.TeamsLogo = "",
			GlyphIcons.Telemarketer = "",
			GlyphIcons.Temperature = "",
			GlyphIcons.TenPowerX = "",
			GlyphIcons.TestConnection = "",
			GlyphIcons.TextCursorIndicator = "",
			GlyphIcons.TextCursorThick = "",
			GlyphIcons.TextCursorThin = "",
			GlyphIcons.TextDocument = "",
			GlyphIcons.TextField = "",
			GlyphIcons.TextHighlight = "",
			GlyphIcons.TextHighlightFill = "",
			GlyphIcons.TextHighlightKorean = "",
			GlyphIcons.Theme = "",
			GlyphIcons.ThisPC = "",
			GlyphIcons.ThoughtBubble = "",
			GlyphIcons.ThreeBars = "",
			GlyphIcons.ThreeQuarterCircle = "",
			GlyphIcons.ThreeQuarterStarLeft = "",
			GlyphIcons.ThreeQuarterStarRight = "",
			GlyphIcons.ThumbnailImage = "",
			GlyphIcons.ThumbnailView = "",
			GlyphIcons.ThumbnailViewMirrored = "",
			GlyphIcons.Thunderstorms = "",
			GlyphIcons.Ticket = "",
			GlyphIcons.Tiles = "",
			GlyphIcons.TiltDown = "",
			GlyphIcons.TiltUp = "",
			GlyphIcons.TimeLanguage = "",
			GlyphIcons.Timer = "",
			GlyphIcons.Timer10Sec = "",
			GlyphIcons.Timer2Sec = "",
			GlyphIcons.Timer3Sec = "",
			GlyphIcons.Timer5Min = "",
			GlyphIcons.Timer5Sec = "",
			GlyphIcons.TimerOff = "",
			GlyphIcons.TintLeft = "",
			GlyphIcons.TintRight = "",
			GlyphIcons.TintTop = "",
			GlyphIcons.TipsApp = "",
			GlyphIcons.Title = "",
			GlyphIcons.TitleMirrored = "",
			GlyphIcons.ToDoLogoOutline = "",
			GlyphIcons.ToggleBorder = "",
			GlyphIcons.ToggleFilled = "",
			GlyphIcons.ToggleLeft = "",
			GlyphIcons.ToggleRight = "",
			GlyphIcons.ToggleThumb = "",
			GlyphIcons.TollSolid = "",
			GlyphIcons.TonWeight = "",
			GlyphIcons.ToolTip = "",
			GlyphIcons.Toolbox = "",
			GlyphIcons.Torch = "",
			GlyphIcons.Touch = "",
			GlyphIcons.TouchPointer = "",
			GlyphIcons.Touchpad = "",
			GlyphIcons.Touchscreen = "",
			GlyphIcons.Trackball = "",
			GlyphIcons.Trackers = "",
			GlyphIcons.TrackersMirrored = "",
			GlyphIcons.TraditionalChineseLock = "",
			GlyphIcons.TraditionalChinesePrivate = "",
			GlyphIcons.TrafficCongestionSolid = "",
			GlyphIcons.TrafficLight = "",
			GlyphIcons.Train = "",
			GlyphIcons.Train2 = "",
			GlyphIcons.TrainSolid = "",
			GlyphIcons.Transcription = "",
			GlyphIcons.Translate = "",
			GlyphIcons.TranslationFeedbackApp = "",
			GlyphIcons.TreeFolderFolder = "",
			GlyphIcons.TreeFolderFolderFill = "",
			GlyphIcons.TreeFolderFolderOpen = "",
			GlyphIcons.TreeFolderFolderOpenFill = "",
			GlyphIcons.Trending12 = "",
			GlyphIcons.TriangleShape = "",
			GlyphIcons.TriggerLeft = "",
			GlyphIcons.TriggerRight = "",
			GlyphIcons.Trigonometry = "",
			GlyphIcons.Trim = "",
			GlyphIcons.TrimEnd = "",
			GlyphIcons.TrimStart = "",
			GlyphIcons.Trophy = "",
			GlyphIcons.Trophy2 = "",
			GlyphIcons.TurnMobileLandscape = "",
			GlyphIcons.TwitterLogo = "",
			GlyphIcons.TwoBars = "",
			GlyphIcons.TwoFingersDown = "",
			GlyphIcons.TwoFingersUp = "",
			GlyphIcons.TwoPage = "",
			GlyphIcons.TwoPowerX = "",
			GlyphIcons.Type = "",
			GlyphIcons.TypedNote = "",
			GlyphIcons.TypedNoteFill = "",
			GlyphIcons.TypedNoteLetter = "",
			GlyphIcons.USB = "",
			GlyphIcons.USBSafeConnect = "",
			GlyphIcons.Underline = "",
			GlyphIcons.UnderlineA = "",
			GlyphIcons.UnderlineKorean = "",
			GlyphIcons.UnderlineP = "",
			GlyphIcons.UnderlineRussian = "",
			GlyphIcons.UnderlineS = "",
			GlyphIcons.UnderlineSerbian = "",
			GlyphIcons.UnderscoreSpace = "",
			GlyphIcons.Undo = "",
			GlyphIcons.Unfavorite = "",
			GlyphIcons.Uninstall = "",
			GlyphIcons.Unit = "",
			GlyphIcons.UnitCelsius = "",
			GlyphIcons.Unknown = "",
			GlyphIcons.Unknown20 = "",
			GlyphIcons.UnknownMirrored = "",
			GlyphIcons.UnknownSolid20 = "",
			GlyphIcons.Unlock = "",
			GlyphIcons.Unpin = "",
			GlyphIcons.UnstackAll = "",
			GlyphIcons.UnstackSelected = "",
			GlyphIcons.UnsyncFolder = "",
			GlyphIcons.UnsyncFolderHorizontal = "",
			GlyphIcons.Untag = "",
			GlyphIcons.Up = "";
			GlyphIcons.UpArrowShiftKey = "",
			GlyphIcons.UpJpnRomanji = "",
			GlyphIcons.UpShiftKey = "",
			GlyphIcons.UpdateRestore = "",
			GlyphIcons.UpdateStatusDot = "",
			GlyphIcons.Upload = "",
			GlyphIcons.UserAPN = "",
			GlyphIcons.UserFollowed = "",
			GlyphIcons.UserRemove = "",
			GlyphIcons.UserSync = "",
			GlyphIcons.UserWarning = "",
			GlyphIcons.VPN = "",
			GlyphIcons.VerticalBattery0 = "",
			GlyphIcons.VerticalBattery1 = "",
			GlyphIcons.VerticalBattery10 = "",
			GlyphIcons.VerticalBattery12 = "",
			GlyphIcons.VerticalBattery2 = "",
			GlyphIcons.VerticalBattery3 = "",
			GlyphIcons.VerticalBattery4 = "",
			GlyphIcons.VerticalBattery5 = "",
			GlyphIcons.VerticalBattery6 = "",
			GlyphIcons.VerticalBattery7 = "",
			GlyphIcons.VerticalBattery8 = "",
			GlyphIcons.VerticalBattery9 = "",
			GlyphIcons.VerticalBatteryCharging0 = "",
			GlyphIcons.VerticalBatteryCharging1 = "",
			GlyphIcons.VerticalBatteryCharging10 = "",
			GlyphIcons.VerticalBatteryCharging2 = "",
			GlyphIcons.VerticalBatteryCharging3 = "",
			GlyphIcons.VerticalBatteryCharging4 = "",
			GlyphIcons.VerticalBatteryCharging5 = "",
			GlyphIcons.VerticalBatteryCharging6 = "",
			GlyphIcons.VerticalBatteryCharging7 = "",
			GlyphIcons.VerticalBatteryCharging8 = "",
			GlyphIcons.VerticalBatteryCharging9 = "",
			GlyphIcons.VerticalBatteryUnknown = "",
			GlyphIcons.Vibrate = "",
			GlyphIcons.Video = "",
			GlyphIcons.Video360 = "",
			GlyphIcons.Video360Generic = "",
			GlyphIcons.VideoAutoPlay = "",
			GlyphIcons.VideoCapture = "",
			GlyphIcons.VideoChat = "",
			GlyphIcons.VideoIndicatorSolid = "",
			GlyphIcons.VideoLightOff = "",
			GlyphIcons.VideoNewRelease = "",
			GlyphIcons.VideoOff2 = "",
			GlyphIcons.VideoOffSolid = "",
			GlyphIcons.VideoProject = "",
			GlyphIcons.VideoProjectAdd = "",
			GlyphIcons.VideoProjectAuto = "",
			GlyphIcons.VideoSettings = "",
			GlyphIcons.VideoSolid = "",
			GlyphIcons.VideoTemplate = "",
			GlyphIcons.View = "",
			GlyphIcons.View3DLogo = "",
			GlyphIcons.ViewAll = "",
			GlyphIcons.ViewDashboard = "",
			GlyphIcons.ViewList = "",
			GlyphIcons.ViewOriginal = "",
			GlyphIcons.VirtualMachineGroup = "",
			GlyphIcons.VisualAlert = "",
			GlyphIcons.VoiceAccess = "",
			GlyphIcons.VoiceCall = "",
			GlyphIcons.VoiceMail = "",
			GlyphIcons.Volume = "",
			GlyphIcons.Volume0 = "",
			GlyphIcons.Volume1 = "",
			GlyphIcons.Volume2 = "",
			GlyphIcons.Volume3 = "",
			GlyphIcons.VolumeBars = "",
			GlyphIcons.VolumeDisabled = "",
			GlyphIcons.VolumeOff = "",
			GlyphIcons.Waffle = "",
			GlyphIcons.WaffleOffice365 = "",
			GlyphIcons.Walk = "",
			GlyphIcons.WalkSolid = "",
			GlyphIcons.Wallpaper = "",
			GlyphIcons.Warning = "",
			GlyphIcons.WarningSolid = "",
			GlyphIcons.WebDriver = "",
			GlyphIcons.WebNote = "",
			GlyphIcons.WebSearch = "",
			GlyphIcons.Webcam = "",
			GlyphIcons.Webcam2 = "",
			GlyphIcons.Website = "",
			GlyphIcons.WhatsThis = "",
			GlyphIcons.Wheel = "",
			GlyphIcons.WhiteBalance = "",
			GlyphIcons.Whiteboard = "",
			GlyphIcons.WidgetBoard = "",
			GlyphIcons.Wifi = "",
			GlyphIcons.Wifi1 = "",
			GlyphIcons.Wifi148 = "",
			GlyphIcons.Wifi2 = "",
			GlyphIcons.Wifi248 = "",
			GlyphIcons.Wifi3 = "",
			GlyphIcons.Wifi348 = "",
			GlyphIcons.Wifi48 = "",
			GlyphIcons.WifiAttentionOverlay = "",
			GlyphIcons.WifiCall0 = "",
			GlyphIcons.WifiCall1 = "",
			GlyphIcons.WifiCall2 = "",
			GlyphIcons.WifiCall3 = "",
			GlyphIcons.WifiCall4 = "",
			GlyphIcons.WifiCallBars = "",
			GlyphIcons.WifiError0 = "",
			GlyphIcons.WifiError1 = "",
			GlyphIcons.WifiError2 = "",
			GlyphIcons.WifiError3 = "",
			GlyphIcons.WifiError4 = "",
			GlyphIcons.WifiEthernet = "",
			GlyphIcons.WifiHotspot = "",
			GlyphIcons.WifiProtected0 = "",
			GlyphIcons.WifiProtected1 = "",
			GlyphIcons.WifiProtected148 = "",
			GlyphIcons.WifiProtected2 = "",
			GlyphIcons.WifiProtected248 = "",
			GlyphIcons.WifiProtected3 = "",
			GlyphIcons.WifiProtected348 = "",
			GlyphIcons.WifiProtected4 = "",
			GlyphIcons.WifiProtected48 = "",
			GlyphIcons.WifiWarning0 = "",
			GlyphIcons.WifiWarning1 = "",
			GlyphIcons.WifiWarning2 = "",
			GlyphIcons.WifiWarning3 = "",
			GlyphIcons.WifiWarning4 = "",
			GlyphIcons.WindDirection = "",
			GlyphIcons.WindowInfo = "",
			GlyphIcons.WindowSnipping = "",
			GlyphIcons.WindowsInsider = "",
			GlyphIcons.WindowsLogo = "",
			GlyphIcons.WindowsLogoHero = "",
			GlyphIcons.WindowsLogoInline = "",
			GlyphIcons.WindowsMixedRealityApp = "",
			GlyphIcons.WindowsUpdate = "",
			GlyphIcons.WindowsUpdateHero = "",
			GlyphIcons.WindowsUpdateLeftForBadge48 = "",
			GlyphIcons.Wire = "",
			GlyphIcons.WiredUSB = "",
			GlyphIcons.WirelessDisplayAdapter = "",
			GlyphIcons.WirelessUSB = "",
			GlyphIcons.WishList = "",
			GlyphIcons.WordDocument = "",
			GlyphIcons.WordLogo = "",
			GlyphIcons.WordLogo16 = "",
			GlyphIcons.WordLogoInverse = "",
			GlyphIcons.WordLogoInverse16 = "",
			GlyphIcons.Work = "",
			GlyphIcons.Work20 = "",
			GlyphIcons.WorkSolid = "",
			GlyphIcons.WorkSolid20 = "",
			GlyphIcons.World = "",
			GlyphIcons.WorldClock = "",
			GlyphIcons.WorldMarkets = "",
			GlyphIcons.XDivide1 = "",
			GlyphIcons.XPower2 = "",
			GlyphIcons.XPower3 = "",
			GlyphIcons.XPowerY = "",
			GlyphIcons.XRootY = "",
			GlyphIcons.XValue = "",
			GlyphIcons.XboxController = "",
			GlyphIcons.XboxController20 = "",
			GlyphIcons.XboxControllerSolid20 = "",
			GlyphIcons.XboxGamePass = "",
			GlyphIcons.XboxGamePassInline = "",
			GlyphIcons.XboxGold = "",
			GlyphIcons.XboxGoldInline = "",
			GlyphIcons.XboxLogo = "",
			GlyphIcons.XboxOneConsole = "",
			GlyphIcons.XboxPlayAnywhere = "",
			GlyphIcons.XboxSeriesX = "",
			GlyphIcons.YValue = "",
			GlyphIcons.YourMusic = "",
			GlyphIcons.YourPhoneApp16 = "",
			GlyphIcons.YourPhoneApp32 = "",
			GlyphIcons.ZeroBars = "",
			GlyphIcons.ZeroWidthJoiner = "",
			GlyphIcons.ZeroWidthNonJoiner = "",
			GlyphIcons.ZipFolder = "",
			GlyphIcons.Zoom = "",
			GlyphIcons.ZoomIn = "",
			GlyphIcons.ZoomMode = "",
			GlyphIcons.ZoomOut = "",
			GlyphIcons.ZoomToFit = "";
			let ng = class extends w {
					constructor() {
							super(...arguments),
							this.glyph = GlyphIcons.CircleShape
					}
					connectedCallback() {
							super.connectedCallback(),
							this.updateIcon()
					}
					updateIcon() {
							void 0 !== this.size && this.style.setProperty("--icon-size", `${this.size}px`),
							void 0 !== this.glyphSize && this.style.setProperty("--icon-glyph-size", `${this.glyphSize}px`),
							void 0 !== this.color && this.style.setProperty("--icon-color", `${this.color}`),
							void 0 !== this.backgroundImage && (this.style.setProperty("--icon-color", "transparent"),
							this.style.setProperty("--icon-background-image", `${this.backgroundImage}`))
					}
			}
			;
			__decorate([attr, __metadata("design:type", String)], ng.prototype, "glyph", void 0),
			__decorate([attr, __metadata("design:type", Number)], ng.prototype, "size", void 0),
			__decorate([attr, __metadata("design:type", Number)], ng.prototype, "glyphSize", void 0),
			__decorate([attr, __metadata("design:type", String)], ng.prototype, "color", void 0),
			__decorate([attr, __metadata("design:type", String)], ng.prototype, "backgroundImage", void 0),
			ng = __decorate([customElement({
					name: "glyph-icon",
					template: tg,
					styles: eg
			})], ng);
			const ig = css`
:host {
	position: fixed;
	bottom: 0;
	right: 20px;
	z-index: 100;
}

.root .cbtn {
	background: #f2f2f2;
	border: 1px solid #999;
	color: ${Gp.colors.brand.solid.denimMinus1};
	cursor: pointer;
	display: block;
	height: 28px;
	line-height: 28px;
	min-width: 110px;
	padding: 0 5px;
	text-align: center;
	font-family: ${Up.typography.fonts.text};
	font-size: 13px;
}

.cbtn svg-icon {
	margin: 0 5px -4px 0;
	fill: ${Gp.colors.brand.solid.denimMinus1};
}
`
				, rg = html`
<div class="root">
	<button id="fbpgbt" class="cbtn" @click=${e=>e.vm.openFeedbackForm()}>
		<svg-icon type=${Yp.MessageFill} size="14"></svg-icon>
		${e=>e.vm.feedbackString}
	</button>
</div>
`;
			let og = class extends w {
			}
			;
			__decorate([observable, __metadata("design:type", Object)], og.prototype, "vm", void 0),
			og = __decorate([customElement({
					name: "cib-serp-feedback",
					template: rg,
					styles: ig
			})], og);
			const sg = html`
<cib-serp-feedback :vm=${e=>e.vm.serpFeedback}></cib-serp-feedback>
`
				, ag = html`
<cib-background :vm=${e=>e.vm.background}></cib-background>
<cib-conversation :layout=${e=>e.layout} :vm=${e=>e.vm.conversation}>
	${when((e=>{
					var t, n;
					return (null !== (n = null === (t = e.firstTurnBotMessageNodes) || void 0 === t ? void 0 : t.length) && void 0 !== n ? n : 0) > 0
			}
			), html`
<cib-chat-turn :layout=${e=>e.layout}>
	<cib-message-group source="bot" :layout=${e=>e.layout}>
		<cib-message class="slotted-message" type="text" source="bot" serp-slot="none" :layout=${e=>e.layout}>
			<slot name="first-turn-bot-message"></slot>
		</cib-message>
	</cib-message-group>
</cib-chat-turn>
`)}
</cib-conversation>
<cib-action-bar autofocus :layout=${e=>e.layout} :vm=${e=>e.vm.actionBar}></cib-action-bar>
${when((e=>e.layout.productType !== Dd.Shoreline), sg)}
`
				, lg = html`
<cib-see-more-container :vm=${e=>e.vm.seeMoreContainer} :layout=${e=>e.layout}>
	<cib-slim-header :vm=${e=>e.vm.slimHeader} :layout=${e=>e.layout}>
		<cib-typing-indicator :vm=${e=>e.vm.typingIndicator} :layout=${e=>e.layout}></cib-typing-indicator>
	</cib-slim-header>
	<cib-conversation :layout=${e=>e.layout} :vm=${e=>e.vm.conversation}></cib-conversation>
</cib-see-more-container>
`
				, cg = html`
<cib-slim-header :vm=${e=>e.vm.slimHeader} :layout=${e=>e.layout}></cib-slim-header>
<cib-conversation :layout=${e=>e.layout} :vm=${e=>e.vm.conversation}></cib-conversation>
`
				, dg = html`
<div class="mobile-background" @click=${e=>e.handleBackgroundClick()}></div>
<cib-drawer :vm=${e=>e.vm.drawer}>
	<cib-conversation :layout=${e=>e.layout} :vm=${e=>e.vm.conversation}></cib-conversation>
	<cib-action-bar autofocus :layout=${e=>e.layout} :vm=${e=>e.vm.actionBar}></cib-action-bar>
</cib-drawer>
`
				, pg = html`
<template
	class="cib-serp-main"
	alignment=${e=>e.alignment}
	mode=${e=>e.vm.mode}
	@click=${e=>e.handleClick()}
	${children({
					property: "firstTurnBotMessageNodes",
					filter: node_observation_elements("[slot='first-turn-bot-message']")
			})}
>
	${when((e=>e.layout.isMobile), dg)}
	${when((e=>!e.layout.isMobile && (e.serpSlot === Xc.Pole || e.serpSlot === Xc.RightRail)), lg)}
	${when((e=>!e.layout.isMobile && e.serpSlot === Xc.Creator), cg)}
	${when((e=>!e.layout.isMobile && e.serpSlot === Xc.None), ag)}
	<cib-hover-card :layout=${e=>e.layout} :vm=${e=>e.vm.hoverCard}></cib-hover-card>
	<cib-hover :layout=${e=>e.layout} :vm=${e=>e.hoverVm}></cib-hover>
</template>
`;
			class LayoutContext {
					constructor() {
							this.serpSlot = Xc.None,
							this.alignment = Kc.Center,
							this.productType = Dd.Bing,
							this.isMobile = !1,
							this.isCachedResponse = !1,
							this.isSeeMoreCovering = !1,
							this.isSeeMoreExpanded = !1
					}
			}
			__decorate([observable, __metadata("design:type", String)], LayoutContext.prototype, "serpSlot", void 0),
			__decorate([observable, __metadata("design:type", String)], LayoutContext.prototype, "alignment", void 0),
			__decorate([observable, __metadata("design:type", String)], LayoutContext.prototype, "productType", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], LayoutContext.prototype, "isMobile", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], LayoutContext.prototype, "isCachedResponse", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], LayoutContext.prototype, "isSeeMoreCovering", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], LayoutContext.prototype, "isSeeMoreExpanded", void 0),
			__decorate([observable, __metadata("design:type", Object)], LayoutContext.prototype, "hoverVm", void 0);
			let ug = class extends w {
					constructor() {
							super(),
							this._layout = null,
							this.isCachedResponse = !1,
							this.isSeeMoreCovering = !1,
							this.isSeeMoreExpanded = !1,
							this.startTime = null,
							this.hasInteracted = !1,
							this.showSerpFeedback = !1,
							this.handleClick = ()=>{
									if (!this.hasInteracted && this.startTime) {
											const e = (new Date).getTime() - this.startTime;
											this.vm.telemetry.trackEvent("ClientInst", "FirstInteraction", {
													timeTaken: e.toString()
											}),
											this.hasInteracted = !0
									}
									return !0
							}
							,
							this.handleBackgroundClick = ()=>(this.vm.changeMode(Qc.OffStage),
							!0);
							const e = P.getOrCreateDOMContainer(document.body);
							this.app = e.get(Y),
							this.vm = this.app.get(kd),
							this.mode = Qc.getDefault(),
							this.alignment = Kc.Center,
							this.serpSlot = Xc.None,
							this.productType = Dd.Bing,
							this.isMobile = this.vm.isMobile,
							this.isCachedResponse = !1,
							this.isSeeMoreCovering = !1,
							this.isSeeMoreExpanded = !1,
							this.handleShowSerpFeedback(),
							this.hoverVm = new wd(this.app.get(Zc),this.app.get(qa),this.app.get(js))
					}
					get layout() {
							var e;
							return null !== (e = this._layout) && void 0 !== e || (this._layout = new LayoutContext),
							this._layout.hoverVm = this.hoverVm,
							this._layout
					}
					modeChanged(e, t) {
							this.vm.changeMode(this.mode)
					}
					alignmentChanged() {
							this.layout.alignment = this.alignment,
							this.serpSlot === Xc.None && (this.vm.alignment = this.alignment)
					}
					serpSlotChanged() {
							this.layout.serpSlot = this.serpSlot,
							this.vm.serpSlot = this.serpSlot
					}
					productTypeChanged() {
							this.layout.productType = this.productType,
							this.vm.productType = this.productType
					}
					isMobileChanged() {
							this.layout.isMobile = this.isMobile,
							this.vm.isMobile = this.isMobile
					}
					isCachedResponseChanged() {
							this.layout.isCachedResponse = this.isCachedResponse
					}
					isSeeMoreCoveringChanged() {
							this.layout.isSeeMoreCovering = this.isSeeMoreCovering
					}
					isSeeMoreExpandedChanged() {
							this.layout.isSeeMoreExpanded = this.isSeeMoreExpanded
					}
					connectedCallback() {
							super.connectedCallback(),
							this.startTime = (new Date).getTime(),
							this.layout.serpSlot === Xc.None && this.vm.mode === Qc.OffStage || this.vm.telemetry.trackEvent("SystemEvent", "ChatBotLoaded", {
									Namespace: Xc.toTelemetryNamespace(this.layout.serpSlot)
							})
					}
					handleShowSerpFeedback() {
							this.layout.serpSlot === Xc.None && (this.showSerpFeedback = !0)
					}
			}
			;
			var hg, mg, gg, _g;
			__decorate([attr, __metadata("design:type", String)], ug.prototype, "mode", void 0),
			__decorate([attr, __metadata("design:type", String)], ug.prototype, "alignment", void 0),
			__decorate([attr({
					attribute: "serp-slot"
			}), __metadata("design:type", String)], ug.prototype, "serpSlot", void 0),
			__decorate([attr({
					attribute: "product"
			}), __metadata("design:type", String)], ug.prototype, "productType", void 0),
			__decorate([attr({
					attribute: "mobile",
					mode: "boolean"
			}), __metadata("design:type", Boolean)], ug.prototype, "isMobile", void 0),
			__decorate([attr({
					attribute: "cached",
					mode: "boolean"
			}), __metadata("design:type", Boolean)], ug.prototype, "isCachedResponse", void 0),
			__decorate([attr({
					attribute: "see-more",
					mode: "boolean"
			}), __metadata("design:type", Boolean)], ug.prototype, "isSeeMoreCovering", void 0),
			__decorate([attr({
					attribute: "see-more",
					mode: "boolean"
			}), __metadata("design:type", Boolean)], ug.prototype, "isSeeMoreExpanded", void 0),
			__decorate([observable, __metadata("design:type", Boolean)], ug.prototype, "showSerpFeedback", void 0),
			__decorate([observable, __metadata("design:type", Array)], ug.prototype, "firstTurnBotMessageNodes", void 0),
			ug = __decorate([customElement({
					name: "cib-serp",
					template: pg,
					styles: zp
			}), __metadata("design:paramtypes", [])], ug);
			let fg = class CibSerpApi {
					constructor(e, t, n, i, r) {
							this.vm = n,
							hg.set(this, void 0),
							mg.set(this, void 0),
							gg.set(this, void 0),
							_g.set(this, void 0),
							__classPrivateFieldSet(this, hg, t, "f"),
							__classPrivateFieldSet(this, gg, e, "f"),
							__classPrivateFieldSet(this, _g, i, "f"),
							__classPrivateFieldSet(this, mg, r, "f")
					}
					static initialize() {
							CibSerpApi.isInitialized || (CibSerpApi.isInitialized = !0,
							CibSerpApi.configureDependencies())
					}
					static configureDependencies() {
							const e = registerServices();
							var t;
							(function(e) {
									e.addSingleton(Fc, qc),
									e.addSingleton(kd, Qd),
									e.addAlias(kd, Zc),
									e.addSingleton(jc, id),
									e.addSingleton(rd, od),
									e.addSingleton(ed, ud),
									e.addSingleton(hd, md),
									e.addSingleton(Jc, Td),
									e.addSingleton(Id, wd),
									e.addSingleton(td, mp),
									e.addSingleton(ad, gp),
									e.addSingleton(Md, Zd),
									e.addSingleton(Nd, Pd),
									e.addSingleton(Ld, Xd),
									e.addSingleton(ld, cd),
									e.addTransient(sd, hp),
									e.addTransient(Hc, Ed),
									e.addTransient(Ad, xd),
									e.addTransient(Uc, cp),
									e.addTransient(Gc, Od),
									e.addTransient(Bc, Cd)
							}
							)(e),
							t = e.get(CibSerpApi),
							window.CIB = t
					}
					get config() {
							return __classPrivateFieldGet(this, gg, "f")
					}
					get manager() {
							return __classPrivateFieldGet(this, _g, "f")
					}
					get onModeChanging() {
							return __classPrivateFieldGet(this, hg, "f").get(kd).onModeChanging
					}
					get onModeChanged() {
							return __classPrivateFieldGet(this, hg, "f").get(kd).onModeChanged
					}
					get onSerpSlotSuggestionInvoked() {
							return __classPrivateFieldGet(this, hg, "f").get(kd).onSerpSlotSuggestionInvoked
					}
					get onConversationRequestStateChange() {
							return __classPrivateFieldGet(this, hg, "f").get(Us).onPendingRequestStateChanged
					}
					get onStreamingComplete() {
							return __classPrivateFieldGet(this, hg, "f").get(Us).onStreamingComplete
					}
					get onResetConversation() {
							return __classPrivateFieldGet(this, hg, "f").get(Za).onResetConversationInvoked
					}
					get inputMethod() {
							return __classPrivateFieldGet(this, hg, "f").get(kd).actionBar.inputMethod
					}
					set inputMethod(e) {
							var t;
							null === (t = __classPrivateFieldGet(this, mg, "f")) || void 0 === t || t.trace("CibSerpApi", "inputMethod.set", null).write(),
							__classPrivateFieldGet(this, hg, "f").get(kd).actionBar.inputMethod = e
					}
					get onInputMethodChanged() {
							return __classPrivateFieldGet(this, hg, "f").get(kd).actionBar.onInputMethodChanged
					}
					showConversation() {
							var e;
							null === (e = __classPrivateFieldGet(this, mg, "f")) || void 0 === e || e.trace("CibSerpApi", "showConversation", null).write(),
							__classPrivateFieldGet(this, hg, "f").get(kd).changeMode(Qc.getInverse())
					}
					hideConversation() {
							var e;
							null === (e = __classPrivateFieldGet(this, mg, "f")) || void 0 === e || e.trace("CibSerpApi", "hideConversation", null).write(),
							__classPrivateFieldGet(this, hg, "f").get(kd).changeMode(Qc.getDefault())
					}
					processCachedResponse(e) {
							var t;
							null === (t = __classPrivateFieldGet(this, mg, "f")) || void 0 === t || t.trace("CibSerpApi", "processCachedResponse", null, e).write(),
							e.type = fe.SerpCachedResponse,
							__classPrivateFieldGet(this, hg, "f").get(Us).loadCachedResponse(e)
					}
					addMessage(e, t=Ee.Chat) {
							var n;
							null === (n = __classPrivateFieldGet(this, mg, "f")) || void 0 === n || n.trace("CibSerpApi", "addMessage", e).write(),
							__classPrivateFieldGet(this, hg, "f").get(Za).sendMessage(e, !1, t)
					}
					sendSearchQuery(e) {
							var t;
							null === (t = __classPrivateFieldGet(this, mg, "f")) || void 0 === t || t.trace("CibSerpApi", "sendSearchQuery", e).write(),
							__classPrivateFieldGet(this, hg, "f").get(Za).sendSearchQuery(e)
					}
					registerContext(e) {
							var t;
							null === (t = __classPrivateFieldGet(this, mg, "f")) || void 0 === t || t.trace("CibSerpApi", "registerContext", "context:", e).write(),
							__classPrivateFieldGet(this, hg, "f").get(Us).registerContext(e)
					}
					beginConversation() {
							queueMicrotask((async()=>{
									var e;
									try {
											await __classPrivateFieldGet(this, hg, "f").get(Za).beginConversationAsync()
									} catch (t) {
											const n = t instanceof Error ? t : "An error occurred.";
											null === (e = __classPrivateFieldGet(this, mg, "f")) || void 0 === e || e.error("CibSerpApi", "beginConversation", n).write()
									}
							}
							))
					}
					loadConversation(e) {
							e && queueMicrotask((async()=>{
									var t;
									try {
											await __classPrivateFieldGet(this, hg, "f").get(Us).loadConversationAsync(e)
									} catch (e) {
											const n = e instanceof Error ? e : "An error occurred.";
											null === (t = __classPrivateFieldGet(this, mg, "f")) || void 0 === t || t.error("CibSerpApi", "loadConversation", n).write()
									}
							}
							))
					}
					loadSharedConversation(e) {
							e && queueMicrotask((async()=>{
									var t;
									try {
											await __classPrivateFieldGet(this, hg, "f").get(Us).loadSharedMessagesAsync(e)
									} catch (e) {
											const n = e instanceof Error ? e : "An error occurred.";
											null === (t = __classPrivateFieldGet(this, mg, "f")) || void 0 === t || t.error("CibSerpApi", "loadSharedConversation", n).write()
									}
							}
							))
					}
					triggerMic(e=Yc.External) {
							var t;
							this.config.features.enableSpeechInput && (null === (t = __classPrivateFieldGet(this, mg, "f")) || void 0 === t || t.trace("CibSerpApi", "triggerMic", null).write(),
							queueMicrotask((async()=>{
									var t;
									try {
											await __classPrivateFieldGet(this, hg, "f").get(kd).actionBar.handleSpeechChangeAsync(e)
									} catch (e) {
											const n = e instanceof Error ? e : "An error occurred.";
											null === (t = __classPrivateFieldGet(this, mg, "f")) || void 0 === t || t.error("CibSerpApi", "triggerMic", n).write()
									}
							}
							)))
					}
					toggleSpeechEnabled() {
							var e;
							null === (e = __classPrivateFieldGet(this, mg, "f")) || void 0 === e || e.trace("CibSerpApi", "toggleSpeechEnabled", null).write(),
							this.inputMethod = (this.inputMethod,
							Ce.Keyboard,
							Ce.Speech)
					}
					insertAt(e) {
							if (!e)
									return null;
							const t = e.appendChild(new ug);
							return __classPrivateFieldGet(this, gg, "f").sydney.shareId && this.loadSharedConversation(__classPrivateFieldGet(this, gg, "f").sydney.shareId),
							t
					}
					toggleWelcomeScreen(e) {
							return __classPrivateFieldGet(this, hg, "f").get(ad).toggleWelcomeScreen(e)
					}
					activateDesignTokens(e) {
							const t = document.createElement("div");
							setTimeout((()=>{
									Fp.activateDefaults(t);
									const e = "cib-design-tokens";
									let n = document.getElementById(e);
									n && n instanceof HTMLStyleElement || (n = document.createElement("style"),
									n.id = e,
									document.head.appendChild(n)),
									vc((()=>{
											n && (n.innerHTML = `body {${t.style.cssText}}`)
									}
									))
							}
							), 20)
					}
			}
			;
			hg = new WeakMap,
			mg = new WeakMap,
			gg = new WeakMap,
			_g = new WeakMap,
			fg.isInitialized = !1,
			fg = __decorate([__param(0, Yo), __param(1, Y), __param(2, kd), __param(3, Za), __param(4, F(Vs)), __metadata("design:paramtypes", [Object, Object, Object, Object, Object])], fg);
			const yg = {
					buildTimestamp: "Fri, 17 Feb 2023 07:30:17 GMT",
					version: "1.64.4-hotfix",
					commit: "c6e56d0d9ce8b45bcffa24ca7639091430dcf69c"
			};
			fg.initialize(),
			CIB && (CIB.version = yg),
			function(e) {
					const t = new ArgsParser_ArgsParser(Mc).parseArgs(e);
					(function(e) {
							if (e.shareId) {
									CIB.config.sydney.shareId = e.shareId
							}
							if (e.showconv) {
									CIB.config.bing.shouldShowConversation = "1" === e.showconv
							}
					}
					)(t)
			}(window.location.search)
	}
	)()
}
)();
